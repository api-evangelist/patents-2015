---

title: Information management of data associated with multiple cloud services
abstract: A method and system for providing information management of data from hosted services receives information management policies for a hosted account of a hosted service, requests data associated with the hosted account from the hosted service, receives data associated with the hosted account from the hosted service, and provides a preview version of the received data to a computing device. In some examples, the system indexes the received data to associate the received data with a user of an information management system, and/or provides index information related to the received data to the computing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09213848&OS=09213848&RS=09213848
owner: Commvault Systems, Inc.
number: 09213848
owner_city: Tinton Falls
owner_country: US
publication_date: 20150105
---
The present application is a continuation of U.S. patent application Ser. No. 13 788 730 filed Mar. 7 2013 which claims priority to and the benefit of U.S. Provisional Application No. 61 618 538 filed Mar. 30 2012 each of which is hereby incorporated herein by reference in its entirety.

Increasingly people generate data and metadata across multiple computing devices and multiple hosted services. For example during the course of a single day a person may use a laptop computer desktop computer tablet computer and smartphone in order to view and edit files e mails or other data objects. As another example a person may use hosted solutions such as Facebook Gmail Google Docs and salesforce.com to communicate with others and conduct work. A person may not be able to access the files and information they need readily from a single interface since the files are scattered across multiple computing devices and hosted sites. Moreover conventional information management systems are often focused on organizing protecting and recovering the data from fixed computing devices such as servers or desktop computers. As a result a person s hosted data and mobile data may be scattered outside of the purview of conventional information management systems and that data will therefore not be backed up or otherwise actively managed. Thus in the event that a mobile device is lost or broken or a hosted service has a service disruption there is a risk that a person s critical data may be lost without any way to recover it.

The need exists for systems and methods that overcome the above problems as well as systems and methods that provide additional benefits. Overall the examples herein of some prior or related systems and methods and their associated limitations are intended to be illustrative and not exclusive. Other limitations of existing or prior systems and methods will become apparent to those of skill in the art upon reading the following Detailed Description.

The headings provided herein are for convenience only and do not necessarily affect the scope or meaning of the disclosure.

A software firmware and or hardware system for comprehensive information management is disclosed. The system helps collect manage and distribute in a unified fashion data and metadata from numerous sources including data and metadata originating from hosted services and mobile devices. The system can help a user obtain a unified view of her data across numerous devices and also keep data synchronized across numerous computing devices associated with the user. The system permits users to define simple or complex data distribution policies to help drive data distribution and synchronization across the user s devices. The system allows a user on a mobile device to perform live browsing of the files on another computing device that is associated with the user. The system also permits a user of a mobile device or other limited feature device to execute full featured applications installed on a remote computing device e.g. a desktop or laptop device and to interact with the full featured application via the input output hardware of the limited feature device.

The system offers numerous benefits. First from a single interface users can browse and search for files from practically any of their computing devices or hosted services and access those files. Second the system provides a closed corporate collaboration environment where data objects are exchanged and synchronized across multiple devices but using the resources of a private information management system not an untrusted or untried third party service. As a result copies of an organization s data objects are not unnecessarily exposed to others because the copies do not need to be stored or controlled by third parties. Third the system permits an organization to better comply with data retention regulations and other regulations by capturing and managing practically all of a user s data not just the user s data that originates from fixed computing devices. Fourth the system can permit an organization to better respond to unexpected data losses such as the loss of a mobile device or a service outage by a hosted service because the system is actively managing copies of mobile data and hosted data. Other benefits are of course possible.

Various examples of the invention will now be described. The following description provides specific details for a thorough understanding and enabling description of these examples. One skilled in the relevant art will understand however that the invention may be practiced without many of these details. Likewise one skilled in the relevant art will also understand that the invention may include many other obvious features not described in detail herein. Additionally some well known structures or functions may not be shown or described in detail below so as to avoid unnecessarily obscuring the relevant description.

The terminology used below is to be interpreted in its broadest reasonable manner even though it is being used in conjunction with a detailed description of certain specific examples of the invention. Indeed certain terms may even be emphasized below however any terminology intended to be interpreted in any restricted manner will be overtly and specifically defined as such in this Detailed Description section.

Aspects of the technologies described herein may be practiced in an information management environment which will now be described while referencing . As shown in the environment includes multiple computing devices that execute numerous software applications to facilitate the operations of an organization or multiple affiliated organizations such as a household corporation or other business entity a non profit organization an educational institution or a governmental agency. The computing devices may include one or more servers such as mail servers file servers database servers print servers and web servers personal computers workstations or other types of fixed computing systems such as mainframe computers and minicomputers not shown . The servers may include network attached storage NAS filers.

The environment may include virtualized computing resources such as a virtual machine provided to the organization by a third party cloud service vendor or a virtual machine running on a virtual machine host operated by the organization. For example the organization may use one virtual machine A as a database server and another virtual machine B as a mail server. The environment may also include mobile or portable computing devices such as laptops tablet computers personal data assistants mobile phones such as smartphones and other mobile or portable computing devices such as embedded computers set top boxes vehicle mounted devices wearable computers etc.

Of course other types of computing devices may form part of the environment . As part of their function each of these computing devices creates accesses modifies writes and otherwise uses production copies of data and metadata that are typically stored in a persistent storage medium having fast I O times. For example each computing device may regularly access and modify data files and metadata stored on semiconductor memory a local disk drive or a network attached storage device. Each of these computing devices may access data and metadata via a file system supported by an operating system of the computing device.

The environment may also include hosted services that provide various online services to the organization or its constituent members e.g. the organization s departments employees independent contractors etc. such as social networking services e.g. Facebook Twitter Pinterest hosted email services e.g. Gmail Yahoo Mail Hotmail or hosted productivity applications or other hosted applications e.g. Microsoft Office 365 Google Docs Salesforce.com . Hosted services may include software as a service SaaS platform as a service PaaS application service providers ASPS cloud services and all manner of delivering computing or functionality via a network. As it provides services to users each hosted service may generate additional hosted data and metadata that is associated with each user. For example Facebook may generate and store photos wall posts notes videos and other content that are associated with a particular Facebook user s account.

The organization directly or indirectly employs an information management system to protect and manage the data and metadata used by the various computing devices in the environment and the data and metadata that is maintained by hosted services on behalf of users associated with the organization. One example of an information management system is the CommVault Simpana system available from CommVault Systems Inc. of Oceanport N.J. The information management system creates and manages non production copies of the data and metadata to meet information management goals such as permitting the organization to restore data metadata or both data and metadata if an original copy of the data metadata is lost e.g. by deletion corruption or disaster or because of a service interruption by a hosted service allowing data to be recovered from a previous time complying with regulatory data retention and electronic discovery e discovery requirements reducing the amount of data storage media used facilitating data organization and search improving user access to data files across multiple computing devices and or hosted services and implementing information lifecycle management ILM or other data retention policies for the organization. The information management system may create the additional non production copies of the data and metadata on any suitable non production storage medium such as magnetic disks magnetic tapes other storage media such as solid state storage devices or optical disks or on cloud data storage sites e.g. those operated by third party vendors . Further details on the information management system may be found in the assignee s U.S. patent application Ser. No. 12 751 850 filed Mar. 31 2010 entitled DATA OBJECT STORE AND SERVER FOR A CLOUD STORAGE ENVIRONMENT INCLUDING DATA DEDUPLICATION AND DATA MANAGEMENT ACROSS MULTIPLE CLOUD STORAGE SITES now U.S. Patent Publication Number 2010 0332456 which is hereby incorporated by reference herein in its entirety.

The information management system accesses or receives copies of the various production copies of data objects and metadata and via an information management operation such as a backup operation archive operation or snapshot operation creates non production copies of these data objects and metadata often stored in one or more non production storage mediums different than the production storage medium where the production copies of the data objects and metadata reside. A non production copy of a data object represents the production data object and its associated metadata at a particular point in time non production objects A C . Since a production copy of a data object or metadata changes over time as it is modified by an application hosted service or the operating system the information management system may create and manage multiple non production copies of a particular data object or metadata each representing the state of the production data object or metadata at a particular point in time. Moreover since a production copy of a data object may eventually be deleted from the production data storage medium and the file system from which it originated the information management system may continue to manage point in time representations of that data object even though a production copy of the data object itself no longer exists.

For virtualized computing devices such as virtual machines the operating system and applications A D may be running on top of virtualization software and the production data storage medium may be a virtual disk created on a physical medium such as a physical disk. The information management system may create non production copies of the discrete data objects stored in a virtual disk file e.g. documents email mailboxes and spreadsheets and or non production copies of the entire virtual disk file itself e.g. a non production copy of an entire .vmdk file .

Each non production object A C may contain copies of or otherwise represent more than one production data object. For example non production object A represents three separate production data objects C and C represented as C and 245 respectively . Moreover as indicated by the prime mark a non production object may store a representation of a production data object or metadata differently than the original format of the data object or metadata e.g. in a compressed encrypted deduplicated or otherwise optimized format. Although shows that a single production data object e.g. C and its associated data object metadata e.g. Meta11 are represented by the contents of only a single non production object e.g. A the entire contents of a single production data object and or its metadata at a particular point in time may instead span across numerous non production objects. Also a single non production object may contain copies of or otherwise represent production data objects that originated from different computing devices.

Non production copies include backup copies archive copies and snapshot copies. Backup copies are generally used for shorter term data protection and restoration purposes and may be in a native application format or in a non native format e.g. compressed encrypted deduplicated and or otherwise modified from the original application format . Archive copies are generally used for long term data storage purposes and may be compressed encrypted deduplicated and or otherwise modified from the original application format. In some examples when an archive copy of a data object is made a logical reference or stub may be used to replace the production copy of the data object in the production storage medium . In such examples the stub may point to or otherwise reference the archive copy of the data object stored in the non production storage medium so that the information management system can retrieve the archive copy if needed. The stub may also include some metadata associated with the data object so that a file system and or application can provide some information about the data object and or a limited functionality version e.g. a preview of the data object. A snapshot copy represents a data object at a particular point in time. A snapshot copy can be made quickly and without significantly impacting production computing resources because large amounts of data need not be copied or moved. A snapshot copy may include a set of pointers derived from the file system or an application where each pointer points to a respective stored data block so collectively the set of pointers reflect the storage location and state of the data object at a particular point in time when the snapshot copy was created. In copy on write if a block of data is to be deleted or changed the snapshot process writes the block to a particular data storage location and the pointer for that block is now directed to that particular location. The set of pointers and or the set of blocks pointed to by a snapshot may be stored within the production data storage medium .

Non production copies of a data object or metadata may be distinguished from a production copy of a data object or metadata in several ways. First a non production copy of a data object is created to meet the different information management goals described above and is not directly used or modified by applications A D hosted services or the operating system . Second a non production copy of a data object is stored as one or more non production objects that may have a format different from the native application format of the production copy of the data object and thus often cannot be directly used by the native application or a hosted service without first being modified. Third non production objects are often stored on a non production storage medium that is inaccessible to the applications A D running on computing devices and hosted services . Also some non production copies may be offline copies in that they are not readily available e.g. not mounted tape or disk. Offline copies include copies of data that the information management system can access without any human intervention e.g. tapes within an automated tape library but not yet mounted in a drive and copies that the information management system can access only with at least some human intervention e.g. tapes located at an offsite storage site .

The information management system also generates information management data such as indexing information that permit the information management system to perform its various information management tasks. As shown in a computing device may include one or more data management agents that provide client side functions for the information management system.

The storage manager may be a software module or other application that coordinates and controls information management operations performed by one or more information management cells to protect and control copies of non production data objects and metadata. As shown by the dashed lines and the storage manager may communicate with some or all elements of the information management cell such as the media agents and computing devices to initiate and manage backup operations snapshot operations archive operations data replication operations data migrations data distributions data recovery and other information management operations. The storage manager may control additional information management operations including ILM deduplication content indexing data classification data mining or searching e discovery management collaborative searching encryption and compression. Alternatively or additionally a storage manager may control the creation and management of disaster recovery copies which are often created as secondary high availability disk copies using auxiliary copy or replication technologies.

The storage manager may include a jobs agent a management agent a network agent and an interface agent all of which may be implemented as interconnected software modules or application programs. The jobs agent monitors the status of information management operations previously performed currently being performed or scheduled to be performed by the information management cell . The management agent provides an interface that allows various management agents in multiple information management cells or in a global storage manager to communicate with one another. This allows each information management cell to exchange status information routing information capacity and utilization information and information management operation instructions or policies with other cells. In general the network agent provides the storage manager with the ability to communicate with other components within the information management cell and the larger information management system e.g. via proprietary or non proprietary network protocols and application programming interfaces APIs including HTTP HTTPS FTP REST virtualization software APIs cloud service provider APIs hosted service provider APIs . The interface agent includes information processing and display software such as a graphical user interface GUI an API or other interactive interface through which users and system processes can retrieve information about the status of information management operations or issue instructions to the information management cell and its constituent components. The storage manager may also track information that permits it to select designate or otherwise identify content indices deduplication databases or similar databases within its information management cell or another cell to be searched in response to certain queries.

The storage manager may also maintain information management data such as a database of management data and policies. The database may include a management index that stores logical associations between components of the system user preferences user profiles that among other things map particular information management users to computing devices or hosted services management tasks or other useful data. The database may also include various information management policies which are generally data structures or other information sources that each includes a set of criteria and rules associated with performing an information management operation. The criteria may be used to determine which rules apply to a particular data object system component or information management operation an may include 

As noted above each computing device may include one or more data management agents . Each data management agent is a software module or component that helps govern communications with other system components. For example the data management agent receives commands from the storage manager and sends to and receives from media agents copies of data objects metadata and other payload as indicated by the heavy arrows . Each data management agent accesses data and or metadata stored in a production data storage medium and arranges or packs the data and metadata in a certain format e.g. backup or archive format before it is transferred to another component. Each data management agent can also restore a production copy of a data object or metadata in a production data storage medium from a non production copy. A data management agent may perform some functions provided by a media agent which are described further herein such as compression encryption or deduplication. Each data management agent may be specialized for a particular application e.g. a specified data management agent customized to handle data generated or used by Exchange by Microsoft Corp. . Alternatively or additionally a more generic data management agent may handle data generated or used by two or more applications.

Each computing device may also include a data distribution and live browsing client module herein distribution client module . The distribution client module is responsible for inter alia associating mobile devices and or hosted service accounts with users of the information management system setting information management policies for mobile and other computing devices pushing data objects to a distribution module for distribution to other computing devices providing unified access to a user s data via an interface and providing live browsing features. The various functions of the distribution client module are described in greater detail herein.

A media agent which may be implemented as a software module conveys data as directed by the storage manager between a computing device or hosted service and one or more non production storage mediums . Each media agent may control one or more intermediary storage devices such as a cloud server or a tape or magnetic disk library management system to read write or otherwise manipulate data stored in a non production storage medium . Each media agent may be considered to be associated with a storage device and its related non production storage media if that media agent is capable of routing data to and storing data in the storage media managed by the particular storage device. A media agent may communicate with computing devices hosted services storage devices A D and the storage manager via any suitable communications path including SCSI a Storage Area Network SAN a Fibre Channel communications link or a wired wireless or partially wired wireless computer or telecommunications network including the Internet.

To perform its functions the media agent may include a media file system module a data classification module a content indexing module a deduplication module an encryption module a compression module a network module a distribution module and a media agent database . The media file system module is responsible for reading writing archiving copying migrating restoring accessing moving sparsifying deleting sanitizing destroying or otherwise performing file system operations on various non production storage devices of disparate types. The media file system module may also instruct the storage device to use a robotic arm or other retrieval means to load or eject certain storage media such as a tape.

The network module permits the media agent to communicate with other components within the system and hosted services via one or more proprietary and or non proprietary network protocols or APIs including cloud service provider APIs virtual machine management APIs and hosted service provider APIs . The deduplication module performs deduplication of data objects and or data blocks to reduce data redundancy in the cell. The deduplication module may generate and store data structures to manage deduplicated data objects such as deduplication tables in the media agent database . The encryption module performs encryption of data objects data blocks or non production objects to ensure data security in the cell. The compression module performs compression of data objects data blocks or non production objects to reduce the data capacity needed in the cell.

The content indexing module analyzes the contents of production copies or non production copies of data objects and or their associated metadata and catalogues the results of this analysis along with the storage locations of or references to the production or non production copies in a content index stored within a media agent database . The results may also be stored elsewhere in the system e.g. in the storage manager along with a non production copy of the data objects and or an index cache. Such index data provides the media agent or another device with an efficient mechanism for locating production copies and or non production copies of data objects that match particular criteria. The index data or other analyses of data objects or metadata may also be used by the data classification module to associate data objects with classification identifiers such as classification tags in the media agent database or other indices to facilitate information management policies and searches of stored data objects.

The distribution module may be a set of instructions that coordinates the distribution of data objects and indices of data objects. The distribution may occur from one computing device to another computing device and or from hosted services to computing devices . As a first example the distribution module may collect and manage data and metadata from hosted services or mobile devices . As another example the distribution module may synchronize data files or other data objects that are modified on one computing device so that the same modified files or objects are available on another computing device. As yet another example the distribution module may distribute indices of data objects that originated from multiple computing devices and or hosted services so a user can access all of their data objects through a unified user interface or a native application on their computing device. The distribution module may also initiate live browse sessions to permit communications between different computing devices so that the devices can interchange data and metadata or so the devices can provide computing resources such as applications to each other. The functions performed by the distribution module are described in greater detail herein.

To provide comprehensive management of all of an organization s data the information management system or IMS may collect and manage hosted data associated with individual users of the IMS such as individual employees or members of the organization that operate or utilize the IMS. shows a process for collecting and managing hosted data in an information management system. The process may be performed by the distribution module or another system component. The process begins at block where the distribution module receives authentication information and information management policies for the hosted services accounts or simply hosted accounts associated with a user of the information management system. For example the distribution module may receive an indication that the distribution module should periodically collect copies of the data and metadata associated with the user s hosted accounts on social networking sites e.g. Facebook Foursquare Twitter hosted email services e.g. Gmail Yahoo mail Hotmail hosted applications e.g. Office 365 Google Documents and Salesforce or other hosted services.

The interface also includes several selection boxes or similar elements to permit the user to identify the hosted accounts the user has. For illustrative purposes the interface shows only the hosted services Facebook Flickr LinkedIn Twitter Gmail Dropbox and Box.net. However as indicated by the services selection field the information management system may also support numerous other hosted services including practically any hosted service that generates production data and metadata for a user and provides APIs or other interfaces that permit the distribution module to access the user s data and metadata. For each selected service the interface provides username and password fields and where the user can enter hosted account authentication information or credentials to permit the IMS to access the user s data and metadata hosted on the service.

For each selected service the interface also includes a policy selection dropdown menu or similar selection means so that the user can associate the selected service with a particular information management policy for collecting and managing the service s hosted data and metadata. A policy may include any of the criteria and rules described above in connection with the discussion of information management policies generally. The selected policy may specify how frequently the distribution module should collect hosted data from the service the type or other characteristics of hosted data that the distribution module should collect e.g. all data versus photos versus documents etc. and or the types of information management operations that the IMS should perform on collected hosted data e.g. deduplication content indexing data classification archiving back up operations etc. . The selected policy may also specify where or how non production copies of the hosted data should be stored. The interface can include options for all of these criteria and rules as well as other criteria and rules.

As shown with element to simplify the user experience the interface may provide a suggested default or mandatory policy e.g. FB default policy for each service e.g. all data content is collected twice a day . For each selected service the interface may also include an alias field where a user can provide a descriptive alias for the hosted account to permit the user and the IMS to readily identify the hosted account as a data source for the user.

The interface may be presented to a user via a web browser e.g. as a web portal or may be presented to a user via a mobile application or other application installed on the user s computing device such as a mobile device. For example the interface may be provided by the same application used to produce the interface which is described further herein. In examples where the interface is presented via a mobile application some or all of the entry fields may be auto populated by the application. For example the application producing interface may detect other applications installed on the mobile device that are associated with hosted services or local data related to these other applications. For example the application used to produce interface may detect that a user s mobile device has a Facebook application installed and may therefore automatically select Facebook. 

Although not shown in it should be noted that the information management system permits administrators of the information management system to define or modify information management policies for the hosted data of other users including policies that prohibit the collection and management of certain hosted data. For example an IMS administrator may create a system wide policy that specifies that photos or videos that originate from any employee s Facebook hosted account cannot be collected. The IMS may disregard or override any information management policies set by an individual user to the extent that those individual rules are contrary to an administrator defined policy.

Returning to the process of at block the distribution module associates the hosted account information received at block with the IMS user. For example in an IMS user profile data structure the distribution module may associate the IMS user identified by fields and with the hosted services aliases authentication information and policies received at block .

At block the distribution module sets or adjusts information management policies to govern the collection and management of the hosted data associated with the user. For example in accordance with the user s policy preferences that were received at block and any administrator defined policies for each hosted service selected the distribution module may set a policy specifying which of the user s hosted data should be collected from the service and the schedule for collecting the hosted data. Continuing the previous example the distribution module may set a policy to collect all of the user jane65 s data and metadata from her Facebook Jane account twice a day.

At block the distribution module collects hosted data and metadata in accordance with the applicable information management policies that were set at block . To do so the distribution module may utilize general or service specific APIs to request any new data or metadata associated with a user s hosted account on the prescribed schedule. As part of its request the distribution module may provide the authentication or credential information e.g. username password or other credentials that it received at block in order to gain access to the user s hosted data and metadata.

The process ends at block where the distribution module manages collected hosted data in accordance with applicable information management policies. For example the distribution module may perform deduplication content indexing data classification and or archiving create additional non production copies e.g. backup copies or archive copies restore copies of the data and metadata to a production location or perform information lifecycle management of the hosted data in accordance with the applicable information management policies set at block .

In some examples the distribution module may restore or expose hosted data at a new location that is different from its original hosted location so that an organization can interact with the data in a different fashion. For example the distribution module may restore IMAP data that was generated by a first hosted email service e.g. Gmail so that it is accessible via a second hosted email service e.g. Hotmail or a local email client e.g. Outlook . As another example the distribution module may restore hosted data to an organization s network attached storage filer. In such an example data that was previously accessible only via a service specific API of a hosted service would now be accessible to the organization via Network File System or Common Internet File System protocols.

To provide comprehensive management of all of an organization s data the information management system may also collect and manage data and metadata generated by the mobile devices owned or used by individual users of the IMS such as individual employees or members of the organization that operates or utilizes the IMS. For example the IMS may collect and manage all employees data and metadata generated from smartphones tablet computers laptops and or other mobile devices which may be referred to herein simply as mobile data . is a flow chart that illustrates a process for sending mobile data to an information management system that may be performed at a mobile device e.g. by the distribution client module . In some examples before the process the distribution client module and accompanying data management agents are downloaded and installed on a user s mobile device as a mobile application e.g. via a company s intranet via an app store or via another distribution channel .

The process begins at block where the distribution client module receives IMS authentication information and management policies for the mobile data from a mobile device. illustrates one example of a graphical user interface that the distribution client module may provide on the mobile device in order to receive authentication information and management policies. As shown the interface may include IMS username and password fields and so that the user of the mobile device can provide authentication information or credentials that identify the person as a registered user of the information management system e.g. as IMS user jane65 . Although not shown the interface may also include a field to permit the IMS user to provide an identifier associated with the particular IMS she is associated with. The interface also includes a device alias field whereby a user can provide a descriptive alias for the mobile device that permits the user and the IMS to readily identify the mobile device as a data source for the user.

The interface includes several selection boxes or similar elements to permit the user to identify what types of mobile data from the mobile device the user wants the IMS to collect and manage. For illustrative purposes the interface shows only the data types of pictures documents emails applications and application data. However as indicated by the selection field the information management system may also support the collection and management of numerous other types of mobile data. Moreover in some examples the interface permits a user to define more granular criteria for the mobile data that should be collected and managed by the IMS. For example the interface might permit a user to define which particular applications and application data are collected and managed and or might permit the user to define other selection criteria such as file size file extension or particular source directory folders on a mobile device .

The interface also includes policy selection menus or similar selection means so that the user can associate each selected data type or all data types with a particular information management policy for collecting managing or distributing the selected type of data. A selected policy may include any of the criteria and rules described above in connection with the discussion of information management policies generally. A selected policy may specify the frequency with which the distribution client module collects data from the mobile device the type of network connectivity that can or cannot be used for data collection or distribution e.g. a WiFi connection or a domestic cellular network a specific blacklist of network access points or IP addresses that cannot be used for data collection or distribution a specific whitelist of network access points or IP addresses that may be used for data collection or distribution and operating conditions such as battery life that must be satisfied during data collection or distribution. The policy may also specify that certain data objects cannot be opened on the mobile device unless the mobile device is within a certain IP address range or connected via a specific network. The policy may specify particular directories on the mobile device file system for which data should be collected and managed. The policy selected may also specify the types of information management operations that should be performed on the mobile data after it is collected e.g. deduplication content indexing data classification archiving etc. . The selected policy may also specify where or how non production copies of the mobile data should be stored. As shown with element to simplify the user experience the interface may provide a suggested default or mandatory policy e.g. a Default policy where data is collected once a day and only when the mobile device has a WiFi connection . To illustrate the use of the interface in the example shown in the IMS user jane65 has opted to have the pictures documents applications and application data on her mobile device sent to the IMS once a day when there is a WiFi connection available.

Although not shown in it should be noted that the information management system permits administrators of the information management system to define or modify information management policies for the mobile data of other users including policies that prohibit the collection and management of certain mobile data. For example an IMS administrator may create a system wide policy that specifies that photos that originate from any employee s mobile device cannot be collected. As another example an IMS administrator may set a policy that prohibits employees from connecting a mobile device to the IMS unless the IMS administrator has already added an identifier for the mobile device e.g. an IMSI or IMEI to a system wide whitelist of authorized devices. The IMS may disregard any information management policies set by an individual user to the extent those individual rules are contrary to an administrator defined policy.

Returning to at block the distribution client module associates the mobile device with the user. For example the distribution client module may send identifying information to the distribution module such as the IMS user authentication information obtained at block e.g. jane65 and password or other credentials the alias given to the mobile device and or identifiers for the mobile device e.g. hardware software or subscriber identifiers associated with the mobile device such as an international mobile equipment identity IMEI international mobile subscriber identity IMSI and or MAC address . In response in an IMS user profile data structure the distribution module may associate the identified IMS user with the device alias and other identifiers. The distribution module may also provide the distribution client module with an indication of a particular distribution module that will service the mobile device during data collection or distribution.

At block the distribution client module sets or adjusts information management policies to govern the collection and management of the mobile data from the mobile device. For example in accordance with the user s policy preferences that were received at block for each data type selected the distribution client module may set a policy specifying the schedule and other rules for sending mobile data to an information management system. Continuing the previous example the distribution client module may set a policy to collect all of jane65 s pictures documents applications and application data from the tablet named Janes tablet once a day when a WiFi connection is available. The distribution client module may also send the policies to other components such as a storage manager or the distribution module .

Next at block the distribution client module sends mobile data from the mobile device to an IMS in accordance with the applicable information management policies. The mobile data may be sent opportunistically e.g. when a high speed or low cost network connection such as WiFi is available. The distribution client module may instruct data management agents installed on the mobile device to send data both in 1 an initial operation so the IMS can collect existing data objects from the mobile device and 2 in subsequent scheduled operations so the IMS can collect new or modified data objects from the mobile device. Returning to the previous example after the user preferences have been received at block if a WiFi connection is available the distribution client module may initially instruct various installed data management agents to package up and send any of jane65 s existing pictures documents applications and application data from the tablet named Janes tablet to a distribution module . From thereon once a day when a WiFi connection is available on the Janes Tablet device the distribution client module may instruct various installed data management agents to package up and send any changes to jane65 s pictures documents applications and application data to the distribution module . After block the process ends.

Although the process was described as being performed by a distribution client module on the mobile device whose data is being sent some or all of the process may be performed by another computing device that acts as an intermediary. For example a mobile device may tether physically or wireless to a laptop or desktop computer and a distribution client module on the laptop or desktop computer may perform some of the steps in the process .

In addition to collecting and managing a user s data from hosted services and or mobile devices the information management system may also distribute a user s data and or indices of a user s data so that the user can obtain a unified view of all of her data across different hosted services and different computing devices and access all of this data readily. For example the information management system may permit a user to view all of her mobile data hosted data and other data in a manner similar to that shown in which is discussed in greater detail herein.

Before data is distributed the distribution module may perform various management tasks to facilitate subsequent distribution. is a flow chart that illustrates a process for managing a user s data that may be performed by a distribution module . The process begins at block where the distribution module receives information management policies for a user s data specifically distribution policies that specify how a user s data should be distributed to different computing devices and or portals.

As one example as shown the interface may permit a user to specify a source location a file type and a modification date in order to define the set of data objects that should be distributed under the policy. A source location may be defined by an alias for a hosted account an alias or hostname for a computing device including mobile devices and or a directory path within a hosted account or computing device. Of course other types of criteria may be used to define the set of data objects that should be distributed including without limitation file size access control information data classification tags content information e.g. keywords and modification or creation dates.

The interface also includes input fields and other types of menus that permit a user to select one or more destination locations to where the defined set of data objects should be distributed. The destination locations may include specific computing devices a class of computing devices e.g. all computing devices associated with a particular user all computing devices having certain characteristics such as having more than a threshold capacity of disk space or a particular application installed and or a directory within a specific computing device or within a class of computing devices. By permitting a user to define a destination directory a user can merge data from multiple sources into a specific folder on a destination device. In some examples a user can omit a source directory path and destination directory path from the criteria so that all data from a source device e.g. a smartphone is synchronized with all of the data at a destination device e.g. a tablet .

Although not shown a distribution policy may also specify whether a preview version or a copy of a version of an implicated data object should be automatically pushed by the distribution module to the destination location even if it doesn t receive an explicit request for it from a destination computing device. The policy may also specify triggers for pushing unsolicited previews or copies. For example a distribution policy may specify that a preview version or copy of an implicated data object should be pushed immediately when the preview or copy becomes available or at the first opportunity thereafter so that the destination device has a cached version available.

A synchronization policy field permits a user to select or define whether and how data should be synchronized across the source and destination computing devices and may include pre defined synchronization policies and or a menu option to build a custom synchronization policy. One example of a synchronization policy is a one way synchronization policy push only where only changes made to a data object at a source location are pushed or propagated to a destination location but changes made at a destination location are not propagated back to the source location. Another example is full two way synchronization where all changes made to a data object at any location any source or destination location are pushed or propagated to all other locations where a copy of the data object is located. A synchronization policy may further specify how frequently to distribute or receive changes to a data object or other conditions for distributing or receiving data changes . A synchronization policy may also specify whether to lock access to a data object at locations where it is distributed if a copy of the object is being edited at another location. In this way a synchronization policy may ensure that only one copy of a data object is unlocked for editing at any given time so that only one computing device can edit the data object. Alternatively a synchronization policy may specify methods for resolving concurrent editing of the same data object by more than one computing device. Although not shown the interface may permit a user to define other characteristics of a distribution policy such as conditions precedent for collecting changes to a data object receiving changes to a data object opening a data object or preview or editing a data object. Examples of these conditions include the type of network connectivity that can or cannot be used for data collection or distribution e.g. a WiFi connection or a domestic cellular network a specific blacklist of network access points that cannot be used for data collection or distribution a specific whitelist of network access points that may be used for data collection or distribution and operating conditions such as battery life that must be satisfied during data collection or distribution. The policy may also specify that certain data objects or preview cannot be opened on a computing device unless the computing device is within a certain IP address range or connected via a specific network. Other polices are of course possible including combinations of those disclosed herein.

It should be noted that the information management system permits a single user to define different distribution policies for their different computing devices which gives the users more flexibility to customize their experience on each device. As just one example a user may specify that their photos are synchronized to all their devices but their videos are only synchronized across devices that have sufficient data storage space to accommodate numerous videos. This is in contrast to some conventional techniques for data synchronization which do not permit different synchronization policies for different devices.

Also although not shown in the information management system permits administrators of the information management system to define or modify distribution policies for other users including policies that prohibit data distribution for certain data objects to certain users locations and or under certain conditions. For example an IMS administrator may create a system wide distribution policy that specifies that photos or videos that originate from any employee s Facebook hosted account cannot be distributed to desktop computers or laptop computers owned by an organization. The IMS may disregard any distribution policies set by an individual user to the extent those individual rules are contrary to an administrator defined policy.

Returning to the discussion of after receiving distribution policies for a user s data the distribution module may send these policies to any computing devices implicated by the policy including computing devices that were identified as a source or destination location. In the example shown in the distribution module may for example send distribution policies to all of jane65 s computing devices such as Janes Laptop and Janes Tablet. The distribution module may send distribution policies to the distribution client module at the implicated computing devices to ensure the policies are properly implemented. For example the distribution module may modify an information management policy for a source or destination computing device so that agents on the device continuously or intermittently push any changes to implicated data objects to the distribution module for subsequent synchronization with the other computing devices implicated by the policy.

At block the distribution module receives a user s data objects and metadata e.g. by receiving data objects and metadata from computing devices or hosted services . The distribution module may receive entirely new data objects implicated by a distribution policy or new versions of data objects that were already subject to a distribution policy. For example in accordance with an applicable distribution policy created and implemented at block or in accordance with other information management policies such as backup policies the distribution module may receive data from a user s computing device . Alternatively or additionally the distribution module may receive hosted data that is implicated by a distribution policy by pulling the data from a hosted service in accordance with information management policies as described previously at block .

At block the distribution module may receive a new version of a data object e.g. either by receiving a copy of the changed data object itself or by receiving a copy of any blocks that have changed since the last version of the data object was received by the distribution module. Additionally at block instead of receiving a copy of a particular data object or a constituent block of a data object the distribution module may receive a hash or other substantially unique identifier for the data object or a constituent block if source side deduplication techniques are implemented e.g. as described in assignee s U.S. patent application Ser. No. 12 982 087 filed Dec. 30 2010 entitled Systems and Methods for Retaining and Using Data Block Signatures in Data Protection Operations which is hereby incorporated by reference herein in its entirety and commonly assigned U.S. patent application Ser. No. 12 751 850 which was introduced and incorporated by reference above. In conjunction with receiving data at block the distribution module may also receive metadata associated with the data object such as a file name file or data object type source directory access control information creation time file or object size and modification time.

At block the distribution module analyzes and indexes the data and metadata received at block . For example for each data object received the distribution module may perform content indexing and data classification analyses of the data object as described further in the assignee s U.S. Pat. Nos. 7 822 749 and 7 882 077 both of which are hereby incorporated herein by reference. The distribution module may store the results of the analyses and other information related to the data object in an object log index such as that shown in . The object log index may include one row for every version of a data object that is subject to a distribution policy. As shown the object log index may include an object ID column a version ID column a hash column a user ID column an object lookup column a source column an object name column an analysis data column a time stamp column and a preview column . Together the object ID column which stores data object identifiers and the version ID column which stores version numbers or similar version identifiers provide a unique key for the table though other IDs may be used in alternative embodiments . The hash column includes a hash checksum digest or other substantially unique identifier of the content of a data object to aid in deduplication and object identification. The user ID column identifies a user who is associated with a data distribution policy that implicates the data object. The object lookup column provides a pointer or other reference to one or more stored copies of the version of the data object such as production or nonproduction copies of the version of the data object. The source column indicates where the version of the data object originated from such as the hostname or device alias and directory from which the object originated or a hosted service alias and hosted directory that produced the data object. The analysis data column points to or otherwise provides access to metadata content indexing information and data classification tags associated with the version of the data object. The timestamp column indicates when the version of the data object was received by the distribution module or alternatively the modification time of the version as determined from its source . The preview column includes a pointer or other reference to one or more preview versions of the version of the data object. Each preview version may be a simplified or otherwise optimized version of the data object suitable for the user interface capabilities of a particular computing device or class of computing devices across which the data object is distributed. For example a preview of a PowerPoint presentation suitable for a mobile device may be a limited functionality HTML or PDF version of the presentation. More discussion of appropriate methods for generating preview versions of data objects may be found in the commonly assigned U.S. patent application No. 61 618 125 entitled Smart Archiving and Data Previewing for Mobile Devices filed Mar. 30 2012 which is hereby incorporated by reference herein in its entirety.

Returning to the process of at block the distribution module creates additional non production copies of the received data objects and metadata for example in accordance with applicable information management policies. For example an information management policy may mandate that each received version of a data object should be stored both as a backup copy in disk media and also in an archive format on tape for long term storage. When creating additional non production copies of the received data objects and metadata the distribution module may update the object lookup column in the object log index to reflect the storage locations of these additional non production copies.

At block the distribution module determines where to distribute copies of the received data objects index information related to the received data objects and or preview versions of the received data objects. For example the distribution module may analyze the distribution policies received at block and any other applicable information management policies to determine that it should distribute a received data object its related index information and or a preview version of the object to a particular destination location such as a particular destination computing device. In some examples the distribution module records the result of its determinations in a distribution index such as that shown in which includes a single row for each unique combination of a version of a data object and a destination location. As shown the distribution index includes a user ID column an object ID column and a version ID column that together identify a row in the object log index . The distribution index also includes a destination column which indicates a particular destination device or web portal that should provide user access to the version of the data object index information for the object such as metadata or a related preview version. The distribution index also includes a destination directory column that indicates where in a destination directory tree structure the data object should be placed. For example rows and indicate that Janes Laptop and Janes Tablet should both receive version 1 of the data object identified by object ID 123456 i.e. the Image1.jpg object described by row in and the user will be able to find the Image1.jpg file in the directory folder Facebook Jane pics European Album. Row indicates that jane65 should also be able to access the Image1.jpg from a web based portal as described further herein.

The distribution index may also include one or more columns to track whether and when a data object a related preview or related index information about a data object has been distributed to a particular destination. For example an index sent column indicates when a particular destination device or portal receives index information about the version of the data object as described further herein. As another example a preview sent timestamp column indicates when a particular destination device or portal receives a preview version of a data object. As yet another example a copy sent column indicates when a particular destination device or portal receives a copy of a particular version of the data object. A copy locked column indicates whether a particular computing device or portal is actively editing an object and thus under the applicable synchronization policy other computing devices or portals should be blocked from simultaneously editing the object.

Of course different types of index data structures could provide similar functionalities to those described in connection with the object log index and distribution index . Additionally in accordance with applicable storage policies the distribution module may intermittently or on a prescribed schedule prune the indices and to remove all references to versions of data objects that meet predefined criteria e.g. older versions that haven t been accessed during a prescribed period . Additionally the distribution module may delete stored non production copies and or preview versions of these pruned data objects.

Returning to after the distribution module determines where to distribute data objects index information and or preview versions of the received data objects the process ends.

A distribution client module may perform actions that are complementary to the process performed by a distribution module . is a flow chart that illustrates a process for managing a user s data that may be performed at a computing device e.g. by a distribution client module . The process begins at block where the distribution client module receives information management policies for a user s data including distribution policies. For example as described previously at block the distribution client module may receive user defined distribution policies from the distribution module . Alternatively the distribution client module may directly receive distribution policies from a user for example if the distribution client module provides interfaces similar to interfaces and and may push these received distribution policies to the distribution module .

At block the distribution client module detects changes to a user s data objects that are implicated by a distribution policy i.e. objects that match the criteria specified by a distribution policy. As a first example the distribution module may determine that a user has created a new file implicated by a distribution policy. As a second example the distribution module may determine that a user has opened and edited a file on a source device and the file is implicated by a distribution policy that specifies one way or two way synchronization across devices. As a third example the distribution client module may determine that a user has opened and edited a file at a source or destination location and the file is implicated by a distribution policy that specifies two way synchronization across devices.

At block the distribution client module sends a copy of the implicated data objects to the distribution module in accordance with the distribution policies i.e. resulting in block of process . The timing of block may be mandated by settings of the distribution policy and may be opportunistic e.g. when a low cost or high speed network connection is available to the distribution client module . For example the distribution policy may specify particular conditions for sending the data objects such as requiring that the device sending the copy is on a corporate network or corporate VPN has WiFi or another type of network access has a minimum level of battery power left etc. After block the process ends. The data objects may be sent using continuous data replication techniques such those techniques described in assignee s U.S. patent application Ser. No. 12 167 933 entitled Continuous Data Protection Over Intermittent Connections Such as Continuous Data Backup For Laptops or Wireless Devices filed Jul. 3 2008 now U.S. Patent Publication Number 2010 0005259 and or source side deduplication techniques such those techniques described in commonly assigned U.S. patent application Ser. No. 12 982 087 introduced earlier above and assignee s U.S. patent application Ser. No. 12 751 850 introduced and incorporated by reference earlier above all of which are hereby incorporated by reference herein in their entirety.

As introduced above the information management system may distribute a user s data and or indices of a user s data so that the user can obtain a unified view of all of her data that has been created and modified across different hosted services and different computing devices. The information management system permits the user to obtain this unified view and access her data on different computing devices or via a web portal.

The interface may also provide the user with multiple ways to access their data objects. For example if a user selects an icon associated with a data object e.g. icon the user may be presented with a menu of options such as the options of

Additionally the menu may include an option to perform a live browse of the local files of another computing device e.g. of the device with alias Janes Laptop as described further herein. For example if a user doesn t see a file they wanted under the Janes Laptop branch because it wasn t subject to a distribution policy they may use the live browse option to try and locate it on the other device. Alternatively or additionally in some examples when a user double clicks a particular data object icon or otherwise indicates they wish to open the data object the interface may respond by taking one of these actions by default. The default action taken may be dictated by the capabilities of the computing device presenting the interface such as its installed applications processing power and memory. For example on a mobile device the default action may be opening a preview version using a limited feature viewer application.

In addition to providing a navigable directory structure the interface may provide search menus or fields to permit the user to enter search criteria and receive a list of search results or a filtered directory structure that includes the data objects that match the criteria. For example if a user enters criteria into the search field the client distribution module may search received content indexing information data classification tags and or metadata to find and present matching data objects. In this way the user may be able to search across the content tags and metadata of data objects that originated from numerous hosted services and or numerous computing devices.

Also the interface may provide drag and drop features. For example the interface may permit a user to indicate that they want to receive a local copy or preview version of an object simply by dragging an icon into a local directory folder. As another example the interface may permit a user to indicate that they want to push a copy or preview version of an object to another computing device thereby effectively creating a new distribution policy simply by dragging an icon for a data object into the displayed navigable folder structure. In other words the user can use the drag and drop feature to create a distribution policy to indicate data from one folder or device is to be copied to another location without having to determine and enter path names or other information.

The interface shown is intended to be illustrative not exhaustive. The user may obtain a unified view of their data such as a view of interface in numerous ways. As one example a user may provide the user s IMS authentication credentials e.g. IMS username and password or other IMS authentication information to a dedicated data navigation application such as a downloaded mobile application that comprises a distribution client module . Or the application may obtain credentials from an operating system or directory or security service such as an Active Directory service. As another example a user may provide the user s IMS authentication credentials e.g. IMS username and password or other IMS authentication information to a web portal associated with the IMS in order to view and access her data through a personalized web interface similar to interface . As another example a native application installed on a user s computing device may provide a unified view of the her data. Examples of native applications that may be used include Windows Explorer or similar file system navigators including NFS CIFS clients provided by an operating system and email clients such as Outlook or IMAP clients .

In such examples a distribution client module may be implemented as a plug in to the native application so that data objects originating from hosted services or other computing devices are presented to the user within the native application s interface in a manner similar to other locally stored files or data objects such as locally stored files and locally stored emails. For example if a user has created a distribution policy that implements cross device synchronization synchronized data objects might simply appear within Windows Explorer or a similar application at a directory location e.g. a different path on the destination device specified by the distribution policy. As another example a user may have a folder on their desktop called Remote Data that provides access to an interface similar to . As yet another example Outlook may request and cache indexing information previews and or copies of synchronized data so that it can provide an interface such as that shown in even when it does not have network connectivity.

Prior to the process the installed distribution client module may receive or obtain IMS credentials or other information identifying the IMS user or users whose data is to be presented as noted herein. Steps in process may be performed opportunistically e.g. when a low cost or high speed network connection is available to the distribution client module on the computing device.

The process begins at block where the distribution client module requests and receives index information related to the user s data such as information from the object log index and distribution index that is specific to the user and the device or portal from which the user is accessing the data. Typically the request is made to and fulfilled by the distribution module . To illustrate the distribution client module may request index information related to data objects that have been slated for distribution to the particular computing device and are associated with the user e.g. as indicated by the destination column and the user ID column of the distribution log . The distribution client module will typically request and receive sufficient information to permit the distribution client module to display an organized graphical depiction of the user s data such as that shown in and to perform searching of data objects content index information data classification tags and metadata. For example the distribution client module may request for each new version of a data object a destination directory e.g. from an object name an object ID version ID and metadata and analysis data such as file type extension access control information and file size. At block the distribution client module may request only new index information and combine the new information with locally cached index information.

Next at block the distribution client module provides a navigable graphical display of the user s index information to the user. For example the distribution client module may interpret the received index information and or locally cached index information in order to produce a graphical representation similar to interface . Alternatively the distribution client module may interpret the received index information in order to instruct another application e.g. Windows Explorer or Outlook regarding how to provide a similar graphical representation.

At block the distribution client module receives a request to provide a preview of a selected version of a selected object e.g. via a menu or a double click . In response at block the distribution client module requests a preview version of the selected data object from the distribution module e.g. by sending an object ID and version ID . When the distribution client module receives the requested preview version it presents the preview version to the user using a limited feature viewer application such as a PDF viewer or web browser.

At block the distribution client module receives a request for a copy of a selected version of a selected object e.g. via a menu or a double click . In response at block the distribution client module requests a copy of the selected version of the selected data object from the distribution module e.g. by providing an associated object ID and version ID . Once the copy is received the distribution client module launches an application capable of opening the data object typically a full featured application associated with the file type of the data object. If a user edits a copy of a selected data object the distribution client module may push a copy of the edited version back to its source computing device via the distribution module so that the source computing device has the latest version of the data object.

At block the distribution client module receives a request for a live browse session. These requests are described in further detail herein with respect to . The process then ends.

Although process has been described as being performed at a particular computing device a similar process may be performed by a web server associated with the IMS that is configured to provide IMS users with a web portal to access their data. In such examples the steps that were described above as being performed by a distribution client module may instead be performed by a web server.

A distribution module may perform actions that are complementary to the process performed by a distribution client module . is a flow chart that illustrates a complementary process for providing a user with access to her data that may be performed at a distribution module. The process begins at block where the distribution module provides indexing information related to a particular user and computing device to the distribution client module . To illustrate the distribution module may provide index information related to data objects that have been slated for distribution to the particular computing device and are associated with the user e.g. as indicated by the destination column and the user ID column of the distribution log . The distribution module will typically provide sufficient information to permit the distribution client module to display an organized graphical depiction of the user s data such as that shown in and to perform searching of data objects content index information data classification tags and metadata. For example the distribution module may send for each new version of a data object a destination directory e.g. from an object name an object ID version ID and metadata and analysis data such as file type extension access control information and file size. At block the distribution module may provide only new index information. The distribution module may use information such as that shown in column to identify only the new versions of objects where the indexing information has not already been sent.

At block the distribution module receives a request to send a preview version of a data object to a distribution client module . The request may indicate an object identifier and or version identifier associated with a single desired data object. Alternatively the request may ask for preview versions of numerous data objects that match a provided set of criteria. For example the request may ask for any new preview versions generated in the last 30 days so that those recent previews can be cached by the client distribution module . In response to the received request at block for each indicated version of a data object the distribution module selects a preview version by using a received data object identifier and version identifier or the received criteria to look up an associated preview version from the preview column of the object log index . When selecting the preview version the distribution module may determine the capabilities of the device or portal that will be used to display the preview to the user. The distribution module may then select a preview version based on the determined capabilities. For example the distribution module may determine the hard disk capacity memory capacity video or sound card specifications network connection type or bandwidth processing power and installed applications of the computing device and select a preview version that is best suited to those characteristics. More information about selecting preview versions suitable for a particular computing device can be found in the commonly assigned U.S. patent application No. 61 618 125 entitled Smart Archiving and Data Previewing for Mobile Devices filed Mar. 30 2012 which is hereby incorporated by reference herein in its entirety. If there is no existing preview version available from the object log index that is suitable for the capabilities of the computing device the distribution module may generate a suitable preview version. The distribution module then sends the selected preview version s to the distribution client module which may be performed using source side deduplication techniques.

At block the distribution module receives a request to send a copy of a selected version of a selected data object to a distribution client module . The request may indicate a data object identifier and or version identifier associated with the desired data object or may specify a set of criteria that identifies one or more versions of one or more data objects . In response to the received request at block the distribution module locates a copy of the requested version of a data object by using a received data object identifier and version identifier or other criteria to look up an associated stored copy from the object lookup column of the object log index . The distribution module then sends the located copy to the distribution client module which may be performed using source side deduplication techniques. When an applicable synchronization policy specifies locking as described previously before performing block the distribution module may verify that the object has not already been locked and after performing block the distribution module may add a lock on the data object to prevent other computing devices from simultaneously editing the data object e.g. by adding a timestamp to column .

At block the distribution module receives a request from a requesting distribution client module at a requesting computing device to facilitate a live browse session between the requesting distribution client module and a second target computing device. There are two variants of a live browse session. A first variant of a live browse session presents a user at the requesting computing device with a browseable and searchable view of data objects on the target computing device even if those data objects have not yet been pushed to the distribution module . In a second variant the requesting distribution client module requests to open a data object in a live browse mode. The second variant permits the requesting distribution client module to utilize computing resources of the target computing device e.g. processing power installed applications memory hard disk in order to view or manipulate files and other data objects.

At block the distribution module responds to the request for a live browse session. When a request for the first variant of live browsing is received i.e. a request to browse the files of a target computing device the distribution module may first determine if the target computing device is online i.e. has network connectivity to the distribution module. If the target computing device is not online the distribution module may access backup copies of the data from the target computing device and or indexing information that were created as part of a backup operation in order to create an index similar to that shown in the object log index which reflects the data contents and organization of the target computing device. Otherwise if the target computing device is online the distribution module may query a distribution client module at the target computing device and ask it to provide an updated index of all of the file folders and data objects on the target computing device or a subset of its folders and data objects . For example the distribution module may request indexing information for each data object similar to the indexing information shown in the object log index . The distribution module then provides the indexing information obtained from either the backup operations or from the target computer itself to the requesting distribution client module. The requesting distribution client module uses the indexing information to produce an interface with a graphical navigable and searchable file folder structure of the folders and data objects on the target computing device such as the interface shown in . From the interface a user may select a displayed object and drag it to a local directory e.g. her desktop so that a copy is created locally on the requesting computing device.

The requests and responses at block may be iterative so that the distribution module first obtains and provides only coarse indexing information e.g. only the data objects and folders that appear in top level file folders of the target device and then later obtains and provides additional indexing information e.g. in response to a user navigating to a specific folder in a displayed navigable file folder structure. For example the distribution module may upon such user navigation obtain and provide more granular indexing information for specific folders on the target computing device. If a user indicates that she wishes to open a preview version or copy of the data object shown in the navigable folder structure e.g. as described previously with respect to the distribution module may obtain a preview version or copy from the target computer and if necessary generate a suitable preview version and provide the preview version or copy to the requesting distribution client module. If a user edits a copy of a selected data object on the requesting computing device the requesting distribution client module may push the edited version back to the target computing device via the distribution module so that the target computing device has the latest version of the data object.

In addition to providing index information related to the data objects available on a target computing device the distribution module may also determine and provide information regarding the applications that are installed on the target computing device and are capable of being run in a live browse mode. In this way the user can initiate applications on the target computing device from a requesting device such as a limited feature mobile device.

The previous discussion described the distribution module as playing an intermediary role by collecting and distributing indexing information preview versions and copies of data objects. However in some examples instead the target distribution client module may communicate directly with the requesting distribution client module to exchange this information directly. Also the requesting distribution client module may generate preview versions as needed.

When a request for the second variant of live browsing is received in response at block the distribution module identifies the target computing device and establishes a secure connection between a requesting distribution client module and a target distribution client module at the target computing device. Once the connection is established the target distribution client module may initiate applications installed at the target computing device and provide an optimized view of the application to the requesting distribution client module. This second feature of a live browse session is described in greater detail herein e.g. with respect to . After block the process ends.

The distribution module and client distribution module may perform variants of the processes and respectively. As one example instead of providing a preview of a data object only in response to an explicit request for the preview the distribution module may instead provide a preview of a data object when a new version of the data object is received and indexed in conjunction with indexing information at block and or upon a prescribed schedule. As another example instead of providing a copy of a data object in response to an explicit request for the copy the distribution module may instead provide a copy of the data object when a new version of the data object is received and indexed and or upon a prescribed schedule. In these variants the methods may keep data objects that are being edited at different computing devices synchronized across those different computing devices. When all of the synchronized computing devices have network access cross device synchronization may occur nearly in real time. In another variant instead of providing a preview of a data object or a copy of a data object only in response to an explicit request for a preview or copy the distribution module may proactively push a subset of the previews and data objects e.g. in conjunction with indexing information and the distribution client module may cache these so it can respond to user requests even when it has no network connectivity. For example the distribution module may proactively push previews or copies of any objects that have been edited in the last 30 days.

The second variant of a live browse session permits a user of a mobile device or other limited feature device to execute full featured applications installed on a remote computing device e.g. a desktop or laptop device and to interact with the full featured application via the input output hardware of the limited feature device. As described above when a user of a requesting computing device indicates that they want to open a data object in a live browse mode a connection is established between a distribution client module at the requesting computer the requesting distribution client module and a distribution client module at the target computing device the target distribution client module. The target distribution client module identifies a copy of the data object and if necessary requests a copy of the data object e.g. from a distribution module . The target distribution client module launches an instance of a full featured native application using the processor and memory of the target computing device in order to open the data object in the native application.

As shown in when a full featured native application e.g. Microsoft Word is used to edit a file or data object such as a Word document the computing device where the native application is installed would normally produce a native graphical interface . The native interface includes full featured menus that permit the user to initiate numerous and complex menu commands. In contrast in live browse mode when a target distribution client module launches a full featured native application the target distribution client module interprets the output from the full featured application in order to produce a simplified graphical interface for the application as shown in . For example the target distribution client module may generate an HTML interface that provides only a highly limited set of menu options . The target distribution client module then sends a representation of the simplified graphical interface to the requesting distribution client module which displays the interface to the user at the requesting computing device e.g. in a browser . These two steps may be repeated as the target distribution client module receives updated output from the full featured application. In concert with these actions the target distribution client module may send any user input it receives from the simplified graphical interface back to the target distribution client module. The target distribution client module interprets or translates any received user input and conveys the input to the native full featured application. In this way a user may be able to utilize in a limited way full featured applications that are installed at a remote computing device.

In some examples the functionality of the information management system may be provided to an organization on a subscription or software as a service or platform as a service basis. In such examples the operator of the information management system may charge an organization on a per user basis and or on the basis of other metrics of usage.

Systems and modules described herein may comprise software firmware hardware or any combination s of software firmware or hardware suitable for the purposes described herein. Software and other modules may reside on servers workstations personal computers computerized tablets PDAs and other computing devices suitable for the purposes described herein. Modules described herein may be executed by a general purpose computer e.g. a server computer wireless device or personal computer. Those skilled in the relevant art will appreciate that aspects of the invention can be practiced with other communications data processing or computer system configurations including Internet appliances hand held devices including personal digital assistants PDAs wearable computers all manner of cellular or mobile phones multi processor systems microprocessor based or programmable consumer electronics set top boxes network PCs mini computers mainframe computers and the like. Furthermore aspects of the invention can be embodied in a special purpose computer or data processor that is specifically programmed configured or constructed to perform one or more of the computer executable instructions explained in detail herein.

Software and other modules may be accessible via local memory a network a browser or other application in an ASP context or via another means suitable for the purposes described herein. Examples of the technology can also be practiced in distributed computing environments where tasks or modules are performed by remote processing devices which are linked through a communications network such as a Local Area Network LAN Wide Area Network WAN or the Internet. In a distributed computing environment program modules may be located in both local and remote memory storage devices. Data structures described herein may comprise computer files variables programming arrays programming structures or any electronic information storage schemes or methods or any combinations thereof suitable for the purposes described herein. User interface elements described herein may comprise elements from graphical user interfaces command line interfaces and other interfaces suitable for the purposes described herein.

Examples of the technology may be stored or distributed on computer readable media including magnetically or optically readable computer disks hard wired or preprogrammed chips e.g. EEPROM semiconductor chips nanotechnology memory or other data storage media. Indeed computer implemented instructions data structures screen displays and other data under aspects of the invention may be distributed over the Internet or over other networks including wireless networks or they may be provided on any analog or digital network packet switched circuit switched or other scheme .

Unless the context clearly requires otherwise throughout the description and the claims the words comprise comprising and the like are to be construed in an inclusive sense as opposed to an exclusive or exhaustive sense that is to say in the sense of including but not limited to. As used herein the terms connected coupled or any variant thereof means any connection or coupling either direct or indirect between two or more elements the coupling or connection between the elements can be physical logical or a combination thereof. Additionally the words herein above below and words of similar import when used in this application refer to this application as a whole and not to any particular portions of this application. Where the context permits words in the above Detailed Description using the singular or plural number may also include the plural or singular number respectively. The word or in reference to a list of two or more items covers all of the following interpretations of the word any of the items in the list all of the items in the list and any combination of the items in the list.

The above Detailed Description is not intended to be exhaustive or to limit the invention to the precise form disclosed above. While specific examples for the invention are described above for illustrative purposes various equivalent modifications are possible within the scope of the invention as those skilled in the relevant art will recognize. For example while processes or blocks are presented in a given order alternative implementations may perform routines having steps or employ systems having blocks in a different order and some processes or blocks may be deleted moved added subdivided combined and or modified to provide alternative or subcombinations. Each of these processes or blocks may be implemented in a variety of different ways. Also while processes or blocks are at times shown as being performed in series these processes or blocks may instead be performed or implemented in parallel or may be performed at different times. Further any specific numbers noted herein are only examples alternative implementations may employ differing values or ranges.

The teachings of the invention provided herein can be applied to other systems not necessarily the systems described herein. The elements and acts of the various examples described above can be combined to provide further implementations of the invention.

Any patents and applications and other references noted above including any that may be listed in accompanying filing papers are incorporated herein by reference. Aspects of the invention can be modified if necessary to employ the systems functions and concepts of the various references described above to provide yet further implementations of the invention.

These and other changes can be made to the invention in light of the above Detailed Description. While the above description describes certain examples of the invention no matter how detailed the above appears in text the invention can be practiced in many ways. Details of the system may vary considerably in its specific implementation while still being encompassed by the invention disclosed herein. As noted above particular terminology used when describing certain features or aspects of the invention should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics features or aspects of the invention with which that terminology is associated. In general the terms used in the following claims should not be construed to limit the invention to the specific examples disclosed in the specification unless the above Detailed Description section explicitly defines such terms. Accordingly the actual scope of the invention encompasses not only the disclosed examples but also all equivalent ways of practicing or implementing the invention under the claims.

While certain examples are presented below in certain forms the applicant contemplates the various aspects of the invention in any number of claim forms. Accordingly the applicant reserves the right to add additional claims after filing the application to pursue such additional claim forms for other aspects of the invention.

