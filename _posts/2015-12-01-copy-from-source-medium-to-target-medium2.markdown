---

title: Copy from source medium to target medium
abstract: A computer-implemented method for copying data from a source medium to a target medium in a storage system by a computer system, the storage system including a storage device, a first drive configured to access the source medium, and a second drive configured to access the target medium, the method comprising: estimating a waiting time for copy target data to be transferred from the source medium, selecting migration target data of the storage device based on whether migration of data to the target medium is expected to be finished within the waiting time or not, migrating the migration target data from the storage device to the target medium by the second drive while locating and/or reading the copy target data on the source medium by the first drive, and writing the copy target data to the target medium by the second drive.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09600493&OS=09600493&RS=09600493
owner: International Business Machines Corporation
number: 09600493
owner_city: Armonk
owner_country: US
publication_date: 20151201
---
The present invention generally relates to storage systems more particularly to methods and or systems for copying from source media to target media in storage systems.

Hierarchical storage systems integrating with a tape storage system in which a part of files is stored on tape media have been developed. In the hierarchical storage systems there may be provided a hierarchical storage management HSM functionality that performs several operations such as migration and recall between storage tiers. The HSM may move the file s data on a disk tier to back end tape tier. When users or programs access the file the HSM may automatically recall the file s data from the back end tape tier.

One of the operations provided by the HSM in the hierarchical storage systems is reclamation in which merely active data on a source medium is copied to another target medium so as to defragment active data on the medium. The reclamation process can be performed so that all active data stored on the source medium with low usage are moved to another tape medium in order to improve overall tape usage. For example a particular implementation may automatically trigger the reclamation process when the ratio of the active data on the tape medium falls below a predetermined level e.g. 35 .

Data may be scattered over the tape medium due to modification or deletion of files. Since tape drives may take some time to locate start position of each active data on the source medium due to their sequential nature a reading time associated with reading a series of data e.g. which may constitute a single file a group of files etc. may be prolonged. Even though two drives are occupied during the reclamation process the drive for the target medium may not always operate there is a waiting time for the data to be transferred from the source medium meaning that the drive resources are not fully utilized.

Such inefficiencies may also arise in inter generation copies or inter generation migrations in which data on an old generation tape medium is copied to a new generation tape medium. Typically transfer rate for a new generation is higher than those for old generations. In this case the write transfer rate for the new generation medium may be adapted to the read transfer rate for the older generation by a speed matching capability of the tape drives. Hence the drive resources during the inter generation copy are also not fully utilized.

Since the plurality of the drives are occupied during copy processes between media such as reclamation and inter generation copy other operations e.g. such as migration and recall may be prevented However there exists a waiting time during which the capability of the drive is not effectively utilized.

In sharp contrast methods computer systems storage systems and or computer program products described in some of the various embodiments herein may be capable of effectively utilizing a waiting time during which the capability of the drive is not utilized for writing data transferred from a source medium to a target medium in a storage system as will be described in further detail below.

A computer implemented method according to one embodiment is for copying data from a source medium to a target medium in a storage system by a computer system the storage system including a storage device a first drive configured to access the source medium and a second drive configured to access the target medium. The method includes estimating by the computer system a waiting time for copy target data to be transferred from the source medium selecting by the computer system migration target data of the storage device based on whether migration of data to the target medium is expected to be finished within the waiting time or not migrating by the computer system the migration target data from the storage device to the target medium by the second drive while locating and or reading the copy target data on the source medium by the first drive and writing by the computer system the copy target data to the target medium by the second drive.

A computer system according to another embodiment is configured to copy data from a source medium to a target medium in a storage system the storage system including a storage device a first drive configured to access the source medium and a second drive configured to access the target medium. The computer system includes an estimator configured to estimate a waiting time for copy target data to be transferred from the source medium a selector configured to select migration target data of the storage device based on whether migration of data to the target medium is expected to be finished within the waiting time or not a copy module configured to read the copy target data from the source medium by the first drive and to write the copy target data to the target medium by the second drive and a migration module configured to migrate the migration target data from the storage device to the target medium by the second drive while the copy module locating and or reading the copy target data on the source medium.

A storage system according to another embodiment is configured to reclaim data from a source medium to a target medium. The storage system includes a storage device for storing a plurality of data a first drive for accessing the source medium storing reclamation target data and a second drive for accessing the target medium. The storage system is also configured to estimate by the storage system a waiting time for the reclamation target data to be transferred from the source medium select by the storage system migration target data from among the plurality of the data based on whether migration of the data to the target medium is expected to be finished within the waiting time or not migrate by the storage system the migration target data from the storage device to the target medium by the second drive while locating and or reading the reclamation target data on the source medium by the first drive and write by the storage system the reclamation target data to the target medium by the second drive.

A storage system according to yet another embodiment is configured to copy data from a source medium to a target medium the target medium having a generation that is different from a generation of the source medium. The storage system includes a storage device for storing a plurality of data a first drive for accessing the source medium storing copy target data and a second drive for accessing the target medium. Moreover the storage system is configured to estimate by the storage system a waiting time for the copy target data to be transferred from the source medium select by the storage system migration target data from among the plurality of the data based on whether migration of the data to the target medium is expected to be finished within the waiting time or not migrate by the storage system the migration target data from the storage device to the target medium by the second drive while locating and or reading the copy target data on the source medium by the first drive to a cache or buffer and write by the storage system the copy target data to the target medium by the second drive via the cache or buffer.

A computer program product according to another embodiment is for copying data from a source medium to a target medium in a storage system the storage system including a storage device a first drive for accessing the source medium and a second drive for accessing the target medium. The computer program product includes a computer readable storage medium having program instructions embodied therewith the program instructions readable and or executable by a computer to cause the computer to perform a method which includes estimating by the computer a waiting time for copy target data to be transferred from the source medium selecting by the computer migration target data of the storage device based on whether migration of data to the target medium is expected to be finished within the waiting time or not migrating by the computer the migration target data from the storage device to the target medium by the second drive while locating and or reading the copy target data on the source medium by the first drive and writing by the computer the copy target data to the target medium by the second drive.

Any of these embodiments may be implemented in a magnetic data storage system such as a tape drive system which may include a magnetic head a drive mechanism for passing a magnetic medium e.g. recording tape over the magnetic head and a controller electrically coupled to the magnetic head.

Moreover other aspects and embodiments of the present invention will become apparent from the following detailed description which when taken in conjunction with the drawings illustrate by way of example the principles of the invention.

The following description is made for the purpose of illustrating the general principles of the present invention and is not meant to limit the inventive concepts claimed herein. Further particular features described herein can be used in combination with other described features in each of the various possible combinations and permutations.

Unless otherwise specifically defined herein all terms are to be given their broadest possible interpretation including meanings implied from the specification as well as meanings understood by those skilled in the art and or as defined in dictionaries treatises etc.

It must also be noted that as used in the specification and the appended claims the singular forms a an and the include plural referents unless otherwise specified.

The following description discloses several preferred embodiments of magnetic storage systems as well as operation and or component parts thereof.

In one general embodiment a computer implemented method may be for copying data from a source medium to a target medium in a storage system by a computer system the storage system including a storage device a first drive configured to access the source medium and a second drive configured to access the target medium. The method includes estimating by the computer system a waiting time for copy target data to be transferred from the source medium selecting by the computer system migration target data of the storage device based on whether migration of data to the target medium is expected to be finished within the waiting time or not migrating by the computer system the migration target data from the storage device to the target medium by the second drive while locating and or reading the copy target data on the source medium by the first drive and writing by the computer system the copy target data to the target medium by the second drive.

In another general embodiment a computer system may be configured to copy data from a source medium to a target medium in a storage system the storage system including a storage device a first drive configured to access the source medium and a second drive configured to access the target medium. The computer system includes an estimator configured to estimate a waiting time for copy target data to be transferred from the source medium a selector configured to select migration target data of the storage device based on whether migration of data to the target medium is expected to be finished within the waiting time or not a copy module configured to read the copy target data from the source medium by the first drive and to write the copy target data to the target medium by the second drive and a migration module configured to migrate the migration target data from the storage device to the target medium by the second drive while the copy module locating and or reading the copy target data on the source medium.

In another general embodiment a storage system may be configured to reclaim data from a source medium to a target medium. The storage system includes a storage device for storing a plurality of data a first drive for accessing the source medium storing reclamation target data and a second drive for accessing the target medium. The storage system is also configured to estimate by the storage system a waiting time for the reclamation target data to be transferred from the source medium select by the storage system migration target data from among the plurality of the data based on whether migration of the data to the target medium is expected to be finished within the waiting time or not migrate by the storage system the migration target data from the storage device to the target medium by the second drive while locating and or reading the reclamation target data on the source medium by the first drive and write by the storage system the reclamation target data to the target medium by the second drive.

In yet another general embodiment a storage system may be configured to copy data from a source medium to a target medium the target medium having a generation that is different from a generation of the source medium. The storage system includes a storage device for storing a plurality of data a first drive for accessing the source medium storing copy target data and a second drive for accessing the target medium. Moreover the storage system is configured to estimate by the storage system a waiting time for the copy target data to be transferred from the source medium select by the storage system migration target data from among the plurality of the data based on whether migration of the data to the target medium is expected to be finished within the waiting time or not migrate by the storage system the migration target data from the storage device to the target medium by the second drive while locating and or reading the copy target data on the source medium by the first drive to a cache or buffer and write by the storage system the copy target data to the target medium by the second drive via the cache or buffer.

In another general embodiment a computer program product may be for copying data from a source medium to a target medium in a storage system the storage system including a storage device a first drive for accessing the source medium and a second drive for accessing the target medium. The computer program product includes a computer readable storage medium having program instructions embodied therewith the program instructions readable and or executable by a computer to cause the computer to perform a method which includes estimating by the computer a waiting time for copy target data to be transferred from the source medium selecting by the computer migration target data of the storage device based on whether migration of data to the target medium is expected to be finished within the waiting time or not migrating by the computer the migration target data from the storage device to the target medium by the second drive while locating and or reading the copy target data on the source medium by the first drive and writing by the computer the copy target data to the target medium by the second drive.

Referring to series of it will be described a hierarchical storage system with disk and tape tiers according to an exemplary embodiment which is in no way intended to limit the invention. In some embodiments the storage system may include a computer e.g. according to any of the approaches described and or suggested herein.

Referring specifically now to an overview of the hierarchical storage system is shown. The hierarchical storage system includes a cluster with one or more nodes M. The cluster provides a file system that allows for performing file operations to the hierarchical storage system .

As shown in the hierarchical storage system may include a shared disk array that includes one or more disk caches N which are storage devices storing files. Each node in the cluster may be connected to the disk cache in the shared disk array via a Storage Area Network SAN fabric . The SAN fabric may include but is not limited to Fibre Channel FC SAN based on a fiber channel network and or Internet Protocol IP SAN based on Transmission Control Protocol TCP IP network with Local Area Network LAN switches etc.

The nodes may share the disk caches . The node can access to the disk cache via the SAN fabric and provide also indirect file access for other nodes that do not connect to the SAN fabric . Such file system distributed to the one or more nodes in the cluster to which plurality of nodes may include client nodes can access is so called a clustered file system or a distributed parallel file system. The clustered file system can provide a global namespace a striping functionality to stripe input and output over the nodes and an information lifecycle management ILM functionality.

The hierarchical storage system may include further a tape library . The tape library includes one or more tape drives L and one or more tape media O. Any tape medium can be a medium for either source or target of copy operations. Each node in the cluster may be connected to the tape library via SAN fabric FC Low Voltage Differential LVD Small Computer System Interface SCSI Serial Attached SCSI SAS cables etc. Equipping the plurality of the tape drives L enables the node to access a set of the tape media simultaneously. The tape drive may be occupied by the node at a point in time and may be used alternately. According to an exemplary embodiment which is in no way intended to limit the invention the tape drives may accept Linear Tape Open LTO Ultrium 5 or later tape cartridges which support LTFS or other proprietary formats.

The tape library is managed by a tape file system such as Liner Tape File System LTFS and integrated to the clustered file system so that at least part of data in the shared disk array is stored on tape media in the tape library . Files may migrate from the shared disk array to the tape library based on a predetermined migration policy.

The hierarchical storage system may include further a control terminal . The control terminal is a terminal device where an administrative user can operate to issue manual request and to specify settings of the hierarchical storage system. By using the control terminal the administrative user can specify settings of a novel reclamation and or inter generation copy process according to the exemplary embodiment which will be described in further detail below. The administrative user can also issue manual request and specify schedules or policies for other functionalities of the hierarchical storage system such as standard migration recall reconciliation file placement file management etc.

As shown in in the describing embodiment the nodes M are described to be connected to the disk caches N in the shared disk array and the nodes L are described to be connected to the tape drives L in the tape library . However the configuration of the hierarchical storage system shown in is only an example for typical storage system and is not intended to suggest any limitation.

For instance in one embodiment the shared disk array may be divided to one or more online storages and one or more nearline storages to construct a three or more tiered architecture. In another particular embodiment the hierarchical storage system may include further a flash storage tier on top of the hierarchical storage system. In further other embodiment the storage system may have merely one node one disk cache and one tape drive to construct a hierarchical storage system. In further another embodiment another type of a sequential access medium may be used as a storage medium for both source and target in place of or in addition to the tape medium.

Referring now to a schematic of an example of a node is shown. The node is only one example of a suitable node and is not intended to suggest any limitation as to the scope of use and or functionality of the various embodiments described and or suggested herein. Regardless the node is capable of being implemented and or performing any of the functionality set forth herein.

The node is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of computing systems environments and or configurations that may be suitable for use with the node include but are not limited to personal computer systems server computer systems thin clients thick clients hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputer systems mainframe computer systems distributed cloud computing environments that include any of the above systems or devices etc.

The node may be described in the general context of computer system executable instructions such as program modules being executed by a computer system. Generally program modules may include routines programs objects components logic data structures etc. which may perform particular tasks or implement particular abstract data types.

As shown in the node is shown in the form of a general purpose computing device. The components of the node may include but are not limited to one or more processors or processing units and a memory operatively coupled to the processors by a bus including a memory bus a memory controller a processor a local bus using any of a variety of bus architectures etc.

The node typically includes a variety of computer system readable media. Such media may be any available media that is accessible by the node and may include both volatile and or non volatile media removable and or non removable media.

The memory may include computer system readable media in the form of volatile memory such as random access memory RAM . The node may further include other removable and or non removable volatile and or non volatile computer system storage media. By way of example only the storage device can be provided for reading from and writing to a non removable non volatile magnetic media. Although not shown a magnetic disk drive for reading from and writing to a removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from or writing to a removable non volatile optical disk such as a CD ROM DVD ROM or other optical media can be provided. In such instances each can be connected to bus by one or more data media interfaces. As will be further depicted and described below the storage device may include at least one program product having a set e.g. at least one of program modules that are configured to carry out the functions of the embodiments described herein.

Program utility having a set at least one of program modules may be stored in the storage device by way of example and not limitation as well as an operating system one or more application programs other program modules and program data. Each of the operating system one or more application programs other program modules and program data and or some combination thereof may include an implementation of a networking environment. Program modules generally carry out the functions and or methodologies of embodiments as described herein.

The node may also communicate with one or more peripherals such as a keyboard a pointing device etc. a display one or more devices that enable a user to interact with the node and or any devices e.g. network card modem etc. that enable the node to communicate with one or more other computing devices via SAN fabric . Such communication can occur via Input Output I O interfaces . Still yet the node can communicate with one or more networks such as a local area network LAN a general wide area network WAN and or a public network e.g. the Internet via the network adapter . As depicted the network adapter communicates with the other components of the node via bus. It should be understood that although not shown other hardware and or software components could be used in conjunction with the node . Examples include but are not limited to microcode device drivers redundant processing units external disk drive arrays RAID systems tape drives and data archival storage systems etc. The node may be interconnected with other node via a host channel adapter HCA such as InfiniBand .

Hardware and or software components of the tape library the tape drives the control terminal may include similar to the node shown in a processor a memory a read only memory a network adapter a I O interface and robotic mechanism but not be shown in the drawings any more.

Referring now to a block diagram of the hierarchical storage system is illustrated. As shown in the hierarchical storage system includes a computer system connected to the shared disk array and the tape library . The computer system may be composed of the nodes in the cluster shown in and .

As shown in the computer system includes a clustered file system module a storage management module a reclamation module and a tape file system module .

In some embodiments computer system may be configured to perform any one or more of the processes described herein. According to one example which is in no way intended to limit the invention computer system may include memory having program instructions embodied therewith which are readable and or executable by a computer of the computer system to cause the computer to perform any one or more of the processes corresponding to the components of reclamation module in as described below.

Referring still to the clustered file system module may be a software component that manages the clustered file system on the disk tier in the hierarchical storage system . The tape file system module may be a software component that allows for performing file operations to the tape media and providing interface to manipulate files on the tape media in the tape library . The tape media O in the tape library may be accessed as subdirectories under a mount point of the tape library .

The storage management module may be a software component that provides integration of the clustered file system managed by the clustered file system module with the tape file system managed by the tape file system module . The storage management module manages standard migration and recall activities in the hierarchical storage system .

The reclamation module may be a software component that provides the novel reclamation function according to one or more embodiments described herein.

Migration is a process in which files are moved from the disk tier to the tape media on the tape tier . The migration process may have plurality of modes. In a first mode the migration process leaves behind a small stub file on the disk tier which points the file body migrated to the tape medium. The migration process in a second mode is so called as a pre migration in which files are moved from the disk tier to the tape media on the tape tier without replacing the file body with a stub file on the disk tier . According to the pre migration mode identical copies of the files are on both the disk and tape tiers . Recall is a process in which the migrated files are moved from the tape media back to the originating disk tier if an accessed file does not exist on the disk tier .

The files newly created or overwritten to the hierarchical storage system may initially be merely on the disk tier thus the file state is initially resident . The files may be migrated from the disk tier to the tape tier by running the migration process in first mode after which the file is a stub on the disk and the identifiers of the tapes storing the copies are written to metadata. The file state of such file is referred as migrated . The file may be recalled from the tape tier by recall activities when an application attempts to read from the file. The file state of such file on both the disk and tape tiers is referred as pre migrated . Also the files may be pre migrated to the tape tier by running the migration process in second mode.

A desired reclamation function e.g. in which migration is performed during a spare time of reclamation process is desired in some of the embodiments described herein.

Referring to a block diagram of the reclamation module according to the first embodiment is illustrated. In a detailed block diagram of the reclamation module is depicted with other components related to the novel reclamation function which include the tape file system module the plurality of the tape drive the plurality of the tape media and the disk cache .

The tape medium that stores target files of reclamation is referred to as a source medium S. The tape medium that is used as a target or destination of the reclamation is referred to as a target medium T. The tape drive holds the source medium S is referred to as a source tape drive S and the tape drive holds the target medium T is referred to as a target tape drive T.

Generally the reclamation is a process in which merely active data on the source medium S is copied to the target medium T to defragment. Some particular implementations may automatically trigger the reclamation process when the ratio of the active data on the tape medium falls below a predetermined level. Since files stored on the disk tier are often moved to the tape tier using the plurality of the tape drives at once data are typically written to multiple tape media evenly. Therefore the multiple tape media may have to be involved in the reclamation process simultaneously.

In this case a lot of tape drives are occupied for the reclamation. Alternatively the reclamation may continue for a long time when many tape media are processed by a single part of tape drive in a one by one manner. Consequently other operations such as the migrations and recalls may be prevented by drive occupation for the reclamation process.

Although at least two tape drives S T are preferably occupied during the reclamation process the target tape drive T may not always operate since the tape drives S may take some time to locate start position of each active data on the source medium S. There is a waiting time for the data to be transferred from the source medium S during which the capability of the target tape drive T is not effectively utilized. Therefore embodiments described and or suggested herein may preferably be capable of effectively utilizing a waiting time during which the capability of the target tape drive T is not utilized for writing data transferred from the source medium S.

In one or more embodiments described herein a novel reclamation function for reclaiming data from the source medium S to the target medium T in which migration is performed during a spare time of the reclamation may be described as being incorporated into the hierarchical storage system .

For this purpose as shown in the reclamation module includes a waiting time estimator a migration target selector a copy module and a migration module . In an exemplary embodiment a cache or buffer for temporarily storing data transferred from the source medium S is also utilized. The disk cache may be a source storage device that stores a plurality of files as a target for migration which is performed during the spare time of the reclamation process.

The waiting time estimator may be configured to estimate a waiting time for reclamation target data to be transferred from the source medium S. To estimate the waiting time the waiting time estimator may request read time information of a designated file to the tape file system module through an API application programming interface .

The tape file system module includes a function LTFS FILE READ TIME to provide the read time information of the requested file. In a particular embodiment ioctl system call may be used in UNIX systems. In other particular embodiment DeviceIoControl function may be used in Windows systems. The read time information may include a seeking time required for locating a beginning of the requested file T fileStartReadTime and a reading time required for reading the requested file from beginning to end after locating the beginning T fileLeftReadTime . The function calculates the read time information fileStartReadTime fileLeftReadTime using physical positions of the requested file.

The physical positions of the file and a data structure where the tape file system module obtains the physical positions of the file may vary in different embodiments. According to one embodiment the tape medium may include an index partition and a data partition e.g. relative to a corresponding LTFS specification. The index partition contains index data such as information associated with allocation of files. The data partition contains all of content data and the index data. The index data may be read from the index partition of the tape medium to a storage region which may be an appropriate storage device such as the disk cache or the memory at the time of mounting of the tape medium . The latest index data stored in the storage region may be written back to the index partition of the tape medium at the time of unmounting of the tape medium .

Referring to data arrangement and fragmentation of a file on a tape medium in accordance with LTFS format are described. The tape medium has a partition with a number of wraps each of which is a set of tracks in a single one way pass between logical points that indicate a beginning and an end of a wrap from LP to LP or from LP to LP .

The LP and LP represent a beginning and an end of a user data region in a data storage area in a longitudinal direction of the tape medium respectively. The beginning of the wrap corresponds to LP for forward wraps and LP for reverse wraps. The end of the wrap corresponds to LP for forward wraps and LP for reverse wraps. Note that wraps are described to be written from top to bottom for convenience and simplicity. However in a particular embodiment the wraps may be arranged in bidirectional serpentine layout.

In the LTFS writing operations may proceed by making a pass over the tape medium in forward and backward repeatedly. In particular recording physical position of the data on the tape medium is represented by a position in the longitudinal direction of the tape medium hereinafter this position may be referred as LPOS and a position in a lateral direction perpendicular to the longitudinal direction hereinafter this position may be referred as WRAP .

Storing files on the tape medium data for a signal file may often be fragmented on the tape medium. In a white region represents a data piece of the file and a gray region represents other data or space region. As shown in the file is fragmented into two data pieces. In LTFS data pieces that constitute a file are called as data extents 

The first data extent shown in is recorded from position S to position E on the tape medium and after another data is recorded the second data extent is recorded from position S to position E. Specifically the first data extent is recorded from the position Lto the LP in the start wrap W from the LP to the LP in the next wrap W 1 and from the LP to the position Lin the further next wrap W 2 which corresponds to the end wrap W. After another data is recorded the second data extent is recorded from the position Lto the LP in the start wrap Wand from the LP to the position Lin the end wrap W. These physical positions of the file are recorded in the index data in the storage region or the tape medium .

Referring to an example of data structure of index data for a file is shown. The tape file system module may create an extent in the index data when recording the data. The tape file system module obtains current LPOS and WRAP from the tape drive at the beginning and the end of writing data and update the index data stored in the cache such that the LPOS and WRAP of the start and end positions of the data extent are written as an attribute of the file. In a particular embodiment the LPOS and the WRAP representing a current position of a tape head on the tape medium can be obtained from sense data or mode page data indicating an operating state of the tape drive by using a SCSI command. The sense data and the mode page data may include positional information on the tape head from which the WRAP and the LPOS of the tape head can be obtained.

In the part expressed in boldface is the created extent of which the underlined part is the information about the physical positions of the data extent. The information written to the extent includes an offset of a data extent within a file fileoffset an block number at which recording of the data extent is started startblock and the byte count bytecount and a start position startwrap startlpos and an end position endwrap endlpos of the data extent. The elements startwrap startlpos endwrap and endlpos correspond to W L W and Lshown in respectively.

Referring back to on the basis of the physical position of the requested file which includes the physical positions of the data extents constituting the requested file the function calculates the read time information fileStartReadTime fileLeftReadTime based on the WRAP and the LPOS stored in the extent. In a particular embodiment the seeking time fileStartReadTime after mounting the tape medium and the reading time fileLeftReadTime after locating the start position can be calculated by using Equations 1 2 as follow fileStartReadTime 0 3 Equation 1

In Equations 1 2 lp and lp represent the longitudinal position LPOS of LP and LP respectively S LPOS s is reading speed S LPOS s is moving speed during seeking T Wp Wq is a function that gives a time required to move from the wrap Wto the wrap W l W is a function that gives a longitudinal position LPOS of the end or the beginning of the data at the wrap W f W W is a function which returns 1 if the difference between Wand Wis greater than 1 and otherwise returns 0 and g W W is a function which returns 0 if Wequals to W and otherwise returns 1 N represents end of extent number assigned to the last data extent.

In Equation 1 the first term gives a time required for changing wraps from an initial wrap position that may be zero just after mounting to the start wrap position of first data extent Wduring seeking. The second term gives a time required for locating the start longitudinal position Lat the start wrap position Wfrom an initial longitudinal position that may be lp just after mounting . Accordingly in some approaches the physical position of the copy target data may include a longitudinal position and a wrap position of start and end positions of each data piece constituting the copy target data.

In Equation 2 the first term gives a time required for changing wraps during reading. The second term gives a time required for reading data from the beginning to the end of wraps fully occupied by the data. The third term gives a time required for reading remaining data having a length of less than one wrap from the beginning or the end of corresponding wraps. The fourth term gives a time required for reading data extent from the start position to the end position if the data extent is not reside over the plurality of wraps. If the file includes the plurality of the data extents every term may be sum up for all data extents. The fifth term gives a time required for locating the start position of next data extents from the end position of the previous data extents.

If the tape medium is already mounted the position of the tape head is sometimes in an intermediate point on the tape medium. If the reading of the file begins already read data should be taken into account. If the request specifies a certain part of the file to be estimated a length of the part among the file should be taken into account. In these cases the function inquires current positions to the tape head and calculates the read time information fileStartReadTime fileLeftReadTime based on the physical position of the requested file stored in the extent W L W L the current position of the tape head W L an offset representing a size of the already read data file offset and a length for specifying a part to be estimated length . The file offset and the length may be given as parameters of the request by the waiting time estimator .

For example if the tape head is positioned at the intermediate point W L the time taken to return from the point to S can be calculated based on Equation 1 by replacing the initial wrap position 0 by the current wrap position W and the initial longitudinal position lp by the current longitudinal position L . If some of data extent has been already read the reading time can be calculated based on Equation 2 by excluding data extents having an offset less than the specified file offset from summation over data extents and by replacing a start position Wand L by the current position W L . If the length of the part to be estimated length is specified summation may be taken over specific range of data extents which corresponds to the specified length. If end of the part having the specified length is positioned at intermediate point of data extent the ratio of the remaining data size within the data extent and the size of the data extent may be taken into consideration for calculating the reading time.

Referring back to the waiting time estimator estimates the waiting time by requesting the read time information to the function . In a particular embodiment the waiting time can be calculated by simply summing the seeking time fileStartReadTime and the reading time fileLeftReadTime of the reclamation target data for given timing which includes both of a time required for locating the reclamation target data and a time required for reading the reclamation target data. As shown in data may not be transferred during a time for locating the start position of the data extents of the requested file. Thus in other embodiment the waiting time may include merely a time required for locating the reclamation target data by the source tape drive T.

The migration target selector is configured to select migration target data on the disk tier based on whether migration of data to the target medium is expected to be finished within the waiting time estimated by the waiting time estimator . The selection of the migration target data is done by comparing a size of the file and an allowable size calculated from the waiting time and write transfer rate of the target medium T by the target tape driveT.

The copy module is configured to read the reclamation target data from the source medium S by the source tape drive S and to write the reclamation target data to the target medium T by the target tape driveT. The copy module may write the reclamation target data to the target medium T after the migration of the selected target data is completed. In a particular embodiment files may be copied from the source medium S as the copy source to the target medium T as the copy destination in a one by one manner by using the CP or SCP command.

Instead of reading from the source medium to the disk cache so as to change the file state to pre migrated state the files are directly read from the source medium S. Thus copy from the source medium S to the target medium T is conducted while leaving the file state to be migrated state.

The copy module may read data from the source medium S into the cache dedicated for data transfer in the reclamation and write the read data to the target medium T. Note that the tape drive may not serve as an initiator as in the case of the extended copy for direct transfer between the drives. Two tape drives S and T are used together and data copy is carried out between the source medium S and the target medium T in a one to one manner.

The migration module is configured to migrate the migration target data from the disk tier to the target medium T by the target tape drive T while reading e.g. which may include locating and or reading the reclamation target data from the source medium S by the source tape driveS. In contrast to the reclamation where reading from the source medium S strongly affects performance writing the migration target data to the target medium T controls speed of writing the target medium predominantly since the reading speed from the disk cache is much faster than the writing speed to the target medium T.

The estimation of the waiting time by the waiting time estimator the selection of the migration target data by the migration target selector and the migration of the migration target data by the migration module may be repeatedly performed before initiating a writing of each file or each group of files by the copy module .

The calculation of the waiting time and the selection of the migration target file will be described more detail with reference to .

Referring now to a flowchart depicting a process for reclaiming data from the source medium S to the target medium T is shown. As shown in process begins at step S. Note that the process shown in may be performed by the node allocated to handle the novel reclamation process in response to receiving a request for the novel reclamation from users or determining that a condition that triggers the novel reclamation is met.

At step S the node gets a name of next file to reclaim hereinafter a file to reclaim may be referred to as a reclamation target file from a file list on the source medium S. At step S the node starts locating the start position of the reclamation target file and reading the file on the source medium S by using the copy module .

In parallel to locating and reading the reclamation target file at step S the node estimates the waiting time Tr. At step S the node calculates an allowable file size S that can be migrated to the target medium T within the waiting time based on the estimated waiting time Tr and the write transfer rate of the target medium Xw. The allowable file size S can be calculated using Equation 3 Equation 3 where Xw represents the write transfer rate of the target medium T in Byte sec.

At step S the node determines whether there is an appropriate file with a size less than the calculated allowable size S or an appropriate combination of files with a total size less than the calculated allowable size S from among a plurality of files listed in a migration list. The migration list may include all files stored in the disk cache whose file state is resident state. Alternatively the migration list may include a group of resident files designated by the user. If the node determines that there is the appropriate file or the appropriate combination in step S YES then the appropriate file or the appropriate combination is selected as the migration target data and the process proceeds to step S.

For first target file FILE the waiting time Tr may be a sum of the seeking time T fileStartReadTime and the reading time T fileLeftReadTime of the first target file for given initial position just after mounting.

Referring back to at step S the node starts migrating the selected file to the target medium T. As shown in the migration of the selected file is performed by the target tape drive T while locating and or reading the reclamation target file from the source medium S by the source tape drive S. After completing the migration of the migration target file the process proceeds to step S. If the node determines that there is no appropriate file in the step S NO also the process branches to step S. At step S the node starts writing the reclamation target file of the source medium S to the target medium T. In the describing embodiment writing of the reclamation target file may be started after completing read of the reclamation target file.

At step S the node determines whether the reclamation is finished or not. If the node determines that the reclamation is not finished yet in step S NO then the process loops back to step S for next reclamation target file.

As shown in with regard to second target file FILE at the timing where the node completes the writing of the previous reclamation target file FILE the reading of the second target file FILE may be already started. In this situation already read data of the second target file should be taken into account. In response to a request from the waiting time estimator the function may calculates the seeking time fileStartReadTime and the reading time fileLeftReadTime of a remaining part of the second target file for given current position and file offset. Since the reading of the second target file FILE is already started the function returns the seeking time fileStartReadTime as zero. Thus in this case the waiting time Tr may be equal to the reading time T fileLeftReadTime of remaining part of the second target file.

Regarding third target file FILE at the timing where the node completes the writing of the previous reclamation target file FILE the reading of the third target file FILE may also be already completed. Therefore the node determines that there is no appropriate file in the step S NO and the process branches to step S. At step S the node starts writing the reclamation target file FILE .

Regarding fourth target file FILE at the timing where the node completes writing of the previous reclamation target file FILE the source tape drive S may be just in locating phase of the target file FILE . In this case the waiting time Tr may be a sum of remaining seeking time fileStartReadTime for given current position and the reading time fileLeftReadTime of the fourth target file.

Referring back to if the node determines that the reclamation is finished in step S YES then the process branches to step S and ends at step S.

In the embodiment shown in although the waiting time Tr is calculated by summing the seeking time fileStartReadTime and the reading time fileLeftReadTime of the reclamation target files for given condition the spare time that corresponds to times required for locating the reclamation target files which may include a time for locating beginning of each file and a time for locating start position of each data extent within the file can be preferably estimated for migration.

By virtue of the novel reclamation function according to one or more of the embodiments described herein even though the tape drive is operated as a reclamation target the data on the disk tier can be migrated to the target medium by the tape drive within a spare time during which the capability of the drive is not utilized for writing the reclamation target data transferred from the source medium S. Thus the drive resources can be effectively utilized at maximum. Occurrences of lowering the speed of the target medium or stopping the target medium due to waiting for data transfer can be reduced thereby keeping writing speeds high.

Even in a small scale system data can be prevented from being dispersed over a plurality of tape media and each tape medium can be utilized effectively. Also users can perform reclamation and migration processes together at off peak time during which the resources are relatively free or unused such as night.

In the aforementioned embodiment shown in the waiting time Tr is estimated by summing the seeking time fileStartReadTime and the reading time fileLeftReadTime for given condition. However in other embodiments the waiting time Tr can be calculated in different manners.

Referring to a timing chart during a reclamation process according to an exemplary embodiment. In the embodiment shown in the waiting time Tr is estimated by subtracting the expected writing time Twat from a sum of the seeking time and the reading time Tr T T T . The expected writing time may be calculated from a file size of the target file and the write transfer rate T file size Xw . In this case the waiting time Tr may correspond to a total seeking time for locating start position of the file and start position of each data extent of the file.

In other embodiment merely seeking time T may be simply used as the waiting time Tr. In this case the spare time that corresponds to a time required for locating the beginning of the reclamation target files can be estimated for migration.

In the aforementioned embodiment shown in and the estimation of the waiting time Tr the selection of the migration target data and the migration of the migration target data are repeatedly performed for each reclamation target file. However in other embodiment the waiting time Tr can be estimated for a group of reclamation target files and the estimation the selection and the migration can be repeatedly performed for each group of reclamation target files. In this embodiment a plurality of spare times for each reclamation target file in the group can be merged. Thus relatively large file can be migrated during the spare time. Also in the aforementioned embodiment shown in and writing of the reclamation target file starts after completing read of the reclamation target file. However in other embodiment writing of the reclamation target file may starts before completing read of the reclamation target file.

Also note that both modes of the migration can be applicable to the novel reclamation process with migration. In one embodiment migration during the novel reclamation process is performed in the first mode in which a target file is moved from the disk tier to the tape medium of the tape tier and a stub is leaved behind on the disk tier in place of the target file. Thus the file state of the migrated file becomes migrated . In other embodiment migration during the novel reclamation process is performed in the second mode in which a target file is copied from the disk tier to the tape medium of the tape tier such that identical copies of the target file exist on the disk tier and the tape tier . Thus the file state of the migrated file becomes pre migrated . It follows that in some of the embodiments described herein the source medium and the target medium may include tape media while the first and second drives includes tape drives. Moreover the storage device as described herein may constitute an upper tier while the tape drives constitute a lower tier e.g. in a hierarchical storage system e.g. see .

In further other embodiments the novel reclamation techniques can be used in combination with any known technologies such as a Recommended Access Order RAO capability in which a fastest order for data reading is provided by the tape drive.

In the aforementioned embodiments the novel reclamation function for copying data from the source medium S to the target medium T has been described. Such inefficiencies may also arise in inter generation copies in which data on an old generation tape medium is copied to a new generation tape medium. Idea of the novel reclamation function can be applicable also to the inter generation copy function. Hereinafter a novel inter generation copy function in which migration is performed during a spare time of inter generation copy process according to an illustrative embodiment will be described in detail by referring series of .

Referring to a block diagram of an inter generation copy module according to an exemplary embodiment is illustrated. In a detailed block diagram of the inter generation copy module is depicted with other components related to the novel inter generation copy function.

Typically transfer rate for a new generation is higher than those for old generations. In this case the write transfer rate to the new generation medium may be adapted to the read transfer rate for the older generation by a speed matching capability of the tape drives.

For example implementations of the hierarchical storage system may support one or more generations. Let assume that maximum transfer rate for new generation medium is three times faster than that for old generation medium. Due to this difference in the transfer rates if an old generation medium is used as the copy source S or a reclamation source tape and a new generation medium is the copy target medium T or a reclamation target tape then the speed of writing data to the new generation medium will be one third or less of the specification value which is a hindrance to full utilization of maximum transfer rate for the new generation medium.

In one or more embodiments described herein the novel inter generation copy function for copying data from the source medium S to the target medium T in which migration is performed during a spare time of the inter generation copy may be incorporated into the hierarchical storage system .

As shown in the inter generation copy module includes a waiting time estimator a migration target selector a copy module and a migration module and a cache or buffer for temporarily storing data transferred from the source medium S.

Similar to the novel reclamation process according to the first embodiment the waiting time estimator is configured to estimate a waiting time for the copy target data to be transferred from the source medium S by requesting the read time information of a file or a group of files to the tape file system module through API. In the second embodiment the waiting time may include a time required for accumulating predetermined amount of read data into the cache by the source tape drive S.

According to an example which is in no way intended to limit the invention the maximum read transfer rate for the old generation medium may be one third of maximum write transfer rate for the new generation. Accordingly the amount of the accumulation may be adjusted such that two thirds of data writing to the new generation target medium T are allocated to the migration from the disk cache and one third of the data writing is used for the inter generation copy. The amount of the accumulation may also be adjusted to have a size more than maximum file size so as to accommodate a plurality of files in the cache .

In a particular embodiment the time required for accumulating the predetermined amount of data can be calculated based on the physical position of the copy target data on the source medium S. In this embodiment fragmented files on the source medium S can be defragmented during the inter generation copy. Alternatively in other embodiment the accumulation time may be calculated simply based on read transfer rate for the source medium S.

The migration target selector is configured to select migration target data on the disk tier based on whether migration of data to the target medium is expected to be finished within the waiting time. The copy module is configured to read the copy target data from the source medium S by the source tape drive S and to write the copy target data to the target medium T by the target tape driveT via the cache dedicated for data transfer in the inter generation copy. Note that maximum read transfer rate for the source medium S by the source tape drive S may be slower than maximum write transfer rate for the target medium T by the target tape drive T.

The migration module is configured to migrate the migration target data from the disk tier to the target medium T by the target tape drive T while reading the copy target data from the source medium S by the source tape driveS.

The estimation of the waiting time by the waiting time estimator the selection of the migration target data by the migration target selector and the migration of the migration target data by the migration module may be repeatedly performed in response to detecting that the amount of the data accumulated in the cache falls below a predetermined level as a result of writing by the copy module .

The calculation of the waiting time and the selection of the migration target file will be described more detail with referring to the series of .

Referring now to a flowchart depicting a process for copying data from the source medium S to the target medium T having different generations is shown. As shown in process begins at step S. Note that the process shown in may be performed by the node allocated to handle the novel inter generation copy process in response to receiving a request from users or detecting that a condition to trigger is met.

At step S the node starts reading the copy target data on the source medium S by using the copy module . In parallel to reading the copy target data at step S the node identifies files required for accumulating the predetermined amount in the cache from a file list on the source medium S. At step S the node estimates the waiting time Tr based on the identified files.

In an example shown in for first time two files including FILE and FILE are identified. The waiting time estimator requests the read time information of the first file and a part of the second file to the function . The length of the part may be designated as request parameter such that total file size of the first file and the part of the second file is equal to the predetermined amount THU 0 .

At step S the node calculates allowable file size S that can be migrated to the target medium T within the estimated waiting time based on the waiting time Tr and the write transfer rate of the target medium Xw. At step S the node determines whether there is an appropriate file with a size less than the calculated allowable size S or an appropriate combination of files with a total size less than the calculated allowable size S from among a plurality of files listed in the migration list.

If the node determines that there is the appropriate file or combination in step S YES then the appropriate file or the appropriate combination is are selected as the migration target data and the process proceeds to step S. At step S the node starts migrating the selected file to the target medium T. As shown in the migration of the selected file is performed by the target tape drive T while reading the copy target data from the source medium S by the source tape drive S. After initiating the migrating of the migration target file the process proceeds to step S. If the node determines that there is no file in the step S NO the process branches to step S.

At step S the node determines whether the amount of the data accumulated in the cache reaches upper level THU or not. If the node determines that the amount of the data accumulated in the cache does not reach the upper level THU in step S NO the process loops back to step S. The node waits for cache level to reach the upper level THU. If the node determines that the amount reaches upper level THU then the process proceeds to step S.

At step S the node starts writing data of source medium S from the cache to the target medium T by the target tape drive T. At step S the node determines whether the amount of the data accumulated in the cache falls below the lower level THL or not. If the node determines that the amount of the data accumulated in the cache does not fall the lower level THL in the step S NO the process loops back to step S. The node waits for the cache level to fall below the lower level THL . If the node determines that the cache level falls below the lower level THL in step the S YES then the process loops back to step S for subsequent data.

In the example shown in for second time also two files e.g. including FILE and FILE are identified at step S. The waiting time estimator requests the read time information of the third file and a part of the fourth file to the function . The length of the part may be designated such that total file size of the third file and the part of the fourth file is equal to the remaining amount.

In a particular embodiment a unit of writing the data of the source medium S to the target medium T may be a file or plurality of files. In this embodiment if a last file stored in the cache is not ready for writing at the timing where node completes the writing of previous one inter generation copy may be terminated at the file boundary and the writing of the last file may be conducted after next migration. In this case accumulation time may be calculated by subtracting already read data of the last file.

Although not shown in if the node determines that the inter generation copy is finished then the process ends.

As shown in it may be assumed that maximum write transfer rate for the new generation is q times faster than that for old generation medium thus q 1 q of data writing to the new generation target medium T may be allocated to the migration from the disk cache while 1 q of the data writing is used for the inter generation copy.

By virtue of the novel inter generation function according to one or more embodiments described herein even though the tape drive is used as a copy target the data on the disk tier may be migrated to the target medium by the tape drive within an spare time during which the capability of the drive is not utilized for writing the copy target data transferred from the source medium S. The spare time may correspond to a waiting time due to speed difference between the source medium S and the target medium T. Thus the drive resources can be effectively utilized at an improved efficiency. Occurrences of lowering the speed of the target medium or stopping the target medium due to waiting for data transfer can be reduced thereby keeping writing speeds high.

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

Moreover a system according to various embodiments may include a processor and logic integrated with and or executable by the processor the logic being configured to perform one or more of the process steps recited herein. By integrated with what is meant is that the processor has logic embedded therewith as hardware logic such as an application specific integrated circuit ASIC a FPGA etc. By executable by the processor what is meant is that the logic is hardware logic software logic such as firmware part of an operating system part of an application program etc. or some combination of hardware and software logic that is accessible by the processor and configured to cause the processor to perform some functionality upon execution by the processor. Software logic may be stored on local and or remote memory of any memory type as known in the art. Any processor known in the art may be used such as a software processor module and or a hardware processor such as an ASIC a FPGA a central processing unit CPU an integrated circuit IC a graphics processing unit GPU etc.

It will be clear that the various features of the foregoing systems and or methodologies may be combined in any way creating a plurality of combinations from the descriptions presented above.

It will be further appreciated that embodiments of the present invention may be provided in the form of a service deployed on behalf of a customer to offer service on demand.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. Thus the breadth and scope of a preferred embodiment should not be limited by any of the above described exemplary embodiments but should be defined only in accordance with the following claims and their equivalents.

