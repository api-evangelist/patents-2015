---

title: Recommendation systems and methods using interest correlation
abstract: A search technology generates recommendations with minimal user data and participation, and provides better interpretation of user data, such as popularity, thus obtaining breadth and quality in recommendations. It is sensitive to the semantic content of natural language terms and lets users briefly describe the intended recipient (i.e., interests, eccentricities, previously successful gifts). Based on that input, the recommendation software system and method determines the meaning of the entered terms and creatively discover connections to gift recommendations from the vast array of possibilities. The user may then make a selection from these recommendations. The search/recommendation engine allows the user to find gifts through connections that are not limited to previously available information on the Internet. Thus, interests can be connected to buying behavior by relating terms to respective items.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09576313&OS=09576313&RS=09576313
owner: Piksel, Inc.
number: 09576313
owner_city: Wilmington
owner_country: US
publication_date: 20150417
---
This application is a continuation of U.S. application Ser. No. 14 098 433 filed Dec. 5 2013 which is a continuation of U.S. application Ser. No. 13 359 288 filed Jan. 26 2012 now U.S. Pat. No. 8 615 524 issued Dec. 24 2013 which is a continuation of U.S. application Ser. No. 12 781 542 filed May 17 2010 now U.S. Pat. No. 8 122 047 issued Feb. 21 2012 which is a continuation of U.S. application Ser. No. 11 807 191 filed May 25 2007 now U.S. Pat. No. 7 734 641 issued Jun. 8 2010 which is related to U.S. application Ser. No. 11 807 218 filed May 25 2007 now abandoned. The entire teachings of the above applications are incorporated herein by reference.

At times it can be difficult for an online user to shop for products or find an appropriate product or service online. This is especially true when the user does not know exactly what he or she is looking for. Consumers for example expect to be able to input minimal information as search criteria and in response get specific targeted and relevant information. The ability to consistently match a product or service to a consumer s request for a recommendation is a very valuable tool as it can result in a high volume of sales for a particular product or company. Unfortunately effectively accommodating these demands using existing search and recommendation technologies requires substantial time and resources which are not easily captured into a search engine or recommendation system. The difficulties of this process are compounded by the unique challenges that online stores and advertisers face to make products and services known to consumers in this dynamic online environment.

Recommendation technology exists that attempts to predict items such as movies music and books that a user may be interested in usually based on some information about the user s profile. Often this is implemented as a collaborative filtering algorithm. Collaborative filtering algorithms typically analyze the user s past behavior in conjunction with the other users of the system. Ratings for products are collected from all users forming a collaborative set of related interests e.g. users that liked this item have also like this other one . In addition a user s personal set of ratings allows for statistical comparison to a collaborative set and the formation of suggestions. Collaborative filtering is the recommendation system technology that is most common in current e commerce systems. It is used in several vendor applications and online stores such as Amazon.com.

Unfortunately recommendation systems that use collaborative filtering are dependent on quality ratings which are difficult to obtain because only a small set of users of the e commerce system take the time to accurately rate products. Further click stream and buying behavior as ratings are often not connected to interests because the user navigation pattern through the e commerce portal will not always be a precise indication of the user buying preferences. Additionally a critical mass is difficult to achieve because collaborative rating relies on a large number of users for meaningful results and achieving a critical mass limits the usefulness and applicability of these systems to a few vendors. Moreover new users and new items require time to build history and the statistical comparison of items relies on user ratings of previous selections. Furthermore there is limited exposure of the long tail such that the limitation on the growth of human generated ratings limits the number of products that can be offered and have their popularity measured.

The long tail is a common representation of measurements of past consumer behavior. The theory of the long tail is that economy is increasingly shifting away from a focus on a relatively small number of hits e.g. mainstream products and markets at the head of the demand curve and toward a huge number of niches in the tail. is a graph illustrating an example of the long tail phenomenon showing the measurement of past demand for songs which are ranked by popularity on the horizontal axis. As illustrated in the most popular songs are made available at brick and mortar B M stores and online while the least popular songs are made available only online.

To compound problems most traditional e commerce systems make overspecialized recommendations. For instance if the system has determined the user s preference for books the system will not be capable of determining the user s preference for songs without obtaining additional data and having a profile extended thereby constraining the recommendation capability of the system to just a few types of products and services.

There are rule based recommendation systems that rely on user input and a set of pre determined rules which are processed to generate output recommendations to users. A web portal for example gathers input to the recommendation system that focuses on user profile information e.g. basic demographics and expressed category interests . The user input feeds into an inference engine that will use the pre determined rules to generate recommendations that are output to the user. This is one simple form of recommendation systems and it is typically found in direct marketing practices and vendor applications.

However it is limited in that it requires a significant amount of work to manage rules and offers e.g. the administrative overhead to maintain and expand the set of rules can be considerably large for e commerce systems . Further there is a limited number of pre determined rules e.g. the system is only as effective as its set of rules . Moreover it is not scalable to large and dynamic e commerce systems. Finally there is limited exposure of the long tail e.g. the limitation on the growth of a human generated set of inference rules limits the number of products that can be offered and have their popularity measured .

Content based recommendation systems exist that analyze content of past user selections to make new suggestions that are similar to the ones previously selected e.g. if you liked that article you will also like this one . This technology is based on the analysis of keywords present in the text to create a profile for each of the documents. Once the user rates one particular document the system will understand that the user is interested in articles that have a similar profile. The recommendation is created by statistically relating the user interests to the other articles present in a set. Content based systems have limited applicability as they rely on a history being built from the user s previous accesses and interests. They are typically used in enterprise discovery systems and in news article suggestions.

In general content based recommendation systems are limited because they suffer from low degrees of effectiveness when applied beyond text documents because the analysis performed relies on a set of keywords extracted from textual content. Further the system yields overspecialized recommendations as it builds an overspecialized profile based on history. If for example a user has a user profile for technology articles the system will be unable to make recommendations that are disconnected from this area e.g. poetry . Further new users require time to build history because the statistical comparison of documents relies on user ratings of previous selections.

In today s dynamic online environment the critical nature of speed and accuracy in information retrieval can mean the difference between success and failure for a new product or service or even a new company. Consumers want easy and quick access to specific targeted and relevant recommendations. The current information gathering and retrieval schemes are unable to efficiently provide a user with such targeted information. Nor are they able to accommodate the versatile search queries that a user may have.

Thus one of the most complicated aspects of developing an information gathering and retrieval model is finding a scheme in which the cost benefit analysis accommodates all participants i.e. the users the online stores and the developers e.g. search engine providers . The currently available schemes do not provide a user friendly developer friendly and financially effective solution to provide easy and quick access to quality recommendations.

Computer implemented systems and methods for recommending products and services are provided by the present invention. Online information such as user profiles are processed to extract keywords. Multiple user profiles are correlated based on interests and product references in the profiles. Keywords for example that commonly appear together in user profiles can be identified. A search query is received from for example a search engine. The search query may be initiated by a user who is shopping online for a product or service. The search query may be a request for a gift recommendation or a trip recommendation. When the search query is processed it is expanded with additional search terms related to the search query. The search query is expanded using one or more of the identified co occurring keywords from the processed user profiles.

When identifying the co occurring keywords from the user profiles the frequency with which a keyword appears in conjunction with another keyword is computed in the overall defined population. The degree to which the two keywords tend to occur together can be computed. A ratio indicating the frequency with which the two keywords occur together is determined. A correlation index indicating the likelihood that users interested in one of the keywords will also be interested in the other keyword is determined. The computed degree the determined ratio and the correlation index can be processed to determine a percentage of co occurrence for each keyword. The percentage of co occurrence for each keyword is used to determine a correlation ratio which indicates how often a co occurring keyword is present when another co occurring keyword is present as compared to how often it occurs on its own. This information is used in processing keywords in queries to identify matching keywords. The matching keywords can be used to search products services or internet sites to generate recommendations.

The user profiles can be processed to extract keywords using a web crawler. User profiles such as personal profiles on myspace.com or friendster.com on the Internet can be analyzed. Keywords can be extracted from the analyzed user profiles.

Term frequency inverse document frequency tf idf weighing measures can be used to determine how important an identified keyword is to a subject profile in a collection or corpus of profiles. The importance of the identified keyword can increase proportionally to the number of times it appears in the document offset by the frequency the identified keyword occurs in the corpus. The tf idf calculation can be used to determine the weight of the identified keyword or node based on its frequency and it can be used for filtering in out other identified keywords based on their overall frequency. The tf idf scoring can be used to determine the value of the identified keyword as an indication of user interest. The tf idf scoring can employ the topic vector space model TVSM to produce relevancy vector space of related keywords interests.

Each identified keyword can be used to generate an output node and a super node. The output nodes are normally distributed close nodes around each token of the original query. The super nodes act as classifiers identified by deduction of their overall frequency in the corpus. A super node for example would be rock music or hair bands. However if the idf value of an identified keyword is below zero then it is determined not to be a super node. A keyword like music for example is not considered a super node classifier because its idf value is below zero in that it is too popular or broad to yield any indication of user interest.

A software system is implemented for recommending products and services. The software system includes a web crawler that processes user profiles to extract keywords. A handler in communication with the web crawler receives keywords that have been identified as occurring together in the same user profiles. A recommendation engine can be provided to expand a given search query with additional search terms related to the search query as determined by the correlation ratio. The additional search terms are determined using one or more of the identified co occurring keywords.

The search technology of the present invention is sensitive to the semantic content of words and lets the searcher briefly describe the intended recipient e.g. interests eccentricities previously successful gifts . As illustrated in these terms may be descriptors such as Male Outdoors and Adventure. Based on that input the recommendation software of the present invention may employ the meaning of the entered terms to creatively discover connections to gift recommendations from the vast array of possibilities referred to herein as the infosphere. The user may then make a selection from these recommendations . The engine allows the user to find gifts through connections that are not limited to information previously available on the Internet connections that may be implicit. Thus as illustrated in interests can be connected to buying behavior by relating terms to respective items 

While taking advantage of the results provided by statistical methods of recommendation example embodiments of the present invention perform an analysis of the meaning of user data to achieve better results. In support of this approach the architecture of the recommendation system which is also referred to herein as the Interest Analysis Engine IAE as illustrated in is centered on the combination of the results of two components. The first component is referred to herein as Interest Correlation Analysis ICA engine and in general it is an algorithm that focuses on the statistical analysis of terms and their relationships that are found in multiple sources on the Internet a global computer network . The second component is referred to herein as Concept Specific Ontology CSO and in general it is an algorithm that focuses on the understanding of the meaning of user provided data.

Preferably the recommendation system includes a web based interface that prompts a user to input a word or string of words such as interests age religion or other words describing a person. These words are processed by the ICA engine and or the CSO which returns a list of related words. These words include hobbies sports musical groups movies television shows food and other events processes products and services that are likely to be of interest to the person described through the inputted words. The words and related user data are stored in the database for example.

The ICA engine suggests concepts that a person with certain given interests and characteristics would be interested in based upon statistical analysis of millions of other people. In other words the system says If you are interested in A then based upon statistical analysis of many other people who are also interested in A you will probably also be interested in B C and D. 

In general traditional search technologies simply fail their users because they are unable to take advantage of relations between concepts that are spelled differently but related by the properties of what they denote. The CSO processor uses a database that builds in closeness relations based on these properties. Search algorithms then compare concepts in many ways returning more relevant results and filtering out those that are less relevant. This renders information more useful than ever before.

The search technology of the present invention is non hierarchical and surpasses existing search capabilities by placing each word in a fine grained semantic space that captures the relations between concepts. Concepts in this dynamic updateable database are related to every other concept. In particular concepts are related on the basis of the properties of the objects they refer to thereby capturing the most subtle relations between concepts. This allows the search technology of the present invention to seek out concepts that are close to each other either in general or along one or more of the dimensions of comparison. The user such as the administrator may choose which dimension s is are most pertinent and search for concepts that are related along those lines.

In one preferred embodiment the referent of any word can be described by its properties rather than using that word itself. This is the real content or meaning of the word. In principle any word can be put into a semantic space that reflects its relationship to other words not through a hierarchy of sets but rather through the degree of shared qualities between referents of the words. These related concepts are neither synonyms homonyms holonyms nor meronyms. They are nonetheless similar in various ways that CSO is able to highlight. The search architecture of the present invention therefore allows the user to execute searches based on the deep structure of the meaning of the word.

As illustrated in the ICA engine and the CSO are complementary technologies that can work together to create the recommendation system of the present invention. The statistical analysis of the ICA engine of literal expressions of interest found in the infosphere creates explicit connections across a vast pool of entities. The ontological analysis of CSO creates conceptual connections between interests and can make novel discoveries through its search extension.

The Internet or infosphere offers a massive pool of actual consumer interest patterns. The commercial relevance of these interests is that they are often connected to consumers buying behavior. As part of the method to connect interests to products this information can be extracted from the Internet or the infosphere by numerous protocols and sources and stored in a data repository . The challenge is to create a system that has the ability to retrieve and analyze millions of profiles and to correlate a huge number of words that may be on the order of hundreds of millions.

Referring to the recommendation system functions by extracting keywords retrieved from the infosphere and stored in the data repository . An example output of the ICA engine is provided in the table in . Search terms processed through the ICA engine return numerous keywords that are accompanied by numbers which represent the degree to which they tend to occur together in a large corpus of data culled from the infosphere . In the example the search term nature appears 3573 times in the infosphere locations investigated. The statistical analysis also reveals that the word ecology appears 27 times in conjunction with the word nature. 

The R Factor column indicates the ratio between the frequency of the two terms occur together and the frequency of one term i.e. 27 occurrences of ecology and nature divided by 3573 occurrences of nature 0.007556675 . The correlation index indicates the likelihood that people interested in nature will also be interested in ecology i.e. the strength of the relationship between the search term and the keyword compared to the average user. The calculation of this correlation factor was determined through experimentation and further detail below. In this particular case the analysis output by the algorithm indicates that people interested in nature will be approximately 33.46 times more likely to be interested in ecology than the average person in society.

There are two main stages involved in the construction and use of the ICA engine database construction and population and data processing.

The ICA engine employs several methods of statistically analyzing keywords. For instance term frequency inverse document frequency tf idf weighting measures how important a word is to a document in a collection or corpus with the importance increasing proportionally to the number of times a word appears in the document offset by the frequency of the word in the corpus. The ICA engine uses tf idf to determine the weights of a word or node based on its frequency and is used primarily for filtering in out keywords based on their overall frequency and the path frequency.

The ICA then using the tf idf scoring method employs the topic vector space model TVSM as described in Becker J. and Kuropka D. Topic based Vector Space Model Proceedings of BIS 2003 to produce relevancy vector space of related keywords interests. The ICA also relies on the Shuffled Complex Evolution Algorithm described in Y. Tang P. Reed and T. Wagener How effective and efficient are multiobjective evolutionary algorithms at hydrologic model calibration Hydrol. Earth Syst. Sci. 10 289 307 2006 J. Li X. Li C. M. Frayn P. Tino and X. Yao Understanding and Predicting Dynamical Behaviours in Financial Markets Financial Application Research in CERCIA 10th Annual Workshop on Economic Heterogeneous Interacting Agents WEHIA 2005 University of Essex UK June 2005 Phillip Jordan 1 2 Alan Seed 3 Peter May 3 and Tom Keenan 3 Evaluation of dual polarization radar for rainfall runoff modelling a case study in Sydney Australia Sixth International Symposium on Hydrological Applications of Weather Radar 2004 Juan Liu Iba H. Selecting Informative Genes Using a Multiobjective Evolutionary Algorithm Proceedings of the 2002 Congress on Evolutionary Computation 2002. All the above documents relating to tf idf TVSM and Shuffled Complex Evolution are incorporated herein by reference.

In the Level 1 evolution each keyword is fed into the first evolution separator to generate two sets of nodes output nodes and super nodes . These two types of nodes are produced by the Shuffled Complex Evolution Algorithm. The output nodes are normally distributed close nodes around each token of the original query. The super nodes act as classifiers identified by deduction of their overall frequency in the corpus. For example let us assume a user likes the bands Nirvana Guns n Roses Pearl Jam and The Strokes. These keywords are considered normal nodes. Other normal nodes the ICA would produce are for example drums guitar song writing Pink Floyd etc. A deducted super node for example would be rock music or hair bands. However a keyword like music for example is not considered a super node classifier because its idf value is below zero meaning it is too popular or broad to yield any indication of user interest.

The algorithm uses tf idf for the attenuation factor of each node. This factor identifies the noisy super nodes as well as weak nodes . The set of super nodes is one to two percent of the keywords in the corpus and is identified by their normalized scores given their idf value greater than zero. The idf values for the super nodes are calculated using the mean value of the frequency in the corpus and an arbitrary sigma factor of six to ten. This generates a set of about five hundred super nodes in a corpus of sixty thousand keywords.

In this stage the ICA also calculates the weight of the node according to the following formula MeanPathWeight idf Equation 1 where 

For a keyword Qi ICA must determine all the nodes connected to Qi. For example there may be one thousand nodes. Each node is connected to Qi with a weight or frequency . This weight represents how many profiles people assumed Qi and the node simultaneously. The mean frequency M of Qi in the corpus of nodes is calculated. For each node Nj we calculate the weight of the path RP from Qi to Nj by dividing the frequency of Qi in Nj by M. The ICA then calculates the cdf erfc value of this node s frequency for sampling error correction.

Any node with a score less than zero negative weight is classified as classifier super node. The weight for the super nodes are then recalculated as follows cdf Equation 3 where 

The erfc error function is discussed in detail in Milton Abramowitz and Irene A. Stegun eds. Handbook of Mathematical Functions with Formulas Graphs and Mathematical Tables New York Dover 1972 Chapter 7 the teachings of which are incorporated herein by reference.

The weights of the output nodes and the super nodes are then normalized using z score normalization guaranteeing that all scores are between zero and one and are normally distributed. The mean M and standard deviation STDV of the output nodes weights are calculated with the weight for each node recalculated as follows Equation 4 where 

The Level 1 super nodes are then fed with their respective weights into Level 2 evolution . After being fed through a second evolution separator the Level 2 evolution super nodes are then discarded as noisy super nodes . Separator also discards some nodes as weak output nodes . Each output node s weight is calculated the same way as above and multiplied by the weight of its relative Level 1 super node .

This is repeated for each keyword and the combination of keywords to yield sets of nodes and super nodes. The final node set is an addition process of the Level 1 output nodes and the Level 2 output nodes .

Referring back to the main architecture of the ICA engine consists of a computerized database such as Microsoft Access or SQL server enterprise edition that is organized into two tables.

The ICA engine uses commercially available web parsers and scrapers to download the interests found on these sites in the infosphere into Table 1 Field B. Each interest or keyword Table 1 Field B is associated with the UserID acquired from the source website in the infosphere which is placed into Table 1 Field A. If possible an associated Class is entered into Field C from the source website in the infosphere . One record in Table 1 therefore consists of a word or phrase Keyword in Field B the UserID associated with that entry in Field A and an associated Class if possible in Field C. Therefore three parsed social networking profiles from the infosphere placed in Table 1 might look like the following 

Once this process is determined to be complete Table 2 in database is constructed in the following manner. An SQL query is used to isolate all of the unique keyword and class combinations in Table 1 and these are placed in Field A Keyword and Field B Class respectively in Table 2. Table 2 Field C Occurrence is then populated by using an SQL query that counts the frequency with which each Keyword and Class combination occurs in Table 1. In the above example each record would score 1 except CSI Television which would score 2 in Table 2 Field C.

Table 2 Field D Popularity is populated by dividing the number in Table 2 Field C by the total number of unique records in Table 1 Field A. Therefore in the above example the denominator would be 3 so that Table 2 Field D represents the proportion of unique UserIDs that have the associated Keyword and Class combination. A score of 1 means that the Keyword is present in all UserIDs and 0.5 means it is present in half of the unique UserIDs which represents individual profiles scraped from the Internet . Therefore Table 2 for the three parsed social networking profiles placed in Table 1 might look like the following 

A web based interface as illustrated in created using C or a similar programming language may provide a text box for a user to enter search words that he or she would like to process on the ICA engine . A Search button is then placed next to the text box to direct the interface to have the search request processed.

When a word or group of words is entered in the text box and search is clicked the following steps are taken. All of the UserIDs from Table 1 that contain that Keyword are found and counted. A table shown below in Table 3 is then dynamically produced of all the co occurring words in those profiles with the number of occurrences of each one . This number is then divided by the total number of unique UserIDs that include the entered word to give a percentage of co occurrence .

The percentage of co occurrence is then divided by the value in Table 2 Field D Popularity of each co occurring word to yield a correlation ratio indicating how much more or less common the co occurring word is when the entered word is present. This correlation ratio is used to order the resulting list of co occurring words which is presented to the user. As illustrated in when multiple words are entered by the user only profiles containing all the entered words would be counted but otherwise the process would be the same. The list of results can be further filtered using the Class field to show only resulting words from Classes of interest to the user. A final results table when the word Fashion is entered might look like this 

Preferably the main goal behind the CSO approach 310 is the representation of the semantic content of the terms without a need for user feedback or consumer profiling as in the prior art. As such the system is able to function without any statistical investigation. Instead the user data is analyzed and correlated according to its meaning

Unlike traditional search technology the present invention s CSO semantic map as illustrated in enables fine grained searches that are determined by the user s needs. CSO search technology therefore offers the help of nuanced and directed comparisons by searching the semantic space for relations between concepts. In short the present invention s CSO provides a richly structured search space and a search engine of unprecedented precision.

Concepts are the core of the CSO . A concept is a term one or more words with content of which the CSO has knowledge. Concepts are put into different classes. The classes can be for example objects states animates and events . A concept can exist in one or more class. The following is an example of four concepts in the CSO along with the respective class 

While traditional taxonomy can classify terms using a hierarchy according to their meaning it is very limited with regard to the relationships they can represent e.g. parent child siblings . Conversely the present invention s ontological analysis classifies terms in multiple dimensions to enable the identification of similarities among concepts in diverse forms. However in doing so it also introduces severe complexities in the development. For instance identifying dimensions believed to be relevant to meaningful recommendations requires extensive experimentation so that a functional model can be conceived.

The CSO uses properties and these properties have one or more respective property values. An example of a property is temperature and a property value that belongs to that property would be cold. The purpose of properties and property values in the CSO is to act as attributes that capture the content of a concept. Table 5 below is a simplistic classification for the concept fruit 

Property values are also classed event object animate state . Concepts are associated to the property values that share the same class as themselves. For instance the concept accountant is an animate and hence all of its associated property values are also located in the animate class.

The main algorithm that the CSO uses was designed to primarily return concepts that represent objects. Because of this there is a table in the CSO that links property values from events animates and states to property values that are objects. This allows for the CSO to associate concepts that are objects to concepts that are from other classes. An example of a linked property value is shown below 

Further the CSO may consider certain properties to be stronger than others referred to as power properties. Two such power properties may be User Age and User Sex. The power properties are used in the algorithm to bring concepts with matching power properties to the top of the list . If a term is entered that has power properties the final concept expansion list is filtered to include only concepts that contain at least one property value in the power property group. By way of example if the term woman is entered into the CSO the CSO will find all of the property values in the database for that concept. One of the property values for woman is Sex Female. When retrieving similar concepts to return for the term woman the CSO will only include concepts that have at least one property value in the sex property group that matches one of the property values of the entered term woman. 

A key differentiator of the present invention s CSO technology is that it allows for a search of wider scope i.e. one that is more general and wide ranging than traditional data mining. Current implementations such as Google Sets as illustrated in however are purely based on the statistical analysis of the occurrences of terms on the World Wide Web.

In fact this difference in technology is highlighted when comparing with B and D. The output list from the CSO algorithm based on three input words glue tape nail as illustrated in is considerably larger and more diverse than the output list generated by the CSO algorithm with two words glue tape as input as shown in . In contrast the statistical Google Sets list of is smaller than the list of because that technology relies only on occurrences of terms on the World Wide Web.

In operation as illustrated in the flow chart of an example embodiment of the CSO at step takes a string of terms and at step analyzes the terms. At step the CSO parses the entry string into unique terms and applies a simple natural language processing filter. At step a pre determined combination of one or more words is removed from the string entered. Below in Table 7 is an example list of terms that are extracted out of the string entered into the application 

The CSO attempts to find the individual parsed terms in the CSO list of concepts . If a term is not found in the list of known concepts the CSO can use simple list and synsets to find similar terms and then attempt to match these generated expressions with concepts in the CSO . In another example the CSO may use services such as WordNet to find similar terms. The order of WordNet expansion is as follows synonyms noun synonyms verb hypernyms noun co ordinate terms noun co ordinate terms verb meronyms noun. This query to WordNet produces a list of terms the CSO attempts to find in its own database of terms . As soon as one is matched the CSO uses that concept going forward. If no term from the WordNet expansion is found that term is ignored. If only states from the original term list are available the CSO retrieves the concept thing and uses it in the calculation going forward.

The CSO then creates property value PV sets based on the concepts found in the CSO concepts . The list of initial retrieved concepts is referred to as C. Three property value sets are retrieved for C a PV set Intersect C n v a b PV set Union C n v a where n is noun v is verb and a is animate and PV set Union C s where property value yes 1 for states.

The CSO then performs similarity calculations and vector calculation using weights of each PV set. Weighted Total Set WTS is the summation of weights of all property values for each PV set. Weighted Matches WM is the summation of weights of all matching PVs for each CSO concept relative to each PV set. The Similarity Score S is equal to WM WTS.

The CSO then applies the power property filter to remove invalid concepts. At step the CSO then creates a set of concepts Cbased on the following rules. Cis the subset of CSO nouns where S 0. If Chas fewer than X elements X 60 for default then use S 0 followed by S 0 to complete set. Order keywords by S S Sand take the top n values n 100 for default . Order keywords again by S S Sand take the top x values x 60 for default .

At step results processing occurs. The results mixer determines how the terms are fed into the ICA or CSO and how data in turn is fed back between the two systems. In addition rules can be applied which filter the output to a restricted set e.g. removing foul language or domain inappropriate terms . The power properties that need to be filtered are determined. The CSO domain to use and the demographic components of the ICA database to use are also determined. The results processing connects to the content databases to draw back additional content specific results e.g. products not just a keyword cloud . For example at step it connects to the CSO tagged product database of content e.g. products or ads which has been pre tagged with terms in the CSO database. This access enables the quick display of results. At it connects to the e commerce product database which is an e commerce database of products e.g. Amazon . The results processor passes keywords to the database to search text for best matches and display as results. At the results are presented using the user interface application programming interface component of this process. The results are displayed for example to the user or computer. At the search results can be refined. For example the user can select to refine their results by restricting results to a specific keyword s Property Value s PV or an e commerce category such as Amazon s BN categories .

The CSO may have users ontologists who edit the information in it in different ways. Management tools are provided to for example set user permissions. These users will have sets of permissions associated with them to allow them to perform different tasks such as assigning concepts to edit etc. The editing of users using the management tools should allow user creation deletion and editing of user properties such as first name last name email address and password and user permissions such as administration privileges.

Users should have a list of concepts that they own at any given time. There are different status tags associated with a concept such as incomplete for review and complete. A user will only own a concept while the concept is either marked with an incomplete status or a status for review. When a concept is first added to the CSO concepts it will be considered incomplete. A concept will change from incomplete to for review and finally to complete. Once the concept moves to the complete status the user will no longer be responsible for that concept. A completed concept entry will have all of its property values associated with it and will be approved by a senior ontologist.

An ontologist may input concept data using the Concept Input Form as illustrated in . illustrate the Concept Input Form for the concept door . The Concept Input Form allows the ontologist to assign synonyms such as portal for the concept . Further a list of properties such as Origin Function Location Of Use and Fixedness is provided with associated values . Each value such as Organic Object Inorganic Natural Artifact material and so on has a method to select that value. Here Artifact mostly indoors and fixed are selected to describe the Origin Location Of Use and Fixedness of a door respectively. Further there is a description field that may describe the property and each value in helping the ontologist correctly and accurately input the concept data using the Concept Input Form . similarly illustrate the Concept Input Form for the concept happy . Here the values Animate Like Happy Funny Blissful and Yes are selected to describe the properties Describes Love and Happiness for the concept happy respectively.

Further as described above with reference to each property value has a corresponding weight coefficient. An ontologist may input these coefficient values using the Settings form as illustrated in . Here each value associated with each property may be assigned a coefficient on a scale of 1 to 10 with 1 being a low weighting and 10 being a high weighting. These properties values and descriptions correspond to the properties values and descriptions as illustrated in with reference to the Concept Input Form .

The data model can support the notion of more than one ontology. New ontologies will be added to the CSO . When a new ontology is added to the CSO it needs a name and weighting for property values.

One of the ways that ontologies are differentiated from each other is by different weighting as a per concept property value level. The CSO applies different weighting to property values to be used in the similarity calculation portion of the algorithm. These weightings also need to be applied to the concept property value relationship. This will create two levels of property value weightings. Each different ontology applies a weight to each property per concept. Another way a new ontology can be created is by creating new properties and values.

The present invention s CSO technology may also adapt to a company s needs as it provides a dynamic database that can be customized and constantly updated. The CSO may provide different group templates to support client applications of different niches specifically but not limited to e commerce. Examples of such groups may include vacation gift or default. The idea of grouping may be extendable because not all groups will be known at a particular time. The CSO has the ability to create new groups at a later time. Each property value has the ability to indicate a separate weighting for different group templates. This weighting should only be applicable to the property values and not to the concept property value relation.

In the CSO concept expansion uses an algorithm that determines how the concepts in the CSO are related to the terms taken in by the CSO . There are parts of this algorithm that can be implemented in different ways thereby yielding quite different results. These parts may include the ability to switch property set creation the calculation that produces the similarity scores and finally the ordering of the final set creation.

Property set creation may be done using a different combination of intersections and unions over states objects events and animates. The CSO may have the ability to dynamically change this given a formula. Similarity calculations may be done in different ways. The CSO may allow this calculation to be changed and implemented dynamically. Sets may have different property value similarity calculations. The sets can be ordered by these different values. The CSO may provide the ability to change the ordering dynamically.

The CSO may be used in procedure that is linked directly to the code that uses it. However a layer may be added that allows easy access to the concept expansion to allow the CSO to be easily integrated in different client applications. The CSO may have a remote fa ade that exposes it to the outside world. The CSO may expose parts of its functionality through web services. The entire CSO application does not have to be exposed. However at the very least web services may provide the ability to take in a list of terms along with instructions such as algorithms groups etc. and return a list of related terms.

Results from the ICA and the CSO may be combined through a process referred to as Iterative Classification Feedback ICF . As illustrated in the ICA is used as described above as a classifier or profiler that narrows and profiles the query according to the feed data from the ICA . The term analyzer is responsible for applying Natural Language Processing rules to input strings. This includes word sense disambiguation spelling correction and term removal. The results mixer determines how the terms are fed into the ICA or CSO and how data in turn is fed back between the two systems. In addition rules can be applied which filter the output to a restricted set e.g. removing foul language or domain inappropriate terms . The results mixer also determines what power properties to filter on what CSO domain to use and what demographic components of the ICA database to use e.g. for a Mother s Day site it would search the female contributors to the ICA database .

The super nodes of generated by the ICA as a result of a query are retrieved from the ICA and normalized . The top n nodes super nodes are taken from the set for example the top three nodes . Each concept of the super nodes is fed individually through an iterative process with the original query to the CSO to generate more results. The CSO as described above will produce a result of scored concepts. The results are then normalized to assure that the scores are between zero and one.

Both the ICA and CSO generate an output. However the ICA additionally determines the super nodes associated with the input terms which are input back into the CSO to generate new results. Thus the CSO process acts as a filter on the ICA results . The output of the CSO processing is a combination of the results as calculated by the CSO from the input terms and the result as calculated by the super nodes generated by the ICA and input into the CSO. All the scores from the CSO are then multiplied by the weight of the super node . This process is iterated through all the super nodes with the final scores of the concepts being added up . After the completion of all iterations the final list of ICF scored concepts is provided as the end result.

However as illustrated in the final set of output terms may also be populated with direct results from the ICA. Here after producing the final scored concepts from the ICF as in a list of Level 1 super nodes of is retrieved from the ICA step and normalized . A multiplexer then uses these two sets of results to identify the relative quality of each set and outputs the sets using the ratio of the relative qualities to the final ICF result .

The recommendation system including the ICA engine and CSO may be employed by web services such as online merchants for making product recommendations to customers. As illustrated in the ICA engine may interface with an entity connector for making connections to web services via web services calls from a web services interface . The data passed to and from the web services interface and the entity connector may be stored in a cache . The cache can allow for faster initial product presentation and for manual tuning of interest mappings. However all entity connections may be made through real time calls .

The entity connector manages the taxonomic mapping between the ICA engine and the web service providing the link between interests and products . The mapping and entity connection quality may be tuned preferably through a manual process.

Web service calls between the entity connector and the web services interface may include relevance sorted product keyword searches searches based on product name and description and searches sorted by category and price. The product database may have categories and subcategories price ranges product names and descriptions unique identifiers Uniform Resource Locators URLs to comparison pages and URLs to images.

Thus based on this connection a web based application may be created as illustrated in As illustrated in a gift recommendation website employing the recommendation system of the present invention which is shown in this example as PurpleNugget.com provides a text box and search button . When search terms such as smart creative and child are entered as illustrated at in additional suggested keywords are provided along with suggested gift ideas .

In comparison as illustrated in as search for the same terms smart creative and child on a conventional e commerce website such as gifts.com yields no search results.

A search for outdoor adventurous man on PurpleNugget.com as illustrated in however yields numerous suggested keywords and gift results . In contrast an identical search on an e commerce website not employing the ICA engine of the present invention such as froogle.google.com as illustrated in yields limited results and does not provide any additional keywords.

By coupling components of the recommendation system of the present invention to conventional product search technology such as froogle.google.com a greater and more varied array of suggested gifts can be provided as illustrated in . A user can enter a query that consists of interests or other kinds of description of a person. The system returns products that will be of interest to a person who matches that description.

The recommendation system may also be employed in applications beyond gift suggestion in e commerce. The system can be adapted to recommend more than products on the basis of entered interests such as vacations services music books movies and compatible people i.e. dating sites . In the example shown in a search for particular keywords may provide not only suggested keywords but also advertisements and brands related to those keywords. Based on an entered set of terms the system can return ads that correspond to products interests vacations etc. that will be of interest to a person who is described by the entered search terms.

Further a search on a traditional vacation planning website such as AlltheVacations.com as illustrated in provides no results for a search with the keyword Buddhism. However as illustrated in by adding components of the recommendation system of the present invention to conventional search technology provides a broader base of related search terms yields search results suggesting a vacation to Thailand and provides search specific advertising .

Moreover value may be added to websites by allowing product advertisements aligned with consumer interests to be provided as illustrated in suggested keywords based on initial search terms may be supplied as illustrated in or hot deals may be highlighted based on user interest as illustrated in .

The recommendation system of the present invention can be used in long term interest trend forecasting and analysis. The recommendation system bases its recommendations in part on empirically correlated expressions of interests. The data can be archived on a regular basis so that changes in correlations can be tracked over time e.g. it can track any changes in the frequency with which interests A and B go together . This information can be used to build analytical tools for examining and forecasting how interests change over time including how such changes are correlated with external events . This can be employed to help online sites create select and update content. For example suggestive selling or cross selling opportunities as illustrated in may be created by analyzing the terms of a consumer search. Reward programs such as consumer points programs may be suggested based on user interest as illustrated in .

The recommendation system of the present invention can be used to improve search marketing capability. Online marketers earn revenue in many cases on a pay per click PPC basis i.e. they earn a certain amount every time a link such as an online advertisement is selected clicked by a user. The value of the click is determined by the value of the link that is selected. This value is determined by the value of the keyword that is associated with the ad. Accordingly it is of value for an online marketer to have ads generated on the basis of the most valuable keywords available. The recommendation system can analyze keywords to determine which are the most valuable to use in order to call up an ad. This can provide substantial revenue increase for online marketers.

The recommendation system of the present invention can be used to eliminate the Null result. Usually traditional search technologies return results based on finding an exact word match with an entered term. Often an e commerce database will not contain anything that is described by the exact word entered even if it contains an item that is relevant to the search. In such cases the search engine will typically return a no results found message and leave the user with nothing to click on. The present recommendation system can find relations between words that are not based on exact syntactic match. Hence the present recommendation system can eliminate the no results message and always provide relevant suggestions for the user to purchase explore or compare.

The recommendation system of the present invention can be used to expand general online searches. It is often in the interest of online companies to provide users with a wide array of possible links to click. Traditional search engines often provide a very meager set of results. The recommendation system of the present invention will in general provide a large array of relevant suggestions that will provide an appealing array of choice to online users.

The recommendation system of the present invention can be used in connection with domain marketing tools. It is very important for online domains web addresses to accurately and effectively direct traffic to their sites. This is usually done by selecting keywords that if entered in an online search engine will deliver a link to a particular site. The recommendation system of the present invention will be able to analyze keywords and suggest which are most relevant and cost effective.

The recommendation system of the present invention can be used in connection with gift card and poetry generation. The recommendation system of the present invention can link ideas and concepts together in creative unexpected ways. This can be used to allow users to create specialized gift cards featuring uniquely generated poems.

In one embodiment the processor routines and data are a computer program product including a computer readable medium e.g. a removable storage medium such as one or more DVD ROM s CD ROM s diskettes tapes hard drives etc. that provides at least a portion of the software instructions for the invention system. Computer program product can be installed by any suitable software installation procedure as is well known in the art. In another embodiment at least a portion of the software instructions may also be downloaded over a cable communication and or wireless connection. In other embodiments the invention programs are a computer program propagated signal product embodied on a propagated signal on a propagation medium e.g. a radio wave an infrared wave a laser wave a sound wave or an electrical wave propagated over a global network such as the Internet or other network s . Such carrier medium or signals provide at least a portion of the software instructions for the present invention routines program .

In alternate embodiments the propagated signal is an analog carrier wave or digital signal carried on the propagated medium. For example the propagated signal may be a digitized signal propagated over a global network e.g. the Internet a telecommunications network or other network. In one embodiment the propagated signal is a signal that is transmitted over the propagation medium over a period of time such as the instructions for a software application sent in packets over a network over a period of milliseconds seconds minutes or longer. In another embodiment the computer readable medium of computer program product is a propagation medium that the computer system may receive and read such as by receiving the propagation medium and identifying a propagated signal embodied in the propagation medium as described above for computer program propagated signal product.

Generally speaking the term carrier medium or transient carrier encompasses the foregoing transient signals propagated signals propagated medium storage medium and the like.

While this invention has been particularly shown and described with references to preferred embodiments thereof it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the scope of the invention encompassed by the appended claims.

For example the present invention may be implemented in a variety of computer architectures. The computer network of are for purposes of illustration and not limitation of the present invention.

The invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In one preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Some examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code are retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

