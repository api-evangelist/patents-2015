---

title: Highly scalable architecture for application network appliances
abstract: A highly scalable application network appliance is described herein. According to one embodiment, a network element includes a switch fabric, a first service module coupled to the switch fabric, and a second service module coupled to the first service module over the switch fabric. In response to packets of a network transaction received from a client over a first network to access a server of a data center having multiple servers over a second network, the first service module is configured to perform a first portion of OSI (open system interconnection) compatible layers of network processes on the packets while the second service module is configured to perform a second portion of the OSI compatible layers of network processes on the packets. The first portion includes at least one OSI compatible layer that is not included in the second portion. Other methods and apparatuses are also describe.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09491201&OS=09491201&RS=09491201
owner: Cisco Technology, Inc.
number: 09491201
owner_city: San Jose
owner_country: US
publication_date: 20150622
---
This application is a continuation of U.S. patent application Ser. No. 13 859 833 filed Apr. 10 2013 which in turn is a divisional of U.S. patent application Ser. No. 13 070 588 filed Mar. 24 2011 now U.S. Pat. No. 8 443 069 which in turn is a continuation of U.S. patent application Ser. No. 12 101 850 filed Apr. 11 2008 entitled Highly Scalable Architecture for Application Network Appliances now U.S. Pat. No. 7 921 686 which in turn claims the benefit of U.S. Provisional Patent Application No. 60 966 649 filed Aug. 28 2007. The entirety of each of these applications is incorporated herein by reference.

The present invention relates generally to application network appliances. More particularly this invention relates to highly scalable architecture for application network appliances.

The ability to connect information technology infrastructure reliably cost effectively and securely is of high importance for today s global enterprises. To communicate with customers clients business partners employees etc. the Internet has proven to be more appropriate compared to private communication networks.

However communication via the Internet which typically uses TCP IP Transmission Control Protocol Internet Protocol also increases the requirements for data security. Network firewalls are one of the many examples of solutions for network security.

Enterprise Web Application Services build an important foundation for such client customer and employee communication. A very common configuration for hosting such enterprise web Application Services is shown in .

As shown in an enterprise can offer web Application Services to various clients and there are several possibilities for clients to connect to the servers depending on the location of the client relative to the servers location. The servers which provide the Application Services are typically located in the enterprise s data center and are accessible directly or indirectly via World Wide Web WWW servers . Sometimes enterprises provide access to the Application Services by making the application servers directly accessible by putting those application servers into a Demilitarized Zone DMZ .

A client may connect via a Local Area Network LAN through the enterprise s intranet . Another client may connect through a Wireless LAN WLAN to the intranet . Yet another client may be located inside the enterprise s campus network which connects to the enterprise s intranet . An enterprise may have zero or more campuses and . Yet another client may connect through the Internet or a client may have a mobile connection to the Internet . In any case to prevent illegitimate access to the enterprise s web Application Services the inside of the enterprise s network the intranet is protected by having a network perimeter which may comprise firewalls associated network interconnect and additional resources within the perimeter network configured so as to be broadly accessible to users on the outside of the enterprise.

Behind the perimeter access is granted to legitimate client requests only while illegitimate access is rejected. The fundamentals in determining whether an access request is legitimate or not are based on the network reference model from the International Organization for Standardization ISO . This ISO network reference model classifies Network Services into seven layers.

Traditionally ISO Layer 4 to ISO Layer 7 services have been developed either as server hardware and software based single function or even multi function network appliances or as service modules on ISO Layer 2 to ISO Layer 3 packet switches. The latter approach though welcomed initially has not gained momentum in the market place due to the inherent cost and complexity of managing stream oriented ISO Layer 4 to ISO Layer 7 services in the same product that was originally designed for packet oriented ISO Layer 2 to ISO Layer 3 switching routing. In reality ISO Layer 4 to ISO Layer 7 service modules never became integral parts of the packet switching architecture because the needs and tradeoffs are quite different. The network appliance approach has been very successful in introducing new innovative functions into the data center such as Application Front Ends Application Firewalls and Wide Area Network WAN Optimizations in a very short period of time albeit at a lower performance and scalability. However this approach has also led to the proliferation of multiple single function network appliances in the enterprise network particularly for multi service deployments. Multiple network appliances functioning in the path of a client server connection introduce high latency due to multiple transport protocol termination and involve high management and deployment complexity as the network needs to be carefully designed taking all failure scenarios into consideration. Customers have begun to experience the negative impact of deploying multiple single function network appliances and are looking for alternatives. Also as enterprise data centers migrate to higher bandwidth Ethernet and to converged interconnect fabric the existing ISO Layer 4 to ISO Layer 7 solutions become ineffective. With this as the background there is a need for next generation architectures to securely efficiently and reliably deliver ISO Layer 4 to ISO Layer 7 services.

Traditional security products generally assume the existence of a trusted intranet locations where enterprises control their own LANs switches and routers which can be organized into or placed within some type of security perimeter to protect its resources from the un trusted Internet. However in today s business environment enterprises no longer enjoy the same level of trust and control of their intranets as enterprises increasingly rely on contractors partners consultants vendors and visitors on site for daily operation. As a result enterprises are exposing internal resources to this wide set of clients whose roles are also frequently changing. Thus the network trust boundary delineating inside and outside clients is disappearing a phenomenon referred to as de perimeterization . In such an environment protection of an enterprise s resources such as its intellectual property as well as mission critical and operational systems becomes of critical importance. Also most security exploits easily traverse perimeter security as enterprises typically let through email web and any encrypted network traffic such as Secure Sockets Layer SSL Simple Mail Transfer Protocol SMTP with Transport Layer Security TLS and authenticated Virtual Private Network VPN traffic for example via IP Security IPSec . Traditional perimeter security approaches for example firewalls intrusion detection systems and intrusion prevention systems have little or no benefit at the perimeter in providing access control functions to the resources. They have become more attack mitigation mechanisms than access control mechanisms. Enterprises are coming to terms with the fact that a hardened perimeter strategy is un sustainable.

Traditional firewall or router access control lists cannot protect application resources from unauthorized access because network parameters such as Internet Protocol IP addresses and IP port numbers no longer deterministically identify resources nor identify users clients or applications accessing these resources. Network firewall technology was invented when enterprises had a limited set of applications such as Telnet File Transfer Protocol FTP and Email and its primary functions were to limit access to specific applications from the outside and to limit access by systems within the enterprise to specific applications outside the firewall. Network layer parameters such as source destination IP address and TCP or UDP port numbers were sufficient to identify the client and the operations the clients intended to perform on a particular resource. However with the proliferation of mobile devices and tunneled applications the network layer parameters are no longer useful to identify the client the resource accessed and the operation. Firewalls have evolved over the time embracing functions such as deep packet inspection and intrusion detection prevention to handle application level attacks but the core access control function remains the same.

In effect de perimeterization demands that access control functions are positioned close to application resources and that a micro perimeter is established in the heart of the data center by placing an identity based policy enforcement point in front of any application resource. Enterprise business drivers for such an enforcement point are the need for rich and uniform protection of resources business agility via attribute based policy driven provisioning and regulatory compliance. Traditional server centric authorization solutions providing role based authorization often require custom code development extensive cross vendor testing whenever there is a version change of the underlying operating system agent or application and are costly and difficult to maintain because of their proprietary nature. Also traditional server based network appliances primarily focused on low bandwidth ISO Layer 4 to ISO Layer 7 perimeter services are unsuitable for data center deployment both in functional richness and in ISO Layer 7 performance.

The present inventions provide among other innovations novel identity and resource aware network appliance platforms that provide network centric application agnostic secure authorization services based on Triangulated Authorization as described below . Such Triangulated Authorization can be instantiated in an enterprise network for example at a common nexus among the client the application server and other essential enterprise services such as a single sign on SSO server an Identity Management server and an authorization Policy Server.

In a typical network system such as in the front end segment between the client or client and for example a WWW application server just behind Perimeter in WWW server farm has a high round trip delay time low throughput and varying speeds while the back end connection between the WWW application server and application server in Data center has a low round trip delay time and high throughput. This proxy like setup requires flow control for the original client to server connection.

Load balancing is an important option for scaling a network appliance to meet increased network bandwidth demands. Load balancing requires multi sided communication for load monitoring typically performed by fast processors at each side which is difficult to do in practice and has implications on the scalability as well as the reliability. One aspect of the invention disclosed is a novel system and method for reliable scalable high performance load balancing.

Providing multiple ISO Layer 4 to ISO Layer 7 services such as SSL acceleration application acceleration or application firewall etc. degrades the performance to a large extent because in today s approaches multiple transport protocol terminations happen at each of the cascaded Network Service points. These multiple TCP or multiple SSL terminations for example add up to the overall latency and make the entire setup hard to administer. This problem exists regardless of whether multiple server based network appliances are chained each providing a different ISO Layer 4 to ISO Layer 7 service or whether a single network appliance using a packet based switch architecture with multiple modules one for each different ISO Layer 4 to ISO Layer 7 service is used.

This problem is highlighted in where several services are cascaded. The connection between a client and a server is terminated at each stage and forwarded multiple times First for service which for example could be TCP then for service which for example could be TLS then for service which for example could be SMTP and so on.

Network system reliability and availability is very important for enterprise networks. High availability for network systems has two aspects to minimize downtime of the network system and to remain functional in spite of failures. High availability is typically implemented by adding redundancy to a system. Two or more peers will perform the functionality together.

Traditionally a fault may cause the protocol stack processing to fail which results in disconnecting the client. The resuming peer then reconnects the client it determines which packets got lost and the lost data is then retransmitted. For many applications it is not acceptable to disconnect clients. Therefore a so called zero click fail over is important.

Architectures commonly used in other approaches to solving these problems have shown several difficulties A system processor is involved in performing the data structure replication in creating and forwarding the data packet down and up the network stack during transmit and receive which severely degrades the system throughput. The system processors may incur substantial overhead from copying data in memory as part of Input Output I O operations. Copying is necessary in order to align data place data contiguously in memory or place data in specific buffers supplied by the application. A reliable protocol must be implemented between the peers to prevent packet loss.

The drawbacks of approaches know in the art include that the system processor for example processor or processor perform compute extensive data structure replication which comprises creating and forwarding data packets down and up the network stack during each send receive operation. This causes substantial compute overhead from data copy Input Output 1 0 because data needs to be aligned and placed into specific data buffers.

Data Centers generally consists of a number of different types of networks an Ethernet LAN for connecting web and application servers a fibre channel storage area network SAN for connecting storage arrays and sometimes an InfiniBand TB or proprietary interconnect based High Performance Computing network for clustering servers. The proliferation of multiple disparate interconnect technologies drives up overall total cost of ownership in the enterprise data center. In order to increase operational efficiency and reduce overall cost next generation data center networks are likely to migrate to a single converged multi protocol fabric technology to carry all three types of traffic Ethernet storage and Inter Process Communication. This converged fabric can for example without limitation be based on IB or Data Center Ethernet DCE an extension of today s Ethernet. When the back end data center starts to converge onto a single fabric a network junction gets created in the data center between classic Ethernet networks and converged fabric networks in front of the data center architecture. Typically a gateway for protocol translation is used at any network junction between two different technologies for example a gateway between fibre channel and Ethernet or a gateway between Ethernet and IB. This gateway functionality involves termination of one protocol and translation into the other protocol.

Remote Direct Memory Access RDMA has been used as a lossless low latency high bandwidth interconnect fabric for example in High Performance Compute Clusters and in storage area networks SAN . IB which supports RDMA transfers has shown great promise for implementing such a lossless low latency high bandwidth interconnect. Other interconnect technology that support RDMA is Data Center Ethernet DCE and Internet Wide Area RDMA Protocol iWARP .

While various other approaches successfully have applied D3 and RDMA to high performance computing and to storage networks they fail to teach how this technology can be made to work as a Lossless Data Transport Fabric LDTF for a high availability scalable application layer network system with Centralized Transport Protocol Termination.

Authorization or access control typically determines the allowed set of actions by a legitimate client possibly intercepting every access of the client to a resource in the system. Authentication is used in conjunction with authorization authentication determines and verifies the basic identity of for example a user or a client process. Then based on determining the user s or client s identity an authorization decision can be appropriately made. Of course if a client s or user s identity can not be verified the authorization decision is quite simple deny access or authority to perform any action.

Typically authentication is performed once every session unlike authorization which is performed for every client action. Granular authorization is achieved by leveraging details of the identity such as attribute values group membership role assignment etc. Typically Information Technology IT infrastructure implements access control in many places and at different levels. The following key concepts are used in the art and defined by Organization for the Advancement of Structured Information Standards OASIS to describe access control or authorization these definitions are not intended to be limiting on the inventions described herein but merely to provide context for the disclosures below 

Subject An active entity generally in the form of a person process or device that causes information to flow among Objects a subject can for example be a client such as client or client or client or client from .

Object An entity that contains or receives information. Access to an Object potentially implies access to the information it contains. Examples are a web page a file a directory a process a program as well as a server for example such as a WWW application server in region of an enterprise network or an application server in Data center .

Operation Action initiated by the Subject. For example the GET or the POST action in a HTTP transaction or querying or updating a given database.

Permission An authorization to perform certain action on the Object. Permission refers to the combination of Object and Operation. An Operation performed on two different Objects represents two different Permissions similarly two different Operations performed on a single Object represent two different Permissions.

Traditionally authentication and authorization is done inside the application however because of the long cycle of development and deployment in the process not all applications have the same level of support. Many applications have a basic form of authentication using user name and a secret password. Certain vendor specific applications support role based authorization which is often vendor proprietary and does not interoperate well with implementations in another applications it creates multiple silos of applications within an enterprise network infrastructure. Role provisioning is often challenging without careful planning enterprises often end up with the number of roles greater than the number of users which eviscerates any potential management efficiency gains. As a result a large number of applications are left behind with no protection and with no support for authentication or authorization. With de perimeterization enterprises are seeing a need to protect these applications uniformly with network centric solutions that do not mandate modifying the application.

There are two types of authorization decisions that are typically done in applications One that does not depend on dynamic information such as the application s state of execution and a second that depends on the current state of execution and often involves derived data from multiple applications. The latter type of authorization decision is best done in applications as it is hard to externalize the authorization without interaction with the application. However the former type of authorization decision can be externalized efficiently and can be performed efficiently outside the applications as it depends on attributes which are visible in the network. In today s enterprise networks a large number of applications approximately 70 to 80 fall into the former category hence can be addressed with a network centric solution. In general an authorization architecture consists of the following key components as shown in 

Sometimes depending on the enterprise application architecture applications have their application specific PDP and PEP embedded as described in . A subject requests access to a resource which resides in an application server . By analyzing user attributes the PDP computes a decision which the PEP uses to grant or reject subject access to the resource . Both PDP and PEP are embedded in the application server where the request gets processed.

In some other case which are shown in the PDP runs inside another server and thus is external to the application server . When a subject requests access to a resource which is hosted by the application server the PEP which also resides inside application server queries the PDP . The PDP uses the user attributes to make the access decision based on policies which is then used by PEP . This approach may suffer from high latency due to a network call from PEP to PDP in the authorization path. This often leads to poor application performance. Also this may require a plug in agent on the application server for PEP .

In a common scenario for enterprise web Application Services which is shown in both PDP and PEP are processed by a dedicated policy server and thus are external from the application server which hosts the resource . In this configuration no plug in in the application server is needed and also no high latency PEP PDP interaction occurs because both PDP and PEP are co located on policy server . Externalizing both PEP and PDP helps enterprises to protect application resources uniformly sitting in front of applications in the network. Therefore this arrangement is often called network centric authorization. However to make full use of this network centric authorization the dedicated policy server has to analyze the protocol and content attributes which requires a very compute intensive analysis of ISO Layer 7 application data. No approach is yet known that can efficiently perform such ISO Layer 7 application data analysis in a network environment.

While certain aspects of the system described herein can be applied to either case of policy frameworks the most beneficial use of this system is in combination with network centric authorization architectures. Due to the enhanced visibility in the network policies can be much richer for example policies can include network and environmental attributes such as location network address etc which are typically not visible inside the application.

Policy definition is a key component in the system. This is typically done by using policy languages. A policy language must be flexible enough to accommodate the policy definition for multiple ISO Layer 4 to ISO Layer 7 applications. The following aspects need to be considered when selecting a policy language The language should be generic so that one can define policies for multiple applications using the same language. Using the same policy language for different applications makes policy administration much easier. The policy language should be extensible so that new requirements imposed by the newer applications can easily be supported. The policy language should provide enough mechanism to define different actions that may need to be performed while enforcing the policy. The policy language should be standardized because standards are robust and have been reviewed by a large community of experts. Each application has specific requirements for a policy language.

Specifically for access control several additional aspects need to be considered while selecting a policy language The selected policy language should allow the definition a policy with expressions having any of the subjects resources actions and environment attributes. The selected policy language also should be able to define the policy using multiple sub policies instead of having one single monolithic policy different people or groups can manage sub pieces of policies as appropriate to reduce policy administration costs. There should be a way to combine the results from these different sub policies into one decision. In general there are several possibilities for policy languages known in the art however these are mere examples and should not be considered limiting.

A standard descriptive language such as Extensible Markup Language XML is used for defining policies. For access control functionality there is an emerging standard policy language called eXtensible Access Control Markup Language XACML which is being increasingly adopted by the enterprise customers. An effort can be made to extend XACML to accommodate all the applications. The advantage of this approach is that if customers already have XACML policies it is easy to import them and process the policies. The disadvantage of XACML is that integrating different kinds of applications in XACML policy framework may be difficult.

Scripting languages such as the Tool Command Language TCL are sometimes used to define a custom policy language. This is for example used in the art by commercial policy infrastructure. The disadvantage of this approach is that existing customer policies based on a standard language such as XACML need to be redefined using the custom language which requires a custom translator from a standard policy language such as XACML to the proprietary policy language.

Another option known in the art is to support cascaded two stage policy definition and execution which use a proprietary scripting language in a first pre processing stage and then use a standard policy language such as XACML in a second stage. The obvious advantage of this approach is that existing customer policies based on XACML can be reused. However the disadvantage with this approach is that it might be difficult to define clear cut policies on what needs to be done in the first stage and the second stage because the scripting language also has the capabilities to define the rules defined in the second stage.

XACML is an Organization for the Advancement of Structured Information Standards OASIS standard that describes both a policy language and an access control decision request response language both encoded in XML . The policy language is used to describe general access control requirements and has standard extension points for defining new functions data types combining logic etc. The request response language allows one to form a query to ask whether or not a given action should be allowed and to interpret the result. The response always includes an answer about whether the request should be allowed using one of four values for example permit deny indeterminate an error occurred or some required value was missing so a decision cannot be made or not applicable the request can t be answered by this service . The request response language helps to define a standard distributed architecture wherein multiple disparate external PEPs communicate with a centralized PDP for determining an access control decision.

At the root of all XACML policies is a policy or a policy set. A policy set is a container that can hold other policies or policy sets as well as references to policies found in remote locations. A policy represents a single access control policy expressed through a set of rules. Each XACML policy document contains exactly one policy or policy set root XML tag. A policy is a combination of sub components target rules rule combining algorithm and obligations. Each of these sub components is explained in the following however these are mere examples and should not be considered limiting.

Targets Part of what a XACML PDP does is to find policies that apply to a given request. To do this XACML provides another feature called a target. The target helps in determining whether the policy is relevant for the request. The policy s relevance to the request determines whether the policy is to be evaluated for the request. This is achieved by defining attributes of three categories in the target subject resource and action along with their values. It is not mandatory to have attributes for all the three categories in a target. The values of these attributes are compared with the values of the same attributes in the request if they match then the policy is considered relevant to the request and is evaluated. In addition to being a way to check applicability target information also provides a way to index policies which is useful if you need to store many policies and then quickly sift through them to find which ones apply. For instance a policy might contain a target that only applies to requests on a specific service. When a request to access that service arrives the PDP will know where to look for policies that might apply to this request because the policies are indexed based on their target constraints. Note that a target may also specify that it is universal and thus applies to any request.

Rules A policy can have any number of rules which contain the core logic of an XACML policy. Each rule is composed of a condition an effect and a target. Conditions are statements Boolean functions about attributes that upon evaluation return true false or indeterminate. Effect is the intended consequence of the satisfied rule. It can either take the value permit or deny. Target as in the case of a policy helps in determining whether or not a rule is relevant for a request. The mechanism for achieving this is also similar to how it is done in the case of a target for a policy. The final outcome of the rule depends on the condition evaluation. If the condition evaluates to true then the rule s effect permit or deny is returned. If the condition evaluates to false the condition doesn t apply not applicable . Evaluation of a condition can also result in an error indeterminate . Conditions can be quite complex built from an arbitrary nesting of functions and attributes branching from the top level Boolean function.

Rule Policy Combining Algorithms Because a policy or policy set may contain multiple rules or policies each of which may evaluate to different access control decisions XACML needs some way of reconciling the decisions each rule or policy makes. This is done through a collection of combining algorithms. Each algorithm represents a different way of combining multiple decisions into a single decision. There are policy combining algorithms used by policy Set and rule combining algorithms used by policy . An example of these is the deny overrides algorithm which says that no matter what if any evaluation returns deny or no evaluation permits then the final result is also deny. These combining algorithms are used to build up increasingly complex policies and they are what allow XACML policies to be distributed and decentralized. While there are several standard algorithms one can build one s own combining algorithm to suit specific needs.

Obligations One of the objectives of XACML is to provide much finer level access control than mere permit and deny decisions. Obligations are the mechanism for achieving this. Obligations are the actions that shall be performed by the PEP in conjunction with the enforcement of an authorization decision. After a policy has been evaluated specific obligations are sent to the PEP along with the authorization decision. In addition to enforcing the authorization decision the PEP is responsible for executing the operations specified as obligations. One example of the obligation is to send a log message to a specified log server whenever a request is denied.

Attributes Attribute Values and Functions The currency that XACML deals in is attributes. Attributes are named values of known types. Specifically attributes are characteristics of the subject resource action or environment in which the access request is made. For example a user s name their group membership a file they want to access and the time of day are all attribute values. When a request is sent from a PEP to a PDP that request is formed almost exclusively of attributes and they will be compared to attribute values in a policy to make the access decisions. A policy resolves attribute values from a request or from some other source through two mechanisms the AttributeDesignator and the AttributeSelector. An AttributeDesignator lets the policy specify an attribute with a given name and type and optionally an issuer as well. The PDP looks for that value in the request and failing that can look in any other location like an LDAP service . There are four kinds of designators one for each of the types of attributes in a request subject resource action and environment. Subject attributes can be broken into different categories to support the notion of multiple subjects making a request for example the user the user s workstation the user s network etc. so SubjectAttributeDesignators can also specify a category to look in. AttributeSelectors allow a policy to look for attribute values through an XML Path Language XPath query. A data type and an XPath expression are provided and these can be used to resolve some set of values either in the request document or elsewhere just as AttributeDesignators do .

Both the AttributeDesignator and the AttributeSelector can return multiple values since there might be multiple matches in a request or elsewhere so XACML provides a special attribute type called a bag. Bags are unordered collections that allow duplicates and are always what designators and selectors return even if only one value was matched. In the case that no matches were made an empty bag is returned although a designator or selector may set a flag that causes an error instead in this case. Bags are never encoded in XML or included in a policy or request response. Once some bags of attribute values are retrieved the values need to be compared to the expected values to make access decisions are available. The comparison and retrieval is done through a powerful system of functions. Functions can work on any combination of attribute values and can return any kind of attribute value supported in the system. Functions can also be nested so you can have functions that operate on the output of other functions and this hierarchy can be arbitrarily complex. Custom functions can be written to provide an even richer language for expressing access conditions. One thing to note when building these hierarchies of functions is that most of the standard functions are defined to work on specific types like strings or integers while designators and selectors always return bags of values. To handle this mismatch XACML defines a collection of standard functions of the form type one and only which accept a bag of values of the specified type and return the single value if there is exactly one item in the bag or an error if there are zero or multiple values in the bag. These are among the most common functions used in a condition.

There are many hardware and software based approaches known in the art that provide authorization services to applications Server centric approaches provide authorization services in the server typically from within the application where access control is tightly integrated. Network centric approaches such as firewalls use network layer constructs for example MAC address IP address ISO Layer 4 port information etc. for access control. Most network centric approaches are implemented as network appliances and operate in a similar fashion to a network proxy and or network gateway.

For such authorization systems to work with ISO Layer 4 to ISO Layer 7 applications it is essential to understand the semantics of the many different protocols for example Hypertext Transfer Protocol HTTP Common Internet File System CIFS SQLNet etc. because depending on a configured policy it may be necessary to change the payload of an application message. Therefore to understand the protocol semantics and perform the actions specified in the policy a protocol proxy may need to be implemented.

Building a proxy for a standard protocol such as HTTP is a well known in the art. However in practice there exist specific custom protocols written on top of TCP. Thus mechanisms should be provided for understanding the semantics of these custom protocols. Depending on the application a protocol proxy may need to analyze the request analyze the response or analyze both request and response. For example network based authorization decision may need to be made to analyze the request to determine whether the given transaction shall be allowed or not.

Virtualization in computing refers to the abstraction of computing resources. It can be used to hide the physical characteristics of computing resources from the way in which other systems applications or end users interact with those resources. For example the electronic system from is hidden by the Electronic System View .

Virtualization includes making a single physical resource such as a server an operating system an application or storage device appear to function as multiple logical resources. This is sometimes called partitioning and is described in The Electronic System provides several resources so called contexts such as Context A Context B Context C Context D .

Virtualization can also cluster multiple physical resources such as storage devices or servers to make them appear as a single logical resource which is described in Several Electronic Systems Electronic System A Electronic System B Electronic System C and Electronic System D are clustered to form one Electronic System Cluster .

In enterprise networking virtualization can be used to achieve high availability for example by clustering redundant physical resources or can reduce the total cost of ownership by sharing one partitioned resource among different business units.

Many enterprises end up deploying and maintaining a variety of user identity stores in their environment. Multiple identity stores emerge for a number of reasons Existing deployments of applications may require their own dedicated user identity repositories. Or different identity repositories may be deployed to support distinct client communities for example intranet versus Internet clients or clients in different divisions of the same company. Also different identity stores may be deployed to support a distinct community of applications such as Enterprise Resource Planning ERP systems remote network access collaboration etc. In addition merged or acquired companies may bring their own user identity stores into the enterprise.

There are no standard ways in the art to store identity information. For example it could be managed in any of the following ways In external directories such as LDAP AD using external databases or using application specific custom formats or in any other way known to or contemplated by one of skill in the art.

With multiple identity stores it is difficult to enforce and monitor compliance and maintain consistent corporate security policies. Without a single application level view of the identity information deployment of enterprise access services such as authorization or single sign on becomes very difficult. The entity providing the service should be capable of supporting the many different protocols required by different identity repositories. In addition different sources store identity information in different formats and access to the data requires different interfaces.

Virtual Directory Infrastructure Virtual Directory Infrastructure simplifies this task by providing an abstraction layer to communicate with different identity stores. Virtual Directory Infrastructure is commercially available in either hardware or software products.

Architectures known in the art for enterprise multi server based network appliances are typically either Ethernet packet switch based architectures implemented in multiple modules or X86 server based in a single network appliance. The fundamental drawbacks of such architectures found in other approaches is the overhead of running a reliable protocol when communication needs to happen between modules and problems with multiple transport protocol termination for multiple services or sometimes even for single service if the implementation of the single service is split across multiple modules . One problem of multiple transport protocol terminations for multiple services is outlined in It is clear that multiple transport protocol terminations add to the overall latency in the client to server or server to server communication.

Other drawbacks of Ethernet packet switch based architectures are that they support only very primitive flow control or no flow control at all which makes it hard to scale these architectures with increasing network bandwidth demand. Nor is there any hardware retry of corrupted packets or memory level visibility within different processing elements to build a reliable solution for high availability.

A highly scalable application network appliance is described herein. According to one embodiment a network element includes a switch fabric a first service module coupled to the switch fabric and a second service module coupled to the first service module over the switch fabric. In response to packets of a network transaction received from a client over a first network to access a server of a data center having multiple servers over a second network the first service module is configured to perform a first portion of OSI open system interconnection compatible layers of network processes on the packets while the second service module is configured to perform a second portion of the OSI compatible layers of network processes on the packets. The first portion includes at least one OSI compatible layer that is not included in the second portion.

Other features of the present invention will be apparent from the accompanying drawings and from the detailed description which follows.

In the following description numerous details are set forth to provide a more thorough explanation of embodiments of the present invention. It will be apparent however to one skilled in the art that embodiments of the present invention may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form rather than in detail in order to avoid obscuring embodiments of the present invention.

Reference in the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the invention. The appearances of the phrase in one embodiment in various places in the specification do not necessarily all refer to the same embodiment.

In one aspect an embodiment of the invention is an Application Network Appliance ANA coupled between one or more clients and one or more application servers. The one or more clients or the one or more application servers can be coupled to the Internet. The ANA behaves as a network proxy and thus splits the client to server connections or similarly server to server connections into client to proxy and proxy to server connections. The ANA then performs Network Service processing on the data exchanged between the one or more clients or the one or more servers and the one or more servers. The ANA can also act as an Application Protection System APS to perform network access control for example.

One aspect of the invention is the use of a Lossless Data Transport Fabric for Layer 7 Networking comprising an ISO Layer 7 networking system which performs network operations in multiple separate processing domains which are interconnected via the Lossless Data Transport Fabric LDTF . This LDTF may be an RDMA capable fabric such as InfiniBand or iWARP.

Yet another aspect of the invention is to perform Triangulated Authorization as a means for network centric application agnostic authorization and access control to certain Application Services. The concept of Triangulated Authorization operates on policies which can take into account multiple aspects of clients of the networking environment and of the applications and services requested by clients. Performing Triangulated Authorization requires analysis of the ISO Layer 7 application data which can be transmitted via various protocols. Using a LDTF in a multi processing approach provides the compute power to perform such analysis efficiently. The concept of Triangulated Authorization can be enhanced by utilizing a Virtual Directory Infrastructure VDI to multiple directory stores. Further because LDTF can support virtualization for example InfiniBand as the LDTF supports so called virtual lanes the concept of Triangulated Authorization can also be implemented in a virtualized manner. One physical ANA can then be used to serve multiple independent network domains thus increasing flexibility and reducing the cost and the complexity of access control.

One aspect of the invention is a Network Application Protection system and method for access control in a network environment by using Triangulated Authorization based on user attributes environment attributes and resource attributes to make rapid reliable and secure authorization decisions based on a number of factors including user attributes environment attributes and subject attributes. User attributes may include among others company department role project association seniority citizenship. Environment attributes may include among others network access method location time and date. Subject attributes may include among others protocol attributes content attributes and resource attributes.

One aspect of the invention is a system and method for Centralized Transport Protocol Termination for Multi Service Layer 7 Networking comprising a system in a network environment for terminating one or more transport protocols in a centralized fashion in for example an Application Network Appliance as described herein. Transport protocols may include among others TCP SSL IPSec RTSP RTP CIFS JDBC.

Yet another aspect of the invention provides a Transparent Secure Transport mechanism between client to server or server to server connections which will not break existing ISO Layer 4 networking. While the payload i.e. the sensitive data is encrypted for privacy and security the original TCP and IP headers are kept unchanged. This results in a secure transport method which is transparent to existing ISO Layer 4 network services.

One aspect of the invention is a system and method for Transparent Secure Transport for End to End Application Protection comprising a method for secure transport in a network environment using data packets which protects the transported data by encrypting the payload of the data packets and which does not alter the ISO Layer 3 and ISO Layer 4 information of said data packets. The described Transparent Secure Transport TST may be dynamically installed and enabled in an endpoint by downloading the requisite TST agent software as needed into for example a client system or the requisite TST capabilities may be pre installed in an endpoint.

One aspect of the invention is a system and method for High Availability Networking by using a Lossless Data Transport Fabric with an ISO Layer 7 networking system which comprises multiple redundant modules and which copies state information from one module to another module via the Lossless Data Transport Fabric in order to enable transparent High Availability failover. This LDTF may be an RDMA capable fabric such as InfiniBand or iWARP.

One aspect of the invention is a system and method providing a Layer 7 Services Gateway for Converged Data Center Fabric comprising an ISO Layer 7 gateway between classical network fabric and converged network fabric. The classical network fabric may be for example Ethernet or fibre channel. The converged network fabric may be for example one of Data Center Ethernet Lossless Data Transport Fabric RDMA fabric InfiniBand or iWARP.

One aspect of the invention is a system and method for Highly Scalable Layer 7 Networking comprising an ISO Layer 7 networking system with multiple processing elements connected via a Lossless Data Transport Fabric where the processing necessary to perform the network operation s are distributed over the processing elements. In some configurations at least one of the processing elements is dedicated to operations for ISO Layer 7 processing. In some configurations at least one of the processing elements is dedicated to operations for ISO Layer 2 to ISO Layer 5 processing.

One aspect of the invention is a system and method for Virtualization in a Layer 7 Networking System which may be implemented as an ISO Layer 7 networking system which performs network operations for multiple virtual contexts using multiple separate processing elements and where the multiple processing elements are interconnected via a Lossless Data Transport Fabric. Virtual contexts may be mapped directly onto separate processing elements or processing elements may be virtualized so that they can be shared in some way across subsets of virtual contexts depending on the specific requirements of a given installation. Further this system and method provides for termination of multiple transport protocols among multiple virtual contexts. Distinct specific transport protocols may be mapped directly onto and terminated onto distinct specific virtual contexts or sharing of support for transport protocols may be offered across sets of virtual contexts depending on the specific requirements of a given installation.

One aspect of the invention is a system and method for using Virtual Directory Infrastructure in a broad range of Layer 7 Networking applications including a system and method in a network environment for access control based on a number of factors including user attributes environment attributes and resource attributes and where the attributes are obtained via a Virtual Directory Interface. User attributes may include among others company department role project association seniority citizenship. Environment attributes may include among others network access method location time and date. Subject attributes may include among others protocol attributes content attributes and resource attributes.

One aspect of the invention is a system and method for Inter Module Communication using USB Bus in Layer 7 Networking comprising a networking system including at least two communication planes one communication plane for network traffic and one for out of band communication where the out of band communication is done using Universal Serial Bus.

One aspect of the invention is a system and method for running Applications in a Layer 7 Networking platform environment which comprises an ISO Layer 7 networking system using multiple distributed processing elements each connected via a Lossless Data Transport Fabric wherein at least one distributed processing element is dedicated to performing ISO application layer services. Such ISO application layer services may include for example without limitation at least one of Server Load Balancing SSL Acceleration Application Acceleration Triangulated Authorization Extensible Markup Language XML acceleration Advertisement Insertion Virtual Private Network acceleration Deep Packet Inspection and Intrusion Detection.

The ANA comprises a Lossless Data Transport Fabric LDTF for inter process communication between multiple processing elements. Various possibilities exist to implement such LDTF In one embodiment of the invention InfiniBand D3 is used as a fabric in another embodiment RDMA enabled Data Center Ethernet DCE can be used as a fabric in yet another embodiment any RDMA enabled interconnect fabric can be used such as Internet Wide Area RDMA Protocol iWARP for example.

In one embodiment of the invention LDTF has many benefits It allows dedicated processing elements to be assigned to certain compute intensive network processing tasks. For example by splitting the processing of the seven ISO network layers into two processing domains one Network Service processing domain and another ISO Layer 7 Application Service processing domain multiple processing elements can be utilized efficiently for parallel computation. Applying principles of heterogeneous parallel computation to network processing is not a trivial task. In a multi processing approach specialized processing elements can be dedicated to certain compute intensive tasks and the computational load can be balanced among those multiple processing elements. As a result more cost efficient processing elements can be deployed plus the entire system can more easily be scaled to match increased network bandwidth demands for example. Using the same principles the LDTF can not only be used for inter process communication but also for communication with application servers via a Converged Data Center Fabric which supports RDMA. Therefore certain embodiments of the inventions can not only be applied to connect to application servers via classical Ethernet but also via converged data center fabrics such as Data Center Ethernet.

In another embodiment of the invention transport protocols such as Transmission Control Protocol TCP connections Secure Sockets Layer SSL connections etc can be terminated in a centralized fashion and their Protocol Data Units PDU can be transformed into a data stream which can be transported via the LDTF for processing by one or more dedicated Application Service processing elements. Compared with multiple cascaded transport protocol termination points this Centralized Transport Protocol Termination has the big advantage of reducing the overall latency in client to server connections when multiple Network Services are provided. In addition the LDTF can be used to replicate all state information including the ISO Layer 7 data stream among multiple modules or multiple ANAs to achieve high availability with zero click failover behavior.

In a further embodiment of the invention the system can be further enhanced by applying Universal Serial Bus USB technology as out of band communication for system configuration administration and status information between the multiple modules components or even between ANAs. Because USB technology allows hot pluggability a running system can be enhanced maintained changed or repaired without affecting its operation. This further enhances the high availability and reliability nature of this system.

The various embodiments of the inventions described herein are contemplated to be implemented in numerous ways including as methods systems devices and computer readable mediums. Several embodiments of the inventions described herein are discussed below. One embodiment of the invention comprises a system and a method for network centric authorization for protecting applications in an enterprise network. Another embodiment of the invention comprises a system and a method for Transparent Secure Transport to enable security and privacy in network communication without breaking existing ISO Layer 4 Network Services.

Other aspects and advantages of various embodiments of the inventions described herein will become apparent from the following detailed description taken in conjunction with the accompanying drawings which illustrate by way of example the principles of the inventions. It will be understood by one of ordinary skill in the art that the following embodiments are provided for illustrative and exemplary purposes only and that numerous combinations of the elements of the various embodiments of the present invention are possible.

Note these definitions are not intended to be limiting on the inventions described herein but merely to provide background and context for the disclosures included here.

 Active Directory AD is an implementation of Lightweight Directory Access Protocol LDAP directory services by Microsoft for use primarily in Windows environments. The main purpose of Active Directory is to provide centralized authentication and authorization services for Windows based computers.

 Authentication means to verify the identity of a subject such as a user or a client based on one or more authentication factors.

 Authorization determines whether a subject such as a client a computer a user a machine or a person may be permitted access to a resource which can be for example a file certain data a program storage or a device.

 Access control is based on authorization and is the ability to determine whether access to a resource is granted or rejected to a subject.

Common Internet File System CIFS which is also known as Server Message Block SMB is an application level network protocol mainly applied to shared access to files printers serial ports and miscellaneous communications between nodes on a network. It also provides an authenticated Inter process communication mechanism.

HTTP cookies sometimes known as web cookies or just Cookies are parcels of text sent by a server to a web browser and then sent back unchanged by the browser each time it accesses that server. HTTP cookies are used for authenticating tracking and maintaining specific information about users such as site preferences and the contents of their electronic shopping carts.

 CORBA means Common Object Request Broker Architecture and is a standard defined by the Object Management Group OMG that enables software components written in multiple computer languages and running on multiple computers to work together.

A central processing unit CPU or sometimes simply processor is the component in a digital computer capable of executing a program. With the advancement in semiconductor technology one or more so called processing elements or cores can be integrated within one device or two or more processors can interoperate in a multi processing environment.

 CSIv2 means Common Secure Interoperability Protocol Version 2 which is a protocol implementing security features for inter ORB communication.

 Data Center Ethernet or DCE is part of the Ethernet family which is a large diverse family of frame based computer network technologies that operates at many speeds for local area networks LANs .

The Datagram Transport Layer Security DTLS protocol provides communications privacy for datagram protocols. The protocol allows client server applications to communicate in a way that is designed to prevent eavesdropping tampering or message forgery. The DTLS protocol is based on the Transport Layer Security TLS protocol and provides equivalent security guarantees. Datagram semantics of the underlying transport are preserved by the DTLS protocol.

 DCOM means Distributed Component Object Model and is a Microsoft proprietary technology for software components distributed across several networked computers to communicate with each other.

 Enterprise Java Bean EJB is a managed server sided component architecture for modular construction of enterprise applications. The EJB specification is one of the several Java application programming interfaces API in the Java Platform Enterprise Edition.

An FPGA is a Field Programmable Gate Array. FPGAs are electronic components that have a configurable function. These devices are able to change their functionality via an information stream transferred to the device. These electronic components are available from a number of different suppliers in a wide range of sizes and speeds. One example of these devices is the Virtex FPGA devices from Xilinx Inc. located in San Jose Calif.

 FTP or File Transfer Protocol is used to transfer data from one computer to another over the Internet or through a network. Specifically FTP is a commonly used protocol for exchanging files over any network that supports the TCP IP protocol.

 General Packet Radio Service GPRS is a Mobile Data Service available to users of Global System for Mobile Communications GSM and IS 136 mobile phones.

 GTP is the GPRS Tunneling Protocol which is an IP based protocol used within GSM and UMTS networks. The GTP protocol is layered on top of UDP and comprises in fact three separate protocols GTP C GTP U and GTP .

Hypertext Transfer Protocol HTTP is a communications protocol used to transfer or convey information on the World Wide Web. HTTP is coordinated by the W3C World Wide Web Consortium and the IETF Internet Engineering Task Force .

 HOP Internet Inter Orb Protocol is the implementation of the General Inter ORB Protocol for TCP IP. It is a standard defined by the Object Management Group OMG that enables software components written in multiple computer languages and running on multiple computers to work together.

 IMAP is the Internet Message Access Protocol also known as Internet Mail Access Protocol or Interactive Mail Access Protocol.

 InfiniBand D3 is a switched fabric communications link primarily used in high performance computing.

 IPsec IP security is a suite of protocols for securing Internet Protocol IP communications by authenticating and or encrypting each IP packet in a data stream. IPsec also includes protocols for cryptographic key establishment. IPsec protocols operate at the ISO Layer 3 network layer.

The Internet Protocol IP is a data oriented protocol used for communicating data across a packet switched network. Currently two versions exist the widely deployed IPv4 and the successor Internet Protocol version 6 IPv6 .

Internet Protocol Television IPTV is an approach where a digital television service is delivered by using Internet Protocol over a network infrastructure.

 J2EE the Java Platform Enterprise Edition or Java EE is a widely used platform for server programming in the Java programming language.

 JDBC the Java Database Connectivity is an API for the Java programming language that defines how a client may access a database. It provides methods for querying and updating data in a database. JDBC is oriented towards relational databases.

 Kerberos is the name of a computer network authentication protocol which allows individuals communicating over an insecure network to prove their identity to one another in a secure manner. It is also a suite of free software published by Massachusetts Institute of Technology MIT which implements this protocol. Its designers aimed primarily at a client server model and it provides mutual authentication.

The Layer 2 Tunneling Protocol L2TP is a tunneling protocol used to support virtual private networks.

 LAN means Local Area Network which is a computer network covering a small geographic area such as a home office or group of buildings. One example and widely used LAN standard is defined by the IEEE as IEEE 802.11.

 LDAP is the Lightweight Directory Access Protocol which is an application protocol for querying and modifying directory services running over TCP IP.

 MIME is Multipurpose Internet Mail Extensions which is an Internet Standard that extends the format of e mail.

 MPEG TS is the communications protocol for audio video and data which is specified in MPEG 2 Part 1 Systems ISO IEC standard 13818 1 .

 ORB means Object Request Broker ORB which is a piece of middleware software that allows programmers to make program calls from one computer to another via a network.

 PDU is a Protocol Data Unit and is relevant in relation to the layers of the OSI model as follows The ISO Layer 1 PDUs are streams the ISO Layer 2 PDUs are frames the ISO Layer 3 PDUs are packets the ISO Layer 4 PDUs are segments and for ISO Layer 5 and above simply is referred to as application data or data.

A proxy is an intermediary device that sits in the middle of client to server connections. It terminates the incoming connection performs PDU processing and re initiates another connection towards the server. In effect the proxy device breaks the original client to server connection into two halves one between client and proxy client connection and another between proxy and the server server connection .

 RADIUS is the Remote Authentication Dial In User Service protocol is an authentication authorization and accounting protocol often used with dial up DSL or 802.11 connections to ensure that users are authenticated authorized and their use accounted for.

Remote Direct Memory Access also known as Remote DMA also known as RDMA allows data to move directly from the memory of one processing element into that of another. This permits lossless high throughput low latency networking. RDMA relies on a special philosophy in using DMA.

 RDP is the Remote Desktop Protocol which is a multi channel protocol that allows a user to connect to a computer running Microsoft Terminal Services.

The Java Remote Method Invocation API or Java RMI is a Java application programming interface for performing the object equivalent of remote procedure calls.

Remote procedure call RPC is a technology that allows a computer program to cause a subroutine or procedure to execute in another address space commonly on another computer on a shared network without the programmer explicitly coding the details for this remote interaction.

 SAML is the Security Assertion Markup Language which is an XML standard for exchanging authentication and authorization data between security domains. SAML is a product of the OASIS Security Services Technical Committee.

 SCTP is the Stream Control Transmission Protocol as it is defined by the IETF Signaling Transport SIGTRAN working group.

 SDP is the Session Description Protocol which is a format for describing streaming media initialization parameters.

A session is defined as a long lived association between a user and a server usually involving the exchange of many request response transactions between a client and a server. A session is typically implemented as a layer in a protocol stack e.g. Telnet and FTP. However for certain protocols such as HTTP and HTTPS where connections proper are generally very short lived sessions are implemented by having each exchange between the client and the server include some form of cookie . Usually a session contains multiple connections sharing the same session state and belongs to a single client user.

 Single Sign On SSO is a method of access control that enables a user to authenticate once and gain access to the resources of multiple software systems. Many free and commercial SSO or reduced sign on solutions are currently available.

 SIP is the Session Initiation Protocol and is an application layer control signaling protocol for creating modifying and terminating sessions with one or more participants.

 SOAP is a protocol for exchanging XML based messages over computer networks normally using HTTP HTTPS. SOAP forms the foundation layer of the Web services stack providing a basic messaging framework that more abstract layer can be built on.

Symmetric multiprocessing or SMP is a multiprocessor computer architecture where two or more identical processors are connected to a single shared main memory.

 SMTP is the Simple Mail Transfer Protocol and is the de facto standard for e mail transmissions across the Internet.

 SSH means Secure Shell and is a network protocol that allows data to be exchanged over a secure channel between two computers.

The Secure Sockets Layer SSL and its successor Transport Layer Security TLS are cryptographic protocols that provide secure communications on the Internet for such things as web browsing e mail Internet faxing instant messaging and other data transfers.

The Transmission Control Protocol TCP is one of the core protocols of the Internet protocol suite often simply referred to as TCP IP.

 Telnet TELecommunication NETwork is a network protocol used on the Internet or local area network LAN connections generally to provide remote terminal service between a user at a client system and a process at some server.

User Datagram Protocol UDP is one of the core protocols of the Internet protocol suite. Using UDP programs on networked computers can send short messages sometimes known as datagrams to one another.

 UMTS is the Universal Mobile Telecommunications System which is one of the third generation 3G mobile phone technologies.

 URL is Uniform Resource Locator which is widely used as a synonym for Uniform Resource Identifier URI .

 USB is the Universal Serial Bus which is a serial bus standard to interface devices such as mice and keyboards.

Voice over Internet Protocol also called VoIP IP Telephony Internet telephony Broadband telephony Broadband Phone and Voice over Broadband is the routing of voice conversations over the Internet or through any other IP based network.

 VLAN is virtual LAN which is a method of creating independent logical networks within a physical network. Several VLANs can co exist within such a network.

Wide Area Network WAN is a computer network that covers a broad area i. e. any network whose communications links cross metropolitan regional or national boundaries.

A wireless LAN or WLAN is a wireless Local Area Network which is the linking of two or more computers without using wires. WLAN is for example defined in IEEE 802.11 a set of Wireless LAN standards developed by working group of the IEEE LAN MAN Standards Committee.

 XACML stands for eXtensible Access Control Markup Language. It is a declarative access control policy language implemented in XML and a processing model describing how to interpret the policies. XACML is standardized by the OASIS standards organization.

The approach described herein applies combinations of parallel multi processor computing technology with lossless low latency high bandwidth network fabric technology also known as Lossless Data Transport Fabric or LDTF to form novel methods and systems for high performance high reliability high availability and secure network applications. The various embodiments of the inventions described herein enable the implementation of highly reliable highly scalable solutions for enterprise networking such as for example the APS from .

Multiple network Services are efficiently provided by terminating transport protocols centrally. As can be seen any transport protocol can be terminated centrally each PDU s payload can be collected and converted into a data stream and vice versa a data stream can be converted into PDUs for any transport protocol and be transported via the given transport protocol. A simple concatenation of the PDU payload into a byte stream is not sufficient. Key to the conversion is that state information must be maintained about the meta data of each connection. Such meta data includes the session information for example via a unique connection identification number the transaction information as well as the information regarding segments and packets. Finite state machines can be used to track the meta data.

Transport protocols are protocols which are used to transport information via networks. These include obviously the ISO Layer 3 protocols such as IPv4 IPv6 IPSec the ISO Layer 4 protocols such as TCP UDP SCTP the various ISO Layer 5 protocols such as FTP HTTP IMAP SMTP GTP L2TP PPTP SOAP SDP RTSP RTP RTCP RPC SSH TLS DTLS SSL IPSec and VPN protocols. However other protocols and approaches are contemplated within the scope of the inventions which serve as transport mechanisms for transmitting information and application data and can also be terminated in a centralized fashion by a protocol proxy and the corresponding PDUs can be transformed into a data stream for application layer processing. Examples of such are CSIv2 CORBA HOP DCOM and other Object Request Brokers ORB MPEG TS or RTP as a transport for multi media information RTSP or SIP as another transport for multi media information peer to peer transport mechanisms transport mechanisms based on J2EE such as Java RMI streaming media protocols such as VoIP IPTV etc.

For the sake of simplicity we will use the term Centralized Transport Protocol Termination throughout the rest of the description however this is for exemplary purposes only and is not intended to be limiting. Centralized Transport Protocol Termination can be performed by dedicated processing units and different ISO Layer 7 services can be performed in other dedicated processing units. The use of a lossless low latency high bandwidth fabric for inter process communication between such dedicated processing units makes it possible to simultaneously support Centralized Transport Protocol Termination for multiple services. For example TCP can be terminated once transformed into a data stream and this data stream is transported from one dedicated processing unit to another using the lossless low latency high bandwidth fabric. The low latency nature of the fabric helps to reduce the overall latency in client to server transactions.

In one embodiment the Application Protection System APS is a network appliance that can act as a proxy between the client and the application server and can determine whether a client shall be granted access to certain applications . In one example the client is one or more of the clients or of . In another example the client can be a virtual machine or a cluster of computers or a server for server to server connections for example . The application server can be for example without limitation one or more file servers one or more web servers one or more database servers one or more compute servers one or more storage servers or one or more game servers. The decision whether access is granted or rejected involves an Identity Management Server to identify the user client or application for example using Lightweight Directory Access Protocol LDAP or Active Directory AD and is the result of querying a Policy Server to analyze the access policy for the requested application .

The APS may use a Triangulated Authorization method which for example is based on multiple aspects of a client such as the client the requested application such as application and certain network characteristics Who a client a user or a machine and its associated attributes such as department role project association seniority citizenship etc Where network and environment attributes such as access methods wire line wireless VPN location USA Switzerland China and time What on the wire session attributes including protocol and content resource attributes. The outcome of this Triangulated Authorization method can be used to determine whether access to an application is granted or rejected. Optionally a Single Sign On SSO server such as server may be involved that allows the client to obtain authorization for accessing multiple applications at once.

One embodiment of the invention acts as a proxy between one or more clients and one or more application servers to control the access of the one or more clients to the one or more applications. This is described for example in where the APS controls access of client to application server . Thereby the approach can act as a high speed full proxy which terminates both client side and server side transport protocol connections and which behaves as a virtual server to the one or more clients and as a virtual client to the one or more servers. The proxy function is required because of the need to reassemble PDUs into data streams and where needed to decrypt the payload data for inspection such as access control. The proxy function involves ISO Layer 2 to ISO Layer 5 processing such as Centralized Transport Protocol Termination.

One embodiment of the invention is a network appliance which terminates multiple transport protocols in one central point to overcome the many drawbacks of multiple transport protocol termination such as increased latency and lack of scalability. Multiple transport protocol termination is explained above see . Therefore the network appliance may need to perform a set of functions similar to those typical of application servers such as network proxy deep packet inspection cryptography data compression regular expression parsing etc. Network services that may need Centralized Transport Protocol Termination include but are not limited to application authentication and authorization application firewalls application data routing in line intrusion detection and intrusion prevention SSL offloading acceleration server load balancing XML offloading acceleration and application front end engine services also called application acceleration .

ISO Layer 2 to ISO Layer 5 processing typically involves packets segments and records processing whereas ISO Layer 7 processing typically involves application data processing. Full ISO Layer 7 inspection goes beyond application headers and typically involves reassembling application layer data. A general rule used in the art is that a 1 GHz processor is needed for processing ISO Layer 3 or ISO Layer 4 PDUs at 1 Gbps whereas a 10 GHz processor is needed for application data processing at 1 Gbps for example for SSL VPN URL mangling operation . Therefore the computational complexity required for scaling the proxy functionality is quite different from the computational complexity required for scaling ISO Layer 7 processing.

To solve the computational complexity in an efficient way one embodiment of the invention splits the overall ISO Layer 2 to ISO Layer 7 stack into at least two independent processing domains. One domain which is called Network Service processing for ISO Layer 2 to ISO Layer 5 processing i.e. up to TCP SSL processing provides proxy functions and a second domain which is called Application Service processing for ISO Layer 7 processing. Splitting the stack requires a reliable lossless low latency high bandwidth connection between those two or more processing domains in order for the Network Service processing to forward the data stream to the Application Service processing for further processing. As a solution this approach uses a LDTF such as RDMA capable fabric technology to provide this reliable lossless low latency high bandwidth interconnect between processing domains.

This approach is illustrated in . The ANA acts as a proxy between a client and an application server . The client is connected to the ANA via a network . Network can for example be a LAN a WAN a WLAN an intranet or the Internet. The application server is connected to the ANA via network . Network can for example be a LAN a WAN a WLAN an intranet or the Internet. Client and application server can share the same network for example network from . While it is apparent that multiple clients and multiple application servers may be connected to the ANA for the sake of simplicity a single client single application server case is used as a placeholder throughout. This simplified view is shown in where the network connections are omitted for simplification purposes. Incoming connections for example a request from the client is terminated in the NSM and is transformed into a data stream. This is done by PDU processing and reassembling the payload of the PDU into a data stream of ISO Layer 7 application data. This data stream is transported via LDTF to the ASM for further ISO Layer 7 processing. The result of ISO Layer 7 processing done by ASM is then transported back still as a data stream via the LDTF to the NSM . The NSM then transforms the data stream into PDUs and sends the PDUs to the application server via the appropriate transport protocol. Connections which originate from the application server can be handled similarly.

Using this novel approach both processing domains can be scaled independent of each other and a well balanced system can be achieved at reasonable costs.

In one embodiment of the invention described herein the system and method functions as an ISO Layer 4 to ISO Layer 7 services gateway for a converged data center fabric to provide extra functionality in addition to basic protocol gateway function between classic Ethernet and the converged data center fabric.

Once the ISO Layer 7 service is applied to the client traffic it is forwarded over the converged fabric interface towards the server for example towards application server . The APS can optionally regenerate the data stream over RDMA if the converged fabric is RDMA capable. The application server can accept traffic over for example without limitation Socket Direct Protocol or native RDMA interfaces or any other protocol appropriate to the converged fabric and known to one of skill in the art. The former approach avoids application rewrite and any socket compliant application will work without any rewrite. The latter approach though more performance efficient involves rewriting of the application to work with RDMA. In either approach application servers run TCP less which significantly boosts application throughput.

Compared with typical TCP stack processing the novel RDMA implementations disclosed here can avoid buffer copy overhead and therefore can eliminate TCP protocol processing on the application server which provides better application performance. Similarly to client connections in one embodiment of the invention the APS can accept server to client traffic on a converged fabric interface perform the necessary ISO Layer 7 processing functions and forward the traffic over one of its classic Ethernet interfaces towards the client network.

As described above the interconnect fabric within data centers is highly heterogeneous and uses many different interconnect standards including but not limited to Ethernet Gigabit Ethernet 10 Gigabit Ethernet and Storage Area Networks SANs . However for cost efficiency reasons there is a high likelihood that the interconnect fabric within data centers eventually will converge into one single fabric that covers all aspects required and that supports RDMA. For such a converged RDMA based data center fabric one embodiment of the invention is described in . The ANA acts as a proxy between a client and an application server . The connection to client can be via Ethernet while the connection to the application server can be via RDMA based converged data center fabric . Alternatively without limitation the connections could be for example Gigabit Ethernet or 10 Gigabit Ethernet respectively or any other connection known to one of skill in the art. Incoming connections from the client are terminated in a NSM and are transformed into a data stream. This data stream is transported via LDTF to the ASM for further ISO Layer 7 processing. The result of ISO Layer 7 processing done by ASM is then transported still as a data stream via RDMA directly to the application server . Connections which originate from the application server obviously can be handled similarly. shows a simplified view of the ANA connected to the application server via a converged fabric where the explicit node for the converged fabric has been omitted for the sake of simplicity.

All concepts and the various embodiments of the inventions described herein are equally applicable to cases where application servers are connected via classical Ethernet or via converged data center fabric or via any other connection means known to one of skill in the art.

The novel approach described herein which in one embodiment of the invention is the APS of provides attribute based authorization based on Triangulated Identity for example based on user network environment protocol and content resource attributes to control access to application resources. Both policy decision point PDP and policy enforcement point PEP are centralized in the network to provide a policy driven standards based and granular authorization enforcement that is non invasive to applications. It complements network access control in that network access control protects the network via client side in building deployment whereas the APS can be used to protect applications for both client to server and server to server sessions via data center side deployment. Network access control ensures only that the proper client with appropriate host integrity gets access to the network where as the APS of this approach ensures that the client is restricted to legitimate use once he she is on the network. Thus a client a user or machine having access to a given LAN no longer gets automatic access to LAN applications unless explicitly authorized. The novel approach described herein leverages existing enterprise identity management and policy definition infrastructure through standards based protocols e.g. via LDAP AD XACML SAML Kerberos . In order to apply the authorization policy to any connection session it is essential to identify the client originating that connection.

As described in detail in this disclosure there are many embodiments of the invention that can be used to identify a client and to grant or reject authorization. In one embodiment of the invention as an ANA it can be used to act as an authentication proxy for web HTTP for example and file CIFS for example protocols. For example in case of a not yet authorized or a known illegitimate HTTP request the APS could send an HTTP 401 status response to a client requesting the client to provide its credentials. In another embodiment of the invention the APS together with Windows Single Sign On can provide a seamless end user login experience in active directory AD environments. In yet another embodiment of the invention the APS can interact with a network gateway and provide the username credentials for seamless user login.

Various other embodiments of the invention can be used as an LDAP Proxy for snooping of AD RADIUS transactions etc. In all these cases this approach may maintain an IP address to user id mapping though such mapping cannot be solely relied on because of the possibility of source IP address spoofing. When the Transparent Secure Transport functionality of this approach is enabled IP spoofing can be made impossible a major security benefit that no other approach known in the art can support because integrity of the packet is checked making sure that the appropriate client is guaranteed to have generated the given IP packet.

For end to end protection one embodiment of the invention can provide encrypted Transparent Secure Transport for client sessions without breaking existing ISO Layer 2 to ISO Layer 4 services. Because the primary target of this function is to provide data privacy for internal communication it is important to keep visibility to network headers so that network operators can continue to use traditional traffic monitoring and protocol analysis tools. Also this approach allows the Transparent Secure Transport function to co exist with existing network layer services such as access control lists ACL and Quality of Service QOS . The Transparent Secure Transport functionality allows creation of resource enclaves with different levels of security. For example all sessions destined to high security enclaves would always be encrypted while sessions destined to medium security enclaves would be cryptographically authenticated only Like the Triangulated Authorization service support the Transparent Secure Transport service of our approach is non invasive to application resources.

Referring back to which illustrates one embodiment of the invention where both the front end connection between the client and the APS can utilize Transparent Secure Transport and the back end connection between the APS and the application server can use Transparent Secure Transport . Application resources can be segmented in multiple security zones based on the sensitivity of the data transmitted.

Different security zones can be created with different levels of security based on policies. For example encryption and integrity checks may be used for very sensitive data. In this case the payload in the each packet is encrypted and an integrity code for example a Message Authentication Code is added to make sure there is no tampering with the encrypted data in between. For less sensitive data only integrity codes may be added to each packet to make sure no one tampers with the data in between however the data itself is not encrypted.

The Transparent Secure Transport of this approach for example Transparent Secure Transport or Transparent Secure Transport are transparent to existing ISO Layer 4 services unlike other approaches known in the art such as IPSec or SSL based VPN. For example as is illustrated in a packet which is transported via IPSec s Transport Mode will have its TCP header encrypted. As is shown in a packet comprising an Original IP header a TCP header and data which is transported via IPSec s Tunneling Mode will not only have the TCP header but also have the Original IP header encrypted. In both cases this prevents existing ISO Layer 4 services from analyzing such network traffic because the original IP header and the TCP header are not visible anymore during such secure transport.

In one embodiment of the invention for example as the APS of the approach comprises techniques to utilize Virtual Directory Infrastructure. The Virtual Directory Infrastructure concepts of this approach are illustrated in . The Virtual Directory Infrastructure hides the complexity of the different protocols and the different formats by providing a common interface for example the LDAP interface on one end and translating to the native protocols and formats of various identity stores for example of identity store and identity store on the other end. The translation is done via special connectors for example a Directory Connector or a Database Connector . Providing this abstraction also helps to integrate emerging formats of identity stores into an enterprise network solution. When a new kind of identity store for example the Flat file Identity Store with a new format needs to be integrated the Virtual Directory Infrastructure can be extended by adding a new connector in this case the Flat file Connector which translates to the protocol of the new identity store.

Virtual Directory Infrastructure can provide real time access to the existing identity stores without moving the data out of the original repository. Real time access permits the data in the underlying stores to be quickly accessed without requiring batch conversions of the repository data in advance. This has the advantage of maintaining the consistent identity information i.e. the modifications done in the identity store will take effect immediately. However if the information changes rarely then the Virtual Directory Infrastructure could be configured to cache the identity information so that it does not need to read from the identity store each time a request is made and hence it can avoid the costly operation of translating between LDAP requests and the native protocols used by the identity repositories. The Virtual Directory Infrastructure can act as a single access point for retrieving or updating data in multiple data repositories. For example the Virtual Directory Infrastructure can logically represent information from a number of disparate directories databases and other data repositories in a virtual directory tree. Various users and applications can get different views of the information based on their access rights which helps to control who can access modify which identity information. The Virtual Directory Infrastructure can also provide multitude of other features as described below 

Dynamic Join One of the main tasks of Virtual Directory Infrastructure is to act as a single access point where information from a large number of identity repositories need to be retrieved. Many times there is no one to one correspondence between the information needed and the amount of information stored in the back end repositories. A common situation is that the information is scattered over several data repositories. It is desirable therefore to dynamically join data sets from several repositories before the result is returned. The Virtual Directory Infrastructure can provide such a Dynamic Join function.

Multi Search In the case of Multi Search Virtual Directory Infrastructure submits the search request to all or to a defined subset of the available repositories. The Virtual Directory Infrastructure can have the capability to either return the first match found or all the matching entries from all defined repositories.

Schema adaptations Virtual Directory Infrastructure can overcome the schema differences between the incoming requests and the data sources by mapping the attribute names in the back end data sources to the attribute names used in the incoming LDAP requests.

Attribute value modification In many cases it may be necessary to change the actual attribute value being returned in the response. For example changing the sequence of the surname and given name in the common name. The Virtual Directory Infrastructure can provide such attribute value modification.

One embodiment of the invention described herein is a system for access control in enterprise networking. shows how transport protocol connections can be terminated in one network appliance in a centralized manner and how the different computational complexities of lower network layer processing and higher network layer processing can be addressed by splitting the network processing into two separate processing domains. A LDTF such as the LDTF can be used for the inter process communication between those domains.

In one embodiment of the invention the LDTF is implemented using the IB point to point switch fabric architecture. This embodiment is shown in . The ANA which can be the ANA of acts as a proxy between a client and the application server . Incoming connections from the client are terminated in the NSM and are transformed into a data stream. This data stream can for example without limitation be transported via the D3 fabric . In one other embodiment of the invention the LDTF is implemented using an RDMA capable interconnect fabric such as fabric as it is described in . In further embodiments of the invention it is contemplated that other LDTFs may be used as interconnect fabrics for example without limitation iWARP and other interconnect fabrics such as are known or may become known to one of ordinary skill in the art.

This can be done by PDU processing and reassembling the payload of the PDUs into their corresponding data stream. This data stream is transported via D3 fabric to the ASM for further ISO Layer 7 processing. The result of ISO Layer 7 processing done by ASM is then transported back still as a data stream again via the D3 fabric to the NSM . The NSM then transforms the data stream into PDUs and sends the PDUs to the application server using the appropriate transport protocol. Connections which originate from the application server can be handled similarly.

In addition in order to support converged data center fabric the ANA of can be to accomplish this. In such a case the LDTF of is the D3 fabric of . In yet another embodiment of the invention the LDTF for example LDTF of or LDTF of can be implemented via Data Center Ethernet which is also a lossless low latency high bandwidth RDMA capable fabric. In yet another embodiment of the invention the LDTF for example LDTF of or LDTF of can be implemented via iWARP which supports RDMA via TCP. One benefit of the present approach is the overall reduction of latency in the communication link between clients and application servers. Yet another benefit is that the approach can be scaled with various specialized dedicated processing modules.

Yet another benefit of the above approach is that it can be used to build ANAs with high availability and zero click fail over behavior. High availability with zero click fail over can be achieved by having redundant peer ANAs maintain a consistent redundant state with other peer ANAs. This means that all relevant state information including the data stream information is replicated and synchronized among the redundant peer ANAs. When ANAs behave as a high speed proxy fault tolerant transport protocol functionality is required which includes maintaining an active backup transport protocol stack and keeping track of states of the transport protocol connection. A redundant peer ANA which acts as a backup for another ANA is able to take over the other ANA s protocol connection completely transparent to clients. The primary ANA s and the backup ANA s transport protocol stack each see the same client to server stream which means that both the primary and the backup ANA independently process the transport protocol state but only the current primary ANA responds to client server requests.

To facilitate state and data replication among redundant peer ANAs it is important that peer ANAs have visibility into their peers memory. A lossless low latency high bandwidth RDMA capable interconnect fabric which can be the LDTF of the D3 fabric of or the LDTF of can also be used for visibility into peer memory. This approach overcomes the main drawback of today s solutions for high availability where visibility into peer memory comes with a significant compute and communications overhead as was described above in relation to .

Each ANA ensures state redundancy its peer ANA s . In one embodiment of the invention NSM performs Network Service processing for client and consistently does stream replication via LDTF and LDTF to update its redundant state data in its peer s NSM and vice versa. Similarly ASM performs ISO Layer 7 processing for application server and then replicates its ISO Layer 7 state information by updating its redundant state data in its peer s ASM via writing through LDTF and LDTF into its peer s state memory.

More than two ANAs such as the two ANAs and in or ANAs and in can be used to increase an enterprise network s reliability and availability even further. This is shown in where in one exemplary setup four ANAs are used in combination to provide scalability for high bandwidth performance as well as high availability via redundancy. Any of ANAs can for example be the ANA of or the APS of . Each ANA itself provides a scalable and highly available setup. For example ANA comprises one NSM and two ASMs and all connected via LDTF . For example ANA comprises one NSM and two ASMs and all connected via LDTF . For example ANA comprises one NSM and two ASMs and all connected via so called intra ANA LDTF . For example ANA comprises one NSM and two ASMs and all connected via LDTF . At the same time the LDTF connectivity is extended via so called inter ANA LDTF . As a result each ASM of any ANA can be made a backup ASM for zero or more other ASMs again from any other ANA for example ASM can operate as a backup ANA for ASM or as a backup ANA for ASM .

One key aspect of the invention described herein is the approach to keep the communication in separate planes For example a Network Service plane an Application Service plane and a Management Service plane. The fact that the Network Service plane is separate from the Application Service plane is also reflected by splitting the network protocol processing into two or more domains for example into Network Service processing and Application Service processing as it is for example described in . This offers additional options for optimizing the performance of this approach and to make it scale better to networking and availability demands.

One option is that at the Network Service plane a processing unit for packet order work processing can be deployed. Then the packets of a particular connection can be handled by any processing element of a multi processing architecture without the need for software locks. The packets can then be processed in multiple stages which provide a higher degree of concurrency. Similarly at the Application Service plane a processing unit for transaction order work processing can be deployed and for example implemented in software. Then the transactions of a particular connection can be handled by any processing element of a multi processing architecture without the need for software locks. Therefore each transaction can then be processed in a pipelined fashion which serializes the application data processing and increases the level of concurrency for ISO Layer 7 processing which again further increases the compute efficiency of this approach.

At the Network Service plane various possibilities for network flow control schemes now become possible. shows how two NSMs can be used to scale the ANA for an increased bandwidth demand. The NSM and the NSM each service client and client respectively therefore providing load balancing options. Both NSM and NSM reassemble the PDUs to transform the PDU payload into a data stream. Both NSMs are connected to LDTF to forward the data stream to ASM for ISO Layer 7 processing before it gets sent to the application server . One advantage of balancing the transport protocol traffic over two or more NSMs is to reduce latency in a client to server connection for example when compute intensive SSL termination is done by a NSM. While illustrates the case of dedicated NSMs one for client and another NSM for client somewhat reflecting the case of a segmented network all the two or more NSMs could be connected to all clients as well.

In a practical enterprise network application another performance optimization is important. Typically one NSM can keep several ASMs busy. Therefore it makes sense not only to load balance traffic in the Network Service plane but also in the Application Service plane. Various possibilities for such optimizations exist as disclosed herein. In one embodiment of the invention the ANA of uses one NSM for communication with client and that NSM forwards the transformed data stream via LDTF to two or more parallel ASMs. In this example three ASMs and are available each dedicated to one application server namely and . Load balancing among the two or more ASMs can be done by the NSM and can for example depend on which application server provides the Application Service requested by the client.

Many combinations of scaling by connecting one or more NSMs and one or more ASMs are possible all interconnected via lossless low latency high bandwidth LDTF. For example in yet another embodiment of the invention which is illustrated in a hybrid combination of parallel and pipelined ASMs is shown The ANA uses one NSM for communication with client and that NSM forwards the transformed data stream via LDTF to two or more ASMs. One ASM performs dedicated ISO Layer 7 processing for application server . Parallel to ASM three other ASMs and are pipelined to perform ISO Layer 7 processing for application server .

The third plane the Management Service plane is a communication means for all administrative processing such as for example common system management functions chassis management power management component audit and logging component and system status update as well as configuration health monitoring and management of processing elements in network services and Application Service plane. The Management Service plane comprises System Control Modules SCMs which can have out of band connectivity as well as in band connectivity to processing elements on the Network Service plane and to processing elements on the Application Service plane. Typically software image download configuration information and statistics collection messages are exchanged between one or more SCMs and the rest of the system components.

LDTF is a SCM which performs the administrative tasks. In one embodiment of the invention IB is used as the LDTF for example IB fabric from which can support virtual lanes and a dedicated virtual lane may be reserved just for system management communication involving the SCM.

For performance scaling purposes and to support high availability two or more SCMs can be connected to the LDTF. For example in one embodiment of the invention which is illustrated in an ANA which behaves as a proxy for client to server connections and connected for network processing for example to a client and an application

server . The ANA can have one or more NSMs such as NSM connected via LDTF to one or more ASMs such as ASM . The ANA can also have two or more SCMs such as SCM and SCM also connected to LDTF .

In yet another embodiment of the invention as is illustrated in two or more ANAs such as ANA and ANA can be connected via a high availability link using LDTF. The high availability link can be an external extension of the internal LDTFs and . Each ANA can then operate as a backup ANA for one of its peers as it is described above. Similarly to NSMs and ASMs the two or more SCMs can replicate their state information and update their state information in their backup ANA s SCM by writing state information into the peer s memory via the LDTF using for example RDMA. Similarly in yet another embodiment of the invention as is illustrated in two or more ANAs such as ANA and ANA can comprise two or more SCMs such as SCM and SCM and SCM and SCM respectively.

A NSM processes the lower network layers ISO Layer 2 to ISO Layer 5. In one embodiment of the invention such a NSM can be constructed as shown in . The NSM which can be for example the NSM in comprises a host channel adapter HCA a network services processor NSP an physical network layer receiver Phy and memory . The host channel adapter connects to the LDTF which can be IB fabric. The physical network layer receiver connects to Ethernet. The NSP runs programs stored in memory to perform ISO Layer 2 to ISO Layer 5 processing such as Centralized Transport Protocol Termination PDU reassembly to transform the PDU payload into a data stream cryptographic processing etc.

For better scalability in one embodiment of the invention a NSM can be a multi processor architecture as shown in . Here the NSM can comprise two or more NSPs such as NSP NSP NSP each having a dedicated host channel adapter such as host channel adapter host channel adapter and host channel adapter and dedicated memory such as memory memory and memory . A load balancer is in between the NSPs and the physical network layer receiver and balances the network load between the two or more NSPs. The load balancer can use common approaches known in the art to balance ingress or egress network traffic.

An ASM performs the ISO Layer 7 services including application data processing on the data stream which is the data stream of the transport protocol s PDU payload transformed by one or more NSMs. illustrates how an ASM can be constructed in one embodiment of the invention. The ASM comprises a host channel adapter HCA an Application Service Processor ASP a bridge and memory . The host channel adapter connects to the converged data center fabric which can be for example without limitation LDTF or IB fabric. The bridge connects to the LDTF as a link to NSMs for example. The ASP runs programs stored in memory to examine all ISO Layer 7 traffic and to perform ISO Layer 7 processing such as regular expression parsing compression and decompression standard and custom protocol proxy functions etc.

For those tasks a high compute power is needed typically more than for plain ISO Layer 2 to ISO Layer 5 processing. Therefore a single processor architecture using existing micro processors may require hardware assist to provide sufficient compute power for high bandwidth client to server connections. Alternatively it may be advantageous to implement an ASM either as a homogeneous multi processor system of generic ISO Layer 7 processing units or as a heterogeneous multi processing system using a sea of different specialized ISO Layer 7 processing units. shows such a multi processor architecture Here the ASM can comprise two or more ASPs such as ASP ASP ASP each having a dedicated host channel adapter such as host channel adapter host channel adapter and host channel adapter and dedicated memory such as memory memory and memory . The LDTF bridge connects the ASPs via the LDTF to the NSMs for example.

For building the multi processor architecture of the ASM several options exist A multi core processor technology can be used which can be a System on a Chip with on chip hardware accelerators or one can use multi core processors with external co processors for example a co processor for cryptographic operations a co processor for regular expression analysis a co processor for data compression and decompression etc. A parallel mode compute architecture can be deployed which will require a flow dispatcher to distribute incoming traffic across the multiple processors. A pipelined mode compute architecture can be used where one processing element acts as a pre processor for a subsequent processing element. Or a hybrid approach can be used combining parallel mode with pipelined compute architectures. Further any other architecture contemplated by one of skill in the art may be used.

In any case the compute architecture requires a lossless low latency high bandwidth fabric for any to any inter process communication links between the one or more NSMs which each may comprise one or more NSPs and the one or more ASMs which each may comprise one or more ASPs . shows how in one embodiment of the invention one ISO Layer 2 to ISO Layer 5 processing unit NSM and one ISO Layer 7 processing unit ASM can be connected via the LDTF . Key to the connection is the use of an RDMA network interface connector RNIC which can be a host channel adapter for IB for example host channel adapter or host channel adapter or host channel adapter or host channel adapter or host channel adapter or host channel adapter or host channel adapter or host channel adapter . Of course two or more ISO Layer 2 to ISO Layer 5 processing units can be connected to two or more ISO Layer 7 processing units accordingly.

Many options exist for implementing the LDTF In one embodiment of the invention the LDTF can be IB. In another embodiment of the invention the LDTF can be Data Center Ethernet with RDMA support. In yet another embodiment of the invention the LDTF can be iWARP which supports RDMA over TCP. Besides being a lossless low latency high bandwidth interconnect means RDMA enables the performance of RDMA one sided read based load monitoring and can be used to map connection level flow control using RDMA queue pair flow control.

In yet another embodiment of the invention when IB is used for the LDTF virtual lanes in IB can be used to partition the communication for example for hardware virtualization or for separating system management communication from network traffic or to partition an ANA into multiple logical instances or to have an independent administrative domain. The concept of IB is explained in IB virtual lanes are part of the IB link layer. A virtual lane such as virtual lane virtual lane virtual lane virtual lane is a unique logical communication link that shares a single physical link for example the physical link . In IB technology each physical link can have up to 15 virtual lanes and a management lane. As a packet travels through the subnet it can be assigned a priority or service level. Higher priority packets are sent down special virtual lanes ahead of other packets.

Currently data centers deploy many different fabrics for server interconnects. The transition of the data center fabric to a converged lossless low latency high bandwidth fabric is an important consideration therefore various embodiments of some of these inventions for the case of converged data center fabric are provided. In such descriptions various possibilities to connect to application servers exist for example depending on whether the applications can communicate via Sockets Direct Protocol or whether applications support a native RDMA interface. Though the latter case is more performance efficient it requires rewriting of legacy applications to work with native RDMA. In either case application servers run TCP less which significantly boosts application throughput. For the case of a TCP based connection to an application server for example via Ethernet it helps to compare with for guidance on how to construct the various embodiments of some of these inventions in case the one or more ASMs send the ISO Layer 7 processed data stream back to the one or more NSMs for transmission to the one or more application servers. Various modifications of this approach as contemplated by one of skill in the art may be used.

In one embodiment of the invention the APS in is used to perform attribute based Triangulated Authorization services. In another embodiment of the invention the ISO Layer 7 authorization server and or of is used for performing attribute based Triangulated Authorization services for a subject which requests access to a resource hosted on an application server . Attribute based Triangulated Authorization complements existing approaches for access control known in the art via a network centric application agnostic applications access control based on a Triangulated Identity. The Triangulated Identity can comprise protocol and content attributes such as protocol and content attributes from and thus extend the common identification concepts known in the art which almost solely rely on ISO Layer 4 attributes. The Triangulated Identity comprises three areas of identification 

The Triangulated Authorization can complement and even co operate with other existing approaches for authorization and authentication for example to form a multi stage authorization solution In a first stage classical ISO Layer 3 based and or ISO Layer 4 based authorization can be done for example using a classical firewall. Requests that pass this first stage then get processed by a second stage authorization. In this second stage the appropriate APS performs Triangulated Authorization based on ISO Layer 7 Application Service data. If the request passes this second stage it will get handled by a third stage. This third stage can for example be another APS in a multi APS and or in a multi ANA architecture or it can be handled by classical application centric authorization methods such as illustrated in or .

Besides cascaded operation the APS can perform Triangulated Authorization in combination with embedded PDP and embedded PEP and optionally with external PDP. In one example as shown in a subject requests access to a resource which is provided by application server . In a first authorization stage the APS performs Triangulated Authorization using its own internal PEP and its own internal PDP . This PDP operates on the Triangulated Identity which can rely on protocol and content attributes for example. The APS can optionally also interact with another external PDP such as PDP which is served by a policy server and which operates on the user attributes . When the APS grants subject access to resource a secondary authorization this time embedded in the application server can be performed. Various possibilities exist for example the application server can have its own embedded PEP and its own embedded PDP . The embedded PDP can operate on user attributes to make an access control decision. Or PDP can operate on user attributes for example via a Virtual Directory Infrastructure. In another example the application server has no embedded PDP and instead interacts with the PDP from the APS or with the PDP from policy server or both. In yet another example the application server has no embedded PEP and instead utilizes the PEP from the APS for access control.

In one of the embodiments of one of these inventions policies are used in a rule based authorization method to define sets of rules for authorization permissions. Rules are expressions or conditions on multiple arbitrary attributes which evaluate to TRUE or FALSE and determine whether access shall be granted or rejected. Policies are stored in a PDP for example PDP which can be for example LDAP AD. Also policies can interact with single sign on assertions from SAML or Kerberos. The policies can be described in various formats including common scripting languages such as TCL Python or Perl. Policies can also be described in industry standard formats such as XACML or in proprietary formats or combinations thereof.

In protocol recognition of various approaches for analyzing protocols can be deployed for protocol analysis. LAN frames and VLAN frames can be analyzed by looking at their portions . The HTTP protocol is illustrated in . The CIFS protocol is illustrated in . The SQLNet protocol is illustrated in .

A Virtual Directory Infrastructure hides the complexity of the different protocols and the different formats of identity stores and can provide real time access to the existing identity stores without moving the data out of the original repository. The Virtual Directory Infrastructure can be used in conjunction with Triangulated Authorization. and show how one embodiment of the invention can perform Triangulated Authorization when a client issues a first request and Virtual Directory Infrastructure is utilized. A user which can be for example client of or client of or client of connects to the ANA which can be for example the APS of or the authorization server of . In a first step the user issues for the first time a request to login for example to access certain resources on application server ISO Layer 7 proxy terminates the transport protocol connection from the user and acts as a proxy for application server as described above. In a second step the ANA then authenticates the user via access to Virtual Directory Infrastructure . This Virtual Directory Infrastructure can for example be Virtual Directory Infrastructure of . In a third step the Virtual Directory Infrastructure obtains user attributes from the multiple identity data stores and . In a fourth step the obtained user attributes get cached in the session record table . In a fifth step the ANA finds the relevant policy and makes a policy based access decision based on the user or other attributes obtained for example via ISO Layer 7 service processing using the rule engine as described above. In a sixth step the ISO Layer 7 proxy forwards the request from user to the application server if and only if permitted by the policy. In a seventh step the ISO Layer 7 proxy proxies the response from the application server and forwards the server s response together with a session cookie back to the user . The order of the above steps is exemplary only and is not intended to be limiting.

In one embodiment of the invention described herein the ANA shown in where a client can access applications and where the access to such applications is controlled by the APS . For security and for privacy reasons the connection between the client and the APS and the connection between the APS and the application server can be protected by encryption for example. While the secure transport approaches known in the art are not transparent to ISO Layer 4 networking because the original TCP IP header may get encrypted and replaced see above in one embodiment of the invention a novel Transparent Secure Transport system and method is disclosed.

This drawback of encrypting the original IP information is solved by one embodiment of the invention described herein. According to one embodiment of the invention the original data packet can be sent by transporting it within the packet . The original destination IP address and the original destination TCP port number are used unencrypted such that ISO Layer 4 network analysis can seamlessly be applied. Therefore the transport mechanism of this approach is transparent to existing networking. And because the original payload gets encrypted into the encrypted payload plus an encryption header for example SSL header the transport is also secure. In one embodiment of the invention SSL is used for encrypting the payload. In another embodiment of the invention DTLS is used for encrypting the payload.

In another embodiment of the invention the Transparent Secure Transport can use a different Transparent Secure Transport depending on a particular security zone configured in a policy. This is described in conjunction with . In a first step S a client connects to the gateway for the first time. In a second step S a security agent transparently gets downloaded to and installed onto the client. In a third step S the agent establishes a secure control channel to the gateway. In a fourth step S the agent negotiates the required security parameters with the gateway. In a fifth step S the agent downloads the policy from the gateway via the secure control channel. In a sixth step S the agent analyzes the policy to determine the client traffic that requires Transparent Secure Transport. In a seventh step S the agent transparently traps the client traffic that matches the configured policy. In an eighth step S the agent proxies connections to provide the required security service. In a decision the agent checks the security zone configured in the downloaded policy. If the security zone only requires medium security the method continues at step S. However if the security zone requires high security the method continues with step S in which the payload is encrypted using the negotiated security parameters. In step S the agent adds an integrity code such as a Message Authentication Code MAC for example using the negotiated security parameters. In a last step S the client has established Transparent Secure Transport with the applications. This Transparent Secure Transport can for example use packets as shown for packet of . In yet another embodiment of the invention if the security zone only requires low security no encryption may be performed on the payload and no integrity code may be added but just authorization may be performed. The order of the above steps is exemplary only and is not intended to be limiting.

Virtualization provides a way to manage resources independent of the underlying physical implementation to increase utilization efficiency and flexibility. For example it allows partitioning a single physical resource into multiple logical instances with independent administration domains which is helpful in a managed Network Service deployment.

Domains and Contexts are two key constructs for describing the virtualization features of one or more of the embodiments of some of the inventions. A context is a combination of Policy Administration Point PAP Policy Decision Point PDP and Policy Enforcement Point PEP . Typically an administrative boundary is identified by the context. A domain can contain one or more contexts which are useful to identify and control certain soft resources. For example domain configuration can be used to limit the number of users sessions connections etc. Domains may also have configurations which are common across contexts for example directory server information. Given a context it is easy to identify the domain it is associated with because every context belongs to one and exactly one parent domain.

In one embodiment of the invention the concept of service level is used to provide differentiated services among one or more domains having one or more contexts. The service levels can be used to control hard resources such as processor bandwidth memory and network bandwidth. There can be one or more service levels within one ANA and a domain can be mapped to one of these service levels. One embodiment of the invention can utilize the virtual lanes of the internal LDTF to support differentiated services. For example the virtual lanes of can be used as illustrated in . A certain set of a virtual domain s traffic can be mapped to use one or more virtual lanes and hence provide differentiated services among the virtual domains or contexts. As a practical example according to one embodiment of the invention an enterprise may have multiple business units and each business unit may have multiple application servers. In the virtualization terminology used within this description each business unit can be mapped to a domain and each application server s policy or group of application servers if the policy administrative owner is same for the group of application servers can be mapped to a context.

In another embodiment of the invention ANAs can have one or more contexts which are associated with one or more Policy Domains. This is illustrated in where an ANA comprises the default context plus the user context plus the user context etc. The default context can comprise one or more policy domains such as the policy domain and the policy domain . Each policy domain can comprise one or more policies and application proxies. For example the policy domain comprises an authentication policy an authorization policy an application proxy and an application proxy . The policy domain comprises an authentication policy an authorization policy an application proxy and an application proxy . The user context for example can comprise the policy domain which itself comprises the authentication policy the authorization policy the application proxy and the application proxy . Each context can comprise Virtual Directory Infrastructure to access the directory servers for example directory server directory server or directory server accordingly.

For policy administration purposes a hierarchical approach can be used which is shown in . A root administrator can delegate administration to root administrator who administers the default context . The root administrator can also delegate administration of user context to context administrator and administration of user context to context administrator for example. Again context administrators can delegate administration to policy domains. For example root administrator can delegate administration of policy domain to policy administrator while policy auditing can be performed by policy auditor and root administrator can delegate administration of policy domain to policy administrator while policy auditing can performed by policy auditor . Context administrator can delegate administration of policy domain to policy administrator while policy auditing can be performed by policy auditor and context administrator can delegate administration of policy domain to policy administrator while policy auditing can be performed by policy auditor . Context administrator can delegate administration of policy domain to policy administrator while policy auditing can be performed by policy auditor and context administrator can delegate administration of policy domain to policy administrator while policy auditing can be performed by policy auditor .

The TCP profile the application proxy the policy domain and the SSL profile have policy domain specific configuration.

The application profile the application proxy the policy domain the authorization policy set the authentication policy set the authorization obligation the authorization policy the authentication policy the authentication obligation the target and the rule have policy domain specific configuration.

As a result a network centric application agnostic access control platform can be built which provides guaranteed isolation of the virtual contexts and domains at all levels. For example without limitation ISO Layer 2 to ISO Layer 4 Network Services of one context can be isolated from another context s ISO Layer 2 to ISO Layer 4 network services ISO Layer 5 to ISO Layer 7 network services of one context can be isolated another context s ISO Layer 5 to ISO Layer 7 network services command line interfaces for one context can be isolated from the command line interface of another context accounting operations from one context can be isolated from the accounting operations from another context etc. Isolation means that contexts can independently be created deleted managed administered modified viewed analyzed logged etc. from each other see . Further other divisions of labor among the ISO layers may be contemplated by one of skill in the art the division may be into two or more service planes or collections of ISO layers as may be appropriate to what is needed in a given application.

There are several ways to implement the various embodiments of the invention more preferably there are specific ways which may be most cost efficient. These are described in the following.

One fundamental novel principle of this approach is to split the processing architecture into separate planes A Management Service plane a Network Service plane and an Application Service plane. The Management Service plane comprises one or more SCMs and is used for all out of band connectivity to processing elements on the Network Service plane and to processing elements on the Application Service plane and can be used for example for software image downloading command line interface statistic collection messages general system management functions configuration management etc. The Network Service plane comprises one or more NSMs for ISO Layer 2 to ISO Layer 5 processing and proxy functions. The Application Service plane comprises one or more ASMs for ISO Layer 7 services processing and for data stream analysis. As discussed above this division into a Network Service plane and Application Service plane should be viewed as exemplary only and other divisions and arrangements and number of service planes may be contemplated by one of skill in the art.

This tri planar architecture is for example shown in where ASM performs the processing for the Application Services NSM performs the processing for the Network Services and SCM performs the processing for the Management Service plane. The lossless low latency high bandwidth LDTF connects these processing planes for efficient reliable and scalable inter process communication. While explains the tri planar architecture for the case of converged data center fabric connections to application servers this tri planar architecture can easily be adjusted to function with standard Ethernet for application server connections. The adjustments become clear when comparing the architectural aspects shown in for the case of using converged data center fabric with the architectural aspects shown in or in for using standard Ethernet.

One embodiment of the invention is shown in which shows exemplary non limiting functional components of an ANA. The processing in Application Service plane is done by ASP components the processing in the Network Service plane is done by NSP components the processing in the Management Service plane is done by Management Service processor components and the LDTF inter process communication is done by the IB Verb API which utilizes standard IB techniques known in the art. The ASP components comprise an ASP configuration agent the rule engine run time build API the user attribute manager the Virtual Directory Infrastructure the rule engine PDP and PEP the session manager the HTTP proxy the high availability manager the protocol extension languages the socket or event library the application switch upper half . The ASP configuration agent interacts with the ASP configuration broker from the Management Service plane to perform administrative tasks such as configuration of components with appropriate parameters. The rule engine run time build API provides a procedural interface for building rules based on the policies loaded. The user and attribute manager extracts the various attributes from the data stream which are needed to evaluate policy rules. The user and attribute manager can for example comprise the user attribute manager and the content attribute manager from . The Virtual Directory Infrastructure provides routines for interacting with Virtual Directory Infrastructure and can for example be Virtual Directory Infrastructure of . The rule engine PDP and PEP provide routines for evaluating rules from policies. The rule engine PDP and PEP can for example be the rule engine from or from . The session manager provides routines for extracting managing and storing session information and can for example interface with the session record table from or from . The HTTP proxy provides routines to perform operations required when proxying the HTTP protocol in this centrally terminated stream switch architecture. The HTTP proxy can for example be the HTTP proxy from or from . The high availability manager performs routines for monitoring components and for synchronizing redundant stateful data in the various components. The protocol extension languages provides routines required for proxying custom protocols from Application Services and interacts for example with the custom protocol proxy from or from . The socket or event library provides for example routines for non RDMA communication which uses TCP sockets. The application switch upper half interacts with the IB Verb API and provides routines for RDMA based inter process communication.

The SCM comprises one or more Management Service processors which run for example routines for chassis management configuration management software image management auditing and logging and platform high availability. Because these do not require a lot of compute power a low end standard micro processor for the one or more Management Service processors is sufficient.

On the hardware side a NSM comprises one or more NSPs. In one embodiment of the invention the NSM is the NSM of . Because a NSP has to perform compute intensive tasks which can be parallelized efficiently it is desirable to use a multi processing system for the NSP. In one embodiment of the invention the NSP is the NSP from which comprises multiple CPU cores and for parallel processing. Because very specialized processing namely ISO Layer 2 to ISO Layer 5 processing needs to be done within a NSP it is also desirable to deploy special purpose hardware accelerator units within a NSP. shows how in the NSP CPU core the CPU is complemented by an SSL accelerator unit a regular expression accelerator unit and an ACC accelerator . In another embodiment of the invention a Chip Multi Processor such as the IBM cell processor from is used to implement one or more NSPs. And in yet another embodiment of the invention Cavium Networks Octeon CN5860 CPU from is used to implement one or more NSPs. While the figures are described in conjunction with particular hardware this is not intended to be a limitation. Other hardware as known to one of skill in the art is contemplated within the scope of the present inventions.

On the software side the one or more NSPs of a NSM run for example without limitation routines for ingress and egress processing for external data path for processing of the IP stack for TCP and SSL termination for fast path flow switching for data stream load balancing among multiple ASPs for stream replication to backup NSPs etc. shows an exemplary software architecture for a NSP according to one embodiment of the invention described herein. The NSP which comprises one or more CPU cores runs the symmetric multiprocessing operating system . Above the SMP OS sits a Chip Multi Processing library which has special routines to exploit the parallel compute elements within the NSP. The Chip Multi Processing library can support parallel or pipelined multi processing. On top of that sits the Network Service Application Container . In one embodiment of the invention the SMP OS of can be the R OS of . R OS comprises the Linux kernel 2.6.x the Configuration Manager the Event

Manager Linux device drivers the RIMS layer which is an inter process communication layer which provides R OS infrastructure messaging services to service access points the License Manager the Interface Manager the Chassis Manager the Feature Manager the Crypto Vault Manager and the High Availability Manager . In one embodiment of the invention the Network Service Application Container can comprise the routines as shown in . These can for example be used to perform data stream load balancing of incoming client traffic among two or more ASPs. Load balancing uses one sided RDMA read operations for checking an ASP s load without interrupting the processing on the ASPs. 4.1.3 Modules Overview ASM

On the hardware side an ASM comprises one or more ASPs. In one embodiment of the invention the ASM is the ASM of . In another embodiment of the invention the ASM is the ASM of . The ASM can comprise one or more ASPs and FPGA SPI bridge Memory and and IB host channel adapters HCA and which provide connection to the IB fabric. The ASPs and the FPGA are also connected via SPI . buses. The ASP also is connected to a Phy which connects to converged data center fabric.

Many different possibilities exist for implementing an ASP. Because an ASP has to perform compute intensive tasks which can be parallelized efficiently it is desirable to use a multi processing for the ASP. In one embodiment of the invention the ASP is similar to the one as shown in which comprises multiple CPU cores and for parallel processing. Because very specialized processing namely data stream processing needs to be done within an ASP it is also desirable to deploy special purpose hardware accelerator units within an ASP. The ASP CPU core architecture is similar to the one as shown in . In another embodiment of the invention a Chip Multi Processor such as the IBM cell

processor similar to the one as shown in is used to implement one or more ASPs. And in yet another embodiment of the invention Cavium Networks Octeon CN5860 CPU from is used to implement one or more ASPs.

On the software side the one or more ASPs of an ASM run for example routines for HTTP protocol proxy functions CIFS protocol proxy functions JDBC protocol proxy functions regular expression checks protocol recognition application authorization and state replication to backup ASPs. The software architecture for an ASP is similar to the one shown in . The ASP which comprises one or more CPU cores runs the symmetric multiprocessing operating system. Above the SMP OS sits a Chip Multi Processing library which has special routines to exploit the parallel compute elements within the ASP. The Chip Multi Processing library can support parallel or pipelined multi processing. On top of that sits the Application Service Application Container. In one embodiment of the invention the SMP OS can be the R OS similar to the one as shown in . R OS comprises the Linux kernel 2.6.x the Configuration Manager the Event Manager Linux device drivers the RIMS layer which is an inter process communication layer which provides R OS infrastructure messaging services to service access points the License Manager the Interface Manager the Chassis Manager the Feature Manager the Crypto Vault Manager and the High Availability Manager.

The LDTF provides the data plane connectivity between the one or more NSMs and the one or more ASMs. The LDTF can also provide management plane connectivity between the one or more SCMs the one or more NSMs and the one or more ASMs. This is shown in where for example two SCMs SCM and SCM provide LDTF switch and . Connected to LDTF switch is Management Service processor MSP via host channel adapter HCA NSP via host channel adapter HCA and NSP via host channel adapter HCA . Connected to LDTF switch is Management Service processor MSP via host channel adapter HCA . In one embodiment of the invention IB fabric is used to provide lossless low latency high bandwidth any to any switching. The IB fabric supports multicast communication and credit based flow control. IB can support 16 virtual lanes 15 virtual lanes can be used to implement the data plane and one virtual lane can be used to implement the management plane. The detailed connectivity of the IB fabric is shown in The IB fabric which belongs to one SCM and the IB fabric which belongs to another SCM can be connected channel wise via host channel adaptors HCA and HCA . Other IB fabric connections can go to other line card slots within the same ANA or can be used for inter chassis high availability links. Other LDTF fabrics may provide different limitations on the number and type of virtual and physical lanes. Further the IB specification may evolve and improve in future. In addition as will be appreciated by one of skill in the art it is possible to combine multiple fabrics for example IB fabrics and both aggregate and further virtualize the virtual lanes available within and among them.

Splitting the data network processing into two separate domains Network Service processing and Application Service processing especially when constrained by scalability and high availability may require a particular processing flow between the one or more NSPs and the one or more ASPs.

For example it is desirable to enforce flow control because the proxy splits the client server connection into two portions One client to proxy connection which typically has a high round trip delay time and low throughput and a proxy to server connection which typically has low round trip delay time and high throughput. The flow control for the client connection and the server connection mimic the behavior of the end to end flow control of the original client to server connection. The internal LDTF enables the mapping of connection level flow control using RDMA queue pair flow control and therefore solves the problem created by splitting the client server connection with a proxy.

Based on the granularity of the processing steps that can be distributed among the two or more NSPs or the two or more ASPs several options exist for load balancing for example in the Multi Core Scheduling or in the Application Container . In order to handle the events for multiple sockets a typical application will map each socket to a thread or a process. The advantage with this approach is that the scheduling for different socket events is taken care of by the operating system. But the disadvantage is that process and thread scheduling is a very costly operation. Especially for high speed network applications which handle many connections considerable CPU resources will be used just for process and thread scheduling. A library of ultra light weight strands can solve this problem by providing a light weight execution context the so called strand and by mapping a socket to each strand. The strand library enables having multiple strands within a system scheduling context of either processes or threads. Strand scheduling can be performed by a secondary scheduler. Essentially the operating system schedules the processes and threads and the strand library schedules the strands. The strand scheduler can be completely I O driven i.e. a strand is scheduled whenever there is an incoming or outgoing event for a given socket. In order to provide an independent execution context for each strand a separate stack can be allocated for each strand. and describe the use of so called strands according to one embodiment of the invention Communication schedule shows the communication between a NSM and an ASM via an Application Container which can for example be Application Container . The combination of threads or processes and strands executing in the NSM and in the ASM is given by schedule . The schedule compares three scenarios of using strands In Scenario there is one thread per Application Container and as many Application Containers as there are CPUs. In Scenario there is only one Application Container with as many threads within the Application Container as there are CPUs. Different scenarios can be generated in between those two described above and are contemplated within the scope of the present inventions.

The processing flow of yet another embodiment of the invention is shown in and in . In an initialization step the ASP Configuration Agent calls the Rule Engine Build API to build the rule and regular expression database . In a first step the Rule Engine Build API calls the Attribute Management API to map attributes in the policies to identifications. In a second step the Application Switch Transport API calls the HTTP Proxy callbacks whenever it receives an HTTP segment. In a third step the Session Manager calls the AAA API to authenticate the user based on an authentication policy. In a fourth step The User and Attribute Manager calls the Virtual Directory Infrastructure Virtual Directory Infrastructure API to authenticate the user and to retrieve user attributes from the Virtual Directory Infrastructure Virtual Directory Infrastructure . In a fifth step the Session Manager calls the Rule Engine PDP and PEP to determine the resource access decision. In a sixth step the HTTP Proxy calls the Application Switch Transport API to forward the user s request or response. In a seventh step the Session Manager calls the Session Record Replicate API to backup the session record. The order of the above steps is exemplary only and is not intended to be limiting.

Various embodiments of some of the inventions for scalability have been described in this disclosure for example the embodiment of the invention illustrated in can not only be used for high availability but also to scale an ANA for higher bandwidth and network processing demands. When two or more NSMs or two or more ASMs are connected via LDTF within one ANA the inter process communication between NSMs and ASMs then operates via so called intra chassis communication. Alternatively when two or more ANAs are connected via LDTF the inter process communication then operates via so called inter chassis communication. Or when both approaches are combined both intra chassis and inter chassis communication goes over the LDTF.

In one embodiment of the invention the implementation uses Ethernet TO which supports one or more 10 100 1000 TX or FX interfaces or one or more 10 Gigabit XFP SFP XENPAK interfaces. In one embodiment of the invention the network interfaces are integrated into the one or more NSPs. In another embodiment of the invention the network interfaces are dedicated devices externally connected to the one or more NSPs. In one embodiment of the invention a NSP can be implemented using a MIPS based CPU architecture such as provided by RAZA Microelectronics Inc. by Cavium Networks by Broadcom Corporation or others. In yet another embodiment of the invention a NSP can be implemented using the PowerPC architecture. In yet another embodiment of the invention the NSP can be implemented using X86 architecture. In yet another embodiment of the invention the NSP can be implemented using FPGAs from suppliers such as Altera Corporation or from Xilinx Inc. In yet another embodiment of the invention the NSP can be implemented using SoC devices for example from EZChip Technologies. In yet another embodiment of the invention the NSP can be implemented with a microprocessor which has dedicated hardware acceleration for network processing such as for TCP SSL flow termination initiation of TCP encryption and decryption etc. In one embodiment of the invention an ASP can be implemented using a MIPS based CPU architecture such as provided by RAZA Microelectronics Inc. by Cavium Networks by Broadcom Corporation or others. In another embodiment of the invention an ASP can be implemented using the PowerPC architecture. In yet another embodiment of the invention the ASP can be implemented using X86 architecture. In yet another embodiment of the invention the NSP can be implemented using FPGAs from suppliers such as Altera Corporation or from Xilinx Inc. In yet another embodiment of the invention the ASP can be implemented using SoC devices for example from EZChip Technologies. In yet another embodiment of the invention the ASP can be implemented with a microprocessor which has dedicated hardware acceleration for network processing such as for TCP SSL flow termination initiation of TCP encryption and decryption etc.

In one embodiment of the invention a host channel adapter is used to connect the one or more ASPs and the one or more NSPs to the LDTF and the host channel adapter interfaces with PCI X PCIe or HyperTransport protocol. In another embodiment of the invention that host channel adapter is a multi port or at least a dual ported device which supports active active configuration or which supports active standby configuration. In one embodiment of the invention the LDTF devices support a hardware retry mechanism. In another embodiment of the invention the LDTF devices interface with IB. In yet another embodiment of the invention the LDTF devices interface with Data Center Ethernet. In one embodiment of the invention the external LDTF for inter chassis communication is using copper fabric. In another embodiment of the invention the external LDTF for inter chassis communication is using a fiber optics fabric.

LDTF as a lossless low latency high bandwidth inter process communication infrastructure can be utilized to achieve scalability and high availability. Scalability is achieved by having two or more processing components such as NSPs or ASPs for a more parallel or a more pipelined computation. High availability is achieved by adding redundancy to the system and by having peer ANAs or peer modules replicate the relevant state information in persistent databases. One embodiment of the invention is shown in where redundancy can be added at the ANA level ANAs and can all serve as each other s redundant backup ANA and where redundancy can also be added at the module level within an ANA for example ANA two or more ASMs for example the two ASM and ASM can serve as each other s backup ASM. In another embodiment of the invention two or more ANAs or two or more modules can be used for scalability to provide high processing performance in conjunction with the other ANAs or modules but when certain ANAs or modules fail other peer ANAs or peer modules can act as backup. If the processing performance of this degraded system is not sufficient certain lower priority services may get dropped in favor of critical services which have a higher priority.

Various embodiments for providing high availability exist. For example shows how two or more ANAs and which can be for example the ANA of provide access control to application servers and which interact with the server farm in a data center . Using IB for example a RDMA enabled backup link connects the two ANAs and such that both ANAs can replicate each other s state information and act as each other s backup. In it is shown how in another embodiment of the invention the reliability can be increased further by utilizing existing connectivity between application servers as an additional backup link. Two or more ANAs and which can for example be ANAs and from provide access control to application servers and . Using IB for example a RDMA enabled backup link connects the two ANAs and such that both ANAs can replicate each other s state information and act as each other s backup. A redundant backup path which complements backup link can be created by utilizing the ISO Layer 2 path via application servers and .

To explain the fundamental principle of the novel approach to redundancy shown here shows in an example how two peer ANAs and can act as each other s backup. Appliance actively serves Domain and maintains state information for Domain and Domain for standby purposes. Appliance actively serves Domain and Domain and maintains state information for Domain for standby purposes. Domain Domain and Domain can for example relate to Service Domain A or to Service Domain B or to Service Domain C from and thus the high availability concept in this approach can make use of virtualization. Upon a failure in either ANA the peer ANA takes over and now actively serves the one or more domains for which it had kept state information for standby purposes. For example upon a failure in ANA the peer ANA now actively serves all three domains Domain Domain and Domain . Because ANA has kept state information in a persistent replicated database for all domains it can provide zero click fail over.

Such state information can for example include chassis configuration information information about the transport protocol streams that have reached an ANA as well as ISO Layer 7 state information.

System configuration information can be synchronized for many of the configured components. There are two aspects to system configuration. The first is during system startup. This is when either both peers are powered ON at the same time and both discover each other. One of the first things that happen at discovery is configuration information synchronization. It is desirable to have the configuration information in synchronization to ensure proper transport protocol stream and ISO Layer 7 state replication. The second aspect is during runtime. Administrators may choose to add modify and delete portions of the configuration information. These changes can be replicated instantaneously.

The transport protocol traffic reaching one or more ANAs or modules can be distributed in a balanced manner. Some client to server sessions that are initiated may arrive at one of the one or more ANAs or modules while transport protocol traffic for other client to server sessions may reach peer ANAs or modules because of the way in which domains can be distributed across these peer ANAs or modules . In any event of failure when one ANA or module takes over the transport protocol traffic that previously was processed by its peer all the ISO Layer 4 state information must be present to ensure zero click fail over. There are multiple ways to do this transport protocol traffic replication. In one embodiment of the invention just the ISO Layer 4 state information from one ANA or module is replicated to the peer ANA or module . This can happen always during session creation and deletion and periodically during the lifetime of the session. This way sessions remain in synchronization across ANAs or modules . Also this exchange of ISO Layer 4 state information can happen in a bi directional manner. In another embodiment of the invention the transport protocol stream reaching one ANA or module is replicated to the peer ANAs or modules . This ensures that the backup ANA or module sees the same transport protocol traffic for those domains that are in a passive standby mode so that it can go through the same steps of terminating the connection initiating another connection and behaving as a proxy. However domains that are passive i.e. in standby the backup ANA or module will not actually forward any traffic to either client or server but will continue to build state information as though it is actually proxying the connection. The advantage with this approach is that under any failure event on its peer it can actively forward the session traffic transparently.

All the ISO Layer 7 state information is retained in a shared memory database that can be marked with a synchronization stamp. Therefore any state changes in the database for ISO Layer 7 state information can be used to trigger an event to replicate the state over a high availability link to the peer s ISO Layer 7 state information for that domain. For this purpose several in memory databases and embedded databases can be considered such as Berkeley DB for example. Database synchronizations can operate via LDTF such as for example D3. RDMA allows memory visibility into the peer s databases. That way the events triggered can cause a very quick reliable update of the peer s database for the ISO Layer 7 state information.

Key to provide high availability lies in monitoring the necessary components and ANAs to detect failures. This is illustrated in . Within an ANA a High Availability Manager periodically checks the vital signs of a License Manager a Configuration Manager a Chassis Manager an Interface Manager and a System Manager for example. Each License Manager Configuration Manager Chassis Manager Interface Manager and System Manager periodically check the vital signs of their corresponding modules. Such vital signs can for example include voltages temperatures humidity air pressure shock noise vibration fan speed CRC error count self check results etc.

Because D3 allows peer memory visibility through specialized hardware for example D3 host channel adapters HCA all CPUs such as the NSPs the ASPs and the Management Service processors can be connected to LDTF. In one embodiment of the invention pre allocated local memory buffers can store the shared data structures of each process and DMA can be initiated and completed directly by host channel adapters which frees up the CPUs. Update and synchronization can be done periodically or event based. The benefit is that it can eliminate multiple memory to memory data copies and that the transport protocol stack can be bypassed to reduce protocol overhead and reduce the cost of context switches. The virtual lane feature of IB allows multiple virtual lanes to be used for example one or more management lanes and one or more data lanes. In one embodiment of the invention virtual lanes can be used to provide prioritized channels for high availability traffic as well as making multiple logical links available over one single physical link. In another embodiment of the invention virtual lanes also can be used to prioritize traffic through service links to virtual lane. In yet another embodiment of the invention virtual lanes can be used for one single management link over the same physical link for example to perform health checks or transmit monitoring information or to send high availability handshakes while leaving other virtual lanes open for ISO Layer 4 to ISO Layer 7 state replication and transport protocol stream replication.

In one embodiment of the invention a modular architecture is used. Within this architecture the one or more SCMs or the one or more NSMs or the one or more ASMs can upload software and firmware can perform configuration management and they can exchange status and control information which can for example be diagnostics initialization power up and power down commands reset environment monitoring etc. This requires certain inter module communication. Various options exist in the art for such inter module communication. An IC bus may be used which has very low cost but which also is very slow and does not support hot plug connectivity. A serial RS 232 or RS 422 link may be used which has the same drawbacks as the IC bus. Alternatively Ethernet may be used which has sufficient bandwidth however generally this is not cost effective.

To overcome these disadvantages in one embodiment of the invention the various inter module communication buses are consolidated into one common out of band bus which utilizes USB technology. USB technology is well established in PC and consumer products and is very fast USB 2.0 supports up to 480 Mbps cost efficient supports hot plug connectivity and has high reliability. shows how such inter module communication can be implemented using USB technology. An ANA which can for example be ANA from comprises one or more SCMs and which each have one Management Service processor and respectively. Each SCM also has one USB Host Controller and respectively which each is connected to a Line Card Module via USB Slave to a Fan Module via USB Slave to a Display Module via USB Slave and to a Power Supply via USB Slave . Each SCM can then act as a USB master for inter module communication. The USB connectivity can either be half duplex or full duplex.

One of the advantages of using USB technology compared to other approaches known in the art is that common operating systems for example the R OS shown in support so called hot plug of components. shows the Linux user space hot plug manager the so called udev device. This facilitates the administration of a high availability enterprise ANA such as the ANA from . Modules can be added removed replaced etc. during run time while the ANA is operating without disrupting the services performed by the ANA.

The various embodiments of these inventions can be applied to a wide variety of enterprise network applications. Because of the high scalability and the high availability it can be used as the ANA of to perform access control with or without Transparent Secure Transport. Because the network processing has been split into Network Service processing and Application Service processing a 3 tier processing model is facilitated 

In a typical use model according to one embodiment of the invention full application data processing is performed. The transport protocol connections on the client side are terminated while the transport protocol connections or the RDMA connection in case of converged data center fabric on the server side are kept open. This way a client connection is bound to a server connection and the application data can be processed according to the application s semantics. This embodiment of the invention then can operate similar to a switch by transporting application data from one side to the other. Because application data ISO Layer 7 data is processed the one or more ASMs are involved.

In another use model according to one embodiment of the invention application switching is performed without the need to process application data. This use model can for example be applied once a client has been authorized and when it is desirable to just switch application data from the client. Because no application data ISO Layer 7 data is processed the one or more ASMs are not involved and the main processing is done in the one or more NSMs.

In yet another use model according to one embodiment of the invention flow switching is performed which does not involve application data processing nor any transport protocol termination. Directly performed by the one or more NSMs the transport protocol sequence numbers are adjusted for example and the payload is switched from the client to the server.

The deployment of an embodiment of the invention can for example be in an enterprise s data center for example in an enterprise data center. In in line deployment the ANA is located in line for the traffic destined towards an application server and owns a virtual IP address of the application server which is similar to load balancing setups known in the art. The application server can for example be application server of or application server of or application server of and . Therefore the ANA sees all the traffic going to the application server for example when used in so called Routed Mode when the client side and the server side VLANs are on different subnets as illustrated in or when used in so called Bridged Mode where the client side and the server side VLANs are on the same subnet which is illustrated in . The deployment of a embodiment of one of these inventions can also be in so called one arm deployment where selected application server traffic for which ISO Layer 7 services are needed is diverted for example via a ISO Layer 2 switch or a ISO Layer 3 router through the ANA to perform Policy Based routing for example.

Various other use cases are contemplated within the scope of the present invention for example the use as an application firewall in ISO Layer 7 networking for server load balancing in ISO Layer 7 networking for acceleration in an application front end in ISO Layer 7 networking for SSL acceleration in ISO Layer 7 networking for XML acceleration in ISO Layer 7 networking for intrusion detection and prevention in ISO Layer 7 networking etc.

The use of LDTF in combination with a highly scalable compute architecture and the use of dedicated processing elements allows many compute intensive ISO Layer 7 network problems to be addressed. In combination with Centralized Transport Protocol Termination application data can be efficiently processed in many networking applications. For example ISO Layer 7 processing of streaming multi media video audio IPTV VoIP etc. can be done. The ANA can then act as a proxy for example a multi media proxy a video proxy an audio proxy a VoIP proxy etc. and server for network system performance monitoring for fixed mobile convergence for GSM WiMax authorization. In one particular application the ANA can perform insertion of advertising into the application data. Because of the use of Triangulated Identity advertisement can be inserted based on location demographics personal preferences or any other information that correlates with the user the client the application server the network environment and so on. Additionally the application data stream can be analyzed to perform elaborated advertisement analysis by analyzing clicks per million or how long a client spends using certain Internet content. The same concept can be applied to streaming multi media services where based on geographic location the ANA can centrally terminate RTSP for example and block or let pass certain streaming multi media content based on the Triangulated Identity.

Some portions of the preceding detailed descriptions have been presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the ways used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of operations leading to a desired result. The operations are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the above discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

Embodiments of the present invention also relate to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs erasable programmable ROMs EPROMs electrically erasable programmable ROMs EEPROMs magnetic or optical cards or any type of media suitable for storing electronic instructions and each coupled to a computer system bus.

The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method operations. The required structure for a variety of these systems will appear from the description below. In addition embodiments of the present invention are not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of embodiments of the invention as described herein.

A machine readable medium may include any mechanism for storing or transmitting information in a form readable by a machine e.g. a computer . For example a machine readable medium includes read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices electrical optical acoustical or other form of propagated signals e.g. carrier waves infrared signals digital signals etc. etc.

In the foregoing specification embodiments of the invention have been described with reference to specific exemplary embodiments thereof. It will be evident that various modifications may be made thereto without departing from the broader spirit and scope of the invention as set forth in the following claims. The specification and drawings are accordingly to be regarded in an illustrative sense rather than a restrictive sense.

