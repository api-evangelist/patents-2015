---

title: Computing system for managing data
abstract: Various embodiments are described for systems and methods for managing data. The system may include a device group configured for peer-to-peer communications, the device group including a computing device and one or more peer computing devices. The system includes a cross device application programming interface (API) that is implemented as a device group API client executed on the computing device and each of the peer computing devices. Each device group API client includes a permissions module that is configured to determine whether a request satisfies a device-group-specific permission for access to data stored on any device associated with the device group. Upon authorization of the request, a file storage module is configured to retrieve and output the requested file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09479581&OS=09479581&RS=09479581
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09479581
owner_city: Redmond
owner_country: US
publication_date: 20151012
---
This application is a continuation of U.S. patent application Ser. No. 13 167 461 filed Jun. 23 2011 entitled COMPUTING SYSTEM FOR MANAGING DATA the entire contents of which are hereby incorporated by reference for all purposes.

With the proliferation of mobile computing devices including smartphones tablets notebook computers and the like users may store personal information and data on multiple disparate devices. Users with multiple computing devices may find it difficult to manage their data across their various devices. One prior solution has been for users to store their data on remote servers in a cloud computing environment which refers to a networked computing environment in which client devices can communicate with servers to store files on those servers across the Internet. In this way users may access their data stored on a cloud server from any computer that has access to the cloud. However users may have privacy and or security concerns with storing their data on remote servers since the physical device that stores the data is not under the users physical control. Management of data among a single user s multiple devices and among multiple devices of different users within a network may also be difficult. Additionally facilitating requests from outside the network for in network data may be difficult.

Systems and methods for managing data across devices within a device group are disclosed herein. One system may include a device group that includes a computing device and one or more peer computing devices. The system includes a cross device application programming interface API that is implemented as a device group API client executed on the computing device and each of the peer computing devices.

Each device group API client includes a device discovery module that is configured to discover the peer computing devices associated with the device group. Each device group API client also includes a peer to peer P2P module that is configured to engage in P2P communications with each of the peer computing devices of the device group via their respective device group API clients. Each device group API client further includes a file storage module that is configured to enable the device group API client to access files stored in a distributed file store locally on the local device and or remotely on one or more of the peer computing devices using communications sent via the P2P module. The file storage module is also configured to receive a request from a computer program via the device group API client to access a requested file stored in the distributed file store.

Each device group API client also includes a permissions module that is configured to determine whether the request satisfies a device group specific permission for access permission of data stored on any device associated with the device group and if so to authorize the request to access the requested file else to deny the request to access the requested file. Upon authorization of the request by the permissions module the file storage module is also configured to retrieve the requested file from the distributed file store and output the requested file to the computer program.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

The computing device and peer computing devices may take the form of desktop computers notebook computers tablet computers interactive televisions mobile computing devices mobile communication devices gaming devices etc. Additionally it will be appreciated that the LANs and may also take the form of wide area networks WANs personal area networks PANs or a combination thereof including the Internet.

With reference now to the computing device includes mass storage a display memory and a processor . Programs stored on mass storage may be executed by the processor using memory to achieve various functions described herein. Mass storage includes an operating system a file system one or more application programs APPs and a browser . As described in more detail below the mass storage also includes a first device group API client A.

Returning to the computing device is a member of a first device group that also includes as members peer computing devices A in the form of a desktop computer B in the form of a laptop and C in the form of an interactive television. In other examples the first device group may also include additional peer computing devices and the peer computing devices A B and or C may be computing devices different from those depicted in . The computing device and each other member of the first device group include an instance of a first device group API client indicated generally in that enables P2P communications among the members of the first device group . More particularly the computing device includes a first device group API client A peer computing device A includes a first device group API client B peer computing device B includes a first device group API client C and peer computing device C includes a first device group API client D.

Computing device is also a member of a second device group that includes peer computing devices E and F that are different from peer computing devices A B and C of the first device group . Each member of the second device group includes an instance of a second device group API client indicated generally in which enables P2P communications among the members of the second device group . More particularly computing device includes a second device group API client A peer computing device E includes second device group API client B and peer computing device F includes second device group API client C. As with the first device group in other examples the second device group may also include additional peer computing devices and the peer computing devices E and or F may be computing devices different from those depicted in .

With reference now to the first device group API client A includes a plurality of software modules . It will be appreciated that the other first device group API clients B C and D on peer computing devices A B and C respectively include the same plurality of software modules having the functionality as described below. It will also be appreciated that the second device group API clients A B and C may also include the same plurality of software modules or one or more different software modules. For ease of description the software modules will be described only with reference to the first device group API client A.

The software modules include a P2P module that is configured to engage in P2P communications with each of the other peer computing devices A B and C of the first device group via their respective first device group API clients B C and D. In this manner each member of the first device group has direct access to data and resources of the other members of the group subject to device group specific permissions that are described in more detail below.

Software modules include a device discovery module that is configured to dynamically discover one or more peer computing devices that are presently associated with the first device group or additional non member computing devices not presently associated with the first device group that may be added to the group on an ad hoc basis. When the device discovery module identifies a non member computing device the device discovery module may determine whether the non member device satisfies one or more device group criteria stored in a permissions module .

In one example the device group criterion may comprise a location of the non member computing device being within a pre defined range of the computing device or one of the peer computing devices A B or C. In another example the device group criterion may comprise a social distance of a user of the non member computing device being within a pre defined distance of a user of the computing device or one of the peer computing devices A B or C. The pre defined distance may include the user of the non member device having a particular social designation such as friends or friends of friends on a social networking site with respect to a user of the computing device or one of the peer computing devices A B or C.

In another example the device group criterion may comprise an ownership designation of the non member computing device being associated with a user of the computing device or one of the peer computing devices A B or C. In one example the computing device is a notebook computer owned by user A. User A buys a new mobile phone which is discovered by device discovery module as a non member device. Upon determining that the mobile phone is owned by User A who also owns the notebook computer computing device the device discovery module adds the mobile phone to the first device group .

In another example when a non member computing device becomes a peer computing device within the first device group the first device group API client A may be exposed to an external web service such as an ad engine on server to allow the web service to discover the new or modified first device group . The first device group may then allow the web service to write a new application on the member devices of the first device group.

The software modules also include a file storage module that is configured to enable the first device group API client A to access files stored in a distributed file store associated with the first device group . The distributed file store may reside locally on the computing device and or remotely on one or more of the peer computing devices A B and C. The file storage module is also configured to receive a request from a computer program to access a requested file stored in the distributed file store. In one example the requesting computer program may reside locally on the computing device in the form of an application program such as a media player. In other examples the computer program may reside on one of the peer computing devices A B or C or remotely on server .

As mentioned above the software modules also include a permissions module that is configured to determine whether a request received by the file storage module satisfies one or more device group specific permissions for access permission of data stored on the computing device and or any of the peer computing devices A B and C. The device group specific permissions may include internal permissions and external permissions . Internal permissions may include for example user data privacy settings for the sharing of various categories of user data among the members of the first device group . Categories of user data may include for example application usage history browser history media data contact data calendar data and social network data. The permissions module may be configured to allow a user to set a privacy setting for one or more of the user data categories. External permissions may include device group specific permissions required to be satisfied by external requests for access to computing device and or any of the peer computing devices A B and C such as requests for data stored on any of these first device group members. As described in more detail below external permissions may include for example permissions that must be satisfied before an ad may be served to the first device group from an ad engine on the server .

With reference now to it will be appreciated that the computing device is a member of both the first device group and the second device group . Accordingly the computing device includes a first device group API client A and a second device group API client A. In one example server may request a file from the first device group via WAN and the first device group API client A on the computing device . The permissions module determines whether the request satisfies a first set of device group specific permissions and if so then the permissions module authorizes the request to access the file. The file storage module then retrieves the file from the distributed file store and outputs the file to the server . If the request does not satisfy the first set of device group specific permissions then the request is denied.

In another example if the request satisfies the first set of device group specific permissions the permissions module may be further configured to grant varying levels of access privileges to the file based on a programmatically determined partial access privilege applicable to the requesting user. For example the permissions module may be configured to grant a partial access privilege to enable access to only a portion of the data in a file and or to enable access to the data in the file only for authorized uses. The partial access privilege for example may be formulated according to a privacy preserving function to protect the privacy of the user in one example In this example the request may be authorized to access only portions of information in the requested file such as non personally identifiable information and or to access personally identifiable information only for purpose of aggregating such data in a non personally identifiable manner. In one use case example the request may seek to access salary information that is stored on a user s mobile device. The permissions module may authorize the request to access the salary information provided that the information is subject to a privacy preserving function such as aggregating the information among a group of users.

The server may also request a file from the second device group via WAN and the second device group API client A on the computing device . A permissions module in the second device group API client A determines whether the request satisfies a second set of device group specific permissions and if so then the permissions module authorizes the second request to access the file. A file storage module on the second device group API client A then retrieves the file from the second device group distributed file store and outputs the file to the server . If the request does not satisfy the second set of device group specific permissions then the request is denied.

In one example an application program on the computing device may be a media player. The media player may search for a particular media file in the distributed file stores of the first device group and the second device group . If the media player locates the media file in the distributed file store of the first device group the media player may send a device group specific request to the first device group API client A for the media file. A search module in the first device group API client A is configured to search for the media file in the distributed file store. If the media player request satisfies the device group specific permissions then the search module streams the media file to the media player via the P2P module .

In another example an ad module in the first device group API client A is configured to gather aggregated user data from the members of the first device group according to device group specific permissions including for example group wide privacy settings. As noted above categories of user data may include for example application usage history browser history media data contact data calendar data and social network data. Upon gathering the aggregated user data the ad module contacts the permissions module to determine whether the aggregated user data satisfies device group specific permissions including user data privacy settings such as opt in ad settings governing the categories of user data that may be shared with third party services. The permissions module then authorizes the user data that may be sent according to the device group specific permissions .

Upon a triggering event such as the downloading of a web page by the browser the ad module sends an ad request including the authorized aggregated user data to ad engine on remote server . The ad request may also include group wide characteristics of the first device group such as associations or common connections among group members the group s social graph associations location of member devices etc. The ad module then receives the ad served by the ad engine and determines a presentation style that selects which members of the first device group will receive the ad. The ad module then displays the ad on the selected first device group members according to the presentation style.

It will be appreciated that the ad served by the ad engine is directed to the first device group and therefore may be targeted to the unique group wide characteristics of the first device group. In another example where an ad request is initiated by a member of the second device group the ad served by the ad engine may be targeted to unique group wide characteristics of the second device group.

With reference now to a diagram illustrates a method for managing data according to one embodiment of the present disclosure. The method may be performed using the software and hardware components of the computing system described above and shown in or using other suitable components. Method begins at with forming a first device group that includes a computing device such as computing device and a first group peer computing device such as peer computing device A. This may take the form of the computing device sending an invitation to the first group peer computing device. The first group peer computing device responds by sending an acceptance to the computing device.

In another example and as referenced above the method may also include forming the device group at least in part by dynamically discovering one or more peer computing devices that are presently associated with the device group or additional non member computing devices that may be added to the group on an ad hoc basis. When a non member computing device not presently associated with the device group is identified the method may determine whether the non member device satisfies a device group criterion. In one example the device group criterion may comprise a location of the non member computing device being within a pre defined range of the computing device or the peer computing device. In another example the device group criterion may comprise a social distance of a user of the non member computing device being within a pre defined distance of a user of the computing device or the peer computing device. In another example the device group criterion may comprise an ownership designation of the non member computing device being associated with a user of the computing device or the peer computing devices.

Once the first device group is formed at the method includes establishing P2P communication between the computing device and the first group peer computing device. At the method includes storing files associated with the computing device or the first group peer computing device in a distributed file store locally on the computing device and or remotely on the first group peer computing device.

The method then proceeds to a request processing portion in which a request is received and processed to determine whether to authorize or deny the request. At the computing device receives a request from a computer program to access a requested file stored in the distributed file store. In the depicted example the computer program resides remotely on a server such as server . In other examples the computer program may reside locally on the computing device or remotely on the first group peer computing device. As noted above the requested file may include user data from the computing device and or the first group peer computing device. The user data may include information from a variety of user data categories including for example application usage history browser history media data contact data calendar data and social network data.

At the method includes determining whether the request satisfies one or more device group specific permissions for access permission of data stored on the computing device and or the first group peer computing device. If the request satisfies the permissions then the method includes authorizing the request at to fully access or partially access the requested file retrieving the requested file at and outputting the requested file at to the computer program on the requesting computing device which in the illustrated embodiment is server but may alternatively be another computing device. If the request does not satisfy the permissions then at the method includes denying the request and sending a request denial to the computer program on the server .

At the method may also include forming a second device group of which the computing device is a member. The computing device may send an invitation to a second group peer computing device such as peer computing device E. The second group peer computing device may respond by sending an acceptance to the computing device . As indicated at the method may then proceed to implement steps as described above and with respect to the second device group and second group peer computing device. In particular the second device group may have a second set of device group specific permissions for access permission of data stored on any device associated with the second device group. The computing device may receive a second request from the computer program to access a second requested file stored in the second distributed file store. The method may then determine whether the second request satisfies the second set of device group specific permissions and if so authorize the second request to fully access or partially access the second requested file. If the second request does not satisfy the second set of device group specific permissions then the request is denied and a request denial is sent to the computer program.

With reference now to in one example at least part of the request processing portion of method may include receiving and processing an ad request. In the first device group includes a computing device such as computing device first group peer computing device A such as first group peer computing device A and first group peer computing device B such as first group peer computing device B. At the method includes setting one or more privacy settings on the computing device and or device group wide across the computing device and the first group peer computing devices A and B. At the computing device receives an ad request. The ad request may be sent from an ad module in a first device group API client of the computing device from another peer device in the first device group or from an external source such as server .

At the method includes gathering aggregated user data from the computing device and first group peer computing devices A and B. This may take the form of an ad module sending data request to the first group peer computing device A and data request to first group peer computing device B. The first group peer computing devices A and B respond by sending user data and respectively to the computing device. At the method includes authorizing the aggregated user data to be sent according to first device group specific permissions. As noted above the permissions may include user data privacy settings such as opt in ad settings governing the categories of user data that may be shared with third party services.

At the method includes saving the aggregated user data in the distributed file store of the first device group. Upon a triggering event such as the downloading of a web page by a user of the computing device at the method then includes sending an ad request including the aggregated user data to an ad engine on the server. As noted above the ad request may also include group wide characteristics of the first device group such as associations or common connections among group members the group s social graph associations location of member devices etc. At the ad engine uses the aggregated user data and any group wide characteristics to match an ad that is targeted to the first device group .

At the method includes the computing device receiving the ad from the ad engine. At the method includes displaying the ad . The ad may be displayed on a display associated with computing device . Alternatively or in addition the computing device may send the ad to each of the first group peer computing devices A and B and displaying at may include displaying the ad on each of the first group peer computing devices A and B.

With reference now to in another example at least part of the request processing portion of method may include receiving and processing a request for a media file. In the first device group includes a computing device such as computing device first group peer computing device A such as first group peer computing device A and first group peer computing device B such as first group peer computing device B. At the method includes the computing device receiving a request for a media file from a media player on first group peer computing device B. At the method includes searching for the media file in the distributed file store containing files from the computing device and first group peer computing devices A and B. At the method includes determining whether the request satisfies the device group specific permissions of the first device group. If the request satisfies the permissions then the method includes the computing device authorizing the request at and streaming the media file at to the media player on the first group peer computing device B. If the request does not satisfy the permissions then at the computing device denies the request and sends a request denial to the media player.

Using the above described systems and methods users may store data on peer devices and avoid the privacy and security concerns associated with storing their data on remote servers since the data is not stored on a remote server. Further these systems and methods have the potential benefit of enabling management of data among a single user s multiple devices and among multiple devices of different users within a network. Additionally these systems and methods enable both out of group and in group devices to make requests for data stored on one or more peer groups to which a computing device belongs and receive appropriate responses including the requested data provided sufficient permissions accompany the request.

It is to be understood that the configurations and or approaches described herein are exemplary in nature and that these specific embodiments or examples are not to be considered in a limiting sense because numerous variations are possible. The specific routines or methods described herein may represent one or more of any number of processing strategies. As such various acts illustrated may be performed in the sequence illustrated in other sequences in parallel or in some cases omitted. Likewise the order of the above described processes may be changed.

The subject matter of the present disclosure includes all novel and nonobvious combinations and subcombinations of the various processes systems and configurations and other features functions acts and or properties disclosed herein as well as any and all equivalents thereof.

