---

title: Method and apparatus for providing reactive authorization
abstract: An approach is provided for providing reactive authorization for accessing a semantic network resource. An access application of a resource owner entity detects an authorization proxy entity acting between at least a semantic network resource and a requesting entity that requests access to the semantic network resource. The access application determines to cause, at least in part, actions that result in transmission of a query for whether to accept the requesting entity to an owner entity of the semantic network resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09455991&OS=09455991&RS=09455991
owner: Nokia Corporation
number: 09455991
owner_city: Espoo
owner_country: FI
publication_date: 20150410
---
Service providers e.g. wireless cellular Internet content social network etc. and device manufacturers are continually challenged to deliver value and convenience to consumers by for example providing compelling network services and advancing the underlying technologies. One area of interest has been in developing methods to support generic data access via a data centric architecture such as the semantic web the smart space etc. . Typically existing or conventional reactive authorization e.g. authorization provided by a resource owner based on a request by request rather than on a pre defined basis relies upon service specific protocols to access data. For example multimedia communication sessions such as voice and video calls over Internet Protocol IP generally use layers of protocols to access data. In a data centric architecture protocol operations are limited to the generic data manipulation such as get update delete and query. Such a data centric architecture provides a common framework for multiple protocols and systems to understand and process data content as well as to automate machine to machine communications. However it is noted that the generic commands of existing service specific protocols have limitations with respect to providing reactive authorization for a user to access data using only these generic commands with the existing service specific protocols. Currently a data store or database typically pre defines its own data access policy.

Therefore there is a need for an approach for providing reactive authorization for accessing a semantic network resource.

According to one embodiment a method comprises detecting an authorization proxy entity acting between at least a semantic network resource and a requesting entity that requests access to the semantic network resource. The method also comprises determining to cause at least in part actions that result in transmission of a query for whether to accept the requesting entity to an owner entity of the semantic network resource.

According to another embodiment an apparatus comprising at least one processor and at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause at least in part the apparatus to detect an authorization proxy entity acting between at least a semantic network resource and a requesting entity that requests access to the semantic network resource. The apparatus also determines to cause at least in part actions that result in transmission of a query for whether to accept the requesting entity to an owner entity of the semantic network resource.

According to another embodiment a computer readable storage medium carrying one or more sequences of one or more instructions which when executed by one or more processors cause at least in part an apparatus to detect an authorization proxy entity acting between at least a semantic network resource and a requesting entity that requests access to the semantic network resource. The apparatus also determines to cause at least in part actions that result in transmission of a query for whether to accept the requesting entity to an owner entity of the semantic network resource.

According to another embodiment an apparatus comprises means detecting an authorization proxy entity acting between at least a semantic network resource and a requesting entity that requests access to the semantic network resource. The apparatus also comprises means for determining to cause at least in part actions that result in transmission of a query for whether to accept the requesting entity to an owner entity of the semantic network resource.

According to one embodiment a method comprises causing at least in part transmission of a request for accessing a semantic network resource. The method also comprises causing at least in part reception of a notification regarding authorization by an owner entity of the semantic network resource.

According to another embodiment an apparatus comprising at least one processor and at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause at least in part the apparatus to transmit a request for accessing a semantic network resource. The apparatus is also caused to receive a notification regarding authorization by an owner entity of the semantic network resource.

According to another embodiment a computer readable storage medium carrying one or more sequences of one or more instructions which when executed by one or more processors cause at least in part an apparatus to transmit a request for accessing a semantic network resource. The apparatus is also caused to receive a notification regarding authorization by an owner entity of the semantic network resource.

According to another embodiment an apparatus comprises means for causing at least in part transmission of a request for accessing a semantic network resource. The apparatus also comprises means for causing at least in part reception of a notification regarding authorization by an owner entity of the semantic network resource.

Still other aspects features and advantages of the invention are readily apparent from the following detailed description simply by illustrating a number of particular embodiments and implementations including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments and its several details can be modified in various obvious respects all without departing from the spirit and scope of the invention. Accordingly the drawings and description are to be regarded as illustrative in nature and not as restrictive.

A method and apparatus for efficiently providing reactive authorization for accessing a semantic network resource are disclosed. In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent however to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention.

As used herein the term proactive authorization refers to where resource access authorization policies have been predefined to identify the authorized and unauthorized users to access for a given resource. A conventional server consults with the stored authorization policies using an authorization application programming interface API to determine if a requester is authorized to access on the given resource. If the requester is authorized to access the server will notify the requester that the resource is available. If the requester is unauthorized to access the server will notify the requester that the resource is unavailable.

As used herein the term reactive authorization refers to where resource access authorization is given by the owner of the resource in response to a proxy request and based upon a reactive authorization policy defined by the owner of the resource. An access application implements the reactive authorization policy asks the owner for access permission at least for the first time access of a requester.

As used herein the term resource refers to data or anything else capable of being defined in the semantic web for completing a project activity such as people equipment facilities funding etc. Resource scheduling availability and optimization are considered in data management. A resource can be a piece of data that a service provides to its users or allows its user to share. Familiar examples include an electronic document an image a service e.g. today s financial news on the Stock Exchange and a collection of other resources. It is noted that not all resources are network retrievable e.g. people equipment facilities funding bound books in a library etc. For example abstract concepts can be resources such as the operators and operands of a mathematical equation the types of a relationship e.g. parent or employee or numeric values e.g. zero one and infinity . Providing a concept is given an identity either the concept is expressed by an information representation format e.g. Resource Description Framework RDF triples or structure e.g. RDF graphs or its identity is expressed by given a well formed Uniform Resource Identifier URL then the concept can be a resource as well.

As used herein the term triple refers to a subject predicate object expression in RDF. A subject denotes the resource and is an RDF Uniform Resource Identifier URI reference or a blank node a predicate is an RDF URI reference which denotes traits or aspects of the resource and expresses a relationship between the subject and the object and an object is an RDF URI reference a literal or a blank node. For example one way to represent the notion cat is a mammal in RDF as the triple is a subject denoting cat a predicate denoting is a and an object denoting mammal. 

The term semantic web refers to a universal medium for data information and knowledge exchange. This information exchange inserts documents with computer comprehensible meaning semantics and makes them available on the semantic web. The semantic web is a web of data instead of the web of documents . Knowledge in the semantic web is structured and organized at a finer level of granularity than free text document and the vocabulary includes not only literal words but also universal identifiers.

The term smart space refers to a plurality of information spaces of different entities in a smart space architecture that allows the entities and different semantic web tools to access heterogeneous information embedded in different semantic domains available for the semantic web tools. The semantic web is designed to share information based upon common representation formats ontologies and semantics such that information would become globally ubiquitous and interoperable. However much of the information is not desired to ubiquitous but remain hidden private and is interpreted locally such as personal information. To address to this issue the smart space architecture an entity focused structure is developed such that a user can encapsulate all of personal information and interact with the information in the smart space according to the user s individual semantics and needs. The user can be a person an organization or other entity.

Although various embodiments are described with respect to the smart space it is contemplated that the approach described herein may be applied in other data centric architectures in the semantic web.

Traditionally the reactive authorization is addressed using a service specific protocol. Thus the following transactions in the protocol occur 

In the data centric architecture such as the smart space architecture where the protocol operations are limited to the generic data manipulation such as get update delete query it is not possible to implement the reactive authorization with only these protocol transactions. Therefore data stores have to pre define the data access policies e.g. proactive authorization to operate with only the generic data manipulation.

By way of example a user tries to join receive a message thread that is available only for members. In the semantic web this operation may for example establish a link between the Thread node and the User node using the relationship member of. Thus when the user attempts to manipulate the data via an application the application tries to link the User object to the specific Thread object and this operation either succeeds or fails. There are only two possible generic results in the predefined access policy either accept or deny all requesters. If the operation requires reactive authorization e.g. asking the owner another mechanism needs to be used before linking can be done successfully.

To address this problem a reactive authorization proxy interchangeable with authorization proxy as described herein is designed to provide reactive authorization in a data centric architecture while still fully preserving the owner s control over the resource in the semantic space.

In one embodiment an intermediate authorization proxy node is created by an access requester e.g. a caller in a RDF graph and a RDF graph of the access requester is attached to it. The owner e.g. a callee detects the presence of the authorization proxy node and queries it for the requester or caller. The owner then decides whether to link or discard the requester to the RDF of the requested resource. In another embodiment instead of discarding the requester the owner changes the predicate to indicate the refusal of access. Thereafter the requester or caller detects the changes to the authorization proxy and interprets it as a denial of the access request. All these transactions are done in a generic way and optionally transparently to the caller.

In the smart space the owner can use one or more nodes e.g. mobile telephones computers and similar terminals to perform tasks such as access to the RDF graph of the caller without knowing anything about the nodes and the nodes interoperate by communicating implicitly through smart spaces of different users without knowing each other. Such anonymity simplifies control communication and coordination in the smart space thereby reducing hardware and software operation time and costs.

The RDF graph of the caller may contain any information regarding the caller personal background etc. for the owner to access. By check the caller s background information the owner decides whether to accept or deny the caller s access. Therefore the authorization proxy enables a data centric architecture to provide reactive authorization with generic asynchronous mechanisms and similar data access policies for different services e.g. emails blogs social networks etc. and the relevant applications.

In one embodiment the smart space provides the data centric architecture where all data from all services lives in the cloud and a device can access the cloud and cache the information locally if needed. The applications on the platform side interact with the cloud only and the applications on the device side interact with the cloud via local caches and or information stores. The applications on the device side provide essentially the view on the service data mash up. Different client applications can provide different views on the same data.

By way of example Alice wants to find out how Fido is doing. Since Alice s graph is already connected to Bob s graph and pre approved to access Fido s graph Alice can detect any changes to Bob s graph and Fido s graph as much as authorized by Bob. On the other hand for a new user such as Jenna who has no existing connection with Bob Jenna needs to contact Bob for authorization to access Fido s graph. The authorization proxy spares Jenna from being accepted or denied outright based upon a predefined access policy as in the existing systems.

The semantic model is different from the traditional relational model and it is easy to extend. It supports backward future compatibility. Data from multiple domains can be easily linked providing they have common points nodes people places items locations . . . . The semantic model supports graph oriented query language s e.g. SPARQL suitable for making complicated multi level queries such as find me animals of all my friends that are mammals and have fur. 

In one embodiment RDF query languages such as SPARQL Protocol and RDF Query Language SPARQL were set with a mechanism for locally defining RDF graphs or subgraphs. These subgraphs or scopes may be embedded into the RDF query language and are defined explicitly in the form of RDF query language when the query is written. In another embodiment a new RDF parameter type and macros e.g. sets of commands are used to manage RDF graphs representing queries in order to dynamically change queries and update query results in the semantic web. Although various embodiments are described here with respect to SPARQL it is contemplated that the embodiments described in this application may be used with other RDF query languages such as WQL DQL NQL R DEVICE RDFQ RDQ RDQL RQL RVL SeRQL Versa XUL Adenine etc.

As mentioned the smart space architecture an entity focused structure is developed such that a user can encapsulate all of personal information and interact with the information in the smart space according to the user s individual semantics and needs. The user can be a person an organization or other entity. Nodes including a user terminal node are provided in the smart space as dynamic query resolution agencies which carry at least functions of the user agent application as discussed in the semantic web. Semantic information brokers SIB are provided in the smart space as entities performing information transaction operations. Local SIBs carry at least functions of the RDF cache or the cache manger while remote SIBs carry at least functions of the external databases.

An individual smart space of the user is aggregated information set with information from different sources related to the user. For example sources of the user s personal information family information work information social network information etc. Includes include 1 government records and databases 2 employer databases 3 credit card companies banks credit bureau database 4 marketing survey and data mining databases 5 user online behavior databases browsing by a user via Internet information mentioned by the user in the user s e mails calendar appointments etc 6 media items articles music video photos etc. posted in blogs on web pages etc. created by the user 7 articles music video photos etc. captured by the user etc. These information contents are private and remain segregated from other information in the semantic web to protect the user s privacy. Only authenticated and authorized nodes such as a credit card company a bank a trusted party etc. of the user are allowed to access the user s personal smart space to share the information such as the user s financial information payment transactions etc. stored in a local SIB e.g. which may reside in the node . It is up to each user to define what is available for whom. With the authorization proxy the user does not have to predefine an access policy applicable to particular individuals and or applicable to everyone. Rather the user can decide when a requester asks for authorization.

As seen in each smart space is distributed across at least one set of nodes belonging to at least one user. In this embodiment the smart space is distributed across multiple nodes that each belong to multiple users. For example nodes and belong to a first user while nodes belong to a second user. It is also contemplated that one or more of the nodes e.g. node may belong to a centralized information provider. Nodes are personal individual in that they perform tasks either directly decided by the user or autonomously for or on behalf of the user. For example the nodes can monitor predetermined situations or reason data mine information available in the smart space .

By way of example with the personal information nodes of the credit card company and the bank can facilitate a purchase by the user via interacting with the user terminal node with minimum or even no user involvement. For example when the user browses a website for flight tickets a website node interacts with the user terminal node to prompt the user to selecting tickets that fit the user s criteria. The user taps on the screen of the user terminal node to select tickets and then informs the website node to go ahead charging the user s credit card for the tickets without asking the user to enter user financial data.

A node may connect to one or more smart spaces at a time. Moreover the specific smart spaces and to which the node is connected may vary over the lifetime of a node. Mobility of nodes is provided by moving links to the smart space rather than moving a physical running process of the smart space . The node can save its state and become mobile when another node restores that state. Nodes themselves are anonymous and independent of each other there is no explicit control flow between the nodes other than that provided through preconditions to node actions. A coordination model based around expressing coordination structures as first order entities and focusing on collecting reasoning and context. Control flow can be made outside of the smart space through nodes and the applications serving the nodes explicitly sharing details of their external interfaces through the smart space . The responsibilities of nodes range from user interaction to reasoning and performing tasks such as truth maintenance belief revision information consistency management etc.

The nodes access information in the smart space through the SIBs by connecting to any of the SIBs making up the smart space by whatever connectivity mechanisms e.g. connectivity over a data network the Internet etc. the SIBs offer. Usually the connection is over some network e.g. data network wireless network telephony network service provider network etc. and the nodes are running on various devices. For example the node may be supported on any type of mobile terminal fixed terminal or portable terminal including a mobile handset station unit device multimedia tablet Internet node communicator desktop computer laptop computer Personal Digital Assistants PDAs or any combination thereof. It is also contemplated that the device supporting the node can support any type of interface to the user such as wearable circuitry etc. .

Additionally a communication network not shown capable of supporting the smart space can include one or more networks such as a data network not shown a wireless network not shown a telephony network not shown or any combination thereof. It is contemplated that the data network may be any local area network LAN metropolitan area network MAN wide area network WAN a public data network e.g. the Internet or any other suitable packet switched network such as a commercially owned proprietary packet switched network e.g. a proprietary cable or fiber optic network. In addition the wireless network may be for example a cellular network and may employ various technologies including enhanced data rates for global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi satellite mobile ad hoc network MANET and the like.

Each SIB performs information transaction operations possibly co operating with other SIBs for the smart space . In one embodiment an SIB may be a concrete or virtual entity. Each SIB supports nodes interacting with other SIBs through information transaction operations. In this embodiment the smart space includes SIBs each connected to respective information stores . Each information store of the smart space stores the information of the nodes and any other information available over the smart space . This can include for example information of a current state or activity of the node observations of the outside information world maintenance information and the like. The smart space applies a publish and read mechanism at dedicated information stores . A publishing node does not need to be interoperable with the reading node. In fact the two even do not need to know about each other. The smart space simply facilitates the publisher to publish at the selected information store and the reader node to read there.

Synchronization between these distributed individual information stores is asymmetric according to device and network capabilities as well as the user s needs in terms of security privacy etc. For example private information about a user s family is stored at the user s home location where stricter information security policies can protect the information. The private information can then be augmented by non private information at a website e.g. a social networking website without actually transferring the private information to the website. In this case augmenting information is preferable to merging information due to for instance copyright and or privacy concerns.

Interaction among smart spaces is nominally conducted by the nodes which encapsulate fine grained functionality to be distributed across any number of devices that have access to one or more of the smart spaces . The smart spaces themselves can interact through merging and projection thereby enabling larger smart spaces to be constructed either on a permanent or temporary basis. Moreover the smart space may be a personal space a share social space of at least two users a group space a public space of a community a county a state or a county etc. and the like. The aggregation of all smart spaces constitutes the world of information including the semantic web which is also referred to as a smart space. A smart space including the entire world of information also supports all services including all platforms and vendors available in the world as well as all of the world s devices and equipment.

The smart space is interoperable over different information domains different service platforms and different devices and equipment. For example the smart space accommodates transmission control protocol Internet protocol TCP IP Unified Protocol UniPro created by the Mobile Industry Processor Interface MIPI Alliance Bluetooth protocol Radio Frequency Communication RFCOMM IPv6 over Low power Wireless Personal Area Networks 6LoWPAN etc. The smart space also covers technologies used for discovering and using services such as Bluetooth human interface device HID services web services services certified by the Digital Living Network Alliance DLNA the Network on Terminal Architecture NoTA etc. The smart space constitutes an infrastructure that enables scalable producer consumer transactions for information and supports multiparts multidevices and multivendors M via a common representation of a set of concepts within a domain such as a RDF domain and the relationships between those concepts e.g. ontologies. The smart space as a logical architecture has no dependencies on any network architecture but it is implemented on top of practically any connectivity solution. Since there is no specific service level architecture in the smart space the smart space has no limitation in physical distance or transport. The smart space architecture allows user devices purchased at different times and from different vendors to work together. For example the user can listen watch etc. To music movies etc. wherever the user is using one personal device in the vicinity of high quality speakers or display. In addition the smart space architecture allows application developers to mash up services in different domains instead of trying to port an application to all platforms and configurations. The smart space architecture also allows device manufacturers to make interoperable products so that consumers have no concern about compatibility of different products and accessories.

A smart space transcends over many of the user s devices e.g. mobile phones media centers personal computers servers routers etc. enabling the distribution of information and queries upon that information over any of the user s devices. For any node accessing the information the physical location of the node and the location of the information are irrelevant e.g. a node sees the totality of all information in that smart space . By way of example the nodes access the smart space with basic operations including Insert to insert information into a smart space Remove to remove information from a smart space Update to update information in a smart space which is effectively an atomic remove and insert combination Query to query for information in a smart space Subscribe to set up a persistent query in a smart space such that a change in the query results is communicated to the subscribing node other query management operations e.g. notification etc. as discussed with respect to the query application etc. The nodes communicate implicitly by inserting information to the smart space and querying the information in the space .

Various embodiments are described herein with respect to query management in the smart space. By way of example RDF is used in the smart space to store information in information stores . RDF allows joining data in vocabularies from different business domains without having to negotiate structural differences between the vocabularies. In addition via the RDF the smart space merges the information of the embedded domains with the information on the semantic web as well as makes the vast reasoning and ontology theories practices and tools developed by the semantic web community available for application development in the smart space . The smart space also makes the heterogeneous information in embedded domains available to the semantic web tools.

While the semantic web envisions a single universal web of machine understandable information the smart space interoperability architecture organizes the machine machine communication by setting up in distinct spots e.g. information stores etc. of information exchange. At each spot a number of pieces of applications . . . executing in potentially many device nodes of potentially many kinds may publish and read semantic information. This information may not be prepared in machine readable form. The semantic information can be adapted to different applications that process different information composed for given topics based on user profiles and preferences.

In another embodiment this information is prepared explicitly for each particular spot. Any particular spot of information exchange has a particular purpose or focus. In other words the information made available by a particular spot is dedicated to the particular purpose or focus of that spot. The number of pieces of software exchanging information at a particular spot is consequently limited to those that share this dedication.

In the existing hypertext internet interoperability architecture the implementation of a data structure usually requires writing a set of procedures that create and manipulate instances of that structure. The data structure is defined indirectly by the operations that may be performed on it and the mathematical properties of those operations including their space and time cost . The efficiency of a data structure is analyzed together with those operations. Many files on a typical computer can be loosely divided into documents and data. Documents like mail messages reports and brochures are human readable. Data like calendars address books playlists and spreadsheets are presented using an application program which lets them be viewed searched and combined.

In the smart space interoperability architecture all data is represented semantically e.g. in languages specifically designed for data. The semantic web has classes with attributes and the concept of instances or objects. Its data layer provides information stores user profiles and rules databases of different data models defined semantically. The semantic data stores correspond to the semantic representation of content data application data etc. A user profile stores user background user preferences user context etc. The rules database stores the set of rules linking user profiles to the content data user interfaces and topics in the applications. Application data their relationships user profiles and rules can be stored using any relational databases or RDF graphs.

In the smart space interoperability architecture SIBs and agents and the nodes in handle different applications . . . that assume various functions shared by or tailored for different service applications such as rule interpreters adaptive engines etc. A significant difference between hypertext internet applications and semantic web applications is that the data representation in a semantic web application is semantically defined rather than just logical. The rules interpreter reads the rules stored in the data layer and triggers them based on the user profiles etc. The adaptive engines adapt the presentation and navigation based on the user profiles as well as the status of the user in the application. In the smart space use cases are considered in which a set of agents executing in various nodes mash up the information that these agents store and retrieve in from a particular SIB. This collaboration of the agents forms the application while collaboration and mash up of information occurs depends on the data available.

Applications are constructed to be executed by the agents and SIBs in a collaborating manner through information sharing rather than in the monolithic manner as in the hypertext internet interoperability architecture. Depending upon the particular situation and context that the user is either experiencing or requires at that time the agents can provide a monolithic style user interface at the presentation layer .

In the smart space interoperability architecture the user interfaces reside in the nodes in . In another embodiment the presentation layer can also provide different user interfaces . . . adapted for different presentation and navigation. A user interface in a semantic web application is flexible enough to compose a web page based on the available presentation and navigational elements instead of a fixed page design as in hypertext internet applications. Adaptive presentation adapts the contents of the page based on the user profiles. Adaptive navigation adapts the navigational elements and scenarios based on the user profiles. An adaptive user interface with adaptive presentation and adaptive navigation can be implemented using a user interface framework such as Websphere Portal JSF Tapestry etc. providing capabilities to adapt the contents of the user interface to different users in various use cases such as email blog etc.

To better understand the reactive authorization process in a semantic environment two proactive authorization processes are shown in and . In a semantic environment all information basic units e.g. a triple fragments named documents documents are represented according to the RDF. In a data centric architecture such as the smart space proactive authorization can be used by the owner of a resource to control access rights. It is noted that typically generic data manipulation protocol e.g. a protocol that supports data manipulation commands such as get update delete and query can implement proactive authorization but implementing reactive authorization under the same protocol can be quite challenging.

The process starts with a participant A e.g. the owner and a participant B e.g. Alice . Their corresponding nodes respectively establish relationships links with the conversation node as has participant. If a new participant e.g. Jenna wants to join the conversation its access application attempts to link its node to the conversation node . The access application of the new participant node sends a request in order to link the participant node to the conversation node . As shown by a process flow the conversation node then sends an approval e.g. OK to the new node . Therefore the new node establishes a relationship link with the conversation node as has participant. 

The smart space provides an event subscription mechanism which allows any authorized application to subscribe to a particular data query or access request and be notified if the query or request result set changes. This allows for example the owner node of the conversation to subscribe to any link changes to itself or to the resource and be notified when a new node e.g. the new node is linked to it or to the resource or unlinked from it or updated while being linked etc.

The process starts with the participant A e.g. the owner and a participant B e.g. Bob s financial advisor . Their corresponding nodes respectively establish relationships links with the conversation node as has participant. If a new participant e.g. Bob s girlfriend wants to join the conversation its access application attempts to link its node to the conversation node . The access application of the new participant sends a request to link the participant node to the conversation node . As shown by a process flow the conversation node then sends a denial e.g. ACCESS DENIED to the new node . Therefore the new node fails to link with the conversation node .

Referring back to the proactive authorization implemented in a smart space relies on predefined access rules for handling the generic data manipulation operations such as get update delete and query . In one embodiment these access rules are preset in advance and controlled by the resource owner. By way of example the resource owner controls the access rules via the same set of generic data manipulation operations. In case of proactive authorization an application designer of the use case application sets the access rules for the resource at the data layer and these access rules are controlled only by the specific application Alternatively the resource owner sets access rules via the user interface application and the use case application . This approach works similarly for traditional applications and smart space applications.

In contrast to implement the reactive authorization the existing hypertext internet interoperability architecture involves different applications for different use cases e.g. email blog web feed etc. to authorize access to data in different data models with special and complicated commands. These commands typically employ horizontal communications between different entities within the application layer . By way of example reactive authorization can generate communications from a user interface application to the user case application then to the user case application and then to the user interface application Thereafter the user interface applications may have to modify the access rules for some of the data in the data layer . The modification is then communicated back from the user case application to the user case application and eventually to the user interface application . In smart spaces communications within the same layer are discouraged because these communications often perform operations out of the scope of the generic data manipulation protocol. As discussed in the later embodiments the reactive authorization implemented in the smart space uses an Authorization Proxy to request the resource owner fro the resource access. The Authorization Proxy is an entity residing within the data layer which is accessed by all entities from the application layer in a unified way. By allowing these communications via the Authorization Proxy to happen in the data layer the embodiments achieve simplicity and eliminate the need for another signaling protocol.

Prior to the process a resource owner s access application sets up a reactive access policy for accessing a semantic network resource e.g. a blog a multimedia game ac conference call etc. . The access policy is set in Table 1 as follows 

By way of example Rule 1 enables the owner to link essentially any types of nodes including Participant nodes. The owner in the Rule 1 refers to the identity of the owner not a node class. As shown Rule 2 is straight . Rule 2 is directly applied to a triple e.g. a participant node not to a group of two or more chained triples. Any triple s between the owner node and a new participant node such as the Authorization Proxy node is transparent to the owner node in this context. The user in Rule 3 refers to the identity of the user not the node class. The access application of the owner uses the new node the new property of the new node and the identity of the user to perform a single INSERT i.e. link operation to the Authorization Proxy node according to Rule 3. The access policy executes the rules in order. Until a first match is found to authorize the access Rule 4 denies access by any other objects and any user.

In one embodiment the Authorization Proxy has its own access policy. By default the requester can attach any object to the Authorization Proxy because the requester creates and owns the Authorization Proxy node. As set in the reactive access policy for a resource node as shown in Table 2 any linking request from a Participant node to the resource results in sending a notification of the AUTHORIZATION REQUIRED status code from the resource to the Participant node. In other words a semantic database in the semantic web or the semantic data cloud in the smart space handles a notification of authorization of this linking request and sends the AUTH REQUIRED status code to the requesting entity. The access application of the requesting entity interprets the notification as a requirement to request for the owner s permission first.

Referring back to in one embodiment the access application of a new participant node performs the process and is implemented in for instance a chip set including a processor and a memory as shown . In step the new participant s access application causes at least in part transmission of a request for accessing a semantic network resource to the resource. The new participant s access application causes at least in part reception of the notification of the status code Authorization required from the resource Step . In response to the notification the new participant s access application generates an authorization proxy entity Step . The new participant s access application establishes a first link between the requesting entity and the authorization proxy entity Step . The new participant s access application establishes a second link between the authorization proxy entity and the resource Step . Thereafter when detecting a direct link to the resource the new participant s access application accesses the resource through the direct link. Alternatively the new participant s access application drops the first link when the owner entity denies the request.

The owner s access application then detects the requesting entity via the first link and a second link between the requesting entity and the authorization proxy entity. The approach of reactive authorization can be applied to different use cases such as participating in a conversation call conference conference call concert multimedia presentation of movie music etc. game 2D or 3D games etc. account creation registration while confirmation is pending posting a new message to a blog forum website that requires moderator s approval permission to subscribe to a particular query and or query results etc.

Thereafter the owner s access application determines to cause at least in part actions that result in transmission of a query for whether to accept the requesting entity to an owner entity of the semantic network resource Step . The determination is made at least in part based upon the reactive access policy. Each of the query the request the notification the query and the resource are represented by a semantic graph.

In addition the owner s access application determines to cause actions that result in establishing a link between at least the requesting entity and the semantic network resource when the owner entity accepts the requesting entity Step or determine to cause actions that result in dropping a link between the authorization proxy entity and the semantic network resource when the owner entity denies the requesting entity Step . The determinations are also made at least in part based upon the reactive access policy. In other words the owner s access application can establish a third link between the requesting entity and the resource when the owner entity accepts the request. The owner s access application retrieves though the first and second links semantic information of the requesting entity and causes at least in part presenting the semantic information to the owner entity. Otherwise the owner s access application drops the first link when the owner entity denies the request or after a predetermined time has passed since the query transmission.

In other embodiments as a result of AUTH REQUIRED status code the semantic database and or the semantic data cloud generate the authorization proxy entity and establish the first and second links when the owner entity accepts the request

1. Always allow Participant A to link nodes including nodes of a type Participant to the resource. By way of example Bob is always allowed to link a Participant node to his trip photo data.

2. By invitation only by default for linking nodes of the type Participant. By way of example whether a new Participant node is linked to Bob s trip photo data will be decided by Bob.

3. Always allow by default any users to link to a node of the type Authorization Proxy. By way of example a user is always allowed to link to an Authorization Proxy node.

In one embodiment the process starts with a participant A e.g. the owner and a participant B. Their corresponding nodes respectively establish relationships links with the conversation node as has participant. If a new participant e.g. a hiker interesting in hiking in Australia wants to join the conversation the new participant s access application attempts to link its node to the conversation node by sending a request e.g. ADD . As shown after a process flow the request occurs after the links and is expressed in a broken line . The access application of the conversation node then replies with a status code e.g. AUTHORIZATION REQUIRED to the new node based upon the reactive authorization policy.

As shown after a process flow continuing to the access application of the new Participant node creates an instance of an Authorization Proxy node and a requesting object link from the new Participant node to the Authorization Proxy node . The Authorization Proxy node is then linked to the conversation node with a status of has pending authorization. The data access policy of the conversation node allows linking of the Authorization Proxy node to the conversation node . This node allows linking of any other nodes to it using the relationship called requesting object . Any node of a type of Participant can link to the conversation node to establish a relationship link with the conversation node via the Authorization Proxy node . The link is created before establishing the link such that when the owner node sees i.e. detects a new object the new graph including the Authorization Proxy node is complete. As a result of its own event subscription the access application of the Participant A node receives a notification regarding the appearance of the new Authorization Proxy node linked to the conversation node . This is interpreted as an authorization request from the new node .

Prior to linking the Authorization Proxy node to the conversation node via the link the requesting application of the owner node sets up an event subscription for changes affecting the Authorization Proxy node in order to receive a notification about the changes including an outcome of the object request . After detecting the Authorization Proxy node and the new Participant node via the event subscription the access application of the owner node sends a query to the owner node to find out whether to accept the new Participant node . To make that decision the owner node finds information of the new Participant node via the links .

By checking the graph of the new node the access application of the owner node discovers who is requesting the authorization e.g. the new participant . The participant A reaches to the new Participant node to read the RDF thereof. The RDF contains all personal information of the new participant such as name age sex phone number bank account personal contacts emails etc. The smart space allows each node to divide a personal smart space into sub spaces to be accessible for different purposes. As results the new Participant node defines as much as information is accessible for participating in the conversation.

Thus the access application of the owner node presents the required UI element s via the application layer and the presentation layer to the participant A for permission or denial of the new participant. The process can remain in this state as long as the owner needs e.g. to check out the background of the new participant to run errands etc. since nothing is blocked by the decision process. In another embodiment a timeout e.g. after X hours is implemented to remove of the new Participant node and the Authorization Proxy node from the conversation node to conserve resources. This can be achieved by a generic mechanism of implementing a limited time to live for the nodes .

Eventually as shown after a process flow the owner Participant A decides to approve the request. The access application of the node links the new Participant node to the conversation node using a has participant relationship link and then removes unlinks the Authorization Proxy node. This is allowed by the reactive access policy due to the actions of the owner node because the actions are performed by the owner node itself. The new Participant node detects the change via the subscription mechanism and realizes that he she obtains access to the conversation.

When the request is denied the access application of the node deletes the Authorization Proxy node and drops the link between the Authorization Proxy node and the conversation node . In another embodiment the access application of the node drops the link and leaves to the new Participant node to delete the Authorization Proxy node . The new Participant node interprets either scenario as indication that the access is denied.

Since the new Participant node accesses the conversation node depending upon the owner s approval the conversation node is open to the public yet reactive authorization is required. For example Bob allows strangers to access a subgraph of his personal RDF graph including his Australian trip photos by invitation. Other resource examples include a construction bidding description a wedding gift wish list a class reunion database etc.

In another embodiment rather than having the access application of the new participant node create the instance of Authorization Proxy or reuse existing one if available in response to the notification of the status code AUTHORIZATION REQUESTED the access application of the conversation node or the semantic database or the semantic data cloud creates the Authorization Proxy node and the links and in response to an ADD request from the new Participant node . This is a generic operation and the relevant Authorization Proxy node type is a generic as well i.e. not specific to the new participant node .

In yet another embodiment instead of automatically removing unlinking the Authorization Proxy node upon successful authorization Participant A changes the type of relationship from the Authorization Proxy node to a new Participant node from requesting object to approved object and then links the new Participant node to the conversation node. This makes the access application of the new Participant node responsible for deleting the Authorization Proxy node. are diagrams of a process of reactive authorization in the semantic environment according to one embodiment.

The conversation starts with a participant A e.g. the owner and a participant B. Their corresponding nodes respectively establish relationships links with the conversation node as has participant. If a new participant wants to join the conversation its application attempts to link its node to the conversation node . The application of the new participant sends a request e.g. ADD to link the participant node to the conversation node . As shown after a process flow the conversation node then replies with a status code e.g. AUTHORIZATION REQUIRED to the new node according to an access policy which is the same as the access policy in .

As shown after a process flow continuing to the access application of the participant node creates an instance of node type Authorization Proxy linked to conversation node with a link of requesting object and a status of has pending authorization. Eventually as shown after a process flow the owner Participant A decides to approve the request. The access application of the Participant A changes the type of relationship from the Authorization Proxy node to a new Participant node from requesting object to approved object and then links the new Participant node to the conversation node . As shown after a process flow the access application of the node then links the new Participant node to the conversation node using a has participant relationship link . The access application of the new Participant node then deletes the Authorization Proxy node .

In yet another embodiment the access application of the owner node takes care of the clean up of the Authorization Proxy node if it is responsible for its transparent creation etc.

The above described embodiments perform application specific interactive operations using generic data manipulation mechanisms offered by the smart space. Any application can use the approach of reactive authorization without implementing advance protocols and access applications at the data layer.

The above described embodiments support implementing security policies with owner intervention authorization. The above described embodiments allow switching from proactive to reactive authorization for a particular object by just changing its policy when the applications are ready for it.

The above described embodiments allow a lot of flexibility. For example several users extending their prior relationships act as authorities for the owner e.g. any of them would be able to approve the access request. The authority can be further delegated from one user other than the owner to another user.

The above described embodiments require only one new node type Authorization Proxy and predefined types of the relationships e.g. has participant has pending authorization requesting object and approved object to execute reactive authorization. The above described embodiments do not require creating application specific or use case specific data types to handle each of different use cases separately as in the hypertext internet interoperability architecture.

The processes described herein for providing reactive authorization for accessing a semantic network resource may be advantageously implemented via software hardware firmware or a combination of software and or firmware and or hardware. For example the processes described herein including for providing user interface navigation information associated with the availability of services may be advantageously implemented via processor s Digital Signal Processing DSP chip an Application Specific Integrated Circuit ASIC Field Programmable Gate Arrays FPGAs etc. Such exemplary hardware for performing the described functions is detailed below.

In this context a protocol includes a set of rules defining how the network nodes within the communication network interact with each other based on information sent over the communication links. The protocols are effective at different layers of operation within each node from generating and receiving physical signals of various types to selecting a link for transferring those signals to the format of information indicated by those signals to identifying which software application executing on a computer system sends or receives the information. The conceptually different layers of protocols for exchanging information over a network are described in the Open Systems Interconnection OSI Reference Model.

Communications between the network nodes are typically effected by exchanging discrete packets of data. Each packet typically comprises 1 header information associated with a particular protocol and 2 payload information that follows the header information and contains information that may be processed independently of that particular protocol. In some protocols the packet includes 3 trailer information following the payload and indicating the end of the payload information. The header includes information such as the source of the packet its destination the length of the payload and other properties used by the protocol. Often the data in the payload for the particular protocol includes a header and payload for a different protocol associated with a different higher layer of the OSI Reference Model. The header for a particular protocol typically indicates a type for the next protocol contained in its payload. The higher layer protocol is said to be encapsulated in the lower layer protocol. The headers included in a packet traversing multiple heterogeneous networks such as the Internet typically include a physical layer 1 header a data link layer 2 header an internetwork layer 3 header and a transport layer 4 header and various application headers layer 5 layer 6 and layer 7 as defined by the OSI Reference Model.

A bus includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors for processing information are coupled with the bus .

A processor or multiple processors performs a set of operations on information as specified by computer program code related or provide reactive authorization for accessing a semantic network resource. The computer program code is a set of instructions or statements providing instructions for the operation of the processor and or the computer system to perform specified functions. The code for example may be written in a computer programming language that is compiled into a native instruction set of the processor. The code may also be written directly using the native instruction set e.g. machine language . The set of operations include bringing information in from the bus and placing information on the bus . The set of operations also typically include comparing two or more units of information shifting positions of units of information and combining two or more units of information such as by addition or multiplication or logical operations like OR exclusive OR XOR and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions such as an operation code of one or more digits. A sequence of operations to be executed by the processor such as a sequence of operation codes constitute processor instructions also called computer system instructions or simply computer instructions. Processors may be implemented as mechanical electrical magnetic optical chemical or quantum components among others alone or in combination.

Computer system also includes a memory coupled to bus . The memory such as a random access memory RAM or other dynamic storage device stores information including processor instructions for providing reactive authorization for accessing a semantic network resource. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory is also used by the processor to store temporary values during execution of processor instructions. The computer system also includes a read only memory ROM or other static storage device coupled to the bus for storing static information including instructions that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus is a non volatile persistent storage device such as a magnetic disk optical disk or flash card for storing information including instructions that persists even when the computer system is turned off or otherwise loses power.

Information including instructions for providing reactive authorization for accessing a semantic network resource is provided to the bus for use by the processor from an external input device such as a keyboard containing alphanumeric keys operated by a human user or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus used primarily for interacting with humans include a display device such as a cathode ray tube CRT or a liquid crystal display LCD or plasma screen or printer for presenting text or images and a pointing device such as a mouse or a trackball or cursor direction keys or motion sensor for controlling a position of a small cursor image presented on the display and issuing commands associated with graphical elements presented on the display . In some embodiments for example in embodiments in which the computer system performs all functions automatically without human input one or more of external input device display device and pointing device is omitted.

In the illustrated embodiment special purpose hardware such as an application specific integrated circuit ASIC is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor quickly enough for special purposes. Examples of application specific ICs include graphics accelerator cards for generating images for display cryptographic boards for encrypting and decrypting messages sent over a network speech recognition and interfaces to special external devices such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.

Computer system also includes one or more instances of a communications interface coupled to bus . Communication interface provides a one way or two way communication coupling to a variety of external devices that operate with their own processors such as printers scanners and external disks. In general the coupling is with a network link that is connected to a local network to which a variety of external devices with their own processors are connected. For example communication interface may be a parallel port or a serial port or a universal serial bus USB port on a personal computer. In some embodiments communications interface is an integrated services digital network ISDN card or a digital subscriber line DSL card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments a communication interface is a cable modem that converts signals on bus into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example communications interface may be a local area network LAN card to provide a data communication connection to a compatible LAN such as Ethernet. Wireless links may also be implemented. For wireless links the communications interface sends or receives or both sends and receives electrical acoustic or electromagnetic signals including infrared and optical signals that carry information streams such as digital data. For example in wireless handheld devices such as mobile telephones like cell phones the communications interface includes a radio band electromagnetic transmitter and receiver called a radio transceiver. In certain embodiments the communications interface enables connection from a user terminal to the communication network.

The term computer readable medium as used herein refers to any medium that participates in providing information to processor including instructions for execution. Such a medium may take many forms including but not limited to computer readable storage medium e.g. non volatile media volatile media and transmission media. Non transitory media such as non volatile media include for example optical or magnetic disks such as storage device . Volatile media include for example dynamic memory . Transmission media include for example coaxial cables copper wire fiber optic cables and carrier waves that travel through space without wires or cables such as acoustic waves and electromagnetic waves including radio optical and infrared waves. Signals include man made transient variations in amplitude frequency phase polarization or other physical properties transmitted through the transmission media. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM CDRW DVD any other optical medium punch cards paper tape optical mark sheets any other physical medium with patterns of holes or other optically recognizable indicia a RAM a PROM an EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave or any other medium from which a computer can read. The term computer readable storage medium is used herein to refer to any computer readable medium except transmission media.

Logic encoded in one or more tangible media includes one or both of processor instructions on a computer readable storage media and special purpose hardware such as ASIC .

Network link typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example network link may provide a connection through local network to a host computer or to equipment operated by an Internet Service Provider ISP . ISP equipment in turn provides data communication services through the public world wide packet switching communication network of networks now commonly referred to as the Internet .

A computer called a server host connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example server host hosts a process that provides information representing video data for presentation at display . It is contemplated that the components of system can be deployed in various configurations within other computer systems e.g. host and server .

At least some embodiments of the invention are related to the use of computer system for implementing some or all of the techniques described herein. According to one embodiment of the invention those techniques are performed by computer system in response to processor executing one or more sequences of one or more processor instructions contained in memory . Such instructions also called computer instructions software and program code may be read into memory from another computer readable medium such as storage device or network link . Execution of the sequences of instructions contained in memory causes processor to perform one or more of the method steps described herein. In alternative embodiments hardware such as ASIC may be used in place of or in combination with software to implement the invention. Thus embodiments of the invention are not limited to any specific combination of hardware and software unless otherwise explicitly stated herein.

The signals transmitted over network link and other networks through communications interface carry information to and from computer system . Computer system can send and receive information including program code through the networks among others through network link and communications interface . In an example using the Internet a server host transmits program code for a particular application requested by a message sent from computer through Internet ISP equipment local network and communications interface . The received code may be executed by processor as it is received or may be stored in memory or in storage device or other non volatile storage for later execution or both. In this manner computer system may obtain application program code in the form of signals on a carrier wave.

Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor for execution. For example instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system receives the instructions and data on a telephone line and uses an infra red transmitter to convert the instructions and data to a signal on an infra red carrier wave serving as the network link . An infrared detector serving as communications interface receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus carries the information to memory from which processor retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory may optionally be stored on storage device either before or after execution by the processor .

In one embodiment the chip set or chip includes a communication mechanism such as a bus for passing information among the components of the chip set . A processor has connectivity to the bus to execute instructions and process information stored in for example a memory . The processor may include one or more processing cores with each core configured to perform independently. A multi core processor enables multiprocessing within a single physical package. Examples of a multi core processor include two four eight or greater numbers of processing cores. Alternatively or in addition the processor may include one or more microprocessors configured in tandem via the bus to enable independent execution of instructions pipelining and multithreading. The processor may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors DSP or one or more application specific integrated circuits ASIC . A DSP typically is configured to process real world signals e.g. sound in real time independently of the processor . Similarly an ASIC can be configured to performed specialized functions not easily performed by a more general purpose processor. Other specialized components to aid in performing the inventive functions described herein may include one or more field programmable gate arrays FPGA not shown one or more controllers not shown or one or more other special purpose computer chips.

In one embodiment the chip set or chip includes merely one or more processors and some software and or firmware supporting and or relating to and or for the one or more processors.

The processor and accompanying components have connectivity to the memory via the bus . The memory includes both dynamic memory e.g. RAM magnetic disk writable optical disk etc. and static memory e.g. ROM CD ROM etc. for storing executable instructions that when executed perform the inventive steps described herein to provide reactive authorization for accessing a semantic network resource. The memory also stores the data associated with or generated by the execution of the inventive steps.

Pertinent internal components of the telephone include a Main Control Unit MCU a Digital Signal Processor DSP and a receiver transmitter unit including a microphone gain control unit and a speaker gain control unit. A main display unit provides a display to the user in support of various applications and mobile terminal functions that perform or support the steps of providing reactive authorization for accessing a semantic network resource. The display includes display circuitry configured to display at least a portion of a user interface of the mobile terminal e.g. mobile telephone . Additionally the display and display circuitry are configured to facilitate user control of at least some functions of the mobile terminal. An audio function circuitry includes a microphone and microphone amplifier that amplifies the speech signal output from the microphone . The amplified speech signal output from the microphone is fed to a coder decoder CODEC .

A radio section amplifies power and converts frequency in order to communicate with a base station which is included in a mobile communication system via antenna . The power amplifier PA and the transmitter modulation circuitry are operationally responsive to the MCU with an output from the PA coupled to the duplexer or circulator or antenna switch as known in the art. The PA also couples to a battery interface and power control unit .

In use a user of mobile terminal speaks into the microphone and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter ADC . The control unit routes the digital signal into the DSP for processing therein such as speech encoding channel encoding encrypting and interleaving. In one embodiment the processed voice signals are encoded by units not separately shown using a cellular transmission protocol such as global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi satellite and the like.

The encoded signals are then routed to an equalizer for compensation of any frequency dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream the modulator combines the signal with a RF signal generated in the RF interface . The modulator generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission an up converter combines the sine wave output from the modulator with another sine wave generated by a synthesizer to achieve the desired frequency of transmission. The signal is then sent through a PA to increase the signal to an appropriate power level. In practical systems the PA acts as a variable gain amplifier whose gain is controlled by the DSP from information received from a network base station. The signal is then filtered within the duplexer and optionally sent to an antenna coupler to match impedances to provide maximum power transfer. Finally the signal is transmitted via antenna to a local base station. An automatic gain control AGC can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone other mobile phone or a land line connected to a Public Switched Telephone Network PSTN or other telephony networks.

Voice signals transmitted to the mobile terminal are received via antenna and immediately amplified by a low noise amplifier LNA . A down converter lowers the carrier frequency while the demodulator strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer and is processed by the DSP . A Digital to Analog Converter DAC converts the signal and the resulting output is transmitted to the user through the speaker all under control of a Main Control Unit MCU which can be implemented as a Central Processing Unit CPU not shown .

The MCU receives various signals including input signals from the keyboard . The keyboard and or the MCU in combination with other user input components e.g. the microphone comprise a user interface circuitry for managing user input. The MCU runs a user interface software to facilitate user control of at least some functions of the mobile terminal to provide reactive authorization for accessing a semantic network resource. The MCU also delivers a display command and a switch command to the display and to the speech output switching controller respectively. Further the MCU exchanges information with the DSP and can access an optionally incorporated SIM card and a memory . In addition the MCU executes various control functions required of the terminal. The DSP may depending upon the implementation perform any of a variety of conventional digital processing functions on the voice signals. Additionally DSP determines the background noise level of the local environment from the signals detected by microphone and sets the gain of microphone to a level selected to compensate for the natural tendency of the user of the mobile terminal .

The CODEC includes the ADC and DAC . The memory stores various data including call incoming tone data and is capable of storing other data including music data received via e.g. the global Internet. The software module could reside in RAM memory flash memory registers or any other form of writable storage medium known in the art. The memory device may be but not limited to a single memory CD DVD ROM RAM EEPROM optical storage or any other non volatile storage medium capable of storing digital data.

An optionally incorporated SIM card carries for instance important information such as the cellular phone number the carrier supplying service subscription details and security information. The SIM card serves primarily to identify the mobile terminal on a radio network. The card also contains a memory for storing a personal telephone number registry text messages and user specific mobile terminal settings.

While the invention has been described in connection with a number of embodiments and implementations the invention is not so limited but covers various obvious modifications and equivalent arrangements which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims it is contemplated that these features can be arranged in any combination and order.

