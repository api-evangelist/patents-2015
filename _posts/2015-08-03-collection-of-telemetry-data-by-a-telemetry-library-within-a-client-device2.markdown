---

title: Collection of telemetry data by a telemetry library within a client device
abstract: Provided are methods and systems for collecting telemetry data by a telemetry library within a client device. A system for the collection of telemetry data by a telemetry library within a client device may comprise a client device to initialize the telemetry library. The system may further comprise a processor to contact a configuration server with identifying information specific to the client device to retrieve configuration information. The system may then perform a search using the identifying information, return configuration regular expressions related to the identifying information to the telemetry library, and identify the telemetry data along with a namespace or a scope to which the telemetry data belongs, using a name generated by the telemetry library.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09613147&OS=09613147&RS=09613147
owner: SONY INTERACTIVE ENTERTAINMENT INC.
number: 09613147
owner_city: Tokyo
owner_country: JP
publication_date: 20150803
---
This application is a continuation and claims the priority benefit of U.S. patent application Ser. No. 13 692 940 filed on Dec. 3 2012 now U.S. Pat. No. 9 105 178 issued on Aug. 11 2015 and titled Remote Dynamic Configuration of Telemetry Reporting Through Regular Expressions. The disclosure of the above referenced application is incorporated herein by reference for all purposes.

This disclosure relates generally to collecting digital information and more particularly to methods and systems for the collection of telemetry data by a telemetry library within a client device.

Currently most applications or devices at release time have no way of knowing what pieces of information collected as telemetry information will be useful until after the usage trends are analyzed. Because of this the application or the device has to transmit all of the data to the server first. The server then has to sift through the data before analyzing.

This summary is provided to introduce a selection of concepts in a simplified form that are further described in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

The present disclosure is related to the collection of telemetry data by a telemetry library within a client device. In some embodiments the technology may involve capturing in telemetry information for near real time analytics and aggregated information reports. A computer based method for dynamic configuration of telemetry data may include initializing the telemetry library via the client device contacting a configuration server with identifying information specific to the client device to retrieve configuration information via the telemetry library using the identifying information to perform a search via the configuration server returning configuration regular expressions related to the identifying information to the telemetry library via the configuration server using a name generated by the telemetry library to identify the telemetry data along with a namespace or a scope to which the telemetry data belongs via the client device generating a signature using a scope hierarchy the name used and the telemetry data being collected matching the telemetry data to the configuration regular expression and adding the telemetry data to its collection of data being captured if there is no match to the generated signature via the telemetry library. This method may be performed by a non transitory processor readable medium having embodied thereon instructions being executable by at least one processor.

In some embodiments a system for collection of telemetry data by a telemetry library within a client device the system comprising a client device to initialize the telemetry library and a processor to contact via the telemetry library a configuration server with identifying information specific to the client device to retrieve configuration information perform a search via the configuration server using the identifying information return configuration regular expressions via the configuration server related to the identifying information to the telemetry library identify the telemetry data along with a namespace or a scope to which the telemetry data belongs via the client device using a name generated by the telemetry library generate a signature using a scope hierarchy the name used and the telemetry data being collected match the telemetry data to the configuration regular expression and add the telemetry data to its collection of data being captured if there is no match to the generated signature via the telemetry library.

This technology may allow the client application or device to be dynamically configured by a server to collect just the data that the developers producers manufacturers or managers are interested in. At the same time it may also reduce network traffic and data warehouse storage costs by not transmitting unwanted information. Features examples and embodiments are described below.

The following detailed description includes references to the accompanying drawings which form a part of the detailed description. The drawings show illustrations in accordance with exemplary embodiments. These example embodiments which are also referred to herein as examples are described in enough detail to enable those skilled in the art to practice the present subject matter. The embodiments can be combined other embodiments can be utilized or structural logical and electrical changes can be made without departing from the scope of what is claimed. The following detailed description is therefore not to be taken in a limiting sense and the scope is defined by the appended claims and their equivalents.

In this document the terms a or an are used as is common in patent documents to include one or more than one. In this document the term or is used to refer to a nonexclusive or such that A or B includes A but not B B but not A and A and B unless otherwise indicated. Furthermore all publications patents and patent documents referred to in this document are incorporated by reference herein in their entirety as though individually incorporated by reference. In the event of inconsistent usages between this document and those documents so incorporated by reference the usage in the incorporated reference s should be considered supplementary to that of this document for irreconcilable inconsistencies the usage in this document controls.

The techniques of the embodiments disclosed herein may be implemented using a variety of technologies. For example the methods described herein may be implemented in software executing on a computer system or in hardware utilizing either a combination of microprocessors or other specially designed application specific integrated circuits ASICs programmable logic devices or various combinations thereof. In particular the methods described herein may be implemented by a series of computer executable instructions residing on a storage medium such as a disk drive or computer readable medium. It should be noted that methods disclosed herein can be implemented by a computer e.g. a desktop computer tablet computer laptop computer game console handheld gaming device cellular phone smart phone smart television system and so forth.

The embodiments described herein relate to computer implemented methods for remotely dynamically configuring capture of telemetry data based on name spaces and regular expressions. The methods may be implemented within a network such as the Internet.

According to the example embodiments discussed below the telemetry data may be collected by the client side telemetry library within the client device. The client device may be one or more of a game console a mobile device a computer a tablet computer a smartphone and so forth. The client device or application may send and receive data from the telemetry library to determine which telemetry data to capture.

The telemetry library may be broken down into several stages or processes startup logging and reporting.

In the startup process the telemetry library may be first initializes by the client application or device. The telemetry library may contact the configuration server with identifying information specific to the client application or device to retrieve the configuration information. The configuration server may search using the identifying information and may return the configuration regular expressions related to the identifying information to the telemetry library.

In the logging data process client application or device may use the telemetry library application programming interface API call to capture data using a name to identify the data along with the scope or name space it belongs to. The telemetry library may generate a signature using the scope hierarchy the name supplied and the type of information being captured. The telemetry library may use the configuration regular expressions sent by the server and may discard the data that matches the configuration regular expressions. If there is no match to the generated signature the telemetry library may add the data to its collection of data being captured.

In the reporting captured data process periodically at a convenient time for the client application or device the telemetry library may be called to transmit the captured data collection to the server for processing.

In one embodiment the telemetry library may use a Name Value pairing combination to uniquely identify telemetric data. The Name that is associated with the telemetric data may be generated based on concatenating the scope names name space information along with the individual name of the information being collected and also the type of information being collected. This concatenation of names may generate a text string that can be tested using regular expressions for matching and therefore filtered away on a match.

In one embodiment a scope session may be created each time a scope is opened for purposes of data collection.

In one embodiment some types of telemetric data collected by the telemetry library and the associated tag used for entry signature generation may include string data  S numeric value  V event  E counter  C and timer  T .

Using a list of regular expressions sent from the server the client application or device may filter away the telemetry entries that are no longer needed. For example data may be filtered based on a simple regular expression mechanism of having an asterisk match 0 or more of all characters except a forward slash and having the plus character match 0 or more of any character.

In one embodiment text entries may be aggregated into order list by popularity. A text entry may be any UTF 8 text up to 1024 bytes in length.

In some embodiments adding additional complexity to the regular expression parser may give finer grained control over the filtering if it is desired.

The embodiments described herein can be implemented by various means depending on the application. For example the embodiments can be implemented in hardware firmware software or in a combination thereof. For hardware implementation the embodiments can be implemented with processors controllers micro controllers microprocessors electronic devices other electronic units designed to perform the functions described herein or a combination thereof. Memory can be implemented within a processor or external to the processor. As used herein the term memory refers to any type of long term short term volatile nonvolatile or other storage device and is not to be limited to any particular type of memory or number of memories or type of media upon which memory is stored. For firmware and or software implementation the embodiments can be implemented with modules such as procedures functions and so on that perform the functions described herein. Any machine readable medium tangibly embodying instructions can be used in implementing the embodiments described herein.

Referring now to the drawings shows an example system environment for dynamically configuring the client to capture telemetry data. The system environment comprises a client device an application a telemetry library a mediator and a network . The network may couple the mediator and the telemetry library within the client device . The client application communicates with the telemetry library within the client device . The mediator may be a configuration server.

According to various embodiments the client device may refer to a computer e.g. a desktop computer laptop computer and tablet computer game console portable game console cellular phone smart phone television system online television system and so forth. Regardless of the type of the client device it includes an input unit display unit and a network interface unit to provide networked connectivity.

The network can be a wireless or wired network or a combination thereof. For example the network may include one or more of the following the Internet local intranet PAN LAN WAN MAN Metropolitan Area Network virtual private network VPN storage area network SAN frame relay connection Advanced Intelligent Network AIN connection synchronous optical network SONET connection digital T1 T3 E1 or E3 line Digital Data Service DDS connection DSL Digital Subscriber Line connection Ethernet connection ISDN Integrated Services Digital Network line dial up port such as a V.90 V.34 or V.34bis analog modem connection cable modem ATM Asynchronous Transfer Mode connection or an FDDI Fiber Distributed Data Interface or CDDI Copper Distributed Data Interface connection. Furthermore communications may also include links to any of a variety of wireless networks including WAP Wireless Application Protocol LTE Long Term Evolution GPRS General Packet Radio Service GSM Global System for Mobile Communication CDMA Code Division Multiple Access or TDMA Time Division Multiple Access cellular phone networks Global Positioning System GPS CDPD cellular digital packet data RIM Research in Motion Limited duplex paging network Bluetooth radio or an IEEE 802.11 based radio frequency network. The network can further include or interface with any one or more of the following RS 232 serial connection IEEE 1394 Firewire connection Thunderbolt Fiber Channel connection IrDA infrared port SCSI Small Computer Systems Interface connection USB Universal Serial Bus connection or other wired or wireless digital or analog interface or connection mesh or Digi networking.

The telemetry library may include multiple modules as illustrated in the example environment of . Specifically the telemetry library may include a communication module a collecting module a matching module a processing module a filtering module a reporting module a telemetry database and a content database . Both the client application within the client device and the network may connect with the telemetry library through the communication module .

In some embodiments the content database may store information such as the identifying information and data received from the mediator .

In some embodiments the telemetry library may have Hypertext Transfer Protocol HTTP Client code. Communications between the telemetry library and the network may be through the HTTP.

In some embodiments data exchanges between the telemetry library and the network may be done using communication systems such as CSON CoffeeScript Object Notation Communications Protocol. By using CSON Communications and Telemetry Protocols any client or server implementation can be created to generate or consume telemetry data.

The method may be performed by the various modules discussed above with reference to . Each of these modules may comprise processing logic. It will be appreciated by one of ordinary skill that examples of the foregoing modules may be virtual and instructions said to be executed by a module may in fact be retrieved and executed by a processor. The foregoing modules may also include memory cards servers and or computer disks. Although various modules may be configured to perform some or all of the various steps described herein fewer or more modules may be provided and still fall within the scope of example embodiments.

As shown in the method may commence at operation with the telemetry library receiving an input from the client application that the device has turned on or the application has started. Receiving may be performed in any suitable manner. The content at this step may also be stored in the content database .

At operation the telemetry library may send a signal flag along with identifying information to the mediator . Such signal may be a library call. In one example such identifying information may be associated with the client device or application . In another example the identifying information may be associated with the user of the client device.

At operation the telemetry library may receive configuration information from the mediator. The configuration information may be indicative of whether the service is enabled whether reporting is enabled and one or more regular expressions disallow filter expressions .

At operation the telemetry library may send a signal to the client application . Such signal may consist of information indicating whether communication with the mediator was successful. In an example if the connection with the mediator was unsuccessful an error message regarding connectivity may be displayed on the client device .

At operation the telemetry library may collect telemetry information from the client application. The collected telemetry information may be stored in the telemetry database . Even if the service and or the reporting are disabled the telemetry library may collect telemetry information from the client application. The information collecting may also happen even if the telemetry library could not connect to the mediator .

At operation the telemetry library may match the one or more regular expressions with the collected telemetry information. The matched telemetry information may be filtered and eliminated at operation .

At operation the telemetry library may send a report to the report server . The report may contain the telemetry information that did not match the one or more regular expressions.

In one example the telemetry data may be organized in hierarchical groupings as illustrated in . The collecting module within the telemetry library may organize the captured telemetry information into logical groupings called scopes. Such scopes may be named and arranged in a hierarchical tree underneath the corresponding application. The entities may be identified by their scope path their given name and their type. In this example a first person shooter game may have three levels of application scope allowed from the root scope . The root scope may be automatically created at application startup. The first level may contain three scopes player scope user interface UI scope and levels scope . Each of these scopes may contain information that is relevant to the corresponding scope. For example the player scope may contain data on the player s stats and equipment. These two types of data could be grouped into separate scopes. The stats scope may contain data on the player s stats such as health and armor. The equipment scope may contain data on the player s gear such as primary and secondary weapons ammunition and miscellaneous items.

The hierarchical tree may have numerous levels depending on the detail in grouping the data. For example the levels scope may have multiple level scopes underneath it such as lvl 1 scope lvl 2 scope and lvl 3 scope . Within each level scope there may be a scope for each area or building. In this example the lvl 1 scope has scopes for shed tower and factory .

In this example the client application may flush the aggregate entries at the start of the application . This may commence at operation with the application sending a command to the telemetry library to flush all the entries aggregated. The telemetry library may then send a command to telemetry database to clear the entries stored in the telemetry database and start aggregating new data entries at operation . Information indicating success or failure of the flush may be sent by the telemetry library to the application as shown in operation .

In the same example the client application may send a report of the captured telemetry data. This process may commence at operation with the application sending a command to the telemetry library to send a report to the report server . At operation the telemetry library may send a command to the telemetry database to transmit the filtered telemetry data to the report server . At the following operation the filtered telemetry data may be transmitted to the report server through a network . Information on the transmission success may be sent back to the telemetry library at operation . At operation this same information may be sent to the application from the telemetry library .

The example computer system includes a processor or multiple processors e.g. a central processing unit CPU a graphics processing unit GPU or both and a main memory and a static memory which communicate with each other via a bus . The computer system can further include a video display unit e.g. a liquid crystal display LCD or cathode ray tube CRT . The computer system also includes at least one input device such as an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse a microphone a digital camera a video camera and so forth. The computer system also includes a disk drive unit a signal generation device e.g. a speaker and a network interface device .

The disk drive unit includes a computer readable medium which stores one or more sets of instructions and data structures e.g. instructions embodying or utilized by any one or more of the methodologies or functions described herein. The instructions can also reside completely or at least partially within the main memory and or within the processors during execution thereof by the computer system . The main memory and the processors also constitute machine readable media.

The instructions can further be transmitted or received over the network via the network interface device utilizing any one of a number of well known transfer protocols e.g. Hyper Text Transfer Protocol HTTP CAN Serial and Modbus .

While the computer readable medium is shown in an example embodiment to be a single medium the term computer readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term computer readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that causes the machine to perform any one or more of the methodologies of the present application or that is capable of storing encoding or carrying data structures utilized by or associated with such a set of instructions. The term computer readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media. Such media can also include without limitation hard disks floppy disks flash memory cards digital video disks random access memory RAM read only memory ROM and the like.

The example embodiments described herein can be implemented in an operating environment comprising computer executable instructions e.g. software installed on a computer in hardware or in a combination of software and hardware. The computer executable instructions can be written in a computer programming language or can be embodied in firmware logic. If written in a programming language conforming to a recognized standard such instructions can be executed on a variety of hardware platforms and for interfaces to a variety of operating systems. Although not limited thereto computer software programs for implementing the present method can be written in any number of suitable programming languages such as for example Hypertext Markup Language HTML Dynamic HTML Extensible Markup Language XML Extensible Stylesheet Language XSL Document Style Semantics and Specification Language DSSSL Cascading Style Sheets CSS Synchronized Multimedia Integration Language SMIL Wireless Markup Language WML Java Jini C C Perl UNIX Shell Visual Basic or Visual Basic Script Virtual Reality Markup Language VRML ColdFusion or other compilers assemblers interpreters or other computer languages or platforms.

Thus methods and systems for remotely dynamically configuring capture of telemetry data based on name spaces and regular expressions have been described. The disclosed technique provides a useful tool for individuals such as developers producers manufacturers and managers to dynamically configure client applications or devices to collect data that they are interested in. The configuration can be performed remotely and at run time to only capture data developers and others are interested in receiving. The captured telemetry data is filtered and sent to a server where developers and others may analyze the information.

Although embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes can be made to these example embodiments without departing from the broader spirit and scope of the present application. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

