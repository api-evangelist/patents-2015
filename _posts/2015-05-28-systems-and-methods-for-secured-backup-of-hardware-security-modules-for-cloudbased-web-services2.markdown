---

title: Systems and methods for secured backup of hardware security modules for cloud-based web services
abstract: A new approach is proposed to support secured hardware security module (HSM) backup for a plurality of web services hosted in a cloud to offload their key storage, management, and crypto operations to the HSM. Each HSM is a high-performance, FIPS 140-compliant security solution for crypto acceleration of the web services. Each HSM includes multiple partitions isolated from each other, where each HSM partition is dedicated to support one of the web service hosts/servers to offload its crypto operations via a HSM virtual machine (VM) over the network. The HSM-VM is configured to export objects from the key store of a first HSM partition to a key store of a second HSM partition, wherein the second HSM partition is configured to serve the key management and crypto operations offloaded from the web service host once the objects exported from the key store of the first HSM partition are received.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09571279&OS=09571279&RS=09571279
owner: CAVIUM, INC.
number: 09571279
owner_city: San Jose
owner_country: US
publication_date: 20150528
---
This application claims the benefit of U.S. Provisional Patent Application No. 62 008 112 filed Jun. 5 2014 and entitled Method And System For Cloud Based Web Service Security Management Based On Hardware Security Modules HSMs which is incorporated herein in its entirety by reference.

This application is related to co pending U.S. patent application Ser. No. 14 299 739 filed Jun. 9 2014 and entitled Systems and Methods for Cloud Based Web Service Security Management Based on Hardware Security Modules which is incorporated herein in its entirety by reference.

This application is related to co pending U.S. patent application Ser. No. 14 662 012 filed Mar. 18 2015 and entitled Systems and Methods for Secured Hardware Security Module Communication with Web Service Hosts which is incorporated herein in its entirety by reference.

This application is related to co pending U.S. patent application Ser. No. 14 667 238 filed Mar. 24 2015 and entitled Systems and Methods for Secured Key Management via Hardware Security Module for Cloud Based Web Services which is incorporated herein in its entirety by reference.

This application is related to co pending U.S. patent application Ser. No. 14 723 999 filed May 28 2015 and entitled Systems and Methods for High Availability of Hardware Security Modules for Cloud Based Web Services which is incorporated herein in its entirety by reference.

As service providers increasingly host their web services e.g. web sites at third party data centers in the cloud such as Amazon Web Services AWS and Google Sites security and key management for these web services hosted at the third party data centers has become an important issue. The crypto operations such as RSA encryption and decryption operations required for secured communications with these web services consume a lot of CPU cycles and computing resources at the servers hosting the web services and are preferred to be offloaded to a separate module dedicated to that purpose.

Hardware security modules HSMs are physical computing devices that safeguard and manage keys for strong authentication and provide crypto processing capabilities. Each HSM traditionally comes in the form of a plug in card or an external device that attaches directly to a computer or network server to offload key management and crypto operations from the server. However hardware offloading is not always available especially for the web services hosted at third party data centers because most servers at the data centers do not have hardware RSA accelerators. In addition some hypervisor products for running virtual machines on the servers such as vSphere by VMWare and Hyper V by Microsoft do not support non networking single root I O virtualization SR IOV which enables a device to separate access to its resources among various Peripheral Component Interconnect PCI Express PCIe hardware functions and thus making them very difficult to provide hardware offloading for crypto operations. Therefore there is a need for an improved system and method to provide secured key management for cloud based web services hosted at a third party data center via HSMs.

The foregoing examples of the related art and limitations related therewith are intended to be illustrative and not exclusive. Other limitations of the related art will become apparent upon a reading of the specification and a study of the drawings.

The following disclosure provides many different embodiments or examples for implementing different features of the subject matter. Specific examples of components and arrangements are described below to simplify the present disclosure. These are of course merely examples and are not intended to be limiting. In addition the present disclosure may repeat reference numerals and or letters in the various examples. This repetition is for the purpose of simplicity and clarity and does not in itself dictate a relationship between the various embodiments and or configurations discussed.

A new approach is proposed that contemplates systems and methods to support secured hardware security module HSM backup for a plurality of web services hosted in a cloud to offload their key storage management and crypto operations to the HSM. Each HSM is a high performance Federal Information Processing Standards FIPS 140 compliant security solution for crypto acceleration of the web services. Specifically each HSM can be a hardware firmware multi chip embedded cryptographic module adapter which provides cryptographic functionalities including but not limited to key management modular exponentiation random number generation and hash processing along with protocol specific instructions to support various security protocols. Each HSM includes multiple partitions isolated from each other where each HSM partition is dedicated to support one of the web service hosts servers to offload its crypto operations via one of a plurality of HSM virtual machine VM over the network. The HSM VM is configured to export a plurality of objects from the key store of a first HSM partition to a key store of a second HSM partition wherein the second HSM partition is configured to serve the key management and crypto operations offloaded from the web service host once the objects exported from the key store of the first HSM partition are received.

The proposed approach enables web service providers hosting their web services at a third party data center to offload its key management and crypto operations to one or more cloud based HSMs to save computing resources on the hosts of the web services. Importantly the keys and credentials of each web service are kept in a FIPS 140 2 compliant secured environment on the HSMs which is accessible only by the web service and the corresponding HSM dedicated to serve the web service host. Not even the third party data center that hosts the web service is able to access keys and data contained in the HSM. Such an approach enables the offloading of the key management and crypto operations of the web service providers so they can be accomplished in a highly secured manner.

In the example of the system includes at least a hardware security module HSM appliance or HSM a plurality of HSM virtual machines HSM VMs an HSM managing VM and a trusted platform module TPM . In some embodiments the HSM is a multi chip embedded hardware firmware cryptographic module having software firmware hardware or another component that is used to effectuate a purpose. The HSM VMs the HSM managing VM typically run on a network accessible multi tenant computing unit appliance host that is certified under Federal Information Processing Standard FIPS for performing secured cryptographic operations. The computing unit appliance host comprises one or more of a CPU or microprocessor a memory also referred to as primary memory such as RAM and a storage unit such as a non volatile memory also referred to as secondary memory with software instructions stored in for practicing one or more processes. When the software instructions are executed at least a subset of the software instructions is loaded into memory and the computing unit becomes a special purpose computing unit for practicing the processes. When implemented on a general purpose computing unit the computer program code segments configure the computing unit to create specific logic circuits. The processes may alternatively be at least partially embodied in a digital signal processor formed of application specific integrated circuits ASIC for performing the processes. For non limiting examples the host can be a computing device a communication device a storage device or any electronic device wherein the computing device can be but is not limited to a laptop PC a desktop PC a mobile device or a server machine such as an x86 server and the communication device can be but is not limited to a mobile phone.

In the example of each of the HSM the HSM VMs and the HSM managing VM has a communication interface as described below which is a component that enables the components to communicate with each other and other devices hosts servers over a network not shown following certain communication protocols such as TCP IP protocol. Such network can be but is not limited to internet intranet wide area network WAN local area network LAN wireless network Bluetooth WiFi mobile communication network or any other network type. The physical connections of the network and the communication protocols are well known to those of skill in the art.

In the example of the HSM implemented via the HSM adapter is configured to provide a FIPS 140 2 overall Level 3 certified security solution to a plurality of web service providers hosts by offloading key storage and cryptographic operations of the web service hosts. For a non limiting example the encryption decryption key management is for symmetric and or asymmetric e.g. RSA keys and the crypto operations to be accelerated are for cryptographic protocols such as Transport Layer Security TLS and or Secure Sockets Layer SSL designed to provide communication security over the Internet. As shown in the HSM adapter of the HSM is physically connected to the computing unit running the HSM VMs and the HSM managing VM via a PCIe slot in order to interact with and to provide high speed crypto acceleration to the web service hosts in a secure manner. The cryptographic functionalities provided by the HSM include but are not limited to modular exponentiation random number generation and hash processing along with protocol specific instructions to support various security protocols such as TLS SSL via the security processor embedded in the HSM adapter . These cryptographic functionalities provided by the HSM can be accessed by other components of system via an Application Programming Interface API defined and provided by the HSM .

In some embodiments the HSM can be further divided into multiple HSM partitions where each HSM partition is dedicated to support key and security credential management and to perform crypto operations offloaded from a web service provider host over a network via its corresponding HSM VM with one or more crypto acceleration units of pre configured values and a dedicated key store discussed in details below. In some embodiments the HSM partitions are soft partitions created by the HSM managing VM discussed in details below utilizing firmware of the HSM and its hardware implementations e.g. HSM adapter . In some embodiments the HSM can support up to a certain number e.g. 32 HSM partitions in an active state of operation while the rest of the HSM partitions on the HSM are in an inactive state. Once the number is reached one or more HSM partition has to be moved from the active state to the inactive state in order for another HSM partition to be moved to the active state to serve its user web service host. In some embodiments one or more of the HSM partitions can be consolidated and moved from one HSM to another.

In the example of each HSM VM and its corresponding HSM partition form an HSM service unit which communicates with and offloads secured key management and crypto operations from a specific user web service host. Here each HSM partition has a one to one correspondence with the HSM VM in the same HSM service unit wherein the HSM partition interacts with and allows access only from the HSM VM in the HSM service unit . In some embodiments a unique static secret e.g. 12 byte long is configured and assigned to each HSM VM during initialization of the system and its drivers. Every subsequent request to an HSM partition from the HSM VM in the same HSM service unit is then checked against the static secret assigned to the particular HSM VM as well as a dynamic secret e.g. 8 byte long provided in real time during the interacting process between the HSM partition and the HSM VM .

In some embodiments each HSM service unit supports and requires identity based authentication for operations by a set of users web service hosts as required by the FIPS 140 2 level 3. Each of the users can access the HSM service unit to manage it and or to offload key management and computer intensive crypto operations to it. One of the users serves as an administrator to create and initialize the HSM service unit with a set of policies via the HSM managing VM as discussed in details below. Other users include at least one web service host which logs in to an HSM service unit with credentials via the corresponding HSM VM of the HSM service unit . In some embodiments each user web service host who wants to login to and access the HSM service unit to offload its crypto operations via the corresponding HSM VM should provide the HSM service host with a valid certificate in order to access the HSM service host wherein the certificate is issued by a trusted certificate authority CA during the request to create the HSM service unit . In some embodiments the user web service host needs to supply the HSM service unit with a complete chain of CA certificates which are all active and have not been revoked.

In some embodiments each HSM service unit permits a different set of API calls for different types of commands wherein types of commands made available by the HSM service unit vary based on the type of user logged into the HSM service unit and some API calls do not require any user identification or login. For a non limiting example the administrator via the HSM managing VM may utilize a set of commands to initialize and manage e.g. create delete backup restore the HSM service units while the web service host may utilize a different set of commands for key management and crypto acceleration via the HSM service unit .

In some embodiments each HSM partition of an HSM service unit includes a key store configured to accept and store various types of objects for authentication and or crypto operations of the corresponding web service host. Here the objects include but are not limited to secured authentication credentials user generated imported keys certificates of the web service host and configurations for the corresponding HSM VM served by the HSM partition . Here all the keys passwords and or credentials stored in the key store are maintained in an isolated and tamper proof environment e.g. FIPS 140 2 Level 3 certified hardware implementation of the HSM e.g. HSM adapter with nothing being stored anywhere else e.g. the host of the HSM VMs in the system . In some embodiments the objects are encoded and encrypted via an encryption key before being stored in the key store wherein the encryption key is unique for each key store . Consequently no entity e.g. other web service hosts except the web service provider host can have access e.g. read write to the authentication credentials to the key store of the HSM partition via its corresponding HSM VM .

In some embodiments each HSM service unit is identified using a unique HSM ID which is a string generated with one or more of Appliance Serial Number of the HSM Adapter MAC address of the network adapter of the host domain name of the web service host e.g. the name used in the certificate and any user provided string. In some embodiments each object stored in the key store is identified and can be accessed with a unique key handler wherein the key handler along with the HSM ID forms a global unique identifier for the object. When a web service host accesses a corresponding HSM service unit using its HSM ID the key handler is sufficient to uniquely identify each object in the key store of the HSM partition . In some embodiments an object moving from one HSM partition to another HSM partition may not get the same identifier unless both HSM partitions are configured to be in the same high availability HA backup domain.

In some embodiments the key store of each HSM partition is configured to support object operations including but not limited to generating deleting finding importing exporting and creating of the objects in the key store . Here each object is stored in the key store along with its attributes which include but are not limited to timestamps user exportable usage etc. Object flags may also be adopted to define the usability of the object for wrapping exporting signature generation verification etc. The key store checks every object for validity e.g. date and time based on the stored attributes before using the object for crypto operations. In some embodiments the key store performs consistency checks when an object is created or imported to avoid storing invalid objects keys in the key store . In some embodiments the key store supports retrieving and modifying of selected attributes of the objects in the key store .

In some embodiments when the HSM imposes a limit on the number of keys in the key store e.g. at about 50K keys in each HSM partition of an HSM service unit a set of HSM service units can be connected together to form a so called elastic HSM set which extends the sizes of their key stores seamlessly by combining the key stores to be accessed as one elastic key store. Here the HSM service units need not be on same HSM and different HSM service units running on different HSMs can connect to each other logically and form an elastic HSM set . Each HSM service unit in the elastic HSM set is identified with an id SET ID wherein the first HSM service unit in the elastic HSM set is the base HSM service unit and the rest are the extended HSM service units. By default every HSM service unit is in a singleton elastic HSM set with its SET ID set to 0 wherein the set can be extended when required.

During operations all HSM service units in the elastic HSM set are provided to the user web service host as a single logical HSM service unit having the combined key store. In some embodiments the key handler of each object in the elastic HSM set is formed as SET ID key handler in the local key store in the form of a mapping table. As such the size of the combined key store for the elastic HSM set can be increased or decreased dynamically with a supported minimum size by including or removing one or more HSM service units in the elastic HSM set . In some embodiments the size of the key store for the elastic HSM set can be reduced by merging HSM service units when all keys in the key store of one HSM service unit can be moved to a different HSM service unit in the set. The key handler of each object also needs to be updated during a merge of the HSM service units . The HSM service units in the elastic HSM set are initialized and managed via the HSM managing VM via admin APIs as discussed below wherein any operation on the base HSM service unit is also performed on the extended HSM service units.

In some embodiments the configuration of the elastic HSM set having multiple HSM service units is made transparent to the user web service host where only the base HSM service unit in the elastic HSM set is exposed to the user via its HSM VM . Under such scenario extended HSM service units in the elastic HSM set would accept connections only from the base HSM service unit not directly from the user. The user web service host can only communicate with the base HSM service unit for requests for key management and crypto operations and the base HSM service unit can offload such received requests to the extended HSM service units via the back channel as necessary.

In some embodiments the user is aware of the configuration of the elastic HSM set having multiple HSM service units and it can communicate with and offload its key management and crypto operations directly to the extended HSM service units in the elastic HSM set without passing through the base HSM service unit for scalability and performance. Under such scenario the base HSM service unit needs to copy user credentials onto each extended HSM service unit in the elastic HSM set and the mapping of the key handler of each object in the elastic HSM set is provided to the user for access to the key stores of the HSM service units. In some embodiments key management operations are centrally managed by the base HSM service unit.

In the example of the flowchart starts at block where a secured communication channel is established with a web service host over a network to offload its key management and crypto operations via the secured communication channel. The flowchart continues to block where keys and credentials of the web service host are stored in a key store of an HSM partition in an isolated and tamper proof environment on an HSM adapter. The flowchart continues to block where the crypto operations offloaded from the web service host are performed by the HSM partition using stored keys and credentials of the web service host. The flowchart ends at block where the result of the crypto operations is provided to the web service host via the secured communication channel.

In the example of each HSM VM of an HSM service unit is configured to interact with a web service provider host via secured communication channels to enable the web service provider host to authenticate itself in order to offload its key management and crypto operations of the web service provider host to a specific HSM partition of the HSM dedicated to the HSM VM . The HSM VMs run on top of a hypervisor which runs the HSM VMs and HSM managing VM on the host . The hypervisor presents each VM with a virtual operating platform and manages the execution of each VM on the host . Each HSM VM is a software implementation that executes programs to emulate a computing environment such as an operating system OS . The duration of the communication channel session between the HSM VM and the web service provider host varies with every login attempt by the web service provider host and the secured communication channel can only be established following a successful secured handshake between the web service provider host and the HSM VM . In some embodiments the dynamic secret used to authenticate the HSM VM to the HSM partition is also generated following the establishment of the secured communication channel.

In some embodiments each HSM VM contains one or more of the following software components a secured OS e.g. Security Enhanced Linux or SE Linux a virtual function VF network driver configured to interact with a physical network adapter card of the host to receive and transmit communications e.g. packets dedicated to the specific HSM VM and a VF HSM driver configured to interact with an HSM partition of the HSM dedicated to the specific HSM VM and to set up a request response communication path between the HSM VM and the HSM partition . The VF HSM driver of the HSM VM and the HSM partition of the HSM communicate with each other through a SR IOV PCIe bridge as discussed above and each communication takes place in a FIPS compliant way. As referred to herein a VF driver is a lightweight PCIe function associated with the PCIe Physical Function PF on a network adapter e.g. network adapter that supports single root I O virtualization SR IOV and represents a virtualized instance of the network adapter. Each VF shares one or more physical resources on the network adapter such as an external network port with the PF and other VFs.

In some embodiments the HSM VMs running on the same hypervisor on the host are isolated from each other and one HSM VM cannot access data communication of any other HSM VMs . During communication packets received by the VF network driver of an HSM VM from the physical network adapter are filtered via a static destination MAC address which is unique for each VF driver and cannot be changed configured by the VF driver. The MAC address is delivered directly to the VF network driver of the HSM VM based on SR IOV mapping. When transmitting a packet from the HSM VM the VF network driver directly puts the packet into a hardware queue which is sent out of the physical network adapter without the packet touching the host side or any other HSM VMs running on the same host .

In some embodiments each HSM VM further includes a secured communication server e.g. a TurboSSL accelerated thin server configured to establish the secured communication channel between the HSM VM and a server host of a web service provider over a network via provided SSL TLS functions to allow the web service provider secured access to the HSM partition . To ensure the secured communication the secured communication server adopts certificate based mutual authentication between the HSM VM and the web service host and uses a restricted cipher set with the highest security. The secured communication channel is established by the secured communication server using mutually authenticated SSL session. In some embodiments RSA based certificates are used for mutual authentication. The cipher set supported by the secured communication server prevents forward secrecy and attacks against block cipher chaining over the secured communication channel.

During its operation the secured communication server of the HSM VM opens a session with its corresponding HSM partition in the same HSM service unit . The secured communication server listens for connection requests from a user web service provider. For each new request received from the user the secured communication server establishes a secured communication channel with the web service provider wherein the secure channel acts to communicate all requests from the user. The user needs to provide login credentials e.g. domain name certificate user ID and password etc. required to authenticate itself to the HSM VM and the HSM partition and is only allowed to issue non privileged requests e.g. request for information of the HSM partition until its login credentials are authenticated by the HSM VM . In some embodiments all parties in the communication will have a certificate issued by an authorized local Certification Authority CA discussed in details below. Similarly each web service host can have its own local CA to support multiple users. The secured communication server verifies the received login credentials including the user supplied certificate for domain and role correctness. Once the web service provider is authenticated the secured communication server then converts the request into a command to offload key management and crypto e.g. RSA operations from the web service host to the corresponding HSM partition and or to save private keys to the key store in the HSM partition via the HSM VM . In some embodiments the HSM VM offloads the crypto operations to an x86 Advanced Encryption Standard AES engine running on the HSM partition for performance optimization. After the commands from the user have been processed by the HSM partition the secured communication server returns the results back to the user over the network through the secured communication channel. In some embodiments the user can keep track of its commands to the HSM VM using request IDs which are communicated to the HSM VM and sent back along with the response.

In some embodiments the secured communication server of the HSM VM is configured to create multiple secured communication channels having different security strengths with different users based on their types. In some embodiments the secured communication server supports multiple concurrent sessions with multiple users to access the HSM VM over the network. For non limiting examples 

In some embodiments the secured communication server is configured to establish a secured communication channel between the web service host and a smart card configured to perform a number of offloaded crypto operations e.g. minimum of 2048 bit RSA operations and 256 bit AES operations . In some embodiments the secured communication server either supports the elastic HSM set having multiple HSM service units in a transparent mode or exposes the HSM service units as multiple units to support web service hosts.

In some embodiments the secured communication server is configured to utilize one or more libraries provided by the HSM VM to offload requests responses for the key management and crypto operations of the user web service host to its corresponding HSM partition via the secured communication channel wherein the libraries can either be an external engine following Public Key Cryptography Standards PKCS e.g. a PKCS 11 engine or a patch to OpenSSL. In some embodiments all requests and responses over the secured communication channel are in asynchronous mode so the user web service provider may block poll on the corresponding network port. In some embodiments requests responses from multiple users web service hosts can be tunneled to the same HSM service units . In some embodiments the secured communication server is configured to accept and apply configuration parameters of the secured communication channel in the form of a configuration file wherein the parameters include but are not limited to partition hostname IP addresses cipher suite SSL rekey time path to the key handle files default reconnection time scheduling parameters etc.

In the example of the TPM running on the HSM HSM adapter is configured to provide authenticity and integrity for the service hosts . The TPM provides a pair of persistent public and private keys certified and installed during the production of the HSM adapter wherein this key pair cannot be read modified or zeroized by any other party. The TPM is configured to utilize the key pair to develop the local certification authority CA and its certificates to extend the authenticity and integrity to the HSM service units including both the HSM VM and HSM partition to mitigate the impersonation attacks to the system. During its operation the TPM is only accessible by the internal management module of the HSM adapter . Without this otherwise non accessible TPM an attacker having a certificate with serial number of the HSM adapter embedded in it and or the private key in its hand can impersonate the system and run cloning kind of security protocols on any arbitrary machine and see the keys in clear format. In some embodiments each HSM service unit can also be configured to communicate with another trusted HSM service unit via a back channel to minimize impersonations in addition to the certificate based authentication.

In the example of the local CA is a software module of the operating system e.g. Security Enhanced Linux or SE Linux of the HSM and is established by the TPM to extend the source authenticity and integrity features to each HSM service unit of the system . In some embodiments the local CA includes at least the following two types of certificates 

In the example of the flowchart starts at block where a secured communication channel is established between a web service host and a hardware security module HSM virtual machine VM created on a host wherein the HSM VM is dedicated to an HSM partition of an HSM adapter in a one to one correspondence. The flowchart continues to block where the web service host is authenticated based on its provided credentials. The flowchart continues to block where key management and crypto operations are offloaded from the web service host to the HSM partition once the web service host is authenticated. The flowchart continues to block where the key management and crypto operations offloaded from the web service host are performed via the HSM partition. The flowchart ends at block where results of the key management and crypto operations are provided to the web service host via the secured communication channel.

In the example of the HSM managing VM is configured to serve in an administrator role to manage e.g. create delete backup restore the plurality of HSM service units including both the HSM VMs and their corresponding HSM partitions as well as various devices utilized by the HSM VMs . Specifically the HSM managing VM determines the number of active HSM partitions within the HSM loads drivers for the various devices e.g. physical network adapters and the HSM used to communicate with the HSM partitions launches and monitors HSM VMs dedicated to the HSM partitions and handles critical management updates for the various devices. In some embodiments the HSM managing VM runs a secured OS e.g. Security Enhanced Linux or SE Linux . In some embodiments the HSM managing VM includes a physical function PF network driver configured to initialize the physical network adapters cards used by the VF network drivers of the HSM VMs to communicate with their respective web service providers. As referred to herein a PF driver is a PCIe function on a network adapter e.g. network adapter that supports SR IOV interface. The PF driver is used to configure and manage the SR IOV functionality of the network adapter such as enabling virtualization and exposing PCIe VFs.

In some embodiments the HSM managing VM further includes a PF HSM driver configured to setup and initialize the HSM for operating its HSM partitions with the VF HSM drivers of the HSM VMs . The PF HSM driver performs an initial handshake and establishes a request response communication channel with the HSM . The PF HSM driver identifies the number of active HSM partitions in the HSM and passes it to the HSM managing VM . If there are active HSM partitions on the HSM the HSM managing VM checks the integrity of corresponding VM images creates the plurality of HSM VMs each dedicated to one of the HSM partitions and uses the commands available to initialize the HSM and manage the HSM partitions of the HSM . If no active HSM partition is available in the HSM the HSM managing VM launches no HSM VM . The HSM managing VM may subsequently create and or remove HSM VM based on the number of HSM partitions available in the HSM and or the number of web service providers requesting to offload key management and crypto operations.

In some embodiments the HSM managing VM initializes each HSM partition of an HSM service unit with required policies and user accounts once the HSM service unit is created. When an HSM service unit is created its HSM partition is initialized and tied to a domain of a web service host using a certificate. In addition a default user account is created and a key pair for creating the secured communication channel is generated by the TPM along with its certificate. Here the default user is a local user of the HSM partition and its credentials are maintained in the HSM partition and are never sent out the FIPS boundary of the HSM appliance . These credentials are only used for automatic key backup and internal crypto offloads and are not exposed to the user web service provider so that it cannot login with these credentials. During operation HSM VM passes the credentials it received from a web service host to its HSM partition during login wherein the HSM partition compares the received credentials against its stored values to determine whether to allow the user to offload its crypto and or key management operations.

During its operation the HSM managing VM creates an HSM service unit for a user web service host based on the user s domain certificate performance requirements and network configuration. The HSM managing VM then checks if the requested performance configuration e.g. key store size and crypto operations sec is available. If so the HSM managing VM creates an HSM partition of the HSM service unit with the required storage and assigns crypto cores of the HSM partition per the requested performance. The HSM managing VM generates and saves required pair of persistent keys and certificate for identification of the HSM service unit as well as a storage encryption key for encrypting the persistent keys in the key store of the HSM partition . The HSM managing VM also creates an HSM VM of the HSM service unit with the provided network access details such as an IP address and part of a hostname. Finally the HSM managing VM starts the HSM service unit by making it available to the user web service host to offload its key management and crypto operations when both the created HSM VM and the HSM partition are ready.

While the system depicted in is in operation the HSM managing VM communicates with the HSM to identify the number of active HSM partitions available in the HSM . The HSM managing VM then creates a plurality of HSM service units wherein each of the HSM VMs in an HSM service unit is dedicated to and has a one to one correspondence with the corresponding HSM partition in the HSM service unit following proper authentication. The HSM managing VM also initializes a plurality of network adapters cards used by the HSM VMs to communicate with web service providers. During its operation each HSM VM establishes a secured communication channel with a web service host for receiving and transmitting packets of requests and data from and to the web service host. When an HSM VM receives a request from the web service host via its network adapter the HSM VM converts the request into a command for the HSM and passes the command to the HSM partition dedicated to serve the HSM VM and the web service host. The dedicated HSM partition maintains encryption decryption keys as well as other credentials for the web service host in a FIPS 140 2 Level 3 certified environment. The HSM partition further performs crypto operations including but not limited to key generations and bulk data encryption decryption operations offloaded from the web service host. The HSM partition then provides the results of the key and or crypto operations back to the web service host through the secured communication channel established by the HSM VM via the network adapter .

Similarly each HSM VM and its corresponding HSM partition also move from an initial reset state to an operational state where the partition can be accessed by its HSM VM for various cryptographic operations. The HSM VM is in HSM Partition or SingleHSM Default state when the HSM is being initialized by the HSM managing VM for the first time. When in HSM Partition Default or HSM Partition Operational state where the VF HSM driver of the HSM VM has yet to initialize the HSM partition the HSM defines a messaging protocol that the VF HSM driver follows to move the HSM partition to Secure Operational state and all handshake communication between the VF HSM driver and the HSM partition takes place through VF configured buffers. depicts a diagram of an example of a four way handshake between the VF HSM driver and the HSM partition . As part of this handshake mechanism a portion of a static secret is exchanged which in conjunction with the secret exchanged with the PF HSM driver discussed above forms a static secret that cannot be read by any other HSM partition . Once this exchange completes the HSM VM moves to HSM Partition Secure Operational state where the HSM VM work with its corresponding HSM partition to perform key management and crypto operations offloaded from a web service host to the HSM VM .

In the example of an HSM VM is configured to import one or more pre existing keys and credentials from a user web service host as objects into the key store of its corresponding HSM partition in the same HSM service unit that serves the key management and crypto operations offloaded from the web service host. The HSM VM is also configured to export copy backup objects e.g. keys and other objects from the key store of its corresponding HSM partition currently serving the offloaded key management and crypto operations to a key store of another HSM partition running on the same or a different HSM HSM adapter . Here importing and exporting keys and other objects to and or from the key store of the HSM partition can be used for key backup and restore among the HSM partitions running on the same or a different HSM adapter . Once the objects are received by the key store of the other HSM partition the other HSM partition is configured to serve the key management and crypto operations offloaded from the web service host. In some embodiments the other HSM partition is configured to serve the offloaded key management and crypto operations independently or together with the current HSM partition through the same HSM VM . In some embodiments exporting the objects from the key store of the current HSM partition is made transparent to the web service host being served by the current HSM partition .

In some embodiments the HSM VM is configured to import objects e.g. keys and credentials to the key store of its corresponding HSM partition with pre assigned handlers for the objects. Such key handlers for the objects are used to identify and access the objects in the key store and are updated when the objects are moved imported and or exported from one key store to another as discussed above.

In some embodiments the HSM VM is configured to import and or export objects to and or from the key store of its corresponding HSM partition either on per object basis wherein only a subset of selected objects in the key store of the HSM partition are imported or exported or on per partition basis wherein all objects in the key store of the HSM partition are imported or exported. In some embodiments the objects in the key store are imported and or exported along with their attributes stored in the key store .

In some embodiments the HSM VM is configured to wrap encrypt the objects before they are imported to or exported from its corresponding HSM partition and to unwrap decrypt the objects after they have been imported and or exported to their destination a key store in an HSM partition or an external storage as discussed below . In some embodiments the objects keys are wrapped encrypted with FIPS approved encryption key referred to as the key backup key KBK which for a non limiting example can be a 256 bit AES key. Here the KBK is securely generated via a FIPS approved key exchange mechanism during a mutually authenticated secured communication session between the HSM VM and the user web service host as discussed above.

In some embodiments the HSM VM is configured to utilize a FIPS approved smartcard to store the KBK used to encrypt decrypt the objects in the key store and to block all un authorized access to the KBK by other VMs and or users. Keeping the KBK safe and secure is crucial since all objects keys are encrypted decrypted using the KBK. In some embodiments the smartcard is a programmable Java card loaded with one or more applets capable of running FIPS approved key exchange algorithms. As shown in the example of the smartcard communicates with the HSM HSM adapter using the certificate created by TPM as discussed above. Note that the smartcard does not need be connected to HSM appliance at all time as communication can happen over the network as well. In some embodiments the smartcard is configured to maintain multiple KBKs for different key stores and their HSM partitions on different HSMs .

In some embodiments the smartcard may further include one or more of a private key and a certificate of the user web service host. During the initialization or user creation of the HSM service unit a certificate of the user web service host is submitted and the user web service host make sure that the corresponding private key is only available on the smartcard . During a user login the HSM service unit sends a challenge data to the user which will then process the challenge using the private key stored in the smartcard and respond back to the HSM service unit . The challenge response mechanism is done in the same secured communication channel used for login as discussed above. Such mechanism enables the user web service host to pass authentication information to the HSM service unit over the network.

In some embodiments the HSM VM is configured to delete and or archive the objects from the key store of its current HSM partition after the objects have been exported from the key store . A single Application Programming Interface API provided by the HSM may be utilized to delete and or archive the objects from the key store .

In some embodiments the HSM VM is configured to export transmit the objects from the key store of its current HSM partition to the key store of the HSM partition of their destination over a network under a key communication protocol which can be but is not limited to Key Management Interoperability Protocol KMIP .

In some embodiments the HSM VM is configured to clone backup and or restore the objects from the key store of its corresponding HSM partition to and or from an external storage not shown instead of or in addition to exporting the objects to the key store of another HSM partition . Here the external storage is either locally attached to the HSM HSM adapter of the HSM partition or remotely accessible over a network. Here the external storage can be a non volatile non transient storage device which can be but is not limited to a solid state drive SSD a static random access memory SRAM a magnetic hard disk drive HDD and a flash drive. During the backup and or restore operation the HSM VM is configured to utilize methods and APIs for importing and exporting keys and objects to and or from the key store of the HSM partition as described above.

In some embodiments the HSM VM is configured to utilize a back communication channel to export transfer the objects from the key store of a primary HSM partition on a first HSM HSM adapter to a backup HSM partition on a second HSM HSM adapter and or to the external storage for cloning backup and restoring operations. Such back channel runs in parallel to the secured communication channel between the secured communication server of the HSM VM and the web service host and may utilize the same or a different network adapter . In some embodiments there can be as many a number of back channels established as HSM partitions available on HSM HSM adapter . In some embodiments when there are multiple backup HSM partitions available the network of back channels from the primary HSM partition on the first HSM to the secondary standby HSM partitions form a star like topology model where the primary HSM partition is configured to establish secured back channels for communication with each of the secondary HSM partitions to import and or export objects keys from to the secondary HSM partitions . Here the objects being exchanged over the back channels are encrypted and are never shared with other HSM partitions .

In the example of the flowchart starts at block where a plurality of types of objects for key management and crypto operations offloaded from a web service host are stored in a key store of a first HSM partition in an isolated and tamper proof environment on an HSM adapter. The flowchart continues to block where the key management and crypto operations are offloaded from the web service host to the HSM partition. The flowchart continues to block where the crypto operations offloaded from the web service host are performed using the stored objects of the web service host. The flowchart ends at block where a plurality of objects are exported from the key store of the first HSM partition to a key store of a second HSM partition wherein the second HSM partition is configured to serve the key management and crypto operations offloaded from the web service host once the objects exported from the key store of the first HSM partition are received.

In the example of the HSM managing VM is configured to utilize the HSM and their HSM partitions in the HSM HA domain to support load balancing of the crypto operations offloaded from the user web service host. In some embodiments one of the HSM partitions on an HSM in the HSM HA domain is designated as the primary HSM partition while the rest of the HSM partitions running on the HSMs in the HSM HA domain are designated as the secondary HSM partitions . During a load balancing operation the HSM managing VM is configured to monitor load information on crypto operations currently being performed among the HSM partitions running on the same HSM or on a different HSM in the HSM HA domain . In some embodiments the load information on the key management and crypto operations is monitored by and provided to the HSM managing VM either via push notifications by the HSM partitions or by polling from the HSM partitions initiated by the HSM managing VM . If the HSM managing VM determines that the primary HSM partition currently serving the offloaded crypto operations from the web service host is overloaded based on the collected load information the HSM managing VM then identifies one or more secondary HSM partitions running either on the same HSM as the primary HSM partition or on a different HSM in the HSM HA domain and distributes at least a portion of the crypto operations from the primary HSM partition to the identified secondary HSM partitions .

In some embodiments the primary HSM partition is configured to maintain information entries of the secondary HSM partitions that share its loads in the same HSM HA domain wherein such information includes but is not limited to network access details such as hostname and IP address of the secondary HSM partitions . In some embodiments the secondary HSM partitions are configured to serve the offloaded key management and crypto operations independently or together with the primary first HSM partition through the same HSM VM .

In some embodiments only the primary HSM partition is accessible by the web service host via a secured communication channel via its HSM VM . In some embodiments the key store of the primary HSM partition is solely responsible in the HSM HA domain for maintaining the objects keys for the web service host. The primary HSM partition is further configured to create and or delete objects keys in the key store . In some embodiments the primary HSM partition is configured to automatically update and synchronize its key store with the rest of the secondary HSM partitions in the HSM HA domain so that all HSM partitions in the same HSM HA domain are in sync with respect to their key stores which all have the same objects with the same key handles as well as attributes associated with the objects. In some embodiments the HSM managing VM is configured to utilize a secured key exchange mechanism to generate a shared Key Masking Key KMK to encrypt the objects keys in the key store of the primary HSM partition before they are synchronized transmitted to the secondary HSM partitions running on a different HSM HSM adapter from the primary HSM partition .

In some embodiments the HSM managing VM is configured to adjust the configuration of the HSM HA domain dynamically by adding and or removing one or more HSM partitions currently not serving the web service host to and or from the HSM HA domain . When a new HSM partition is added to the HSM HA domain the HSM managing VM designates it as a secondary HSM partition and copies the key store of the primary HSM partition to the newly added secondary HSM partition . When a secondary HSM partition is removed from the HSM HA domain the HSM managing VM also deletes information entries of the secondary HSM partition from the primary HSM partition . When a primary HSM partition is removed from the HSM HA domain the HSM managing VM first pauses all key management and crypto operations currently being performed by the primary HSM partition and downgrades the primary HSM partition to a secondary HSM partition . The HSM managing VM then designates one of the secondary HSM partitions as the new primary HSM partition and deletes the downgraded secondary HSM partition from the HSM HA domain .

In case the primary HSM partition fails the HSM managing VM is notified by its corresponding HSM VM . The HSM managing VM is configured to identify a secondary standby HSM partition as the new primary HSM partition to replace the failed primary HSM partition . The HSM managing VM then reinitiates a secured connection with the new primary HSM partition which will assume all object key operations for the web service host currently being served.

In some embodiments the HSM managing VM is configured to clone and or replicate some or all HSM partitions on one HSM  to another HSM  in the same HSM HA domain . During the replication some or all HSM partitions and their key stores are exported from HSM  and created on the HSM  as discussed above. In some embodiments objects e.g. credentials and keys of the user web service host are restored in the key stores of the HSM partitions on the HSM   wherein the HSM managing VM exports the credentials from the HSM  as one or more separate blobs and passes them to the HSM  while creating the HSM partitions on the HSM  . In some embodiments the newly created HSM partitions having the credentials are initially in a deactivated state which have to be activated by the administrator via the HSM managing VM before becoming accessible by the web service host. In some embodiments the HSM managing VM is configured to clone and or replicate the HSMs via a back channel as discussed above which authenticates the HSMs to prevent impersonation attack.

In the example of the flowchart starts at block where key management and crypto operations offloaded from a web service host are performed via one or more of a plurality of HSM partitions running on one or more HSM adapters in an HSM HA domain having a plurality of HSM adapters. The flowchart continues to block where load information on the offloaded key management and crypto operations currently being performed by the HSM partitions running on the HSM adapters in the HSM HA domain are monitored. The flowchart continues to block where one or more second HSM partitions running on the HSM adapters are identified if a first HSM partition serving the offloaded key management and crypto operations is determined to be overloaded based on the load information. The flowchart ends at block where at least a portion of the offloaded key management and crypto operations are distributed from the first HSM partition to the second HSM partitions.

The methods and system described herein may be at least partially embodied in the form of computer implemented processes and apparatus for practicing those processes. The disclosed methods may also be at least partially embodied in the form of tangible non transitory machine readable storage media encoded with computer program code. The media may include for example RAMs ROMs CD ROMs DVD ROMs BD ROMs hard disk drives flash memories or any other non transitory machine readable storage medium wherein when the computer program code is loaded into and executed by a computer the computer becomes an apparatus for practicing the method. The methods may also be at least partially embodied in the form of a computer into which computer program code is loaded and or executed such that the computer becomes a special purpose computer for practicing the methods. When implemented on a general purpose processor the computer program code segments configure the processor to create specific logic circuits. The methods may alternatively be at least partially embodied in a digital signal processor formed of application specific integrated circuits for performing the methods.

The foregoing description of various embodiments of the claimed subject matter has been provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the claimed subject matter to the precise forms disclosed. Many modifications and variations will be apparent to the practitioner skilled in the art. Embodiments were chosen and described in order to best describe the principles of the invention and its practical application thereby enabling others skilled in the relevant art to understand the claimed subject matter the various embodiments and with various modifications that are suited to the particular use contemplated.

