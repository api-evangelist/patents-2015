---

title: Context aware microsegmentation
abstract: Context aware microservice networks and contextual security policies for microservice networks are provided herein. In some embodiments, a system includes a plurality of microservices, each of the plurality of microservices having a plurality of distributed microservice components. At least a portion of the distributed microservice components execute on different physical or virtual servers in a data center or a cloud. The system also includes a plurality of logical security boundaries, with each of the plurality of logical security boundaries being created by a plurality of enforcement points positioned in association with the plurality of distributed microservice components. Each of plurality of microservices is bounded by one of the plurality of logical security boundaries.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09467476&OS=09467476&RS=09467476
owner: vArmour Networks, Inc.
number: 09467476
owner_city: Mountain View
owner_country: US
publication_date: 20150828
---
This application is related to U.S. patent application Ser. No. 14 657 282 filed Mar. 13 2015 U.S. patent application Ser. No. 14 673 679 filed Mar. 30 2015 and U.S. patent application Ser. No. 14 839 699 filed Aug. 28 2015 which are all hereby incorporated by reference herein in their entirety including all references and appendices cited therein.

The present technology is directed to cloud computing security and more specifically but not by limitation to systems and methods for providing a microsegmented network that applies and enforces context aware security policies.

According to some embodiments the present technology is directed to a context aware microsegmented network including a an enforcement point creating a logical security boundary around virtual machines providing one or more microservices the enforcement point configured to i select one or more contextual security policies based upon attributes of the virtual machines and ii apply the one or more contextual security policies to control network traffic of the virtual machines within the logical security boundary each according to their attributes and b a central enforcement controller that 1 detects or determines a packet forwarding path for the enforcement point 2 has the information of the location of the enforcement point and security postures attributes of the enforcement point 3 selects a security policy for the network traffic based on the attributes wherein the attributes define a context of the network traffic and 4 applies the selected contextual security policies to network traffic received by at least one of the location of the enforcement point or the packet forwarding path.

According to some embodiments the present technology is directed to a method including a selecting one or more contextual security policies based upon attributes of virtual machines within one or more data centers b applying the one or more contextual security policies to control network traffic of the virtual machines within the logical security boundary each according to their attributes c detecting attributes of network traffic of the one or more data centers d selecting a security policy for the network traffic based on the attributes wherein the attributes define a context of the network traffic and e applying the selected contextual security policies to network traffic received by at least one of the location of the enforcement point or the packet forwarding path.

According to some embodiments the present technology is directed to a method including a providing a data center that services workloads of clients using virtual machines that provide microservices wherein at least a portion of the microservices are microsegmented by creating logical security boundaries around at least a portion of the microservices and b applying at least one contextual security policy for the data center or the virtual machines based on any of a packet forwarding path client location virtual machine location Internet service provider reputation or location network trust level and combinations thereof.

The present technology is directed to providing security within distributed microservices. The present technology creates secure virtual boundaries around microservices. In some embodiments the present technology provides context aware networks that provide context based security through enforcement points that control logical security boundaries. The logical security boundaries encompass microservices provided by physical or virtual machines and the logical security boundaries can extend across microservices that are distributed in data centers in various locations. Thus the virtual machines need not be collocated.

In one embodiment the present technology involves a datacenter which can be implemented within a cloud. The datacenter includes physical resources such as servers that provide virtual machines. The virtual machines can provide microservice components such as web services application services database services and so forth. In some embodiments the servers are physically separate from one another within the datacenter.

A microservice is a combination of microservice components selected to facilitate the microservice. An example microservice includes but is not limited to a game an e commerce application a media service and so forth. Because the servers providing the microservice components can be distributed in different physical locations the microservice is itself distributed because its microservice components may not reside on the same physical server. To be sure the present technology can manage enforcement points on multiple servers as a single logical system. Enforcement points are described in related U.S. patent application Ser. No. 14 673 679 filed Mar. 30 2015 which is hereby incorporated by reference in its entirety.

In the present technology the servers and virtual machines are controlled with a host server that coordinates the operations of the distributed microservice components to provide the microservice. The host server includes a director module that manages sessions and settings of the distributed microservice components.

The director module can also instantiate e.g. spin up a plurality of enforcement points that are configured to create a secure virtual boundary around a set of distributed microservice components for a microservice.

The enforcement points can intercept and measure traffic at locations within the secure virtual boundary such as traffic entering and exiting the distributed microservice components.

In some embodiments the director module distributes a security policy such as a firewall policy to the enforcement points which protect each of the distributed microservice components. The director module can also receive traffic information from the enforcement points and determine network traffic profiles and malicious attacks that are occurring on or within the secure virtual boundary.

Advantageously the present technology provides a distributed microservice system where distributed enforcement points are placed in communication with enterprise assets such as microservice components. The enforcement points are configured to correlate information to understand the traffic flows within the secure virtual boundary.

The enforcement points provide a stateful solution by operating as security policy enforcement devices that use stateful inspection engines for analyzing network traffic.

In another advantage the present technology provides for real time detection and visualization of threat movement attack remediation and exfiltration prevention as well as microsegmentation and policy enforcement control.

As mentioned above the present technology provides a data center security solution that protects enterprise data whether on cloud or on premise with a single logical security system.

The data center security of the present technology delivers a consistent layer of visibility and control across virtual cloud and physical applications. Using the present technology enterprises can understand the progression of an attack and trace its lineage to a Patient Zero a point of entry of an attacker or the first infected computer . Using the present technology enterprises have immediate insight into their data center risk profile and are able to adjust security measures without changing existing policies or Information Technology IT infrastructures.

Referring now to a schematic diagram of a data center providing secure microservices that are secured using the present technology is illustrated. In some embodiments the data center is generally described as a cloud based computing environment that facilitates services such as enterprise services. It will be understood that the data center can be utilized to provide any type of service such as gaming services email services e commerce services Domain Name System DNS services web hosting services and so forth.

In general a cloud based computing environment is a resource that typically combines the computational power of a large grouping of processors and or an environment that combines the storage capacity of a large grouping of computer memories or storage devices. For example systems that provide a cloud resource may be utilized exclusively by their owners or such systems may be accessible to outside users who deploy applications within the computing infrastructure to obtain the benefit of large computational or storage resources.

The cloud may be formed for example by a network of web servers such as web servers with each web server or at least a plurality thereof providing processor and or storage resources. These servers may manage workloads servicing multiple users e.g. cloud resource customers or other users . Typically each user places workload demands upon the cloud that vary in real time sometimes dramatically. The nature and extent of these variations typically depend on the type of business associated with the user.

The data center is configured to provide microservices to tenants. A microservice will be understood to include a software application e.g. service that is comprised of a plurality of independently deployable services referred to herein as microservice components. In some embodiments the data center comprises a plurality of physical servers sometimes referred to as racks or blades such as a first server a second server and a third server .

In one embodiment the first server provides web service microservices that provide a standardized means for integrating web applications using various open standards such as JavaScript Object Notation JSON Representational State Transfer REST and so forth. As illustrated the first server comprises a plurality of web service microservice components such as a first web service a second web service and a third web service . Again the first server can comprise additional or fewer web service microservice components than those illustrated. Also the type of web service provided by each of the microservice components can be identical or different. For example the web service microservice components can all provide Simple Object Access Protocol SOAP services while in another embodiment each of the web service microservice components can provide a unique web service.

The second server comprises a plurality of application microservice components such as the first application App the second application and the third application . Again the second server can comprise additional or fewer application microservice components than those illustrated. Also the type of application provided by each of the microservice components can be identical or different. The applications provided by the application microservice components can be identical or different from one another.

The third server comprises a plurality of database microservice components such as the first database the second database and the third database . Again the third server can comprise additional or fewer database microservice components than those illustrated. Also the type of database provided by each of the microservice components can be identical or different. The databases provided by the database microservice components can be identical or different from one another.

The data center also comprises a server host that can be located away from the servers so as to reduce the likelihood that the host server will be infected with malware or subject to a malicious attack if any of the servers or their microservice components are attacked. The server host can be a physical server. The server host can comprise a director module . The director module can comprise executable instructions that are stored in a non transitory computer readable medium such as memory of the server host . The director module can be executed by a processor of the server host to provide functionalities ascribed to the director module which are described in greater detail below.

As used herein the term module may also refer to any of an application specific integrated circuit ASIC an electronic circuit a processor shared dedicated or group that executes one or more software or firmware programs a combinational logic circuit and or other suitable components that provide the described functionality.

The servers each provide a microservice type. For example the microservice type for the first server comprises web services while a microservice type of the second server is applications and the microservice type of the third server is database related.

In some embodiments the data center can comprise additional or fewer servers than those illustrated. Also the microservices of some of the servers for example servers and can be combined onto a single physical server but facilitated by a virtual machine. Thus the web service microservice components can be executed using a first virtual machine while the application microservice components can be executed on a second virtual machine. Indeed the first and second virtual machines can be managed on the same physical server such as the first or second servers and respectively.

In some embodiments the data center comprises a network that communicatively couples the servers and server host . Suitable networks may include or interface with any one or more of for instance a local intranet a Personal Area Network PAN a Local Area Network LAN a Wide Area Network WAN a Metropolitan Area Network MAN a virtual private network VPN a storage area network SAN a frame relay connection an Advanced Intelligent Network AIN connection a synchronous optical network SONET connection a digital T1 T3 E1 or E3 line Digital Data Service DDS connection Digital Subscriber Line DSL connection an Ethernet connection an Integrated Services Digital Network ISDN line a dial up port such as a V.90 V.34 or V.34bis analog modem connection a cable modem an Asynchronous Transfer Mode ATM connection or a Fiber Distributed Data Interface FDDI or Copper Distributed Data Interface CDDI connection. Furthermore communications may also include links to any of a variety of wireless networks including Wireless Application Protocol WAP General Packet Radio Service GPRS Global System for Mobile Communication GSM Code Division Multiple Access CDMA or Time Division Multiple Access TDMA cellular phone networks Global Positioning System GPS Cellular Digital Packet Data CDPD Research in Motion Limited RIM duplex paging network Bluetooth radio or an IEEE 802.11 based radio frequency network.

The network can further include or interface with any one or more of an RS 232 serial connection an IEEE 1394 Firewire connection a Fiber Channel connection an IrDA infrared port a SCSI Small Computer Systems Interface connection a USB Universal Serial Bus connection or other wired or wireless digital or analog interface or connection mesh or Digi networking.

In some embodiments individual microservice components from an individual server can be used to facilitate a microservice. For example a first microservice comprises a game service. The first microservice comprises the second web service the second application and the second database . To be sure these selected microservice components are needed to facilitate the game service.

In various exemplary embodiments a second microservice comprises an e commerce service. The second microservice comprises the third web service the third application and the third database . To be sure these selected microservice components are needed to facilitate the e commerce service.

In sum the data center is configured to provide a plurality of microservices where each microservice is comprised of a plurality of microservice components.

Cooperative communication between microservice components allows the data center to provide the microservice to a tenant or end user. For example the second web service the second application and the second database are all communicatively coupled with one another using the network .

As mentioned above the servers that host these microservice components can be positioned remotely from one another. Thus the microservice components need not be collocated in the same physical server. This physical separation of servers results in physical separation of microservice components for a microservice.

The present technology can provide security policies such as firewall policies that protect these distributed microservices. Rather than directing network traffic to a static firewall or other static appliance the data center can employ the use of enforcement points such as enforcement points that are disposed within the network communications path of the microservice components of a microservice.

In general an enforcement point is a virtual or physical module that operates as a security policy enforcement device that uses stateful inspection engines for analyzing network traffic within a secure virtual e.g. logical boundary.

An enforcement point can be spun up or initiated when a microservice is requested by a tenant or user of the data center . For example if an end user desires to use the first microservice e.g. a game microservice the user will request use of the first microservice through the server host . The server host will determine which microservice components are needed in this case the second web service the second application and the second database and will deploy a plurality of enforcement points for the microservice components.

In one embodiment the data center includes a first enforcement point a second enforcement point and a third enforcement point . The first enforcement point is deployed for the first server and the second web service . The second enforcement point is deployed for the second server and the second application while the third enforcement point is deployed for the third server and the second database . Again the deployment of the enforcement points is controlled by the director module of the server host .

Each of the enforcement points can be placed in network communication with their respective microservice component to intercept and analyze network traffic. In some embodiments each of the enforcement points analyzes microservice component network traffic by decoding higher level protocols that create the data stream in software at line rate with an acceptable computational cost.

The enforcement points can be deployed near an asset such as a server or microservice component to examine precisely the internal and external traffic into that asset which may be indicative of malicious attacks or from that asset indications of infection and internal attacks and can also be used to provide very granular control e.g. pass only specific traffic . In some embodiments the enforcement points comprise logical entities and operate in a global context the enforcement points can migrate when an asset such as a microservice component migrates e.g. in a virtual environment .

Referring now to an example enforcement point is illustrated. The enforcement point includes the first enforcement point . The first enforcement point comprises a stateful traffic inspection engine s that can be used for traffic inspection and or network traffic control based on security policies received from the director module .

Referring now to which illustrates the distributed nature of the microservice components of . Again the microservice components required for a particular microservice may be distributed amongst many servers located proximately from one another.

The enforcement points can create a logical or virtual security boundary around the microservice components for a microservice. In one example the enforcement points can create a first virtual security boundary around the first microservice e.g. a game microservice and specifically the microservice components of the first microservice the second web service the second application and the second database . In another example the enforcement points can create a second virtual security boundary around the second microservice e.g. an e commerce service and specifically the microservice components of the second microservice the third web service the third application and the third database .

While conceptually illustrates the microservice components for a particular microservice as being aligned illustrates a distributed data center where the microservice components for a particular microservice are not strictly aligned. This again is due to the microservice components residing on servers that are distributed throughout the data center . Thus the virtual security boundary created by the enforcement points can traverse a meandering path that encloses each of the microservices.

As mentioned above a set of enforcement points such as enforcement points can be used to create a plurality of virtual security boundaries. In other embodiments a set of enforcement points can be deployed for each microservice. The use of virtual security boundaries also allows for microservices to be logically separated from one another for security purposes.

In the first enforcement point is positioned in association with microservice components the second web service and the third web service . The first enforcement point is positioned into the security boundaries of both the first virtual security boundary and the second virtual security boundary . Likewise the second and third enforcement points and are each positioned into the security boundaries of both the first virtual security boundary and the second virtual security boundary .

According to some embodiments the director module is configured to manage sessions and settings of the distributed microservice components. For example the director module specifies what microservice components are required for a microservice when each of the microservice components should be initiated and or deactivated and so forth. The director module also determines if additional microservice components should be initiated during microservice use. For example in a gaming microservice the director module may increase processing capacity for an application microservice component by initiating one or more additional application microservice component s . The director module can deploy additional enforcement points if needed to enlarge the virtual security boundary. This type of dynamic virtual security boundary management ensures that the one or more additional application microservice component s are protected through inclusion into the virtual security boundary of the gaming microservice. A similar but inverse process can be performed by the director module when microservice components are deactivated.

Also the director module can track migration of the microservice components and re deploy the enforcement points. For example if the first server is taken offline or is no longer functioning the data center may have backup servers that provide the same microservice as the first server . When this backup server comes online the web service microservice is migrated over to the backup server and the virtual boundary is reconfigured or the enforcement point is re deployed. This re deployment of the enforcement point or reconfiguration of security policy of the enforcement point causes a reconfiguration of the virtual security boundary.

In some embodiments the director module is configured to implement and distribute security policies for microservices. The security policy may be in accordance with a security profile for a microservice. The security profile can define what types of network traffic anomalies indicate possible malware issues. These traffic anomalies can involve comparisons of network traffic volume over a period of time network traffic volume at a given period of time network traffic volume compared to application usage network traffic input volume versus network traffic output volume and other similar traffic anomalies.

The director module can selectively control and isolate the network traffic entering and or exiting any of the microservice components of a microservice due to the presence of enforcement points with each microservice component. For example if the network traffic is determined to be anomalous at the second web service the director module can cause the first enforcement point to throttle network traffic into or out of the second web service .

Advantageously the director module can isolate or quarantine a microservice component that appears to be or actually is infected with malware or is being subjected to malware attack by providing commands to the enforcement point associated with the microservice component.

Referring now to a method for providing a logical security boundary for microservices is illustrated. In some embodiments the method comprises locating a plurality of distributed microservice components that belong to a microservice. In one embodiment at least a portion of the plurality of distributed microservice components are located on different physical servers in a cloud. In other embodiments the plurality of distributed microservice components are collocated on the same server. For example the director module can be used to determine the location of each distributed microservice component that is used to facilitate a microservice such as an e commerce application e.g. second microservice .

Next the method further includes distributing a plurality of logical enforcement points around the plurality of distributed microservice components that belong to the microservice. For example the director module can spin up one or more virtual enforcement points e.g. virtual security appliances for each distributed microservice component. In some embodiments virtual enforcement points are positioned both upstream and downstream of each distributed microservice component.

Next the method comprises forming a logical security boundary from the plurality of logical enforcement points. That is the virtual enforcement points are communicatively coupled to form a logical security boundary that includes the distributed microservice components.

In some embodiments the method comprises intercepting by the plurality of logical enforcement points traffic entering or exiting each of the plurality of distributed microservice components. The method also includes detecting malicious behavior by inspection of the traffic.

In some embodiments the method includes quarantining any of the distributed microservice components that are found to have anomalous traffic during the inspection process.

Referring now to which illustrates another example method for implementing a security policy in a distributed manner. To be sure the method of can be implemented after deployment of enforcement points throughout a microservice to create a logical security boundary.

In some embodiments the method includes implementing a security profile for the microservice that includes monitoring traffic within the logical security boundary using the plurality of logical enforcement points.

Next the method includes comparing the measured traffic to traffic rules included in the security profile. This comparison process can occur at the enforcement point or at the director module.

Next the method also comprises providing an alert if the traffic within the logical security boundary is indicative of a malicious attack. In some embodiments the director module can output a message to a system administrator such as an email or short message service SMS message that indicates that a violation of the security profile has occurred.

In some embodiments the method comprises generating and displaying a visual representation of the traffic within the logical security boundary.

The example computer system includes a processor or multiple processors e.g. a central processing unit CPU a graphics processing unit GPU or both and a main memory and static memory which communicate with each other via a bus . The computer system may further include a video display e.g. a liquid crystal display LCD . The computer system may also include an alpha numeric input device s e.g. a keyboard a cursor control device e.g. a mouse a voice recognition or biometric verification unit not shown a drive unit also referred to as disk drive unit a signal generation device e.g. a speaker and a network interface device . The computer system may further include a data encryption module not shown to encrypt data.

The drive unit includes a computer or machine readable medium on which is stored one or more sets of instructions and data structures e.g. instructions embodying or utilizing any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory and or within the processors during execution thereof by the computer system . The main memory and the processors may also constitute machine readable media.

The instructions may further be transmitted or received over a network via the network interface device utilizing any one of a number of well known transfer protocols e.g. Hyper Text Transfer Protocol HTTP . While the machine readable medium is shown in an example embodiment to be a single medium the term computer readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term computer readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that causes the machine to perform any one or more of the methodologies of the present application or that is capable of storing encoding or carrying data structures utilized by or associated with such a set of instructions. The term computer readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals. Such media may also include without limitation hard disks floppy disks flash memory cards digital video disks random access memory RAM read only memory ROM and the like. The example embodiments described herein may be implemented in an operating environment comprising software installed on a computer in hardware or in a combination of software and hardware.

Not all components of the computer system are required and thus portions of the computer system can be removed if not needed such as Input Output I O devices e.g. input device s . One skilled in the art will recognize that the Internet service may be configured to provide Internet access to one or more computing devices that are coupled to the Internet service and that the computing devices may include one or more processors buses memory devices display devices input output devices and the like. Furthermore those skilled in the art may appreciate that the Internet service may be coupled to one or more databases repositories servers and the like which may be utilized in order to implement any of the embodiments of the disclosure as described herein.

According to some embodiments the present technology can include context aware networks that provide security policies that are contextual. These contextual security policies can be applied advantageously when clients networks virtual machines and or microservices e.g. workloads require a plurality of different security policies.

As discussed above microsegmentation is a technology that defines logical security boundary across physical virtual and agent based workload deployments. The policy of defining the security boundary is used to enforce communication security between any two workloads even the workloads are distributed to two virtual machines on the same hypervisor.

However traditional microsegmentation policies focus on the protected workload without considering the context of the workload deployment and communication.

The present technology extends a micro security policy for these microservices to include context information in the security policy. Adding contextual information such as but not limited to location of workloads network connection attributes of incoming interfaces Internet service providers and so forth to the security policies enhance the security within a microsegmented data center.

As an example the security policy of any given workload could be different from other workloads in the data center. The differences in the security policies can result from a different security mechanism used for enforcement such as workload in private data center versus a public cloud . In another example differences in the security policies can result from different governing laws such as workloads in the United States vs. Canada vs. Europe for the data center the client or both the client and data center.

Also network connections to the data center may originate from a plurality of different network interfaces which each can exist in different security zones with different security requirements. These differences require different security policies to enforce microsegmentation in some embodiments. For example one security zone could include a government agency while another security zone includes public network access points. In another example a security zone could include a corporate data center.

The network comprises a first data center that is disposed at a first geographical location such as a data center in Europe. A second data center is positioned in a second geographic location such as the United States. More specifically the second data center can include virtual machines in many locations such virtual machines and in Washington D.C. a virtual machine in California and a virtual machine in Virginia.

A client can access the first data center and or the second data center through an Internet Service Provider ISP . In some embodiments the client or other computing systems can attempt to access the first and or second data centers through a public network such as an Internet . In one embodiment the second data center provides a first internet connection that communicatively couples with the ISP on a first packeting forwarding path. The second data center provides a second internet connection that communicatively couples with a public network e.g. the Internet on a second packet forwarding path or the same packet forwarding path as used by the ISP .

In another example the second internet connection is utilized to intercept network traffic from public networks such as the Internet . By virtue of the public nature of the Internet a central enforcement controller can apply a contextual security policy where client attributes are evaluated. For example the central enforcement controller can inspect the network packets to determine attributes of the client which could include information gathered about the client device itself or information about an end user of the client from web browser information or other similar contextual data.

Also while the first internet connection and the second internet connection are illustrated in it will be understood that the second data center can comprise additional internet connections that provide communication packeting forwarding paths that allow third party access to the second data center .

In some embodiments the central enforcement controller can apply security policies for network connection based on a protocol or packet forwarding path used by the client . For example if the client attempts to contact the first internet connection on packet forwarding path and the client resides in a country that is on a safe list the central enforcement controller allows all network traffic from the client . In another embodiment any traffic transmitted on packet forwarding path is allowable while all other traffic on other packet forwarding paths is rejected by the connection. Thus the context in this instance is packet forwarding path specific. A hierarchical context policy further requires the traffic to originate from a safe ISP or from a safe location even if it was transmitted on packet forwarding path . In one example an unsafe or untrusted location could include a public cloud such as the public cloud A of the first data center .

Rather than denying the traffic on packet forwarding path from a location that is not on the safe location list the central enforcement controller can subject the network traffic to intrusion prevention IP scanning. If the traffic from the location passes the IP scanning the client can be permitted to communicate with the data center.

In one embodiment the virtual machines and are placed within a virtual boundary A that is controlled by enforcement point A. An enforcement point B controls the security policies for the virtual machines and within a virtual boundary B. The virtual boundaries and enforcement points are described in greater detail above. Also it is noteworthy to mention that each of the virtual machines can provide a plurality of microservices. The virtual boundaries can extend between individual microservices offered by a plurality of virtual machines. A virtual boundary can be referred to as a logical security boundary.

As illustrated in and the microservices can be distributed throughout many different physical or virtual machines.

In some embodiments the central enforcement controller is provided to enforce contextual security policies at various internet connections of the second data center such as the first internet connection and the second internet connection . To be sure each of these interfaces can be associated with a unique or contextual security policy. For example the central enforcement controller maintains a list of contextual security policies for various ISPs. These security policies are contextual because they can be based on security or safety attributes of the various ISPs. The client can attempt to access microservices on the first data center and or the second data center through the ISP . The central enforcement controller can inspect attributes of the ISP such as location blacklists whitelists reputation databases and so forth. These attributes are compared against a database of ISP specific contextual security policies which are applied to ISP coupling connections of the data center.

If the context of the ISP determines that the ISP handles traffic originating from an area of known cyber security issues the central enforcement controller can refuse all traffic from the ISP . Conversely if the ISP has traffic originating from secure or safe locations the central enforcement controller can allow all traffic from the ISP . By way of example the central enforcement controller can function similarly to the first enforcement point illustrated in and described above which utilizes a stateful traffic inspection engine s to process network traffic although it is important to note that the central enforcement controller applies context based security policies using for example attributes of network traffic rather than a context less security policy. Also as mentioned in the embodiments above in enforcement points can be configured to intercept network traffic within their respective logical security boundaries and or within the virtual machines and or microservices components thereof. The enforcement points A and B can likewise use components of the enforcement points of while incorporating the aspects of context aware security policy selection and context based security policy application to microservices components or virtual machines within their logical security boundary.

In one embodiment the enforcement point A can apply a contextual security policy for the virtual machines and which are all located in the United States whereas the enforcement point B can apply a different contextual security policy for virtual machines and . The contextual security policy applied by the enforcement point B requires a different security policy to be applied to the virtual machine because it resides in Europe. As an example European countries have different data privacy policies compared to the United States. Thus the enforcement point B applies a contextual security policy for the virtual machine that is based on European Union regulations on data privacy. The enforcement point B applies a contextual security policy for the virtual machines and which is based on United States privacy laws.

The contextual security policy can be set at various levels of granularity relative to location. For example a contextual security policy can be established to allow all traffic on a packet forwarding path originating from California whereas only network traffic transmitted on another packet forwarding path is allowed if the network traffic originates in Virginia.

In some embodiments the virtual machine can implement a database service for storing the contextual security policies used by the central enforcement controller the enforcement point A and the enforcement point B.

In some embodiments the method includes creating a logical security boundary around the virtual machines providing one or more microservices. For example an enforcement point can be instantiated to create the logical security boundary around various virtual machines or in some embodiments microservices of the virtual machines.

Once the logical security boundary has been established the method includes selecting one or more contextual security policies based upon attributes of virtual machines within one or more data centers. For example the attributes of the virtual machines could include a location a workload type or sensitivity e.g. the workload involves protected or secure information and so forth.

The enforcement point can evaluate the attributes of the virtual machines and select an appropriate context based security policy that corresponds to a context for the virtual machines.

By way of example one of the virtual machines within the logical security boundary is subject to different local security requirements such that an enforcement point applies a first contextual security policy to one or more of the virtual machines while the enforcement point applies a second contextual security policy to different virtual machines. The first contextual security policy and the second contextual security policy are selected based on the attributes of the virtual machines.

Next the method includes applying the one or more contextual security policies to control network traffic of the virtual machines within the logical security boundary each according to their attributes. The step of applying could include for example applying data retention or destruction policies to the data generated by the virtual machines based on a privacy policy selected for the virtual machines based upon their respective locations. For example a data retention or destruction policies for a virtual machine in Europe may differ from the data retention or destruction policies for a virtual machine operating in Canada. To be sure this is merely an example of context aware security policies for microsegmented networks and should not be viewed as limiting.

The method can also optionally apply context based security policies to network traffic that enters and exits the data center. In other embodiments the data center only comprises contextual security policies for logical security boundaries and network traffic into and out of the data center is controlled by other security means.

The following steps are executed when applying context based security policies to network traffic of a data center. Thus in some embodiments the method comprises detecting attributes of network traffic of the one or more data centers. For example a central enforcement controller can be configured to determine attributes such as packet forwarding path number packet size client location ISP reputation network trust level e.g. public or private network LAN WAN cloud and so forth as well as other attributes that are similar and or combinations thereof.

The method also includes selecting a security policy for the network traffic based on the attributes. To be sure the attributes define a context of the network traffic. Next the method includes applying the selected contextual security policies to network traffic received by the one or more network packet forwarding paths.

In some embodiments the method includes rejecting traffic that fails to comply with the context based security policy and optionally subjecting the network traffic to intrusion prevention scanning.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present technology has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the present technology in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the present technology. Exemplary embodiments were chosen and described in order to best explain the principles of the present technology and its practical application and to enable others of ordinary skill in the art to understand the present technology for various embodiments with various modifications as are suited to the particular use contemplated.

Aspects of the present technology are described above with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the present technology. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present technology. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

In the following description for purposes of explanation and not limitation specific details are set forth such as particular embodiments procedures techniques etc. in order to provide a thorough understanding of the present invention. However it will be apparent to one skilled in the art that the present invention may be practiced in other embodiments that depart from these specific details.

Reference throughout this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus the appearances of the phrases in one embodiment or in an embodiment or according to one embodiment or other phrases having similar import at various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments. Furthermore depending on the context of discussion herein a singular term may include its plural forms and a plural term may include its singular form. Similarly a hyphenated term e.g. on demand may be occasionally interchangeably used with its non hyphenated version e.g. on demand a capitalized entry e.g. Software may be interchangeably used with its non capitalized version e.g. software a plural term may be indicated with or without an apostrophe e.g. PE s or PEs and an italicized term e.g. N 1 may be interchangeably used with its non italicized version e.g. N 1 . Such occasional interchangeable uses shall not be considered inconsistent with each other.

Also some embodiments may be described in terms of means for performing a task or set of tasks. It will be understood that a means for may be expressed herein in terms of a structure such as a processor a memory an I O device such as a camera or combinations thereof. Alternatively the means for may include an algorithm that is descriptive of a function or method step while in yet other embodiments the means for is expressed in terms of a mathematical formula prose or as a flow chart or signal diagram.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

If any disclosures are incorporated herein by reference and such incorporated disclosures conflict in part and or in whole with the present disclosure then to the extent of conflict and or broader disclosure and or broader definition of terms the present disclosure controls. If such incorporated disclosures conflict in part and or in whole with one another then to the extent of conflict the later dated disclosure controls.

The terminology used herein can imply direct or indirect full or partial temporary or permanent immediate or delayed synchronous or asynchronous action or inaction. For example when an element is referred to as being on connected or coupled to another element then the element can be directly on connected or coupled to the other element and or intervening elements may be present including indirect and or direct variants. In contrast when an element is referred to as being directly connected or directly coupled to another element there are no intervening elements present. The description herein is illustrative and not restrictive. Many variations of the technology will become apparent to those of skill in the art upon review of this disclosure. For example the technology is not limited to use for stopping email threats but applies to any messaging threats including email social media instant messaging and chat.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. The descriptions are not intended to limit the scope of the invention to the particular forms set forth herein. To the contrary the present descriptions are intended to cover such alternatives modifications and equivalents as may be included within the spirit and scope of the invention as defined by the appended claims and otherwise appreciated by one of ordinary skill in the art. Thus the breadth and scope of a preferred embodiment should not be limited by any of the above described exemplary embodiments.

