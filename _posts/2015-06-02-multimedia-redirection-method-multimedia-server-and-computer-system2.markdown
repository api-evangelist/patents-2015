---

title: Multimedia redirection method, multimedia server, and computer system
abstract: A multimedia redirection method, a multimedia server, and a computer system. The method includes: receiving a virtual-desktop login request of a user, where the virtual-desktop login request includes an identifier of the user; acquiring, according to the identifier of the user, metadata of a multimedia instance that is not shut down by the user before a last disconnection, where the metadata includes path information of a multimedia file corresponding to the multimedia instance; and sending the metadata to a client of the user so that the client acquires, according to the metadata, multimedia data corresponding to the metadata and plays the multimedia data. The adoption of technical solutions of the present invention can implement that multimedia that is not closed before a last disconnection may be automatically played when a user logs in again, thereby improving experience of multimedia application of the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09621665&OS=09621665&RS=09621665
owner: Huawei Technologies Co., Ltd.
number: 09621665
owner_city: Shenzhen
owner_country: CN
publication_date: 20150602
---
This application is a continuation of International Application No. PCT CN2012 086117 filed on Dec. 7 2012 which is hereby incorporated by reference in its entirety.

The present invention relates to the computer field and in particular to a multimedia redirection method and a multimedia server.

With the development of computer technologies and network popularization remote desktop technologies have found increasingly wide application in current enterprise office environments. In the remote desktop technologies specifically content displayed on a computer screen is transferred through a network to another remote display in the network for displaying. For example a Microsoft Windows system provides a remote login program mstsc.exe which is a common remote desktop program.

With the rapid development of cloud computing technologies and the popularization of the application of the cloud computing technologies the cloud computing technologies bring new development opportunities for application of a remote desktop. People increasingly apply remote desktop technologies to virtual machines in a cloud computing system in this way people can separately apply to local clients applications on virtual machines by means of the remote desktop technologies thereby implementing full application of the cloud computing system.

For network application in the remote desktop technologies an end where a user is located is marked as a client and an end which may be but is not limited to a virtual machine where each application program is practically located is a server configured to provide a service for the user. Each client applies an application on each server by applying a virtual remote desktop technology as conveniently as a user applies a program on a local client so that user experience is significantly improved.

With the development of the remote desktop technologies and the increase of multimedia application demands of people the remote desktop technologies are not only limited to remote screen displaying and further include remote sound transfer and the like.

In a practical application in a network server and network bandwidth resources are limited. If the CPU usage of a server is excessively high the server easily becomes busy in which case the server responds to an application of each client at an excessively low speed or even the server may crash because of excessive applications affecting use experience of a user. In addition if the server sends an excessively large amount of network data to each client network congestion also occurs easily. Data processing of multimedia information for example conventional multimedia data and flash multimedia data and multimedia network transmission occupy major resources central processing unit CPU and network resources .

A multimedia redirection technology is a network application technology mainly for solving technical problems such as a CPU overload of a server and an excessive amount of network data. In the redirection technology a client mainly sends a data stream of an original undecoded media file whose data packet is much less than that of decoded data to a client by using a virtual remote desktop technology and decoding or data processing of stream media before playing and playing are performed at the client rather than at a server end thereby significantly reducing CPU usage of a server and occupation of network bandwidth.

Flash is a specific type of multimedia data flash redirection thereof is specifically that when a browser at a server end plays flash content a server captures the flash content sends a data stream corresponding to the captured flash content to a client and redirects the data stream to the client so that rendering of the flash content is performed in a window of the client instead of at the server end thereby reducing CPU usage of the server end and occupation of network bandwidth.

By using flash redirection as an example in a processing manner of flash redirection in the prior art after a user logs in to a server by means of a network by using a remote desktop technology opens a browser on the server and opens a web page having flash multimedia content the server triggers a flash redirection process according to the opening of the browser. Flash redirection processing is implemented so that the user implements flash playing on a client.

By using flash redirection as an example in an existing flash redirection technology when a client logs in to a virtual desktop again to use a virtual desktop service after a last disconnection if a multimedia instance that is not shut down exists before the last disconnection non flash content such as a blank or a black screen is presented in a window of the client causing loss of flash content resulting in great inconvenience to application performed by a user and affecting practical application performed by the user.

A first objective of embodiments of the present invention is to provide a multimedia redirection method. The application of this technical solution can implement that multimedia that is not closed before a last disconnection may be automatically played when a user logs in again thereby improving experience of multimedia application of the user.

A second objective of the embodiments of the present invention is to provide a multimedia redirection method. The application of this technical solution can implement that multimedia that is not closed before a last disconnection may be automatically played when a user logs in again thereby improving experience of multimedia application of the user.

A third objective of the embodiments of the present invention is to provide a multimedia server. The application of this technical solution can implement that multimedia that is not closed before a last disconnection may be automatically played when a user logs in again thereby improving experience of multimedia application of the user.

A fourth objective of the embodiments of the present invention is to provide a multimedia server. The application of this technical solution can implement that multimedia that is not closed before a last disconnection may be automatically played when a user logs in again thereby improving experience of multimedia application of the user.

A fifth objective of the embodiments of the present invention is to provide a multimedia server. The application of this technical solution can implement that multimedia that is not closed before a last disconnection may be automatically played when a user logs in again thereby improving experience of multimedia application of the user.

A sixth objective of the embodiments of the present invention is to provide a multimedia server. The application of this technical solution can implement that multimedia that is not closed before a last disconnection may be automatically played when a user logs in again thereby improving experience of multimedia application of the user.

A seventh objective of the embodiments of the present invention is to provide a computer system. The application of this technical solution can implement that multimedia that is not closed before a last disconnection may be automatically played when a user logs in again thereby improving experience of multimedia application of the user.

An eighth objective of the embodiments of the present invention is to provide a computer system. The application of this technical solution can implement that multimedia that is not closed before a last disconnection may be automatically played when a user logs in again thereby improving experience of multimedia application of the user.

According to a first aspect an embodiment of the present invention provides a multimedia redirection method including receiving a virtual desktop login request of a user where the virtual desktop login request includes an identifier of the user acquiring according to the identifier of the user metadata of a multimedia instance that is not shut down by the user before a last disconnection where the metadata at least includes path information of a multimedia file corresponding to the multimedia instance and sending the metadata to a client of the user so that the client acquires according to the metadata multimedia data corresponding to the metadata and plays the multimedia data.

With reference to the first aspect in a first implementation manner the step of acquiring according to the identifier of the user metadata of a multimedia instance that is not shut down by the user before a last disconnection includes acquiring according to the identifier of the user a web page identifier of a web page on which the multimedia instance that is not shut down by the user before the last disconnection is located and according to the web page identifier refreshing the web page loading the web page again and acquiring the metadata of the multimedia instance on the web page.

With reference to the first aspect or with reference to the first implementation manner of the first aspect in a second implementation manner the step of acquiring according to the identifier of the user metadata of a multimedia instance that is not shut down by the user before a last disconnection includes performing according to the identifier of the user a query to acquire pre stored metadata of the multimedia instance that is not shut down by the user before the last disconnection.

With reference to the first aspect or the first and second implementation manners of the first aspect in a third implementation manner the metadata of the multimedia instance further includes information about a playing window of the multimedia instance a size of the playing window a position of the playing window on a virtual desktop of a server and a position of a covered region of the playing window on the virtual desktop and after the step of sending the metadata to a client of the user playing by the client the multimedia data includes creating by the client according to the information about the playing window the playing window at the client and playing the multimedia data in the playing window.

With reference to the first aspect or the first and second implementation manners of the first aspect in a fourth implementation manner the multimedia instance is a flash instance and the path information of the multimedia file corresponding to the multimedia instance includes path information of a flash media file corresponding to the flash instance and path information of a flash stream media file corresponding to the flash instance.

According to a second aspect an embodiment of the present invention provides a multimedia redirection method including receiving a virtual desktop login request of a user where the virtual desktop login request includes an identifier of the user acquiring according to the identifier of the user metadata of a multimedia instance that is not shut down by the user before a last disconnection where the metadata at least includes a type of a multimedia file corresponding to the multimedia instance and an audio video encoding format of the multimedia file sending the metadata to a client so that the client creates a player and a decoder according to the type of the multimedia file and the audio video encoding format of the multimedia file and pushing multimedia data corresponding to the multimedia instance that is not shut down to the client so that the client decodes the multimedia data by using the decoder and plays the decoded multimedia data in the player.

With reference to the second aspect in a first implementation manner the metadata of the multimedia instance further includes information about a playing window of the multimedia instance a size of the playing window a position of the playing window on a virtual desktop of a server and a position of a covered region of the playing window on the virtual desktop and after the step of sending the metadata to a client creating by the client the player according to the type of the multimedia file and the audio video encoding format of the multimedia file includes creating by the client according to the type of the multimedia file and the audio video encoding format of the multimedia file the player at the client so that a playing window of the player and the playing window in the metadata have consistent information.

According to a third aspect an embodiment of the present invention provides a multimedia server including a receiving unit configured to receive a virtual desktop login request of a user where the virtual desktop login request includes an identifier of the user a storage unit configured to store information about a multimedia instance that is not shut down by the user before a last disconnection a metadata reading unit configured to acquire according to the identifier of the user metadata of the multimedia instance that is not shut down by the user before the last disconnection where the metadata at least includes path information of a multimedia file corresponding to the multimedia instance and a redirection control unit configured to send the metadata to a client of the user so that the client acquires according to the metadata multimedia data corresponding to the metadata and plays the multimedia data.

With reference to the third aspect in a first implementation manner the information that is stored in the storage unit and about the multimedia instance that is not shut down by the user before the last disconnection includes a web page identifier of a web page on which the multimedia instance that is not shut down by the user before the last disconnection is located and the metadata reading unit is configured to perform a query on the storage unit according to the identifier of the user to acquire the web page identifier of the web page on which the multimedia instance that is not shut down by the user before the last disconnection is located and according to the web page identifier refresh the web page load the web page again and acquire the metadata of the multimedia instance on the web page after the web page is loaded.

With reference to the third aspect in a second implementation manner the information that is stored in the storage unit and about the multimedia instance that is not shut down by the user before the last disconnection includes the metadata of the multimedia instance that is not shut down by the user before the last disconnection and the metadata reading unit is specifically configured to perform a query on the storage unit according to the identifier of the user to acquire the metadata of the multimedia instance that is not shut down by the user before the last disconnection.

With reference to the third aspect or with reference to the first and second implementation manners of the third aspect in a third implementation manner the metadata that is stored in the storage unit and of the multimedia instance further includes information about a playing window of the multimedia instance a size of the playing window a position of the playing window on a virtual desktop of the server and a position of a covered region of the playing window on the virtual desktop.

According to a fourth aspect an embodiment of the present invention provides a multimedia server including a receiving unit configured to receive a virtual desktop login request of a user where the virtual desktop login request includes an identifier of the user a storage unit configured to store metadata of a multimedia instance that is not shut down by the user before a last disconnection where the metadata at least includes a type of a multimedia file corresponding to the multimedia instance and an audio video encoding format of the multimedia file a metadata reading unit configured to perform a query on the storage unit according to the identifier of the user to acquire the metadata of the multimedia instance that is not shut down by the user before the last disconnection and a redirection control unit configured to send the metadata to a client so that the client creates a player and a decoder according to the type of the multimedia file and the audio video encoding format of the multimedia file and push multimedia data corresponding to the multimedia instance that is not shut down to the client so that the client decodes the multimedia data by using the decoder and plays the decoded multimedia data in the player.

With reference to the fourth aspect in a first implementation manner the metadata that is stored in the storage unit and of the multimedia instance further includes information about a playing window of the multimedia instance a size of the playing window a position of the playing window on a virtual desktop of the server and a position of a covered region of the playing window on the virtual desktop.

According to a fifth aspect an embodiment of the present invention provides a multimedia server including a receiver configured to receive a virtual desktop login request of a user where the virtual desktop login request includes an identifier of the user a memory configured to store information about a multimedia instance that is not shut down by the user before a last disconnection a metadata reader electrically connected to the receiver and the memory and configured to acquire according to the identifier of the user metadata of the multimedia instance that is not shut down by the user before the last disconnection and input the metadata of the multimedia instance to a redirection controller where the metadata of the multimedia instance at least includes path information of a multimedia file corresponding to the multimedia instance and the redirection controller configured to send the metadata of the multimedia instance to a client of the user so that the client acquires according to the metadata of the multimedia instance multimedia data corresponding to the multimedia instance and plays the multimedia data at the client.

With reference to the fifth aspect in a first implementation manner the information that is stored in the memory and about the multimedia instance that is not shut down by the user before the last disconnection includes a web page identifier of a web page on which the multimedia instance that is not shut down by the user before the last disconnection is located and the metadata reader is configured to perform a query on the memory according to the identifier of the user to acquire the web page identifier of the web page on which the multimedia instance that is not shut down by the user before the last disconnection is located and according to the web page identifier refresh the web page load the web page again and acquire the metadata of the multimedia instance on the web page after the web page is loaded.

With reference to the fifth aspect in a second implementation manner the information that is stored in the memory and about the multimedia instance that is not shut down by the user before the last disconnection includes the metadata of the multimedia instance that is not shut down by the user before the last disconnection and the metadata reader is configured to perform a query on the memory according to the identifier of the user to acquire the metadata of the multimedia instance that is not shut down by the user before the last disconnection.

With reference to the second implementation manner of the fifth aspect in a third implementation manner the metadata that is stored in the memory and of the multimedia instance further includes information about a playing window of the multimedia instance a size of the playing window a position of the playing window on a virtual desktop of the server and a position of a covered region of the playing window on the virtual desktop.

According to a sixth aspect an embodiment of the present invention provides a multimedia server including a receiver configured to receive a virtual desktop login request of a user where the virtual desktop login request includes an identifier of the user a memory configured to store metadata of a multimedia instance that is not shut down by the user before a last disconnection where the metadata of the multimedia instance at least includes a type of a multimedia file corresponding to the multimedia instance and an audio video encoding format of the multimedia file a metadata reader electrically connected to the receiver and the memory separately and configured to perform a query on the memory according to the identifier of the user to acquire the metadata of the multimedia instance that is not shut down by the user before the last disconnection and input the metadata of the multimedia instance to a redirection controller and the redirection controller configured to send the metadata of the multimedia instance to a client and push multimedia data corresponding to the multimedia instance that is not shut down to the client so that the client creates a player and a decoder according to the type of the multimedia file and the audio video encoding format of the multimedia file decodes the multimedia data by using the decoder and plays the decoded multimedia data in the player.

With reference to the sixth aspect in a first implementation manner the metadata that is stored in the memory and of the multimedia instance further includes information about a playing window of the multimedia instance a size of the playing window a position of the playing window on a virtual desktop of the server and a position of a covered region of the playing window on the virtual desktop.

According to a seventh aspect an embodiment of the present invention provides a computer system including a communications line a processor connected to the communications line and a memory connected to the communications line where the processor invokes code stored in the memory by means of the communications line so as to after a virtual desktop login request of a user is received acquire according to an identifier of the user included in the virtual desktop login request metadata of a multimedia instance that is not shut down by the user before a last disconnection where the metadata at least includes path information of a multimedia file corresponding to the multimedia instance and send the metadata to a client of the user so that the client acquires according to the metadata multimedia data corresponding to the metadata and plays the multimedia data.

According to an eighth aspect an embodiment of the present invention provides a computer system including a communications line a processor connected to the communications line and a memory connected to the communications line where the processor invokes code stored in the memory by means of the communications line so as to after a virtual desktop login request of a user is received acquire according to an identifier of the user included in the virtual desktop login request metadata of a multimedia instance that is not shut down by the user before a last disconnection where the metadata at least includes a type of a multimedia file corresponding to the multimedia instance and an audio video encoding format of the multimedia file send the metadata to a client so that the client creates a player and a decoder according to the type of the multimedia file and the audio video encoding format of the multimedia file and push multimedia data corresponding to the multimedia instance that is not shut down to the client so that the client decodes the multimedia data by using the decoder and plays the decoded multimedia data in the player.

As can be seen from the above if the technical solutions in the embodiments are applied during a disconnection of a user a server automatically stores information related to a multimedia instance that is not shut down by the user before the disconnection therefore when the user logs in to a virtual desktop service again the server may acquire according to an identifier of the user metadata of the multimedia instance that is not shut down by the user before the last disconnection for a case in which a client actively reads multimedia data during redirection processing of the multimedia instance the metadata at least includes path information of a multimedia file corresponding to the multimedia instance for a case in which a server end actively sends multimedia data to a client during redirection processing of the multimedia instance the metadata at least includes information about a type of a multimedia file corresponding to the multimedia instance and an audio video encoding format of the multimedia file and the server sends the metadata to a client so that the client implements resumed playing of the multimedia instance according to the metadata.

In the prior art if restoration of multimedia redirection fails and multimedia data fails to be obtained when a user logs in again after interruption unexpectedly occurs in a last login a problem such as a blank or a black screen occurs in a client. In contrast when the technical solutions in the embodiments of the present invention are applied it helps to ensure that when a user logs in again a server automatically pushes to a client metadata of a multimedia instance that is not shut down by the user before a last disconnection so as to ensure that the user can locally resume according to the metadata of the multimedia instance playing of multimedia data being played during the last disconnection thereby implementing continuous playing of multimedia without the occurrence of a situation such as a white screen or a black screen and helping to significantly improve experience of multimedia application of the user.

The following clearly describes the technical solutions in the embodiments of the present invention with reference to the accompanying drawings in the embodiments of the present invention. The described embodiments are merely a part rather than all of the embodiments of the present invention. All other embodiments obtained by a person of ordinary skill in the art based on the embodiments of the present invention without creative efforts shall fall within the protection scope of the present invention.

In a research process of the present invention the inventor finds that multimedia redirection is triggered when a remote virtual desktop browser loads flash content. In this case if reconnection is performed after a remote desktop client is closed but a browser at a server end is still in an open state when the prior art is applied a trigger condition of flash redirection does not exist flash that has been loaded before the remote desktop client is closed last time cannot be redirected to the client again and non flash content such as a blank or a black screen is presented in a window of the client when the prior art is applied in this case causing loss of flash content resulting in great inconvenience to application performed by a user and affecting practical application performed by the user.

Referring to this embodiment provides a multimedia redirection method which mainly includes the following steps 

The server in this embodiment may be an actual network server or a virtual machine in a cloud computing system.

A client in this embodiment may be a mobile phone terminal a computer or another intelligent terminal.

The user enables software of a virtual desktop remote application by using a client on a user side and sends the virtual desktop login request to the server by means of the Internet or a communications network so as to request to log in to the server by using the virtual desktop remote application.

When the user sends the virtual desktop login request the virtual desktop login request includes an identifier of the user.

Step . The server acquires according to an identifier of the user metadata of a multimedia instance that is not shut down by the user before a last disconnection.

In the industry of computers metadata is data used for describing data and in English the word metadata is used. In this embodiment the metadata of the multimedia instance at least includes path information of a multimedia file corresponding to the multimedia instance.

After receiving the virtual desktop login request of the user the server performs a query according to the identifier of the user in the virtual desktop login request to find whether a multimedia instance that is not shut down by the user before a disconnection exists when the user logs in last time if the multimedia instance does not exist a virtual desktop login processing process in the prior art is adopted if the multimedia instance exists the server may determine that unexpected interruption occurs when the user logs in to the server last time and perform the following processing based on the technical solution of the present invention 

The server performs a query according to the identifier of the user to acquire related information that is stored in the server and about the multimedia instance that is not shut down by the user before the last disconnection and acquires the metadata of the multimedia instance that is not shut down by the user before the last disconnection.

For example the related information that is stored in the server and about the multimedia instance that is not shut down by the user before the last disconnection may specifically be the metadata of the multimedia instance that is not shut down by the user before the last disconnection and therefore the server directly queries stored information to acquire the metadata of the multimedia instance that is not shut down by the user before the last disconnection.

Further for example the related information that is stored in the server and about the multimedia instance that is not shut down by the user before the last disconnection is specifically a web page identifier of a web page on which the multimedia instance that is not shut down by the user before the last disconnection is located rather than the metadata and therefore the server may refresh the web page corresponding to the web page identifier load the web page again and acquire the metadata of the multimedia instance on the web page in the process of loading the web page.

In this embodiment in addition to the path information of the multimedia file corresponding to the multimedia instance the metadata of the multimedia instance may further include but is not limited to including the following information about a playing window of the multimedia instance size information of the playing window position information of the playing window on a virtual desktop of the server specifically coordinate information of boundaries of the playing window and position information of a covered region of the playing window on the virtual desktop. Therefore in step when the metadata is sent to a client the information about the playing window is further sent to the client so that after receiving the metadata the client may further create the playing window at the client according to a size of the playing window included in the metadata where the size of the playing window a position of the playing window and a position of the covered region of the playing window are completely consistent with those included in the metadata so as to further ensure that the size and position and the like of the playing window when the user logs in again to play the multimedia instance that is not shut down last time are completely consistent with those last time therefore for the user seemingly the user continues right from the moment of the last disconnection with application of the multimedia that is not closed last time thereby further improving experience of multimedia application of the user and enhancing use effects of the virtual desktop.

The multimedia instance in this embodiment is applicable to any multimedia redirection application in which a client actively reads a multimedia file in multimedia redirection and is for example a flash instance the application may further be extended to other types of multimedia instances.

Assuming that currently it is a flash instance the foregoing path information of the multimedia file corresponding to the multimedia instance includes path information of a flash media file for example but not limited to a flash file of an swf type corresponding to the flash instance and path information of a flash stream media file for example but not limited to a flash file of an flv type corresponding to the flash instance.

Step . The server sends the metadata of the multimedia instance to a client of the user so that the client acquires according to the metadata multimedia data corresponding to the metadata and plays the multimedia data.

After acquiring the metadata of the multimedia instance in step the server sends the acquired metadata to the client so that the client restores a multimedia redirection process according to the metadata that is acquires according to the metadata the multimedia data corresponding to the metadata and plays the multimedia data at the client.

As can be seen from the above if the technical solution in this embodiment is applied during a disconnection of a user a server automatically stores information related to a multimedia instance that is not shut down by the user before the disconnection therefore when the user logs in to a virtual desktop service again the server may acquire according to an identifier of the user metadata of the multimedia instance that is not shut down by the user before the last disconnection the metadata at least includes path information of a multimedia file corresponding to the multimedia instance and the server sends the metadata to a client so that the client acquires according to the metadata multimedia data corresponding to the metadata and plays the multimedia data at the client.

In the prior art when a user logs in again after interruption unexpectedly occurs in a last login restoration of multimedia redirection fails and then multimedia data fails to be obtained as a result a problem such as a blank or a black screen occurs in a client. In contrast when the technical solution in this embodiment of the present invention is applied it helps to ensure that when a user logs in again a server automatically pushes to a client metadata of a multimedia instance that is not shut down by the user before a last disconnection and ensure that the client may acquire according to the metadata multimedia data of the multimedia instance that is not shut down before the last disconnection so as to ensure that the user can locally resume playing of multimedia being played during the last disconnection thereby implementing continuous playing of the multimedia without the occurrence of a situation such as a white screen or a black screen and helping to significantly improve experience of multimedia application of the user.

A flash redirection controller in is a control that is run at a server end that provides a virtual desktop service the flash redirection controller is configured to perform at the server end control and status management on a redirection service for a flash instance.

In a flash redirection client is an independent control that is run in a virtual desktop client and configured to perform at the client redirection control work such as process management on redirection for the flash instance and flash redirection control negotiation with the flash redirection controller .

In a pseudo flash playing control at the server end is mainly used as an interface that is the same as a flash playing control at a local end and is configured to interact with an Internet Explorer IE browser at the server end so as to redirect an obtained flash data stream to the client and feed back to the IE browser information that is fed back by the client.

In a virtual flash instance at the server end is an object that is created by the pseudo flash playing control and exists in a memory where each piece of practically played flash multimedia content corresponds to one virtual flash instance.

In a Flash playing container of the client is configured to contain an object played by the flash instance on the client.

In a Flash playing control of the client is a practical control used for playing flash for example but not limited to an Adobe flash player .

In a Flash instance on the client is a practically played object that is created by the flash playing control and exists in the memory where each piece of practically played flash content corresponds to one flash instance.

In the client and the server end implement by using a virtual desktop protocol flash redirection and other virtual machine desktop functions and the virtual desktop protocol may be but is not limited to the Remote Desktop Protocol RDP or the Independent Computing Architecture ICA protocol.

Referring to and a flash multimedia instance is used for illustration in this embodiment to further describe a multimedia redirection method in this embodiment in detail. The method mainly includes the following procedures.

After having applied a virtual desktop service and logged in to a virtual server the user opens a web page including flash content by applying a browser on the virtual server.

The browser on the server loads the pseudo flash playing control on the server to prepare for playing of flash.

S. After the pseudo flash playing control is loaded synchronously instruct a client to create a flash playing container .

After the pseudo flash playing control on the server is loaded a message is sent to the client to synchronously instruct the client to create the flash playing container .

The browser on the server invokes the pseudo flash playing control on the server to create the flash instance.

After the virtual flash instance on the server is created the server sends a web page identifier of a web page on which the flash instance is located to a flash redirection controller on the server.

After the virtual flash instance on the server is created the web page identifier of the web page on which the flash instance is located is sent to the flash redirection controller on the server and the web page identifier of the web page on which the flash instance is located is stored at the server end as metadata of the flash instance.

After the server has created the flash instance the flash redirection controller control on the server stores the web page identifier of the web page on which the current flash instance is located. The web page identifier is an identifier that uniquely identifies the web page in a network and the server can accurately locate the web page according to the web page identifier.

In this embodiment the flash redirection controller on the server may store the web page identifier of the web page on which the current flash instance is located after the flash instance is successfully created or store the web page identifier of the web page on which the current flash instance is located at the moment when the user is disconnected or before the moment when the user is disconnected.

Each time the user shuts down a flash instance the flash redirection controller control on the server deletes a web page identifier of a web page on which the flash instance is located from the server to ensure that the web page identifier that is stored in the server and of the web page on which the flash instance is located is the web page identifier of the web page on which the flash instance that is not shut down by the user before a last disconnection is located. The shut down and then delete technical solution is adopted therefore in one aspect occupation of storage space by flash is reduced thereby preventing redundancy of metadata stored for the flash instance on the server and in another aspect it further becomes convenient for the server to acquire metadata of a flash instance that is not shut down by the user before a disconnection thereby reducing the workload of data acquisition of the server.

S. The virtual flash instance redirects a flash data stream to the flash playing container on the client.

After the flash instance is created the virtual flash instance control on the server redirects the flash data stream to the flash playing container control on the client so that the flash playing container control on the client performs processing of the redirection process at the client. That is metadata of each flash instance on the web page is acquired and the metadata of the flash instance is sent to the client so that the client reads according to the metadata of the flash instance a multimedia file that is multimedia data corresponding to the flash instance so as to perform processing and playing of the multimedia data at the client. The more detailed process is as follows 

The flash playing container on the client loads the flash playing control after the Flash playing control is installed at the client. That is the client loads the multimedia file that is multimedia data corresponding to the flash instance according to metadata of the flash instance.

S. The flash playing control creates a flash instance according to the flash data stream redirected from a server end.

The flash playing control on the client creates the flash instance according to the flash data stream redirected from the server end.

The user attempts to connect the server again and sends a virtual desktop login request to the server to request to log in to the virtual desktop service of the server again. The details may be but are not limited to those in step in Embodiment 1.

S. The virtual desktop service notifies the flash redirection controller that a user logs in to the virtual desktop service.

After receiving the virtual desktop login request of the user the server end notifies the flash redirection controller at the server end that a user logs in to the virtual desktop service.

S. The flash redirection controller reads according to information about the login user a browser web page identifier stored for the user before the last disconnection.

The flash redirection controller at the server end reads according to an identifier of the user the browser web page identifier stored for the user before the last disconnection.

For details reference may be made to corresponding records in step in Embodiment 1 but the details are not limited thereto.

The flash redirection controller on the server drives according to the read web page identifier the browser to refresh a corresponding page.

The flash redirection controller on the server starts according to the metadata of the flash instance a flash redirection process and sends read metadata of the flash instance to a flash redirection client control on the client.

The flash content is loaded again after a browser page is refreshed thereby driving a start process of flash redirection again and implementing redirection of the flash content to the client again.

After the browser page on the server is refreshed on the server the flash content is loaded again and a flash redirection process of the web page is triggered thereby driving the start process of flash redirection again and implementing the redirection of the flash content to the client again. That is after the server loads a page again on the refreshed web page the server acquires the metadata of the flash instance on the web page again and sends the metadata of the flash instance to the client so that the client loads according to the metadata of the flash instance the multimedia file that is multimedia data corresponding to the flash instance so as to perform the procedures of steps S and S at a local end to perform playing of multimedia.

It should be noted that in this embodiment a specific processing process in which a user is disconnected and logs in again in a process of flash redirection processing after login to a virtual desktop service is used as an example for detailed illustration of the flash redirection procedures in this embodiment. However in practical applications according to actual needs an order of some procedures may be adjusted or some procedures may be added or deleted the present invention is not limited thereto. It may be regarded as an invention the same as or similar to the present invention as long as that during flash redirection processing according to a pre stored identifier of a web page on which a flash instance is located or any information with which a server can uniquely find the web page the server drives a browser to refresh a page and load the web page again so that the server can obtain metadata of the flash instance again and sends the metadata to a client so as to enable the client to load flash content again according to the metadata and implement continuous playing.

Referring to and a flash multimedia instance is used for illustration in this embodiment to further describe a multimedia redirection method in this embodiment in detail. The method mainly includes the following procedures.

After having applied a virtual desktop service and logged in to a server the user opens a web page including flash content by applying a browser on a virtual server.

The browser on the server loads a flash playing control actually loads the pseudo flash playing control on the server to prepare for playing of flash.

S. After the pseudo flash playing control is loaded synchronously instruct the client to create a flash playing container .

After the pseudo flash playing control on the server is loaded a message is sent to the client to synchronously instruct the client to create the flash playing container .

S. After the flash instance is created send metadata of the flash instance to a flash redirection controller .

After the flash instance is created the server sends the information about the metadata of the flash instance to the flash redirection controller on the server.

A difference between this step and step S in Embodiment 2 mainly lies in that in this step the metadata of the flash instance is directly stored so that the metadata of the flash instance may be directly acquired in a query manner during next login without a need to load again by refreshing a web page.

In this embodiment the structure definition of the metadata of the flash instance may be but is not limited to the following structure definition 

It should be noted that metadata elements included in the foregoing definition of the metadata of the flash instance are only exemplary illustration of this embodiment in practical system implementation other additional metadata elements may be added according to needs. In this embodiment the metadata of the flash instance may use the foregoing data structure may also use another data structure or may further include more metadata elements according to a definition of the user.

After the flash instance is created the flash redirection controller control on the server stores the metadata of the current flash instance.

In this embodiment the flash redirection controller on the server may store the metadata of the flash instance after the flash instance is successfully created or store the metadata of the flash instance at the moment when the user is disconnected or before the moment when the user is disconnected.

Each time the user shuts down a flash instance the flash redirection controller control on the server deletes metadata of the flash instance from the server to ensure that the metadata of the flash instance stored in the server is the metadata of the flash instance that is not shut down by the user before a last disconnection. Therefore in one aspect occupation of storage space by flash is reduced thereby preventing redundancy of metadata stored for the flash instance on the server and in another aspect it further becomes convenient for the server to acquire metadata of a flash instance that is not shut down by the user before a disconnection thereby reducing the workload of data acquisition of the server.

S. The virtual flash instance redirects a flash data stream to the flash playing container on the client.

After the flash instance is created the virtual flash instance control on the server redirects the flash data stream to the flash playing container control on the client so that the flash playing container control on the client performs processing of the redirection process at the client.

S. The flash playing control creates a flash instance according to the flash data stream redirected from a server end.

The flash playing control on the client creates the flash instance according to the flash data stream redirected from the server end.

A virtual desktop client attempts to connect the server again and sends a virtual desktop login request to the server to request to log in to the virtual desktop service on the server again. The details may be but are not limited to those in step in Embodiment 1.

S. The virtual desktop service notifies the flash redirection controller that a user logs in to the virtual desktop service.

After receiving the virtual desktop login request of the user the server end notifies the flash redirection controller at the server end that a user logs in to the virtual desktop service.

S. The flash redirection controller reads according to information about the login user metadata of the flash instance stored for the user before the last disconnection.

The flash redirection controller at the server end reads according to an identifier of the user the metadata of the flash instance stored for the user before the last disconnection that is the metadata of the flash instance that is not shut down by the user before the disconnection.

For details reference may be made to corresponding records in step in Embodiment 1 but the details are not limited thereto.

S. The flash redirection controller sends the read metadata of the flash instance to a flash redirection client .

The flash redirection controller on the server sends the read metadata of the flash instance to the flash redirection client control on the client.

S. The flash redirection client creates a flash playing container according to the received metadata.

The flash redirection client on the client creates the flash playing container according to the received metadata.

Specifically the data of the flash instance is acquired again according to the flashswf file path and the flashflv file path and the flash playing container is locally created according to position information of a flash playing window on a virtual desktop of the server and position information of a covered region.

For details reference may be made to corresponding records in step in Embodiment 1 but the details are not limited thereto.

The flash playing control on the client creates the flash instance according to the flash data stream redirected from the server end.

As can be seen from the above when the technical solution in this embodiment is applied to redirection processing of flash multimedia when a user logs in again a server may start according to stored metadata of a flash instance that is not shut down during a last disconnection a flash redirection process to send the metadata to a client so that the client continues with the process of the flash redirection processing according to the metadata to resume playing of the flash instance from the last disconnection thereby implementing continuous playing of flash content.

It should be noted that in this embodiment a specific processing process in which a user is disconnected and logs in again in a process of flash redirection processing after login to a virtual desktop service is used as an example for detailed illustration of the flash redirection procedures in this embodiment. However in practical applications according to actual needs an order of some procedures may be adjusted or some procedures may be added or deleted the present invention is not limited thereto. It may be regarded as a technical solution the same as or similar to the present invention as long as that during flash redirection processing if a user does not shut down a multimedia instance before a last disconnection a server automatically sends previously stored metadata of a flash instance to a client so that the client automatically performs flash redirection processing on flash content according to the metadata and performs restoration to implement continuous playing.

As can be seen from the above in addition to the effects in Embodiment 2 this embodiment may further produce the following effects.

In this embodiment metadata of a flash instance that needs redirection is obtained without refreshing the flash instance again. Instead metadata of a flash instance that is not shut down before a last disconnection is directly stored at a server end. When a user logs in again the server directly sends the metadata of the flash instance to the client so that the client restores flash redirection processing according to the metadata. When the technical solution in this embodiment is adopted problems such as network data loss caused by web page refreshing can be prevented the technical solution in this embodiment is further especially applicable to multimedia redirection applications such as network forums and mailboxes.

Referring to a multimedia redirection method provided in this embodiment mainly includes the following procedures 

Step . Receive a virtual desktop login request of a user where the virtual desktop login request includes an identifier of the user.

Step . Acquire according to the identifier of the user metadata of a multimedia instance that is not shut down by the user before a last disconnection.

The metadata of each multimedia instance in this embodiment at least includes information about a type of a multimedia file corresponding to the multimedia instance and an audio video encoding format of the multimedia file.

In this embodiment when the metadata of the multimedia instance is applied to a virtual desktop service in a case in which a client does not actively read data and a server pushes data to the client in multimedia redirection when a multimedia instance playing of which is not shut down by a user exists when the client is disconnected from the server for the client the connection between the client and the server is in a network disconnected state and the client cannot receive multimedia data pushed by the server however for the server the multimedia instance in a browser on the server is not shut down and in a state of continued playing. In this embodiment it is assumed that 

The server opens according to an operation on a media player of the server performed by the user a multimedia file by using a player to perform playing of a multimedia instance. After reading a type of the multimedia file and an audio video encoding format of the multimedia file the server stores the type of the multimedia file corresponding to the multimedia instance and the audio video encoding format of the multimedia file as metadata of the multimedia instance when the metadata of the multimedia instance is stored the metadata of the multimedia instance is made corresponding to the identifier of the user. Therefore when the user logs in again the server finds according to the identifier of the login user the metadata of the multimedia instance that is not shut down by the user before a last disconnection.

In this embodiment an identifier of metadata of a multimedia instance of each user may be used to identify whether the metadata of the multimedia instance is metadata of a multimedia instance that is shut down by a user or metadata of a multimedia instance that is not shut down by a user. A server may also delete metadata of a multimedia instance from the server each time a user shuts down the multimedia instance so as to ensure that metadata that is stored in the server and of a multimedia instance of each user is metadata of a multimedia instance that is not shut down by the user before a last disconnection. When the technical solution in which metadata of a multimedia instance is deleted after the multimedia instance is shut down is adopted in one aspect occupation of storage space by metadata of a multimedia instance is reduced thereby preventing redundancy of metadata that is stored in the server and of the multimedia instance in another aspect it further becomes convenient for the server to acquire metadata of a multimedia instance that is not shut down by the user before a disconnection thereby reducing the workload of data acquisition of the server.

1. A user logs in to a server by using a virtual desktop service and opens a media player on the server. The media player may be but is not limited to a Microsoft multimedia player Windows Media Player .

2. The user operates the player on the server by using the virtual desktop service and opens a multimedia file the multimedia file is a multimedia file corresponding to the so called multimedia instance in the playing state in this embodiment and the multimedia file may be but is not limited to being stored on a server side in a network by using the player.

3. The player on the server reads a type of the multimedia file and an audio video encoding format of the multimedia file.

A difference between the step in this embodiment and the prior art includes after the multimedia file type of the multimedia file to be played and the audio video encoding format of the multimedia file are determined the information is stored in the server and the stored data and a current identifier of the user correspond to each other. Therefore when the technical solution in this embodiment is applied when the user logs in again the server may determine according to the identifier of the user metadata of a multimedia instance that is not shut down by the user before a last disconnection. For the specific storage method refer to the introduction in the foregoing.

4. The server automatically creates according to the type of the multimedia file and the audio video encoding format of the multimedia file a decoding topological structure needed for playing the multimedia file.

In the process of creating the decoding topological structure a compiler also referred to as RenderSink in an actual topology is replaced in a hook application programming interface HookApplicationProgrammingInterface briefly referred to as HookAPI manner to create and implement a direct compiler also referred to as RedirectRenderSink .

5. The RedirectRenderSink on the server sends to a client the type of the multimedia file and the audio video encoding format of the multimedia file that are obtained by means of reading by the player.

6. The client locally creates according to the type of the multimedia file and the audio video encoding format of the multimedia file that are received from the server an actual player and a decoding topological structure so as to perform decoding processing on multimedia data pushed by the server .

7. The player on the server reads the multimedia file to obtain the multimedia data and sends by using the RedirectRenderSink on the server the obtained multimedia data to the remote client.

In the implementation when the user applies the virtual desktop service to perform redirected playing on the multimedia instance in this embodiment the metadata of the multimedia instance may be stored in step 3 in the foregoing or stored at any moment during a playing process of the multimedia instance before the user is disconnected after step 3. It is only required to store after the user is disconnected on the server side the metadata of the multimedia instance that is not shut down by the user before the disconnection. In this way when the user logs in to the server again the metadata of the multimedia instance that is not shut down by the user before the last disconnection may be acquired according to the identifier of the user.

In this embodiment in addition to the type of the multimedia file corresponding to the multimedia instance that is not shut down at the moment of the last disconnection and before the disconnection and the audio video encoding format of the multimedia file the metadata of the multimedia instance may further include but is not limited to including the following information about a playing window of the multimedia instance size information of the playing window position information of the playing window on a virtual desktop of the server specifically coordinate information of boundaries of the playing window and position information of a covered region of the playing window on the virtual desktop. Therefore in step when the metadata is sent to a client the information about the playing window is further sent to the client so that after receiving the metadata the client may further create the playing window at the client according to a size of the playing window included in the metadata where the size of the playing window a position of the playing window and a position of the covered region of the playing window are completely consistent with those included in the metadata so as to further ensure that the size and position and the like of the playing window when the user logs in again to play the multimedia instance that is not shut down last time are completely consistent with those last time therefore for the user seemingly the user continues right from the moment of the last disconnection with application of the multimedia that is not closed last time thereby further improving experience of multimedia application of the user and enhancing use effects of the virtual desktop.

Step . A server sends to a client of the user the metadata of the multimedia instance that is not shut down by the user before the last disconnection.

After receiving the metadata the client creates a player and a decoding topological structure at the client according to a type of a multimedia file and an audio video encoding format of the multimedia file in the metadata at the client so that after receiving multimedia data from the server the client uses the decoding topological structure to perform decoding processing on the multimedia data so as to play the decoded multimedia data in the player on the client.

Step . The server sends to the client the multimedia data of the multimedia instance that is not shut down by the user before the last disconnection.

That is the server pushes to the client of the user multimedia data of a multimedia instance that corresponds to the user and is currently in a playing state on the server.

After receiving the multimedia data sent by the server the client uses the decoding topological structure which is created according to the metadata that is sent by the server and of the multimedia instance to perform decoding processing on the multimedia data and plays the decoded multimedia data in a player which is created according to the metadata that is sent by the server and of the multimedia instance.

As can be seen from the above if the technical solution in this embodiment is applied during a disconnection of a user a server automatically stores metadata of a multimedia instance that is not shut down by the user before the disconnection therefore when the user logs in to a virtual desktop service again the server may acquire according to an identifier of the user the metadata of the multimedia instance that is not shut down by the user before the last disconnection the metadata at least includes information about a type of a multimedia file corresponding to the multimedia instance that is not shut down before the last disconnection and an audio video encoding format of the multimedia file so that the server sends the metadata to a client so as to restore at the client creation of a decoding topological structure and a player corresponding to the multimedia instance in addition the server sends to the client multimedia data of the multimedia instance that is not shut down so that after receiving the multimedia data the client may use the created decoding topological structure to perform data decoding and then play the multimedia data in the player. In this way the client can play the multimedia instance that is not shut down by the user before the last disconnection.

In the prior art if restoration of multimedia redirection fails and multimedia data fails to be obtained when a user logs in again after interruption unexpectedly occurs in a last login a problem such as a blank or a black screen occurs in a client. In contrast when the technical solution in this embodiment of the present invention is applied it helps to ensure that when a user logs in again a server locally stores data corresponding to a multimedia instance that is not shut down by the user before a last disconnection so that metadata of the multimedia instance that is not shut down by the user before the last disconnection can be acquired when the user logs in again and the server automatically pushes to a client multimedia data and the metadata of the multimedia instance that is not shut down by the user before the last disconnection so as to ensure that the user can locally resume playing of multimedia being played during the last disconnection thereby implementing continuous playing of the multimedia without the occurrence of a situation such as a white screen or a black screen and helping to significantly improve experience of multimedia application of the user.

This embodiment is especially applicable to the following application scenario in a multimedia redirection process after a server acquires multimedia data of a multimedia instance the server actively pushes the multimedia data to a client and the client performs data processing such as decoding on the received multimedia data and then performs multimedia playing.

Referring to this embodiment provides a multimedia server which mainly includes a receiving unit a storage unit a metadata reading unit and a redirection control unit . Connection relationships and working principles of these parts are as follows.

The receiving unit is configured to receive a virtual desktop login request of a user where the virtual desktop login request includes an identifier of the user. For the working principle reference may be made to step in Embodiment 1 step S in Embodiment 2 and step S in Embodiment 3 but the working principle is not limited thereto.

The storage unit is electrically connected to the metadata reading unit and the redirection control unit . The storage unit stores information about a multimedia instance that is not shut down by the user before a last disconnection. The information about the multimedia instance may include a web page identifier of a web page on which the multimedia instance is located or is specifically metadata of the multimedia instance where the metadata at least includes path information of a multimedia file corresponding to the multimedia instance. For details refer to corresponding records of 102 in Embodiment 1 steps S and S in Embodiments 2 and 3 and the like.

The metadata reading unit is in a circuit connection to the storage unit and the redirection control unit and is configured to read according to the identifier of the user in the virtual desktop login request received by the receiving unit the metadata that is stored in the storage unit and of the multimedia instance that is not shut down by the user before the last disconnection.

When the information that is stored in the storage unit and about the multimedia instance that is not shut down before the last disconnection is specifically the web page identifier of the web page on which the multimedia instance that is not shut down by the user before the last disconnection is located the metadata reading unit is configured to perform a query on the storage unit according to the identifier of the user to acquire the web page identifier of the web page on which the multimedia instance that is not shut down by the user before the last disconnection is located and according to the web page identifier refresh the web page load the web page again and acquire the metadata of the multimedia instance on the web page.

When the information that is stored in the storage unit and about the multimedia instance that is not shut down before the last disconnection is specifically the metadata of the multimedia instance that is not shut down by the user before the last disconnection the metadata reading unit is configured to perform a query on the storage unit according to the identifier of the user to acquire the metadata of the multimedia instance that is not shut down by the user before the last disconnection.

The metadata that is stored in the storage unit and of each multimedia instance at least includes path information of a multimedia file corresponding to each multimedia instance so that a client acquires after receiving the metadata the multimedia file and reads the multimedia file to obtain multimedia data.

The metadata that is stored in the storage unit and of each multimedia instance may further include information about a playing window of the multimedia instance a size of the playing window a position of the playing window on a virtual desktop of the server and a position of a covered region of the playing window on the virtual desktop. Therefore after receiving the metadata sent by the server the client creates the playing window according to the information about the playing window included in the received metadata of the multimedia instance and plays the multimedia data in the created playing window. Therefore experience of multimedia application of the user is further improved.

For a detailed working principle refer to records of step in Embodiment 1 and steps S and S in Embodiments 2 and 3.

The redirection control unit is electrically connected to the receiving unit the storage unit and the metadata reading unit separately and is configured to control the work of each part as follows when the receiving unit receives the virtual desktop login request of the user the redirection control unit controls the metadata reading unit to read the storage unit the metadata reading unit acquires by means of reading according to the information that is in the storage unit and about the multimedia instance that is not shut down before the last disconnection the metadata corresponding to the user after the metadata reading unit acquires by means of reading the metadata corresponding to the user the redirection control unit sends according to the metadata obtained by the metadata reading unit the metadata to the client of the user so that the client acquires according to the metadata the multimedia data corresponding to the metadata and plays the multimedia data at the client. For a more detailed working principle refer to the records of step in Embodiment 1 and steps S and S and steps S and S in Embodiments 2 and 3.

As can be seen from the above if the technical solution in this embodiment is applied before a user is disconnected the multimedia server in this embodiment automatically stores information related to a multimedia instance that is not shut down by the user before the disconnection therefore when the receiving unit receives a login request from the user to log in to a virtual desktop service again the metadata reading unit of the server acquires according to an identifier of the user and information that is stored in the storage unit metadata of the multimedia instance that is not shut down by the user before the last disconnection the metadata at least includes path information of a multimedia file corresponding to the multimedia instance so that the redirection control unit of the server actively sends the metadata to a client so as to enable the client to restore a multimedia redirection process acquire according to the metadata multimedia data corresponding to the metadata and play the multimedia data at the client. In the prior art if restoration of multimedia redirection fails and multimedia data fails to be obtained when a user logs in again after interruption unexpectedly occurs in a last login a problem such as a blank or a black screen occurs in a client. In contrast when the technical solution in this embodiment of the present invention is applied it helps to ensure that when a user logs in again the server automatically pushes to a client metadata of a multimedia instance that is not shut down by the user before a last disconnection and ensure that the client may acquire according to the metadata multimedia data of the multimedia instance that is not shut down before the last disconnection so as to ensure that the user can locally resume playing of multimedia being played during the last disconnection thereby implementing continuous playing of the multimedia without the occurrence of a situation such as a white screen or a black screen and helping to significantly improve experience of multimedia application of the user.

In addition to the path information of the multimedia file corresponding to the multimedia instance the metadata stored in the multimedia instance storage unit in this embodiment may further include as shown in Embodiment 3 position information of the playing window of the multimedia instance on the virtual desktop of the server and position information of the covered region of the playing window on the virtual desktop.

Assuming that a current multimedia instance is a flash instance in metadata of the flash instance path information of a multimedia file corresponding to the multimedia instance includes path information of a flash media file for example a flash file of an swf type corresponding to the flash instance and path information of a flash stream media file for example a flash file of an flv type corresponding to the flash instance.

Referring to this embodiment provides a multimedia server which mainly includes a receiving unit a storage unit a metadata reading unit and a redirection control unit . Connection relationships and working principles of these parts are as follows 

The receiving unit is configured to receive a virtual desktop login request of a user where the virtual desktop login request includes an identifier of the user. For the working principle reference may be made to step in Embodiment 1 step S in Embodiment 2 and Step S in Embodiment 3 but the working principle is not limited thereto.

The storage unit is electrically connected to the metadata reading unit and the redirection control unit and the storage unit stores metadata of a multimedia instance that is not shut down by the user before a last disconnection.

The metadata that is stored in the storage unit and of the multimedia instance at least includes a type of a multimedia file corresponding to the multimedia instance and an audio video encoding format of the multimedia file therefore after the redirection control unit sends to a client the metadata of the multimedia instance that is not shut down by the user before the last disconnection the client may create a player and a decoder according to the type of the multimedia file and the audio video encoding format of the multimedia file and the client decodes after receiving multimedia data pushed by the server the multimedia data by using the decoder on the client and plays the decoded multimedia data in the player.

The metadata reading unit is in a circuit connection to the storage unit and the redirection control unit and is configured to perform a query on the storage unit according to the identifier of the user in the virtual desktop login request received by the receiving unit and acquire by means of reading from the storage unit the metadata of the multimedia instance that is not shut down by the user before the last disconnection.

The redirection control unit is configured to send to the client the metadata that is acquired by the metadata reading unit and of the multimedia instance that is not shut down by the user before the last disconnection so that the client creates the player and the decoder according to the type of the multimedia file and the audio video encoding format of the multimedia file the redirection control unit further sends to the client the multimedia data corresponding to the multimedia instance that is not shut down so that the client decodes the multimedia data by using the decoder and plays the decoded multimedia data in the player on the client.

As can be seen from the above if the technical solution in this embodiment is applied when or before a user is disconnected the multimedia server automatically stores in the storage unit information related to a multimedia instance that is not shut down by the user before the disconnection therefore when the receiving unit receives a login request from the user to log in to a virtual desktop service again the metadata reading unit of the server may acquire according to an identifier of the user and in combination with information stored in the storage unit metadata of the multimedia instance that is not shut down by the user before the last disconnection the metadata at least includes information about a type of a multimedia file corresponding to the multimedia instance that is not shut down before the last disconnection and an audio video encoding format of the multimedia file and the redirection control unit of the server sends the metadata to a client so as to restore at the client creation of a decoding topological structure and a player corresponding to the multimedia instance in addition the server sends to the client multimedia data of the multimedia instance that is not shut down so that after receiving the multimedia data the client may use the created decoding topological structure to perform data decoding and then play the multimedia data in the player. In this way the client can play the multimedia instance that is not shut down by the user before the last disconnection.

In the prior art if restoration of multimedia redirection fails and multimedia data fails to be obtained when a user logs in again after interruption unexpectedly occurs in a last login a problem such as a blank or a black screen occurs in a client. In contrast when the technical solution in this embodiment of the present invention is applied it helps to ensure that when a user logs in again the server locally stores data corresponding to a multimedia instance that is not shut down by the user before a last disconnection so that metadata of the multimedia instance that is not shut down by the user before the last disconnection can be acquired when the user logs in again and the server automatically pushes to a client multimedia data and the metadata of the multimedia instance that is not shut down by the user before the last disconnection so as to ensure that the user can locally resume playing of multimedia being played during the last disconnection thereby implementing continuous playing of the multimedia without the occurrence of a situation such as a white screen or a black screen and helping to significantly improve experience of multimedia application of the user.

This embodiment is especially applicable to the following application scenario in a multimedia redirection process after the server acquires multimedia data of a multimedia instance the server actively pushes the multimedia data to a client and the client performs data processing such as decoding on the received multimedia data and then performs multimedia playing.

Referring to this embodiment provides a multimedia server which mainly includes a receiver a memory a metadata reader and a redirection controller . Connection relationships and working principles of these parts are as follows.

The receiver is configured to receive a virtual desktop login request of a user where the virtual desktop login request includes an identifier of the user. For the working principle reference may be made to step in Embodiment 1 step S in Embodiment 2 and Step S in Embodiment 3 but the working principle is not limited thereto.

The memory is electrically connected to the metadata reader and the redirection controller . The memory stores information about a multimedia instance that is not shut down by the user before a last disconnection. The information about the multimedia instance may include a web page identifier of a web page on which the multimedia instance is located or is specifically metadata of the multimedia instance where the metadata at least includes path information of a multimedia file corresponding to the multimedia instance. For details refer to corresponding records of 102 in Embodiment 1 steps S and S in Embodiments 2 and 3 and the like.

The metadata reader is in a circuit connection to the memory and the redirection controller and is configured to read according to the identifier of the user in the virtual desktop login request received by the receiver the metadata that is acquired by the memory and of the multimedia instance that is not shut down by the user before the last disconnection.

When the information that is stored in the memory and about the multimedia instance that is not shut down before the last disconnection is specifically the web page identifier of the web page on which the multimedia instance that is not shut down by the user before the last disconnection is located the metadata reader is configured to perform a query on the memory according to the identifier of the user to acquire the web page identifier of the web page on which the multimedia instance that is not shut down by the user before the last disconnection is located and according to the web page identifier refresh the web page load the web page again and acquire the metadata of the multimedia instance on the web page.

When the information that is stored in the memory and about the multimedia instance that is not shut down before the last disconnection is specifically the metadata of the multimedia instance that is not shut down by the user before the last disconnection the metadata reader is configured to perform a query on the memory according to the identifier of the user to acquire the metadata of the multimedia instance that is not shut down by the user before the last disconnection.

The metadata that is stored in the memory and of each multimedia instance at least includes path information of a multimedia file corresponding to each multimedia instance so that a client acquires after receiving the metadata the multimedia file and reads the multimedia file to obtain multimedia data.

The metadata that is stored in the memory and of each multimedia instance may further include information about a playing window of the multimedia instance a size of the playing window a position of the playing window on a virtual desktop of the server and a position of a covered region of the playing window on the virtual desktop. Therefore after receiving the metadata sent by the server the client creates the playing window according to the information about the playing window included in the received metadata of the multimedia instance and plays the multimedia data in the created playing window. Therefore experience of multimedia application of the user is further improved.

For a detailed working principle refer to records of step in Embodiment 1 and steps S and S in Embodiments 2 and 3.

The redirection controller is electrically connected to the receiver the memory and the metadata reader separately and is configured to control the work of each part as follows when the receiver receives the virtual desktop login request of the user the redirection controller controls the metadata reader to read the memory the metadata reader acquires by means of reading according to the information that is in the memory and about the multimedia instance that is not shut down before the last disconnection the metadata corresponding to the user after the metadata reader acquires by means of reading the metadata corresponding to the user the redirection controller sends according to the metadata obtained by the metadata reader the metadata to the client of the user so that the client acquires according to the metadata the multimedia data corresponding to the metadata and plays the multimedia data at the client. For a more detailed working principle refer to the records of step in Embodiment 1 and steps S and S and steps S and S in Embodiments 2 and 3.

As can be seen from the above if the technical solution in this embodiment is applied before a user is disconnected the multimedia server in this embodiment automatically stores information related to a multimedia instance that is not shut down by the user before the disconnection therefore when the receiver receives a login request from the user to log in to a virtual desktop service again the metadata reader of the server acquires according to an identifier of the user and information that is stored in the memory metadata of the multimedia instance that is not shut down by the user before the last disconnection the metadata at least includes path information of a multimedia file corresponding to the multimedia instance so that the redirection controller of the server actively sends the metadata to a client so as to enable the client to restore a multimedia redirection process acquire according to the metadata multimedia data corresponding to the metadata and play the multimedia data at the client. In the prior art if restoration of multimedia redirection fails and multimedia data fails to be obtained when a user logs in again after interruption unexpectedly occurs in a last login a problem such as a blank or a black screen occurs in a client. In contrast when the technical solution in this embodiment of the present invention is applied it helps to ensure that when a user logs in again the server automatically pushes to a client metadata of a multimedia instance that is not shut down by the user before a last disconnection and ensure that the client may acquire according to the metadata multimedia data of the multimedia instance that is not shut down before the last disconnection so as to ensure that the user can locally resume playing of multimedia being played during the last disconnection thereby implementing continuous playing of the multimedia without the occurrence of a situation such as a white screen or a black screen and helping to significantly improve experience of multimedia application of the user.

In addition to the path information of the multimedia file corresponding to the multimedia instance the metadata stored in the multimedia instance memory in this embodiment may further include as shown in Embodiment 3 position information of the playing window of the multimedia instance on the virtual desktop of the server and position information of the covered region of the playing window on the virtual desktop.

Assuming that a current multimedia instance is a flash instance in metadata of the flash instance path information of a multimedia file corresponding to the multimedia instance includes path information of a flash media file for example a flash file of an swf type corresponding to the flash instance and path information of a flash stream media file for example a flash file of an flv type corresponding to the flash instance.

Referring to this embodiment provides a multimedia server which mainly includes a receiver a memory a metadata reader and a redirection controller . Connection relationships and working principles of these parts are as follows.

The receiver is configured to receive a virtual desktop login request of a user where the virtual desktop login request includes an identifier of the user. For the working principle reference may be made to step in Embodiment 1 step S in Embodiment 2 and Step S in Embodiment 3 but the working principle is not limited thereto.

The memory is electrically connected to the metadata reader and the redirection controller and the memory stores metadata of a multimedia instance that is not shut down by the user before a last disconnection.

The metadata that is stored in the memory and of the multimedia instance at least includes a type of a multimedia file corresponding to the multimedia instance and an audio video encoding format of the multimedia file therefore after the redirection controller sends to a client the metadata of the multimedia instance that is not shut down by the user before the last disconnection the client may create a player and a decoder according to the type of the multimedia file and the audio video encoding format of the multimedia file and the client decodes after receiving multimedia data pushed by the server the multimedia data by using the decoder on the client and plays the decoded multimedia data in the player.

The metadata reader is in a circuit connection to the memory and the redirection controller and is configured to perform a query on the memory according to the identifier of the user in the virtual desktop login request received by the receiver and acquire by means of reading from the memory the metadata of the multimedia instance that is not shut down by the user before the last disconnection.

The redirection controller is configured to send to the client the metadata that is acquired by the metadata reader and of the multimedia instance that is not shut down by the user before the last disconnection so that the client creates the player and the decoder according to the type of the multimedia file and the audio video encoding format of the multimedia file the redirection controller further sends to the client the multimedia data corresponding to the multimedia instance that is not shut down so that the client decodes the multimedia data by using the decoder and plays the decoded multimedia data in the player on the client.

As can be seen from the above if the technical solution in this embodiment is applied when or before a user is disconnected the multimedia server automatically stores in the memory information related to a multimedia instance that is not shut down by the user before the disconnection therefore when the receiver receives a login request from the user to log in to a virtual desktop service again the metadata reader of the server may acquire according to an identifier of the user and in combination with information stored in the memory metadata of the multimedia instance that is not shut down by the user before the last disconnection the metadata at least includes information about a type of a multimedia file corresponding to the multimedia instance that is not shut down before the last disconnection and an audio video encoding format of the multimedia file and the redirection controller of the server sends the metadata to a client so as to restore at the client creation of a decoding topological structure and a player corresponding to the multimedia instance in addition the server sends to the client multimedia data of the multimedia instance that is not shut down so that after receiving the multimedia data the client may use the created decoding topological structure to perform data decoding and then play the multimedia data in the player. In this way the client can play the multimedia instance that is not shut down by the user before the last disconnection.

In the prior art if restoration of multimedia redirection fails and multimedia data fails to be obtained when a user logs in again after interruption unexpectedly occurs in a last login a problem such as a blank or a black screen occurs in a client. In contrast when the technical solution in this embodiment of the present invention is applied it helps to ensure that when a user logs in again the server locally stores data corresponding to a multimedia instance that is not shut down by the user before a last disconnection so that metadata of the multimedia instance that is not shut down by the user before the last disconnection can be acquired when the user logs in again and the server automatically pushes to a client multimedia data and the metadata of the multimedia instance that is not shut down by the user before the last disconnection so as to ensure that the user can locally resume playing of multimedia being played during the last disconnection thereby implementing continuous playing of the multimedia without the occurrence of a situation such as a white screen or a black screen and helping to significantly improve experience of multimedia application of the user.

This embodiment is especially applicable to the following application scenario in a multimedia redirection process after the server acquires multimedia data of a multimedia instance the server actively pushes the multimedia data to a client and the client performs data processing such as decoding on the received multimedia data and then performs multimedia playing.

This embodiment provides a computer system as shown in which may be configured at any computer. The computer system mainly includes a communications line a processor and a memory . The processor is connected to the memory by means of the communications line.

The processor invokes by means of the communications line code stored in the memory to execute the following control after a virtual desktop login request of a user is received acquiring according to an identifier of the user included in the virtual desktop login request metadata of a multimedia instance that is not shut down by the user before a last disconnection where the metadata at least includes path information of a multimedia file corresponding to the multimedia instance and sending the metadata to a client of the user so that the client acquires according to the metadata multimedia data corresponding to the metadata and plays the multimedia data.

For a more detailed working principle reference may be made to those in Embodiments 1 to 3 and 5 but the working principle is not limited thereto.

As can be seen from the above if the technical solution in this embodiment is applied during a disconnection of a user a server to which the computer system is installed automatically stores information related to a multimedia instance that is not shut down by the user before the disconnection therefore when the user logs in to a virtual desktop service again the server may acquire according to an identifier of the user metadata of the multimedia instance that is not shut down by the user before the last disconnection the metadata at least includes path information of a multimedia file corresponding to the multimedia instance and the server sends the metadata to a client so that the client acquires according to the metadata multimedia data corresponding to the metadata and plays the multimedia data at the client.

In the prior art if restoration of multimedia redirection fails and multimedia data fails to be obtained when a user logs in again after interruption unexpectedly occurs in a last login a problem such as a blank or a black screen occurs in a client. In contrast when the technical solution in this embodiment of the present invention is applied it helps to ensure that when a user logs in again a server automatically pushes to a client metadata of a multimedia instance that is not shut down by the user before a last disconnection and ensure that the client may acquire according to the metadata multimedia data of the multimedia instance that is not shut down before the last disconnection so as to ensure that the user can locally resume playing of multimedia being played during the last disconnection thereby implementing continuous playing of the multimedia without the occurrence of a situation such as a white screen or a black screen and helping to significantly improve experience of multimedia application of the user.

This embodiment provides a computer system as shown in which may be configured at any computer. The computer system mainly includes a communications line a processor and a memory . The processor is connected to the memory by means of the communications line .

The processor invokes by means of the communications line code stored in the memory to execute the following control after a virtual desktop login request of a user is received acquiring according to an identifier of the user included in the virtual desktop login request metadata of a multimedia instance that is not shut down by the user before a last disconnection where the metadata at least includes a type of a multimedia file corresponding to the multimedia instance and an audio video encoding format of the multimedia file sending the metadata to a client so that the client creates a player and a decoder according to the type of the multimedia file and the audio video encoding format of the multimedia file and pushing multimedia data corresponding to the multimedia instance that is not shut down to the client so that the client decodes the multimedia data by using the decoder and plays the decoded multimedia data in the player.

For a more detailed working principle reference may be made to those in Embodiments 4 and 6 but the working principle is not limited thereto.

As can be seen from the above if the technical solution in this embodiment is applied during a disconnection of a user a server to which the computer system is installed automatically stores metadata of a multimedia instance that is not shut down by the user before the disconnection therefore when the user logs in to a virtual desktop service again the server may acquire according to an identifier of the user the metadata of the multimedia instance that is not shut down by the user before the last disconnection the metadata at least includes information about a type of a multimedia file corresponding to the multimedia instance that is not shut down before the last disconnection and an audio video encoding format of the multimedia file so that the server sends the metadata to a client so as to restore at the client creation of a decoding topological structure and a player corresponding to the multimedia instance in addition the server sends to the client multimedia data of the multimedia instance that is not shut down so that after receiving the multimedia data the client may use the created decoding topological structure to perform data decoding and then play the multimedia data in the player. In this way the client can play the multimedia instance that is not shut down by the user before the last disconnection.

In the prior art if restoration of multimedia redirection fails and multimedia data fails to be obtained when a user logs in again after interruption unexpectedly occurs in a last login a problem such as a blank or a black screen occurs in a client. In contrast when the technical solution in this embodiment of the present invention is applied it helps to ensure that when a user logs in again a server locally stores data corresponding to a multimedia instance that is not shut down by the user before a last disconnection so that metadata of the multimedia instance that is not shut down by the user before the last disconnection can be acquired when the user logs in again and the server automatically pushes to a client multimedia data and the metadata of the multimedia instance that is not shut down by the user before the last disconnection so as to ensure that the user can locally resume playing of multimedia being played during the last disconnection thereby implementing continuous playing of the multimedia without the occurrence of a situation such as a white screen or a black screen and helping to significantly improve experience of multimedia application of the user.

This embodiment is especially applicable to the following application scenario in a multimedia redirection process after a server acquires multimedia data of a multimedia instance the server actively pushes the multimedia data to a client and the client performs data processing such as decoding on the received multimedia data and then performs multimedia playing.

In Embodiments 9 and 10 the communications line between the memory and the processor may be but is not limited to a bus or another communications wire. The communications wire may be but is not limited to being implemented by an integrated circuit.

The described apparatus embodiment is merely exemplary. The units described as separate parts may or may not be physically separate and parts displayed as units may or may not be physical units may be located in one position or may be distributed on a plurality of network units. A part or all of the modules may be selected according to actual needs to achieve the objectives of the solutions of the embodiments. A person of ordinary skill in the art may understand and implement the embodiments of the present invention without creative efforts.

Based on the foregoing descriptions of the embodiments a person skilled in the art may clearly understand that each implementation manner may be implemented by software in addition to a necessary general hardware platform or by hardware. Based on such an understanding the foregoing technical solutions essentially or the part contributing to the prior art may be implemented in a form of a software product. The software product is stored in a computer readable storage medium such as a read only memory ROM random access memory RAM a hard disk or an optical disc and includes several instructions for instructing a computer device which may be a personal computer a server a network device or the like to perform the methods described in the embodiments or some parts of the embodiments.

The foregoing implementation manners are not intended to limit the protection scope of the technical solutions. Any modification equivalent replacement and improvement made without departing from the spirit and principle of the foregoing implementation manners shall fall within the protection scope of the technical solutions.

