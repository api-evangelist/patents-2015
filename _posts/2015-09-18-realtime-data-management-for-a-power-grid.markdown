---

title: Real-time data management for a power grid
abstract: A real-time data management system, a system, method, apparatus and tangible computer readable medium for accessing data in a power grid are described for controlling a transmission delay of real-time data delivered via a real-time bus, and for delivering real-time data in a power grid. A unified data model covering various organizations and various data resource is described. Further, a management scheme for clustered data is described to provide a transparent and high speed data access. The solutions described may efficiently manage the high volume of real-time data and events, provide data transmission with a low latency, provide flexible extension of both the number of data clusters and the number of databases to ensure high volume data storage, and achieve a high speed and transparent data access. Additionally, rapid design and development of analytical applications, and the near real-time enterprise decision-making business may be enabled.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09501555&OS=09501555&RS=09501555
owner: Accenture Global Services Limited
number: 09501555
owner_city: Dublin
owner_country: IE
publication_date: 20150918
---
This application is a divisional of U.S. patent application Ser. No. 13 777 688 filed on Feb. 26 2013 which is a continuation of Patent Cooperation Treaty PCT patent application Serial No. PCT CN2012 084026 filed on Nov. 2 2012.

Embodiments of the present disclosure generally relate to the field of power grid management technology and more particularly to a real time data management system a system method apparatus and tangible computer readable medium for accessing data in a power grid a system method apparatus and tangible computer readable medium for controlling a transmission delay of real time data delivered via a real time bus and a system method apparatus and tangible computer readable medium for delivering real time data in a power grid.

Various industries have networks associated with them. One such industry is the utility industry that manages a power grid. The power grid may include one or all of the following electricity generation electric power transmission and electricity distribution. Electricity may be generated using generating stations such as a coal fire power plant a nuclear power plant etc. For efficiency purposes the generated electrical power is stepped up to a very high voltage such as for example 345K Volts and transmitted over transmission lines. The transmission lines may transmit the power long distances such as across state lines or across international boundaries until it reaches its wholesale customer which may be a company that owns the local distribution network. The transmission lines may terminate at a transmission substation which may step down the very high voltage to an intermediate voltage such as for example 138K Volts . From a transmission substation smaller transmission lines such as for example sub transmission lines transmit the intermediate voltage to distribution substations. At the distribution substations the intermediate voltage may be again stepped down to a medium voltage such as for example from 4K Volts to 23K Volts . One or more feeder circuits may emanate from the distribution substations. For example four to tens of feeder circuits may emanate from the distribution substation. The feeder circuit is a 3 phase circuit comprising 4 wires three wires for each of the 3 phases and one wire for neutral . Feeder circuits may be routed either above ground on poles or underground. The voltage on the feeder circuits may be tapped off periodically using distribution transformers which step down the voltage from medium voltage to the consumer voltage such as for example 120V . The consumer voltage may then be used by the consumers.

One or more power companies whose main responsibility is to supply reliable and economic electricity to their customers. These power companies may manage the power grid including planning operation and maintenance related to the power grid. However the management of the power grid is often inefficient and costly. For example a power company that manages the local distribution network may manage faults that may occur in the feeder circuits or on circuits called lateral circuits which branch from the feeder circuits. The management of the local distribution network often relies on telephone calls from consumers when an outage occurs or relies on field workers patrolling and monitoring the local distribution network.

Power companies have attempted to upgrade the power grid to be a smart grid by applying the state of the art IT and power engineering technologies. With the development of the smart grid a large number of utilities are deploying Advanced Metering Infrastructure AMI Phase Measurement Unit PMU and other online monitoring equipment. These equipments provide different data to applications and may adhere to different latency requirements. For example the PMU has a data frequency of 20 to 50 milliseconds a Supervisory Control And Data Acquisition Energy Management System SCADA EMS has a data frequency of 1 to 5 seconds the AMI has a data frequency of 5 to 15 minutes device monitoring system has a data frequency of 1 to 5 minutes and an event should be notified immediately when the event happens. Moreover each of devices will produce a large amount of data This means that a large amount of data is generated from different originations business units and systems.

In view of the above the present disclosure presents a real time data management scheme to at least alleviate or mitigate at least part of the above problems in the prior art.

According to a first aspect of the present disclosure there is provided a system for accessing data in a power grid. The system may comprise at least one processor and at least one memory storing computer executable instructions wherein the at least one memory and the computer executable instructions are configured to with the at least one processor cause the system to create based on a request for accessing data an execution unit for the request wherein the data are divided based on their characteristics into a plurality of data clusters and stored in different types of databases locate a position of the data using a global identifier for a measurement point with which the data are associated and access the data by the execution unit based on the request.

According to a second aspect of the present disclosure there is provided a system for controlling a transmission delay of real time data delivered via a real time bus. The system may comprise at least one processor and at least one memory storing computer executable instructions wherein the at least one memory and the computer executable instructions are configured to with the at least one processor cause the system to monitor status of a data buffer for the real time bus in which the real time data are buffered for delivery and adjust data consumption speed based on the status of the data buffer to control the delay of the real time data.

According to a third aspect of the present disclosure there is provided a system for delivering real time data in a power grid. The system may comprise at least one processor and at least one memory storing computer executable instructions wherein the at least one memory and the computer executable instructions are configured to with the at least one processor cause the system to monitor traffic status of a plurality of real time buses that include a real time data bus for delivering the real time data and another real time bus and assign based on the traffic status of the real time buses to deliver a portion of the real time data on the another real time bus.

According to a fourth aspect of the present disclosure there is provided a method for accessing data in a utility grid. The method may comprise creating based on a request for accessing data an execution unit for the request wherein the data are divided based on their characteristics into a plurality of data clusters and stored in different types of databases locate a position of the data using a global identifier for a measurement point with which the data are associated and accessing the data by the execution unit based on the request.

According to a fifth aspect of the present disclosure there is provided a method for controlling a transmission delay of real time data delivered via a real time bus. The method may comprise monitoring status of a data buffer for the real time bus in which the real time data are buffered for delivery and adjusting data consumption speed based on the status of the data buffer to control the delay of the real time data.

According to a sixth aspect of the present disclosure there is provided a method for delivering real time data in a power grid. The method may comprise monitoring traffic status of a plurality of real time buses that include a real time data bus for delivering the real time data and at least one another real time bus and delivering based on the traffic status of the real time buses a portion of the real time data on the another real time bus.

According to a seventh aspect of the present disclosure there is provided an apparatus for accessing data in a power grid wherein the data are divided based on their characteristics into a plurality of data clusters and stored in different types of databases. The apparatus may comprise a data clustering management server module configured to create based on a request for accessing data an execution unit for the request and destroy the execution unit based on disclosure of the request a data clustering management configuration module configured to locate a position of data using a global identifier for a measurement point with which the data are associated and the execution unit dynamically created for the request and configured to access the data in the position of data based on the request and provide the result for the request.

According to an eighth aspect of the present disclosure there is provided an apparatus for controlling a transmission delay of real time data delivered via a real time bus. The apparatus may comprise a status monitor module configured to monitor status of a data buffer for the real time bus in which the real time data are buffered for delivery and a speed adjustment module configured to adjust data consumption speed based on the status of the data buffer to control the delay of the real time data.

According to a ninth aspect of the present disclosure there is provided an apparatus for delivering real time data in a power grid. The apparatus may comprise a bus monitor module configured to monitor traffic status of real time buses that include a real time data bus for delivering the real time data and another real time bus and a balance engine module configured to assign based on the traffic status of the real time buses the another real time bus to deliver a portion of the real time data to balance loads between the real time buses.

According to a tenth aspect of the present disclosure there is provided a real time data management system for a power grid. The system may comprise a data collection module configured to collect data in real time from various data sources a data model module configured to provide a unified data model covering various originations and various data sources for the system a data process module configured to process the collected data a data clustering management module configured to divide data based on their characteristics into a plurality of data clusters store them in different types of databases pursuant to data clustering configuration rules and provide an access to data in the different data cluster a data access service module configured to provide data access service management to clients an event integration and process module configured to integrate and process associated events of the power grid and analyze and predict healthy status of the utility gird based on the associated events and a system management module configured to provide an overall management on the modules in the system.

According to an eleventh aspect of the present disclosure there is provided a tangible computer readable medium having a plurality of instructions executable by a processor to access data in a power grid. The tangible computer readable medium may comprise instructions configured to perform steps of the method according to the fourth aspect of the present disclosure.

According to a twelfth aspect of the present disclosure there is provided a tangible computer readable medium having a plurality of instructions executable by a processor to control a transmission delay of real time data delivered via a real time bus. The tangible computer readable medium may comprise instructions configured to perform steps of the method according to the fifth aspect of the present disclosure.

According to a thirteenth aspect of the present disclosure there is provided a tangible computer readable medium having a plurality of instructions executable by a processor to deliver real time data in a power grid. The tangible computer readable medium comprises instructions configured to perform steps of the method according to the sixth aspect of the present disclosure.

With embodiments of the present disclosure it may efficiently manage the high volume of real time data and events achieve a high speed and transparent data access support the flexible extension of both the number of data clusters and the number of databases and ensure data transmission with a low latency. Additionally it also enables a rapid design and development of analytical applications and support the near real time enterprise decision making business.

Hereinafter embodiments of the present disclosure will be described with reference to the accompanying drawings. In the following description numerous specific details are set forth in order to provide a thorough understanding of the embodiments. However it is apparent to the skilled in the art that implementation of the present disclosure may not have these details and the present disclosure is not limited to the particular embodiments as introduced here. On the contrary any arbitrary combination of the following features and elements may be considered to implement and practice the present disclosure regardless of whether they involve different embodiments. Thus the following aspects features and embodiments are only for illustrative purposes and should not be understood as elements or limitations of the appended claims unless otherwise explicitly specified in the claims. Additionally in some instances well known methods and structures have not been described in detail so as not to unnecessarily obscure the embodiments of the present disclosure.

The embodiments of the present disclosure are intended to efficiently manage data constantly increasing in the power system. In view of that the present inventors propose a new architecture for real time data management system which is intended to efficiently manage a high volume of data in the power grid including such as data collection data processing data storage data accessing complex event processing global measurement point management etc.

In the real time data management system of the present disclosure a unified data model covering various organizations and various data resources and a management scheme for clustered data are designed to provide a transparent and high speed data access. Besides multi bus collaboration and bus performance optimization approaches are utilized to improve efficiency and performance of the buses. The real time data management system may also include an event integration and complex event process component to provide a credible prediction on status of the power grid. Hereinafter the architecture for the real time data management system and main components thereof will be described in detail.

First reference is made to to describe an overall architecture of the real time data management system according to an example embodiment of the present disclosure.

As illustrated in the overall architecture may comprise system data source and enterprise wide analytical applications . The system may collect data from data source over a real time event bus and real time data bus and provide data services for example for enterprise wide analytical applications over a data service bus which may be also called as operational service bus for further analytical purpose such as device loading analysis device conditional maintenance system stability analysis etc. The data source may include any source from which data can be acquired or collected. Examples of the data source may include various sensors monitoring equipments management unit management system or any other device or system. As an example data source may include SCADA EMS AMI device monitoring equipments PMU power quality monitoring equipments etc. The enterprise wide analytical applications can be any commercial or custom analytics applications that are primarily operating from the data provided by the system .

In the architecture illustrated in there may be for example three buses a data service bus a real time event bus and a real time data bus . The data service bus serve mainly for communicating with applications outside the system while the real time event bus and the real time data bus are used for the internal communication in the system . Particularly the data service bus may also be called as an operational service bus which may provide data service to the utility back office applications such as enterprise wide analytical applications . The real time event bus is a bus dedicatedly for event processing over which may be transmitted various events occurring in the industry system. Events may refer to any occurrence of interest in the industry system. Thus events may include undesired or abnormal conditions occurring in the industry system. On the other hand events may include normal conditional information as well. The real time data bus is a high speed bus over which data collected from the data source can be transmitted to the system various modules in the system .

Referring back to the system may further comprise a data model module a data clustering management module a bus collaboration and optimization module and an event integration and process module data access service module data process module data collection module and platform management module .

The data model module may store a data model designed in the present disclosure to provide a unified data model covering various originations for example power transmissions electricity distribution customers etc. and various data sources for example SCADA EMS AMI device monitoring equipment etc. in the system. With the data model various data from different data source can be managed attribute definitions for all data objects can be unified and object oriented approach can be used in information integration. Therefore a uniform and centralized data management may be achieved. Additionally a unique global measurement point management may be implemented on an enterprise wide basis.

The data clustering management is a module mainly for managing a high volume of data in the real time system. The data clustering management module may divide the data based on their characteristics into a plurality of data clusters. These data clusters may include for example a real time data cluster a sub real time data cluster event and other data cluster etc. Then the data can be stored in different types of databases such as real time database relational database pursuant to data clustering configuration rules. Besides the data clustering management module may be responsible for providing an access to data in the different data cluster.

The bus collaboration and optimization module may perform multi bus collaboration and bus performance optimization. In the present disclosure data writing flow data access flow and event data flow are all separate and the bus collaboration and optimization module may perform optimal procedures and rules to achieve a low latency of data delivery and provide bus load dynamic balancing by using a flexible on demand multi bus configuration.

The event integration and process module may provide event related services which will integrate and process associated events of the power grid from various different events and provide analysis and prediction such as health prediction on the utility gird based on the associated events.

The data access service module is to provide data access service management to clients. As illustrated it may include the following modules WebService CIS Component Integration Services SQL Structured Query Language and UAPI Universal Application Programming Interface . Other such components may also be included as a part of the data access service module . These components may provide high speed and transparent data access services for various applications based on different data service technologies. On one hand the data access service module may translate data access requests in various formats from various applications into a uniform internal format for processing by the data clustering management . On the other hand the data access service module may convert results for data access request into a format which can be interpreted by corresponding applications. Moreover the data access service module may also perform access management on data access to ensure clients access the database according to their different privileges.

The data process module may be responsible for processing data such as performing data conversion data quality check and any other proper data process.

The data collection module may be configured to collect the data from the data source which can include a plurality of adapters respectively used for various data sources. The adapters may collect the data from respectively data sources and convert the data in different format into a uniform format for facilitating subsequent processing and management. The collected data can be transmitted dependent on the characteristic of the data over the real time data bus or the real time event bus to respective modules for subsequent processing such as analysis storage etc.

The platform management module may provide an overall management on the modules in the system. In the system there may be a number of modules and the platform management module will monitor the modules to ensure their normal operations.

The IT environment of the architecture is SOA compatible. SOA Service Oriented Architecture is a computer system architectural style for creating and using business processes packaged as services throughout their lifecycle. The SOA also defines and provisions the IT infrastructure to allow different applications to exchange data and participate in business processes. However the use of SOA in the present disclosure is optional.

It should be appreciated that though has depicted the above modules more modules may be added to achieve more functionality some modules may be removed to omit a corresponding functionality or some modules may be substituted by others to provided substitution functionalities. Besides it should be noted that there are illustrated three buses however fewer or greater numbers of buses may be used to carry various data in the power grid.

In the present disclosure there is designed a unified data model which will be described with reference to which schematically illustrate a data model according to an example embodiment of the present disclosure.

As illustrated in which schematically illustrates a diagram of a data model according to an example embodiment of the present disclosure the data model covers various originations for example various elements and objects in transmission network distribution network and customer domains such that it can provide a uniform and centralized data view to various data in the power grid. Additionally data from different data sources are managed and the attribute definitions of all data objects are unified. As illustrated in in the data model data from various data sources for example SCADA EMS device monitoring and static parameters are covered however in a conventional solution these data are distributed in different departments. Moreover in such data model it can use object oriented approach to manage all attributes of an object which may provide an easy and convenient management on the data. Beside in the data model it may define more new attributes such as Bottom Oil Temperature for a transformer as a measurement type. These attribute definitions can be used in various business units which would provide a unified data view for all applications. With such a data model it can achieve a good scalability and applications can efficiently obtain information that they need.

Additionally in the data model in the present disclosure a global measurement management scheme may be adopted. For all applications the global measurement management will provide a unique global ID identifier to each measurement point. The global ID is an identifier for identifying a measurement point which is unique through the whole system and using such a unique global ID it can provide applications a quick and easy access to measurement points without learning specific database and specific storage positions of data.

For a purpose of illustration in is illustrated an example design of the global measurement point management configuration which comprises configuration information on measurement points based on a global management. As illustrated the table may include a unique global point identifier ID i.e. measurement point ID PSRID i.e. ID of the power device with which the measurement point are associated which can be inherited from CIM Common Information Model and measurement type MEASTYPE which denote type of the measurement. For example the MEASTYPE can have a value of P representing active power Q representing reactive power T representing temperature I representing current and so on. Additionally the data table may include DATASOURCE the source from which the data are collected Value Type i.e. the type of measurement values UNIT i.e. the unit of the measurement value and AOR which denotes a set of groups in which users are allowed to access the information related to the measurement point.

Particularly as illustrated the data table may further include a cluster ID DCMID and in cluster ID in DCM INDCMID of a measurement point. The cluster ID may be also called as data clustering management ID which is an identifier for identifying a data cluster to which the measurement point belongs. The in cluster ID is an identifier for identifying a position of the measurement point in the data cluster.

From the table as illustrated in it can be seen that the global data management can not only provide data queries based on the global measurement point ID but also provide data queries through PSRID and or measurement type. Actually the PSRID can be the unified number of the power resource in the electrical utility through which an enterprise wide application can obtain all measurements related to a power source. By further specifying a certain measurement type the enterprise wide application can obtain a specific measurement related to the power source which belongs to the measurement type.

For a purpose of illustration schematically illustrates an example of data model application. As illustrated rows to in right top table respectively illustrate records on measurement points regarding active power reactive power current and bottom oil temperature. Taking the data for active power as an example the record may include a measurement point global ID of 10001 a PSRID of fd a.z01.sst01.fd001 a measurement type of P a DCMID of 1 an INDCMID of 1 and a data source of SCADA. Each application can use the global ID to fast locate a position of the data to quickly find the desired data. For example by means of the global IDs 100001 and 100002 it can easily obtain values of measurement points and illustrated in a bottom right diagram . Therefore it will facilitate quick access of these data to use such a table which will be described in detail hereinbelow.

With such a unified data model covering transmission network distribution network and customer domains it might greatly improve efficiency of building across department enterprises wide applications and the use of the global IDs may also provide a quick and easy access to the high volume of data.

In the current intelligence network there are very large amounts of data and usually two kinds of database technologies i.e. real time DB relational DB are used to handle the real time data. However both of them have great performance issues in dealing with rapidly increasing grid operational data. A real time database has a limited capacity but utility real time data is usually increasing fast. By contrast a relation database has performance bottlenecks of handling reading and writing of second level real time data specifically when accessing the history data. Moreover the streaming data in the real time system will quickly fill databases to their maximum capacity. Besides as mentioned in the background different types of data provide different data to different applications and should meet to different latency requirements. Therefore utilities are facing a new challenge with storing and access of the high volume of data.

To this end in the management system of the present disclosure there is provided a data clustering management solution to efficiently manage the large amount of data.

In the present disclosure a data clustering approach is adopted based on which data will be clustered based on their characteristics. schematically illustrates a diagram of data clustering principle according to an example embodiment of the present disclosure. As illustrated the collected data are input to data clustering manager . The data clustering manager will cluster data based on partition rules or data clustering rules stored in data partition rule module . The data will be divided into different data clusters based on their characteristic so as to be stored in different types of databases. That is to say different types of data are managed using different types of databases. As illustrated the data can be divided into three data clusters i.e. a real time data cluster a sub real time data cluster and events and other data cluster . The data in the real time data cluster can be stored in real time databases RTDB dedicatedly for the real time data cluster the data in the sub real time data cluster can be stored in real time databases RTDB dedicatedly for the sub real time data cluster and the data in the event and other data cluster can be stored in relational databases RDB dedicatedly for that data cluster. For a purpose of illustration an example of data clustering rule configuration is shown in the following table 1.

From table 1 it can be seen that data collected form PMU SCADA EMS and Device Monitoring which have a latency that ranges from milliseconds to seconds may be divided into the real time data cluster and stored in different real time databases dedicatedly for the data cluster dependent on their data sources data from AMI which have a latency that ranges from minutes to hours may be divided into the sub real time data cluster to store in different real time databases dedicatedly for the data cluster based on their data sources and similarly AMI events and customer events such as outage events faulty events alarms etc. or other types of data may be divided into the event and other data cluster to store in relational databases for that data cluster according to their data sources.

Different data might have different characteristics and different application purposes and hence it is beneficial if data are clustered based on data partition rules or data clustering rules so as to manage these data using different technologies based on their characteristics. Additionally the data clustering rules may be extensible that is to say it may be reconfigured as required. For example with the increasing of data it may add more databases for a data cluster and it may also add new types of data cluster and even new types of databases to provide a more detailed data management. Therefore such a data clustering scheme is very flexible has a good scalability and may well adapt to the fast increase of data in power system.

For clustered data in the present disclosure there is further presented a high speed and transparent data access scheme which will be detailed with reference to .

The apparatus can additionally comprise a cluster data configuration module . The cluster data configuration module may be responsible for locating a position of the data requested by the client for example using a global identifier for a measurement point with which the data are associated so as to provide a high speed access to the high volume of data. It can obtain data access parameters for the request using the global identifier for the measurement point and in memory measurement point mapping indexes and the data access parameters can be used by the execution unit to access the data directly. Particularly a data cluster identifier and an in cluster identifier of the measurement point may be first obtained from a global measurement point management configuration using the global identifier for the measurement point. Then the cluster identifier and the in cluster identifier may be used to find a database identifier of a database storing information on the measurement point and an in database identifier of the measurement point in an in memory data clustering management point configuration. The database identifier is an identifier for identifying the database in which the information on the measurement point is stored and the in database identifier is an identifier for identifying a position of the measurement point in the database. To connect to the database the database link information such as link handler in a database connection pool can be found using the database identifier. In such a way for either a real time database or a relational database the execution unit can quickly and easily obtain data by input the database link information and the in database ID.

Alternatively the apparatus can further comprise a DCM client proxy module which will uniformly handle requests from clients so as to provide a unified and transparent data services for all requests from clients. The proxy module may be configured to receive a request for accessing the data register the request to the data clustering management server module and return the result for the request provided by the execution unit to clients. Also an optional database connect pool management module may be provided which may manage database connections for the different types of databases in a connection pool and dynamically adjust a number of the database connections based on access requirements from clients so as to provide a high speed access to the high volume.

First at step S as illustrated in an execution unit is created for a request for accessing data to respond to the request form a client.

If a client needs to access data for example read and or write data it will send a request for accessing data to the DCM S in . The DCM proxy module receives the request converts the request into a uniform internal format and then registers the request to the DCM server manager S in . Upon the request being registered to the DCM server manager the DCM server manager may create a new execution unit a new instance for execution unit also called as a server instance for the request to respond the request S in .

The generated execute unit will provide a response to the DCM client proxy to inform the DCM client proxy that the DCM client proxy can communicate with the execution unit created for the request S in . The DCM client proxy transmits the request to the created execute unit S in . Based on the request the execute unit will perform data access.

In the present disclosure in the data model it uses the global measurement point management scheme and thus when the client requests a measurement point data it will specify the PSRD of a power source with which the measurement point is associated and the measurement type. with these information it may directly obtain from the data model the global measurement point ID see by which it can fast locate a position of the data. Therefore in an embodiment of the present disclosure at step S it can directly locate a position of the data using a global identifier for a measurement point with which the data are associated for using by the execution unit to access data. Particularly after receiving the request from the DCM client proxy the DCM server manager ask the data clustering configuration module to provide data access parameters for the request and meanwhile information on the global identifier for the measurement point which may be contained in the request from the client may be provided to the data clustering configuration module S in . To achieve a better data access performance measurement point mapping indexes are built in memory. That is to say an in memory measurement point mapping indexes for example in a form of measurement point configuration table are built to maintain relationship between information on database ID and in database ID associated with a measurement point and cluster ID and in cluster ID of a measurement point in memory and the measurement point mapping indexes may include further information about the measurement point such as the type of value related to a measurement point. In this way by using the in memory measurement point mapping indexes and the global identifier and based on an optimization search approach it will be easy and quick for the data clustering configuration module to find data access parameters.

Specifically the data clustering configuration module first obtains a cluster ID DCMID of a data cluster to which the measurement point belongs and an in cluster ID INDCMID of the measurement point by look up a global measurement point management configuration for example the data table as illustrated in using the global identifier for the measurement point. Then by means of the cluster ID DCMID and in cluster ID INDCMID it may obtain a database ID of a database storing information on the measurement point and an in database ID of the measurement point from in memory data clustering management point configuration using the cluster identifier and the in cluster identifier. The in memory measurement point mapping indexes can be a DCM measurement point configuration table built in the memory and table 2 shows an example design of the DCM measurement point configuration table.

From table 2 it is clear that it is easy to obtain database ID DBID and in database ID INDBID by using the cluster ID DCMID and the in cluster ID INDCMID . After that database link information in a database connection pool such as the database link handler will be obtained using the database identifier. Table 3 shows an example DCM DB connection manager in which are stored the database link information.

The data access parameters comprising database link information and the in database ID are returned from the data clustering configuration module to the execution unit created for the request S in . To achieve a high speed data access a dynamic array is designed to manage the measurement point position such as DBID and INDBID. Information on those frequently used DBID and INDBID will be put into the dynamic array to expedite the data access.

Using database link information and the in database ID the execution unit will quickly and easily access data from either a real time database or a relational database via a connection maintained by the database connection pool S and S in .

In the present disclosure there is also employed a connection pool management scheme. As illustrated in a connection pool manager will maintain dynamic connections to each database and manage the database drives such as JDBC ODBC or API etc. Particularly the connection pool manger will establish the connections with each database and increases decreases connections dynamically based on clients access requirements. Moreover the connection pool manager may manage and maintain object status in connection pool and connect disconnect and reconnect to the databases if necessary. For a purpose of illustration DCM DB configurations Parameters are illustrated in table 4.

Using this information the execution unit can easily connect to a database and obtain the access required by the client. Results for data access will be provided to the execution unit corresponding to the request S and S in . After combination the results will be provided to the DCM client proxy S in . The results may be converted into an appropriate format to send to the client as a response S in .

In operating the DCM server manager will monitor and detect the clients status destroy the execute unit instance as soon as the client closes the request.

Therefore in the present disclosure an execution unit for accessing database will be created dynamically for each request from a client and closed once the request is finished. That is to say in a case there are a great number of requests there will be execution units corresponding to respective requests as illustrated in and thus it can provide a high speed data access service to clients.

However in another embodiment of the present invention two or more execution units may be created for a single request and in such a way the data access speed may be further increased which may bring more performance gains.

Additionally it should be noted that the term accessing or access used herein may not only mean the writing and reading of data from clients but also may mean any operations related to databases in data collecting data processing storing etc.

In the present disclosure to handle the large number of data there are presented optimization schemes to achieve the low latency of data transmitting. Particularly it may use separate data writing flow data access flow and event data flow and at the same time provide a flexible on demand multi bus configuration for dynamically balancing bus loads.

One of optimization schemes is to optimize message size to balance throughput and latency. It is found that a larger message size will achieve a higher throughput which means that buffering real time data for batch transmission might achieve a higher throughput. On the other hand however the real time data must be delivered before its deadline within the tolerable latency and should not be buffered too long. Through a large number of tests the following results on bus performance are obtained which is given in Table 5.

From table 5 it can be seen that with the increasing of message size throughput become higher however the throughput will decrease when the message size reach a certain value 100K as shown .

Therefore an optimal configuration scheme is designed which stipulates that a message size for data should be selected based on the mapping between message size and throughput such that a total delay of data meets a delay requirement. In other words it should satisfy the following two conditions 1 the selected message size should achieve a throughput larger than the throughput requirement and 2 the total delay should be lower than the deadline for the real time data to be sent. The two conditions can be represented by the following formulas and

M denotes a mapping between message size and throughput for example as shown in the table 4 r denotes a real time data generation speed bytes s d denotes the deadline for the real time data to be sent T denotes a buffering delay e denotes a network delay and S denotes a throughput requirement.

With such an optimization configuration the message size is optimized and the latency and the throughput can be well balanced.

In the present disclosure it uses a separate dedicated event bus to handle a high volume of events that may dramatically increase so as to guarantee both performance and availability under the condition of event outburst which means the grid is in a contingency state. However when the power grid is operating in normal state there is no event to be transferred. Thus the event bus is possible to be used to balance loads of the real time data bus. Besides the service data bus or the operational bus may also be used for a similar purpose.

In the present disclosure there is proposed an apparatus for delivering real time data to dynamically allocate a small portion of real time data traffic to real time event bus and or operational bus when they are not busy and hence reduce the burden on real time data bus. The apparatus for delivering the real time data can be a part of the bus collaboration and optimization module as illustrated in .

The apparatus may include a status monitor a balance engine and an agent . The status monitor may be configured to monitor the current status of monitor traffic status of real time buses such as byte rate pending message etc. The real time buses to be monitor may comprise at least a real time data bus for delivering the real time data and another real time bus which can be the real time event bus and or the operational bus.

The balance engine is configured to assign based on the traffic status of the real time buses the another real time bus to deliver a portion of the real time data to balance loads between the real time buses. That is to say if the real time event bus or the operational bus assign is idle it will assign the bus to carry part of the real time data service.

The agent is configured to provide to a transparent operation to DCM and thus may be optional. The agent may handle bus assign request from DCM and send back a response.

In delivering the real time data message size for data can be further optimized and hence in the present disclosure the apparatus for delivering the real time data can further comprise a message size optimization module configured to determine a message size for the real time data based on a mapping between message size and throughput such that a total delay of the real time data meets a delay requirement

Besides also schematically illustrates a flow chart of a method for delivering real time data in a power grid according to an example embodiment of the present disclosure. As illustrated first at step S traffic status of real time buses is monitored. As mentioned above the monitored real time buses may include a real time data bus for delivering the real time data and at least one another real time bus and the another real time bus can include the real time event bus and or the operational bus.

Based on the traffic status of the real time buses the real time bus can be used to deliver a portion of the real time data to balance loads between the real time buses Step D .

In delivering the real time data a message size for the real time data may be determined based on a mapping between message size and throughput such that a total delay of the real time data may meet delay requirements. That is to say the data may be buffer for a little while to achieve a better throughput performance.

In such a way loads of real time buses may be determined dynamically and optimally based on their respective traffic status such that the loads can be well balanced among these buses.

As mentioned hereinabove the overall system of the present disclosure may be SOA compatible. In such a case a large number of service interactions that use interconnected infrastructure between various systems in an architecture can be enabled and added and many point to point integrations may be created. However these point to point integrations are difficult to maintain. Currently originations are moving toward SOA architectures which will host various deployed services and thus it is required to adopt an infrastructure service that could provide robust communication intelligent routing sophisticated translation and transformation of services. Therefore a real time data service bus such as Enterprise Message Service EMS bus may be utilized to provide common communication and integration services. Hereinafter for a purpose of illustration the EMS bus will be referenced to describe the embodiments of the present disclosure.

In conventional real time data delivering process it usually deploys one thread on the data consumer and one thread on the data producer. However in the high volume real time data delivering it is very likely to result in a mismatch between data consumption speed of the consumers on the EMS bus and the production speed of the data producer.

As shown in a data producer generates the data in real time. The data producer is a process capable of producing the real time data and it may be any data production process which may include for example data collection raw data preprocessing data encoding message encapsulation data uploading etc. The generated data will be uploaded to an EMS bus server which could provide robust communication and integration services. The EMS bus server will maintain a buffer to store the data uploaded by the data producer so as to buffer the generated real time data. A data consumer connects to the EMS bus server and downloads the data therefrom for consumption. The data consumer may be a process consuming data and it may be any data consumption process which include for example data downloading data decoding data processing etc. In the real time data system the data production and consumption processes must perform in a real time manner. In other words the latency from the data production to the data consumption must be sufficiently small to satisfy the QoS requirements. However a speed at which the data producer generates the data is usually much faster than a speed at which that the data consumer consumes the data and thus more and more data will accumulate in the buffer . This will bring a number of adverse effects. For example the buffering delays are very likely to increase which would cause the real time data to be delivered beyond their deadlines. Moreover in such a case the real time data buffered in bus server will quickly fill to its maximum capacity that might result in EMS bus server crash due to the data overflow.

Therefore it is important to mitigate the above mentioned problems. With this end in view there is proposed in the present disclosure a solution to control delays of the real time data delivered via a real time service bus so as to maintain the balance between the data production speed and the data consumption speed.

Hereinafter the method of controlling the delays of the real time data will be described in detail. The main concept of the method is to control the consumption speed according to volume of data buffer in the bus server. Reference is made to which schematically a method for controlling delays of real time data delivered via a real time service bus according to an embodiment of the present disclosure.

First as step S the status of the buffer on the real time service bus server is monitored so as to observe the current status of the buffer for buffering the real time data generated by the data producer. The current status of the buffer can be for example queue size of the data buffer. The queue size can be obtained by using APIs for the bus. For example for TIBCO EMS bus it can use a method to get the queue information in real time which is called getPendingMessageSize .

Then at step S data consumption speed is adjusted based on the status of the data buffer to control the delay of the real time data. The data consumption speed adjustment may be achieved for example by controlling a number of data consumption instances based on queue size of the data buffer. For example it may increase the data consumption instances in response to an increase in the queue size such that more data consumption instances can consume the real time data concurrently so as to increase the data consumption speed and reduce the data delay. On the other hand as mentioned hereinabove it may obtain a higher throughput to buffer data for batch transmission. Therefore when the queue size is decreased it may decrease the data consumption instances accordingly. In such a way the queue size of the data buffer can be maintained in a proper range that is to say the data delay can be guaranteed and meanwhile it can achieve a better throughput performance.

Although increasing the data consumption instances may facilitate data consumption it has been found that there is a limit value that may improve the data consumption speed. In other words the data consumption speed will not increase any more with the increase in the number of the data consumption instances if the number has reached the limit value. This is because data consumption process generally can be separated to two kinds i.e. parallelizable sub process and non parallelizable sub process. The parallelizable sub process means a process that can be performed concurrently and it may include for example data downloading data reading message decoding data mapping according to the predefined data model. The non parallelizable process is a process that can only be executed serially and is forbidden to be executed by a plurality of consumption instance concurrently. An example for the non parallelizable process is data writing operation on a database because only one writing operation is allowed to perform on the database at one time . For a parallelizable process increasing the number of the data consumer may increase the data consumption speed. However increasing the number of the data consumer cannot increase the data consumption speed for a non parallelizable process. In such a case it is beneficial to maintain the number of the data consumption instances if it has reached a limit value beyond which the data consumption speed will not be improved.

Therefore it may be beneficial to identify the non parallelizable sub processes and parallelizable sub processes. In the present disclosure the consumer program may be analyzed so that non parallelizable sub processes are distinguished from parallelizable sub processes.

In an embodiment of the present disclosure if data production speed is faster than non parallelizable processing speed in the consumer it will control data production speed because otherwise the system is unstable i.e. the queue size will reach its capacity limit and the EMS server could crash due to data overflow. When the data production speed is faster than data consumption speed but slower than the non parallelizable processing speed it needs to adjust data consumption speed. In a case that the data production speed is slower than the data consumption speed it means that one consumer thread is sufficient to consume all data produced in real time.

The processing speed can be obtained by estimating of the processing time of the parallelizable sub process and the non parallelizable sub process respectively. In an embodiment of the present disclosure the processing time of the parallelizable sub processes and the processing time of the non parallelizable sub processes can be estimated as average process time of the parallelizable sub processes and the non parallelizable sub processes respectively. Hereinafter an example of average process time recording is provided for a purpose of illustration.

During running of the processes the time instants t1 i t2 i and t3 i can be recorded wherein i denoted a time interval number t1 i denotes the time when the consumer thread starts to download message from the EMS bus server at ith time interval t2 i denotes the time when a non parallelizable process starts at ith time interval and t3 i denotes the time when the non parallelizable process returns at ith time interval.

Therefore the processing time for the whole process at the ith time interval may be represented as 1 1 1 

The processing time for the non parallelizable sub process at the ith time interval may be represented by 

Therefore the processing time for the parallelizable sub process at ith time interval may be represented as 

By obtaining time instants during a plurality of time intervals it can obtain average of the process time of both parallelizable sub processes and the non parallelizable sub processes. Therefore the average the processing time Tand Tcan be represented as 1 2 . . . . . . 1 2 . . . . . . 

Additionally it is advantageous to estimate the run time processing time which can be updated over time that is to say updating the average of run time processing constantly. In this case the processing time of the parallelizable sub processes and the processing time of the non parallelizable sub processes T i and T i may be represented as 1 1 avg 1 1 

wherein each of parameters and is a small constant which determines the degree to which the processing time in current time interval will affect the overall average time. The parameters and may have a similar value for example 0.02. However another value is possible and it is also feasible to assume different values for parameters and .

In this way it can learn the average processing time of parallelizable and non parallelizable parts of a consumer process which may be used to calculate how many consumer threads are needed to achieve the optimal message consumption speed.

Particularly if a parallelizable processing speed is higher than a non parallelizable processing speed i.e. 1 T 1 T it may create two consumption threads. In this case more consumption threads might not help to increase the overall data consumption speed. If the parallelizable processing speed is lower than the non parallelizable processing speed i.e. 1 T

Generally there might be several non parallelizable sub processes that fragment the consumer process. In this case it can only consider the longest non parallelizable sub process and other non parallelizable sub processes may be regarded as parallelizable . As illustrated in a consumer thread includes two different non parallelizable sub processes one being denoted by a block filled with oblique lines and the other being illustrated by a block filled with dots. In the figure it is shown the possible optimal way to exploit an opportunity of parallelization. The black block has shown that no process is being executed in the data consumption instance at that time because the non parallelizable sub process denoted by a block filled with oblique lines must be executed serially. Therefore it is clear that the extent to which the consumption threads can improve the consumption speed is determined by the longest non parallelizable sub process i.e. the sub process denoted by a block filled with oblique lines and the shorter one i.e. illustrated by the block filled with dots have no any impact on the overall consumption speed. Additionally it can also be seen that five threads have been able to achieve the maximum speed and more threads will not help to improve the performance.

The apparatus may comprise a bus monitor module and a speed adjustment module . The bus monitor module may be configured to monitor status of a data buffer for the real time bus in which the real time data are buffered for delivery. The speed adjustment module may be configured to adjust data consumption speed based on the status of the data buffer to control the delay of the real time data.

Additionally the apparatus may further comprise a sub process identification module and a process time recording module . The sub process identification module may be configured to identify a parallelizable sub process and a non parallelizable sub process of a data consumer. The process time recording module may be configured to obtain runtime average process time of the parallelizable sub process and runtime average process time of the non parallelizable sub process. The speed adjustment module is configured to control a number of the data consumption instances based on the runtime average process time of the parallelizable sub process and the runtime average process time of the non parallelizable sub process.

In an example detailed implementation of the present disclosure the speed adjustment module may initially first create n consumption threads i.e. data consumption instances where n can be a predetermined number and is less than M. These n consumption threads will download and process data independently. The non parallelizable sub process must be executed in series which can be achieved by synchronization mechanism. The bus monitor probes the size of queue in EMS bus every one second and keeps the track of the queue size over the time. The record about the queue size may be recorded as q1 q2 . . . qt qt 1 . . . . The number of contiguous increase of queue size may also be counted as c. When the counter exceeds a threshold denoted by H the speed adjustment module can determine to create a new consumption thread.

Moreover if the q 65 storage capacity the speed adjustment module may create a new thread regardless the value of the counter. If the number of consumption threads is larger than M no consumer thread will be created.

Additionally if a consumption thread stays idle for a long time and the number of total threads is larger than M the manager will destroy the thread. This operation will continue until the number of total consumption threads is equal to M.

In the present disclosure there is also provided an event integration and complex event process apparatus. In the present disclosure a real time event integration and management component are designed and new domain models based on CEP technology are designed to mine the correlated events from different data sources. Therefore the possible risk may be identified promptly and in turn utility enterprise business operation may be improved.

As illustrated in the event integration and complex event process apparatus may comprise event manager event processor and grid model .

The event manager is configured to integrate all events and provide publish subscribe event service to applications. Various applications such as operations applications maintenance applications customer service application etc. may subscribe to events that they concerns at the event manager. When the event manager receives events from various data source transmitted over the real time event bus it will integrate events related to each objects such meter transformer etc. and publish corresponding events to respective application based on their subscriptions.

The event processor is configured to define capture various events and correlate the events using pre designed analytical models real time network topology and real time service data. The event processor may comprise a CEP Complex Event Process engine a network topology module analytical model module and a check data obtainment module . When the CEP engine receives events from various data source transmitted over the real time event bus it will analysis the events based on domain models stored in the analytical model module network topology stored in the network topology module and make a confirmation based on the data obtained by the check data obtainment module . The network topology module stores dynamic connection relationship among objects in the power grid which are obtained in real time based on the real time data in the power grid and grid model which indicates static connection relationship among objects in the power grid stored the grid model module . Process result of events may be a prediction event that reports for example a faulty of feeder segment. The process result may be provided by the CEP engine to the event manager which in turn will publish the event to corresponding applications.

An example of complex event process according to the present disclosure will be described hereinafter with reference to which schematically illustrates a diagram of an example of domain models according to an example embodiment of the present disclosure 

Firstly if the CEP engine receives a report about a meter fault event from meter it can determine that the meter is fault. Then events associated with the fault event will be obtained for example those from other meters meters and which belong to a same distribution transformer as meter i.e. supplied by a same distribution transformer as meter . If the CEP engine finds from those associated events that there are more than 50 meters are fault it may infer that the transformer is suspended. Then CEP engine may perform a check it will use real time data of the transformer such as active power voltage etc. which is obtained by the check data obtained module over data service bus to get a confirmation. If the CEP engine determines the transformer is suspended then it will further search associated events. In a case that it finds that the distribution transformer and feeder segment i.e. S is also fault it can infer based on the network topology that the upstream feeder segment S might be fault and further check can be made through reviewing their real time data such as active power voltage etc. In such a way finally the root cause of power outage and outage scope can be identified rapidly.

With the architecture of the present disclosure it is capable of managing the data with different latency requirements and from different data sources efficiently may manage high volumes of time series real time data efficiently manage high volumes of event outburst. It may also manage the data based on the unified data model and provide a single version of the data set to all the applications. Furthermore it may provide a complex event process capability to capture complex relationships among the events generated by the devices network and electricity customers such that the potential risk in electric utility enterprise business operations can be identified.

Furthermore there is provided a tangible computer readable medium having a plurality of instructions executable by a processor to access data in a power grid the tangible computer readable medium comprises instructions configured to perform steps of the method according to any embodiments of method for accessing data in a power grid as presented in the present disclosure.

Furthermore there is provided another tangible computer readable medium having a plurality of instructions executable by a processor to control a transmission delay of real time data delivered via a real time bus the tangible computer readable medium comprises instructions configured to perform steps of the method according to any embodiments of method for controlling a transmission delay of real time data delivered via a real time bus as presented the present disclosure.

Furthermore there is provided a further tangible computer readable medium having a plurality of instructions executable by a processor to deliver real time data in a power grid the tangible computer readable medium comprises instructions configured to perform steps of the method according to any embodiments of method for delivering real time data in a power grid as presented the present disclosure.

Besides it should be noted that operations of respective modules as comprised in systems apparatuses substantially correspond to respective method steps as described in details. Therefore for detailed operations of respective modules reference may be made to related descriptions of the methods as made in the present disclosure.

Additionally schematically illustrates a general computer system which may represent any of the computing devices referenced herein. For instance the general computer system may represent in part or in its entirety the control center the head end the integrated network operations and management system NOMS the fault performance and configuration management FPCM module or any other computing devices referenced herein such as the end devices the meters the telemetry interface units TIUs the collectors and or any networked components such as routers switches or servers as discussed herein. The computer system may include an ordered listing of a set of instructions that may be executed to cause the computer system to perform any one or more of the methods or computer based functions disclosed herein. The computer system may operate as a stand alone device or may be connected e.g. using the network to other computer systems or peripheral devices.

In a networked deployment the computer system may operate in the capacity of a server or as a client user computer in a server client user network environment or as a peer computer system in a peer to peer or distributed network environment. The computer system may also be implemented as or incorporated into various devices such as a personal computer or a mobile computing device capable of executing a set of instructions that specify actions to be taken by that machine including and not limited to accessing the network through any form of browser. Further each of the systems described may include any collection of sub systems that individually or jointly execute a set or multiple sets of instructions to perform one or more computer functions.

The computer system may include a processor such as a central processing unit CPU and or a graphics processing unit GPU . The processor may include one or more general processors digital signal processors application specific integrated circuits field programmable gate arrays digital circuits optical circuits analog circuits combinations thereof or other now known or later developed devices for analyzing and processing data. The processor may implement the set of instructions or other software program such as manually programmed or computer generated code for implementing logical functions. The logical function or any system element described may among other functions process and or convert an analog data source such as an analog electrical audio or video signal or a combination thereof to a digital data source for audio visual purposes or other digital processing purposes such as for compatibility with computer processing or networked communication.

The computer system may include a memory on a bus for communicating information. Code operable to cause the computer system to perform any of the acts or operations described herein may be stored in the memory . The memory may be a random access memory read only memory programmable memory hard disk drive or any other type of volatile or non volatile memory or storage device.

The computer system may also include a disk solid state drive optical drive unit . The disk drive unit may include a non transitory or tangible computer readable medium in which one or more sets of instructions e.g. software can be embedded. Further the instructions may perform one or more of the operations as described herein. The instructions may reside completely or at least partially within the memory and or within the processor during execution by the computer system . The database or any other databases described above may be stored in the memory and or the disk unit .

The memory and the processor also may include computer readable media as discussed above. A computer readable medium computer readable storage medium machine readable medium propagated signal medium and or signal bearing medium may include any device that includes stores communicates propagates or transports software for use by or in connection with an instruction executable system apparatus or device. The machine readable medium may selectively be but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium.

Additionally the computer system may include an input device such as a keyboard or mouse configured for a user to interact with any of the components of system including user selections or menu entries of display menus. It may further include a display such as a liquid crystal display LCD a cathode ray tube CRT or any other display suitable for conveying information. The display may act as an interface for the user to see the functioning of the processor or specifically as an interface with the software stored in the memory or the drive unit .

The computer system may include a communication interface that enables communications via the communications network . The network may include wired networks wireless networks or combinations thereof. The communication interface network may enable communications via any number of communication standards such as Ethernet AVB 802.11 802.17 802.20 WiMax or other communication standards.

Accordingly the system may be realized in hardware software or a combination of hardware and software. The system may be realized in a centralized fashion in at least one computer system or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system or other apparatus adapted for carrying out the methods described herein is suited. A typical combination of hardware and software may be a general purpose computer system with a computer program that when being loaded and executed controls the computer system such that it carries out the methods described herein. Such a programmed computer may be considered a special purpose computer.

As described herein any modules or processing boxes are defined to include software hardware or some combination thereof executable by the processor . Software modules may include instructions stored in the memory or other memory device that are executable by the processor or other processors. Hardware modules may include various devices components circuits gates circuit boards and the like that are executable directed and or controlled for performance by the processor .

The system may also be embedded in a computer program product which includes all the features enabling the implementation of the operations described herein and which when loaded in a computer system is able to carry out these operations. Computer program in the present context means any expression in any language code or notation of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation b reproduction in a different material form.

By far the present disclosure has been described with reference to the accompanying drawings through particular preferred embodiments. However it should be noted that the present disclosure is not limited to the illustrated and provided particular embodiments but various modification may be made within the scope of the present disclosure.

Further the embodiments of the present disclosure can be implemented in software hardware or the combination thereof. The hardware part can be implemented by a special logic the software part can be stored in a memory and executed by a proper instruction execution system such as a microprocessor or a dedicated designed hardware. Those normally skilled in the art may appreciate that the above method and system can be implemented with a computer executable instructions and or control codes contained in the processor for example such codes provided on a bearer medium such as a magnetic disk CD or DVD ROM or a programmable memory such as a read only memory firmware or a data bearer such as an optical or electronic signal bearer. The apparatus and its components in the present embodiments may be implemented by hardware circuitry for example a very large scale integrated circuit or gate array a semiconductor such as logical chip or transistor or a programmable hardware device such as a field programmable gate array or a programmable logical device or implemented by software executed by various kinds of processors or implemented by combination of the above hardware circuitry and software for example by firmware.

While various embodiments of the disclosure have been described it will be apparent to those of ordinary skill in the art that many more embodiments and implementations are possible within the scope of the disclosure. Accordingly the disclosure is not to be restricted except in light of the attached claims and their equivalents.

