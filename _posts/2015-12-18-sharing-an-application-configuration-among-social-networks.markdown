---

title: Sharing an application configuration among social networks
abstract: A machine may generate and store a correlation among multiple identifiers of the user that enable access to an application through multiple systems. For example, the user may have a first identifier for using a first social network system, and a second identifier for using a second social network system, and the machine may generate and store a correlation between the first identifier and the second identifier. The machine may identify the user based on the first identifier and access a database that stores the correlation. The machine may then access a configuration of the application based on the correlation and configure the application in accordance with the configuration. The machine may generate a visual representation of the configured application, provide the visual representation to a device of a further user, receive an indication of an opinion of the further user on the visual representation, and present the indication.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09426212&OS=09426212&RS=09426212
owner: Zynga Inc.
number: 09426212
owner_city: San Francisco
owner_country: US
publication_date: 20151218
---
This application is a continuation of U.S. patent application Ser. No. 13 780 506 filed on Feb. 28 2013 which claims the priority benefit of U.S. Provisional Patent Application No. 61 605 602 filed Mar. 1 2012 and the priority benefit of U.S. Provisional Patent Application No. 61 605 917 filed Mar. 2 2012 the benefit of priority of each of which is claimed hereby and each of which is incorporated by reference herein in its entirety.

The subject matter disclosed herein generally relates to the processing of data. Specifically the present disclosure addresses systems and methods to facilitate sharing an application configuration.

One or more social networking services may be provided by one or more social network systems. Examples of such social network systems include Facebook Twitter or LinkedIn . One or more machines e.g. server machines may form all or part of a social network system and a machine within a social network system may manage one or more databases that store user data e.g. user profiles corresponding to users of a social networking service provided by the social network system.

Example methods and systems are directed to sharing an application configuration among social networks. Examples merely typify possible variations. Unless explicitly stated otherwise components and functions are optional and may be combined or subdivided and operations may vary in sequence or be combined or subdivided. In the following description for purposes of explanation numerous specific details are set forth to provide a thorough understanding of example embodiments. It will be evident to one skilled in the art however that the present subject matter may be practiced without these specific details.

An application e.g. a software application such as a game a word processor a spreadsheet or a calendar may be accessible to a user through any of multiple systems. Such an application may be considered as a multi system application or a multi platform application. For example a first system e.g. a social network system such as a social gaming system may provide a user interface for accessing the application e.g. as executed by one or more machines within the first system and a second system e.g. a different social network system may provide a different user interface for accessing the same application e.g. as executed by one or more machines within the second system . This may provide the user with a convenient way to access e.g. execute the application from the first system or from the second system as desired. For example the user may utilize multiple social network services e.g. Facebook Twitter and Google that each provide a user interface that enables access to the application e.g. a game . Hence the user may access the application e.g. play the game through any of the multiple social network services according to the user s needs desire or convenience.

The application may be configurable and the application may be executed e.g. instantiated launched invoked or run in any of multiple states. For example the application may be initially executed e.g. initialized initiated or reset in a default state e.g. an initial non customized starting or beginning state which may be considered as an initial configuration of the application. As another example the application later may be executing in a non default state e.g. a current customized subsequent or advanced state which may be considered as a non initial configuration.

Where the application is a game the initial configuration may specify a beginner level of difficulty e.g. level 1 a low or minimal level of experience in the game e.g. zero experience a small or nonexistent inventory of virtual items within the game e.g. no items or only default items a small or nonexistent degree of progress within the game e.g. no achievements attained or no prizes won an initial or default setting or preference of the game e.g. for a user interface or game controller or any suitable combination thereof. In contrast the non initial configuration may specify an advanced level of difficulty e.g. level 10 a moderate or high level of experience in the game e.g. 25 000 experience points a large inventory of virtual items within the game e.g. trophies medals treasure money or points a large degree of progress within the game e.g. many achievements attained or prizes won a modified or customized setting or preference of the game e.g. adjustments to a user interface or game controller or any suitable combination thereof. In other words the state of the game e.g. representing a gameboard may be defined by a game configuration that may vary as the game is played by the user e.g. from an initial game state to a current game state .

A system that supports the application may provide the user with access to the application through an identifier of the user e.g. a username or user ID . For example the system may authenticate the user by authenticating the identifier of the user e.g. verifying that the identifier enables access to the application . Based on e.g. in response to the authentication of the identifier the system may provide a user interface within which the user may access the application. Where the application is a game the system may provide the user interface in the form of a game environment e.g. a virtual world that is communicated to a device of the user where the game may be played by the user within the game environment. All or part of such a user interface may be provided as e.g. in the form of a web page a browser widget a client application a mobile app a remote graphical display a data feed or any suitable combination thereof.

A machine a server machine within a social network system may generate and store e.g. within a database of the social network system one or more correlations between various identifiers of the user that enable access to the application through various systems e.g. other social network systems . For example the user may have a first identifier for using a first social network system and a second identifier for using a second social network system and the machine may generate and store a correlation between the first identifier and the second identifier. The machine may identify the user based on the first identifier e.g. authenticate the user by receiving the first identifier and a corresponding password from a device of the user and access a database that stores the correlation e.g. a database within a different social network system . The machine may then access e.g. request to retrieve from the different social network system a configuration of the application based on the correlation and configure the application in accordance with the configuration. Accordingly the machine may use the correlation between the first and second identifiers to access and apply a configuration stored at a social network system different from its own.

Although the following discussion for purposes of clarity focuses on sharing a game configuration among social networks e.g. among social network systems a game configuration is simply an example of an application configuration. Likewise asocial network system is simply an example of a system e.g. a network based system . Hence the systems and methodologies discussed herein are applicable generally to sharing an application configuration among various systems that support e.g. provide a user with access to the application.

As shown in the social network machine the database or both may form all or part of the social network system which may support e.g. provide access to one or more applications e.g. a game . The social network system may be a social gaming system e.g. a first social gaming system that provides access to one or more games. Similarly the social network machine the database or both may form all or part of the social network system which may support e.g. provide access to one or more applications. The social network system may be a social gaming system e.g. a second social gaming system that provides access to one or more games e.g. a game that is also supported by the social network system . Likewise the social network machine the database or both may form all or part of the social network system which may support e.g. provide access to one or more applications. The social network system may be a social gaming system e.g. a third social gaming system that provides access to one or more games e.g. a game that is also supported by the social network system and the social network system .

Also shown in are users and . One or both of the users and may be a human user e.g. a human being a machine user e.g. a computer configured by a software program to interact with the device or any suitable combination thereof e.g. a human assisted by a machine or a machine supervised by a human . The user is not part of the network environment but is associated with the device and may be a user of the device . For example the device may be a desktop computer a vehicle computer a tablet computer a navigational device a portable media device or a smart phone belonging to the user . Likewise the user is not part of the network environment but is associated with the device . As an example the device may be a desktop computer a vehicle computer a tablet computer a navigational device a portable media device or a smart phone belonging to the user .

Any of the machines databases or devices shown in may be implemented in a general purpose computer modified e.g. configured or programmed by software to be a special purpose computer to perform the functions described herein for that machine. For example a computer system able to implement any one or more of the methodologies described herein is discussed below with respect to . As used herein a database is a data storage resource and may store data structured as a text file a table a spreadsheet a relational database e.g. an object relational database a triple store a hierarchical data store or any suitable combination thereof. Moreover any two or more of the machines illustrated in may be combined into a single machine and the functions described herein for any single machine may be subdivided among multiple machines.

The network may be any network that enables communication between machines e.g. social network machine and the device . Accordingly the network may be a wired network a wireless network e.g. a mobile or cellular network or any suitable combination thereof. The network may include one or more portions that constitute a private network a public network e.g. the Internet or any suitable combination thereof.

As shown in the database includes e.g. stores the configuration . The configuration may be stored in the database as corresponding to one or more identifiers of a user e.g. identifier of the user . The configuration may indicate a state e.g. a status condition or degree of progress of the application e.g. the game .

As shown in the configuration indicates e.g. by inclusion or by reference a state of the application. The state may include parameters and . Each of the parameters and may be assigned one or more values e.g. a single value a set of multiple values or a range of values that define at least a portion of the state of the application. Accordingly the configuration may indicate that one or more values be assigned to one or more of the parameters and . As examples the state may indicate an initial state of the application a default state of the application a non customized state of the application a starting state of the application or any suitable combination thereof. Where the application is a game the state may indicate a beginner level e.g. Level 1 of the game. Hence one or both of the parameters and may indicate or specify an initial setting or preference of the game a default setting or preference of the game an initial level of experience e.g. zero experience points in the game a default degree of progress e.g. no achievements attained or prizes won in the game or any suitable combination thereof.

As shown in the configuration indicates a state of the application. The state may include parameters and . Each of the parameters and may be assigned one or more values that define at least a portion of the state of the application. Accordingly the configuration may indicate that one or more values be assigned to one or more of the parameters and . As examples the state may indicate a current state of the application a non default state of the application a customized state of the application an advanced state of the application or any suitable combination thereof. Where the application is a game the state may indicate an experience level e.g. level 100 of the game. Hence one or both of the parameters at may indicate or specify a saved setting or preference of the game a customized setting or preference of the game a saved level of experience e.g. 50 000 experience points in the game a customized e.g. individualized degree of progress in the game e.g. 100 bronze achievements 65 silver achievements 22 gold achievements 253 enemies defeated and 63 virtual coins won or any suitable combination thereof.

In operation the user module identifies the user . The user may be a user of the social network system e.g. a first social network system providing a first social network service . The user may be identified based on the identifier e.g. a first identifier of the user discussed above with respect to . As noted above the identifier may be an identifier through which an application e.g. a game is accessible to the user from a social network service provided by the social network system . For example the user module may identify the user by comparing the identifier to an identifier received from the device of the user e.g. received along with a corresponding password .

In operation the database module accesses a database e.g. database that stores a correlation between the identifier e.g. the first identifier of the user and the identifier e.g. a second identifier of the user discussed above with respect to . The user may be a user of the social network system e.g. a second social network system providing a second social network service . As noted above the identifier may be an identifier through which the application e.g. accessible to the user from the first social network service is accessible to the user from asocial network service provided by the social network system . For example the database module may retrieve data records that include or reference the identifier and the identifier and determine that there is a correlation between the identifier and the identifier .

In operation the access module accesses the configuration of the application e.g. from the database in the social network system . The accessing of the configuration may be based on the correlation between the identifier and the identifier discussed above with respect to operation . For example the database may store the configuration and corresponding to the identifier of the user . Accordingly based on the correlation between the identifier e.g. from operation and the identifier e.g. from operation the access module may request read or retrieve the configuration of the application e.g. of the game .

In operation the application module configures the application e.g. the game based on e.g. in accordance with the configuration e.g. accessed in operation . The configuring of the application may be based on the correlation e.g. from operation between the identifier e.g. from operation and the identifier e.g. from operation . The configuring of the application based on the configuration may include restoring a state e.g. state or state of the application as indicated or specified by the configuration . Further details of operation are discussed below with respect to .

In operation the provision module provides the configuration to a system e.g. outside the social network system that supports the application e.g. the game . For example the provision module may provide the configuration to the social network system e.g. to the social network machine the database or both . The system e.g. social network system to which the configuration is provided may be configured to provide a social network service e.g. a third social network service that configures the application e.g. the game based on e.g. in accordance with the provided configuration . According to various example embodiments this system social network system is configured to perform operation e.g. by executing the application module on the social network machine as described above. The providing of the configuration may include providing a state e.g. state or state of the application as indicated or specified by the configuration .

As shown in various example embodiments of the method may include any one or more of operations and . As shown one or more of operations and may be performed prior to operation in which the user module identifies the user . In operation the correlation module generates the correlation between the identifier and the identifier e.g. the correlation between the first identifier of the user and the second identifier of the user . For example the correlation module may generate a map that correlates the identifier to the identifier e.g. by reference pointer or link . In operation the correlation module stores a correlation in the database e.g. for access by the database module in operation .

Operation may be performed as part e.g. a precursor task a subroutine or a portion of operation in which the user module may identify the user based on the identifier e.g. the first identifier . In operation the user module authenticates the identifier . For example the user module may verify that the identifier enables access of the application e.g. the game by the user . In some example embodiments the user module receives the identifier e.g. along with a corresponding password and determines e.g. based on the identifier and the corresponding password that the user is allowed to access the application.

Operation may be performed as part of operation in which the database module accesses the database that stores the correlation between the identifier e.g. the first identifier and the identifier e.g. the second identifier . In operation the database module accesses the database . As noted above the database may store the correlation between the identifier and the identifier . Accordingly the database module may access the database within the social network system to access e.g. request read or retrieve the correlation between the identifier and the identifier .

Operation may be performed after operation . In operation the database module determines that the configuration is stored by the social network system e.g. by the second social network system . For example the database module may determine that the configuration is stored in the database . This determination may be made through one or more communications with the social network system e.g. social network machine database or both . As an example the database module may send an application programming interface API call to the social network machine and receive a response which indicates that the configuration is stored in the database .

Alternatively in some example embodiments the database module in performing operation may determine that the configuration is stored by the social network system e.g. by the first social network system . For example the database module may query the database and determine that the configuration is stored therein.

Operation may be performed as part of operation in which the access module accesses the configuration of the application e.g. the game based on the correlation between the identifier and the identifier . In operation the access module accesses the database . As noted above the database may store the configuration . Moreover the accessing of the configuration may be based on e.g. in response to the determination made in operation . Accordingly the access module may access the database within the social network system to access the configuration . Operation may be performed based on the correlation between the identifier and the identifier .

Alternatively in some example embodiments the access module in performing operation may access the configuration by accessing the database . This accessing of the configuration may be based on e.g. in response to a determination in operation that the configuration is stored by the social network system . Accordingly the access module may access the database within the social network system to access the configuration based on the correlation between the identifier and the identifier .

Operation may be performed as part of operation in which the application module configures the application e.g. the game based on e.g. in accordance with the configuration e.g. as accessed in operation . In operation the application module instantiates the application e.g. the game in a state e.g. state or state indicated by the configuration . For example the application module may instantiate the application using one or more of the parameters and that define the state e.g. a default state of the application. As another example the application module may instantiate the application by applying one or more of the parameters and that define the state e.g. a non default state of the application.

One or more of operations may be performed as part of operation . In operation the application module instantiates the application e.g. the game in the state e.g. the non default state of the application. This may be performed by applying one or more of the parameters and to the application e.g. assigning one or more values of the parameter or of the parameter to the application .

In operation the application module launches the application e.g. begins execution of the application at a degree of progress specified by the configuration e.g. as indicated by the parameter or the parameter . This may be performed by applying one or more of the parameters and to the application e.g. assigning one or more values of the parameter or of the parameter to the application . According to various example embodiments the degree of progress represents an extent to which a set of tasks within the application has been completed e.g. goals or quests within a game .

In operation the application module configures the application e.g. the game based on an experience level specified by the configuration e.g. as indicated by the parameter or the parameter . This may be performed by applying one or more of the parameters and to the application e.g. assigning one or more values of the parameter or of the parameter to the application . According to various example embodiments the experience level represents a quantity of events presented by the application to a user e.g. a number of victories or defeats experienced by a player character within a game .

In operation the application module in configuring the application e.g. the game restores a game state e.g. a gameboard of a game e.g. as an example of the application played by the user . In some example embodiments the configuration is or includes a saved game state e.g. a game save point within gameplay of the game . Such a game state may be stored by the social network system e.g. in database prior to performance of the method e.g. in response to the user pausing or stopping gameplay and such a game state may be restored in operation e.g. in response to or in preparation for a request by the user to resume or restart gameplay . According to various example embodiments the game state represents the set of all parameters e.g. parameters and that define a configuration e.g. configuration of a game.

In operation the application module executes the game discussed above with respect to operation . Moreover the game may be executed through the social network system e.g. executed by the social network machine . Furthermore the game may be executed using the game state restored in operation . This may have the effect of allowing the user e.g. as a player of the game to play the game from his or her last saved point e.g. degree of progress within the game s gameplay e.g. plot or event timeline but through the social network system instead of the social network system .

In operation the application module assigns a value of a parameter e.g. a value of the parameter as indicated in the state in the configuring of the application e.g. the game in operation . This assignment of the value may be performed based on the correlation between the identifier and the identifier e.g. accessed in operation .

According to various example embodiments one or more of the methodologies described herein may facilitate sharing of an application configuration among social network systems. Moreover one or more of the methodologies described herein may facilitate an enjoyable and convenient experience by a player of a game that is playable through any of multiple social network systems. Hence one or more the methodologies described herein may facilitate pausing or stopping an application on one system and then resuming or restarting the application on another system in the same state as when the application was paused or stopped.

When these effects are considered in aggregate one or more of the methodologies described herein may obviate a need for certain efforts or resources that otherwise would be involved in using an application e.g. playing a game on multiple systems e.g. platforms that support the application e.g. the game . Efforts expended by a user in reconstructing or restoring a configuration e.g. state of an application may be reduced by one or more of the methodologies described herein. Computing resources used by one or more machines databases or devices e.g. within the network environment may similarly be reduced. Examples of such computing resources include processor cycles network traffic memory usage data storage capacity power consumption and cooling capacity.

The machine includes a processor e.g. a central processing unit CPU a graphics processing unit GPU a digital signal processor DSP an application specific integrated circuit ASIC a radio frequency integrated circuit RFIC or any suitable combination thereof a main memory and a static memory which are configured to communicate with each other via a bus . The machine may further include a graphics display e.g. a plasma display panel PDP a light emitting diode LED display a liquid crystal display LCD a projector or a cathode ray tube CRT . The machine may also include an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse a touchpad a trackball a joystick a motion sensor or other pointing instrument a storage unit a signal generation device e.g. a speaker and a network interface device .

The storage unit includes a machine readable medium on which is stored the instructions e.g. software embodying any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory within the processor e.g. within the processor s cache memory or both during execution thereof by the machine . Accordingly the main memory and the processor may be considered as machine readable media. The instructions may be transmitted or received over a network e.g. network via the network interface device .

As used herein the term memory refers to a machine readable medium able to store data temporarily or permanently and may be taken to include but not be limited to random access memory RAM read only memory ROM buffer memory flash memory and cache memory. While the machine readable medium is shown in an example embodiment to be a single medium the term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database or associated caches and servers able to store instructions. The term machine readable medium shall also be taken to include any medium or combination of multiple media that is capable of storing instructions e.g. software for execution by a machine e.g. machine such that the instructions when executed by one or more processors of the machine e.g. processor cause the machine to perform any one or more of the methodologies described herein. Accordingly a machine readable medium refers to a single storage apparatus or device as well as cloud based storage systems or storage networks that include multiple storage apparatus or devices. The term machine readable medium shall accordingly be taken to include but not be limited to one or more data repositories in the form of a solid state memory an optical medium a magnetic medium or any suitable combination thereof.

One or more of operations may be performed after operation in which the application module configures the application e.g. the game based on e.g. in accordance with the configuration e.g. as accessed in operation . In operation the user module receives a request e.g. a share request that a visual representation of the application be generated and communicated to a group of users e.g. friends followers or connections of the user . For example the user module may receive the request from the device of the user . Since the application is configured e.g. in operation according to the configuration this visual representation of the application may visually represent the application in a state e.g. state or state indicated by the configuration . As an example the visual representation may be a screenshot of the application e.g. a screen capture of the game . In some example embodiments the request indicates that the user would like to socially share the visual representation among a group of users that includes one or more members of his social network e.g. other users socially connected to the user by one or more social network services provided by the social network system the social network system the social network system or any suitable combination thereof .

In operation the user module generates the visual representation of the application e.g. the visual representation of the game . As noted above the visual representation may be generated based on e.g. from the application as configured by the configuration e.g. in operation . Thus the generated visual representation of the application may visually represent the state e.g. state or state of the application. As examples the visual representation may be a screenshot e.g. an image of a game environment within the game showing game pieces or virtual items a progress chart e.g. a timeline line graph or pie chart indicating progress towards a goal a list of achievements e.g. a list of tasks performed awards received prizes or points won or enemies defeated or any suitable combination thereof.

Operation may be performed as part of operation . In operation the user module generates the visual representation of the application by generating a screenshot of the application. For example the user module may access a memory e.g. a frame buffer in the device or in the social network machine that stores all or part of a user interface in which access to the application is provided. The user module may generate the screenshot by storing an image of all or part of the user interface that provides access to the application e.g. the game .

In operation the user module provides the visual representation to the device of the user e.g. a further user who may be a friend of the user . The visual representation e.g. screenshot may be provided based on e.g. in response to the request received in operation . Furthermore the visual representation may be provided to the device based on the user being socially connected to the user e.g. being a member of one or more social networks of the user according to one or more social network services provided by the social network system the social network system the social network system or any suitable combination thereof .

In operation the user module receives a response by the user . The response may include an indication of an opinion of the user and the response may be received from the device of the user . Examples of the indication include a rating e.g. 3 of 5 stars or good a vote e.g. a like or some other positive mark or tag a comment e.g. Good job or How did you do this in only 2 days and any suitable combination thereof. Accordingly responses to the visual representation may be received from one or more users e.g. user with whom the visual representation is shared.

In operation the user module presents some or all of the response received in operation . The indication may be presented in a user interface in which access to the application e.g. the game is provided. For example the indication may be presented e.g. along with the visual representation of the application within a user interface provided by the social network system e.g. for providing access to the application . Accordingly the visual representation may be socially shared among a social network of the user and members of the social network e.g. user may submit indications of their opinions on the visual representation for display with the visual representation e.g. to other members of the social network or to the general public .

One or more of operations may be performed after operation in which the provision module provides the configuration e.g. to the social network system . As noted above the configuration may be provided to enable the social network system e.g. via a social network machine to configure the application based on the configuration .

In operation the user module receives a request e.g. a share request that a visual representation of the application be generated and communicated to a group of users e.g. friends followers or connections of the user . For example the user module may receive the request from the device of the user . Since the application is configured e.g. by the social network machine performing an operation similar to operation according to the configuration this visual representation of the application may visually represent the application in a state e.g. state or state indicated by the configuration . As noted above the visual representation may be a screenshot of the application e.g. a screen capture of the game . In some example embodiments the request indicates that the user would like to socially share the visual representation among a group of users that includes one or more members of his social network e.g. other users socially connected to the user by one or more social network services provided by the social network system the social network system the social network system or any suitable combination thereof .

In operation the user module generates the visual representation of the application e.g. the visual representation of the game . As noted above the visual representation may be generated based on e.g. from the application as configured by the configuration e.g. by the social network machine provided in operation . Thus the generated visual representation of the application may visually represent the state e.g. state or state of the application. As examples the visual representation may be a screenshot e.g. an image of a game environment within the game showing game pieces or virtual items a progress chart e.g. a timeline line graph or pie chart indicating progress towards a goal a list of achievements e.g. a list of tasks performed awards received prizes or points won or enemies defeated or any suitable combination thereof.

Operation may be performed as part of operation . In operation the user module generates the visual representation of the application by generating a screenshot of the application. For example the user module may access a memory e.g. a frame buffer in the device or in the social network machine that stores all or part of a user interface in which access to the application is provided. The user module may generate the screenshot by storing an image of all or part of the user interface that provides access to the application e.g. the game .

In operation the user module provides the visual representation to the device of the user e.g. a further user who may be a friend of the user . The visual representation e.g. screenshot may be provided based on e.g. in response to the request received in operation . Furthermore the visual representation may be provided to the device based on the user being socially connected to the user e.g. being a member of one or more social networks of the user according to one or more social network services provided by the social network system the social network system the social network system or any suitable combination thereof .

In operation the user module receives a response by the user . The response may include an indication of an opinion of the user and the response may be received from the device of the user . Examples of the indication include a rating e.g. 3 of 5 stars or good a vote e.g. a like or some other positive mark or tag a comment e.g. Good job or How did you do this in only 2 days and any suitable combination thereof. Accordingly responses to the visual representation may be received from one or more users with whom the visual representation is shared.

In operation the user module presents some or all of the response received in operation . The indication may be presented in a user interface in which access to the application e.g. the game is provided. For example the indication may be presented e.g. along with the visual representation of the application within a user interface provided by the social network system e.g. for providing access to the application . Accordingly the visual representation may be socially shared among a social network of the user and members of that social network e.g. user may submit indications of their opinions on the visual representation for display with the visual representation e.g. for display to other members of the social network or to the general public .

Throughout this specification plural instances may implement components operations or structures described as a single instance. Although individual operations of one or more methods are illustrated and described as separate operations one or more of the individual operations may be performed concurrently and nothing requires that the operations be performed in the order illustrated. Structures and functionality presented as separate components in example configurations may be implemented as a combined structure or component. Similarly structures and functionality presented as a single component may be implemented as separate components. These and other variations modifications additions and improvements fall within the scope of the subject matter herein.

Certain embodiments are described herein as including logic or a number of components modules or mechanisms. Modules may constitute either software modules e.g. code embodied on a machine readable medium or in a transmission signal or hardware modules. A hardware module is a tangible unit capable of performing certain operations and may be configured or arranged in a certain physical manner. In various example embodiments one or more computer systems e.g. a standalone computer system a client computer system or a server computer system or one or more hardware modules of a computer system e.g. a processor or a group of processors may be configured by software e.g. an application or application portion as a hardware module that operates to perform certain operations as described herein.

In some embodiments a hardware module may be implemented mechanically electronically or any suitable combination thereof. For example a hardware module may include dedicated circuitry or logic that is permanently configured to perform certain operations. For example a hardware module may be a special purpose processor such as a field programmable gate array FPGA or an ASIC. A hardware module may also include programmable logic or circuitry that is temporarily configured by software to perform certain operations. For example a hardware module may include software encompassed within a general purpose processor or other programmable processor. It will be appreciated that the decision to implement a hardware module mechanically in dedicated and permanently configured circuitry or in temporarily configured circuitry e.g. configured by software may be driven by cost and time considerations.

Accordingly the phrase hardware module should be understood to encompass a tangible entity be that an entity that is physically constructed permanently configured e.g. hardwired or temporarily configured e.g. programmed to operate in a certain manner or to perform certain operations described herein. As used herein hardware implemented module refers to a hardware module. Considering embodiments in which hardware modules are temporarily configured e.g. programmed each of the hardware modules need not be configured or instantiated at any one instance in time. For example where a hardware module comprises a general purpose processor configured by software to become a special purpose processor the general purpose processor may be configured as respectively different special purpose processors e.g. comprising different hardware modules at different times. Software may accordingly configure a processor for example to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.

Hardware modules can provide information to and receive information from other hardware modules. Accordingly the described hardware modules may be regarded as being communicatively coupled. Where multiple hardware modules exist contemporaneously communications may be achieved through signal transmission e.g. over appropriate circuits and buses between or among two or more of the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times communications between such hardware modules may be achieved for example through the storage and retrieval of information in memory structures to which the multiple hardware modules have access. For example one hardware module may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware module may then at a later time access the memory device to retrieve and process the stored output. Hardware modules may also initiate communications with input or output devices and can operate on a resource e.g. a collection of information .

The various operations of example methods described herein may be performed at least partially by one or more processors that are temporarily configured e.g. by software or permanently configured to perform the relevant operations. Whether temporarily or permanently configured such processors may constitute processor implemented modules that operate to perform one or more operations or functions described herein. As used herein processor implemented module refers to a hardware module implemented using one or more processors.

Similarly the methods described herein may be at least partially processor implemented a processor being an example of hardware. For example at least some of the operations of a method may be performed by one or more processors or processor implemented modules. Moreover the one or more processors may also operate to support performance of the relevant operations in a cloud computing environment or as a software as a service SaaS . For example at least some of the operations may be performed by a group of computers as examples of machines including processors with these operations being accessible via a network e.g. the Internet and via one or more appropriate interfaces e.g. an application program interface API .

The performance of certain of the operations may be distributed among the one or more processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the one or more processors or processor implemented modules may be located in a single geographic location e.g. within a home environment an office environment or a server farm . In other example embodiments the one or more processors or processor implemented modules may be distributed across a number of geographic locations.

Some portions of this specification are presented in terms of algorithms or symbolic representations of operations on data stored as bits or binary digital signals within a machine memory e.g. a computer memory . These algorithms or symbolic representations are examples of techniques used by those of ordinary skill in the data processing arts to convey the substance of their work to others skilled in the art. As used herein an algorithm is a self consistent sequence of operations or similar processing leading to a desired result. In this context algorithms and operations involve physical manipulation of physical quantities. Typically but not necessarily such quantities may take the form of electrical magnetic or optical signals capable of being stored accessed transferred combined compared or otherwise manipulated by a machine. It is convenient at times principally for reasons of common usage to refer to such signals using words such as data content bits values elements symbols characters terms numbers numerals or the like. These words however are merely convenient labels and are to be associated with appropriate physical quantities.

Unless specifically stated otherwise discussions herein using words such as processing computing calculating determining presenting displaying or the like may refer to actions or processes of a machine e.g. a computer that manipulates or transforms data represented as physical e.g. electronic magnetic or optical quantities within one or more memories e.g. volatile memory non volatile memory or any suitable combination thereof registers or other machine components that receive store transmit or display information. Furthermore unless specifically stated otherwise the terms a or an are herein used as is common in patent documents to include one or more than one instance. Finally as used herein the conjunction or refers to a non exclusive or unless specifically stated otherwise.

