---

title: Automatic media naming using facial recognization and/or voice based identification of people within the named media content
abstract: A computing device identifies a plurality of media files within a data store, each of the media files lacking user established file names. The computing device analyzing the plurality of media files to recognize humans in the media files based on facial recognition and/or voice recognition programs. Using results of the analyzing to generate a plurality of content identification keywords, which are scored and ranked. Establishing a filename prefix for the media files using scored and ranked content identification keywords. Automatically generating a unique file name for each of the media files, wherein each unique file name includes the established filename prefix.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09535921&OS=09535921&RS=09535921
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09535921
owner_city: Armonk
owner_country: US
publication_date: 20150703
---
This continuation application claims the benefit of U.S. patent application Ser. No. 13 826 348 filed 14 Mar. 2013 entitled Enabling Intelligent Media Naming and Icon Generation Utilizing Semantic Metadata. The entire contents of U.S. application Ser. No. 13 826 348 are incorporated by reference herein.

The present invention relates to the field of media and more particularly to enabling intelligent media naming and icon generation utilizing semantic metadata.

In today s digital world many types of devices can produce a variety of media which can lead to substantial amounts of generated media files. For example a mobile phone can allow a user to take pictures record movies and music which can be stored on the mobile phone as media files. The media content can quickly become disorganized and or difficult to manage due to the generic automated naming generation capabilities of devices. Consequently retrieval and reuse of this generated media can be hindered by cryptic filenames incorrectly named files and or misleading icons.

Traditionally media capture devices often name media files in an alphanumeric value combination and maintain a progression order. For example the first image file of a camera is often labeled e.g. IMG 0001 with number values of the filename are incremented for each subsequent picture e.g. IMG 0002 . These file names do not provide much information and lack the ability to give meaningful naming to the media files. Currently organization methods require manual processes to be completed by device owners to give media files generated meaningful names. For example the media file has to be inspected and named manually. That is media files must be renamed individually or folders must be created to group multiple files together based on their relevancy. Such known solutions are tedious unintuitive time consuming and failure ridden.

One aspect of the present disclosure can include a method system and or computer program product where a computing device identifies a plurality of media files within a data store each of the media files lacking user established file names lacking user established icons or lacking user established file names and icons. The computing device analyzing the plurality of media files to determine semantic metadata using semantic analysis processes. For at least a subset of the media files the semantic metadata is used to automatically generate unique and meaningful file names file icons or both file names and file icons for each of the media files in the subset. The computing device establishes a filename prefixes from the semantic metadata and concatenates the filename prefix and unique filename suffix to create a unique filename for the subset of media files.

Another aspect of the present disclosure can include a method for enabling intelligent media naming and icon generation utilizing semantic metadata. One or more media files within a data store can be identified. The media files can include a filename and a file icon. The files can be an image file a video file an audio or a document file. The media files can be semantically analyzed to determine semantic metadata. The semantic metadata can include a content identification keyword an explicit relationship or an implicit relationship. A filename and a file icon can be generated associated with the media files from the semantic metadata.

Another aspect of the present disclosure can include a system for enabling intelligent media naming and icon generation utilizing semantic metadata. A naming engine can be configured to generate a filename and an icon associated with semantic metadata of a media file. The media file can be an image file a video file an audio or a document file. The semantic metadata can be a content identification keyword an explicit relationship or an implicit relationship. A data store can persist a media file a customization profile semantic metadata associated with the media file or a semantic ruleset. The semantic ruleset can control the generation of the filename and or icon.

Yet another aspect of the present disclosure can include a computer program product that includes a computer readable storage medium having embedded computer usable program code. The computer usable program code can be configured to select a media file within a data store wherein the media file is at least one of an image a video an audio and a document. The computer usable program code can analyze the media file to determine semantic metadata associated with the media file. The semantic metadata can be a content identification keyword an explicit relationship or an implicit relationship. The computer useable program code can create an alias file wherein the alias file comprises of a reference to the media file wherein at least one of the filename and the icon of the alias file is determined from the semantic data associated with the media file.

The present disclosure is a solution for enabling intelligent media naming and icon generation utilizing semantic metadata. In the solution semantic metadata associated with a media file can be utilized to organizing and or name media files. Semantic metadata can be determined during media creation and or during post production. Semantic metadata can be obtained utilizing traditional and or proprietary techniques including but not limited to image recognition voice recognition event recognition and the like. Semantic metadata can be utilized to name the media file and or generate a meaningful icon associated with the media file. For example a picture of a Dave at a Jen s birthday party can be analyzed to determine an event and a person of interest resulting in the picture being automatically named Dave at Jen s Birthday Party.jpg . That is the disclosure can leverage semantic data to assign and associate meaningful names to media data automatically and facilitate searching on content.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method downloadable device app or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction processing system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction processing system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing. Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. The program code may also execute at least in part on a smart phone tablet gaming console smart consumer electronic device or embedded device. In a hybrid processing scenario where program code executes partially on a client and partially on at least one remote computers the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions.

These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

As used herein media can be a digital content associated with a computing device e.g. camera . Media can include but is not limited to an image a video an audio a document and the like. Media can include one or more combinations of images video audio documents and the like. Media can be associated with a filename an icon a file system path an owner an author a computing device a permissions setting and the like. Media can be associated with logical groupings including but not limited to a collection a set and the like. In one embodiment the disclosure can be utilized to rename a collection of images within a slideshow application.

As used herein semantic metadata can be a data set associated with media . Metadata can include but is not limited to a semantic filename i.e. an alias a semantic icon i.e. an alternate icon presence data content identification data e.g. tags attributes and the like. Metadata can be obtained from one or more internal and or external data sources. For example a semantic repository can be utilized to obtain metadata associated with a media . Metadata can be persisted within devices within a peripheral communicatively linked to devices and or within an external repository e.g. cloud . In one instance metadata can be associated with an ontology a dictionary a metadata hierarchy and the like.

Scenario can include a media creation portion and a media storage portion . In media creation portion a creator can create a media of a subject at a location using camera . For example Julie can take a picture of her friend Jackie in front of a steak house after a dinner at the steak house. In media storage portion media can be appropriately named e.g. Jackie at Steakhouse.jpg using semantic metadata and stored within camera data store . That is the disclosure can permit semantic naming and icon generation during media creation based on content within media participant relationships and the like.

The media can be conveyed to a Smart Naming and Analyzing Process SNAP engine . In one instance the engine can be a firmware program within camera . For example engine can be a component of a file storage driver of camera . Media can be analyzed utilizing one or more semantic analysis techniques. For example engine can leverage face recognition algorithms and Global Positioning System data to establish a picture of Jackie was taken at a steak house on 101 Food Avenue . The metadata can be utilized to generate semantic filename of media . For example filename can be set to Jackie at Steak House.jpg . Metadata can be utilized to generate a relevant semantic icon for media . For example icon can be a portrait of Jackie which can be utilized for rapid identification of the subject e.g. of media within a file manager application interface. Upon creation of filename and or icon the media can be stored as a semantic media within data store .

In one instance filename icon can be generated by determining inherent relationships between semantic metadata. For example engine can determine that Julie and Jackie are friends and can create a filename My friend Jackie.jpg for media . In one embodiment engine can leverage social networking data to determine relevant semantic metadata. For example engine can utilize FACEBOOK to determine the identity and relationship of people within a picture. It should be appreciated that semantic metadata can include explicit relationship data user provided metadata and the like.

Scenario can include a media creation and a post production portion. In media creation portion a creator can create media of subject using video camera . For example media can include two video samples automatically named by camera as Vid 0001.mpg and Vid 0002.mpg . In post production portion media can be conveyed to a computing device . For example camera can be connected to computer which can permit downloading of media to computer hard drive. Media can be conveyed to a SNAP engine which can obtain semantic metadata from media . In one instance SNAP engine can be a functionality of a video manipulation management application e.g. ADOBE PREMIER . In one embodiment engine can perform one or more traditional and or proprietary analysis of media during post production . Engine can perform a semantic analysis of media to extract semantic metadata . For example engine can utilize the relative location e.g. downtown Dallas and or date and time e.g. morning information to determine relevant metadata . Metadata can be utilized to generate an appropriate semantic filename and a semantic icon for each media e.g. Vid 0001 Vid 0002 . For example metadata can be utilized to generate a filename Morning in Starbucks.avi with an icon of a Starbucks logo for the first media e.g. Vid 0001 and a second filename Morning on Street.avi with an icon of people on a street for the second media e.g. Vid 0002 .

In one instance analysis and renaming of media can be performed during media transfer e.g. import action . In another embodiment analysis and renaming of media can be performed during a post production management e.g. editing workflow .

It should be appreciated that semantic filename and or icon can be modified by a user permitting correction of filename selection. Engine can include an auto learning module which can over time improve content naming based on feedback and self learning.

It should be appreciated that the semantic filename and or semantic icon can correspond to the media filename and or icon. That is media can be renamed to filename and an associated icon can be changed to icon . For example during scenario media can be persisted in a temporary volatile memory e.g. cache using a temporary filename e.g. randomly generated filename which can be changed when the media is persisted within a permanent non volatile storage e.g. data store as media .

Drawings presented herein are for illustrative purposes only and should not be construed to limit the invention in any regard. It should be appreciated that the disclosure is not limited to the scenario and can be utilized during media management processes e.g. library organization an import export action and the like. In one embodiment the disclosure can utilize embedded data to determine semantic metadata. In the embodiment data can include but is not limited to a graphic a chart a graph an image an audio a video a text element a structured document an unstructured document and the like. It should be appreciated that engine can be similar or identical to a naming engine .

It should be appreciated that filename icon generation can be dependent on any combination of semantic analysis processes e.g. image recognition voice recognition . For example candidate icons can be generated utilizing both image metadata and voice metadata .

SNAP engine can process media to determine semantic metadata . In one embodiment metadata can include a keyword e.g. tag and attributes which can be evaluated to determine keyword relevancy. That is utilizing attributes associated with a keyword can permit the association of meaningful keywords and the disassociation of non meaningful keywords to the media. Attributes can include but is not limited to a frequency value a weighting value a priority value and the like. For example engine can utilize image recognition to determine a keyword such as Julie having a frequency of five hundred a weighting of five and a priority of two which can total to a value of two thousand. Attributes can be calculated utilizing one or more traditional and or proprietary mechanisms. For example a frequency value can be determined by how many times a person appears in a portion of a video sample.

In one embodiment frequency weighting and or priority values can be computed to determine a score which can be utilized to rank keywords in order of significance. For example when the keyword e.g. Julie score e.g. two thousand is above a threshold value e.g. one thousand the keyword can be ranked up and when the keyword e.g. Victor score e.g. five hundred is below the threshold value the keyword can be ranked down. It should be appreciated that the score can be computed utilizing arbitrarily complex algorithms. For example score can be an average of each attribute or can be a value computed utilizing one or more mathematical formulas.

In one instance keywords from each metadata set e.g. Julie vacation which have the highest values can be selected to be utilized during candidate filename generation and or icon creation. For example a photo taken by Julie in San Francisco on vacation at Pier 39 can be appropriately named Pier39 SanFrancisco Julie vacation e.g. presented as icon ICON B e.g. .

In one embodiment engine can utilize a prefix suffix filename construction to intelligently name media . In the embodiment semantic metadata e.g. tags having the greatest significance can be utilized as a prefix e.g. Pier 39 for a filename and each successive metadata can be appended. It should be appreciated that metadata quantity can be arbitrarily limited based on user preference file system limitations and the like. For example a user can establish that the three most significant keywords Pier39 SanFranciso Julie vacation can be utilized to create a filename .

In one embodiment candidate can be utilized to present a user specific filename for media. In the embodiment the user identity can be utilized to determine an appropriate filename icon for media e.g. based on historic selection user relationship to media etc . For example when Victor views media within a file manager ICON C can be presented and when Julie views media within a file manager ICON B can be presented.

In one instance candidate filenames can be persisted within a repository associated with media . In the instance filenames can be searchable permitting keyword searching on a media file via multiple filenames .

Drawings presented herein are for illustrative purposes only and should not be construed to limit the invention in any regard. It should be appreciated that semantic analysis can be performed by one or more external sources. For example image recognition can be processed by a GOOGLE PICASA application and or Web service. In one embodiment the disclosure can leverage one or more biometric sources to determine semantic metadata associated with semantic media . It should be appreciated that engine can be similar or identical to a naming engine .

In step a media set can be identified. Media set can be automatically and or manually identified. Media set can include but is not limited to a collection a slideshow a grouping a user selection and the like. For example media set can be identified by a user selection within a file manager. In step a media file of the set can be selected. Selection can include an ordered selection and or a random selection. For example selection can be alphabetical or by date e.g. most recent . In step the selected media can be analyzed. Analysis can include one or more traditional and or proprietary techniques. In one embodiment analysis can include a semantic analysis to determine a selected media content and or significance. In the embodiment analysis can include but is not limited to linguistic analysis semantic structure analysis and the like.

In step semantic metadata associated with the media can be determined based on one or more attributes. In step a candidate filename or a list can be generated based on the metadata. The candidate filename or a list can be generated based on one or more rules which can include user established preferences automatically determined settings and the like. In step the candidate filename or a list can be optionally presented for selection. Presentation can include a user interface which can permit user selection of the candidate filename. For example a pop up dialog box can be presented to confirm the candidate filename selection. In step if the candidate filename is selected manually through step or automatically without step the method can continue to step else return to step to regenerate. In one contemplated embodiment an optional step is processed to learn user preference based on a selection or a default value if no selection is made . When this step is utilized the user preference is utilized in the method process.

In step media filename can be changed based on the candidate selection. In step a candidate icon or a list can be generated based on the metadata. In one instance the candidate icon can be selected from an existing set of icons e.g. database of icons . In another instance metadata can be utilized to generate a customized icon for the media. Icon generation can be performed utilizing one or more traditional and or proprietary image generation tools. In step the candidate icon or a list can be optionally presented for selection. In one instance selection can include a preview of candidate icon which can enable a user to view the icon. In step if the candidate icon is selected manually through step or automatically without step the method can continue to step else return to step to regenerate. In one embodiment user preference s can be determined based on user selection a user profile defaults or other criteria and utilized herein. In step the media icon can be changed to the candidate icon based on the selection. In step if there are more files in the set the method can continue to step else return to step . In step the method can end.

It should be appreciated that filename collision detection and or resolution can be performed within the method . Collision detection and or resolution can be performed utilizing one or more traditional and or proprietary techniques.

Drawings presented herein are for illustrative purposes only and should not be construed to limit the invention in any regard. Method can include one or more optional steps which can be omitted permitting the functionality of method is retained. For example a learning step can be implemented to learn determine user preferences. Steps can be repeated for each file within the media set. Steps can be iteratively repeated to improve candidate filename generation. Steps can be iteratively repeated to improve candidate icon generation. It should be appreciated that candidate filename and or icon can be automatically determined utilizing heuristic mechanisms.

Media sever can be a hardware software entity able to execute naming engine . Media server functionality can include but is not limited to authentication encryption communication media management registration of external alternate components and the like. Media server can include but is not limited naming engine customization profile semantic metadata data store and the like. In one embodiment media server can be a component of a home media server. In another embodiment media server can be a functionality of a portable media device. In one embodiment server can be a drop in replacement for an existing media server.

Naming engine can be a hardware software element configured to intelligently name media . Engine functionality can include but is not limited to media conversion media compression registration of media and the like. Engine can include but is not limited to media handler semantic analyzer candidate engine settings and the like. In one embodiment engine functionality can be present within an Application Programming Interface API . In another embodiment engine functionality can be present within a Web based service. In yet another instance engine can be a functionality of a networked computing element. It should be appreciated that engine can include additional components such as a profiler an algorithm selection component and the like. In one embodiment engine can be configured to enable content mining and analysis by leveraging services in the cloud. In one embodiment functionality of engine can be present within a plug in.

Media handler can be a hardware software entity able to manage media metadata and or semantic metadata . Handler functionality can include but is not limited to media identification media selection media specific operations e.g. encode decode and the like. Handler can communicate with computing device to obtain media and or metadata . In one embodiment handler can add modify and or delete metadata and or semantic data .

Semantic analyzer can be a hardware software element configured to determine semantic metadata associated with media . Analyzer functionality can include but is not limited to media analysis metadata analysis semantic metadata analysis attribute evaluation and the like. Analyzer can include voice recognition image recognition a text analysis e.g. lexical analysis event recognition object recognition and the like. In one embodiment incorrect metadata can be excluded during analysis using traditional and or proprietary noise cancellation techniques. In one instance analyzer can be utilized to compute a score for keywords e.g. metadata metadata associated with the media . In the instance score can be associated with a threshold value a rank and the like. It should be appreciated that the threshold value can be a user established value an automatically determined value and the like. Score can be a result of a simple mathematical computation a statistical computation and the like.

Candidate engine can be a hardware software able to determine one or more candidate filenames and or icons for media . Engine functionality can include but is not limited to candidate filename generation candidate filename selection candidate icon generation candidate icon selection and the like. In one embodiment engine can utilize traditional and or proprietary heuristics to enable the engine to iteratively improve candidate generation and or selection.

Settings can be one or more configuration options for establishing the behavior of system server and or engine . Settings can include but is not limited to handler options analyzer settings engine options and the like. Settings can be manually and or automatically established. In one instance settings can be presented within a user interface including but not limited to media server interface not shown interface and the like.

Customization profile can be one or more user established settings for generating metadata candidate filenames candidate icons and the like. Profile can be established based on historic selections of candidate filenames icons historic settings and the like. In one instance profile can include a whitelist a blacklist and the like. For example a blacklist can include a set of keywords and persons to ignore during semantic analysis. In one embodiment profile can be utilized to refine the accuracy functionality of engine . In one instance profile can include user accounts which can be utilized as external data sources to enhance content mining algorithms. Profile can support a LINKEDIN profile e.g. account information a FACBOOK profile TWITTER profile a custom database information and the like.

Semantic metadata can be one or more data sets associated with media . In one instance metadata can include a keyword e.g. tag an attribute a category and the like. Metadata can be persisted within data store a metadata repository and the like. In one instance metadata can conform to an Extensible Markup Language a comma delimited value format and the like. For example metadata can conform to a name value pairing. In one instance semantic metadata can be associated with metadata . For example a location metadata e.g. GPS location can be associated with the name of an event e.g. first bike ride . That is metadata can be imbued with meaning utilizing keywords attributes and the like.

Data store can be a hardware software component able to persist profile metadata media ruleset and the like. Data store can be a Storage Area Network SAN Network Attached Storage NAS and the like. Data store can conform to a relational database management system RDBMS object oriented database management system OODBMS and the like. Data store can be communicatively linked to server in one or more traditional and or proprietary mechanisms. In one instance data store can be a component of Structured Query Language SQL complaint database.

Semantic ruleset can be one or more rules for creating and or managing semantic metadata . Ruleset can include but is not limited to a rule a rule identifier a media type a metadata a metadata identifier a comment a date time a permission and the like. Rule can include but is not limited to a condition a permission an action and the like. For example rule can trigger a keyword to be set to priority of one when the frequency is above ten. In one embodiment ruleset can be persisted within data store device and the like. In one instance ruleset can be heuristically determined utilizing historic rules. It should be appreciated that ruleset rules can be arbitrarily complex.

Computing device can be a hardware software associated with media and or interface . Device can include but is not limited to media interface and the like. Computing device can include but is not limited to a desktop computer a laptop computer a tablet computing device a PDA a mobile phone and the like. Computing device can be communicatively linked with interface . In one instance interface can present profile ruleset media metadata and the like.

Media can be a digital content associated with a metadata . Media can include digitally rights managed DRM protected content unprotected content and the like. Media can include proprietary and or traditional formats. Media formats can include but is not limited to a text file a rich text file RTF an OPENDOCUMENT a Joint Photographic Experts Group JPEG a Portable Network Graphics PNG a Graphics Interchange Format GIF Moving Picture Experts Group MPEG Audio Video Interleave AVI a Portable Document Format PDF and the like.

Interface can be a user interactive component permitting interaction and or presentation of media metadata profile and or metadata . In one embodiment interface can permit the manual management of semantic metadata . For example a system administrator can add or remove keywords which can improve semantic filename creation. In one embodiment the interface can be utilized via a device to approve the metadata changes being proposed for filenames and icons. Interface can be present within the context of a Web browser application a media management application and the like. Interface capabilities can include a graphical user interface GUI voice user interface VUI mixed mode interface and the like. In one instance interface can be communicatively linked to computing device .

Network can be an electrical and or computer network connecting one or more system components. Network can include but is not limited to twisted pair cabling optical fiber coaxial cable and the like. Network can include any combination of wired and or wireless components. Network topologies can include but is not limited to bus star mesh and the like. Network types can include but is not limited to Local Area Network LAN Wide Area Network WAN VPN and the like.

Drawings presented herein are for illustrative purposes only and should not be construed to limit the invention in any regard. System server engine can include one or more optional components permitting the functionality of the system is retained. In one embodiment system can conform to a Service Oriented Architecture SOA . System can be a distributed computing environment networked computing environment and the like.

In embodiment a SNAP enabled device application can acquire media content and metadata such as GPS and time date information. The media content and metadata can be conveyed to an internal SNAP Client which can send the information to a SNAP Engine e.g. naming engine . The data can be sent in a streaming fashion for real time processing or a bulk fashion for post processing. The SNAP Engine can process the media content and semantic metadata to generate names keywords e.g. tags and additional semantic metadata. It should be appreciated that not all components presented can be implemented within the SNAP Engine. Functionality of components such as semantic analysis audio recognition image recognition and the like can be externalized to external alternate components. For example components can include services such as SHAZAM and or PICASA. It should be appreciated that alternate components can be selected instead of any built in components through a SNAP Profiler.

In embodiment a SNAP enabled device application can include a SNAP client which can be communicatively linked to a SNAP system . Operation of embodiment can conform to client server communication. SNAP system include be linked to external alternate components which can perform semantic analysis image recognition audio recognition and the like.

Drawings presented herein are for illustrative purposes only and should not be construed to limit the invention in any regard. Embodiment architecture can include peer to peer architecture a distributed architecture and the like.

In diagram media content can be acquired using a SNAP enabled device application with device application supported metadata such as GPS date and time. Data from the acquisition can be augmented with user preferences and user configurations from the SNAP profiler to control the behavior and outcome of various SNAP engine components. Data from the profiler can be augmented with algorithm selections determined by the media detector based on media content metadata semantic metadata user preferences and user configurations. The media detector can be an optional component for a SNAP enabled device application which can support multiple media types in order to appropriately select algorithms to be used during data mining of the media content. Data from the previous step can be augmented with data mined from the media content and semantic metadata based on selected algorithms user preferences and user configurations from SNAP profiler . The data mining component can be built into the SNAP engine or externalized. The selected data mining algorithms can be selected and configured by the user through the SNAP profiler. Data from the previous step can be augmented with generated names and semantic metadata e.g. tags attributes using selected algorithms user preferences and user configurations. The algorithms for generating names and semantic metadata e.g. tags attributes can be configurable by the user through the SNAP profiler allowing for weighting length limitations and other configurations. Data from the previous step which include redundant and or meaningless names and semantic metadata e.g. tags can be removed. Removal can be based on user preferences user configurations user direct input and learned past user behavior. New user preferences likes dislikes new user configurations and learned user behavior can be extracted by the final processing component and stored in the database. Newly generated names keywords e.g. tags and semantic metadata e.g. attributes for the processed content can be extracted by the final processing component and stored in the database. User preferences likes dislikes and user behavior stored in the database can be utilized by SNAP profiler for future use.

In interface a media can be presented within an operating system of a computing device. Media can be selectable permitting a context menu to be presented upon selection of media . In one instance menu can include a filename selection action enabling dynamic selection of filename display . In the instance candidate filenames for a media can be presented within a context menu . For example right clicking on media can present selection allowing filename display to change from Pier39 SanFranciso Julie vacation to Pier39 SanFranciso Julie birthday . It should be appreciated that filename selection can be present within a pull down menu an options interface e.g. media properties dialog and the like. It should be appreciated that icon selection can be achieved utilizing a similar selection mechanism.

In interface options can permit the configuration of filename icon generation. Option can allow limitations on filename length to be applied to candidate filenames to facilitate file system restrictions file naming rules and the like. For example option can restrict filename length to be limited to twenty characters. In option default prefixes for candidate filenames can be selected based on user selection. In one instance option can permit filename prefixes to begin with a date a keyword e.g. semantic metadata a custom keyword and the like. Option can permit the configuration of filename concatenation. For example keywords for filenames can be concatenated with a space an underscore or a hyphen. Option can be utilized to determine the size of generated icons. For example option can permit standard and large size icons to be created. It should be appreciated that interface can include additional options which can affect filename and or icon generation.

Drawings presented herein are for illustrative purposes only and should not be construed to limit the invention in any regard. Interface can present interface elements including but not limited to a text box a checkbox a radio button and the like. Interface can be present within a file manager a media management application and the like.

The flowchart and block diagrams in the illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be processed substantially concurrently or the blocks may sometimes be processed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

