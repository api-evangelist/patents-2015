---

title: System and method for dynamic portable document file generation
abstract: A method for providing digital communication using dynamic portable document format (PDF) generation is disclosed. The method comprises a dynamic generation server receiving a request message that includes a plurality of fields, a request type identifier, and a source identifier associated with a requesting source application. The method also comprises parsing the request message, and responsive to the parsing, determining a plurality of output requirement parameters. The dynamic generation server correlates the request message with source content based on the determination of output requirement parameters. The method includes selecting at least one HTML template, CSS string, and graphics file based on the correlation, while further scraping input values from the request message. Additionally, the method includes dynamically building a customized HTML string, and converting the customized HTML string into a PDF document. The method further comprises returning a reply message that includes the PDF document to a reply message destination.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09563613&OS=09563613&RS=09563613
owner: Sprint Communications Company L.P.
number: 09563613
owner_city: Overland Park
owner_country: US
publication_date: 20150123
---
A business service provider may operate a mobile virtual network operator business unit to complement their retail model services. Mobile virtual network operators MVNO are organizations that provide mobile communication services but may not have their own licensed frequency allocation of radio spectrum or the physical infrastructure required to provide wireless communication services. Mobile virtual network operators may contract to distribute wireless services provided by telecommunications service providers that have licensed frequency and physical infrastructure. Mobile virtual network operators function as distributors of wireless services and may set their own pricing structures which thus may require separate contractual or regulatory documentation prior to providing or changing communication service for a customer. The proliferation of mobile virtual network operators has been facilitated by regulatory intervention designed to lower the barriers for market entry and ultimately increase competition. Some telecommunications service providers have made strategic decisions to extend their existing operations by distributing their services to target niche or under served market segments through a second or perhaps multiple brands that are unique to the type of subscription and or service experienced by the customer.

An enterprise or business service provider e.g. a telecommunication service provider may provide a variety of communication services to numerous customers who operate owned or leased telecommunications equipment via the communication services. The business service provider may allocate communications services and resources to customers based on the type of subscription or agreement and corresponding communication parameters. Communication services may be defined at least in part by a customer subscription and or service level agreement SLA that may define a class of service a bandwidth and other key communication parameters of operation on a particular communication network. When a customer desires to change their subscription or service or a new customer is being added submission of a new SLA and other contractual documentation may be desirable prior to modifying the communications service network that allows for operation of the communication service with the customer according to the change. For legal and or regulatory reasons the business service provider may need to ensure that certain content is provided in documentation. Document submission to the business service provider may occur via a physical medium e.g. mailing a paper document form and or via electronic communication of a Portable Document Format PDF file. A Portable Document Format is a file format used at least in part to capture data structure format and or content of a document.

In an embodiment a method is disclosed. The method comprises receiving from a client system by a dynamic generation server executing at least one processor a request message that includes a plurality of fields a request type identifier and a source identifier associated with a requesting source application. The plurality of fields comprise input values and at least one of the plurality of fields include a user identification value that is associated with user input to the client system. The method further includes parsing by the dynamic generation server the request message that identifies the source identifier and the input values that correspond to the plurality of fields. Responsive to the parsing the method includes determining a plurality of output requirement parameters based on the input values of the plurality of fields the user identification value the request type identifier the source identifier and a reply message destination. Based on the determination of output requirement parameters the method further comprises correlating by the dynamic generation server the request message with source content that includes at least one HTML template a Cascading Style Sheets CSS string and a graphics file. The method comprises selecting by the dynamic generation server from a content management server at least one HTML template CSS string and graphics file based on the correlation. The method then scrapes by the dynamic generation server input values from the plurality of fields of the request message based on the selection. The method includes dynamically building by the dynamic generation server a customized HTML string using the scraped input values based on the selecting. Responsive to the dynamic building the method further includes converting by the dynamic generation server the customized HTML string into a PDF document that conforms to at least one of the plurality of output requirement parameters. Additionally the method then returns by the dynamic generation server a reply message that includes the PDF document to the reply message destination based on the user identification value and source identifier.

In an embodiment a system is disclosed. The system includes a content management server and a dynamic generation server. The content management server comprises at least one processor communicatively coupled with a non transitory memory. The non transitory memory stores source content the source content comprising a plurality of Hypertext Markup Language HTML templates a plurality of Cascading Style Sheets CSS strings a plurality of graphics files. The content management server further comprises a content management application that upon execution configures the at least one processor to identify source content based on a corresponding content identifier of the particular source content. The corresponding content identifier is provided to a dynamic generation server responsive to a request associated with source content. The content management application further configures a processor to update the source content and corresponding content identifier responsive to a change in the particular source content referenced by the content management server. The content management application also provides source content responsive to a selection by a dynamic generation server.

The dynamic generation server comprises at least one processor communicatively coupled with a non transitory memory and a dynamic generation application that upon execution configures the at least one processor to receive from a client system a request message. The request message includes a plurality of fields a request type identifier and a source identifier associated with a requesting source application. The plurality of fields comprise input values and at least one of the plurality of fields includes a user identification value that is associated with user input to the client system. The dynamic generation server further parses the request message that identifies the source identifier and the input values that correspond to the plurality of fields and responsive to the request message being parsed determines a plurality of output requirement parameters. The determination is based on the input values of the plurality of fields the user identification value the request type identifier the source identifier and a reply message destination. Based on the determination of output requirement parameters the dynamic generation server correlates by an identification of source content from the content management server the request message with source content. The correlation references at least one HTML template a Cascading Style Sheets CSS string and a graphics file. Based on the correlation the dynamic generation server further selects from a content management server at least one HTML template CSS string and graphics file and then scrapes input values from the plurality of fields of the request message based on the selection. The dynamic generation server further dynamically builds a customized HTML string using the scraped input values based on the selection and responsive to the dynamic build converts the customized HTML string into a PDF document that conforms to at least one of the plurality of output requirement parameters. The dynamic generation server then returns a reply message that includes the PDF document to the reply message destination based on the user identification value and source identifier.

In an embodiment a method is disclosed. The method comprises receiving by a content management server executing at least one processor a change in source content stored in a communicatively coupled non transitory memory. The source content comprises a plurality of HTML templates Cascading Style Sheets CSS strings and a graphics files. The change in source content corresponds to an updated HTML template that is a modification to one of the plurality of HTML templates. The modification is based on user input parameters received via the content management server and without accessing a dynamic generation server. Based on receiving the change in source content the method further includes modifying by the content management server a dynamic place holder of the updated HTML template using the user input parameters. The method then receives from a client system by a dynamic generation server executing at least one processor a request message that includes a plurality of fields a request type identifier and a source identifier associated with a requesting source application. The plurality of fields comprise input values and at least one of the plurality of fields includes a user identification value that is associated with user input to the client system. The method further includes parsing by the dynamic generation server the request message that identifies the source identifier and the input values that correspond to the plurality of fields. Responsive to the parsing the method continues by determining a plurality of output requirement parameters based on the input values of the plurality of fields the user identification value the request type identifier the source identifier and a reply message destination. The method includes selecting by the dynamic generation server from a content management server at least the updated HTML template and the CSS string and graphics file associated with the updated HTML template based on the determination. The method continues with dynamically building by the dynamic generation server a customized HTML string using scraped input values from at least the request message and based on the selecting. Responsive to the dynamic building the method further includes converting by the dynamic generation server the customized HTML string into a PDF document that conforms to at least one of the plurality of output requirement parameters. The method comprises returning by the dynamic generation server a reply message that includes the PDF document to the reply message destination based on the user identification value and source identifier.

These and other features will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although illustrative implementations of one or more embodiments are illustrated below the disclosed systems and methods may be implemented using any number of techniques whether currently known or not yet in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques illustrated below but may be modified within the scope of the appended claims along with their full scope of equivalents.

The present disclosure provides a system and method for providing digital communication using dynamic portable document format PDF generation. A service provider operator may provide telecommunication services to customers who may decide to change their subscription plan and or obtain different features for their wireless service. Prior to implementing the changes to digital communication features for the customer s user equipment UE the service provider s telecommunications equipment digital communication pathways and parameters of a network may need to be analyzed and considered for regulatory and or contractual reasons. Thus customers may be asked to submit requests through specific documentation that conforms to certain regulatory and or contractual requirements of the service provider. Because service providers may want to preserve the nature of certain aspects of the documentation format content style etc. used in the customer s request an operator may sometimes provide the customer with a portable document format PDF file for the customer to print out fill in sign and return to the operator before any changes are made. In some instances an operator may provide a web form to capture certain customer input information but the conversion of this input from the web form into a PDF file depends on static configuration by an information technology IT professional who predefines the static parameters in order for the desired conversion to ultimately occur.

Stated another way some PDF documents are created locally on a computer that is receiving input information from the user and based on the layout initially presented to that user. For example a user may access a web page e.g. a web application accessed via a browser portal and the user may input information into form fields of the web page. Thus when the user equipment submits the inputted information for output in a PDF document a PDF converter is executed e.g. locally or remotely and is fed the input information layout and content as presented on the webpage. This type of PDF converter then converts the web page and user inputted content as presented to the user on their UE into a PDF document where the outputted PDF document is at least substantially similar to how the webpage and input information appears as viewed and or displayed on a display device showing the web page. Thus any legal regulatory business or other types of information and content would have to be present and predefined and on the web page in order for it to appear in the outputted PDF document. This means that information not displayed on the web page will not appear in the outputted PDF document because the PDF converter is fed content as appears on the web page displayed to the user. In some embodiments this type of alternate approach may be colloquially referred to as save to PDF and or print as PDF .

Alternatively in another approach the form fields of a web page or other application accepting user input may be linked to a predefined PDF document stored in a memory either locally or remotely and accessible to the web page portal. Thus upon submission of the form the user may receive a PDF document on their computer that may not necessarily look like the web page e.g. the format content language etc. of the PDF may appear distinct from that of the web page into which they input their information in reality the outputted PDF document is statically created without consideration of the user s input.

Yet these approaches cannot account for dynamic variations related to user input and operations of equipment devices and content of a service provider. Thus the approaches mentioned above lead to and further perpetuate a technological problem in the field of computational generation of data structures within documents while also propagating computational processing and economic inefficiencies specifically because any changes or alterations desired and or required to be in the PDF document would require an IT professional and their associated equipment to reprogram aspects of at least the web form web application and or static PDF document in order to implement changes reflected in the outputted PDF document. Moreover when the service provider has a partnership with a mobile virtual network operator MVNO with the MVNO operating under a different brand from the service provider customers subscribed to each of the different brands i.e. each provider operator providing the brands may be asked to submit separate documentation for the same or similar types of requests related to the service. Thus any changes in documentation i.e. alterations to data structures in a coupled database for each service may increase computer equipment downtime for servicing and coding e.g. due to incompatibility thereby requiring IT professionals to coordinate activities over multiple computing platforms and systems for individual alteration of the web forms to change to a different static configuration before conversion into a specific PDF document can occur.

Therefore a dynamic generation framework implemented on a dynamic generation server provides a way to dynamically generate a PDF document that is specific and unique while also being based on dynamically built information for conversion using user input and the particular application and or client system making a request. This framework captures user input from form fields sent via the request message identifies the type of application or individual associated with the request and dynamically determines or modifies what information and variants of content are used for conversion to a PDF file. The dynamic generation framework may be deployed for particular web applications or may be deployed for a utility service e.g. web service for user equipment and other computers to use via requests through an exposed application programming interface API . A dynamic generation server can use this framework to decide among and select from a plurality of HTML sources CSS strings and other content e.g. media image graphics files etc. which may then be used by the framework to dynamically build a customized HTML string.

For example brand X and brand Y may be associated with separate providers that serve separate customers yet both brands may operate under a partnership such as brand Y being an MVNO and brand X being a national telecommunication service provider. Both brand X and brand Y may use their own web applications for users to input information such as for submitting a request to change features of the particular brand s communication service but the partnership may allow for sharing of back end resources such as a dynamic generation server. Thus the framework running on the dynamic generation server may handle requests for PDF documentation dynamically from users of both brand X and brand Y. The dynamic generation framework is able to take each request from the different brands and users identify the quantity and type of users involved determine the associated brand and the type of request for documentation at issue for each brand. In some instances the framework may then identify different HTML templates graphics formatting and other content particular to each brand and adapt the user input based on the identification to dynamically create and customize what is being converted for output in a particular PDF file.

Therefore a customized HTML string that is particular to the brand and identified variants is dynamically created after the submission of a request which can then be converted to a specific PDF file and sent back to the requesting brand or designated destination. In other words the framework can take input from each request i.e. one from brand X and one from brand Y distinguish differences in required content from a content management server and also verify output formatting parameters. This may then be used by the framework to dynamically build the complete set of information of what is being converted into PDF e.g. a customized HTML string being converted and then convert that complete set of information to a specific customized PDF document.

Thus the same type of request for example request for adding a new user equipment e.g. a new smart phone to an existing communication service subscription for one particular brand from different applications associated with distinct brands may result in the dynamic generation framework automatically adapting to the type of request data input by a user and modifications made to source content that is used in building customized HTML strings for each brand. The customized HTML string is then converted into a PDF document and sent to a destination determined by the framework. Accordingly this framework allows for dynamically generating PDF documents in a particular format in a flexible manner that allows for incorporation of varied formatting and or substantive changes of source content and input information. This is accomplished dynamically by the framework without the need to involve IT professionals to bring a system or application offline in order to statically rework the underlying code. Thus downtime for application maintenance is reduced thereby increasing functional operating efficiency of the computer running the application via the dynamic generation framework.

Turning now to a system is discussed that illustrates one or more embodiments of the present disclosure. In an embodiment system comprises a dynamic generation server a content management CM server a user equipment associated with CM server a client system X a client system Y a user equipment an enhanced node B eNB and a network . In some implementations system may include reference to a plurality of back end computer systems and a home location register . It is understood that system may comprise any number of the components and or .

System comprises a dynamic generation server in communication with network . The dynamic generation server may be associated with a particular operator for example a telecommunication service provider of brand X . The dynamic generation server may comprise at least one processor a communicatively coupled non transitory memory and a dynamic generation application . The dynamic generation server may in an embodiment be referred to as a dynamic generation framework where the dynamic generation framework provides digital communication using dynamic portable document format PDF generation. The dynamic generation server provides digital communication to a requesting client system i.e. a specific computer device associated with a source application accessed by a browser and user as described hereafter by taking a request message which may not conform to any of format content style application programming language file format and or other characteristic otherwise deemed necessary or suitable for a predetermined output in PDF and translates modifies generates and builds a customized HTML string to then dynamically generate a PDF document which is then sent in a reply message. This may allow for a business e.g. a telecommunication service provider to provide customers with PDF documentation via dynamic generation without having to rely on IT personnel i.e. computer specialists that must have specific knowledge of the unique software platforms and computer hardware needed to allow for implementation of any changes and or modifications whenever a particular source application e.g. is asked to provide a specific unique PDF document.

In other words the dynamic generation server may generate a PDF document e.g. in a specific format according to the particular and or specific application dynamically based on a variety of factors including input from users a particular source application e.g. and discussed in detail below and or a service provider s equipment receiving the PDF document generated from the framework. The dynamic generation framework and resulting PDF document may be used to provide digital communication for a customer s UE e.g. a customer s smart phone tablet etc. associated with a service provider. This means that a service provider may configure their telecommunication network and or how a device interacts with the network or equipment based on the PDF document. The PDF document may be sent to equipment of the service provider e.g. a back end system and or home location register HLR of a particular provider which operates according to certain parameters and requirements in order to process PDF documents. Based on the PDF document conforming to certain parameters e.g. formatting content file format being in notation acceptable integration with the equipment authorization credentials present in the document etc. back end system may process the information of the PDF document and in some embodiments may initiate changing parameters of HLR or other systems to provide digital communication services to the customer device i.e. UE according to the customer s request.

Although illustrated as a single server the dynamic generation server and dynamic generation framework are not so limited and may in some embodiments be distributed across a plurality of servers e.g. for example any of DG server content management server servers of back end system and or data stores not shown that are communicatively coupled with the servers. The dynamic generation framework may be deployed in some embodiments within an application in a back end environment and or be deployed as a utility service i.e. a web service for other applications and third party computers to use e.g. client applications like source application Z using an exposed API of the dynamic generation framework . In some embodiments the dynamic generation server may implement a dynamic generation framework through any of modules generation engines parsers and or PDF converters. Although system illustrates a single dynamic generation server and dynamic generation application it is understood that the dynamic generation framework may be implemented using one or more server computers such as at least a portion implemented on dynamic generation server and another portion on the content management server .

A dynamic generation server may implement the dynamic generation framework via the dynamic generation application and upon execution by processor configures processor to receive a request message from a client system e.g. a request message from client system X which is discussed in detail below . The dynamic generation application then parses the request message for information and relevant values in order to select the most relevant source content e.g. URI HTML Templates graphics files CSS . For brevity discussion of source content and messages is provided below. Parsing relevant values from a request message may include the dynamic generation application identifying a source identifier request type identifier input values of a plurality of fields e.g. from inputs into a form of a source application user identification value and or a reply message destination. Based on the parsed request message the dynamic generation application configures a processor to determine output requirement parameters for use in the building creation and output of at least one PDF document that is specific and customized to the request message s .

The dynamic generation application may further correlate the parsed information of the request message and or output requirement parameters with particular source content e.g. any of at least one URI HTML template a Cascading Style Sheets CSS string and a graphics file . Based on at least one determined correlation the dynamic generation server may select from among source content that is accessible via a content management server . In some implementations the dynamic generation server may select one or more of the URI s HTML templates graphics files and or CSS strings . Input values and other information from the request message may be scraped based on the correlation and or selection of particular source content .

It is understood that scraping may refer to the dynamic generation framework implementing a module s for evaluation identification extraction and or copying of at least some received information that is used in the creation of a customized HTML string as discussed below. The dynamic generation server may select particular source content e.g. from corresponding data store s comprising relevant information based on references to a predefined set of rules and or may reference a particular identifier from the request message e.g. request type identifier discussed below read source content e.g. the particular HTML template graphics files CSS from the corresponding stored location and then store the selected information as a string. Using the selections from source content and scraped values the dynamic generation server may be configured to dynamically build a customized HTML string.

As further discussed below it is understood that a customized HTML string may include any of values media content e.g. graphics files at least one CSS string and or at least one HTML string from one of the HTML templates managed by content management server . Note that If the dynamic generation server determines that multiple different PDF documents should be output responsive to information from the request message the dynamic generation server may dynamically build a plurality of different distinct customized HTML strings where each may be based on different combinations from among source content e.g. varied combinations from among any of .

In some implementations the dynamic generation server dynamically builds customized HTML strings by configuring processor to parse the HTML template selected for predefined fields which may be identified by a dynamic placeholder that is predefined prior to selection and map the scraped input values into predefined fields of an HTML template selected from among HTML templates based on the correlation and selection. For example the selected HTML template may have a place holder definition for placement of dynamic content in a specific manner. The dynamic content may be scraped input values that are mapped into the appropriate location. The dynamic server may further if necessary modify without user input the scraped input values according to parameters of the predefined fields. That is the dynamic generation server may truncate character string length for input values being mapped into a certain field or other modifications for implementing the input values or other information into a particular HTML template string.

The dynamic generation server may also take selected source content e.g. from among graphics files and place the selected graphics file within the customized HTML string such as by referencing a place holder definition of the selected HTML template for a particular graphics file. Additionally the dynamic generation server may apply the selected CSS string to the selected HTML template and implement the CSS string within the customized HTML string.

After a particular customized HTML string is dynamically built the dynamic generation server may be configured to use a PDF converter to convert the customized HTML string into a PDF document. Conversion into a PDF document may be dependent on the PDF document being output in a specific format which may be defined as one of the output requirement parameters. For example a PDF document may conform to one of a Base16 notation format. Base32 notation format Base64 notation format or another predetermined format that may conform to requirements associated with a service provider e.g. for being recognizable via the specific format by back end system in order to implement changes on systems like HLR of the service provider . In some embodiments the dynamic generation server may utilize open source information such as ITEXT library and or associated open source converter in the process of conversion of the customized HTML string to a PDF document. Note that some types of PDF converters cannot be exposed as a web service due to their inability to interface with varied sources of information being fed into the converter.

In some implementations the dynamic generation server may take the dynamically generated PDF document and return it to a reply message destination e.g. to a predestinated email address back end system of a service provider and or particular source application . In an alternate embodiment source content e.g. URI HTML template graphics files CSS strings and or customized HTML strings may be cached for use at a future time and may be configurable to incorporate any changes made to source content e.g. an administrator using UE to modify source content since the time of caching. The dynamically generated PDF document may be returned in at least one reply message. The reply message may be based on the user identification value and source identifier which are discussed below. Where multiple PDF documents are intended for different destinations the dynamic generation server may send each PDF document to its corresponding destination in one or more reply messages.

Alternatively the dynamic generation server may send a reply message to the reply message destination with a link to the dynamically created PDF document that is stored remotely and accessible at a later time. Further the dynamically generated PDF document may be signed and submitted to a back end system of a service provider. The back end system may configure a processor to analyze the signed PDF document and based on recognizing that the dynamically generated PDF is signed i.e. authorized by user to proceed with changes requested and conforms to a specific format the dynamically created PDF document implements changes to an associated Home Location Register e.g. HLR of the service provider such that the HLR authorizes access of multiple UE s associated with the input values included in the dynamically generated PDF document to wireless communication connection according to the requested change.

By way of example and without limitation the dynamic generation application may parse a received request message and use the source identifier to determine that it is from source application X and client system X for example both being associated with brand X and use the request type identifier and input values for indication that customer B associated with telecommunication service brand X wants to leave an existing family telecommunication service subscription e.g. where customers A B C are linked to the family subscription and open an individual telecommunication service subscription on brand X specific to customer B. Before customer B can access wireless services of brand X with the individual account the service provider of brand X may need to obtain authorization from the primary holder of the family account e.g. authorization from customer A and also authorization from customer B who wants the individual account on brand X.

Thus the dynamic generation application may determine that activation of a new subscription service for customer B and modification to the family subscription now just for customers A and C should correspond with output parameters that yield different PDF documents e.g. type content formatting etc. for the individual subscription for customer B and the family subscription for customers A and C . The dynamic generation application may then correlate the information and scraped values associated with customer B with a first set of source content that comprises a particular URI HTML Template graphics file and or CSS string. This first set is selected and the dynamic generation application dynamically builds a first customized HTML string specific for customer B. This first customized HTML string may then be converted to a customized PDF document that is unique to customer B and the variants associated with the request for individual subscription.

Continuing with the example similarly the dynamic generation application may also correlate the information and scraped values associated with customers A and C for the family subscription with a second set of source content where the second set of source content may be different and distinct from that of the first subset used for customer A. The second set of source content may use a different HTML template different graphics files and or different CSS strings for layout. Note that the source application X and or request message pertaining to the customers A B and C does not have to set forth all of the parameters for a PDF document s layout content or how it should be generated. The dynamic generation framework can dynamically account for variants of information in the request message and source content in order to adapt for dynamically building and outputting a custom PDF document for each customer and or situation. Each customized HTML string built from the corresponding set of source content and values may then be converted into PDF documents e.g. one PDF document for customer B and a different PDF document for customers A and C . These documents may be sent to each of the corresponding customers for authorization and signature. After a back end system of brand X confirms that each corresponding custom PDF document is signed and conforms to a particular format the back end system may trigger changes and modifications to parameters of an HLR e.g. HLR of brand X which in turn may allow customer A to access wireless communication service of brand X via a UE through an individual subscription account.

Turning back to system the client system X and client system Y may be implemented as specialized computer systems which are described in more detail hereinafter. Client system X and client system Y may each comprise a processor not shown and non transitory memory that stores source application X and source application Y respectively. Source application X may be implemented as a web application that configures a processor of client system X to receive input of users e.g. customers associated with a particular telecommunication service provider through a graphical user interface GUI in a browser. The GUI may be accessed via a portal for coupling with network where the portal may be an enterprise portal showing web based GUI s displayed through a web browser. Similarly source application Y may also be implemented as a web application in a similar manner to that of source application X and thus the characteristics described herein of a web application may be included in source application Y .

A particular client system e.g. client system X and or client system Y and or a web application e.g. source application X and or source application Y may be considered as a distinct source of information and as such may comprise or be associated with specific source identifiers for identification and recognition by other devices during network communications such as when communicating with dynamic generation server via network . It is understood that source application X may be independent of source application Y . For example source application X may be a web application associated with a telecommunications service provider operating under brand X whereas source application Y may be a different albeit possibly similar in nature web application associated with an MVNO that provides services under brand Y. Accordingly source application X may configure a GUI for display to a user that presents media and display content in a manner that is distinct from that of source application Y . A source application e.g. any of may include an HTML web form which may be an HTML 5 webpage with JavaScript Application programming interfaces APIs .

A source application e.g. source application X and or source application Y may be configured to receive input values e.g. input by a user on a UE and or other computer accessing the web application through a browser in form fields that are predefined. In some implementations the form fields may be implemented as a HyperText Markup Language HTML element and or via one or more buttons that selects an associated asynchronous JAVASCRIPT AJAX request. The particular web application e.g. source application X and or source application Y may configure a GUI using for example a specific and distinct HTML string and or Cascading Style Sheets CSS that are particular to the web application. It is understood that the HTML of a web application may include variants of the language e.g. HTML XHTML HTML5 etc. .

Input values may be occasionally referred to as dynamic content given that the values being input will vary based on the user form field and or selection button. Each web application may receive input values corresponding to input from users or associated with multiple users of each web application and each web application may be configured to communicate via network through the use of messaging such as a request message. For example a GUI configured by a web application e.g. source application X and or source application Y may provide one or more form fields that accept input values and send those values through a request message e.g. a message using Hypertext Transfer Protocol HTTP AJAX messaging JavaScript Object Notation JSON message or the like to the dynamic generation server for processing.

In some embodiments the dynamic generation server may de capsulate and or transcode values that may have been encapsulated in the request message. When the user submits the request via the particular source application the request message may be sent to a particular back end of a service provider such as to dynamic generation server . A source application e.g. any of may be identified as a requesting source application by the dynamic generation server in order to distinguish where and or how a particular request message originated and how the request should be treated.

A request message may comprise any of a source identifier a request type identifier a reply message destination and a user identification value. A source identifier may include a value string that is based on any of a port identifier of the particular client system e.g. client system X client system name client system identifier i.e. identifier of the system running the particular source application HTTP message tag e.g. value assigned to the particular request message associated content transmitted therewith uniform resource identifier URI e.g. the particular source application resource link such as www.brandX.com or www.brandY.com or other link specific to the web application and an identifier of the source application e.g. . The source identifier may enable dynamic generation framework e.g. dynamic generation application on dynamic generation server to determine where the particular request is coming from e.g. the particular source application client system UE or etc. and respond accordingly.

A request type identifier may be associated with the particular request message type that is being requested by the user. The request type identifier may correspond and or be correlated with a particular HTML template e.g. at least one of the HTML templates which are discussed later and or HTML template type. The request type identifier may be a value and or string that is a general indicator of what the submitted request message is requesting. For example a request type identifier may correspond with a user request to change service accounts a user upgrading to a new UE a user requesting one of the UE s of a subscription is moved to a separate subscription requesting a new mobile phone number or adding a new UE to an account subscription.

The type of request may correspond with particular documentation that needs to be signed and or verified by a user prior to the service provider enabling the particular request. In some embodiments the request type identifier may be a predefined indicator that the dynamic generation server uses to pick which particular HTML template s or other source content discussed below should be referenced in the process of creating PDF documents by the dynamic generation server as disclosed below. It is understood that a request message may comprise multiple request type identifiers. It is also understood that a request message such as through the use of a predefined indicator does not need to specifically identify the location of corresponding content e.g. source content discussed below pertinent to the request.

In some implementations at least some input values and or associated form fields may correspond be associated with a dynamic place holder of source content where the dynamic place holder defines where input values are placed among the particular source content. Input values may be data input into fields e.g. form fields of the particular web application via a GUI. For example a user may input their name into a form field where the characters of the name are the input values. When the request message is submitted the input values here the user s name is correlated with a dynamic placeholder in an HTML template e.g. and the input values here the user s name may be placed in the corresponding arrangement when a customized HTML string is created. Further discussion of customized HTML strings is disclosed below.

Note that in some embodiments input values associated with the identification of a particular user s e.g. a particular customer of the UE and or subscription may be referred to as user identification values and such values may be associated with a specific tag of a form field in the source application. A user identification value may be the name of a particular user and or may indicate the particular type of user such as a customer of the service provider an employee a contractor technician potential customer guest or other known status types operating with the service provider. Thus in some embodiments a request message may identify a predefined plurality of user identification values that each correspond with a different user. The dynamic generation framework e.g. dynamic generation server may use the user identification values of a request message to figure out for example how many users are associated with the request whether each user requires the same treatment for dynamic generation whether customized HTML strings should be built for each user or just for a subset of those identified and or other indications for deciding which variants of content should be referenced in creation of individual PDF documents.

A request message may also comprise a reply message destination that may include an indicator of where the dynamic generation framework should reply. For example the reply message destination may be an email address Internet Protocol IP address source application address for receiving content HTTP reply pathway or other communication link paths via network . In some embodiments it may be determined e.g. by indication in the request message and or upon determination by the dynamic generation framework that multiple reply messages will be submitted to different reply message destinations such as where multiple users are involved in the request message and dynamically generated material should be sent to distinct destinations e.g. for users source applications etc. .

In some embodiments responsive to a request message and dynamically generating one or more PDF documents one reply message with at least some dynamically generated PDF s may be sent back to a particular source application via a first reply message destination and another reply message with the same and or different dynamically generated PDF s is sent to a back end system e.g. associated with the dynamic generation server . The back end system may in some embodiments be triggered by the received PDF from the dynamic generation server that dynamically generates the PDF responsive to a request message and implement changes to a telecommunications network e.g. changing digital communication access in an HLR for a new customer based on parsing and mapping information from the PDF associated with the new customer .

The implementation of the dynamic generation framework disclosed herein may improve the functional operations of a communications network by increasing communication efficiency among devices e.g. between computers coupled with back end systems associated with a service provider and network such as through decreasing downtime of particular client systems and or source applications by mitigating the need for IT professionals to shut down parts of the communication network in order to implement content changes. Thus this may also improve operational and functional efficiency of a device e.g. a particular user s UE or other computer system accessing a source application through decreasing the functional complexity of the source application e.g. and thus decreasing processing requirements and increasing processing availability of a processor on any of a client system e.g. and or UE . This may also improve the technological field of implementing digital communication access by a service provider to customers of a telecommunication network through increased availability of source applications.

In some implementations one web application e.g. source application X may be associated with another web application e.g. source application Y where source application Y uses at least some elements of source application X . For example source application X may provide particular Java Archive JAR packages for source application Y to use thus extending availability of and or referencing name value pairs NVP and or key value pairs KVP for inclusion in a particular request message sent to dynamic generation server .

It is understood that the system may comprise any number of UE s e.g. and any number of access points e.g. an enhanced evolved Node B eNB a base transceiver station BTS and so on without limitation to a particular wireless protocol . These access points e.g. eNB can be terrestrial access points or ground stations or satellite access points. The UE may comprise a radio communication transceiver at least one processor and a non transitory memory . Further discussion of a UE is provided with respect to . The UE is configured to use the radio communication transceiver to establish a wireless communication link with eNB . The eNB may at least partly provide communications connectivity of the UE and to a network . A client system X client system Y back end system or any number of other UE s client systems or servers e.g. may also have access to the network .

The collectivity of eNB and other access nodes not illustrated may be said to comprise a radio access network RAN in that these eNBs may facilitate a radio communication link to the UE to provide communicative access to the network including but not limited to a core network internet and or intranet . The network may comprise any combination of private and public networks. In an embodiment the dynamic generation server content management server and or source content may be located in the same wired or wireless local area network LAN and or may be coupled remotely via network . The radio access network may be abstracted in different ways and may comprise in addition to the eNBs servers and data stores such as home location registers HLRs e.g. HLR or servers that implement the functionality of home location registers visitor location registers VLRs or servers that implement the functionality of visitor location registers base station controllers BSCs mobile switching centers MSCs and other network nodes that are specifically associated with providing wireless access and communicative connectivity to the UE s e.g. .

The radio communication transceiver may communicate via communicative coupling with the eNB using any of a variety of wireless communication protocols including for example without limitation a code division multiple access CDMA wireless communication protocol a global system for mobile communication GSM wireless communication protocol a long term evolution LTE wireless communication protocol a world wide interoperability for microwave access WiMAX wireless communication protocol or another wireless communication protocol that may be used in a wireless communications network or a data communications network. As discussed in the foregoing voice transmission and or data can be transmitted to the UEs from the RAN e.g. an eNB using a variety of networks and configurations. Accordingly the illustrations provided herein are not intended to limit the embodiments of the invention and are merely to aid in the description of aspects of embodiments of the invention.

The UE may include but not be limited to a mobile phone a personal digital assistant PDA a media player a wireless enabled computer a wearable computer a wearable communication device or other mobile communication device. Further discussed of a UE is disclosed in . In an embodiment the UE may have other components not shown such as a near field communication NFC radio transceiver a wireless local area network WLAN radio transceiver or other components for communicative coupling.

In an embodiment UE may comprise a source application Z that is stored in the non transitory memory . In some implementations source application Z may be a type of source application that is a client application of a third party and thus utilizes the dynamic generation framework e.g. via dynamic generation server as a web service via the use of exposed API calls via network to dynamic generation server . The dynamic generation server may reply to the client application e.g. source application Z via the exposed API s and reply destination that is addressed to the UE . Use of the dynamic generation framework as a web service e.g. via source application Z may be implemented substantially similar to that of a web application. That is a user of the UE may input values into form fields of source application Z which are then sent in a request message using exposed API s to dynamic generation framework e.g. dynamic generation server via eNB and network .

Using the dynamic generation framework of the dynamic generation server as a web service may be implemented by the source application Z and UE interacting through a service layer to bridge the dynamic generation framework with the particular client application making the request e.g. source application Z that may be any third party who is not the operator of the dynamic generation framework . In some embodiments user input values and other information of source application Z may be sent in a request message using Session Initiation Protocol SIP messaging where the dynamic generation server may receive the SIP message as the request message from source application Z and use and or transform modify the information and values e.g. request type identifier source identifier user identification values and or other payload parameters encapsulated in the SIP message prior to dynamically building a customized HTML string as discussed hereinafter.

Alternatively the UE may also be able to access a web application e.g. source application X or source application Y via a browser and GUI of the UE and thus utilize the dynamic generation server via the web application. In some embodiments use of the dynamic generation framework via a web application e.g. source application X or source application Y may interact and or interface with the dynamic generation framework via an application layer e.g. where the web application is native to the communication service provider and not a client application non native application that is a third party application .

The system may further comprise a content management server . The content management server may include a processor memory and a communication transceiver not shown . The memory may store a content management application that configures the content management server to manage decide and facilitate a dynamic generation framework s access to source content . In some implementations the content management server manages source content through execution of the content management application . The content management application may identify source content based on a corresponding content identifier of the particular source content . That is each type of source content e.g. may be uniquely identified based on what the content represents. The particular content identifier may be provided to dynamic generation server responsive to a request for the associated source content .

A user may input changes into a GUI displayed on UE that may be associated with a business or CM server and the input may correspond with a change in the particular source content . The content management server and content management application may provide the GUI to the UE and update the source content and or corresponding content identifier based on the modification and or change to the particular source content indicated from the UE . If there are any location path changes or other changes associated with the source content the content management server may automatically account for these variations and accordingly provide access to source content for the dynamic generation server . The content management server may further provide source content to the dynamic generation server based on a selection of the particular source content desired by a dynamic generation server .

Source content may include particular data structures defined at least in part by UE and may be stored in non transitory memory and or in a communicatively coupled data store separately located from memory . The content which a dynamic generation framework e.g. dynamic generation server references may be referred to as source content and a particular subset of the source content may be used for incorporation into a customized HTML string. Source content may include Uniform Resource Identifier URI content a plurality of Hypertext Markup Language HTML templates a plurality of graphics files a plurality of Cascading Style Sheets CSS strings and or other content. However it is understood that source content is not limited to and may include content added via UE and or retrieved from a remote data store via network .

Although illustrated as one content management server it is understood that in some embodiments managing source content may include a plurality of servers and or data stores to form a content management system for storage and management of source content . The source content e.g. any of may include but not be limited to unique data structures objects strings that are configurable for storage in a variety of memory locations e.g. in memory or in separate storages. The content management application may be executed and configure processor to manage the location paths for accessing source content while also providing source content requested by the dynamic generation server .

The content management server may be linked to at least one UE i.e. a computer system that is associated with the management modification updating and or alteration of at least some source content via received input where the UE may receive input from business organization members clients and or from users to modify alter and or change parameters of the source content . Modifications or changes to source content may be implemented via UE by users where the content management application allows the UE to access manipulate and modify at least one of the source content e.g. changing the content of HTML templates graphics files and or CSS strings to alter the look feel and or layout of the outputted PDF document without needing to involve IT professionals to perform any changes to the parser and or PDF converter of the dynamic generation server and dynamic generation application . It is understood that embodiments of system may be implemented to perform the methods disclosed herein such as method of and or method of .

Turning now to a method for providing digital communication using dynamic portable document format PDF generation is disclosed. At block the dynamic generation server implementing a dynamic generation framework may execute at least processor and receive a request message from a client system e.g. . The request message may include a plurality of fields a request type identifier and a source identifier associated with a requesting source application. The plurality of fields may comprise input values and one of the fields may include a user identification value that is associated with user input to a client system. For example the user identification value may be a user s name. In some implementations the source application sending the request may be a web application e.g. accessed by the client system executing at least one processor and or a client application e.g. that sends the request message via API calls to the dynamic generation server as a web service.

At block the method further includes the dynamic generation server parsing the request message that identifies the source identifier and the input values that correspond to the plurality of fields. At block the dynamic generation server determines a plurality of output requirement parameters based on any of the input values of the plurality of fields the user identification value the request type identifier the source identifier and a reply message destination. In some implementations the output requirement parameters define at least a PDF output format e.g. Base64 notation format a quantity of customized Hypertext Markup Language HTML strings e.g. corresponding to the number of different PDF documents that are to be outputted and the reply message destination. The source identifier may be based on any of a port identifier of the client system client system name client system identifier internet protocol IP HTTP message tag and uniform resource identifier URI . The request type identifier may correspond with a HTML template type referenced by the dynamic generation server and used for determining which HTML template and or other particular source content is selected from location storage of the source content .

At block the method continues by the dynamic generation server correlating based on the determination of output requirement parameters the request message with source content that includes at least one HTML template e.g. from a Cascading Style Sheets CSS string e.g. from and a graphics file e.g. from . A correlation by the dynamic generation server may be based on any of the plurality of fields the request type identifier and the source identifier. At block the dynamic generation server uses the correlation to select e.g. through the use of content management server particular source content e.g. any of particular HTML templates CSS strings and or graphics files from their respective storage locations . For example a request message related to switching a communication service on brand X may correspond with selecting a subset of source content that includes an HTML template for opening a new account a corresponding CSS string and a plurality of graphics files associated with brand X and the selected HTML template.

At block the method may further include the dynamic generation server scraping input values from the plurality of fields of the request message based on the selection. At block the dynamic generation server dynamically builds at least one customized HTML string using the scraped input values based on the selecting. The method continues at block with the dynamic generation server converting responsive to the dynamic building the customized HTML string into a PDF document. The PDF document may conform to a PDF output format e.g. Base 64 notation format discussed in . that is an output requirement parameter. In some embodiments dynamic building of a customized HTML string by the dynamic generation server may comprise mapping the scraped input values of the request message into predefined fields of the selected HTML template. The mapping may be based on determination of a correlation and the particular selection of source content e.g. which particular HTML template being selected . Dynamic building by the dynamic generation server may further include modifying the scraped input values according to parameters of the predefined fields placing the selected graphics file within the customized HTML string and applying the selected CSS string to the selected HTML template.

In some embodiments the method may include the dynamic generation server determining whether the request message identifies a predefined plurality of user identification values that each correspond with a different user. Such as whether the request message is associated with three users and whether a different outputted PDF document is required for each user and thus different source content such as HTML templates graphic files CSS strings and or URI s is required to dynamically build a customized HTML string being fed for conversion into a converter of the dynamic generation server . Responsive to a determination that the request message corresponds with a plurality of users e.g. identification of a plurality of user identification values and different HTML templates for each of the plurality of user identification values the dynamic generation server may implement steps to adapt to outputting multiple PDF documents. This may include the dynamic generation server dynamically building a plurality of customized HTML strings where each customized HTML string corresponds to particular user information e.g. corresponding to any of a user identification value HTML template CSS string and graphics file .

Building each of the plurality of customized HTML strings may be based on the dynamic generation server using the scraped input values of the request message and or different source content which may be selected via the use of content management server . In an embodiment the plurality of customized HTML strings may comprise a first customized HTML string and a second customized HTML string. The second customized HTML string may be based on a different set of source content e.g. a different HTML template from that of the first customized HTML string. Responsive to dynamically building each customized HTML string the dynamic generation server may convert at least the second customized HTML string into a second PDF document based on the second customized HTML string that conforms to the PDF output format. This second PDF document may be returned by the dynamic generation server to a particular reply message destination which may be based on the corresponding user identification value and source identifier and which may be different than where the first PDF document is being sent.

At block the method includes the dynamic generation server returning a reply message which may include the PDF document to the reply message destination and may be based on the user identification value and source identifier. In some implementations a PDF document that is converted from a customized HTML string may conform to a particular format e.g. a base64 notation output file format or other notation format that is predefined as being compatible with a back end system of a service provider associated with the PDF document .

Turning now to a method for providing digital communication using dynamic portable document format PDF generation is disclosed. The method begins at block where the content management server receives a change in source content . The source content may be stored in a communicatively coupled non transitory memory. In some embodiments the source content may be stored in at least one communicatively coupled data store that may be located remotely from the content management server . The source content may include a plurality of HTML templates Cascading Style Sheets CSS strings and or a graphics files. The change in source content may correspond with updated and or modified source content e.g. an updated HTML template that is a modification to one of the plurality of HTML templates . Modification of source content may be based on user input parameters received via the content management server and or via a UE . In some implementations modifications alterations and or updates to particular source content may occur without accessing a dynamic generation server and or altering the dynamic generation application implementing dynamic generation framework.

At block based on receiving the change in source content the dynamic content management server may modify the dynamic place holder and or reference to the dynamic place holder of the updated source content e.g. updated HTML template by using the user input parameters. For example a user device e.g. UE may indicate that a change should be made to one of the HTML templates such as adding a new form field or modifying an existing form field. These input parameters indicating the change may be used to modify the dynamic place holder and thus the new and or modified dynamic place holder may correspond with different and or alternate input values scraped from a request message received by the dynamic generation server . In some implementations the method may include the dynamic generation server identifying from the content management server at least one of the source content e.g. any of the corresponding CSS string graphics file and or URI based on receiving the change in source content. Because of the identification of corresponding source content the dynamic generation server and or content management server may associate one segment of updated source content with the identified corresponding source content that may or may not have been updated. For example the association may be between the updated HTML template and the at least one corresponding CSS string and graphics file of the source content .

Turning to block the method further comprises a dynamic generation server executing at least one processor receiving from any of a client system e.g. any of and UE e.g. a request message corresponding with a requesting source application i.e. the source application making the request . The request message may comprise a plurality of fields a request type identifier and a source identifier associated with a requesting source application e.g. . The plurality of fields may comprise input values and at least one of the plurality of fields may include a user identification value. The user identification value may be associated with user input to the corresponding client system e.g. and or UE e.g. of the request message.

The requesting source application may include any of a web application accessed by the client system e.g. any of executing at least one processor. Alternatively a requesting source application may include a third party application e.g. that sends the request message via API calls to the dynamic generation server as a web service. It is understood that at least in some implementations the source identifier may be based on any of a port identifier of the client system client system name client system identifier internet protocol IP HTTP message tag uniform resource identifier URI or other identification of the particular device that participates in initiating the request message. The request type identifier may correspond with a HTML template type referenced by the dynamic generation server. For example a request type identifier for adding a new subscription to a wireless service may correspond with the particular HTML template that is used for adding a customer subscription along with the legal regulatory and or other predefined information required to be in the outputted PDF document.

At block the method further includes the dynamic generation server parsing the request message where the parsing identifies the source identifier and the input values that correspond to the plurality of fields. At block responsive to the parsing the dynamic generation server then determines a plurality of output requirement parameters which may be based on any of the input values of the plurality of fields the user identification value the request type identifier the source identifier and a reply message destination. Output requirement parameters may define any of a PDF output format a quantity of customized Hypertext Markup Language HTML strings and the reply message destination. The PDF document may conform to a specific format e.g. Base64 notation output file format . In some implementations the dynamic generation server may also correlate the request message with at least the updated source content e.g. updated HTML template or other modified altered and or updated source content . The correlation may be based on any of the determination of output requirement parameters the plurality of fields the request type identifier and the source identifier.

The method continues at block with the dynamic generation server selecting from the content management server where the content management server controls access to source content at least the updated HTML template and a CSS string and graphics file associated with the updated HTML template based on the determination. Based on the selection the method may also in some implementations include scraping by the dynamic generation server input values from the plurality of fields of the request message. At block the dynamic generation server dynamically builds a customized HTML string using scraped input values from the request message and based on the selection. The selection of source content may be stored as a string by the dynamic generation server . Dynamically building the customized HTML string by the dynamic generation server may include mapping the scraped input values of the request message into predefined fields of the selected HTML template based on the correlation and the selection of the HTML template. The dynamic building may also comprise modifying the scraped input values according to parameters of the predefined fields placing the selected graphics file within the customized HTML string and applying the selected CSS string to the selected HTML template that is the updated HTML template.

The method continues at block where responsive to the dynamic building of the customized HTML string the dynamic generation server converts the customized HTML string into a PDF document that conforms to a PDF output format where the PDF output format is an output requirement parameter. At block the method continues by the dynamic generation server returning a reply message to the reply message destination. For example this may include sending to a source application e.g. web portal API client system and or user equipment via network . The reply message may comprise any of the PDF document and a link to the PDF document stored remotely. The reply message may be based on the user identification value and source identifier.

The UE includes a touchscreen display having a touch sensitive surface for input by a user. Although a predefined number of application icons are illustrated within the touch screen display it is understood that in different embodiments any number of application icons may be presented via the touch screen display . In some embodiments of the UE a user may be able to receive download and or install additional applications on the UE and an icon associated with such downloaded and installed applications may be added to the touch screen display or to an alternative screen. The UE may have other components such as electro mechanical switches speakers camera lenses microphones input and or output connectors and other components as are well known in the art. The UE may present options for the user to select controls for the user to actuate and or cursors or other indicators for the user to direct. The UE may further accept data entry and or gesture entry from the user including numbers to dial or various parameter values for configuring the operation of the handset. The UE may further execute one or more software or firmware applications in response to user commands. These applications may configure the UE to perform various customized functions in response to user interaction. Additionally the UE may be programmed and or configured over the air for example from a wireless base station a wireless access point or a peer UE . The UE may execute a web browser application which enables the touch screen display to show a web page or other communication portal . The web page may be obtained via wireless communications with a base transceiver station e.g. associated with any wireless communication technologies such as CDMS LTE etc. a wireless network access node Node B NB enhanced Node B eNB a peer UE or any other wireless communication network or system. For example in some embodiments UE may include at least one of the systems and or devices discussed above in including but not limited to and or .

The DSP or some other form of controller or central processing unit operates to control the various components of the UE in accordance with embedded software or firmware stored in memory or stored in memory contained within the DSP itself. In addition to the embedded software or firmware the DSP may execute other applications stored in the memory or made available via information carrier media such as portable data storage media like the removable memory card or via wired or wireless network communications. The application software may comprise a compiled set of machine readable instructions that configure the DSP to provide the desired functionality or the application software may be high level software instructions to be processed by an interpreter or compiler to indirectly configure the DSP .

The DSP may communicate with a wireless network via the analog baseband processing unit . In some embodiments the communication may provide Internet connectivity enabling a user to gain access to content on the Internet and to send and receive e mail or text messages. The input output interface interconnects the DSP and various memories and interfaces. The memory and the removable memory card may provide software and data to configure the operation of the DSP . Among the interfaces may be the USB port and the infrared port . The USB port may enable the UE to function as a peripheral device to exchange information with a personal computer or other computer system. The infrared port and other optional ports such as a Bluetooth interface or an IEEE 802.11 compliant wireless interface may enable the UE to communicate wirelessly with other nearby nodes wireless air interfaces other UE s and or wireless base stations. In an embodiment the device may comprise a near field communication NFC transceiver. The NFC transceiver may be used to complete payment transactions with point of sale terminals or other communications exchanges. In an embodiment the device may comprise a radio frequency identify RFID reader and or writer device.

The switches may couple to the DSP via the input output interface to provide one mechanism for the user to provide input to the UE . Alternatively one or more of the switches may be communicatively coupled to a motherboard of the device and or to components of the device via a different path e.g. not via the input output interface for example coupled to a power control circuit power button of the device . The touch screen display is another input mechanism which further displays text and or graphics to the user. The touch screen display is not limited to liquid crystal but may include other display mechanisms such as LED OLED wearable display and the like. It is understood that touch screen display may not necessarily be limited to receiving input via touch but may also include gesture recognition via coupling to other components e.g. etc. . The touch screen LCD controller couples the DSP to the touch screen display . The GPS receiver is coupled to the DSP to decode global positioning system signals thereby enabling the UE to determine its position.

Some portions of the system described above may be implemented by a computer system s e.g. etc. with sufficient processing power memory resources and network throughput capability to handle the necessary workload placed upon it. A server and or computing systems can be implemented as a plurality of structurally separate servers or alternately may correspond to a single server. illustrates a computer system suitable for implementing one or more embodiments disclosed herein. The computer system includes a processor which may be referred to as a central processor unit or CPU that is in communication with memory devices including secondary storage which may include non transitory memory read only memory ROM random access memory RAM input output I O devices and network connectivity devices . The processor may be implemented as one or more CPU chips. A computer system may communicate with a network such as with a core network via a RAN and through the core network the computer system can be connected with external networks such as the Internet. Of course other mechanisms of connecting to a network e.g. the core network RAN LAN and or the Internet are also possible for the computer system such as over wired access networks WiFi networks e.g. based on IEEE 802.11 etc. and so on. Computer system can be embodied by any of a number of types of devices discussed herein.

It is understood that by programming and or loading executable instructions onto the computer system at least one of the CPU the RAM and the ROM are changed transforming the computer system in part into a particular machine or apparatus specialized computer having the novel functionality taught by the present disclosure. It is fundamental to the electrical engineering and software engineering arts that functionality that can be implemented by loading executable software into a computer can be converted to a hardware implementation by well known design rules. Decisions between implementing a concept in software versus hardware typically hinge on considerations of stability of the design and numbers of units to be produced rather than any issues involved in translating from the software domain to the hardware domain. Generally a design that is still subject to frequent change may be preferred to be implemented in software because re spinning a hardware implementation is more expensive than re spinning a software design. Generally a design that is stable that will be produced in large volume may be preferred to be implemented in hardware for example in an application specific integrated circuit ASIC because for large production runs the hardware implementation may be less expensive than the software implementation. Often a design may be developed and tested in a software form and later transformed by well known design rules to an equivalent hardware implementation in an application specific integrated circuit that hardwires the instructions of the software. In the same manner as a machine controlled by a new ASIC is a particular machine or apparatus likewise a computer that has been programmed and or loaded with executable instructions may be viewed as a particular machine or apparatus.

Additionally after the system is turned on or booted the CPU may execute a computer program or application. For example the CPU may execute software or firmware stored in the ROM or stored in the RAM . In some cases on boot and or when the application is initiated the CPU may copy the application or portions of the application from the secondary storage to the RAM or to memory space within the CPU itself and the CPU may then execute instructions that the application is comprised of. In some cases the CPU may copy the application or portions of the application from memory accessed via the network connectivity devices or via the I O devices to the RAM or to memory space within the CPU and the CPU may then execute instructions that the application is comprised of. During execution an application may load instructions into the CPU for example load some of the instructions of the application into a cache of the CPU . In some contexts an application that is executed may be said to configure the CPU to do something e.g. to configure the CPU to perform the function or functions promoted by the subject application. When the CPU is configured in this way by the application the CPU becomes a specific purpose computer or a specific purpose machine.

The secondary storage is typically comprised of one or more disk drives or tape drives and is used for non volatile storage of data and as an over flow data storage device if RAM is not large enough to hold all working data. Secondary storage may be used to store programs which are loaded into RAM when such programs are selected for execution. The ROM is used to store instructions and perhaps data which are read during program execution. ROM is a non volatile memory device which typically has a small memory capacity relative to the larger memory capacity of secondary storage . The RAM is used to store volatile data and perhaps to store instructions. Access to both ROM and RAM is typically faster than to secondary storage . The secondary storage the RAM and or the ROM may be referred to in some contexts as computer readable storage media and or non transitory computer readable media.

I O devices may include printers video monitors liquid crystal displays LCDs touch screen displays keyboards keypads switches dials mice track balls voice recognizers card readers paper tape readers or other well known input devices including but not limited to the components discussed in .

The network connectivity devices may take the form of modems modem banks Ethernet cards universal serial bus USB interface cards serial interfaces token ring cards fiber distributed data interface FDDI cards wireless local area network WLAN cards radio transceiver cards that promote radio communications using protocols such as code division multiple access CDMA global system for mobile communications GSM long term evolution LTE worldwide interoperability for microwave access WiMAX near field communications NFC radio frequency identity RFID and or other air interface protocol radio transceiver cards and other well known network devices. These network connectivity devices may enable the processor to communicate with the Internet or one or more intranets. With such a network connection it is contemplated that the processor might receive information from the network or might output information to the network in the course of performing the above described method steps. Such information which is often represented as a sequence of instructions to be executed using processor may be received from and outputted to the network for example in the form of a computer data signal embodied in a carrier wave.

Such information which may include data or instructions to be executed using processor for example may be received from and outputted to the network for example in the form of a computer data baseband signal or signal embodied in a carrier wave. The baseband signal or signal embedded in the carrier wave or other types of signals currently used or hereafter developed may be generated according to several methods well known to one skilled in the art. The baseband signal and or signal embedded in the carrier wave may be referred to in some contexts as a transitory signal.

The processor executes instructions codes computer programs scripts which it accesses from hard disk floppy disk optical disk these various disk based systems may all be considered secondary storage flash drive ROM RAM or the network connectivity devices . While only one processor is shown multiple processors may be present. Thus while instructions may be discussed as executed by a processor the instructions may be executed simultaneously serially or otherwise executed by one or multiple processors. Instructions codes computer programs scripts and or data that may be accessed from the secondary storage for example hard drives floppy disks optical disks and or other device the ROM and or the RAM may be referred to in some contexts as non transitory instructions and or non transitory information.

In an embodiment the computer system may comprise two or more computers in communication with each other that collaborate to perform a task. For example but not by way of limitation an application may be partitioned in such a way as to permit concurrent and or parallel processing of the instructions of the application. Alternatively the data processed by the application may be partitioned in such a way as to permit concurrent and or parallel processing of different portions of a data set by the two or more computers. In an embodiment virtualization software may be employed by the computer system to provide the functionality of a number of servers that is not directly bound to the number of computers in the computer system . For example virtualization software may provide twenty virtual servers on four physical computers. In an embodiment the functionality disclosed above may be provided by executing the application and or applications in a cloud computing environment. Cloud computing may comprise providing computing services via a network connection using dynamically scalable computing resources. Cloud computing may be supported at least in part by virtualization software. A cloud computing environment may be established by an enterprise and or may be hired on an as needed basis from a third party provider. Some cloud computing environments may comprise cloud computing resources owned and operated by the enterprise as well as cloud computing resources hired and or leased from a third party provider.

In an embodiment some or all of the functionality disclosed above may be provided as a computer program product. The computer program product may comprise one or more computer readable storage medium having computer usable program code embodied therein to implement the functionality disclosed above. The computer program product may comprise data structures executable instructions and other computer usable program code. The computer program product may be embodied in removable computer storage media and or non removable computer storage media. The removable computer readable storage medium may comprise without limitation a paper tape a magnetic tape magnetic disk an optical disk a solid state memory chip for example analog magnetic tape compact disk read only memory CD ROM disks floppy disks jump drives digital cards multimedia cards and others. The computer program product may be suitable for loading by the computer system at least portions of the contents of the computer program product to the secondary storage to the ROM to the RAM and or to other non volatile memory and volatile memory of the computer system . The processor may process the executable instructions and or data structures in part by directly accessing the computer program product for example by reading from a CD ROM disk inserted into a disk drive peripheral of the computer system . Alternatively the processor may process the executable instructions and or data structures by remotely accessing the computer program product for example by downloading the executable instructions and or data structures from a remote server through the network connectivity devices . The computer program product may comprise instructions that promote the loading and or copying of data data structures files and or executable instructions to the secondary storage to the ROM to the RAM and or to other non volatile memory and volatile memory of the computer system .

In some contexts the secondary storage the ROM and the RAM may be referred to as a non transitory computer readable medium or a computer readable storage media. A dynamic RAM embodiment of the RAM likewise may be referred to as a non transitory computer readable medium in that while the dynamic RAM receives electrical power and is operated in accordance with its design for example during a period of time during which the computer system is turned on and operational the dynamic RAM stores information that is written to it. Similarly the processor may comprise an internal RAM an internal ROM a cache memory and or other internal non transitory storage blocks sections or components that may be referred to in some contexts as non transitory computer readable media or computer readable storage media.

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods may be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

Also techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

