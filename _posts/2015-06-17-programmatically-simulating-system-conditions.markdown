---

title: Programmatically simulating system conditions
abstract: Systems and methods are provided for programmatically simulating one or more system conditions for a network resource using one or more services. In one implementation, a server receives a request to initiate a treatment. The request identifies a treatment definition. The server determines, based on the treatment definition, the one or more services and deploys the one or more services to the network resource. The one or more services simulate the one or more system conditions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09363145&OS=09363145&RS=09363145
owner: Amazon Technologies, Inc.
number: 09363145
owner_city: Reno
owner_country: US
publication_date: 20150617
---
A modern computer network system typically includes a variety of components. For example in packet switched computer networks such as the Internet or local area networks LANs logically addressed data packets are sometimes routed from a source to a destination through one or more intermediate nodes. The intermediate nodes may comprise hardware components such as routers which direct and control the flow of data through the networks. Networks also may include other components such as servers bridges gateways firewalls and switches through which data packets may travel.

A network system may experience a variety of events that can cause a degradation in its performance. For example increased data loads can affect the performance of network components such as routers and slow the ability of a network to distribute data. Increased compute loads can stress the capabilities of servers. Other events such as a denial of service DoS attack or a distributed denial of service DDoS attack can overwhelm and cripple a server with large volumes of communications requests. As further examples network components may experience packet loss causing data packets to fail to reach a destination or packet corruption causing data packets to arrive at a destination with errors. Unexpected disruptions and delays can impact an entity s ability to function in a timely and efficient manner.

To prevent unexpected disruptions and delays an entity may wish to understand how a configuration of a particular set of provisioned resources such as network components and servers will react under certain conditions that may impact performance. However testing such resources can be time consuming and expensive. For example one way to test network components is through the use of hardware components that are designed for testing purposes. Such hardware components can be used to determine whether a device is functioning properly. However these components require configuration that is time consuming costly and complex. Furthermore users of hosted environments such as those in a public cloud computing environment are unable to directly conduct such tests because such users are making use of an infrastructure that is within another party s control.

The following detailed description refers to the accompanying drawings. Wherever possible the same reference numbers are used in the drawings and the following description to refer to the same or similar parts. While several illustrative embodiments are described herein modifications adaptations and other implementations are possible. For example substitutions additions or modifications may be made to the components illustrated in the drawings and the illustrative methods described herein may be modified by substituting reordering removing or adding blocks to the disclosed methods. Accordingly the following detailed description is not limiting of the disclosed embodiments. Instead the proper scope is defined by the appended claims.

Disclosed systems and methods allow a user of a hosted environment to programmatically simulate system conditions such as failures or other unusual conditions in a distributed environment. In some embodiments the hosted computing environment hosted environment is a public cloud that allows for on demand provisioning of compute resources such as virtualized or non virtualized compute nodes storage devices routers switches and load balancers. The provisioned resources may be configured in various ways to meet the user s needs. For example users may select a number of provisioned nodes a configuration e.g. operating system type memory allocation CPU speed and storage size of provisioned nodes and networking topology.

Through the use of application programming interfaces APIs implemented by the disclosed systems a user may introduce system conditions such as various network loads and a variety of partial and complete server failure scenarios into the user s configured environment. For example the system may generate an arbitrary packet load on a host computer to simulate DDoS scenarios. A user also may instruct the system to introduce environment failure scenarios by using the APIs. These APIs may for example simulate crashing a computer and bringing the computer back online after a specified amount of time set a computer to randomly appear and disappear from a network to simulate a bad network card or router port or create a partial or complete network partition amongst a set of computers among other possibilities. Furthermore for example the systems can be used to artificially introduce packet corruption packet loss and or packet duplication between host computers.

In one embodiment a computer implemented method programmatically simulates one or more system conditions for a network resource using one or more services. A server may receive a treatment definition that includes data identifying one or more services and the network resource. The server may receive a request to initiate the treatment. The server may determine based on the treatment definition one or more services and deploy the identified services to the network resource to simulate one or more system conditions at the network resource.

In other embodiments a system may include a processor for executing program instructions and a computer readable storage medium e.g. a memory storing the program instructions. The program instructions when executed by the processor may perform the method discussed above.

System may be representative of a portion of a hosted environment e.g. a public cloud that facilitates the provisioning of network resources and system may provide functionality for simulating conditions or events in the hosted environment such as DoS DDoS attacks computing system failures increased network traffic and packet loss packet duplication and or packet corruption conditions.

Such functionality may be provided through a user interface or an application programming interface API that forwards requests for various simulation services to simulation server across network . In such embodiments a request for a service may encompass any direct or indirect mechanism by which simulation server or other software residing on another computer provides information that invokes certain behavior in another software component.

One of skill in the art will appreciate that although a certain number of each component is depicted in any number of these components may be provided. For example one of skill in the art will recognize that one or more components of system may be combined and or divided into subcomponents. Furthermore one of skill in the art will recognize that system may include additional or fewer components and may be arranged in alternative configurations.

Network provides communications between the various network resource components in system such as simulation server gateway server host server and terminals and . Terminals and may provide interfaces for a user to define simulation conditions for network resources of system . In addition simulation server gateway server host server and terminals and may access legacy systems not shown via network or may directly access legacy systems data stores or other network applications. For example these legacy systems may include obsolete components and applications that are accommodated by system for example due to necessity or due to an association with certain data.

Network may be a shared public or private network may encompass a wide area or local area and may be implemented through any suitable combination of wired and or wireless communication networks. Network may further comprise an intranet or the Internet.

Simulation server may comprise a general purpose computer e.g. a personal computer network computer server or mainframe computer having one or more processors that may be selectively activated or reconfigured by a computer program stored in memory. Simulation server may be implemented in a distributed network such that simulation server may communicate via network with additional simulation servers not shown . Alternatively simulation server may be specially constructed for carrying out methods consistent with disclosed embodiments.

Gateway server may include a processor a memory and a data store . Memory may comprise one or more memory or storage devices that store data as well as software. Memory may also comprise for example one or more of RAM ROM magnetic storage or optical storage. Memory may store program modules that when executed by processor perform one or more processes for storing and or accessing data residing on data store . Data store may store applications libraries data and associated configuration settings for one or more entities.

As depicted gateway server may communicate with nodes A B which may in turn communicate with endpoints A E via data links e.g. wired or wireless links . For example gateway server nodes A B and endpoints A E may constitute a local area network LAN that is distinct from network . In such embodiments nodes A and B and additionally or alternatively endpoints A E may be associated with communications protocols that are incompatible with the communications protocols of network and may communicate with network through gateway server .

LAN may be part of or constitute a hosted environment in which one or more entities can provision gateway server nodes A and B and endpoints A E in order to execute various applications. Nodes A and B may constitute any network resource or component such as routers servers bridges gateways firewalls and switches through which data packets may travel. Endpoints A E may be any type device that communicates through nodes A B. For example endpoints A E may be personal computers handheld devices e.g. PDAs cellular phones workstations etc. servers or any other appropriate computing platform or device capable of exchanging data with gateway server . Endpoints A E may each include a processor not shown and a memory not shown .

Host server may comprise a general purpose computer e.g. a personal computer network computer server or mainframe computer having one or more processors that may be selectively activated or reconfigured by a computer program. Host server may be implemented in a distributed network. For example host server may communicate via network with additional servers not shown which may enable host server to distribute processes for parallel execution by a plurality of servers. Although not depicted in in one embodiment host server may include components e.g. memory processor etc. that are equivalent to those of gateway server .

Furthermore consistent with disclosed embodiments simulation server may also programmatically simulate network conditions at gateway server and or host server . For example in such embodiments a user at one of network terminals and may coordinate with simulation server to programmatically simulate a system condition at gateway server and or host server . A user at one of network terminals and may further monitor a performance metric of one or more components of system in response to the simulated system condition.

Terminals and may be any type device for communicating with simulation server gateway server and or host server . For example terminals and may be personal computers handheld devices e.g. PDAs cellular phones workstations etc. servers or any other appropriate computing platform or device capable of exchanging data with simulation server gateway server and or host server . Terminals and may each include a processor not shown and a memory not shown . Furthermore terminals and may execute program modules that provide one or more graphical user interfaces GUIs for interacting with simulation server gateway server and or host server . Alternatively in other embodiments users of terminals and may access data through other network mechanisms such as through an API of one or more services e.g. a web service .

In one embodiment simulation server may provide functionality for simulating conditions or events at one or more components in a distributed environment. For example network resources of LAN of such as gateway server and nodes A and B are shared by several clients e.g. endpoints A E . Consistent with disclosed embodiments simulation services may be executed by a network resource e.g. gateway server and nodes A B or may be executed by a virtualized host e.g. a virtual node associated with gateway server to selectively manipulate packet streams. For example the manipulation of the packet streams may be based upon a treatment specified by a user for a particular network resource or a set of network resources.

A treatment may comprise one or more simulation services designed to create or simulate certain network conditions or events. For example in one embodiment a simulation service may simulate a failure of certain nodes in a network e.g. one or more of nodes A and B introduce latency into a network perform load simulations test recovery code or power off a server e.g. one or more of A E to simulate a failure. In other embodiments a simulation service may simulate a failure of a network resource by returning a message indicative of failure in reply to a request. In still other embodiments a simulation service may apply a particular data load on for example host server . Such a simulation may increase a load of host server over a period of time e.g. an hour two hours a day . In yet other embodiments a simulation service may specify a data rate at which packets should be corrupted e.g. corrupt one in a million packets corrupt two in a million packets etc. . This rate can be configured to increase over time such that a breaking point or negative performance threshold of a network or network component can be determined. In still other embodiments a simulation service may specify a packet loss rate to be introduced at one or more network components. Accordingly one or more simulation services may manipulate packet streams such that a user can monitor and determine how a network or other component responds e.g. whether the network or component recovers .

Simulation server may include a processor a memory and a data store . Data store may include a treatment store which may store data reflecting treatments. For example treatment store may store data reflecting certain predefined treatments and or data reflecting user defined customized treatments. For a particular entity treatment store may store data specifying certain simulation services an entity has selected for execution and may further include data specifying scheduling information pertaining to the simulation services.

Memory may be one or more memory or storage devices that store data as well as software. Memory may comprise for example one or more of RAM ROM magnetic storage or optical storage. Furthermore memory may store programming modules which when executed by processor perform one or more processes for simulating conditions or events for a network or a network component. For example memory may include a definition module a scheduling module and a reporting module as shown in .

Definition module may provide functionality that enables a user at one of terminals and to define a treatment. The definition of a treatment may include but is not limited to a specification of a network resource that should receive the treatment and an identification of one or more simulation services associated with the treatment. For example the network resource may include one of more of endpoints A E nodes A and B gateway server and host server and the network resource may be specified using one or more of an IP address a uniform resource identifier URI a uniform resource locator URL an account hosted on the network resource e.g. on gateway server or host server and any additional or alternate identifier of the network resource.

As described above the definition of the treatment may also identify one or more simulation services designed to create or simulate certain system conditions. For example using one or more simulation services as building blocks the user may create arbitrary loads and hardware conditions at a component of system . Such simulation services may be initiated through the use of application programming interfaces APIs and or may be defined and or scheduled through a user interface.

Further the definition of a treatment may be preexisting e.g. a predefined treatment definition stored in data store or may be user defined e.g. a user at one of terminals and may customize a treatment by selecting services and associated parameters that comprise a treatment . Definition module may further store treatment definitions in treatment store of data store .

Scheduling module may provide functionality for scheduling treatments. For example a user at one of terminals and may schedule a treatment to occur at a particular time i.e. a one time simulation or schedule a treatment to occur on a periodic basis i.e. a regularly scheduled simulation . Alternatively a user may schedule a treatment to occur when certain network conditions are met e.g. when data loads are low . At the time a treatment is to be executed scheduling module may retrieve data defining one or more treatments from data store and deploy appropriate services to implement the defined one or more treatments.

Reporting module may monitor and record results of treatments and may generate logs or reports. For example simulation server may monitor a network or network component and provide a report summarizing or detailing a treatment. Such a report may include diagnostic information such as a timeline of the simulation that indicates which services were deployed and when. A user who requested the simulation may correlate the report to the user s data. For example the report may be correlated to system monitoring data logged by the user during the simulation of the system condition. In such embodiments the correlated data may be stored for example in memory of simulation server .

As discussed above a treatment may comprise one or more simulation services designed to create or simulate certain network or component conditions. For example using one or more simulation services as building blocks one may recreate arbitrary loads and hardware conditions. These simulation services may be initiated through the use of application programming interfaces APIs and or may be defined and or scheduled through a user interface. The following provides an overview of illustrative simulation services.

For example simulation server may enable a user to simulate a DDoS attack on a network resource of system . A user at one of network terminals and may establish a communication session with simulation server . The user may subsequently define a treatment that applies one or more load services to a network resource e.g. host server or gateway server using definition module and may schedule the treatment e.g. at a particular time or at periodic times using scheduling module

Simulation server may subsequently deploy the defined treatment to the network resource at the scheduled time. In such embodiments the specified load service associated with the treatment may generate and execute code that produces requests of a given kind up to a capacity of the network resource. As the deployed treatment may include one or more of such load services the deployed treatment may simulate a desired load for the network resource. Furthermore the use of multiple load services may enable the user to specify a rate at which a load of the network resource increases towards the desired load.

Reporting module may monitor and record results of the treatment applied to the specified network resource and additionally or alternatively the results of the treatment on the performance of other network resources within system . For example in such embodiments reporting module may monitor the performance of one or more of endpoints A E in response to a desired loading of host server or gateway server .

As an additional example simulation server may enable a user to programmatically simulate of a failure of a network resource and a subsequent recovery of that network resource e.g. a reboot of the network resource triggered by a recovery code. In such embodiments simulation server using APIs may programmatically simulate a crash of a network resource and subsequent recovery e.g. reboot after a specified time period an appearance and or disappearance of a network resource e.g. due to a bad network card or router port and a creation of a partial or complete network partition among network resources of system .

For example the user may establish a communication session with simulation server across network and may subsequently define a treatment that prevents a network resource e.g. endpoints A E nodes A and B host server or gateway server from receiving data packets for a specified period of time. Once defined the user may interact with scheduling module to schedule the application of the treatment e.g. at a particular time or at periodic intervals.

As discussed above simulation server may subsequently deploy the defined treatment to the network resource at the scheduled time. In such embodiments a service associated with a deployed treatment may generate and execute code to block the receipt of incoming data packets at the network resource. Reporting module of simulation server may monitor and record results of the treatment applied to the specified network resource and additionally or alternatively the results of the treatment on the performance of other network resources within system .

In a further example simulation server may enable a programmatic simulation of a loss corruption and duplication of data packets at a network resource. In such embodiments a user at one of network terminals and may establish a communication session with simulation server and may subsequently define a treatment that applies one or more packet muncher services to the network resource e.g. endpoints A E nodes A and B host server or gateway server using definition module . The user may subsequently coordinate with scheduling module to schedule the treatment at a particular time or at periodic intervals.

In such embodiments the packet muncher services may include but are not limited to services that cause a network resource to receive a packet and not retransmit the packet i.e. to lose a packet to receive a packet and to retransmit the packet with bits changed i.e. to corrupt a packet or to receive a packet and transmit the packet twice with a variable length latency between the two packets i.e. to duplicate packets . However the disclosed embodiments are not limited to such exemplary services and in additional embodiments the user may define a treatment to include any additional or alternate service that modifies or otherwise corrupts a data packet processed by the network resource.

Simulation server may subsequently deploy the defined treatment to the network resource at the scheduled time. In such embodiments the specified service associated with the treatment may generate and execute code that loses corrupts or duplicates data packets at the network resource as discussed above. Reporting module may monitor and record results of the treatment applied to the network resource and additionally or alternatively the results of the treatment on the performance of other network resources within system . For example in such embodiments reporting module may monitor the performance of one or more of endpoints A E in response to a corruption of data packets by gateway server or nodes A and B.

Although described in terms of services that generate code for execution by a networked resource the treatments defined by simulation server are not limited to such exemplary services. For example the user may supply code to generation module and the supplied code may be incorporated into the defined treatment by simulation server . In such embodiments the defined treatment may be deployed to the network resource which may execute the user supplied code to simulate the desired system condition.

As discussed above a user may access simulation server through a user interface associated with terminals and or alternatively through a programmatic interface e.g. an API associated with terminals and . In an embodiment access to simulation server and the ability to programmatically simulate system conditions based on treatments generated by simulation server may be provided at no charge to the user. For example the user may submit a payment to access the network and compute facilities of system . In some implementations access may be provided to simulation server at no additional charge.

However in additional embodiments the user may access simulation server upon payment of a fee e.g. an access fee to an entity associated with system . For example such access fees may accrue on an hourly daily or monthly basis or alternatively may be due upon each successful attempt to access simulation server .

Additionally third party entities e.g. developers not associated with system may develop services and or treatments that may be available to users of simulation server . In such embodiments a user may pay to access the developed services and or treatments and the resulting revenue may be shared between the third party developer and the entity associated with system .

Prior to the start of routine a user may be authenticated by for example simulation server . For example prior to the start of routine simulation server may transmit a document e.g. a web page that is accessible by an Internet browser executing on for example terminal . The document may include options for a user to log onto a secure site provided by simulation server . The user may log onto the secure site by supplying credentials such as a username and a password. Once authenticated routine may begin.

In block simulation server may receive a treatment definition. Simulation server may store the treatment definition in data store . For example a user at one of terminals may define one or more treatments and submit the definitions to simulation service . As discussed above a definition of the treatment may specify a network resource that should receive the treatment using for example a URL a URI an IP address and an account hosted on the network resource e.g. on gateway server or host server . Furthermore a treatment may comprise one or more simulation services.

In block simulation server may schedule the treatment. As discussed above a user at one of terminals and may schedule the treatment. Simulation server may store data reflecting the scheduling of the treatment in data store .

In block simulation server may receive a request to initiate a simulation. For example simulation services may be initiated through the use of application programming interfaces APIs and or may be requested by scheduling module . As part of block simulation server may determine one or more services that are defined by a treatment. For example as part of block simulation server may retrieve a treatment definition from data store .

In block simulation server may deploy one or more services to an environment specified by the treatment definition. The environment may correspond to one or more network components and the services may cause one or more conditions to occur at the specified endpoint. For example simulation server may retrieve data defining one or more treatments from data store and deploy one or more simulation services to implement the defined one or more treatments. For example a simulation service may cause an arbitrary piece of code to produce a plurality of requests of a particular kind. The plurality of requests may be produced up to a capacity of a machine that hosts the service e.g. host server . Alternatively a simulation service may receive a packet and not retransmit the packet i.e. lose a packet receive a packet and retransmit the packet with one or more changed bits i.e. corrupt a packet or receive a packet and transmit the packet two or more times i.e. duplicate a packet . Duplicated packets may be transmitted with a variable length latency between transmission of the two or more packets.

In block simulation server may record performance information and or record data pertaining to the one or more treatments. For example simulation server may monitor and record results of the one or more treatments and may use the recorded data to generate a log or report. The log or report may identify the one or more services that were deployed along with information identifying the date and time of the deployment and execution. Simulation server may transmit the log or report to a user at one of terminals and upon request or automatically upon completion of the simulation.

As one of ordinary skill in the art will appreciate one or more of blocks may be optional and may be omitted from implementations in certain embodiments. Furthermore functionality provided by one or more of blocks may be subdivided into multiple blocks or combined.

The foregoing description has been presented for purposes of illustration. It is not exhaustive and is not limited to the precise forms or embodiments disclosed. Modifications and adaptations will be apparent to those skilled in the art from consideration of the specification and practice of the disclosed embodiments. For example the described implementations include software but systems and methods consistent with the disclosed embodiments be implemented as a combination of hardware and software or in hardware alone. Examples of hardware include computing or processing systems including personal computers servers laptops mainframes micro processors and the like. Additionally although aspects of the disclosed embodiments are described as being stored in memory one skilled in the art will appreciate that these aspects can also be stored on other types of computer readable media such as secondary storage devices for example hard disks floppy disks or CD ROM or other forms of RAM or ROM USB media DVD or other optical drive media.

Computer programs based on the written description and disclosed methods are within the skill of an experienced developer. The various programs or program modules can be created using any of the techniques known to one skilled in the art or can be designed in connection with existing software. For example program sections or program modules can be designed in or by means of .Net Framework .Net Compact Framework and related languages such as Visual Basic C etc. Java C Objective C HTML HTML AJAX combinations XML or HTML with included Java applets. One or more of such software sections or modules can be integrated into a computer system or existing e mail or browser software.

Moreover while illustrative embodiments have been described herein the scope of any and all embodiments having equivalent elements modifications omissions combinations e.g. of aspects across various embodiments adaptations and or alterations as would be appreciated by those skilled in the art based on the present disclosure. The limitations in the claims are to be interpreted broadly based on the language employed in the claims and not limited to examples described in the present specification or during the prosecution of the application which examples are to be construed as non exclusive. Furthermore the blocks of the disclosed routines may be modified in any manner including by reordering blocks and or inserting or deleting blocks. It is intended therefore that the specification and examples be considered as illustrative only with a true scope and spirit being indicated by the following claims and their full scope of equivalents.

