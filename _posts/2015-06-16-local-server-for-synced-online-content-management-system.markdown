---

title: Local server for synced online content management system
abstract: A client device can implement a client-side application for a server-side online content management system. The client-side application can communicate with the server-side online content management system to sync data stored locally on the client-side with data stored on the server-side. A local web server can be implemented on the client device to work in conjunction with the client-side application, such that the local web server can access the data stored locally. The client device can run a web browser that communicates with the local web server. A user of the client device can use the web browser to connect to the local web server to access the synced data stored locally on the client-side. Advantages of accessing the data stored locally using the web browser via the local web server include performance improvements, offline access to the data, and use of native client applications to interact with the data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09451022&OS=09451022&RS=09451022
owner: Dropbox, Inc.
number: 09451022
owner_city: San Francisco
owner_country: US
publication_date: 20150616
---
This application is a continuation of U.S. patent application Ser. No. 13 849 165 filed Mar. 22 2013 the contents of the above patent application is hereby expressly incorporated by reference in its entirety for all purposes herein.

The present technology pertains to accessing synchronized data and more specifically pertains to reading accessing or otherwise interacting with synchronized data using a local web server.

Computing devices and applications are becoming more commonplace. Every day people use applications on their computing devices to access and interact with their data especially as mobile computing devices and applications are growing in number and in function. Browsing applications are frequently used to navigate and access various data. Some people have data that is synced online at servers and locally on their devices. A user can store his data at an online server and have that data synced with local data on his computing device. For example an email of the user can be stored online and also stored locally on his computing device. When the user deletes the email stored online the same local version of the email can be deleted from his computing device. Likewise when the user deletes the local email from his device the online version of the email can be deleted as well.

In some cases it can be convenient to use a browsing application to navigate or interact with data such as to read the online version of the email in the previous example. However accessing online data via the browsing application can be slow or unreliable depending on the network connection to the online data. If the network connection is slow intermittent or otherwise unreliable the overall user experience associated with using browsing applications to interact with data can decrease.

Additional features and advantages of the disclosure will be set forth in the description which follows and in part will be obvious from the description or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the disclosure will become more fully apparent from the following description and appended claims or can be learned by the practice of the principles set forth herein.

Disclosed are systems methods and non transitory computer readable storage media for a local server operable with a synchronized online content management system. Various embodiments of the present disclosure enable data to be stored and synchronized at both a local computing device and an online content management system.

In some embodiments a client computing device can implement a client application corresponding to an online content management system. The client application can enable selected data e.g. content items files folders etc. stored locally on the client computing device to be stored and synchronized at the online content management system. The synchronization process between the locally stored data i.e. local data and the data i.e. online data stored at the online content management system can occur at one or more specified times e.g. at a schedule time in response to a synchronization command when data is modified etc. .

In one example the client computing device can be running a web browser. In this example a user of the web browser can use the web browser to surf the Internet. During or after surfing the user can decide to use the web browser to access one or more of his content items e.g. files stored at the online content management system. Since the browser is already open and being used by the user it can be more convenient to the user to use the browser to access the online data than it would be to switch to a content navigation e.g. file navigation application to access local data which is synchronized to the online data . However the user experience associated with accessing online data using the web browser can vary depending on the speed and or reliability of the network connection e.g. Internet speed and or availability .

The disclosed technology can implement a local server running on the client computing device. The local server can work in conjunction with the client application to access and or interact with the locally stored data which is also synchronized with the online data at the content management system. In some embodiments the local server can be included with the implementation of the client application on the client computing device. Via the local server a navigation application such as a browser can access and interact with the locally stored data which is synchronized with the online data. Advantages of locally accessing the synchronized data via the local server using the navigation application include but are not limited to performance improvements offline access to the data and use of native client applications to interact with the data.

Various embodiments of the disclosure are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without parting from the spirit and scope of the disclosure.

The disclosed technology addresses the need in the art for accessing or interacting with data that is synchronized with respect to a local computing device and an online content management system. The disclosed technology can enable a client device to implement a client side application for a server side online content management system. The client side application can communicate with the server side online content management system to synchronize data stored locally on the client side with data stored on the server side. A local web server can be implemented on the client device to work in conjunction with the client side application such that the local web server can access the data stored locally. The client device can run a web browser that communicates with the local web server. A user of the client device can use the web browser to connect to the local web server to access the synchronized data stored locally on the client side. Advantages of accessing the data stored locally using the web browser via the local web server include performance improvements offline access to the data and use of native client applications to interact with the data.

An exemplary system configuration is shown in wherein electronic devices communicate via a network for purposes of exchanging content and other data. The system can be configured for use on a wide area network such as that illustrated in . However the present principles are applicable to a wide variety of network configurations that facilitate the intercommunication of electronic devices. For example each of the components of system in can be implemented in a localized or distributed fashion in a network.

In system a user can interact with content management system through client devices . . . collectively 102 connected to network by direct and or indirect communication. Content management system can support connections from a variety of different client devices such as desktop computers mobile computers mobile communications devices e.g. mobile phones smart phones tablets smart televisions set top boxes and or any other network enabled computing devices. Client devices can be of varying type capabilities operating systems etc. Furthermore content management system can concurrently accept connections from and interact with multiple client devices .

A user can interact with content management system via a client side application installed on client device . In some embodiments the client side application can include a content management system specific component. For example the component can be a stand alone application one or more application plug ins and or a browser extension. However the user can also interact with content management system via a third party application such as a web browser that resides on client device and is configured to communicate with content management system . In either case the client side application can present a user interface UI for the user to interact with content management system . For example the user can interact with the content management system via a client side application integrated with the file system or via a webpage displayed using a web browser application.

Content management system can make it possible for a user to store content as well as perform a variety of content management tasks such as retrieve modify browse and or share the content. Furthermore content management system can make it possible for a user to access the content from multiple client devices . For example client device can upload content to content management system via network . The content can later be retrieved from content management system using the same client device or some other client device .

To facilitate the various content management services a user can create an account with content management system . The account information can be maintained in user account database . User account database can store profile information for registered users. In some cases the only personal information in the user profile can be a username and or email address. However content management system can also be configured to accept additional user information.

User account database can also include account management information such as account type e.g. free or paid usage information e.g. file edit history maximum storage space authorized storage space used content storage locations security settings personal configuration settings content sharing data etc. Account management module can be configured to update and or obtain user account details in user account database . The account management module can be configured to interact with any number of other modules in content management system .

An account can be used to store content such as digital data documents text files audio files video files etc. from one or more client devices authorized on the account. The content can also include folders of various types with different behaviors or other mechanisms of grouping content items together. For example an account can include a public folder that is accessible to any user. The public folder can be assigned a web accessible address. A link to the web accessible address can be used to access the contents of the public folder. In another example an account can include a photos folder that is intended for photos and that provides specific attributes and actions tailored for photos an audio folder that provides the ability to play back audio files and perform other audio related actions or other special purpose folders. An account can also include shared folders or group folders that are linked with and available to multiple user accounts. The permissions for multiple users may be different for a shared folder.

The content can be stored in content storage . Content storage can be a storage device multiple storage devices or a server. Alternatively content storage can be a cloud storage provider or network storage accessible via one or more communications networks. Content management system can hide the complexity and details from client devices so that client devices do not need to know exactly where the content items are being stored by content management system . In one variation content management system can store the content items in the same folder hierarchy as they appear on client device . However content management system can store the content items in its own order arrangement or hierarchy. Content management system can store the content items in a network accessible storage SAN device in a redundant array of inexpensive disks RAID etc. Content storage can store content items using one or more partition types such as FAT FAT32 NTFS EXT2 EXT3 EXT4 ReiserFS BTRFS and so forth.

Content storage can also store metadata describing content items content item types and the relationship of content items to various accounts folders or groups. The metadata for a content item can be stored as part of the content item or can be stored separately. In one variation each content item stored in content storage can be assigned a system wide unique identifier.

Content storage can decrease the amount of storage space required by identifying duplicate content items or duplicate segments of content items. Instead of storing multiple copies content storage can store a single copy and then use a pointer or other mechanism to link the duplicates to the single copy. Similarly content storage can store files more efficiently as well as provide the ability to undo operations by using a content item version control that tracks changes to files different versions of content items including diverging version trees and a change history. The change history can include a set of changes that when applied to the original content item version produce the changed content item version.

Content management system can be configured to support automatic synchronization of content from one or more client devices . The synchronization can be platform agnostic. That is the content can be synchronized across multiple client devices of varying type capabilities operating systems etc. For example client device can include client software which synchronizes via a synchronization module at content management system content in client device s file system with the content in an associated user account. In some cases the client software can synchronize any changes to content in a designated folder and its sub folders such as new deleted modified copied or moved files or folders. The client software can be a separate software application can integrate with an existing content management application in the operating system or some combination thereof. In one example of client software that integrates with an existing content management application a user can manipulate content directly in a local folder while a background process monitors the local folder for changes and synchronizes those changes to content management system . Conversely the background process can identify content that has been updated at content management system and synchronize those changes to the local folder. The client software can provide notifications of synchronization operations and can provide indications of content statuses directly within the content management application. Sometimes client device may not have a network connection available. In this scenario the client software can monitor the linked folder for file changes and queue those changes for later synchronization to content management system when a network connection is available. Similarly a user can manually stop or pause synchronization with content management system .

A user can also view or manipulate content via a web interface generated and served by user interface module . For example the user can navigate in a web browser to a web address provided by content management system . Changes or updates to content in the content storage made through the web interface such as uploading a new version of a content item can be propagated back to other client devices associated with the user s account. For example multiple client devices each with their own client software can be associated with a single account and content items in the account can be synchronized between each of the multiple client devices .

Content management system can include a communications interface for interfacing with various client devices and can interact with other content and or service providers . . . collectively 109 via an Application Programming Interface API . Certain software applications can access content storage via an API on behalf of a user. For example a software package such as an app on a smartphone or tablet computing device can programmatically make calls directly to content management system when a user provides credentials to read write create delete share or otherwise manipulate content. Similarly the API can allow users to access all or part of content storage through a web site.

Content management system can also include authenticator module which can verify user credentials security tokens API calls specific client devices and so forth to ensure only authorized clients and users can access content items. Further content management system can include analytics module module that can track and report on aggregate content item operations user actions network usage total storage space used as well as other technology usage or business metrics. A privacy and or security policy can prevent unauthorized access to user data stored with content management system .

Content management system can include sharing module for managing sharing content publicly or privately. Sharing content publicly can include making the content item accessible from any computing device in network communication with content management system . Sharing content privately can include linking a content item in content storage with two or more user accounts so that each user account has access to the content item. The sharing can be performed in a platform agnostic manner. That is the content can be shared across multiple client devices of varying type capabilities operating systems etc. The content can also be shared across varying types of user accounts.

In some embodiments content management system can be configured to maintain a content directory identifying the location of each content item in content storage . The content directory can include a unique content entry for each content item stored in the content storage.

A content entry can include a content path that can be used to identify the location of the content item in a content management system. For example the content path can include the name of the content item and a folder hierarchy associated with the content item. For example the content path can include a folder or path of folders in which the content item is placed as well as the name of the content item. Content management system can use the content path to present the content items in the appropriate folder hierarchy.

A content entry can also include a content pointer that identifies the location of the content item in content storage . For example the content pointer can include the exact storage address of the content item in memory. In some embodiments the content pointer can point to multiple locations each of which contains a portion of the content item.

In addition to a content path and content pointer a content entry can also include a user account identifier that identifies the user account that has access to the content item. In some embodiments multiple user account identifiers can be associated with a single content entry indicating that the content item has shared access by the multiple user accounts.

To share a content item privately sharing module can be configured to add a user account identifier to the content entry associated with the content item thus granting the added user account access to the content item. Sharing module can also be configured to remove user account identifiers from a content entry to restrict a user account s access to the content item.

To share content publicly sharing module can be configured to generate a custom network address such as a uniform resource locator URL which allows any web browser to access the content in content management system without any authentication. To accomplish this sharing module can be configured to include content identification data in the generated URL which can later be used to properly identify and return the requested content item. For example sharing module can be configured to include the user account identifier and the content path in the generated URL. Upon selection of the URL the content identification data included in the URL can be transmitted to content management system which can use the received content identification data to identify the appropriate content entry and return the content item associated with the content entry.

In addition to generating the URL sharing module can also be configured to record that a URL to the content item has been created. In some embodiments the content entry associated with a content item can include a URL flag indicating whether a URL to the content item has been created. For example the URL flag can be a Boolean value initially set to 0 or false to indicate that a URL to the content item has not been created. Sharing module can be configured to change the value of the flag to 1 or true after generating a URL to the content item.

In some embodiments sharing module can also be configured to deactivate a generated URL. For example each content entry can also include a URL active flag indicating whether the content should be returned in response to a request from the generated URL. For example sharing module can be configured to only return a content item requested by a generated link if the URL active flag is set to 1 or true. Thus access to a content item for which a URL has been generated can be easily restricted by changing the value of the URL active flag. This allows a user to restrict access to the shared content item without having to move the content item or delete the generated URL. Likewise sharing module can reactivate the URL by again changing the value of the URL active flag to 1 or true. A user can thus easily restore access to the content item without the need to generate a new URL.

While content management system is presented with specific components it should be understood by one skilled in the art that the architectural configuration of system is simply one possible configuration and that other configurations with more or less components are also possible.

With reference now to shows an exemplary system embodiment for a local web server that is compatible with a synchronized online content management system. Exemplary system can include client computing device i.e. client device client etc. and one or more servers external to client computing device . Client device can be running client side application i.e. client application . Client device can also be running local web server . Local web server can be included with or can work in conjunction with client application . Moreover client computing device can be running a navigation application such as a content file navigation application or web browser .

In some embodiments client application can be configured to communicate with online content management system e.g. content management system in that is running on one or more servers . Client application can communicate with content management system over a network such as the Internet. Client application can communicate with content management system to sync data stored locally i.e. local data on client device with data i.e. online data stored at content management system . For example particular pieces or portions of data stored locally on client can be synced with respective pieces or portions of data stored at content management system . Accordingly content items e.g. files and or other information can be stored and synced at both content management system and client device . In some embodiments the synchronization between the data stored locally on client and the data stored at content management system can occur at one or more specified times such as at a specified time on a daily basis or at a time specified by a synchronization policy e.g. whenever a threshold percentage of data has been modified .

In some embodiments online content management system can store data associated with users or other entities. For example online content management system can be configured to include accounts for a plurality of users each respective account storing data for a respective user e.g. User A . As shown in User A s account with online content management system can include data such as content item X e.g. file X content item Y content item Z and so forth.

User A can run client side application that is compatible with online content management system . Client application can be configured to communicate with content management system . Via communication client application can sync local data associated with User A s local account and data stored under User A s account at content management system . For example local content items e.g. files X Y and Z can be synced respectively with content item X content item Y and content item Z stored at content management system . In some embodiments User A s local account can be a directory on client device . Content items files and or other data placed in the directory for User A s local account on client can be synced with data included in User A s account on content management system .

As shown in client application can interact with data stored locally e.g. content item X content item Y content item Z etc. under User A s account . In some embodiments local web server can also interact with the data stored locally such as by interacting with the local data via client application .

Browser can access local web server to interact with the data stored locally e.g. content item X content item Y content item Z etc. . Browser can function as a navigational tool to view read browse or otherwise interact with the local data e.g. content item X content item Y content item Z etc. . As shown in through communication browser can access local web server to interact with the local data.

In some embodiments accessing data e.g. at content management system via connection can serve as a back up or alternative to accessing the local data e.g. via local web server and connection . Accessing the locally stored data synced with the data at content management system via local web server can offer several advantages over using the connection e.g. Internet connection to access the data at content management system . These advantages can include but are not limited to improved performance offline access to data and the ability to utilize native applications for interacting with certain data.

As discussed above one advantage of accessing synced local data via local web server is improved performance. Improved performance can include faster interaction and or operation with the local data. For example the speed of opening content item can be significantly increased when content item is opened from browser via local web server and client application as compared to opening content item synced with content item from browser via web connection . As shown in content item as well as synchronized content item can be an image file. Locally opening full resolution version of image content item via local web server can be significantly faster than opening image content item from online content management system . Local connections e.g. can have significantly less latency issues than other network connections e.g. .

In another example improved performance can include generating previews for data. As shown in content items and can be image files. As such thumbnails can be generated for image files and . The generating and displaying of the previews e.g. thumbnails can be performed more efficiently on client device as compared to generating previews at online content management system and then transmitting the previews from content management system to client for display. The generating of the thumbnails for local data can be performed using computing resources of client computing device .

As discussed above another advantage of accessing local data is that a user can still have access to the data when there is no network connection e.g. to content management system . In other words accessing data e.g. stored at content management system can only occur when client can connect to content management system . An advantage of accessing local data is that the data can still be accessed when the Internet is unavailable or disabled e.g. . In one example a user can board a plane that does not provide wireless Internet. During the flight the user can decide to read a document e.g. on client on content management system . Using browser to access local web server the user can read the document e.g. on client even though there is no Internet available during the flight.

In another example not shown in the user can be listening to a music file that is synced on client as file and on content management system as file . If the user plays file on content management system via browser and if the connection between browser and content management system is lost then the playing of file can be interrupted. In contrast if the user plays local file on browser via local web server then the playing of file can continue even if there is no connection e.g. to content management system .

In exemplary system embodiment local web server and client application are implemented on client device such that local web server and or client application can communicate with the operating system of client . It follows that browser can access local web server and or client application to communicate with the operating system of client . Local web server and or client application can ask the operating system which applications are native to a particular piece of data. As such another advantage of locally accessing synced data is that the data can be interacted with and or manipulated using native applications or applications that are configured to be operated with the data.

In one example browser can navigate to image file via local web server . From browser an instruction can be sent via local web server to select which native application to use to open image e.g. an option to Open With . . . with respect to file . The instruction can correspond for example to a right click of a mouse with respect to an icon representing file . Image editor can be included among those native applications installed on client . A command initiated from browser can cause image editor i.e. native application application configured particularly for file or for a file type associated with file to open file . Opening image file using image editor can provide a richer or otherwise better experience than compared to opening image at content management system with a simpler web image viewer application.

In some embodiments a domain name for online content management system can be created such as https www.onlinecontentmanagementsystemlocalhost.com . In order for local web server to accept HTTPS connections there must be a public key certificate for local web server . The certificate must be signed by a trusted certificate authority in order for browser to accept the certificate without warning. Certificate authority can certify or verify that the certificate holder e.g. domain is indeed the operator of the web server e.g. local web server that presents the certificate.

In local web server can be set up with SSL certificate which can be prepared for example by an administrator of content management system . SSL certificate can be verifiable with certificate authority . In one example in order to access local web server browser can go to domain https www.onlinecontentmanagementsystemlocalhost.com which can also be prepared or set up by an administrator of content management system . Domain name https www.onlinecontentmanagementsystemlocalhost.com can be configured to resolve to the loopback Internet protocol IP address e.g. 127.0.0.1 which points back to local web server . Browser can verify with certificate authority that SSL certificate of local web server is valid. Then HTTPS connection can be established such that browser can access local web server via domain name https www.onlinecontentmanagementsystemlocalhost.com .

In some embodiments an entry for domain name can be stored in local domain name service DNS . This can allow browser to resolve domain name to the loopback IP address even when there is no Internet connection. In one example the entry for domain name can be configured to have a long time to live TTL to further ensure or increase the likelihood that browser will be able to resolve domain name to the loopback IP address.

Furthermore in some embodiments client application can include a content item e.g. file that specifies to browser where domain resolves to. For example client application can configured to include an ASCII file specifying that domain name resolves to the loopback IP address e.g. 127.0.0.1 which points back to local web server .

At step the method can run a local web server on the client computing device. The local web server can be configured to communicate with the client side application to interact with at least a portion of the data stored locally. As mentioned above the data stored locally can be synced with the data stored at the online content management system. Step can include running a web browser on the client computing device. In some embodiments any application with web browsing capabilities can be utilized. In some embodiments an application with content file navigation capabilities can be utilized.

Then the method can access the local web server running on the client computing device via the web browser at step . Step can include interacting with the at least a portion of the data stored locally. The interacting with the at least a portion of the data stored locally can be based at least in part on the accessing of the local web server via the web browser. For example the web browser can access the local web server to open a locally stored content item e.g. file significantly more efficiently than it would be for the web browser to open the synchronized online version of the content item at the online content management system.

Then the exemplary method can access the local server from the client device at step . In some embodiments the local server can be accessed from a navigation application such as a browsing application that is running on the client device. Step can include interacting with at least a portion of the local data. The interaction can be based at least in part on the accessing of the local server from the client device e.g. from a navigation application running on the client device .

In some embodiments a request to access or interact with a piece of synced data local data or online data can be initiated with respect to the local web server and the online content management system simultaneously. The request can be satisfied from whichever source responds first typically the local web server .

As discussed above the synchronization of local data and online data can occur at one or more specified times. In some embodiments during times of synchronization the browser can access the online data stored at the online content management system. In one example the browser can request a content item from the client device. The client device can inform the browser that the content item is in the process of being synced e.g. updated . As such the browser can access the content item from the online content management system.

In some embodiments various embodiments of the present disclosure can also enable one or more settings options or preferences to be changed via the browser. For example the browser can change settings associated with a selective sync option for the client application which specifies which content items files and or folders are to be synchronized for the client device. In another example the browser can change settings that are associated with a unified interface for the client application and the online content management system.

In some embodiments various embodiments of the present disclosure can also enable the local web server and or client application to function as a content delivery network CDN . In one example website data e.g. HTML files CSS files JavaScript files webpage images etc. for the online content management system can be included with the client application. When the browser accesses the local web server an interface similar to the website for the online content management system can be presented in the browser. Moreover when the browser needs to access the website for the online content management system the browser can load the website much fasters since the website data is stored locally. Additionally whenever the website data for the online content management system is changed the updated website data can be included in the client application e.g. as an update for the client application .

In some embodiments interactions with the local data via the local web server can include read only interactions such as viewing and playing content item e.g. files . In some embodiments write interactions with respect to the local data such as sharing content items and modifying file contents can be achieved using network connections to the online content management system. In one example the client application can only share a file by opening the browser to a link at the online content management system to share the file. However in accordance with the present disclosure the browser can integrate access to the online content management system to share the file with the advantages of locally accessing synced data.

Various embodiments of the present disclosure can also be implemented with various online services systems that have client side correspondences. For example an online media streaming service can have a client side application. Media e.g. music videos etc. stored online and locally can be synced. Utilizing a local web server to access the locally stored media which can be synced to the online media can offer various advantages similar to the ones discussed above.

It is further contemplated that a person of ordinary skill in the art would recognize other approaches or variations that can be implemented consistent with the scope of the present disclosure. For example in some embodiments the local web server and or client application can be implemented as a web browser extension. In another example the local web server and or client application can enable one or more computing tasks to be performed using computing resources of the client device thereby reducing resources needed by the online content management system.

With reference now to and and show exemplary possible system embodiments. The more appropriate embodiment will be apparent to those of ordinary skill in the art when practicing the present technology. Persons of ordinary skill in the art will also readily appreciate that other system embodiments are possible.

To enable user interaction with the computing device an input device can represent any number of input mechanisms such as a microphone for speech a touch sensitive screen for gesture or graphical input keyboard mouse motion input speech and so forth. An output device can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances multimodal systems can enable a user to provide multiple types of input to communicate with the computing device . The communications interface can generally govern and manage the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.

Storage device is a non volatile memory and can be a hard disk or other types of computer readable media which can store data that are accessible by a computer such as magnetic cassettes flash memory cards solid state memory devices digital versatile disks cartridges random access memories RAMs read only memory ROM and hybrids thereof.

The storage device can include software modules for controlling the processor . Other hardware or software modules are contemplated. The storage device can be connected to the system bus . In one aspect a hardware module that performs a particular function can include the software component stored in a computer readable medium in connection with the necessary hardware components such as the processor bus display and so forth to carry out the function.

Chipset can also interface with one or more communication interfaces that can have different physical interfaces. Such communication interfaces can include interfaces for wired and wireless local area networks for broadband wireless networks as well as personal area networks. Some applications of the methods for generating displaying and using the GUI disclosed herein can include receiving ordered datasets over the physical interface or be generated by the machine itself by processor analyzing data stored in storage or . Further the machine can receive inputs from a user via user interface components and execute appropriate functions such as browsing functions by interpreting these inputs using processor .

It can be appreciated that exemplary systems and can have more than one processor or be part of a group or cluster of computing devices networked together to provide greater processing capability.

For clarity of explanation in some instances the present technology may be presented as including individual functional blocks including functional blocks comprising devices device components steps or routines in a method embodied in software or combinations of hardware and software.

In some embodiments the computer readable storage devices mediums and memories can include a cable or wireless signal containing a bit stream and the like. However when mentioned non transitory computer readable storage media expressly exclude media such as energy carrier signals electromagnetic waves and signals per se.

Methods according to the above described examples can be implemented using computer executable instructions that are stored or otherwise available from computer readable media. Such instructions can comprise for example instructions and data which cause or otherwise configure a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Portions of computer resources used can be accessible over a network. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language firmware or source code. Examples of computer readable media that may be used to store instructions information used and or information created during methods according to described examples include magnetic or optical disks flash memory USB devices provided with non volatile memory networked storage devices and so on.

Devices implementing methods according to these disclosures can comprise hardware firmware and or software and can take any of a variety of form factors. Typical examples of such form factors include laptops smart phones small form factor personal computers personal digital assistants and so on. Functionality described herein also can be embodied in peripherals or add in cards. Such functionality can also be implemented on a circuit board among different chips or different processes executing in a single device by way of further example.

The instructions media for conveying such instructions computing resources for executing them and other structures for supporting such computing resources are means for providing the functions described in these disclosures.

Although a variety of examples and other information was used to explain aspects within the scope of the appended claims no limitation of the claims should be implied based on particular features or arrangements in such examples as one of ordinary skill would be able to use these examples to derive a wide variety of implementations. Further and although some subject matter may have been described in language specific to examples of structural features and or method steps it is to be understood that the subject matter defined in the appended claims is not necessarily limited to these described features or acts. For example such functionality can be distributed differently or performed in components other than those identified herein. Rather the described features and steps are disclosed as examples of components of systems and methods within the scope of the appended claims.

