---

title: Systems and methods for time series analysis techniques utilizing count data sets
abstract: Systems and methods are included for adjusting a set of predicted future data points for a time series data set including a receiver for receiving a time series data set. One or more processors and one or more non-transitory computer readable storage mediums containing instructions may be utilized. A count series forecasting engine, utilizing the one or more processors, generates a set of counts corresponding to discrete values of the time series data set. An optimal discrete probability distribution for the set of counts is selected. A set of parameters are generated for the optimal discrete probability distribution. A statistical model is selected to generate a set of predicted future data points. The set of predicted future data points are adjusted using the generated set of parameters for the optimal discrete probability distribution in order to provide greater accuracy with respect to predictions of future data points.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09418339&OS=09418339&RS=09418339
owner: SAS Institute, Inc.
number: 09418339
owner_city: Cary
owner_country: US
publication_date: 20151123
---
The present disclosure claims the benefit of priority under 35 U.S.C. 119 e to U.S. Provisional Application No. 62 107 761 filed Jan. 26 2015 U.S. Provisional Application No. 62 116 507 filed Feb. 15 2015 U.S. Provisional Application No. 62 128 965 filed Mar. 5 2015 U.S. Provisional Application No. 62 128 996 filed Mar. 5 2015 U.S. Provisional Application No. 62 130 771 filed Mar. 10 2015 and U.S. Provisional Application No. 62 146 532 filed Apr. 13 2015 the entireties of which are incorporated herein by reference.

This application is also related to and incorporates by reference for all purposes the full disclosure of co pending U.S. patent application Ser. No. 13 786 838 entitled DEVICES FOR FORECASTING RATIOS IN HIERARCHIES .

The present disclosure generally relates to systems and methods for time series analysis techniques utilizing count data sets.

Many organizations need to predict future events using large numbers of time series that are discretely valued. These time series called count series fall approximately between continuously valued time series for which there are many predictive techniques ARIMA UCM ESM and others and intermittent time series for which there are few predictive techniques e.g. Croston s method . Most traditional time series analysis techniques assume that the time series values are continuously distributed. When a time series takes on small discrete values e.g. 0 1 2 3 etc. this assumption of continuity is unrealistic.

In accordance with the teaching provided herein systems methods and computer program products are provided herein for adjusting a set of predicted future data points for a time series data set.

For example a system is provided that includes a processor and a non transitory computer readable storage medium containing instructions that when executed with the processor cause the processor to perform operations. The operations include receiving a time series data set wherein the time series data set includes a plurality of data points that correspond to a plurality of discrete values. The operations further include generating a set of counts for the time series data set by analyzing the time series data wherein a count corresponds to a number of instances of a particular discrete value in the time series data set. The operations further include automatically selecting an optimal discrete probability distribution for the set of counts from a set of candidate discrete probability distributions based on a selection criterion. The operations further include generating a set of parameters corresponding to the optimal discrete probability distribution. The operations further include selecting a statistical model for the time series data set wherein selecting the statistical model includes using a set of statistical models and the selection criterion. The operations further include generating the set of predicted future data points for the time series data set wherein generating the set of predicted future data points includes using the selected statistical model. The operations further include adjusting the set of predicted future data points for the time series data set wherein adjusting the set of predicted future data points includes using the set of parameters corresponding to the optimal discrete probability distribution. The operations further include using the adjusted set of predicted future data points to provide a predicted future data point based on received user input associated with the data set.

In another example a computer program product tangibly embodied in a non transitory machine readable storage medium is provided that includes instructions that cause a data processing apparatus to receive a time series data set wherein the time series data set includes a plurality of data points that correspond to a plurality of discrete values. The instructions further cause the data processing apparatus to generate a set of counts for the time series data set by analyzing the time series data wherein a count corresponds to a number of instances of a particular discrete value in the time series data set. The instructions further cause the data processing apparatus to automatically select an optimal discrete probability distribution for the set of counts from a set of candidate discrete probability distributions based on a selection criterion. The instructions further cause the data processing apparatus to generate a set of parameters corresponding to the optimal discrete probability distribution. The instructions further cause the data processing apparatus to select a statistical model for the time series data set wherein selecting the statistical model includes using a set of statistical models and the selection criterion. The instructions further cause the data processing apparatus to generate the set of predicted future data points for the time series data set wherein generating the set of predicted future data points includes using the selected statistical model. The instructions further cause the data processing apparatus to adjust the set of predicted future data points for the time series data set wherein adjusting the set of predicted future data points includes using the set of parameters corresponding to the optimal discrete probability distribution. The instructions further cause the data processing apparatus to use the adjusted set of predicted future data points to provide a predicted future data point based on received user input associated with the data set.

In another example a computer implemented method is provided that includes receiving a time series data set wherein the time series data set includes a plurality of data points that correspond to a plurality of discrete values. The method further includes generating a set of counts for the time series data set by analyzing the time series data wherein a count corresponds to a number of instances of a particular discrete value in the time series data set. The method further includes automatically selecting an optimal discrete probability distribution for the set of counts from a set of candidate discrete probability distributions based on a selection criterion. The method further includes generating a set of parameters corresponding to the optimal discrete probability distribution. The method further includes selecting a statistical model for the time series data set wherein selecting the statistical model includes using a set of statistical models and the selection criterion. The method further includes generating the set of predicted future data points for the time series data set wherein generating the set of predicted future data points includes using the selected statistical model. The method further includes adjusting the set of predicted future data points for the time series data set wherein adjusting the set of predicted future data points includes using the set of parameters corresponding to the optimal discrete probability distribution. The method further includes using the adjusted set of predicted future data points to provide a predicted future data point based on received user input associated with the data set.

In the following description for the purposes of explanation specific details are set forth in order to provide a thorough understanding of embodiments of the technology. However it will be apparent that various embodiments may be practiced without these specific details. The figures and description are not intended to be restrictive.

The ensuing description provides example embodiments only and is not intended to limit the scope applicability or configuration of the disclosure. Rather the ensuing description of the example embodiments will provide those skilled in the art with an enabling description for implementing an example embodiment. It should be understood that various changes may be made in the function and arrangement of elements without departing from the spirit and scope of the technology as set forth in the appended claims.

Specific details are given in the following description to provide a thorough understanding of the embodiments. However it will be understood by one of ordinary skill in the art that the embodiments may be practiced without these specific details. For example circuits systems networks processes and other components may be shown as components in block diagram form in order not to obscure the embodiments in unnecessary detail. In other instances well known circuits processes algorithms structures and techniques may be shown without unnecessary detail in order to avoid obscuring the embodiments.

Also it is noted that individual embodiments may be described as a process which is depicted as a flowchart a flow diagram a data flow diagram a structure diagram or a block diagram. Although a flowchart may describe the operations as a sequential process many of the operations can be performed in parallel or concurrently. In addition the order of the operations may be re arranged. A process is terminated when its operations are completed but could have additional operations not included in a figure. A process may correspond to a method a function a procedure a subroutine a subprogram etc. When a process corresponds to a function its termination can correspond to a return of the function to the calling function or the main function.

Systems depicted in some of the figures may be provided in various configurations. In some embodiments the systems may be configured as a distributed system where one or more components of the system are distributed across one or more networks in a cloud computing system.

Predictive modeling can refer to a number of techniques used in predictive analytics that have a common goal of finding a relationship between a target a response e.g. a dependent variable and various predictors e.g. an independent variables. Predictive analytics use predictive modeling machine learning and data mining techniques that analyze current and historical facts to make predictions about future or otherwise unknown events. A predictive model e.g. a statistical model may be made up of a number of predictors which are variable factors that are likely to influence subsequent data points. In predictive modeling data is collected for the relevant predictors a predictive model is formulated predictions are made and the model is validated or revised as additional data becomes available. The model may employ a simple linear equation or a complex neural network for example. A time series as used herein is intended to refer to a sequence of data points typically consisting of successive measurements made over time. References to a time series are intended to refer to a single time series and or multiple time series unless otherwise specified.

Certain aspects of the disclosed subject matter relate to system and methods for automated count series forecasting. As used herein a count series is intended to refer to a time series data set for which the data points included in the data set take on discrete values e.g. 0 1 2 3 and the like . In many cases although not always the discrete values may be small in value such as integers under ten for example.

Current time series analysis techniques include for example Exponential Smoothing Models ESM Auto Regressive Integrated Moving Average Models either with or without exogenous variables ARIMA X Unobserved Component Models UCM Intermittent Demand Models IDM and the like. Most traditional time series analysis techniques assume that the time series values are continuously distributed. For example ARIMA models assume that the time series values are generated by continuous valued white noise passing through various types of filters. A continuous valued time series also refers to a time series that includes continuous variables. A continuous variable can take on any real value between two specified values wherein a discrete variable cannot. For example suppose a fire department mandates that all fire fighters must weigh between 150 and 250 pounds. The weight of the fire fighter would be an example of a continuous variable since the fire fighter s weight could take on any real value between 150 and 250 pounds.

Discrete probability distributions include discrete variables having discrete values rather than continuous variables. For example a coin may be flipped a number of times and the number of heads may be counted. The number of heads could be any integer value between 0 and the number of flips. However it could not be any number between 0 and the number of flips. There could not for example be 2.5 heads. Thus the number of heads must be a discrete variable.

In at least one example using discrete probability distributions with count series analysis can better predict future values and most importantly more realistic confidence intervals than current techniques. In addition some discrete probability distributions have zero modified versions where there are more or fewer zero values than expected under the usual unmodified version of the distribution. As discussed herein zero modified is intended to refer to a zero inflated probability distribution e.g. a probability distribution having an excess of zero values and or a zero deflated probability distribution e.g. a probability distribution where zero values are discarded or otherwise ignored or a probability distribution where zero values are less numerous than expected . Thus a realistic probability distribution is used to account for the zero values in a time series. Techniques herein are directed to provide a more accurate predictive model for a count series data set than previously utilized techniques.

The data transmission network may also include computing environment . The computing environment may be a specialized computer or other machine that processes the data received within the data transmission network . The data transmission network also includes one or more network devices . The network devices may include client devices that attempt to communicate with computing environment . For example the network devices may send data e.g. one or more data points in a data set to the computing environment to be processed and or the network devices may send signals to the computing environment to control different aspects of the computing environment or the data e.g. a count series data set it is processing among other reasons. The network devices may interact with the computing environment through a number of ways such as for example over one or more of the networks .

As shown in computing environment may include one or more other systems. For example computing environment may include a database system and or a communications grid and or a count series forecasting engine . The count series forecasting engine as described further in this description may be stored the network attached data stores or may exist as a stand alone service external to the computing environment .

In some embodiments the network devices may provide a large amount of data either all at once or streaming over a period of time e.g. using event stream processing ESP described further with respect to to the computing environment via the networks . For example the network devices may include network computers sensors databases or other devices that may transmit or otherwise provide data to the computing environment . For example the network devices may include local area network devices such as routers hubs switches or other computer networking devices. These devices may provide a variety of stored or generated data e.g. a count series data set such as network data or data specific to the network devices themselves. The network devices may also include sensors that monitor their environment or other devices to collect data regarding that environment or those devices and such network devices may provide data they collect over time. The network devices may also include devices within the internet of things such as devices within a home automation network. Some of these devices may be referred to as edge devices and may involve edge computing circuitry. Data may be transmitted by the network devices directly to the computing environment or to network attached data stores such as the network attached data stores for storage so that the data may be retrieved later by the computing environment or other portions of the data transmission network .

The data transmission network may also include one or more of the network attached data stores . The network attached data stores are used to store data to be processed by the computing environment as well as any intermediate or final data generated by the computing system in non volatile memory. However in certain embodiments the configuration of the computing environment allows its operations to be performed such that intermediate and final data results can be stored solely in volatile memory e.g. RAM without a requirement that intermediate or final data results be stored to non volatile types of memory e.g. disk . This can be useful in certain situations such as when the computing environment receives ad hoc queries from a user and when responses which are generated by processing large amounts of data need to be generated in real time. In this non limiting situation the computing environment may be configured to retain the processed information within memory so that responses can be generated for the user at different levels of detail as well as allow a user to interactively query against this information.

The network attached data stores may store a variety of different types of data e.g. count series data set s organized in a variety of different ways and from a variety of different sources. For example network attached data storage may include storage other than primary storage located within computing environment that is directly accessible by processors located therein. Network attached data storage may include secondary tertiary or auxiliary storage such as large hard drives servers virtual memory among other types. Storage devices may include portable or non portable storage devices optical storage devices and various other mediums capable of storing containing data. A machine readable storage medium or computer readable storage medium may include a non transitory medium in which data can be stored and that does not include carrier waves and or transitory electronic signals. Examples of a non transitory medium may include for example a magnetic disk or tape optical storage media such as compact disk or digital versatile disk flash memory memory or memory devices. A computer program product may include code and or machine executable instructions that may represent a procedure a function a subprogram a program a routine a subroutine a module a software package a class or any combination of instructions data structures or program statements. A code segment may be coupled to another code segment or a hardware circuit by passing and or receiving information data arguments parameters or memory contents. Information arguments parameters data etc. may be passed forwarded or transmitted via any suitable means including memory sharing message passing token passing network transmission among others. Furthermore the data stores may hold a variety of different types of data. For example network attached data stores may hold unstructured e.g. raw data such as inventory data e.g. a database containing records identifying products information for items being stored in an inventory or product sales databases e.g. a database containing individual data records identifying details of individual product sales .

The unstructured data may be presented to the computing environment in different forms such as a flat file or a conglomerate of data records and may have data values and accompanying time stamps. The computing environment may be used to analyze the unstructured data in a variety of ways to determine the best way to structure e.g. hierarchically structure that data such that the structured data is tailored to a type of further analysis that a user wishes to perform on the data e.g. count series analysis . For example after being processed the unstructured time stamped data may be aggregated by time e.g. into daily time period units to generate time series data and or structured hierarchically according to one or more dimensions e.g. parameters attributes and or variables . For example data may be stored in a hierarchical data structure such as a ROLAP OR MOLAP database or may be stored in another tabular form such as in a flat hierarchy form.

The data transmission network may also include one or more server farms . The computing environment may route select communications or data to the one or more server farms or one or more servers within the one or more server farms . The one or more server farms can be configured to provide information in a predetermined manner. For example the one or more server farms may access data to transmit in response to a communication. The one or more server farms may be separately housed from each other device within the data transmission network such as the computing environment and or may be part of a device or system.

The one or more server farms may host a variety of different types of data processing as part of the data transmission network . The one or more server farms may receive a variety of different data from the network devices from the computing environment from the cloud network or from other sources. For example one or more count series data sets may be obtained and or received from the one or more server farms . The data e.g. the one or more count series data sets may have been obtained or collected from one or more sensors as inputs from a control database or may have been received as inputs from an external system or device. The one or more server farms may assist in processing the data by turning raw data into processed data based on one or more rules implemented by the one or more server farms . For example sensor data may be analyzed to determine changes in an environment over time or in real time.

The data transmission network may also include the cloud network . The cloud network may include a cloud infrastructure system that provides cloud services. In certain embodiments services provided by the cloud network may include a host of services that are made available to users of the cloud infrastructure system on demand. The cloud network is shown in as being connected to the computing environment and therefore having the computing environment as its client or user but the cloud network may be connected to or utilized by any of the devices in . Services provided by the cloud network can dynamically scale to meet the needs of its users. The cloud network may comprise one or more computers servers and or systems. In some embodiments the computers servers and or systems that make up the cloud network are different from the user s own on premises computers servers and or systems. For example the cloud network may host an application and a user may via a communication network such as the Internet on demand order and use the application.

While each device server and system in is shown as a single device it will be appreciated that multiple devices may instead be used. For example a set of network devices can be used to transmit various communications from a single user or remote server may include a server stack. As another example data may be processed as part of the computing environment .

Each communication within the data transmission network e.g. between client devices between the one or more server farms and the computing environment or between a server and a device may occur over one or more networks . The one or more networks may include one or more of a variety of different types of networks including a wireless network a wired network or a combination of a wired and wireless network. Examples of suitable networks include the Internet a personal area network a local area network LAN a wide area network WAN or a wireless local area network WLAN . A wireless network may include a wireless interface or combination of wireless interfaces. As an example a network of the one or more networks may include a short range communication channel such as a Bluetooth or a Bluetooth Low Energy channel. A wired network may include a wired interface. The wired and or wireless networks may be implemented using routers access points bridges gateways or the like to connect devices in the networks as will be further described with respect to . The one or more networks can be incorporated entirely within or can include an intranet an extranet or a combination thereof. In one embodiment communications between two or more systems and or devices can be achieved by a secure communications protocol such as secure sockets layer SSL or transport layer security TLS . In addition data and or transactional details may be encrypted.

Some aspects may utilize the Internet of Things IoT where things e.g. machines devices phones sensors can be connected to networks and the data from these things can be collected and processed within the things and or external to the things. For example the IoT can include sensors in many different devices and high value analytics can be applied to identify hidden relationships and drive increased efficiencies. This can apply to both big data analytics and real time e.g. ESP analytics. This will be described further below with respect to .

As noted the computing environment may include a count series forecasting engine a communications grid and or a database system e.g. a transmission network data base system . Count series forecasting engine may be a computing system for performing operations related providing one or more predicted future data points for a count series data set and or for monitoring a count series data set. The communications grid may be a grid based computing system for processing large amounts of data. The database system may be for managing storing and retrieving large amounts of data that are distributed to and stored in the one or more network attached data stores or other data stores that reside at different locations within the database system . The count series forecasting engine the compute nodes in the communications grid and or the database system may share the same processor hardware such as processors that are located within the computing environment .

As shown in the network device can transmit a communication over a network e.g. a cellular network via a base station . The communication can be routed to another network device such as the network devices via the base station . The communication can also be routed to the computing environment e.g. the computing environment of via base station . For example the network device may collect data either from its surrounding environment or from other network devices such as the network devices and transmit that data to the computing environment .

Although the network devices are shown in as a mobile phone laptop computer tablet computer temperature sensor motion sensor and audio sensor respectively the network devices may be or may include sensors that are sensitive to detecting aspects of their environment. For example the network devices may include sensors such as water sensors power sensors electrical current sensors chemical sensors optical sensors pressure sensors geographic or position sensors e.g. GPS velocity sensors acceleration sensors flow rate sensors among others. Examples of characteristics that may be sensed include force torque load strain position temperature air pressure fluid flow chemical properties resistance electromagnetic fields radiation irradiance proximity acoustics moisture distance speed vibrations acceleration electrical potential electrical current among others. The sensors may be mounted to various components used as part of a variety of different types of systems e.g. an oil drilling operation . The network devices may detect and record data related to the environment that it monitors and transmit that data to the computing environment e.g. the computing environment of .

As noted one type of system that may include various sensors that collect data to be processed and or transmitted to a the computing environment according to certain embodiments includes an oil drilling system. For example the one or more drilling operation sensors may include surface sensors that measure a hook load a fluid rate a temperature and a density in and out of the wellbore a standpipe pressure a surface torque a rotation speed of a drill pipe a rate of penetration a mechanical specific energy etc. and downhole sensors that measure a rotation speed of a bit fluid densities downhole torque downhole vibration axial tangential lateral a weight applied at a drill bit an annular pressure a differential pressure an azimuth an inclination a dog leg severity a measured depth a vertical depth a downhole temperature etc. Besides the raw data collected directly by the sensors other data may include parameters either developed by the sensors or assigned to the system by a client or other controlling device. For example one or more drilling operation control parameters may control settings such as a mud motor speed to flow ratio a bit diameter a predicted formation top seismic data weather data etc. Other data may be generated using physical models such as an earth model a weather model a seismic model a bottom hole assembly model a well plan model an annular friction model etc. In addition to sensor and control settings predicted outputs of for example the rate of penetration mechanical specific energy hook load flow in fluid rate flow out fluid rate pump pressure surface torque rotation speed of the drill pipe annular pressure annular friction pressure annular temperature equivalent circulating density etc. may also be stored in the data warehouse.

In another example another type of system that may include various sensors that collect data to be processed and or transmitted to a the computing environment according to certain embodiments includes a home automation or similar automated network in a different environment such as an office space school public space sports venue or a variety of other locations. The network devices in such an automated network may include network devices that allow a user to access control and or configure various home appliances located within the user s home e.g. a television radio light fan humidifier sensor microwave iron and or the like or outside of the user s home e.g. exterior motion sensors exterior lighting garage door openers sprinkler systems or the like . For example the network devices may include a home automation switch that may be coupled with a home appliance. In another embodiment the network devices can allow a user to access control and or configure devices such as office related devices e.g. copy machine printer or fax machine audio and or video related devices e.g. a receiver a speaker a projector a DVD player or a television media playback devices e.g. a compact disc player a CD player or the like computing devices e.g. a home computer a laptop computer a tablet a personal digital assistant PDA a computing device or a wearable device lighting devices e.g. a lamp or recessed lighting devices associated with a security system devices associated with an alarm system devices that can be operated in an automobile e.g. radio devices navigation devices and or the like. Data may be collected from such various sensors in raw form or data may be processed by the sensors to create parameters or other data either developed by the sensors based on the raw data or assigned to the system by a client or other controlling device.

In another example another type of system that may include various sensors that collect data to be processed and or transmitted to a computing environment according to certain embodiments includes a power or energy grid. A variety of different network devices may be included in an energy grid such as various devices within one or more power plants energy farms e.g. wind farm solar farm among others energy storage facilities factories homes and businesses of consumers among others. One or more of such devices may include one or more sensors that detect energy gain or loss electrical input or output or loss and a variety of other efficiencies. These sensors may collect data to inform users of how the energy grid and individual devices within the grid may be functioning and how they may be made more efficient.

Network device sensors may also perform processing on data it collects before transmitting the data to the computing environment or before deciding whether to transmit data to the computing environment . For example the network devices may determine whether data collected meets certain rules for example by comparing data or values calculated from the data and comparing that data to one or more thresholds. The network devices may use this data and or comparisons to determine if the data should be transmitted to the computing environment for further use or processing.

The computing environment may include the machine and the machine . Although computing environment is shown in as having two machines such as the machines and the machines the computing environment may have only one machine or may have more than two machines. The machines that make up the computing environment may include specialized computers servers or other machines that are configured to individually and or collectively process large amounts of data. The computing environment may also include storage devices that include one or more databases of structured data such as data organized in one or more hierarchies or unstructured data. The databases may communicate with the processing devices within the computing environment to distribute data to them. Since the network devices may transmit data to the computing environment that data may be received by the computing environment and subsequently stored within those storage devices. Data used by the computing environment may also be stored in data stores which may also be a part of or connected to the computing environment .

The computing environment can communicate with various devices via one or more routers or other inter network or intra network connection components. For example the computing environment may communicate with the client devices via one or more routers . The computing environment may collect analyze and or store data from or pertaining to communications client device operations client rules and or user associated actions stored at the one or more data stores . Such data may influence communication routing to the devices within the computing environment how data is stored or processed within the computing environment among other actions.

Notably various other devices can further be used to influence communication routing and or processing between devices within the computing environment and with devices outside of the computing environment . For example as shown in the computing environment may include a web server e.g. the machines . Thus the computing environment can retrieve data of interest such as client information e.g. product information client rules etc. technical product details news current or predicted weather and so on.

In addition to the computing environment collecting data e.g. as received from the network devices such as sensors and client devices or other sources to be processed as part of a big data analytics project it may also receive data in real time as part of a streaming analytics environment. As noted data may be collected using a variety of sources as communicated via different kinds of networks or locally. Such data may be received on a real time streaming basis. For example network devices may receive data periodically from network device sensors as the sensors continuously sense monitor and track changes in their environments. Devices within the computing environment may also perform pre analysis on data it receives to determine if the data received should be processed as part of an ongoing project. The data received and collected by the computing environment no matter what the source or method or timing of receipt may be processed over a period of time for a client to determine results data based on the client s needs and rules.

The model can include layers . The layers are arranged in a stack. Each layer in the stack serves the layer one level higher than it except for the application layer which is the highest layer and is served by the layer one level below it except for the physical layer which is the lowest layer . The physical layer is the lowest layer because it receives and transmits raw bites of data and is the farthest layer from the user in a communications system. On the other hand the application layer is the highest layer because it interacts directly with a software application.

As noted the model includes a physical layer . The physical layer represents physical communication and can define parameters of that physical communication. For example such physical communication may come in the form of electrical optical or electromagnetic signals. Physical layer also defines protocols that may control communications within a data transmission network.

The data link layer defines links and mechanisms used to transmit i.e. move data across a network. The data link layer manages node to node communications such as within a grid computing environment. The data link layer can detect and correct errors e.g. transmission errors in the physical layer . The data link layer can also include a media access control MAC layer and logical link control LLC layer.

The network layer defines the protocol for routing within a network. In other words the network layer coordinates transferring data across nodes in a same network e.g. such as a grid computing environment . The network layer can also define the processes used to structure local addressing within the network.

The transport layer can manage the transmission of data and the quality of the transmission and or receipt of that data. The transport layer can provide a protocol for transferring data such as for example a Transmission Control Protocol TCP . The transport layer can assemble and disassemble data frames for transmission. The transport layer can also detect transmission errors occurring in the layers below it.

The session layer can establish maintain and manage communication connections between devices on a network. In other words the session layer controls the dialogues or nature of communications between network devices on the network. The session layer may also establish check pointing adjournment termination and restart procedures.

The presentation layer can provide translation for communications between the application layer and the network layer . In other words this layer may encrypt decrypt and or format data based on data types known to be accepted by the application layer or the network layer .

The application layer interacts directly with software applications and end users and manages communications between them. The application layer can identify destinations local resource states or availability and or communication content or formatting using the applications.

The intra network connection components and are shown to operate in lower levels such as physical layer and link layer respectively. For example a hub can operate in the physical layer a switch can operate in the physical layer and a router can operate in the network layer . The internetwork connection components and are shown to operate on higher levels such as layers . For example routers can operate in the network layer and network devices e.g. the network devices of can operate in the transport session presentation and application layers.

As noted a the computing environment can interact with and or operate on in various embodiments one more all or any of the various layers. For example the computing environment can interact with a hub e.g. via the data link layer so as to adjust which devices the hub communicates with. The physical layer may be served by the data link layer so it may implement such data from the data link layer . For example the computing environment may control from which devices it will receive data. For example if the computing environment knows that a certain network device has turned off broken or otherwise become unavailable or unreliable the computing environment may instruct the hub to prevent any data from being transmitted to the computing environment from that network device. Such a process may be beneficial to avoid receiving data that is inaccurate or that has been influenced by an uncontrolled environment. As another example the computing environment can communicate with a bridge switch router or gateway and influence which device within the system e.g. the system of the component selects as a destination. In some embodiments the computing environment can interact with various layers by exchanging communications with equipment operating on a particular layer by routing or modifying existing communications. In another embodiment such as in a grid computing environment a node may determine how data within the environment should be routed e.g. which node should receive certain data based on certain parameters or information provided by other layers within the model.

As noted the computing environment may be a part of a communications grid environment e.g. the communications grid of the communications of which may be implemented as shown in the protocol of . For example referring back to one or more of machines and may be part of a communications grid computing environment. A gridded computing environment may be employed in a distributed system with non interactive workloads where data resides in memory on the machines or compute nodes. In such an environment analytic code instead of a database management system controls the processing performed by the nodes. Data is co located by pre distributing it to the grid nodes and the analytic code on each node loads the local data into memory. Each node may be assigned a particular task such as a portion of a processing project or to organize or control other nodes within the grid.

Communications grid computing system or just communications grid e.g. the communications grid of also includes one or more worker nodes. Shown in are six worker nodes . Although shows six worker nodes a communications grid according to embodiments of the present technology may include more or less than six worker nodes. The number of worker nodes included in a communications grid may be dependent upon how large the project or data set is being processed by the communications grid the capacity of each worker node the time designated for the communications grid to complete the project among others. Each worker node within the communications grid may be connected wired or wirelessly and directly or indirectly to control nodes . Therefore each worker node may receive information from the control nodes e.g. an instruction to perform work on a project and may transmit information to the control nodes e.g. a result from work performed on a project . Furthermore worker nodes may communicate with each other either directly or indirectly . For example worker nodes may transmit data between each other related to a job being performed or an individual task within a job being performed by that worker node. However in certain embodiments worker nodes may not for example be connected communicatively or otherwise to certain other worker nodes. In an embodiment worker nodes may only be able to communicate with the control node that controls it and may not be able to communicate with other worker nodes in the communications grid whether they are other worker nodes controlled by the control node that controls the worker node or worker nodes that are controlled by other control nodes in the communications grid .

A control node may connect with an external device with which the control node may communicate e.g. a grid user such as a server or computer may connect to a controller of the grid . For example a server or computer may connect to control nodes and may transmit a project or job to the node. The project may include a data set e.g. a count series data set that includes data points that correspond to a number of discrete values . The data set may be of any size. Once the control node receives such a project including a large data set the control node may distribute the data set or projects related to the data set to be performed by worker nodes. Alternatively for a project including a large data set the data set may be receive or stored by a machine other than a control node e.g. a Hadoop data node .

Control nodes may maintain knowledge of the status of the nodes in the grid i.e. grid status information accept work requests from clients subdivide the work across worker nodes coordinate the worker nodes among other responsibilities. Worker nodes may accept work requests from a control node and provide the control node with results of the work performed by the worker node. A grid may be started from a single node e.g. a machine computer server etc. . This first node may be assigned or may start as the primary control node that will control any additional nodes that enter the grid.

When a project is submitted for execution e.g. by a client or a controller of the grid it may be assigned to a set of nodes. After the nodes are assigned to a project a data structure i.e. a communicator may be created. The communicator may be used by the project for information to be shared between the project code running on each node. A communication handle may be created on each node. A handle for example is a reference to the communicator that is valid within a single process on a single node and the handle may be used when requesting communications between nodes.

A control node such as control node may be designated as the primary control node. A server computer or other external device may connect to the primary control node. Once the control node receives a project the primary control node may distribute portions of the project to its worker nodes for execution. For example when a project is initiated on communications grid primary control node controls the work to be performed for the project in order to complete the project as requested or instructed. The primary control node may distribute work to the worker nodes based on various factors such as which subsets or portions of projects may be completed most efficiently and in the correct amount of time. For example a worker node may perform analysis on a portion of data that is already local e.g. stored on the worker node. The primary control node also coordinates and processes the results of the work performed by each worker node after each worker node executes and completes its job. For example the primary control node may receive a result from one or more worker nodes and the control node may organize e.g. collect and assemble the results received and compile them to produce a complete result for the project received from the end user.

Any remaining control nodes such as control nodes and may be assigned as backup control nodes for the project. In an embodiment backup control nodes may not control any portion of the project. Instead backup control nodes may serve as a backup for the primary control node and take over as primary control node if the primary control node were to fail. If a communications grid were to include only a single control node and the control node were to fail e.g. the control node is shut off or breaks then the communications grid as a whole may fail and any project or job being run on the communications grid may fail and may not complete. While the project may be run again such a failure may cause a delay severe delay in some cases such as overnight delay in completion of the project. Therefore a grid with multiple control nodes including a backup control node may be beneficial.

To add another node or machine to the grid the primary control node may open a pair of listening sockets for example. A socket may be used to accept work requests from clients and the second socket may be used to accept connections from other grid nodes . The primary control node may be provided with a list of other nodes e.g. other machines computers servers that will participate in the communications grid and the role that each node will fill in the communications grid . Upon startup of the primary control node e.g. the first node on the grid the primary control node may use a network protocol to start the server process on every other node in the grid. Command line parameters for example may inform each node of one or more pieces of information such as the role that the node will have in the communications grid the host name of the primary control node the port number on which the primary control node is accepting connections from peer nodes among others. The information may also be provided in a configuration file transmitted over a secure shell tunnel recovered from a configuration server among others. While the other machines in the communications grid may not initially know about the configuration of the communications grid that information may also be sent to each other node by the primary control node. Updates of the grid information may also be subsequently sent to those nodes.

For any control node other than the primary control node added to the communications grid the primary control node may open for example three sockets. The first socket may accept work requests from clients the second socket may accept connections from other grid members and the third socket may connect e.g. permanently to the primary control node . When a control node e.g. primary control node receives a connection from another control node e.g. control node it first checks to see if the peer node is in the list of configured nodes in the grid. If it is not on the list the control node may clear the connection. If it is on the list it may then attempt to authenticate the connection. If authentication is successful the authenticating node may transmit information to its peer such as the port number on which a node is listening for connections the host name of the node information about how to authenticate the node among other information. When a node such as the new control node receives information about another active node it will check to see if it already has a connection to that other node. If it does not have a connection to that node it may then establish a connection to that control node.

Any worker node added to the communications grid may establish a connection to the primary control node and any other control nodes on the grid. After establishing the connection it may authenticate itself to the communications grid e.g. any control nodes including both primary and backup or a server or user controlling the grid . After successful authentication the worker node may accept configuration information from a control node.

When a node joins a communications grid e.g. when the node is powered on or connected to an existing node on the communications grid or both the node is assigned e.g. by an operating system of the grid a universally unique identifier UUID . This unique identifier may help other nodes and external entities devices users etc. to identify the node and distinguish it from other nodes. When a node is connected to the communications grid the node may share its unique identifier with the other nodes in the communications grid . Since each node may share its unique identifier each node may know the unique identifier of every other node on the communications grid . Unique identifiers may also designate a hierarchy of each of the nodes e.g. backup control nodes within the grid. For example the unique identifiers of each of the backup control nodes may be stored in a list of backup control nodes to indicate an order in which the backup control nodes will take over for a failed primary control node to become a new primary control node. However a hierarchy of nodes may also be determined using methods other than using the unique identifiers of the nodes. For example the hierarchy may be predetermined or may be assigned based on other predetermined factors.

The communications grid may add new machines at any time e.g. initiated from any control node . Upon adding a new node to the grid a control node e.g. the control node may first add the new node to its table of grid nodes. The control node may also then notify every other control node about the new node. The nodes receiving the notification may acknowledge that they have updated their configuration information.

Primary control node may for example transmit one or more communications to backup control nodes and and for example to other control or worker nodes within the communications grid . Such communications may be sent periodically at fixed time intervals between known fixed stages of the project s execution among other protocols. The communications transmitted by primary control node may be of varied types and may include a variety of types of information. For example primary control node may transmit snapshots e.g. status information of the communications grid so that control node a backup control node always has a recent snapshot of the communications grid . The snapshot or grid status may include for example the structure of the grid including for example the worker nodes in the grid unique identifiers of the nodes or their relationships with the primary control node and the status of a project including for example the status of each worker node s portion of the project . The snapshot may also include analysis or results received from worker nodes in the communications grid . The backup control nodes may receive and store the backup data received from the primary control node. The backup control nodes may transmit a request for such a snapshot or other information from the primary control node or the primary control node may send such information periodically to the backup control nodes.

As noted the backup data may allow the backup control node e.g. control node to take over as primary control node if the primary control node fails without requiring the grid to start the project over from scratch. If the primary control node fails the backup control node that will take over as primary control node e.g. control node may retrieve the most recent version of the snapshot received from the primary control node and use the snapshot to continue the project from the stage of the project indicated by the backup data. This may prevent failure of the project as a whole.

A backup control node e.g. control node may use various methods to determine that the primary control node has failed. In one example of such a method the primary control node may transmit e.g. periodically a communication to the backup control node that indicates that the primary control node is working and has not failed such as a heartbeat communication. The backup control node may determine that the primary control node has failed if the backup control node has not received a heartbeat communication for a certain predetermined period of time. Alternatively a backup control node may also receive a communication from the primary control node itself before it failed or from a worker node that the primary control node has failed for example because the primary control node has failed to communicate with the worker node.

Different methods may be performed to determine which backup control node of a set of backup control nodes e.g. backup control nodes and will take over for failed primary control node and become the new primary control node. For example the new primary control node may be chosen based on a ranking or hierarchy of backup control nodes based on their unique identifiers. In an alternative embodiment a backup control node may be assigned to be the new primary control node by another device in the communications grid or from an external device e.g. a system infrastructure or an end user such as a server or computer controlling the communications grid . In another alternative embodiment the backup control node that takes over as the new primary control node may be designated based on bandwidth or other statistics about the communications grid.

A worker node within the communications grid may also fail. If a worker node fails work being performed by the failed worker node may be redistributed amongst the operational worker nodes. In an alternative embodiment the primary control node may transmit a communication to each of the operable worker nodes still on the communications grid that each of the worker nodes should purposefully fail also. After each of the worker nodes fail they may each retrieve their most recent saved checkpoint of their status and re start the project from that checkpoint to minimize lost progress on the project being executed.

The process may also include receiving a failure communication corresponding to a node in the communications grid in operation . For example a node may receive a failure communication including an indication that the primary control node has failed prompting a backup control node to take over for the primary control node . In an alternative embodiment a node may receive a failure that a worker node has failed prompting a control node to reassign the work being performed by the worker node. The process may also include reassigning a node or a portion of the project being executed by the failed node as described in operation . For example a control node may designate the backup control node as a new primary control node based on the failure communication upon receiving the failure communication. If the failed node is a worker node a control node may identify a project status of the failed worker node using the snapshot of the communications grid where the project status of the failed worker node includes a status of a portion of the project being executed by the failed worker node at the failure time.

The process may also include receiving updated grid status information based on the reassignment as described in operation and transmitting a set of instructions based on the updated grid status information to one or more nodes in the communications grid as described in operation . The updated grid status information may include an updated project status of the primary control node or an updated project status of the worker node. The updated information may be transmitted to the other nodes in the grid to update their stale stored information.

Similar to in communications grid computing system or just communications grid includes data processing nodes control node and worker node . Nodes and comprise multi core data processors. Each node and includes a grid enabled software component GESC that executes on the data processor associated with that node and interfaces with buffer memory also associated with that node. Each of the node and the node include a database management software DBMS that executes on a database server not shown at control node and on a database server not shown at worker node .

Each of the node and the node also include a data store . Data stores similar to network attached data stores in and data stores in are used to store data to be processed by the nodes in the computing environment. The data store may also store any intermediate or final data generated by the computing system after being processed for example in non volatile memory. However in certain embodiments the configuration of the grid computing environment allows its operations to be performed such that intermediate and final data results can be stored solely in volatile memory e.g. RAM without a requirement that intermediate or final data results be stored to non volatile types of memory. Storing such data in volatile memory may be useful in certain situations such as when the grid receives queries e.g. ad hoc from a client and when responses which are generated by processing large amounts of data need to be generated quickly or in real time. In such a situation the grid may be configured to retain the data within memory so that responses can be generated at different levels of detail and so that a client may interactively query against this information.

Each of the node and the node include a user defined function UDF . The UDF provides a mechanism for the DMBS to transfer data to or receive data from the database stored in the data stores that are managed by the DBMS. For example UDF can be invoked by the DBMS to provide data to the GESC for processing. The UDF may establish a socket connection not shown with the GESC to transfer the data. Alternatively the UDF can transfer data to the GESC by writing data to shared memory accessible by both the UDF and the GESC.

The GESC at the node and the node may be connected via a network such as the networks shown in . Therefore the node and the node can communicate with each other via the network using a predetermined communication protocol such as for example the Message Passing Interface MPI . Each GESC can engage in point to point communication with the GESC at another node or in collective communication with multiple GESCs via the network. The GESC at each node may contain identical or nearly identical software instructions. Each node may be capable of operating as either a control node or a worker node. The GESC at the node can communicate over a communication path with a client device . More specifically the node a control node may communicate with client application hosted by the client device to receive queries and to respond to those queries after processing large amounts of data.

DMBS may control the creation maintenance and use of database or data structure not shown within the node or the node . The database may organize data stored in the data stores . The DMBS at the node a control node may accept requests for data and transfer the appropriate data for the request. With such a process collections of data may be distributed across multiple physical locations. In this example each of the node and the node store a portion of the total data managed by the management system in its respective data store .

Furthermore the DBMS may be responsible for protecting against data loss using replication techniques. Replication includes providing a backup copy of data stored on one node on one or more other nodes. Therefore if one node fails the data from the failed node can be recovered from a replicated copy residing at another node. However as described herein with respect to data or status information for each node in the communications grid may also be shared with each node on the grid.

To initiate the project the node may determine if the query requests use of the grid based computing environment to execute the project. If the determination is no then the node initiates execution of the project in a solo environment e.g. at the node as described in operation . If the determination is yes the control node may initiate execution of the project in the grid based computing environment as described in operation . In such a situation the request may include a requested configuration of the grid. For example the request may include a number of control nodes and a number of worker nodes to be used in the grid when executing the project. After the project has been completed the node may transmit results of the analysis yielded by the grid as described in operation . Whether the project is executed in a solo or grid based environment the node provides the results of the project.

As noted with respect to the computing environments described herein may collect data e.g. as received from network devices such as sensors such as network devices in and client devices or other sources to be processed as part of a data analytics project and data may be received in real time as part of a streaming analytics environment e.g. ESP . Data may be collected using a variety of sources as communicated via different kinds of networks or locally such as on a real time streaming basis. For example network devices may receive data periodically from network device sensors as the sensors continuously sense monitor and track changes in their environments. More specifically an increasing number of distributed applications develop or produce continuously flowing data from distributed sources by applying queries to the data before distributing the data to geographically distributed recipients. An event stream processing engine ESPE may continuously apply the queries to the data as it is received and determines which entities should receive the data. Client or other devices may also subscribe to the ESPE or other devices processing ESP data so that they can receive data after processing based on for example the entities determined by the processing engine. For example client devices in may subscribe to the ESPE in computing environment . In another example event subscription devices described further with respect to may also subscribe to the ESPE. The ESPE may determine or define how input data or event streams from network devices or other publishers e.g. network devices in are transformed into meaningful output data to be consumed by subscribers such as for example client devices in .

The ESPE may receive streaming data over a period of time related to certain events such as events or other data sensed by one or more network devices. The ESPE may perform operations associated with processing data created by the one or more devices. For example the ESPE may receive data from the one or more network devices shown in . As noted the network devices may include sensors that sense different aspects of their environments and may collect data over time based on those sensed observations. For example the ESPE may be implemented within one or more of machines and shown in . The ESPE may be implemented within such a machine by an ESP application. An ESP application may embed an ESPE with its own dedicated thread pool or pools into its application space where the main application thread can do application specific work and the ESPE processes event streams at least by creating an instance of a model into processing objects.

The engine container is the top level container in a model that manages the resources of the one or more projects . In an illustrative embodiment for example there may be only one ESPE for each instance of the ESP application and ESPE may have a unique engine name. Additionally the one or more projects may each have unique project names and each query may have a unique continuous query name and begin with a uniquely named source window of the one or more source windows . ESPE may or may not be persistent.

Continuous query modeling involves defining directed graphs of windows for event stream manipulation and transformation. A window in the context of event stream manipulation and transformation is a processing node in an event stream processing model. A window in a continuous query can perform aggregations computations pattern matching and other operations on data flowing through the window. A continuous query may be described as a directed graph of source relational pattern matching and procedural windows. The one or more source windows and the one or more derived windows represent continuously executing queries that generate updates to a query result set as new event blocks stream through ESPE . A directed graph for example is a set of nodes connected by edges where the edges have a direction associated with them.

An event object may be described as a packet of data accessible as a collection of fields with at least one of the fields defined as a key or unique identifier ID . The event object may be created using a variety of formats including binary alphanumeric XML etc. Each event object may include one or more fields designated as a primary identifier ID for the event so ESPE can support operation codes opcodes for events including insert update upsert and delete. Upsert opcodes update the event if the key field already exists otherwise the event is inserted. For illustration an event object may be a packed binary representation of a set of field values and include both metadata and field data associated with an event. The metadata may include an opcode indicating if the event represents an insert update delete or upsert a set of flags indicating if the event is a normal partial update or a retention generated event from retention policy management and a set of microsecond timestamps that can be used for latency measurements.

An event block object may be described as a grouping or package of event objects. An event stream may be described as a flow of event block objects. A continuous query of the one or more continuous queries transforms a source event stream made up of streaming event block objects published into ESPE into one or more output event streams using the one or more source windows and the one or more derived windows . A continuous query can also be thought of as data flow modeling.

The one or more source windows are at the top of the directed graph and have no windows feeding into them. Event streams are published into the one or more source windows and from there the event streams may be directed to the next set of connected windows as defined by the directed graph. The one or more derived windows are all instantiated windows that are not source windows and that have other windows streaming events into them. The one or more derived windows may perform computations or transformations on the incoming event streams. The one or more derived windows transform event streams based on the window type that is operators such as join filter compute aggregate copy pattern match procedural union etc. and window settings. As event streams are published into ESPE they are continuously queried and the resulting sets of derived windows in these queries are continuously updated.

Within the application a user may interact with one or more user interface windows presented to the user in a display under control of the ESPE independently or through a browser application in an order selectable by the user. For example a user may execute an ESP application which causes presentation of a first user interface window which may include a plurality of menus and selectors such as drop down menus buttons text boxes hyperlinks etc. associated with the ESP application as understood by a person of skill in the art. As further understood by a person of skill in the art various operations may be performed in parallel for example using a plurality of threads.

At operation an ESP application may define and start an ESPE thereby instantiating an ESPE at a device such as the machines and or the machines . In an operation the engine container is created. For illustration ESPE may be instantiated using a function call that specifies the engine container as a manager for the model.

In an operation the one or more continuous queries are instantiated by ESPE as a model. The one or more continuous queries may be instantiated with a dedicated thread pool or pools that generate updates as new events stream through ESPE . For illustration the one or more continuous queries may be created to model business processing logic within ESPE to predict events within ESPE to model a physical system within ESPE to predict the physical system state within ESPE etc. For example as noted ESPE may be used to support sensor data monitoring and management e.g. sensing may include force torque load strain position temperature air pressure fluid flow chemical properties resistance electromagnetic fields radiation irradiance proximity acoustics moisture distance speed vibrations acceleration electrical potential or electrical current etc. .

ESPE may analyze and process events in motion or event streams. Instead of storing data and running queries against the stored data ESPE may store queries and stream data through them to allow continuous analysis of data as it is received. The one or more source windows and the one or more derived windows may be created based on the relational pattern matching and procedural algorithms that transform the input event streams into the output event streams to model simulate score test predict etc. based on the continuous query model defined and application to the streamed data.

In an operation a publish subscribe pub sub capability is initialized for ESPE . In an illustrative embodiment a pub sub capability is initialized for each project of the one or more projects . To initialize and enable pub sub capability for ESPE a port number may be provided. Pub sub clients can use a host name of an ESP device running the ESPE and the port number to establish pub sub connections to ESPE .

Publish subscribe is a message oriented interaction paradigm based on indirect addressing. Processed data recipients specify their interest in receiving information from ESPE by subscribing to specific classes of events while information sources publish events to ESPE without directly addressing the receiving parties. ESPE coordinates the interactions and processes the data. In some cases the data source receives confirmation that the published information has been received by a data recipient.

A publish subscribe API may be described as a library that enables an event publisher such as publishing device to publish event streams into ESPE or an event subscriber such as event subscribing device A event subscribing device B and event subscribing device C to subscribe to event streams from ESPE . For illustration one or more publish subscribe APIs may be defined. Using the publish subscribe API an event publishing application may publish event streams into a running event stream processor project source window of ESPE and the event subscription application may subscribe to an event stream processor project source window of ESPE .

The publish subscribe API provides cross platform connectivity and endianness compatibility between ESP application and other networked applications such as event publishing applications instantiated at publishing device and event subscription applications instantiated at one or more of event subscribing device A event subscribing device B and event subscribing device C

Referring back to operation initializes the publish subscribe capability of ESPE . In an operation the one or more projects are started. The one or more started projects may run in the background on an ESP device. In an operation an event block object is received from one or more computing device of the event publishing device .

ESP subsystem may include a publishing client ESPE a subscribing client A a subscribing client B and a subscribing client C . Publishing client may be started by an event publishing application executing at publishing device using the publish subscribe API. Subscribing client A may be started by an event subscription application A executing at event subscribing device A using the publish subscribe API. Subscribing client B may be started by an event subscription application B executing at event subscribing device B using the publish subscribe API. Subscribing client C may be started by an event subscription application C executing at event subscribing device C using the publish subscribe API.

An event block object containing one or more event objects is injected into a source window of the one or more source windows from an instance of an event publishing application on event publishing device . The event block object may be generated for example by the event publishing application and may be received by publishing client . A unique ID may be maintained as the event block object is passed between the one or more source windows and or the one or more derived windows of ESPE and to subscribing client A subscribing client B and subscribing client C and to event subscription device A event subscription device B and event subscription device C . Publishing client may further generate and include a unique embedded transaction ID in the event block object as the event block object is processed by a continuous query as well as the unique ID that publishing device assigned to the event block object.

In an operation the event block object is processed through the one or more continuous queries . In an operation the processed event block object is output to one or more computing devices of the event subscribing devices . For example subscribing client A subscribing client B and subscribing client C may send the received event block object to event subscription device A event subscription device B and event subscription device C respectively.

ESPE maintains the event block containership aspect of the received event blocks from when the event block is published into a source window and works its way through the directed graph defined by the one or more continuous queries with the various event translations before being output to subscribers. Subscribers can correlate a group of subscribed events back to a group of published events by comparing the unique ID of the event block object that a publisher such as publishing device attached to the event block object with the event block ID received by the subscriber.

In an operation a determination is made concerning whether or not processing is stopped. If processing is not stopped processing continues in operation to continue receiving the one or more event streams containing event block objects from the for example one or more network devices. If processing is stopped processing continues in an operation . In operation the started projects are stopped. In operation the ESPE is shutdown.

As noted in some embodiments big data is processed for an analytics project after the data is received and stored. In other embodiments distributed applications process continuously flowing data in real time from distributed sources by applying queries to the data before distributing the data to geographically distributed recipients. As noted an event stream processing engine ESPE may continuously apply the queries to the data as it is received and determines which entities receive the processed data. This allows for large amounts of data being received and or collected in a variety of environments to be processed and distributed in real time. For example as shown with respect to data may be collected from network devices that may include devices within the internet of things such as devices within a home automation network. However such data may be collected from a variety of different resources in a variety of different environments. In any such situation embodiments of the present technology allow for real time processing of such data.

Aspects of the current disclosure provide technical solutions to technical problems such as computing problems that arise when an ESP device fails which results in a complete service interruption and potentially significant data loss. The data loss can be catastrophic when the streamed data is supporting mission critical operations such as those in support of an ongoing manufacturing or drilling operation. An embodiment of an ESP system achieves a rapid and seamless failover of ESPE running at the plurality of ESP devices without service interruption or data loss thus significantly improving the reliability of an operational system that relies on the live or real time processing of the data streams. The event publishing systems the event subscribing systems and each ESPE not executing at a failed ESP device are not aware of or affected by the failed ESP device. The ESP system may include thousands of event publishing systems and event subscribing systems. The ESP system keeps the failover logic and awareness within the boundaries of out messaging network connector and out messaging network device.

In one example embodiment a system is provided to support a failover when event stream processing ESP event blocks. The system includes but is not limited to an out messaging network device and a computing device. The computing device includes but is not limited to a processor and a computer readable medium operably coupled to the processor. The processor is configured to execute an ESP engine ESPE . The computer readable medium has instructions stored thereon that when executed by the processor cause the computing device to support the failover. An event block object is received from the ESPE that includes a unique identifier. A first status of the computing device as active or standby is determined. When the first status is active a second status of the computing device as newly active or not newly active is determined. Newly active is determined when the computing device is switched from a standby status to an active status. When the second status is newly active a last published event block object identifier that uniquely identifies a last published event block object is determined. A next event block object is selected from a non transitory computer readable medium accessible by the computing device. The next event block object has an event block object identifier that is greater than the determined last published event block object identifier. The selected next event block object is published to an out messaging network device. When the second status of the computing device is not newly active the received event block object is published to the out messaging network device. When the first status of the computing device is standby the received event block object is stored in the non transitory computer readable medium.

Scale range may differ from scale range . For example scale range may range from 0 to 32 and correspond to the zero values of the data set while scale range may range from 0 to 17 and correspond to the non zero values of the data set. Scale range in some examples may depict a number of non zero modified values and correspond to the depicted observed bars e.g. observed bar . Observed bars e.g. the observed bar may be associated with particular values as depicted by x axis . X axis may utilize a same or different scale range as y axis or y axis .

Additionally or alternatively an expected line may be utilized to depict estimated discrete probability distribution values. Expected line may utilize the scale range associated with the x axis . Dashed vertical line may indicate the distribution mean and may utilize the scale range associated with the x axis . Similarly the confidence band e.g. a 95 confidence band may be depicted by shaded area . Shaded area may utilize the scale range associated with the x axis . Utilizing the graph a variety of data having difference scales of measurement may be displayed in an optimal manner so that such information is visible at a glance.

Scale range in some examples may depict a number of non zero modified values and correspond to the depicted observed bars e.g. observed bar . Observed bars e.g. the observed bar may be associated with particular values as depicted by x axis . X axis may utilize a same or different scale range as y axis or y axis .

Additionally or alternatively an expected line may be utilized to depict estimated discrete probability distribution values. Expected line may utilize the scale range associated with the x axis . Dashed vertical line may indicate the distribution mean and may utilize the scale range associated with the x axis . Similarly the confidence band e.g. a 95 confidence band may be depicted by shaded area . Shaded area may utilize the scale range associated with the x axis . Utilizing the graph a variety of data having difference scales of measurement may be displayed in an optimal manner so that such information is visible at a glance.

In at least one example the user interface may be utilized to present a time series analysis view of the data set. The user interface may in some implementations provide diagnostic tools to help identify model components that might help improve the accuracy of the forecast s . Using user interface a user can choose one or more time series plots and tables to utilize when displaying information of a selected time series or for results of a computer generated analysis.

In at least one example any suitable number of data specification parameters may be provided e.g. by default or by user action via pane . A selection criteria e.g. Akaike s information criterion AIC a Bayesian information criterion BIC log likelihood criterion LOGLIK etc. may be selected using drop down menu . One or more discrete distribution types may be selected for example using selection menu . A number of count plot types may be selected via pane e.g. utilizing provided checkboxes . Upon making various selections the user may select the apply button in order to see the analysis plots selected.

In at least one embodiment the following graphs appear in the time series analysis view by default e.g. subsequent to performing a time series analysis and residual analysis a current time series plot e.g. the current time series plot in this example corresponding to count series data set of a plot of the seasonal decomposition e.g. the seasonal decomposition plot in this example corresponding to graph of a plot in in the log scale of the white noise probability test for a dependent series variable plot s of the autocorrelation function partial autocorrelation function inverse autocorrelation function and white noise probability test. It should be appreciated that not all such plots are shown in .

In the current example user interface may present the user in addition to current time series plot and seasonal decomposition plot as well as seasonal cycles for unit plot the frequency values plot .

In at least one example the user interface of may be utilized to present a probability distribution view of a data set. A probability distribution view as depicted in may provide a user the ability to identify a discrete probability distribution that might help improve the accuracy of a forecast. In at least one example any number of data specification parameters may be provided e.g. by default or by user action via pane . A selection criteria e.g. AIC log likelihood etc. may be selected using drop down menu . One or more discrete distribution types may be selected for example using selection menu . A number of count plot types may be selected via pane e.g. utilizing checkboxes . Upon making various selections the user may select the apply button in order to see the various probability distribution associated with the data.

In at least one example types of distribution types that are selectable by the user via selection menu may include but are not limited to a binomial probability distribution a zero modified negative binomial distribution a zero modified binomial probability distribution a geometric probability distribution a zero modified geometric probability distribution a Poisson probability distribution a zero modified Poisson probability distribution a negative binomial probability distribution and the like. A user may select one or more of these types of distributions to be viewed via the user interface . If the user selects more than one type of distribution the user may specify a discrete probability distribution selection criteria e.g. via drop down menu . In at least one example selection criteria may include but are not limited to an AIC criterion a BIC criterion or a log likelihood criterion. In at least one example a default criterion may be set to the log likelihood criterion selection.

In at least one example by default the following tables and graphs appear in the Probability Distribution View A frequency analysis plot e.g. plot including rectangular bars that represent the non zero count series values A sample count statistics table e.g. plot depicting sample statistics describe the count series data An automatic distribution selection table that describes how the selected distribution was chosen using a distribution section criterion A selected distribution parameter estimates table where a parameter P the zero modification percentage and the other parameters determine the shape of the distribution A distribution estimates table including estimates based on the parameter estimates table A selected discrete probability distribution plot e.g. the plot in this example corresponding to . In at least one example the plot includes non zero count series values zero count series values on a different scale estimated discrete probability distribution values a zero modified distribution a mean estimate a confidence region for the distribution mean a Chi square probabilities on a log scale of the selected distribution e.g. plot in this example corresponding for including the probabilities horizontal line s representing standard significance thresholds a vertical line representing the distribution mean and a shading representing the confidence region e.g. a 95 confidence region .

In at least one example the user interface of may be utilized to present a model selection list or the selected series. A user can also use plots and tables to compare how different models fit the data.

In accordance with at least one embodiment a user may be presented with the name of the selected count series data set a dependent variable for the project and the statistics of fit for the count series. If a user has specified an out of sample range then the user may view information about the statistics of fit. The model selection list shows that the models that have been fitted to a count series. In some examples for each model the list may display the model name the model type whether the model is read only and the fit criterion for the model. The model selection list may also display when a model has been rejected.

In at least one example a time series analysis may be performed including but not limited to a seasonal decomposition a correlation analysis and a spectral analysis as well as a residual analysis for the model. As a result the following tables and graphs may appear in the Modeling Selection View A plot in this example corresponding to graph of that includes the generated forecasts in the forecast horizon a plot of the residuals for the predicted errors e.g. differences between actual values in the count series data set and forecasted values and a plot in the log scale of the white noise probability test for predicted error. In the example depicted in a Chi Square Probabilities plot in this example similar in nature to the chi square probability chart of may be visible. Additionally or alternatively tables in this example corresponding to a table A B and C of . Additional tables discussed above may be included in the modeling selection view using user interface .

In the embodiment shown in the drawings a time series data store a probability distributions data store a selection criterion data store and a forecast data store are shown although data can be maintained derived or otherwise accessed from various data stores either remotely or locally to achieve the functions described herein. The count series forecasting engine as shown in includes various modules such as a graphical user interface an application programming interface a user input processing engine time series analysis engine a probability distribution selector engine a forecast generator and a display manager . Some functions of components and are described below. However for the benefit of the reader a brief non limiting description of each of the modules is provided in the following paragraphs.

In accordance with at least one embodiment a process is enabled for utilizing the count series forecasting engine . For example a user may utilize a user device e.g. the network device s of to interact with the count series forecasting engine e.g. via user interface and discussed below with respect to respectively . User device may be configured to communicate with networks e.g. the network s of . As part of a count series analysis process or at any suitable time user input may be received by user input processing engine via graphical user interface and application programming interface each being a component of the count series forecasting engine . As a side the graphical user interface and the application programming interface may be utilized in any suitable example described herein as a means for receiving and providing information by the count series forecasting engine .

In at least one example a user may utilize the user interfaces described below in to provide user input e.g. a user specification related to time series analysis. For example user input may specify at least one of a data set one or more probability distributions a selection criterion a confidence threshold or a statistical model.

Upon receipt user input processing engine may cause time series analysis engine to analyze a time series using the user specification. For example time series analysis engine may utilize the user specification to identify a data set from time series data store a data store responsible for storing time series data sets. The time series analysis engine may analyze the time series data set to provide a set of counts. The time series analysis engine may provide the set of counts and the user input to the probability distribution selector engine . Alternative the probability distribution selector engine may analyze the time series data set to provide the set of counts.

In at least one example the probability distribution selector engine may utilize the user input to identify information corresponding to a number of probability distributions from the probability distributions data store . The probability distribution selector engine may further identify a number of rules formulas and or algorithms corresponding to a selection criterion e.g. AIC BIC log likelihood or the like from the selection criterion data store . The probability distribution selector engine may utilize the information corresponding to the number of probability distributions and the selection criterion to determine an optimal probability distribution for the time series data set. Information related to the optimal probability distribution may be provided to the time series analysis engine .

The time series analysis engine may cause the forecast generator to provide a forecast for the time series data set. In at least one example the time series analysis engine may provide the time series data set and the user input to the forecast generator . The forecast generator may utilize the user input to determine a number of statistical models with which to provide a forecast. In at least one example the statistical models may be stored in forecast data store a data store responsible for storing such information. The forecast generator may utilize the user input to identify a number of rules formulas and or algorithms corresponding to a selection criterion from the selection criterion data store . The forecast generator may select a statistical model using the selection criterion. The forecast generator may generate a number of forecasts utilizing the statistical models. A forecast may be selected based on the selection criterion. In at least one example the forecast generator may analyze the selected statistical model to determine a degree of accuracy related to the forecast generated using the selected statistical model.

In at least one embodiment the time series analysis engine may receive or obtain the forecast generated and selected by the forecast generator . The time series analysis engine may use information related to the probability distribution elected by the probability distribution selector engine to adjust the forecast selected by the forecast generator . The time series analysis engine may provide the adjusted forecast to the display manager a component of the count series forecasting engine . The display manager produce may one or more graphs or any suitable graphical element to display information related to the probability distribution s forecast s or adjusted forecast. For example the display manager may provide user interface and of respectively.

The method may in some examples be utilized to predict future data points related to any suitable count series data set. Exemplary count series data sets may include but are not limited to counts related to a items in inventory e.g. a number related to a particular item in a grocery store occurrences of disease in a population e.g. a number of AIDS patients in a particular zip code a number of sales during a particular time period e.g. a number of shoes of a particular type sold in March of 1981 a count of Medal of Honor recipients from a particular state e.g. Medal of Honor recipients from Texas and the like. It should be understood that a count series data set may correspond to any number of situations in which the data set analyzed are made up of discrete values.

At block a set of counts may be generated e.g. by the time series analysis engine of . In at least one example the set of counts may be generated by analyzing the time series data set. The set of counts in some cases may correspond to a number of instances of a particular discrete value occurs in the time series data set. In at least one example the time series analysis engine may produce a set of counts corresponding to count series data set of .

At block an optimal discrete probability distribution for the set of counts may be selected from a set of candidate discrete probability distributions. In at least one example the user interface of may be utilized to identify the set of candidate discrete probability distributions. In at least one example the count series forecasting engine may automatically select an optimal discrete probability distribution using a selection criterion e.g. the selection criterion specified in the user specification . For example the probability distribution selector engine of may fit the set of candidate probability distributions to the set of counts for the time series data set. The fit may then be evaluated e.g. by the probability distribution selector engine based on the specified selection criterion. A probability distribution having a best fit for example may be selected by the probability distribution selector engine . In other examples the user may select a candidate discrete probability distribution to be used.

Continuing with the example of illustrates an example chart of selected distribution parameter estimates in accordance with at least one embodiment. For example the user specification may identify a number of probability distributions to be considered e.g. a zero modified binomial probability distribution a zero modified geometric probability distribution and a zero modified Poisson probability distribution as depicted at . The user specification may further specify a selection criterion. The values at correspond to selection values for the set of probability distributions corresponding to a zero value log likelihood selection criterion. The values at correspond to selection values for the set of probability distributions corresponding to a log likelihood selection criterion. The values at correspond to selection values for the set of probability distributions corresponding to an AIC selection criterion. The values at correspond to selection values for the set of probability distributions corresponding to a BIC selection criterion. A lowest value for the selection criterion may be selected as the optimal probability distribution by the probability distribution selector engine . For example considering that the user specification indicates that an AIC selection criterion is to be used the zero modified Poisson distribution may be selected for the optimal probability distribution at given that the corresponding AIC value for the zero modified Poisson distribution has the lowest computed AIC value. Although a lowest value for the selection criterion is used in this example it should be appreciated that in some examples the distribution with the highest value may be selected depending on the selection criterion used.

In one non limiting example a procedure e.g. a COUNT statement used in SAS ETS developed by SAS Institute Inc. of Cary N.C. may be used to analyze a time series data set e.g. the CountSeries data set . The time series data set may include monthly time series data e.g. discrete values corresponding to item inventory from an inventory system. In at least one example the following statement may be used to perform analysis on the time series data set 

Continuing on with the example of at block a set of parameters corresponding to the optimal discrete probability distribution may be generated e.g. by the probability distribution selector engine of . Continuing with the example from block a set of parameters may be generated for a zero modified Poisson distribution of the data set. For example illustrates an example of a table A that includes a set of parameters generated for an optimal discrete probability distribution. The parameter pof the table A corresponds to the zero modified percentage and the parameter lambda corresponds to a Poisson distribution parameter. In this example 29 of the data set is zero giving a zero modification parameter of 0.29. Using the set of parameters of a set of distribution estimates may be generated. illustrates and example table B includes a set of distribution estimates for a discrete probability distribution in accordance with at least one embodiment. For example the mean of the zero modified Poisson distribution equals 3.47. The variance equals 8.25522. The standard error equals 2.87319. The 95 discrete confidence limits may be determined to include values between 0 and 8. It should be appreciated that the confidence limits are nonnegative and integer valued.

Continuing on with the example of at block a statistical model for the time series data set may be selected e.g. by the forecast generator of . Selecting the statistical model may include using a set of statistical models and the selection criterion. For example illustrates an example of a table C indicating a statistical fit of a number of exponential smoothing models to a data set in accordance with at least one embodiment. For example a seasonal exponential smoothing model a Winters method additive model and a Winters method multiplicative model may each be used to produce a forecast. Each forecast may be analyzed and a corresponding statistical fit value may be determined. An optimal statistical model may be selected based on the statistical fit value and a selection criterion.

For example given the user has specified an AIC selection criterion each forecast generated from the indicated statistical models e.g. automatically by the forecast generator of may be scored based on the AIC selection criterion. In the example depicted by table C the seasonal exponential smoothing model may be selected as an optimal statistical model given a lowest AIC score. Although a lowest value for the selection criterion is used in this example it should be appreciated that in some examples a highest value may be selected depending on the selection criterion used.

In one non limiting example a procedure e.g. the HPF High Performance Forecasting procedure of SAS Forecast Server may be used e.g. by the forecast generator of to perform forecasting for a data set e.g. the CountSeries data set . The data set may include monthly time series data e.g. discrete values corresponding to item inventory from an inventory system. In at least one example the following statement may be used to perform automatic time series forecasting using a number of exponential smoothing statistical models 

Continuing on with the example of at block the set of predicted future data points for the time series data set may be generated. In at least one example generating the set of predicted future data points may include using the selected statistical model from block .

At block the set of predicted future data points for the time series data set may be adjusted e.g. by the time series analysis engine of . In at least one example adjusting the set of predicted future data points includes using the set of parameters corresponding to the optimal discrete probability distribution from block e.g. the set of parameters generated by the probability distribution selector engine of .

In one non limiting example a procedure e.g. the TIMEDATA procedure of SAS ETS may be used e.g. by the forecast generator of to perform forecasting for a data set e.g. the CountSeries data set . The time series data set may include monthly time series data e.g. discrete values corresponding to item inventory from an inventory system. In at least one example the following statement may be used to perform automatic time series forecasting using a number of exponential smoothing statistical models 

At block of a predicted data point may be provided e.g. by the time series analysis engine of using the adjusted set of predicted future data points. In at least one example the predicted data point may be based on received user input associated with the data set.

In at least one embodiment a time series forecasting process for providing time series forecasts may begin at block . The user may provide for example via a graphical user interface e.g. the graphical user interface provided by the count series forecasting engine calendar event definitions e.g. defining events related to the time series data and a custom time series model list e.g. a list specifying a number of time series models . The calendar event definitions may be utilized e.g. by the time series analysis engine of to generate diagnostic results . The diagnostic results may be generated by performing various analyses on the time series data for example analyses that relate to intermittency trend seasonality and or autocorrelation to name a few. A model selection specification may be specified by the user utilizing a graphical interface e.g. the graphical user interface provided by the count series forecasting engine . In other embodiments the model selection specification may be generated e.g. by the time series analysis engine of from the diagnostic results . In at least one example the model selection specification specifies a list of candidate models and describes how to select from among the models.

In at least one embodiment one or more time series models may be automatically generated at e.g. by the forecast generator of for example utilizing the model selection specification to produce a model selection list . Subsequent to generating the model selection list a process for automatic time series model selection may be performed at e.g. by the forecast generator of utilizing for example the model selection specification . One or more time series forecasts may be generated e.g. by the forecast generator of using the selected model from .

Subsequent to performing the time series forecasting process a time series model analysis process may be performed by for example the forecast generator in order to determine a degree of accuracy related to the one or more time series forecasts generated using the selected model from . The time series model analysis process may produce various time series model analyses e.g. in one or both graphical and or tabular form to the user at e.g. utilizing the display manager of . In some cases the user may determine that the degree of accuracy is unacceptable and the time series forecasting process may be repeated e.g. at the user s request in order to determine a more accurate times series model with which to generate forecasts.

At a same or different time as the time series forecasting process is being performed a frequency count analysis process may begin at where count data e.g. a set of counts corresponding to a number of occurrences of a particular value in the time series data may be determined from time series data e.g. by the probability distribution selector engine of . In some examples the user may specify a custom distribution list e.g. utilizing graphical user interface of . In other examples a predefined custom distribution list may be utilized. The custom distribution list may include a list of candidate probability distributions to be utilized when performing the frequency count analysis process . A distribution diagnostic specification may be obtained or received by the count series forecasting engine e.g. by the probability distribution selector engine of . For example the distribution diagnostic specification may include the custom distribution list as well as a list of one or more distribution selection criterion.

In at least one embodiment one or more discrete distributions may be generated at e.g. by the probability distribution selector engine of for example utilizing the distribution diagnostic specification to produce a discrete distribution selection list . Subsequent to generating the discrete distribution selection list a process for automatic discrete distribution selection may be performed at e.g. by the probability distribution selector engine of utilizing for example the distribution diagnostic specification . One or more discrete distribution parameters may be generated e.g. by the probability distribution selector engine of using the discrete distribution selected at .

Subsequent to performing the frequency count analysis process a discrete distribution analysis may be performed by for example the probability distribution selector engine of in order to determine a degree of adequacy related to the discrete distribution parameters generated at using the discrete distribution selected at . The frequency count analysis process may produce various discrete distribution analyses e.g. in one or both graphical and or tabular form to the user at e.g. utilizing the display manager of . In some cases the user may determine that the degree of adequacy is unacceptable and the frequency count analysis process may be repeated e.g. at the user s request in order to determine a more accurate discrete distribution with which to generate discrete distribution parameters.

In at least one embodiment once a sufficiently accurate forecast and adequate discrete distribution parameter s have been generated via the time series forecasting process and the frequency count analysis process respectively adjustments may be made to the generated time series at to produce a count series forecast . An example adjusted count series forecast is depicted above with respect to .

In at least one embodiment the count series forecast may be outputted at . For example the count series forecast may be provided to a user e.g. by the display manager of . Additionally or alternatively the count series forecast may be stored for later use e.g. in forecast data store of .

While this disclosure may contain many specifics these should not be construed as limitations on the scope of what may be claimed but rather as descriptions of features specific to particular implementations. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable sub combination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a sub combination or variation of a sub combination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be utilized. Moreover the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations and it should be understood that the described program components and systems can generally be integrated together in a single software or hardware product or packaged into multiple software or hardware products.

Some systems may use Hadoop an open source framework for storing and analyzing big data in a distributed computing environment. Some systems may use cloud computing which can enable ubiquitous convenient on demand network access to a shared pool of configurable computing resources e.g. networks servers storage applications and services that can be rapidly provisioned and released with minimal management effort or service provider interaction. Some grid systems may be implemented as a multi node Hadoop cluster as understood by a person of skill in the art. Apache Hadoop is an open source software framework for distributed computing. Some systems may use the SAS LASR Analytic Server in order to deliver statistical modeling and machine learning capabilities in a highly interactive programming environment which may enable multiple users to concurrently manage data transform variables perform exploratory analysis build and compare models and score. Some systems may use SAS In Memory Statistics for Hadoop to read big data once and analyze it several times by persisting it in memory for the entire session.

It should be understood that as used in the description herein and throughout the claims that follow the meaning of a an and the includes plural reference unless the context clearly dictates otherwise. Also as used in the description herein and throughout the claims that follow the meaning of in includes in and on unless the context clearly dictates otherwise. Finally as used in the description herein and throughout the claims that follow the meanings of and and or include both the conjunctive and disjunctive and may be used interchangeably unless the context expressly dictates otherwise the phrase exclusive or may be used to indicate situations where only the disjunctive meaning may apply.

