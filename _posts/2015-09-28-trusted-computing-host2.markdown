---

title: Trusted computing host
abstract: A trusted computing host is described that provides various security computations and other functions in a distributed multitenant and/or virtualized computing environment. The trusted host computing device can communicate with one or more host computing devices that host virtual machines to provide a number of security-related functions, including but not limited to boot firmware measurement, cryptographic key management, remote attestation, as well as security and forensics management. The trusted computing host maintains an isolated partition for each host computing device in the environment and communicates with peripheral cards on host computing devices in order to provide one or more security functions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09576155&OS=09576155&RS=09576155
owner: Amazon Technologies, Inc.
number: 09576155
owner_city: Reno
owner_country: US
publication_date: 20150928
---
This application is a continuation of U.S. patent application Ser. No. 13 912 948 filed on Jun. 7 2013 of which the full disclosure of this application is incorporated herein by references for all purposes.

As an increasing number of applications and services are being made available over networks such as the Internet an increasing number of content application and or service providers are turning to technologies such as cloud computing. Cloud computing in general is an approach to providing access to electronic resources through services such as Web services where the hardware and or software used to support those services is dynamically scalable to meet the needs of the services at any given time. A user or customer typically will rent lease or otherwise pay for access to resources through the cloud and thus does not have to purchase and maintain the hardware and or software needed.

In order to secure access to the customer s resources in the cloud and to help ensure that those resources perform tasks only under direction of that customer the service provider can utilize a variety of different security approaches and policies. In many cases such security techniques employ cryptographic services such as services based on symmetric or asymmetric cryptography. Due to the multitenant nature of the computing environment it can be important to ensure that malicious or unscrupulous users are not able to compromise those cryptographic services.

In the following description various embodiments will be illustrated by way of example and not by way of limitation in the figures of the accompanying drawings. References to various embodiments in this disclosure are not necessarily to the same embodiment and such references mean at least one. While specific implementations and other details are discussed it is to be understood that this is done for illustrative purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without departing from the scope and spirit of the claimed subject matter.

Systems and methods in accordance with various embodiments of the present disclosure may overcome one or more of the foregoing or other deficiencies experienced in conventional approaches for providing security related functions for computing resources. In particular embodiments described herein provide a trusted computing TC host that provides various security functions and computations in a distributed multitenant and or virtualized computing environment. In various embodiments the trusted computing host can be implemented as a physical computing device a virtual machine running on a physical computing device or other hardware software component. In the virtualized computing environment the trusted host computing device can communicate with one or more host computing devices that host virtual machines to provide a number of security related functions including but not limited to boot firmware measurement cryptographic key management remote attestation as well as security and forensics management. In at least some embodiments the trusted computing host communicates with peripheral cards or other hardware on host computing devices in order to provide the security related functions.

In accordance with an embodiment the trusted computing host maintains a dedicated container e.g. isolated partition for each host computing device in the virtualized computing environment. This container is used to store security attributes and to perform security computations and functions on behalf of the host computing device associated with the container. For example one or more cryptographic keys e.g. public keys private keys etc. for a host computing device can be stored in the isolated partition on the TC host where the isolated partition is associated with the respective host computing device. Similarly the security attributes may include public key certificates boot firmware measurements or other credentials of the host computing device associated with the isolated partition. These security attributes can be utilized by the TC host to provide one or more security functions to the host computing devices in the virtualized computing environment. For example the TC host may perform remote attestation of the host computing devices to external entities generate and manage cryptographic keys on behalf of the host computing devices monitor various operational parameters of the host computing devices and perform various other security and forensics related functions.

As mentioned above the trusted computing TC can be utilized in a multi tenant and or virtualized shared resource environment often referred to as a cloud computing environment. Conventionally in this type of environment host computing devices utilize virtualization technology to provision one or more virtual machine instances that are associated with different customers of a service provider or other operator of the environment e.g. cloud computing provider . These virtual machine instances are hosted on the computing device using a hypervisor or other virtualization technology and each virtual machine instance can contain a guest operating system including a kernel device drivers and other OS components. The host computing devices and other physical resources to host the virtual machines are usually provided by the service provider or other operator of the environment and reside in resource centers such as a data centers server farms content delivery network CDNs points of presence POPs and the like.

The use of a trusted computing TC host for security related functions in the virtualized environment provides a number of distinct advantages. For example because the credentials and other secret materials e.g. cryptographic keys certificates etc. of the host device which may be hosting multiple virtual machines of multiple users are not stored on the host device itself but are kept in an external secure location i.e. the TC host any compromise of a host device would not necessarily compromise the credentials and other secrets stored on the TC host. For example in the event a virtual machine provisioned for one user breaks out of its isolated execution environment on the host and begins to operate in a high privilege mode e.g. during a virtual machine escape the credentials and other secret materials belonging to other virtual machines and other users on that host would not be compromised. Another advantage can occur during migration of the virtual machines from one host computing device to another. When virtual machines are moved i.e. migrated from a source host device to a destination host device the credentials and other security attributes do not need to be transferred from the source host device to the destination host. Rather the migrated virtual machine can simply start up on the new host and make a secure connection to the TC host to receive the cryptographic material from the TC host. A number of other advantages can also be obtained by the use of a TC host for security functions as will be apparent to one of ordinary skill in the art.

In various embodiments the security attributes can include host boot firmware measurements cryptographic keys and certificates e.g. public key certificates among others. The TC host may perform one or more security functions e.g. cryptographic services on behalf of the host computing devices by utilizing the security attributes . For example the TC host may receive a boot firmware measurement from a host computing device and record the boot firmware measurement in the isolated partition associated with that host computing device. The TC host may then seal e.g. hash information to the recorded boot firmware measurement or use the boot firmware measurement to remotely attest the identity of the host computing device to external entities. Additionally the TC host may contain pre computed reference values for all host computing devices and upon receiving the boot firmware measurement from a host compare the boot firmware measurement to the respective pre computed reference value in order to verify that the software on the host has not been corrupted. As another example the TC host may generate keys certificates or other credentials on behalf of the host computing devices and provide those cryptographic materials to the host computing device in response to receiving requests from the hosts e.g. API requests .

In accordance with an embodiment the isolated partitions are encrypted using cryptographic keys associated with the host computing devices and stored in local storage on the TC host . For example as shown in the figure partition is encrypted using a cryptographic key associated with host computing device partition is encrypted using a cryptographic key associated with host computing device and partition is encrypted using a cryptographic key associated with host computing device . In various embodiments any encryption technique can be utilized to encrypt the partitions. The partitions can be encrypted using asymmetric or symmetric cryptography. For example each partition may be encrypted using a public key and may only be decryptable using a private key associated with the public key. In some embodiments the private key may be stored remotely with respect to the TC host such as on the respective host computing devices or other locations.

In some embodiments the TC host may include one or more cryptographic co processors for accelerating cryptographic computations and tamper proofing techniques to protect against physical attacks such as power glitching removing dynamic random access memory DRAM cards un soldering Flash memory or the like. For example the TC host may include a cryptographic accelerator that performs computationally intensive encoding and decoding of information e.g. encrypting decrypting signing verifying etc. . Similarly the TC host may have redundant power supplies secure housing e.g. locking mechanisms and or may reside in a secured area of a resource center. Additionally the TC host may have encrypted native physical storage to prevent untrusted parties from reading the information stored on the TC host.

In some embodiments the service provider or other operator of the virtualized environment can provide a console API or other interface to enable the user e.g. customer of the service provider to sign up for utilizing the security functions provided by the TC host . The user may select the services that they desire by using the interface provided by the operator. As a result of signing up for the service one or more application programming interface API calls are exposed to the user on the virtual machine instance s provisioned for that user. For example the API calls may include calls to obtain manage credentials and other security attributes such as getKey storeKey verifyCertificate or the like. By utilizing the API calls the user may be able to access security functions provided by the TC host .

In order to enable this functionality the host computing device may contain logic for receiving an API request from a user e.g. customer authenticating the user and determining whether the user is authorized to make invoke the API call. For example the host computing device may inspect a security policy associated with the user in order to determine whether the user is authorized to invoke the API call. If the user is authorized to invoke the API call the host computing device routes the API call to the particular partition of the TC host associated with the respective host computing device where that virtual machine s credentials and or other security attributes are cryptographically stored and sealed. In some embodiments the host computing device may establish a secure communication channel with the TC host to obtain the credentials from the TC host. This can be done with standard secure communication protocols involving authentication integrity checks and encryption as described in further detail below with reference to .

It should be noted that although illustrates a single trusted computing host in various other embodiments the environment may include multiple TC hosts which in some cases may work together to provide the security related functionality for host computing devices. Similarly although the TC host is implemented as a dedicated physical device in this embodiment the TC host may alternatively be implemented as a virtual machine or other software component running on a host computing device in the virtualized computing environment .

In various embodiments the peripheral card may have direct memory access DMA privileges to access entire host memory e.g. through IOMMU VT d settings and out of band OOB networking capability i.e. independent of the networking stack of the host computing device . DMA privileges enable the peripheral card to directly apply software patches or other modifications received from the TC host to the host computing device. The OOB networking ability can allow the TC host to reach the host computing device to perform diagnosis and recovery even if the host computing device is unreachable via a network connection due to corruption of its native software stack.

In some embodiments the peripheral card can work with the TC host in order to provide boot firmware measurement or other value and remote attestation on behalf of the host computing device . For example in order to record a boot firmware measurement the peripheral card on the host computing device can have the ability to access one or more memory locations on the host computing device using direct memory access DMA and hash the values of those locations to obtain a boot firmware measurement. In some embodiments the peripheral card may also trap one or more write operations to specific address ranges e.g. traditional TPM address ranges such as 0xfed40000 0xfed4ffff and send the results of those write operations to the TC host using the secure communication channel. In addition some functionality provided in remote boot features such as pre boot execution environment PXE can be accessed to enable the boot measurement process. Because the service provider or other operator of the virtualized environment knows the version of firmware and other software installed on the host computing device the provider can pre compute a reference cryptographic hash measurement for the host computing device . In one embodiment upon receiving an initial boot firmware measurement from the host computing device the TC host compares the received value with the pre computed reference value or a list of trusted values stored in the isolated partition and check whether they match. A mismatch may indicate corruption of the software stack on the host computing device and the TC host can take one or more corrective actions e.g. as prescribed by a security policy of the service provider . Furthermore the firmware of the host computing device may be periodically re measured at runtime. For example the peripheral card may periodically re measure the firmware of the host computing device and transmit the re measured firmware values to the TC host . The TC host can compare the re measured firmware values to the initial boot firmware measurement recorded in the partition to verify the host computing device. If the re measured values no longer match the initial boot firmware measurement the host computing device may be deemed compromised. Additionally or in the alternative once the boot firmware measurement is obtained for the host computing device the TC host may use the boot firmware measurement to seal private or secret information to that boot firmware measurement. For example the TC host may encrypt one or more credentials by using a key based on the boot firmware measurement such that the data may only be decrypted by supplying a matching boot firmware measurement. In this manner no entity would be able to access the sealed private information unless that entity was able to provide a matching boot firmware measurement.

In some embodiments the TC host can act as a trusted proxy and perform remote attestation of the host computing device to one or more external entities based on the boot firmware measurements and or other security attributes recorded in the isolated partition . For example once the boot firmware measurement has been stored on the TC host the TC host may receive a request from an external party requesting that the identity of the host computing device or virtual machine be attested to by the TC host. In response to the request the TC host may compare a value received from the external entity to the boot firmware measurement stored on the TC host in order to attest the identity of the host computing device . In various embodiments remote attestation can use the boot firmware measurement or any other hash key summary of the hardware and software configuration of the host computing device .

In various embodiments the environment may include various types of resources that can be utilized by multiple users for a variety of different purposes. In at least some embodiments all or a portion of a given resource or set of resources might be allocated to a particular customer or allocated for a particular task for at least a determined period of time. The sharing of these resources from a multi tenant virtualized computing environment is often referred to as resource sharing Web services or cloud computing among other such terms and depending upon the specific environment and or implementation. In this example the multi tenant virtualized computing environment includes a plurality of resources of one or more types. These types can include for example application servers operable to process instructions provided by a user or database servers operable to process data stored in one or more data stores in response to a user request. As known for such purposes the customer can also reserve at least a portion of the data storage in a given data store. Methods for enabling a customer to reserve various resources and resource instances are well known in the art such that detailed description of the entire process and explanation of all possible components will not be discussed in detail herein.

In at least some embodiments a user wanting to utilize at least a portion of the resources can submit a request that is received to an interface layer of the multi tenant virtualized computing environment . The interface layer can include application programming interfaces APIs or other exposed interfaces enabling a user to submit requests to the multi tenant virtualized computing environment. The interface layer in this example can also include other components as well such as at least one Web server routing components load balancers and the like. When a request to provision a resource is received to the interface layer for example information for the request can be directed to a resource manager or other such system service or component configured to manage user accounts and information resource provisioning and usage and other such aspects. A resource manager receiving the request can perform tasks such as to authenticate an identity of the user submitting the request as well as to determine whether that user has an existing account or is associated with a customer having an existing account with the resource provider where the account data may be stored in at least one data store in the environment. A user can provide any of various types of credentials in order to authenticate an identity of the user to the provider. These credentials can include for example a username and password pair biometric data a digital signature or other such information. The provider can validate this information against information stored for the user. If the user has an account with the appropriate permissions status etc. the resource manager can determine whether there are adequate resources available to suit the user s request and if so can provision the resources or otherwise grant access to the corresponding portion of those resources for use by the user for an amount specified by the request. This amount can include for example capacity to process a single request or perform a single task a specified period of time or a recurring renewable period among other such values. If the user is not associated with a valid account with the provider an associated account does not enable access to the type of resources specified in the request or another such reason is preventing the user from obtaining access to such resources a communication can be sent to the user or associated customer to enable the user to create or modify an account or change the resources specified in the request among other such options.

Once the user and or request is authenticated the account verified and the resources allocated the user can utilize the allocated resource s for the specified capacity amount of data transfer period of time or other such metric. In at least some embodiments a user might provide a session token or other such credentials with subsequent requests in order to enable those requests to be processed on that user session. The user can receive a resource identifier specific address or other such information that can enable the client device to communicate with an allocated resource without having to communicate with the resource manager at least until such time as a relevant aspect of the user account changes the user is no longer granted access to the resource or another such aspect changes.

The resource manager or another such system or service in this example can also function as a virtual layer of hardware and software components that handles control functions in addition to management actions as may include provisioning scaling replication etc. The resource manager can utilize dedicated APIs in the interface layer where each API can be provided to receive requests for at least one specific action to be performed with respect to the data environment such as to provision scale clone or hibernate an instance. Upon receiving a request to one of the APIs a Web services portion of the interface layer can parse or otherwise analyze the request to determine the steps or actions needed to act on or process the call. For example a Web service call might be received that includes a request to create a data repository.

An interface layer in at least one embodiment includes a scalable set of customer facing servers that can provide the various APIs and return the appropriate responses based on the API specifications. The interface layer also can include at least one API service layer that in one embodiment consists of stateless replicated servers which process the externally facing customer APIs. The interface layer can be responsible for Web service front end features such as authenticating customers based on credentials authorizing the customer throttling customer requests to the API servers validating user input and marshaling or unmarshaling requests and responses. The API layer also can be responsible for reading and writing database configuration data to from the administration data store in response to the API calls. In many embodiments the Web services layer and or API service layer will be the only externally visible component or the only component that is visible to and accessible by customers of the control service. The servers of the Web services layer can be stateless and scaled horizontally as known in the art. API servers as well as the persistent data store can be spread across multiple data centers in a region for example such that the servers are resilient to single data center failures.

In the illustrated example the resource center of the service provider may include one or more racks of host computing devices wherein each host computing device on a particular rack is connected to a single top of rack TOR switch . These TOR switches can be further connected to one or more other switches which enable the host computing devices to connect to the network. As used throughout this disclosure a network can be any wired or wireless network of devices that are capable of communicating with each other including but not limited to the Internet or other Wide Area Networks WANs cellular networks Local Area Networks LANs Storage Area Networks SANs Intranets Extranets and the like. The resource centers can include any physical or logical grouping of resources such as a data center a server farm content delivery network CDN point of presence POP and the like.

In accordance with an embodiment each host computing device can host one or more virtual machine instances that have been provisioned for the customers of the service provider to execute the various applications and services on behalf of those customers. Each virtual machine can be provisioned with its own operating system OS including a kernel drivers process management and the like.

When a customer wishes to obtain a virtual machine instance the customer can first submit a request to the service provider indicating the type of VM they would like to use. The service provider may carry out the processes to provision the virtual machine instance which will be hosted on the physical resources e.g. host computing devices of the service provider. The virtual machine instance can then be used to execute the various applications and services on behalf of the customer utilizing the resources of the service provider. In this environment the trusted computing TC host can be an independent physical computing device residing in the resource center of the service provider. In another embodiment the TC host may be a virtual machine instance running on a host computing device. In either event the cryptographic keys credentials and other security attributes can be managed for each host computing device and virtual machine using the TC host as previously described.

In operation the trusted computing host creates a dedicated isolated partition for each host computing device in the virtualized computing environment. The partition may be a database partition physical disk partition logical partition or any other storage compartment designated for the host computing device. In at least some embodiments the partitions may be isolated from each other and each partition may be encrypted using a key associated with the host computing device. In operation the TC host stores one or more security attributes for the host computing device in the isolated partition. The security attributes may be stored as part of creating the isolated partition or as a later processing step after the partition has been created. The security attributes may include cryptographic keys certificates and boot firmware measurements among other such attributes. In various embodiments the security attributes may be received from the host computing device a peripheral card or generated by the TC host.

In operation the TC host receives a request such as an API request to perform a security function e.g. cryptographic service on behalf of the host computing device. The request may be received from a peripheral card on the host computing device. For example the host computing device may request access to a cryptographic key or a public key certificate or may request a certificate signing request CSR to be submitted to a certificate authority CA . In operation the TC host authenticates the host computing device and establishes a secure communication channel with the host. The secure channel can be set up by performing mutual authentication and establishing a key used to encrypt all communications sent through the channel.

In operation the TC host performs the security function on behalf of the host computing device by utilizing the one or more security attributes stored in the respective partition. For example the TC host may generate one or more cryptographic keys for the host computing device and provide the keys to the host over the secure channel. Similarly the TC host may receive a boot firmware measurement from the host computing device and compare the received boot firmware measurement to a reference value stored in the isolated partition associated with the host computing device to verify the boot firmware measurement. In various embodiments any number of other security computations or other functions can be provided by the TC host as described throughout this specification.

In operation the peripheral card sends the boot firmware measurement to the trusted computing host using a secure channel established between the TC host and the peripheral card. Once the TC host receives the boot firmware measurement it can record the measurement in the isolated partition associated with the host computing device as shown in operation . In some embodiments the TC host can compare the received boot firmware measurement to a pre computed reference value stored in the isolated partition associated with the host computing device. If the values do not match some portion of the software on the host computing device may be deemed corrupted and the TC host may assume that the host computing device did not boot correctly or contains some malware or other security thread on the device. The TC host may then perform corrective actions e.g. as specified by a security policy . For example the TC host may flag the host computing device generate an alarm to notify an administrator restart the host computing device or software running thereon or perform any other action.

In operation the peripheral card may re measure the firmware of the host computing device at runtime to obtain a second firmware measurement for the host computing device. For example the peripheral card may periodically or upon request access the same memory locations on the host computing device using DMA and hash the values in those memory locations to obtain the second firmware measurement. In operation the peripheral card sends the second firmware measurement to the TC host. The second firmware measurement may be transmitted as part of a request to verify that the host computing device has not been corrupted. In one embodiment the second firmware measurement is transmitted using the secure communication channel established between the peripheral card and the TC host.

In operation the TC host may compare the second firmware measurement received from the peripheral card to the boot firmware measurement stored in the isolated partition in order to verify the host computing device. If the boot firmware measurement matches i.e. is identical to the second firmware measurement the TC host may send a verification response to the peripheral card indicating that the host computing device has not been corrupted. If the measurements do not match the TC host may transmit a response indicating that the host computing device was not verified. In addition or in the alternative the TC host may perform corrective actions such as notifying various users or services recording the event in a log or the like. In various embodiments the re measuring operation may be repeated periodically such as upon expiration of certain time intervals or may be performed upon request.

In some embodiments the TC host may provide remote attestation based on the boot firmware measurement recorded for the host computing device. The remote attestation may be provided in response to receiving a request from an external party or from the host computing device to verify the host computing device. To perform remote attestation the TC host can compare the stored boot firmware measurement to a received value in order to verify the host computing device a virtual machine operating on the host computing device or a user associated with the virtual machine. The value may be received from the host computing device to the TC host or the value may be received from the external entity requesting the attestation.

In other embodiments the TC host may seal a set of data to the boot firmware measurement in order to prevent other entities from reading the set of data. For example the TC host may use a key derived e.g. hashed from the boot firmware measurement to encrypt the data. Any data that should be made private can be sealed to the boot firmware measurement. Sealing the data protects private information by binding it to host computing device s configuration information including the software and hardware being used. This means the data can be released only to a particular combination of software and hardware that was used to create the boot firmware measurement.

In operation if the user is authenticated and authorized to make the API call the host computing device transmits to the TC host a request to generate the one or more cryptographic keys on behalf of the host computing device. In one embodiment a secured channel is established between the TC host and the host computing device. In operation the TC host generates the cryptographic key for the user. In operation the TC host sends the cryptographic key to the host computing device over the secure communication channel. In operation the host computing device provides the user access to the cryptographic key. In some embodiments the TC host may also generate or provide other security attributes to the host computing device. For example in response to receiving the request from the host computing device the TC host may submit a certificate signing request CSR to a certificate authority CA . The TC host may then receive the digital identity certificate from the CA and provide the certificate to the host computing device.

In operation the host computing device transmits to the TC host the cryptographic key received from the user. The cryptographic key may be transmitted over the secure communication channel along with a request to securely store the cryptographic key on the TC host on behalf of the user. In operation the TC host stores the cryptographic key of the user in the isolated partition dedicated to the host computing device. The isolated partition may be encrypted using a different cryptographic key associated with the host computing device such that only the host computing device may access the user s key. Because the user s key is securely maintained off of the host computing device any virtual machine or other code operating on the host computing device cannot obtain access to the cryptographic key unless it is able authenticate itself to the TC host. This provides improved security for maintaining the various credentials for the user such as cryptographic keys digital identity certificates and the like.

In operation the peripheral card sends the requested information about the operational parameters to the TC host using the established secure communication channel. The TC host may inspect and analyze the received information and determine whether any security threat exists on the host computing device. For example the TC host may compare the information about the operational parameters to a set of expected information that may be stored in the isolated partition on the TC host.

As discussed different approaches can be implemented in various environments in accordance with the described embodiments. For example illustrates an example of an environment for implementing aspects in accordance with various embodiments. As will be appreciated although a Web based environment is used for purposes of explanation different environments may be used as appropriate to implement various embodiments. The system includes an electronic client device which can include any appropriate device operable to send and receive requests messages or information over an appropriate network and convey information back to a user of the device. Examples of such client devices include personal computers cell phones handheld messaging devices laptop computers set top boxes personal data assistants electronic book readers and the like. The network can include any appropriate network including an intranet the Internet a cellular network a local area network or any other such network or combination thereof. Components used for such a system can depend at least in part upon the type of network and or environment selected. Protocols and components for communicating via such a network are well known and will not be discussed herein in detail. Communication over the network can be enabled via wired or wireless connections and combinations thereof. In this example the network includes the Internet as the environment includes a Web server for receiving requests and serving content in response thereto although for other networks an alternative device serving a similar purpose could be used as would be apparent to one of ordinary skill in the art.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment. The application server can include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device and handling a majority of the data access and business logic for an application. The application server provides access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the Web server in the form of HTML XML or another appropriate structured language in this example. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the Web server . It should be understood that the Web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein.

The data store can include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect. For example the data store illustrated includes mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log or session data . It should be understood that there can be many other aspects that may need to be stored in the data store such as page image information and access rights information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. In one example a user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information can then be returned to the user such as in a results listing on a Web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include computer readable medium storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

Various embodiments discussed or suggested herein can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In embodiments utilizing a Web server the Web server can run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by a system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

