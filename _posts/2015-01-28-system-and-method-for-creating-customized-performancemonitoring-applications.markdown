---

title: System and method for creating customized performance-monitoring applications
abstract: In one embodiment, a method is performed by a computer system. The method includes providing a performance-monitoring platform as a service, the performance-monitoring platform comprising at least one agent manager. The method further includes facilitating creation of a customized performance-monitoring application, the performance-monitoring application comprising an agent and at least one user dashboard. The agent is configured to collect performance data related to a specified monitored resource. The agent parses the collected performance data to a monitoring server for storage according to at least one standard data model. The at least one user dashboard allows users to view information related to the collected performance data. The facilitating includes configuring deployment attributes of the customized performance-monitoring application responsive to developer input. Moreover, the method includes deploying the customized performance-monitoring application on the performance-monitoring platform. The method also includes making the customized performance-monitoring application available to end users as a service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09274758&OS=09274758&RS=09274758
owner: Dell Software Inc.
number: 09274758
owner_city: Aliso Viejo
owner_country: US
publication_date: 20150128
---
The present disclosure relates generally to application development and more particularly but not by way of limitation to systems and methods for creating performance monitoring applications.

Today more and more business application are being deployed to cloud computing platforms. At present however performance monitoring applications can be time consuming to develop and difficult to customize. Moreover as the value and use of information continues to increase individuals and businesses seek additional ways to process and store information. One option available to users is information handling systems. An information handling system generally processes compiles stores and or communicates information or data for business personal or other purposes thereby allowing users to take advantage of the value of the information. Because technology and information handling needs and requirements vary between different users or applications information handling systems may also vary regarding what information is handled how the information is handled how much information is processed stored or communicated and how quickly and efficiently the information may be processed stored or communicated. The variations in information handling systems allow for information handling systems to be general or configured for a specific user or specific use such as financial transaction processing airline reservations enterprise data storage or global communications. In addition information handling systems may include a variety of hardware and software components that may be configured to process store and communicate information and may include one or more computer systems data storage systems and networking systems.

In one embodiment a method is performed by a computer system. The method includes providing a performance monitoring platform as a service the performance monitoring platform comprising at least one agent manager. The at least one agent manager includes a runtime container environment for agents and provides customizable performance monitoring functionality via at least one interface. The method further includes facilitating creation of a customized performance monitoring application the facilitating comprising interaction with at least one developer the performance monitoring application comprising an agent and at least one user dashboard. The agent is configured to collect performance data related to a specified monitored resource via the performance monitoring functionality of the at least one agent manager. Via the performance monitoring functionality of the at least one agent manager the agent parses the collected performance data to a monitoring server for storage according to at least one standard data model implemented by the performance monitoring platform. The at least one user dashboard allows users to view information related to the collected performance data. The facilitating includes configuring deployment attributes of the customized performance monitoring application responsive to developer input. Moreover the method includes deploying the customized performance monitoring application on the performance monitoring platform. The method also includes making the customized performance monitoring application available to end users as a service.

In one embodiment an information handling system includes at least one processor wherein the at least one processor is operable to implement a method. The method includes providing a performance monitoring platform as a service the performance monitoring platform comprising at least one agent manager. The at least one agent manager includes a runtime container environment for agents and provides customizable performance monitoring functionality via at least one interface. The method further includes facilitating creation of a customized performance monitoring application the facilitating comprising interaction with at least one developer the performance monitoring application comprising an agent and at least one user dashboard. The agent is configured to collect performance data related to a specified monitored resource via the performance monitoring functionality of the at least one agent manager. Via the performance monitoring functionality of the at least one agent manager the agent parses the collected performance data to a monitoring server for storage according to at least one standard data model implemented by the performance monitoring platform. The at least one user dashboard allows users to view information related to the collected performance data. The facilitating includes configuring deployment attributes of the customized performance monitoring application responsive to developer input. Moreover the method includes deploying the customized performance monitoring application on the performance monitoring platform. The method also includes making the customized performance monitoring application available to end users as a service.

In one embodiment a computer program product includes a non transitory computer usable medium having computer readable program code embodied therein. The computer readable program code is adapted to be executed to implement a method. The method includes providing a performance monitoring platform as a service the performance monitoring platform comprising at least one agent manager. The at least one agent manager includes a runtime container environment for agents and provides customizable performance monitoring functionality via at least one interface. The method further includes facilitating creation of a customized performance monitoring application the facilitating comprising interaction with at least one developer the performance monitoring application comprising an agent and at least one user dashboard. The agent is configured to collect performance data related to a specified monitored resource via the performance monitoring functionality of the at least one agent manager. Via the performance monitoring functionality of the at least one agent manager the agent parses the collected performance data to a monitoring server for storage according to at least one standard data model implemented by the performance monitoring platform. The at least one user dashboard allows users to view information related to the collected performance data. The facilitating includes configuring deployment attributes of the customized performance monitoring application responsive to developer input. Moreover the method includes deploying the customized performance monitoring application on the performance monitoring platform. The method also includes making the customized performance monitoring application available to end users as a service.

For purposes of this disclosure an information handling system may include any instrumentality or aggregate of instrumentalities operable to compute calculate determine classify process transmit receive retrieve originate switch store display communicate manifest detect record reproduce handle or utilize any form of information intelligence or data for business scientific control or other purposes. For example an information handling system may be a personal computer e.g. desktop or laptop tablet computer mobile device e.g. personal digital assistant PDA or smart phone server e.g. blade server or rack server a network storage device or any other suitable device and may vary in size shape performance functionality and price. The information handling system may include random access memory RAM one or more processing resources such as a central processing unit CPU or hardware or software control logic ROM and or other types of nonvolatile memory. Additional components of the information handling system may include one or more disk drives one or more network ports for communicating with external devices as well as various input and output I O devices such as a keyboard a mouse touchscreen and or a video display. The information handling system may also include one or more buses operable to transmit communications between the various hardware components.

The agent manager component includes a plurality of agent managers that each provide customizable performance monitoring functionality via one or more interfaces such as for example an application programming interface API . The agent manager component can include an on demand agent manager pool and one or more on premise agent managers . The on demand agent manager pool can include for example one or more on demand agent managers that are maintained and executed on the system . The on demand agent managers can be used by the customized performance monitoring applications that are deployed on the system . The one or more on premise agent managers can be used for example when a particular monitored resource of the monitored resources is in a given user s local intranet or otherwise cannot be reached by the one or more on demand agent managers . In general each agent manager may be seen as a runtime container environment for agent instances within customized performance monitoring applications.

The monitoring server pool includes monitoring servers on which customized performance monitoring applications can be deployed and executed. In that way the monitoring server pool can be used to monitor certain monitored resources such as for example the monitored resources . For illustrative purposes customized performance monitoring applications and collectively customized performance monitoring applications are shown to execute on one or more monitoring servers and collectively monitoring servers respectively. In certain embodiments the monitoring servers can provide data transformation topology and metric data storage functionality as described in U.S. Pat. No. 8 175 862 which patent is hereby incorporated by reference. In addition the monitoring servers can provide a user interface framework for enabling presentation of performance data collected from or generated with respect to the one or more monitored resources .

The customized performance monitoring applications typically provide ability to monitor one or more specified monitored resources. By virtue of being monitored by the customized performance monitoring applications such specified monitored resources may be considered to be included in the one or more monitored resources . For example the customized performance monitoring applications can monitor websites identified by a URL a cloud computing platform and or other infrastructure etc. In general the customized performance monitoring applications can include a standard data model that defines a data structure e.g. of collected or generated performance data agents that that collect performance data UI components that can be used view collected or generated performance data analytics components and or other components. Collected or generated performance data is typically parsed to one of the monitoring servers and stored e.g. persisted according to the standard data model. When the customized performance monitoring applications are executed the monitoring servers can receive the collected or generated performance data process the data fire rules or alarms e.g. responsive to specified criteria being met generate derived or calculated metrics and persist the data to storage. An example of the customized performance monitoring applications will be described with respect to .

In some embodiments the agent managers of the agent manager component may only connect with one of the monitoring servers at a time. In these embodiments the router can be responsible for maintaining connections between the agent managers of the agent manager component and the monitoring server pool . For example the router may include routing rules configured in a lookup table that maps each agent manger to a monitoring server. In a typical embodiment the mappings can be changed dynamically. In that way the connections between the agent managers of the agent manager component and the monitoring server pool can be changed if necessary or desirable.

In various embodiments the system may interact with multiple kinds of customers in furtherance of its functionality. For example the system can support developers who desire to develop customized performance monitoring applications such as for example the customized performance monitoring applications . By way of further example the system can support end users who buy and use the customized performance monitoring applications for example to view and analyze collected performance data for end user specified resources.

The administration system can be an administrative portal for developers to use. In an example developers can develop a customized performance monitoring application offline and subsequently deploy the customized performance monitoring application to the system e.g. the monitoring server pool . As shown the administration system can include a deployment module an auto scaling module a monitoring module an alerts module and a reporting module .

The deployment module can include functionality to deploy customized performance monitoring applications e.g. the customized performance monitoring applications on monitoring servers of the monitoring server pool . The monitoring module can monitor for example a runtime summary of a given developer s customized performance monitoring application. The alerts module can generate and deliver alerts to designated individuals on an application specific basis if for example an exception occurs. The reports module can deliver or make available administration reports related to execution of the customized performance monitoring applications.

The auto scaling module can include scaling rules related to monitoring servers and agent managers. Regarding monitoring servers the auto scaling module can include rules regarding when a given customized performance monitoring application should be scaled out to additional monitoring servers. In various embodiments customized performance monitoring applications can be scaled according to a calculated tenant count. For example if application A specifies that each monitoring server can support fifty application A tenants then the fifty first tenant can be assigned to a new monitoring server. In an example initially the deployment module may deploy a particular customized performance monitoring application to only one of the monitoring servers of the monitoring server pool . If determined necessary the auto scaling module can cause the deployment module to deploy the particular customized performance monitoring application to additional ones of the monitoring servers .

Regarding agent managers the auto scaling module can include rules related to when additional agent managers are needed. In various embodiments particular customized performance monitoring applications can include one or more different types of agents. An agent type can be a basis for classifying or evaluating computer resource needs. For example application A may have agent type A and agent type A. According to this example a corresponding agent manager from the agent manager component can be scaled by a calculated agent resource weight. Consider an example in which the corresponding agent manager can serve a resource weight of one hundred. If the agent A has a resource weight of ten and agent A has a resource weight of five the corresponding agent manager can serve ten A agents 20 A agents a combination of five A agents and ten A agents etc. When a new agent manager is needed additional agent managers can be deployed. In that way the one or more on premise agent managers and or the one or more on demand agent managers can grow in number as required.

In various cases some or all of the rules implemented by the auto scaling module can be customized or defined for example by a developer. In certain embodiments the rules can be scripts for example that acquire an application runtime summary which includes data such as user count and server performance data. Based on such data the script can evaluate whether scaling is advisable. The rules implemented by the auto scaling module can also include default rules that do not require any developer input.

In a typical embodiment the end user portal system can be a portal for end users to use. In various embodiments the end user portal system can be accessed via a browser or other client application executing on the end user system . As illustrated the end user portal system can include an authentication module a provision module an access control module and a billing module . Consider an example in which a particular user would like to access the customized performance monitoring application . According to this example the authentication module can provide user registration functionality and user login functionality etc. After successful registration and or login the provision module can determine to which of the monitoring servers to bind the particular end user. Thereafter a tenant can be created on the determined monitoring server.

The access control module can control the visibility of the monitoring servers so that the particular end user will be sent to the determined monitoring server. More specifically the router can maintain routing rules configured in a lookup table. The routing rules of the router can map users to specific monitoring servers in the monitoring server pool to which they are bound. After a user has been bound to a monitoring server as described above subsequent requests of that user can be routed to the same monitoring server. In a typical embodiment the mappings can be changed dynamically. For example if a given user is migrated from one monitoring server to another the routing rules of the router can be updated.

If the customized performance monitoring application is not available free of charge the billing module can provide an interface and supporting functionality for the particular end user to purchase access to the customized performance monitoring application

The components of the information handling system may comprise any suitable physical form configuration number type and or layout. As an example and not by way of limitation the information handling system may comprise an embedded computer system a system on chip SOC a single board computer system SBC such as for example a computer on module COM or system on module SOM a desktop computer system a laptop or notebook computer system an interactive kiosk a mainframe a mesh of computer systems a mobile telephone a personal digital assistant PDA a wearable or body borne computer a server or a combination of two or more of these. Where appropriate the information handling system may include one or more computer systems be unitary or distributed span multiple locations span multiple machines or reside in a cloud which may include one or more cloud components in one or more networks.

In the depicted embodiment the information handling system includes a processor memory storage interface and bus . Although a particular information handling system is depicted having a particular number of particular components in a particular arrangement this disclosure contemplates any suitable information handling system having any suitable number of any suitable components in any suitable arrangement.

Processor may be a microprocessor controller or any other suitable computing device resource or combination of hardware software and or encoded logic operable to execute either alone or in conjunction with other components e.g. memory the application . Such functionality may include providing various features discussed herein. In particular embodiments processor may include hardware for executing instructions such as those making up the application . As an example and not by way of limitation to execute instructions processor may retrieve or fetch instructions from an internal register an internal cache memory or storage decode and execute them and then write one or more results to an internal register an internal cache memory or storage .

In particular embodiments processor may include one or more internal caches for data instructions or addresses. This disclosure contemplates processor including any suitable number of any suitable internal caches where appropriate. As an example and not by way of limitation processor may include one or more instruction caches one or more data caches and one or more translation lookaside buffers TLBs . Instructions in the instruction caches may be copies of instructions in memory or storage and the instruction caches may speed up retrieval of those instructions by processor . Data in the data caches may be copies of data in memory or storage for instructions executing at processor to operate on the results of previous instructions executed at processor for access by subsequent instructions executing at processor or for writing to memory or storage or other suitable data. The data caches may speed up read or write operations by processor . The TLBs may speed up virtual address translations for processor . In particular embodiments processor may include one or more internal registers for data instructions or addresses. Depending on the embodiment processor may include any suitable number of any suitable internal registers where appropriate. Where appropriate processor may include one or more arithmetic logic units ALUs be a multi core processor include one or more processors or any other suitable processor.

Memory may be any form of volatile or non volatile memory including without limitation magnetic media optical media random access memory RAM read only memory ROM flash memory removable media or any other suitable local or remote memory component or components. In particular embodiments memory may include random access memory RAM . This RAM may be volatile memory where appropriate. Where appropriate this RAM may be dynamic RAM DRAM or static RAM SRAM . Moreover where appropriate this RAM may be single ported or multi ported RAM or any other suitable type of RAM or memory. Memory may include one or more memories where appropriate. Memory may store any suitable data or information utilized by the information handling system including software embedded in a computer readable medium and or encoded logic incorporated in hardware or otherwise stored e.g. firmware . In particular embodiments memory may include main memory for storing instructions for processor to execute or data for processor to operate on. In particular embodiments one or more memory management units MMUs may reside between processor and memory and facilitate accesses to memory requested by processor .

As an example and not by way of limitation the information handling system may load instructions from storage or another source such as for example another computer system to memory . Processor may then load the instructions from memory to an internal register or internal cache. To execute the instructions processor may retrieve the instructions from the internal register or internal cache and decode them. During or after execution of the instructions processor may write one or more results which may be intermediate or final results to the internal register or internal cache. Processor may then write one or more of those results to memory . In particular embodiments processor may execute only instructions in one or more internal registers or internal caches or in memory as opposed to storage or elsewhere and may operate only on data in one or more internal registers or internal caches or in memory as opposed to storage or elsewhere .

In particular embodiments storage may include mass storage for data or instructions. As an example and not by way of limitation storage may include a hard disk drive HDD a floppy disk drive flash memory an optical disc a magneto optical disc magnetic tape or a Universal Serial Bus USB drive or a combination of two or more of these. Storage may include removable or non removable or fixed media where appropriate. Storage may be internal or external to the information handling system where appropriate. In particular embodiments storage may be non volatile solid state memory. In particular embodiments storage may include read only memory ROM . Where appropriate this ROM may be mask programmed ROM programmable ROM PROM erasable PROM EPROM electrically erasable PROM EEPROM electrically alterable ROM EAROM or flash memory or a combination of two or more of these. Storage may take any suitable physical form and may comprise any suitable number or type of storage. Storage may include one or more storage control units facilitating communication between processor and storage where appropriate.

In particular embodiments interface may include hardware encoded software or both providing one or more interfaces for communication such as for example packet based communication among any networks any network devices and or any other computer systems. As an example and not by way of limitation communication interface may include a network interface controller NIC or network adapter for communicating with an Ethernet or other wire based network and or a wireless NIC WNIC or wireless adapter for communicating with a wireless network.

Depending on the embodiment interface may be any type of interface suitable for any type of network for which information handling system is used. As an example and not by way of limitation information handling system can include or communicate with an ad hoc network a personal area network PAN a local area network LAN a wide area network WAN a metropolitan area network MAN or one or more portions of the Internet or a combination of two or more of these. One or more portions of one or more of these networks may be wired or wireless. As an example information handling system can include or communicate with a wireless PAN WPAN such as for example a BLUETOOTH WPAN a WI FI network a WI MAX network an LTE network an LTE A network a cellular telephone network such as for example a Global System for Mobile Communications GSM network or any other suitable wireless network or a combination of two or more of these. The information handling system may include any suitable interface for any one or more of these networks where appropriate.

In some embodiments interface may include one or more interfaces for one or more I O devices. One or more of these I O devices may enable communication between a person and the information handling system . As an example and not by way of limitation an I O device may include a keyboard keypad microphone monitor mouse printer scanner speaker still camera stylus tablet touchscreen trackball video camera another suitable I O device or a combination of two or more of these. An I O device may include one or more sensors. Particular embodiments may include any suitable type and or number of I O devices and any suitable type and or number of interfaces for them. Where appropriate interface may include one or more drivers enabling processor to drive one or more of these I O devices. Interface may include one or more interfaces where appropriate.

Bus may include any combination of hardware software embedded in a computer readable medium and or encoded logic incorporated in hardware or otherwise stored e.g. firmware to couple components of the information handling system to each other. As an example and not by way of limitation bus may include an Accelerated Graphics Port AGP or other graphics bus an Enhanced Industry Standard Architecture EISA bus a front side bus FSB a HYPERTRANSPORT HT interconnect an Industry Standard Architecture ISA bus an INFINIBAND interconnect a low pin count LPC bus a memory bus a Micro Channel Architecture MCA bus a Peripheral Component Interconnect PCI bus a PCI Express PCI X bus a serial advanced technology attachment SATA bus a Video Electronics Standards Association local VLB bus or any other suitable bus or a combination of two or more of these. Bus may include any number type and or configuration of buses where appropriate. In particular embodiments one or more buses which may each include an address bus and a data bus may couple processor to memory . Bus may include one or more memory buses.

Herein reference to a computer readable storage medium encompasses one or more tangible computer readable storage media possessing structures. As an example and not by way of limitation a computer readable storage medium may include a semiconductor based or other integrated circuit IC such as for example a field programmable gate array FPGA or an application specific IC ASIC a hard disk an HDD a hybrid hard drive HHD an optical disc an optical disc drive ODD a magneto optical disc a magneto optical drive a floppy disk a floppy disk drive FDD magnetic tape a holographic storage medium a solid state drive SSD a RAM drive a SECURE DIGITAL card a SECURE DIGITAL drive a flash memory card a flash memory drive or any other suitable tangible computer readable storage medium or a combination of two or more of these where appropriate.

Particular embodiments may include one or more computer readable storage media implementing any suitable storage. In particular embodiments a computer readable storage medium implements one or more portions of processor such as for example one or more internal registers or caches one or more portions of memory one or more portions of storage or a combination of these where appropriate. In particular embodiments a computer readable storage medium implements RAM or ROM. In particular embodiments a computer readable storage medium implements volatile or persistent memory. In particular embodiments one or more computer readable storage media embody encoded software.

Herein reference to encoded software may encompass one or more applications bytecode one or more computer programs one or more executables one or more instructions logic machine code one or more scripts or source code and vice versa where appropriate that have been stored or encoded in a computer readable storage medium. In particular embodiments encoded software includes one or more application programming interfaces APIs stored or encoded in a computer readable storage medium. Particular embodiments may use any suitable encoded software written or otherwise expressed in any suitable programming language or combination of programming languages stored or encoded in any suitable type or number of computer readable storage media. In particular embodiments encoded software may be expressed as source code or object code. In particular embodiments encoded software is expressed in a higher level programming language such as for example C Perl or a suitable extension thereof. In particular embodiments encoded software is expressed in a lower level programming language such as assembly language or machine code . In particular embodiments encoded software is expressed in JAVA. In particular embodiments encoded software is expressed in Hyper Text Markup Language HTML Extensible Markup Language XML or other suitable markup language.

The model definition defines a standard structure of performance data that will be collected and stored. The model definition can be similar to that which is described in U.S. Pat. No. 8 175 862 which patent is incorporated by reference above. The one or more agents can each be a module that can collect performance data from end user specified monitored resources such as for example one of the one or more monitored resources of . As described above the agent can run inside of a runtime container environment provided by an agent manager such as for example one of the agent managers of the agent manager component . It should be appreciated that in some cases the customized performance monitoring application can include many agents of many different types. The analysis component can aggregate or analyze collected performance data to create for example additional performance data regarding monitored resources. The GUI component can provide a web interface for example as a single interface related to viewing performance data collected or generated by the customized performance monitoring application . The single interface can include one or more user dashboards that present collected or generated performance data. In that way the GUI component can interface with administrative and end user portals such as for example the administration system and the end user portal system respectively of .

At block a performance monitoring platform is provided as a service. In certain embodiments the performance monitoring platform can be similar to the system of . At block the system facilitates creation of a customized performance monitoring application. For example the block can include interacting with a user such as for example a developer via the administration system . The customized performance monitoring application that is created can be similar to the customized performance monitoring application of and or the customized performance monitoring applications of . The block can also include configuring deployment attributes of the customized performance monitoring application such as for example auto scaling rules whether to employ on premises or on a platform such as the system user privileges required to view each user dashboard a pricing strategy if the customized performance monitoring application is not free of charge etc.

At block the customized performance monitoring application is deployed. In various embodiments the customized performance monitoring application may be deployed on the system on premises on a customer system and or the like. If the customized performance monitoring application is deployed on the system the deployment module can receive a unitary deployment package e.g. via developer upload that includes the customized performance monitoring application the deployment attributes and or other components or attributes. In this fashion the customized performance monitoring application can be deployed on and bound to one or more monitoring servers of the monitoring server pool as described above.

At block the customized performance application can execute as instructed via the end user portal system . In that way the customized performance monitoring application can be offered as a service to end users who in some cases can be customers of the developer or creator of the customized performance monitoring application. For example via the end user portal system an end user on the end user system may purchase access to the customized performance monitoring application and specify one or more resources to be monitored. Collected or generated performance data can be published to authorized and permissioned users on a service or purchase specific basis via for example the end user portal system . The block can also include for example automatically scaling when necessary as described above.

Although various embodiments of the method and apparatus of the present invention have been illustrated in the accompanying Drawings and described in the foregoing Detailed Description it will be understood that the invention is not limited to the embodiments disclosed but is capable of numerous rearrangements modifications and substitutions without departing from the spirit of the invention as set forth herein.

