---

title: Systems, methods, and apparatuses for implementing cross organizational data sharing
abstract: In accordance with disclosed embodiments, there are provided methods, systems, and apparatuses for implementing cross organizational data sharing including, for example, means for storing customer organization data in a database of the host organization; allocating at least a sub-set of the customer organization data to be shared as shared data; configuring a hub to expose the shared data to a proxy user and configuring the proxy user at the hub with access rights to the shared data; configuring one or more spokes with access rights to the shared data of the hub via the proxy user; receiving a request from one of the hubs for access to the shared data of the customer organization via the proxy user at the hub; and returning a response to the hub having made the request. Other related embodiments are disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09646169&OS=09646169&RS=09646169
owner: salesforce.com, inc.
number: 09646169
owner_city: San Francisco
owner_country: US
publication_date: 20151110
---
This divisional application is related to and claims priority to the utility application entitled SYSTEMS METHODS AND APPARATUSES FOR IMPLEMENTING CROSS ORGANIZATIONAL DATA SHARING filed on Dec. 18 2013 having an application number of Ser. No. 14 133 592 this application is further related to and claims priority to the provisional utility application entitled CROSS ORG DATA SHARING filed on Dec. 18 2012 having an application No. 61 738 946 the entire contents of which are incorporated herein by reference.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

Embodiments of the invention relate generally to the field of computing and more particularly to systems methods and apparatuses for implementing cross organizational data sharing.

The subject matter discussed in the background section should not be assumed to be prior art merely as a result of its mention in the background section. Similarly a problem mentioned in the background section or associated with the subject matter of the background section should not be assumed to have been previously recognized in the prior art. The subject matter in the background section merely represents different approaches which in and of themselves may also correspond to embodiments of the claimed inventions.

A single a multi tenant database system operates to store data on behalf of a multitude of paying subscribers each being a tenant of the database system hence the term multi tenant database system.

It is sometimes desirable to share data stored within the multi tenant database system amongst users. Unfortunately prior solutions required a peer to peer model of sharing that necessitated data marked for sharing to be copied and represented within two or more locations. Specifically the data would exist in its original location but then also be replicated into additional locations accessible to peers with whom the data was to be shared.

While such a peer based model works with a low volume of sharing it does not scale to a larger database environment where many users within the multi tenant database system share significant quantities of data as the volume of data being replicated is too large resulting in massive inefficiencies and increased operational costs.

The present state of the art may therefore benefit from the systems methods and apparatuses for implementing cross organizational data sharing as described herein.

Described herein are systems methods and apparatuses for implementing cross organizational data sharing in an on demand service environment. Such systems devices and methods may include for example means for storing customer organization data in a database of the host organization allocating at least a sub set of the customer organization data to be shared as shared data configuring a hub to expose the shared data to a proxy user and configuring the proxy user at the hub with access rights to the shared data configuring one or more spokes with access rights to the shared data of the hub via the proxy user receiving a request from one of the hubs for access to the shared data of the customer organization via the proxy user at the hub and returning a response to the hub having made the request.

Described herein are methodologies for accommodating cross organizational data sharing in a large and complex multi tenant database system which more efficiently accommodates very large volumes of data without necessitating that such data be replicated. For example users having data to share can keep their data centrally located dynamically share their data with others and permit such sharing without having to replicate their data to other peer nodes where another user or entity may access the data as is common with prior solutions.

Shared data may be stored within a logical hub from which spokes can dynamically access the data from the hub without having to make a local copy of the data for each user or peer wishing to access the data. Unlike prior solutions which required n 1 copies of data to support the original user and n peers as well as complex synchronization and maintenance of the multiple n 1 copies of the data methodologies described herein operate with greater efficiency reduced complexity and drastically reduced storage requirements as there is no need to create additional copies of data to be shared.

In a particular embodiment data to be shared is stored within a hub and within each of one or more spokes there are users or user access rights for the data to be shared from the hub. When the users at the spokes request access to the data in the hub they are routed through a proxy user residing directly within the hub itself. For instance a hub may reside within the customer s org which is referred to as the hub org and any user seeking access to the data to be shared then proxies their request from a spoke into the hub org to facilitate the data request.

Each spoke may possess any number of users within the spoke and all users within any particular spoke will have the same rights as derived from that particular spoke. If different classes of users require different access rights or access to different sub sets of data then distinct spokes can be created referencing back to the same hub. The hub itself is a sub set of one customer organization s data the sub set being defined by what data that customer organization has elected to share or make accessible for sharing via the established hub. While a single spoke may support multiple human users each with identical rights as derived from that spoke there is exactly a 1 1 correspondence for each spoke to proxy users in the hub with the proxy user having the appropriate access rights to the shared data commensurate with the requirements of the spoke to the extent such requirements are permitted and authorized by the hub and the hub s administrator.

Customer organizations wishing to share their data therefore select or define a sub set of their data to logically reside within the hub without having to copy such data and then define what rights e.g. read only read write read write but no record creation deletion etc. are given to one or more spokes and corresponding proxy users in the hub. For each proxy user rights can be assigned to individual records or at the table level. Thus the proxy users within the hub are enabled to see the particular rows according to the shared data by the customer organization and these proxy users enable a corresponding view to users at the complementary spoke. In certain embodiments the customer organization sharing data may place all of their data into a hub and specify read only access. In other embodiments the customer organization sharing data may place a sub set of their data into a hub but specify write back access in addition to read access.

Such a model may be of benefit to organizations having internal hierarchy such as with a franchise and franchisees. For example the franchise may own certain data which should be made available for read access such as procedures pricing etc. whereas other tables are more appropriate for read write access e.g. such as procurement orders monthly reporting by franchisees etc. . Such a model permits sub organizations to be able to view one class of data without modification writes and then separately generate and write back other classes of data according to the controls of the customer organization enabling the sharing. Moreover because data is not copied or replicated across multiple distinct storage locations it is therefore unnecessary to perform data synchronization and data conflict resolution techniques as was required with prior solutions.

In other embodiments multiple spokes are created which enable sharing of the same sub set of a customer organization s data but with different access rights allocated or defined for the different spokes.

Still other embodiments are provided for packaging distribution and versioning in support of the cross organizational data sharing methodologies as set forth herein.

In the following description numerous specific details are set forth such as examples of specific systems languages components etc. in order to provide a thorough understanding of the various embodiments. It will be apparent however to one skilled in the art that these specific details need not be employed to practice the embodiments disclosed herein. In other instances well known materials or methods have not been described in detail in order to avoid unnecessarily obscuring the disclosed embodiments.

In addition to various hardware components depicted in the figures and described herein embodiments further include various operations which are described below. The operations described in accordance with such embodiments may be performed by hardware components or may be embodied in machine executable instructions which may be used to cause a general purpose or special purpose processor programmed with the instructions to perform the operations. Alternatively the operations may be performed by a combination of hardware and software.

Embodiments also relate to an apparatus for performing the operations disclosed herein. This apparatus may be specially constructed for the required purposes or it may be a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear as set forth in the description below. In addition embodiments are not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the embodiments as described herein.

Embodiments may be provided as a computer program product or software that may include a machine readable medium having stored thereon instructions which may be used to program a computer system or other electronic devices to perform a process according to the disclosed embodiments. A machine readable medium includes any mechanism for storing or transmitting information in a form readable by a machine e.g. a computer . For example a machine readable e.g. computer readable medium includes a machine e.g. a computer readable storage medium e.g. read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices etc. a machine e.g. computer readable transmission medium electrical optical acoustical etc.

Any of the disclosed embodiments may be used alone or together with one another in any combination. Although various embodiments may have been partially motivated by deficiencies with conventional techniques and approaches some of which are described or alluded to within the specification the embodiments need not necessarily address or solve any of these deficiencies but rather may address only some of the deficiencies address none of the deficiencies or be directed toward different deficiencies and problems where are not directly discussed.

Multi tenant database system includes a plurality of underlying hardware software and logic elements that implement database functionality and a code execution environment within the host organization . In accordance with one embodiment multi tenant database system further implements databases to service database queries and other data interactions with the databases . The hardware software and logic elements of the multi tenant database system are separate and distinct from a plurality of customer organizations A B and C which utilize the services provided by the host organization by communicably interfacing to the host organization via network . In such a way host organization may implement on demand database services or cloud computing services to subscribing customer organizations A C.

Host organization receives input and other requests from a plurality of customer organizations A C via network such as a public Internet . For example incoming database queries API requests interactions with displayed graphical user interfaces and displays at the client devices A C or other inputs may be received from the customer organizations A C to be processed against the multi tenant database system including queries to read write and update data stored within the databases and potentially shared via a hub .

In one embodiment each customer organization A C is an entity selected from the group consisting of a separate and distinct remote organization an organizational group within the host organization a business partner of the host organization or a customer organization A C that subscribes to cloud computing services provided by the host organization .

In one embodiment requests are received at or submitted to a web server within host organization . Host organization may receive a variety of requests for processing by the host organization and its multi tenant database system . Incoming requests received at web server may specify which services from the host organization are to be provided such as query requests search request status requests database transactions graphical user interface requests and interactions processing requests to retrieve update or store data on behalf of one of the customer organizations A C code execution requests and so forth. Web server may be responsible for receiving requests from various customer organizations A C via network and provide a web based interface or other graphical displays to an end user client device A C or machine originating such data requests .

Authenticator operates on behalf of the host organization to verify authenticate and otherwise credential users attempting to gain access to the host organization as well as those users requesting access via a spoke to another customer organization s data having been shared from a hub .

Query interface provides functionality to pass queries from web server into the multi tenant database system for execution against the databases or other data stores of the host organization s production environment . In one embodiment the query interface implements an Application Programming Interface API through which queries may be executed against the databases or other data stores. Query optimizer performs query translation and optimization for instance on behalf of other functionality such as functionality of a graphical interface which possesses sufficient information to architect a query yet lacks the necessary logic to actually construct the appropriate query syntax. In other instances query optimizer modifies a submitted query to optimize its execution within the host organization without affecting the resulting dataset returned responsive to such an optimized query. Analysis engine operates on behalf of functionality within the host organization to perform additional data evaluation where necessary such as evaluating access rights by a user at a spoke requesting data shared by another customer organization via a hub .

Host organization may implement a request interface via web server or as a stand alone interface to receive requests packets or other requests from the client devices A C. Request interface further supports the return of response packets or other replies and responses in an outgoing direction from host organization to the client devices A C.

Cross organization data sharing SDS is a hub and spoke data hub structure which enables different customer organizations to securely share their hosted organization data data across organizations either within the same POD or across different PODs. Organizations granted access to such shared data are therefore able to transparently access the shared objects using the same SOQL and API calls and queries as is done when accessing regular non shared objects. Individual organizations having their data hosted by the multi tenant database system and shared via a hub are therefore able to define which set of records in a shared object to share and also to what extent access is granted to the set of records shared.

Unlike prior server to server S2S solutions which replicate and then synchronize data to enable sharing there is no data synchronization required as only a single original copy of the shared data is maintained. The cross organization data sharing described here does however enable an access and sharing model that greatly improves performance through reduced storage requirements and reduced overhead compared to prior solutions.

By storing one copy of data in a hub the overhead of data synchronization and field type mapping is wholly eliminated. Moreover complex object relationships are preserved without the risk of references being out of sync.

Where prior sharing models failed to scale beyond a very small number of customer organizations due to exponentially increasing resource demands due to the inefficient data replication and synchronization required by such prior solutions the methodologies described herein are capable of supporting thousands of distinct customer organizations and their hosted organization data within a single common multi tenant database system.

As depicted here all of a hosted organization s data may reside as enterprise data as a single instance within a database but the hosted organization s data may nevertheless be represented in a variety of ways using a variety of different sub sets of data and using a variety of different access rights. For instance each department within a particular customer organization may be given their own hosted object through which they can access shared data belonging to the customer organization. As depicted here each of shipping sales various individuals HR and finance are correlated to a distinct hosted organizational object each of which may permissibly be allocated or associated with distinct record sets and distinct access rights if granted such access by the customer organization.

Take for example an automobile manufacturer with 1600 dealerships across 86 countries which must manage their marketing and sales processes. Due to regulation and local business practice differences many dealerships may manage the business processes of dealing with customers and sales approval on their own. Many of the 1600 dealerships may also use different Customer Relationship Management CRM systems leading to additional cost complexity and inconsistencies. But notwithstanding the above all of the 1600 dealerships operating on behalf of the single automobile manufacturer are selling a common set of products and it would be of benefit to the automobile manufacturer to directly interface with the dealers so that sales leads known to the automobile manufacturer may be distributed as effectively as possible to the various dealers or such that leads generated by the dealers themselves may be re distributed amongst other dealers when appropriate.

Such an automobile manufacturer having their enterprise data residing within the multi tenant database system as hosted organization data is enabled to share their enterprise data amongst the different dealerships without having to replicate their data or implement their own complex database system and network. For instance through use of the described methodologies the automobile manufacturer is able to utilize a CRM system which permits the various dealers to continue their present business practices yet at the same time enables the dealers to benefit from data access to the enterprise data of the automobile manufacturer as well as interact with data of the remaining dealerships making up the dealer network assuming the automobile manufacturer permits write back access for at least some scope of database records associated with the respective dealers.

Such a structure would therefore enable the automobile manufacturer and the dealers making up the automobile manufacturer s dealer network to engage in more effective lead sharing as well as sharing of common procedures parts pricing sources and whatever other aspects of the business are capable of re use.

Other business structures may similarly benefit from the use of the cross organizational data sharing methodologies described herein. Data.com hosts hundreds of millions of records and tens of millions of accounts. Depending on the subscription level different accounts have varying access to the same underlying dataset. By creating different hosted organization objects with varying access to the underlying dataset it is possible to efficiently manage such a large number of accounts and contacts without having to replicate the various contacts over and over again on behalf of the different accounts granted access to such data.

For instance the cross organizational data sharing structure permits the data to be hosted rather than merely hosting or tracking updates to such data. The granularity of sharing at the object level is therefore well suited to such an application since updates may be additionally be retrieved by other spokes and merged into the respective spoke organizations account and contact data if they prefer to do so.

Packaging functionality may additionally be utilized to handle releases in support of the cross organizational data sharing. For instance custom object definitions may be expanded to handle cross organizational data sharing object definitions profiles permissions and roles to manage data sharing amongst participating customer organizations.

Records shared via a hub by any individual organization may be subjected to access controls on a per spoke basis or may have common access controls applied to multiple such spokes at the discretion of the sharing org. For instance access controls may be CRUD controlled access rights including for example CREATE calls e.g. insert READ ONLY access UPDATE calls and DELETE statements in which access rights may be configured at the discretion of an administrator enabling cross organizational data sharing for a particular hosted organization s data.

Where CREATE calls e.g. record insertion into a dataset is permitted according to the access rights it is possible for users at the spokes to write back data into the hosted customer organization s dataset which may then in turn be viewed by other spokes. In other embodiments write back is permitted but into a record set viewable by the hub and the spoke performing the write back but not viewable by other spokes. In such a way a spoke can write back data for the hosted customer organization to view and utilize but not require the spoke user to expose their data to other spokes where such sharing may not be appropriate. For instance returning to the dealership example above individual dealerships may not wish to share their sales numbers with other dealerships though they may be required or incentivized to share such information with the automobile manufacturer.

Regardless using the hub and spoke model it is possible to write the data to a database once and then manipulate what entities are able to share view update and delete the data without necessitating that such data be replicated across many instances.

In certain embodiments view write update and delete transactions are traceable to a particular individual user at a specific spoke where it is necessary to have such accounting.

In certain embodiments data created by spokes are owned by the spoke organizations. In other embodiments once data is shared by a spoke org e.g. via a write back from a spoke to the hub the hub becomes the owner of the data. While the spoke may retain certain access rights to the data written back to the hub such access rights are at the discretion of the hub s administrator on behalf of the hosted customer organization and may therefore be modified or terminated notwithstanding the fact that the data originated at a spoke.

Triggers may additionally be set based on various events including view write update and delete transactions. For instance triggers may be utilized to notify a hub owner or administrator of such transactions cause notifications to be written to Chatter trigger emails SMS message events and so forth. Foreign key references to the shared objects from a spoke organization s custom objects or custom fields of standard objects may additionally be utilized to support the running of reports and linking objects and records.

Such a hospital organization may choose to create and perform patient surveys to improve their business operations for instance by identifying those areas considered to need improvement according to their user base such as the patients depicted here. According to such a structure and embodiment the patients are enabled to take a survey potentially unauthenticated if so desired by the survey designer and hospital administrators . The patients access the patient survey application via a patient survey portal API which in turn is linked with the hosted patient survey application which includes functionality to present a user interface populated based on the hosted organization s data which includes for example the question bank and question configuration a collection mechanism to capture the survey responses as entered by the patients taking such a survey and additionally includes a reports capability for instance to render aggregated information based upon the various surveys completed by the patients .

The individual organization may operate multiple such hospitals in which case it may be preferable for the organization to provide hosted organization data and objects which include multiple hosted organization objects and multiple hosted organization data elements. For instance the hosted organization s data and objects would operate as a hub and the multiple hosted organization objects and multiple hosted organization data elements operating as spokes each segmented from one another according to the access rights controls and dataset exposure as described previously.

The admin API enables the hospital administrators to access the results of the survey control distribution of the survey control which spoke organizations can view and access what portions of the hosted organization s data and objects and so forth.

As depicted here the hosted organization s data and objects operate in hub spoke configuration on behalf of the multiple hospitals and which serve the hospital patients and respectively.

Although there is only one single hub the hosted organization s data and objects each of the multiple hospitals and and their respective hospital patients and are provided with distinct survey experiences through the various spoke objects. For instance hospital and hospital patients utilize the patient survey portal API and the hosted patient survey application whereas hospital and hospital patients utilize the patient survey portal API and the hosted patient survey application and finally hospital and hospital patients utilize the patient survey portal API and the hosted patient survey application . Each of the respective patient survey portal APIs and hosted patient survey applications are enabled to operate as though they are wholly independent yet benefit from the shared information such as the shared question bank as provided by the hosted organization s data and objects which operates as the hub. Further still distinct results collected by the respective hosted patient survey applications may be written back into the hosted organization s data and objects and utilized in the creation of alerts and aggregate reports .

It is beneficial to cause the proxy object B to appear as a normal object to the users which resides local to their spoke as such a structure enables the users to utilize regular queries. Therefore existing tools APIs interfaces and protocols may be utilized and it is not necessary for the users themselves to understand how the query is routed or where the data resides. The described hub and spoke model thus enables the users to benefit from shared access to the customer organization s hosted data at the hub and specifically within the object A without requiring data replication or synchronization.

Multiple distinct objects may be exposed at the hub and many more spokes may exist than those depicted here. Additionally distinct customer organizations having their data hosted at the multi tenant database system would be represented by different hubs and in turn share their data to different spokes.

According to one embodiment there is a Broadcast capability which enables a read only remote access configuration for the customer organization sharing their data. For instance such a broadcast capability will establish initial connections between the Hub and Spokes and enable hub administrators to manage sharing of data to chosen spokes as well as broadcast shared data from the hub with read only access rights to the users of the spokes.

The development phase architecture provides the ability to build the respective hub and spoke s through which cross organizational data will be shared by any respective customer organization. This includes initial connection setup support of packaging sharing control remote object access mechanism error exception handling latency tolerance etc. Such functionality enables the customer organization to configure their sharing in the manner appropriate for their particular business needs.

During a development phase development organizations seeking to share their data are able to define hubs and spokes internal to their organization. After such definition they may perform connection setup functions to establish communication paths between hubs and spokes. Such configurations may be shared as a schema for instance as depicted by element where automated configuration of shared proxy schema information is being shared from the development edition hub to each of the development edition spokes A and B.

Meta data sync depicts the development edition hub additionally synching its metadata to each of the respective development edition spokes A and B in support of enabling the desired sharing by the hub. Lastly remote calls may be issued by the development edition hub to each of the development edition spokes A and B.

Development edition hub may now also issue automated configuration of packages to the development edition spoke B or early late binding packaging to shared proxy schema A directly or indirectly to shared proxy schema B through development edition spoke B which itself issues the early late binding packaging directly to shared proxy schema B.

Via the packaging phase architecture both development edition hub and the development edition spoke B are therefore capable of independently packaging cross organizational sharing definitions and logics. The hub deployment packaging option of early and late binding may be provided during a packaging stage as shown in which early binding enables spokes to be bound to the hub before either the hub or its dependent spoke to which information will be shared is deployed. Thus the sharing scheme is established and packaged in advanced without being made live in the production environment. When early binding is utilized the development edition hub may store the deployment hub org and its administrative user information in its development edition shared proxy schema A and B. One deployment hub may be pre configured and then deployed automatically to a pre determined production hub to operate in the live production environment.

During the development spoke deployment process early binding of the hub may further allow silent spoke deployment without asking a spoke administrator to provide the hub information thus enabling a fully automated installation which may be used to simplify deployment of a large number of spokes into production.

Late binding conversely enables hub and spoke packages to be deployed to any organization with a required set of permissions. For instance the hub package can be deployed to as many production orgs as needed. Since a deployment hub s corresponding customer organization is unknown at packaging time spoke package deployment may subsequently supply the deployment hub to which the spoke is to be connected.

Upon activation administrators may be displayed a data management UI in which they can add or remove shared data and also manipulate access rights and restrictions for the sharing. New connections from the hub to permitted spokes may additionally be enabled through such a UI. Where a pre packaged shared proxy schema A B is utilized such features may be pre configured and appropriately enabled at activation of the hub in the live production environment.

In certain embodiments multiple different cross org sharing packages can be installed into the same customer organization resulting in a single organization hosting multiple hubs each with a different shared proxy schemas A B.

Versioning of the shared proxy schemas A B enables management of hub spoke sharing configurations using major and minor versions at the discretion of the hub administrator via an associated major and minor version number independent from the package version. Version management may be automated on behalf of users such that actions such as removing a field or changing a field s sharing attributes causes a version number to be increased. Backward compatible changes made to the schema like adding a field may cause a minor schema version number to be incremented while more significant changes such as a change in access rights may trigger a major version change. When spokes with different major schema version attempt to access a hub the connection may be invalidated as policy requiring the spoke proxy to be refreshed. Alternatively a hub may maintain a list or range of permissible down rev versions.

Orgs may fork their Hub Spoke packages or merge patches onto a trunk. Orgs may additionally share developed Hub Spoke packages and schemas.

The development edition hub at the upper right additionally performs the automated configuration of packages meta data sync and remote call as described previously resulting in the development edition spoke B and its shared proxy schema B and shared modules B being deployed. Via early or late binding packaging the shared schema package and its packaged shared modules B are then installed resulting in the spoke B being installed in addition to its shared proxy schema B being installed with its shared modules B.

At run time the spoke B now installed checks the early late binding options as indicated by and then verifies its connection after the binding information is set as indicated by element thus resulting in a complete deployment and installation of the hub and spoke architecture into a live production environment e.g. such as at a multi tenant database system in support of the cross organization data sharing for a customer organization.

At block processing logic allocates at least a sub set of the customer organization data to be shared as shared data.

At block processing logic configures a hub to expose the shared data to a proxy user and configures the proxy user at the hub with access rights to the shared data.

At block processing logic configures one or more spokes with access rights to the shared data of the hub via the proxy user.

At block processing logic receives a request from one of the hubs for access to the shared data of the customer organization via the proxy user at the hub.

According to another embodiment of method configuring the hub to expose the shared data to a proxy user and configuring the proxy user at the hub with access rights to the shared data includes configuring the proxy with access rights to the customer organization data stored in the database of the host organization without replicating the exposed shared data.

According to another embodiment of method configuring the hub to expose the shared data to a proxy user includes allocating the shared data to an object at the hub and configuring the proxy user with access rights to the object.

According to another embodiment of method the sub set of the customer organization data to be shared includes one or more queryable objects stored at the database of the host organization and in which the proxy user at the hub is configured to query the one or more queryable objects stored at the database without replicating the one or more queryable objects.

According to another embodiment of method configuring the one or more spokes with access rights to the shared data of the hub via the proxy user includes configuring each of the one or more spokes with a queryable proxy object void of the shared data in which the queryable proxy object is configured to proxy any received query to a corresponding proxy user at the hub and in which the corresponding proxy user at the hub is configured to query the one or more queryable objects stored at the database responsive to the proxied query from the spoke.

According to another embodiment of method configuring a hub to expose the shared data to a proxy user and configuring the proxy user at the hub with access rights to the shared data includes configuring the proxy user with one or more of the following access rights to the shared data read only access to the shared data write update and modify access to the shared data delete capability of database records within the shared data create and record insertion capability to introduce new database records into the shared data.

According to another embodiment of method configuring the hub to expose the shared data to a proxy user and configuring the proxy user at the hub with access rights to the shared data includes configuring the hub as a broadcast hub in which the shared data is exposed to the one or more spokes with read only access for the shared data and no capability to update modify insert or delete database records within the shared data.

According to another embodiment of method configuring the hub to expose the shared data to a proxy user and configuring the proxy user at the hub with access rights to the shared data includes configuring the hub with selective write back capability in which the shared data is exposed to the one or more spokes with read only access for the shared data via a first queryable object and no capability to update modify insert or delete database records within the first queryable object and further in which a second queryable object is exposed to the one or more spokes with create and record insertion capability to introduce new database records into the shared data via the second queryable object.

According to another embodiment of method returning the response to the hub having made the request includes querying the shared data stored in the database of the host organization via the proxy user at the hub and returning query results to the spoke having initiated the request responsive to the request.

According to another embodiment method further includes storing the configuration of the hub the configuration of the one or more spokes and the configuration of the proxy user and its access rights to the shared data via a proxy schema.

According to another embodiment method further includes packaging and deploying the proxy schema into a live production environment and installing the hub and the one or more spokes within the live production environment according to the stored configuration of the hub the stored configuration of the one or more spokes and the stored configuration of the proxy user and its access rights to the shared data as represented by the packaged and deployed proxy schema.

According to another embodiment of method allocating at least the sub set of the customer organization data to be shared as shared data includes at least one of sharing one or more database tables as the shared data sharing a plurality of database records as the shared data sharing access to one or more database fields as the shared data sharing access to one or more queryable database objects as the shared data and sharing access to executable code reports or user interfaces as the shared data.

According to another embodiment of method a user interface operates at a user client device remote from the host organization and communicatively interfaces with the host organization via a public Internet in which the host organization operates as a cloud based service provider to the user client device and in which the request is received at the host organization from the user client device.

According to another embodiment of method the database of the host organization includes a multi tenant database system having elements of hardware and software that are shared by a plurality of separate and distinct customer organizations each of the separate and distinct customer organizations being remotely located from the host organization and in which each customer organization is an entity selected from the group consisting of a separate and distinct remote organization an organizational group within the host organization a business partner of the host organization or a customer organization that subscribes to cloud computing services provided by the host organization.

According to a particular embodiment there is non transitory computer readable storage media having instructions stored thereon that when executed by a processor in a host organization the instructions cause the host organization to perform operations including storing customer organization data in a database of the host organization allocating at least a sub set of the customer organization data to be shared as shared data configuring a hub to expose the shared data to a proxy user and configuring the proxy user at the hub with access rights to the shared data configuring one or more spokes with access rights to the shared data of the hub via the proxy user receiving a request from one of the hubs for access to the shared data of the customer organization via the proxy user at the hub and returning a response to the hub having made the request.

Environment is an environment in which an on demand database service exists. User system may be any machine or system that is used by a user to access a database user system. For example any of user systems can be a handheld computing device a mobile phone a laptop computer a work station and or a network of computing devices. As illustrated in and in more detail in user systems might interact via a network with an on demand database service which is system .

An on demand database service such as system is a database system that is made available to outside users that do not need to necessarily be concerned with building and or maintaining the database system but instead may be available for their use when the users need the database system e.g. on the demand of the users . Some on demand database services may store information from one or more tenants stored into tables of a common database image to form a multi tenant database system MTS . Accordingly on demand database service and system is used interchangeably herein. A database image may include one or more database objects. A relational database management system RDMS or the equivalent may execute storage and retrieval of information against the database object s . Application platform may be a framework that allows the applications of system to run such as the hardware and or software e.g. the operating system. In an embodiment on demand database service may include an application platform that enables creation managing and executing one or more applications developed by the provider of the on demand database service users accessing the on demand database service via user systems or third party application developers accessing the on demand database service via user systems .

The users of user systems may differ in their respective capacities and the capacity of a particular user system might be entirely determined by permissions permission levels for the current user. For example where a salesperson is using a particular user system to interact with system that user system has the capacities allotted to that salesperson. However while an administrator is using that user system to interact with system that user system has the capacities allotted to that administrator. In systems with a hierarchical role model users at one permission level may have access to applications data and database information accessible by a lower permission level user but may not have access to certain applications database information and data accessible by a user at a higher permission level. Thus different users will have different capabilities with regard to accessing and modifying application and database information depending on a user s security or permission level.

Network is any network or combination of networks of devices that communicate with one another. For example network can be any one or any combination of a LAN local area network WAN wide area network telephone network wireless network point to point network star network token ring network hub network or other appropriate configuration. As the most common type of computer network in current use is a TCP IP Transfer Control Protocol and Internet Protocol network such as the global internetwork of networks often referred to as the Internet with a capital I that network will be used in many of the examples herein. However it is understood that the networks that the claimed embodiments may utilize are not so limited although TCP IP is a frequently implemented protocol.

User systems might communicate with system using TCP IP and at a higher network level use other common Internet protocols to communicate such as HTTP FTP AFS WAP etc. In an example where HTTP is used user system might include an HTTP client commonly referred to as a browser for sending and receiving HTTP messages to and from an HTTP server at system . Such an HTTP server might be implemented as the sole network interface between system and network but other techniques might be used as well or instead. In some implementations the interface between system and network includes load sharing functionality such as round robin HTTP request distributors to balance loads and distribute incoming HTTP requests evenly over a plurality of servers. At least as for the users that are accessing that server each of the plurality of servers has access to the MTS data however other alternative configurations may be used instead.

In one embodiment system shown in implements a web based customer relationship management CRM system. For example in one embodiment system includes application servers configured to implement and execute CRM software applications as well as provide related data code forms webpages and other information to and from user systems and to store to and retrieve from a database system related data objects and Webpage content. With a multi tenant system data for multiple tenants may be stored in the same physical database object however tenant data typically is arranged so that data of one tenant is kept logically separate from that of other tenants so that one tenant does not have access to another tenant s data unless such data is expressly shared. In certain embodiments system implements applications other than or in addition to a CRM application. For example system may provide tenant access to multiple hosted standard and custom applications including a CRM application. User or third party developer applications which may or may not include CRM may be supported by the application platform which manages creation storage of the applications into one or more database objects and executing of the applications in a virtual machine in the process space of the system .

One arrangement for elements of system is shown in including a network interface application platform tenant data storage for tenant data system data storage for system data accessible to system and possibly multiple tenants program code for implementing various functions of system and a process space for executing MTS system processes and tenant specific processes such as running applications as part of an application hosting service. Additional processes that may execute on system include database indexing processes.

Several elements in the system shown in include conventional well known elements that are explained only briefly here. For example each user system may include a desktop personal computer workstation laptop PDA cell phone or any wireless access protocol WAP enabled device or any other computing device capable of interfacing directly or indirectly to the Internet or other network connection. User system typically runs an HTTP client e.g. a browsing program such as Microsoft s Internet Explorer browser a Mozilla or Firefox browser an Opera or a WAP enabled browser in the case of a smartphone tablet PDA or other wireless device or the like allowing a user e.g. subscriber of the multi tenant database system of user system to access process and view information pages and applications available to it from system over network . Each user system also typically includes one or more user interface devices such as a keyboard a mouse trackball touch pad touch screen pen or the like for interacting with a graphical user interface GUI provided by the browser on a display e.g. a monitor screen LCD display etc. in conjunction with pages forms applications and other information provided by system or other systems or servers. For example the user interface device can be used to access data and applications hosted by system and to perform searches on stored data and otherwise allow a user to interact with various GUI pages that may be presented to a user. As discussed above embodiments are suitable for use with the Internet which refers to a specific global internetwork of networks. However it is understood that other networks can be used instead of the Internet such as an intranet an extranet a virtual private network VPN a non TCP IP based network any LAN or WAN or the like.

According to one embodiment each user system and all of its components are operator configurable using applications such as a browser including computer code run using a central processing unit such as an Intel Pentium processor or the like. Similarly system and additional instances of an MTS where more than one is present and all of their components might be operator configurable using application s including computer code to run using a central processing unit such as processor system which may include an Intel Pentium processor or the like and or multiple processor units.

According to one embodiment each system is configured to provide webpages forms applications data and media content to user client systems to support the access by user systems as tenants of system . As such system provides security mechanisms to keep each tenant s data separate unless the data is shared. If more than one MTS is used they may be located in close proximity to one another e.g. in a server farm located in a single building or campus or they may be distributed at locations remote from one another e.g. one or more servers located in city A and one or more servers located in city B . As used herein each MTS may include one or more logically and or physically connected servers distributed locally or across one or more geographic locations. Additionally the term server is meant to include a computer system including processing hardware and process space s and an associated storage system and database application e.g. OODBMS or RDBMS as is well known in the art. It is understood that server system and server are often used interchangeably herein. Similarly the database object described herein can be implemented as single databases a distributed database a collection of distributed databases a database with redundant online or offline backups or other redundancies etc. and might include a distributed database or storage network and associated processing intelligence.

User system network system tenant data storage and system data storage were discussed above in . As shown by system may include a network interface of implemented as a set of HTTP application servers an application platform tenant data storage and system data storage . Also shown is system process space including individual tenant process spaces and a tenant management process space . Each application server may be configured to tenant data storage and the tenant data therein and system data storage and the system data therein to serve requests of user systems . The tenant data might be divided into individual tenant storage areas e.g. tenant storage space which can be either a physical arrangement and or a logical arrangement of data. Within each tenant storage space tenant data and application metadata might be similarly allocated for each user. For example a copy of a user s most recently used MRU items might be stored to tenant data . Similarly a copy of MRU items for an entire organization that is a tenant might be stored to tenant storage area . A UI provides a user interface and an API provides an application programmer interface into system resident processes to users and or developers at user systems . The tenant data and the system data may be stored in various databases such as one or more Oracle databases.

Application platform includes an application setup mechanism that supports application developers creation and management of applications which may be saved as metadata into tenant data storage by save routines for execution by subscribers as one or more tenant process spaces managed by tenant management process space for example. Invocations to such applications may be coded using PL SOQL that provides a programming language style interface extension to API . Invocations to applications may be detected by one or more system processes which manages retrieving application metadata for the subscriber making the invocation and executing the metadata as an application in a virtual machine.

Each application server may be communicably coupled to database systems e.g. having access to system data and tenant data via a different network connection. For example one application server might be coupled via the network e.g. the Internet another application server N might be coupled via a direct network link and another application server N might be coupled by yet a different network connection. Transfer Control Protocol and Internet Protocol TCP IP are typical protocols for communicating between application servers and the database system. However it will be apparent to one skilled in the art that other transport protocols may be used to optimize the system depending on the network interconnect used.

In certain embodiments each application server is configured to handle requests for any user associated with any organization that is a tenant. Because it is desirable to be able to add and remove application servers from the server pool at any time for any reason there is preferably no server affinity for a user and or organization to a specific application server . In one embodiment therefore an interface system implementing a load balancing function e.g. an F5 Big IP load balancer is communicably coupled between the application servers and the user systems to distribute requests to the application servers . In one embodiment the load balancer uses a least connections algorithm to route user requests to the application servers . Other examples of load balancing algorithms such as round robin and observed response time also can be used. For example in certain embodiments three consecutive requests from the same user may hit three different application servers and three requests from different users may hit the same application server . In this manner system is multi tenant in which system handles storage of and access to different objects data and applications across disparate users and organizations.

As an example of storage one tenant might be a company that employs a sales force where each salesperson uses system to manage their sales process. Thus a user might maintain contact data leads data customer follow up data performance data goals and progress data etc. all applicable to that user s personal sales process e.g. in tenant data storage . In an example of a MTS arrangement since all of the data and the applications to access view modify report transmit calculate etc. can be maintained and accessed by a user system having nothing more than network access the user can manage his or her sales efforts and cycles from any of many different user systems. For example if a salesperson is visiting a customer and the customer has Internet access in their lobby the salesperson can obtain critical updates as to that customer while waiting for the customer to arrive in the lobby.

While each user s data might be separate from other users data regardless of the employers of each user some data might be organization wide data shared or accessible by a plurality of users or all of the users for a given organization that is a tenant. Thus there might be some data structures managed by system that are allocated at the tenant level while other data structures might be managed at the user level. Because an MTS might support multiple tenants including possible competitors the MTS may have security protocols that keep data applications and application use separate. Also because many tenants may opt for access to an MTS rather than maintain their own system redundancy up time and backup are additional functions that may be implemented in the MTS. In addition to user specific data and tenant specific data system might also maintain system level data usable by multiple tenants or other data. Such system level data might include industry reports news postings and the like that are sharable among tenants.

In certain embodiments user systems which may be client systems communicate with application servers to request and update system level and tenant level data from system that may require sending one or more queries to tenant data storage and or system data storage . System e.g. an application server in system automatically generates one or more SQL statements e.g. one or more SQL queries that are designed to access the desired information. System data storage may generate query plans to access the requested data from the database.

Each database can generally be viewed as a collection of objects such as a set of logical tables containing data fitted into predefined categories. A table is one representation of a data object and may be used herein to simplify the conceptual description of objects and custom objects as described herein. It is understood that table and object may be used interchangeably herein. Each table generally contains one or more data categories logically arranged as columns or fields in a viewable schema. Each row or record of a table contains an instance of data for each category defined by the fields. For example a CRM database may include a table that describes a customer with fields for basic contact information such as name address phone number fax number etc. Another table might describe a purchase order including fields for information such as customer product sale price date etc. In some multi tenant database systems standard entity tables might be provided for use by all tenants. For CRM database applications such standard entities might include tables for Account Contact Lead and Opportunity data each containing pre defined fields. It is understood that the word entity may also be used interchangeably herein with object and table. 

In some multi tenant database systems tenants may be allowed to create and store custom objects or they may be allowed to customize standard entities or objects for example by creating custom fields for standard objects including custom index fields. In certain embodiments for example all custom entity data rows are stored in a single multi tenant physical table which may contain multiple logical tables per organization. It is transparent to customers that their multiple tables are in fact stored in one large table or that their data may be stored in the same table as the data of other customers.

The exemplary computer system includes a processor a main memory e.g. read only memory ROM flash memory dynamic random access memory DRAM such as synchronous DRAM SDRAM or Rambus DRAM RDRAM etc. static memory such as flash memory static random access memory SRAM volatile but high data rate RAM etc. and a secondary memory e.g. a persistent storage device including hard disk drives and a persistent database and or a multi tenant database implementation which communicate with each other via a bus . Main memory includes customer organization data which may be shared in accordance with the stored configurations established by the schema generator and the sharing configurator which configures hubs and spokes as well as proxy users and applicable access rights to expose the shared data. Main memory and its sub elements are operable in conjunction with processing logic and processor to perform the methodologies discussed herein. The computer system may additionally or alternatively embody the server side elements as described above.

Processor represents one or more general purpose processing devices such as a microprocessor central processing unit or the like. More particularly the processor may be a complex instruction set computing CISC microprocessor reduced instruction set computing RISC microprocessor very long instruction word VLIW microprocessor processor implementing other instruction sets or processors implementing a combination of instruction sets. Processor may also be one or more special purpose processing devices such as an application specific integrated circuit ASIC a field programmable gate array FPGA a digital signal processor DSP network processor or the like. Processor is configured to execute the processing logic for performing the operations and functionality which is discussed herein.

The computer system may further include a network interface card . The computer system also may include a user interface such as a video display unit a liquid crystal display LCD or a cathode ray tube CRT an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse and a signal generation device e.g. an integrated speaker . The computer system may further include peripheral device e.g. wireless or wired communication devices memory devices storage devices audio processing devices video processing devices etc. .

The secondary memory may include a non transitory machine readable or computer readable storage medium on which is stored one or more sets of instructions e.g. software embodying any one or more of the methodologies or functions described herein. The software may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable storage media. The software may further be transmitted or received over a network via the network interface card .

In accordance with one embodiment there is a system having at least a processor and a memory there to execute implementing logic and or instructions . According to such an embodiment the system further includes a database to store customer organization data a sharing configurator to allocate at least a sub set of the customer organization data to be shared as shared data the sharing configurator to configure a hub to expose the shared data to a proxy user and to further configure the proxy user at the hub with access rights to the shared data the sharing configurator to configure one or more spokes with access rights to the shared data of the hub via the proxy user a request interface to receive a request from one of the hubs for access to the shared data of the customer organization via the proxy user at the hub and the request interface to return a response to the hub having made the request.

According to another embodiment of the system a user interface operates at a user client device remote from the system and communicatively interfaces with the system via a public Internet in which the system operates at a host organization as a cloud based service provider to the user client device.

According to another embodiment of the system the database comprises a multi tenant database system having elements of hardware and software that are shared by a plurality of separate and distinct customer organizations each of the separate and distinct customer organizations being remotely located from the host organization and in which each customer organization is an entity selected from the group consisting of a separate and distinct remote organization an organizational group within the host organization a business partner of the host organization or a customer organization that subscribes to cloud computing services provided by the host organization.

According to another embodiment the system further includes a schema generator to record the configuration of the hub the configuration of the one or more spokes and the configuration of the proxy user and its access rights to the shared data via a proxy schema and an installer to package and deploy the proxy schema into a live production environment in which the installer is to install the hub and the one or more spokes within the live production environment according to the stored configuration of the hub the stored configuration of the one or more spokes and the stored configuration of the proxy user and its access rights to the shared data as recorded by the packaged and deployed proxy schema.

Bus interfaces the various components of the system amongst each other with any other peripheral s of the system and with external components such as external network elements other machines client devices etc. including communicating with such external devices via a network interface over a LAN WAN or the public Internet.

While the subject matter disclosed herein has been described by way of example and in terms of the specific embodiments it is to be understood that the claimed embodiments are not limited to the explicitly enumerated embodiments disclosed. To the contrary the disclosure is intended to cover various modifications and similar arrangements as are apparent to those skilled in the art. Therefore the scope of the appended claims are to be accorded the broadest interpretation so as to encompass all such modifications and similar arrangements. It is to be understood that the above description is intended to be illustrative and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reading and understanding the above description. The scope of the disclosed subject matter is therefore to be determined in reference to the appended claims along with the full scope of equivalents to which such claims are entitled.

