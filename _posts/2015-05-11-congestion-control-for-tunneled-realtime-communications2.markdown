---

title: Congestion control for tunneled real-time communications
abstract: A system performs congestion control functionality for real-time communications (“RTC”). The system establishes a tunnel by a tunneling server with a tunneling client of a user equipment (“UE”). The system receives a request from the UE to enable the congestion control functionality for an inner socket of the tunnel. The system sends a response back to the UE to indicate that the congestion control functionality is enabled for the inner socket. The system then monitors congestion conditions at an outer transport layer of the tunnel and executes the congestion control functionality at an inner transport layer of the tunnel based on the congestion conditions at the outer transport layer of the tunnel.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09660915&OS=09660915&RS=09660915
owner: Oracle International Corporation
number: 09660915
owner_city: Redwood Shores
owner_country: US
publication_date: 20150511
---
One embodiment is directed generally to a communications network and in particular to delivering real time traffic over a communications network.

Many enterprise environments have replaced their Public Switched Telephone Network PSTN telephony services with telephony services that use the Internet Protocol IP commonly known as Voice over IP VoIP or IP Telephony. Since IP Telephony uses an IP network as its backbone it can provide advanced features such as video conferencing call recording and call forwarding.

Recently the growing base of mobile data subscribers the wide availability of Internet access and the high availability of bandwidth in both fixed and mobile networks has resulted in the popularity of advanced services accessed via the Internet known as Over the Top OTT services . This has caused competitive service providers to offer OTT services and hence face corresponding challenges as they implement these new services.

One embodiment is a system that performs congestion control functionality for real time communications RTC . The system establishes a tunnel by a tunneling server with a tunneling client of a user equipment UE . The system receives a request from the UE to enable the congestion control functionality for an inner socket of the tunnel. The system sends a response back to the UE to indicate that the congestion control functionality is enabled for the inner socket. The system then monitors congestion conditions at an outer transport layer of the tunnel and executes the congestion control functionality at an inner transport layer of the tunnel based on the congestion conditions at the outer transport layer of the tunnel.

One embodiment provides congestion control services for real time communications RTC in a tunneling environment. In one embodiment based on congestion information at the outer layer of a tunnel a tunneling client throttles RTC traffic at the inner layer of the tunnel causing the throughput of encapsulated media being temporarily and intentionally reduced in order to accelerate recovery from congestion and improve the overall RTC quality. Accordingly in case of congestion embodiments provide RTC that is only affected by short periods of media choppiness thus preventing long periods of dead air and or dropped speech video phone calls.

In performing RTC UE communicates signaling and media traffic with respective servers in service provider network . Signaling traffic may be communicated according to an application layer protocol such as the Session Initiation Protocol SIP . SIP is configured to be independent of the underlying transport layer. Accordingly SIP can run on different transport protocols such as the Transmission Control Protocol TCP as described in for example Internet Engineering Task Force IETF request for comments RFC 793 and RFC 675 the User Datagram Protocol UDP as described in for example IETF RFC 768 etc.

Network further includes a tunneling server that together with a tunneling client within UE provides functionality for establishing and managing tunnels for performing RTC according to the Tunneled Services Control Function TSCF standard as described in for example 3rd generation partnership program 3GPP technical report TR 33.830 V0.5.0 the disclosure of which is hereby incorporated by reference in its entirety. In one embodiment tunneling client and tunneling server establish a TSCF tunnel that is compliant with TSCF tunnel management e.g. tunnel initialization maintenance termination etc. as defined by e.g. 3GPP TR 33.830 V0.5.0 and TSCF tunnel transport protocols are supported for the negotiation of TSCF tunnel between tunneling client and tunneling server .

The TSCF standard provides client side and server side network elements for establishing managed tunnels for performing RTC e.g. tunneling client and tunneling server in . It also provides two types of outer layer tunneling transports a stream based outer layer tunneling transport via TCP or Transport Layer Security TLS and a datagram based outer layer tunneling transport via UDP or Datagram Transport Layer Security DTLS .

TLS is a cryptographic protocol as provided in for example IETF RFC 2246 RFC 4346 RFC 5246 and or RFC 6176. DTLS is a protocol that provides communications privacy for datagram protocols. TCP and TLS provide reliable ordered and error checked delivery of the inner layer traffic but introduce undesirable latency that is detrimental to RTC applications over a communications network that experiences impairments. On the other hand UDP and DTLS do not guarantee reliable delivery thus minimizing latency and being desirable for RTC.

In some embodiments IP network may include security devices e.g. firewalls proxies etc. that allow traffic of only a certain transport protocol e.g. only TCP only UDP etc. . Accordingly tunneling client and tunneling server may establish and manage TSCF tunnel such that UE may use it to traverse such security devices and connect to tunneling server to reach servers in service provider network .

The TSCF standard further provides control messages for exchanging configuration information between tunneling client and tunneling server . According to the TSCF standard control messages are of a request response type and a control message response for a request includes either a corresponding reply or an error code indicating why the request cannot be honored by the receiving end. TSCF control messages use a Type Length Value TLV encoding. TLV is a variable length concatenation of a unique type and a corresponding value.

Each TSCF control message includes a control message header at the beginning including a CM Version field identifying the version of the header and indicating the outer transport protocol of a TSCF tunnel a CM Indication field identifying whether the message is a control message or not a Reserved field reserved for future use a CM Type field identifying the type of the control message e.g. whether it is a request or a response the corresponding functionality etc. a TLV Count field indicating the number of TLVs that follow or are appended to the header in the corresponding control message a Tunnel Session ID TSID field including a tunnel session identifier ID assigned by tunneling server to uniquely identify TSCF tunnel and a Sequence field that is incremented per message as described in for example 3GPP TR 33.830 V0.5.0.

In one embodiment in order to establish TSCF tunnel tunneling client sends a configuration request message to tunneling server to obtain configuration information for TSCF tunnel . In a configuration request message the TSID header field bits are set to 1 i.e. FFFF . . . . In response tunneling server assigns a TSID to a TSCF tunnel and sends a configuration response message back to tunneling client . The configuration response message includes the TSID assigned by tunneling server to TSCF tunnel . The subsequent messages between tunneling client and tunneling server include this assigned TSID in their headers.

In one embodiment if a control message is communicated between tunneling client and tunneling server and does not include the expected TSID the control message is dropped and the corresponding TSCF tunnel is terminated. Alternatively in one embodiment tunneling client may send a configuration release request message to tunneling server to terminate a TSCF tunnel. In response to such a configuration release request message tunneling server sends a configuration release response message to tunneling client . At this time TSCF tunnel is terminated.

In one embodiment UE executes an application that may be a SIP based RTC application relying on a library such as the software development kit SDK provided by the tunneled session management solution from Oracle Corp.

System includes a bus or other communication mechanism for communicating information and a processor coupled to bus for processing information. Processor may be any type of general or specific purpose processor. System further includes a memory for storing information and instructions to be executed by processor . Memory can be comprised of any combination of random access memory RAM read only memory ROM static storage such as a magnetic or optical disk or any other type of computer readable medium. System further includes a communication device such as a network interface card to provide access to a network. Therefore a user may interface with system directly or remotely through a network or any other method.

Computer readable medium may be any available media that can be accessed by processor and includes both volatile and nonvolatile media removable and non removable media and communication media. Communication media may include computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media.

Processor may further be coupled via bus to a display such as a Liquid Crystal Display LCD . A keyboard and a cursor control device such as a computer mouse may further be coupled to bus to enable a user to interface with system on an as needed basis.

In one embodiment memory stores software modules that provide functionality when executed by processor . The modules include an operating system that provides operating system functionality for system . The modules further include a congestion control module for providing congestion control and all other functionality disclosed herein. In one example embodiment congestion control module may implement tunneling server of in conjunction with one or more remaining elements of . System can be part of a larger system such as added functionality to the Acme Packet 4500 session border controller from Oracle Corp. Therefore system can include one or more additional functional modules to include the additional functionality. A database is coupled to bus to provide centralized storage for congestion control module and additional functional modules .

In one embodiment congestion control module and or additional functional modules may include several modules to provide congestion control functionality as will be described herein with reference to . The modules in one embodiment include a tunneling module that establishes a tunnel with a tunneling client of a user equipment and a monitoring module that monitors congestion conditions at an outer transport layer of the tunnel and executes the congestion control functionality at an inner transport layer of the tunnel.

Referring again to with known systems TSCF tunnel may encapsulate different types of traffic ranging from pure data to real time media. In general data and real time media are subject to different Quality of Service QoS requirements. For example data may be sensitive to integrity while real time media may be sensitive to latency. In a tunneling configuration encapsulated media is typically communicated according to the real time transport protocol RTP as provided for example in IETF RFC .

In a TSCF tunneling configuration RTC e.g. speech video etc. may be subject to two levels of transport one at the outer tunnel layer typically according to TCP TLS and another at the inner tunnel layer typically according to UDP. provides example protocol layers in a TSCF tunneling configuration for encapsulating media traffic according to an embodiment. In TSCF tunneling configuration compressed media e.g. speech video etc. is communicated according to RTP at the application layer and is transported via an inner UDP at the inner transport layer within an inner IP at the inner network layer. The inner layers are within an outer TCP TLS at the outer transport layer which is in turn within an outer IP at the outer network layer. In one embodiment since most IP networks block any outer traffic that is not stream based TCP TLS is used at the outer transport layer of TSCF tunnel to guarantee delivery.

One disadvantage with these known systems is that using a stream based transport e.g. TCP TLS generally requires the implementation of congestion control functionality so that a reliable transport is provided while regulating throughput. However the known systems do not provide a tunneling configuration with congestion control functionality that works across both the inner transport layer and the outer transport layer. Therefore if the outer layers experience congestion the inner layers are not aware of that congestion and hence do not react accordingly. Instead with known systems the inner layers typically worsen the congestion of the outer layers by flooding the lower layers with packets. That is when congestion and consequently latency is experienced at the outer layers of a tunnel it is further aggravated by the continuous transmission of encapsulated media packets through the inner layers of the tunnel.

In contrast to the known systems embodiments of the present invention provide congestion control functionality that is triggered based on the outer layers of a tunnel but is implemented at the inner layers of a tunnel. One embodiment performs early detection of congestion of RTC e.g. speech video etc. in the outer transport layer of TSCF tunnel and before such congestion can seriously compromise the overall quality of RTC the embodiment triggers congestion control functionality at the inner transport layer of TSCF tunnel .

One embodiment provides congestion control functionality by implementing a first congestion control module at tunneling client and a second congestion control module at tunneling server . In one embodiment first congestion control module and second congestion control module implement circuit breakers at the inner transport layer of TSCF tunnel such that the inner transport layer reacts to congestion as it begins to affect the outer transport layer of TSCF tunnel .

A circuit breaker in one embodiment is a software mechanism that is used to control the flow of information in a data path in order to minimize congestion. Circuit breakers can be implemented as software modules in the transport layer of both tunneling client and tunneling server . Based on traffic conditions the circuit breakers can be activated to prevent all outgoing traffic from being transmitted. When the right traffic conditions are met and the circuit breakers get activated all outgoing traffic affected inside the tunnel is dropped in one embodiment. The traffic is not buffered since it is typically media traffic that should not be subjected to latency.

In one embodiment one or both of first congestion control module and second congestion control module inspect encapsulated traffic established by an inner socket in TSCF tunnel to identify congestion and initiate congestion control functionality on demand by triggering corresponding circuit breakers at tunneling client or tunneling server . A network socket is an endpoint of an inter process communication flow across a computer network according to a communications protocol. A network socket may be a datagram socket a connectionless network socket or a stream socket a connection oriented and sequenced socket . In general for regular communications a user can create a datagram or stream socket that uses the network interface of the system in which the application runs. In a TSCF environment however sockets use a tunnel for transport instead of a network interface. To differentiate these sockets from regular sockets they are referred to as inner sockets since they only exist inside a tunnel. That is an inner socket only exists in association with a tunnel and socket traffic gets transported by the tunnel.

One embodiment provides TSCF SDKs that support an application programming interface API by which application can enable congestion control functionality for an inner socket. For example application may enable circuit breaker support at tunneling client for an inner socket by executing a corresponding tsc setsockopt API with a corresponding socket option when an inner socket is created.

In one embodiment when an inner socket in TSCF tunnel establishes traffic first congestion control module and or second congestion control module monitor a media discontinuity period e.g. 5 seconds and trigger circuit breakers at both tunneling client and tunneling server when the media discontinuity period is above a threshold.

In an alternative or additional embodiment when an inner socket in TSCF tunnel establishes traffic first congestion control module and or second congestion control module check the media sending rate and trigger circuit breakers at both tunneling client and tunneling server accordingly. For example first congestion control module and or second congestion control module trigger respective circuit breakers if the media sending rate exceeds an estimated TCP throughput by a pre configured factor e.g. a factor of 10 at both tunneling client and tunneling server . The media sending rate corresponds to the number of tunneled bits per second. Both server and client independently keep track of the media sending rate as frames are encapsulated by measuring the number of bytes B in each frame transmitted over a period of time T . The media sending rate equals B 8 T. For example for encapsulated G.711 speech the media sending rate would be 64 000 bps.

In one embodiment once first congestion control module triggers a circuit breaker for an inner socket first congestion control module stops propagating the inner socket traffic until the measurements that triggered the circuit breaker e.g. media discontinuity per unit of time and or media sending rate revert. That is first congestion control module stops propagating inner socket traffic until the media discontinuity per unit of time is below a corresponding threshold for the inner socket and the media sending rate does not exceed a corresponding estimated TCP throughput by a pre configured factor for the inner socket.

Similarly in one embodiment once second congestion control module triggers a circuit breaker for an inner socket it stops propagating the inner socket traffic until the triggering measurements of media discontinuity per unit of time and or media sending rate revert. That is second congestion control module stops propagating inner socket traffic until the media discontinuity per unit of time is below a corresponding threshold for the inner socket and the media sending rate does not exceed a corresponding estimated TCP throughput by a pre configured factor for the inner socket.

In one embodiment without application being aware of any congestion control functionality first congestion control module transparently triggers circuit breakers whenever congestion is detected in encapsulated traffic in TSCF tunnel . In an alternative or additional embodiment first congestion control module notifies application whenever congestion is detected and or congestion control functionality is enabled for encapsulated traffic in TSCF tunnel . In one embodiment when first congestion control module detects congestion it notifies application by indicating the inner socket affected by such congestion.

One embodiment provides TSCF SDKs that support API notification for first congestion control module to notify application of triggering congestion control functionality in TSCF tunnel . In one embodiment when a circuit breaker is triggered first congestion control module notifies application by executing a tsc notification enable API.

At tunneling client sends a configuration request message to tunneling server to establish TSCF tunnel and at tunneling server responds to the configuration request message of tunneling client with a configuration response message. Configuration request and response messages allow for tunneling client to obtain configuration information for TSCF tunnel from tunneling server as described in for example 3GPP TR 33.830 V0.5.0. In one embodiment from the RTC application perspective application at UE creates TSCF tunnel by executing a tsc ctrl new tunnel API and the configuration response message is sent to tunneling server in response to the execution of this API.

Upon completing the exchange of request response messages tunneling client and tunneling server may use TSCF tunnel for performing RTC and communicating signaling traffic and media traffic. In one embodiment when inner signaling and media sockets are needed to place a call e.g. for communicating SIP call control traffic or RTP media traffic application creates these sockets on TSCF tunnel by executing a tsc socket API. A socket is created by determining a socket type e.g. datagram vs. stream and a tunnel on which the socket should be created. In one embodiment when a socket is created application binds the socket by executing a tsc bind API. The bind function assigns a specific transport port e.g. TCP or UDP to the socket. This port is later used as a source port of all traffic generated by the socket. In one embodiment if an inner socket is created in TSCF tunnel there is a binding at tunneling server that links the internal IP address of TSCF tunnel to that socket.

At application enables circuit breaker functionality for an inner socket in TSCF tunnel by executing a tsc setsockopt API on the inner socket. The execution of a tsc setsockopt API causes first congestion control module to send a TSCF service request message to tunneling server to enable congestion control functionality for the inner socket at tunneling server .

At second congestion control module at tunneling server receives this service request message determines if tunneling server can comply with the request and answers back to first congestion control module with a TSCF service response message to confirm that circuit breaker functionality is enabled. Server may not be able to comply if it does not support the functionality because it runs an older version of the software or the functionality has not been configured as described below. Subsequently both first congestion control module and second congestion control module start checking for tunnel transport conditions that would trigger circuit breakers. In one embodiment first congestion control module and second congestion control module trigger circuit breakers based on the media discontinuity media sending rate etc. as described herein with reference to .

At first congestion control module and or second congestion control module detect congestion of an inner socket in TSCF tunnel based on tunnel transport conditions that would trigger circuit breakers e.g. based on media discontinuity per unit of time media sending rate etc. as described herein with reference to .

Subsequently at and first congestion control module and or second congestion control module activate respective circuit breakers and stop sending media traffic over the inner socket while those conditions are met and subsequently restart sending media traffic once the conditions are reverted.

At if application issues a tsc setsockopt to disable circuit breakers first congestion control module issues a TSCF service request message to tunneling server to disable circuit breaker functionality and at second congestion control module responds back to first congestion control module with a corresponding TSCF service response message indicating that circuit breaker functionality has been disabled.

One embodiment supports congestion control functionality by providing a TSCF client service request message of type Service Type with two TLV values indicating enablement and disablement of circuit breakers respectively. Further a Connection Info TLV is provided to indicate source and destination transport and network endpoints. These service request types allow for tunneling client to enable circuit breaker support at tunneling server . Table 1 below provides example TSCF TLVs for providing congestion control services according to some embodiments.

In one embodiment circuit breaker functionality is requested by application by executing a tsc socket API and setting a corresponding socket option as provided in the following example functionality 

In the above functionality the circuit breaker integer indicates whether circuit breaker functionality is enabled e.g. circuit breaker 1 or disabled e.g. circuit breaker 0 . If tsc setsockopt returns 1 the option has not been set correctly. If it returns 0 the option has been set correctly but circuit breakers are not officially enabled until they are negotiated.

In one embodiment first congestion control module uses a tsc notification circuit breaker notification to notify application about enablement of circuit breakers. The following is an example functionality for enabling such notification and for providing a corresponding callback 

In the above functionality the fourth NULL parameter in tsc notification enable is an opaque private data pointer that can be recovered in the tsc notification data structure upon callback.

One embodiment provides a configuration object tscf interface that includes a parameter assigned services with a keyword CB to enable circuit breakers. Table 2 below provides an example of such TSCF configuration object for providing congestion control services according to one embodiment.

The following functionality provides an example interface configuration for providing congestion control services according to one embodiment 

The following is an example extensible markup language XML functionality for providing congestion control services according to one embodiment 

In one embodiment once circuit breaker functionality is enabled the following two conditions are evaluated periodically at first congestion control module and second congestion control module to determine whether circuit breakers are to be triggered e.g. enabled or restored e.g. disabled 

The two aforementioned conditions typically occur before the tunnel transport layer experiences congestion. Therefore these conditions may be used to significantly reduce the effects of congestion since these conditions can provide early detection of congestion. In one embodiment an estimated TCP throughput T may be calculated as follows 

At first congestion control module at tunneling client sends a TSCF service request to tunneling server to enable congestion control functionality for an inner socket in TSCF tunnel . In one embodiment first congestion control module sends the request when application executes an API to enable the congestion control functionality for the inner socket.

At second congestion control module at tunneling server sends a TSCF service response back to first congestion control module to indicate that congestion control functionality is enabled for the inner socket.

At first congestion control module and second congestion control module monitor congestion conditions at an outer transport layer of TSCF tunnel for the inner socket. In one embodiment the congestion conditions of the inner socket are based on a media discontinuity per unit of time and a media sending rate.

At first congestion control module and second congestion control module execute the congestion control functionality at an inner transport layer of TSCF tunnel based on the congestion conditions at the outer transport layer of TSCF tunnel .

In one embodiment the congestion control functionality implements circuit breakers at tunneling client and tunneling server . Accordingly when the congestion conditions indicate congestion of the inner socket at the outer transport layer of TSCF tunnel the congestion control functionality activates the circuit breakers to halt communications of the inner socket at the inner transport layer of TSCF tunnel . Further when the congestion conditions indicate no congestion of the inner socket at the outer transport layer of TSCF tunnel the congestion control functionality deactivates the circuit breakers to resume the communications of the inner socket at the inner transport layer of TSCF tunnel .

In one embodiment upon determining congestion of the inner socket at the outer transport layer of TSCF tunnel first congestion control module provides a corresponding notification to application indicating the inner socket that is affected by congestion.

In one embodiment first congestion control module sends a subsequent request to second congestion control module to disable the congestion control functionality and second congestion control module sends a TSCF service response back to first congestion control module to indicate that congestion control functionality is disabled.

As disclosed embodiments allow for a TSCF tunneling configuration that provides congestion control functionality for encapsulated media. Embodiments provide throughput throttling via circuit breakers at an inner tunnel transport layer whenever the tunneling framework starts detecting the first signs of congestion at an outer transport layer. By reducing the inner transmission rate congestion is alleviated and recovery occurs at a much faster rate. Moreover embodiments embed the congestion control functionality well into the tunneling configuration such that this functionality is made transparent to an RTC application. Accordingly embodiments give the end user the possibility of improving the overall RTC quality by expediting recovery from congestion.

Several embodiments are specifically illustrated and or described herein. However it will be appreciated that modifications and variations of the disclosed embodiments are covered by the above teachings and within the purview of the appended claims without departing from the spirit and intended scope of the invention.

