---

title: System architectures with data transfer paths between different memory types
abstract: A system can include a first memory section comprising a plurality of volatile memory cells; a second memory section comprising a plurality of nonvolatile memory cells; a first data path configured to transfer data between the first and second memory sections; an interface circuit coupled to receive access commands and address values, the interface circuit configured to determine if a data transfer operation is occurring in the device, and if the data transfer operation is occurring, accessing the address in the first memory section or accessing a location in the second memory section based on a select value, and if the data transfer operation is not occurring, accessing the address in the first memory section; and a compare circuit configured to compare a received address to a predetermined value to generate the select value.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09455036&OS=09455036&RS=09455036
owner: Adesto Technologies Corporation
number: 09455036
owner_city: Santa Clara
owner_country: US
publication_date: 20150928
---
This application is a continuation of U.S. patent application Ser. No. 13 846 539 filed on Mar. 18 2013 which claims the benefit of U.S. provisional patent application Ser. No. 61 647 064 filed on May 15 2012 the contents both of which are incorporated by reference herein.

The present disclosure relates generally to electronic systems and more particularly to systems that include a volatile memory section for fast memory accesses and a nonvolatile section for saving data in the absence of power.

Conventional system architectures for low power operations can incorporate both a dynamic random access memory DRAM and Flash Flash Electrically Programmable and Eraseable Read Only Memory memory as part of the memory hierarchy. Standby power can be reduced by powering off the DRAM. However DRAM is a volatile memory that loses its data in the absence of power. Thus if DRAM data is needed when the system starts up again such data is stored in the Flash memory. Copying data from DRAM to Flash memory when entering a standby mode and reading data back from the Flash memory into DRAM when entering active mode adds to system power and latency.

In many conventional mobile systems energy is saved by removing power from various subsystems when possible. However to ensure continuity of operation user states must first be saved in a subsystem that remains powered or in a nonvolatile memory such as Flash memory. For example in a laptop computer a suspend to ram operation saves all processor states in memory then powers off the processor. The memory remains powered. When resuming the processor is powered up and the state restored. In a suspend to disk operation the system state is saved to disk and then the majority of the platform can be powered down. In small mobile devices such as smart phones and tablets nonvolatile memory serves a function like that of the disk in a laptop computer.

The speed with which these save restore functions can be performed and the energy cost of the save restore functions themselves can affect the energy saving benefits of the system. In general the save restore functions must be both fast and low energy. When this is achieved energy savings can result from performing save restore more frequently equivalently more aggressively. In conventional smart phones and tablet computing devices the path used by the save restore function goes through a system on chip SoC device and is often performed in software. In addition in such conventional systems DRAM and Flash have relatively low bandwidth paths to the SoC.

Conventional memory systems are known that pair static random access memory SRAM cells with silicon oxide nitride oxide silicon SONOS type storage elements. Such memory systems can perform a bit to bit copy of SRAM data to SONOS elements. However a drawback to SONOS technology can be the relatively high voltages needed to program SONOS elements. This can present process integration challenges and require more power as power is proportional to voltage squared. In addition the one to one pairing of SRAM cells to SONOS elements results in a hardwired configuration between the SRAM storage space and the SONOS storage space. That is such systems do not have any flexibility to configure which areas will be saved restored and which areas will not.

In a restore operation data can be transferred via SoC from Flash memory to DRAM . Until the restore operation is complete other operations by system may not be possible.

Embodiments disclosed herein show systems that can incorporate programmable impedance elements based on a solid electrolyte layer that can enable fast write speeds with the benefit of non volatility and hence improve the standby power and standby to active latency performance of a system.

In particular embodiments a solid electrolyte layer based memory referred to here as a conductive bridging random access memory CBRAM type memory can be incorporated into a system having a volatile memory. A high bandwidth data transfer path can exist between the two memory types. SAVE operations which store data from the volatile memory in the CBRAM type memory and or RESTORE operations which read data into the volatile memory from the CBRAM type memory can be faster and or consume less power than corresponding operations performed by systems employing DRAM memory and Flash memory such as that shown in .

In very particular embodiments a system can incorporate CBRAM type memory and DRAM. CBRAM type memory can operate at voltages that are the same as DRAM or closer to DRAM than other nonvolatile memory types. In addition a CBRAM type memory can have a read time that is comparable to a DRAM and or faster than other nonvolatile memory types. CBRAM type memories can have a less complicated organization than Flash type memories which can be organized into erasable blocks and so can accommodate various access types such as byte writes enabling flexibility in type and manner of data transfers.

CBRAM type memory can be compatible with leading complementary metal oxide semiconductor CMOS fabrication processes. Accordingly such CBRAM type memories can be incorporated into existing system architectures as well as new architectures.

A first data transfer path can transfer data between system logic and memory system at a first bandwidth. A first bandwidth can be based on a bit width of the first data transfer path and or a rate at which data values can be transmitted.

A memory system can include a volatile section and a programmable impedance section connected to one another by a second data transfer path . A volatile section can be formed with volatile memory cells that will lose stored data in the absence of power. As but a few of many possible examples a volatile section can include dynamic random access memory DRAM type cells and or static RAM SRAM type cells.

A programmable impedance section can be formed with memory cells that store data states by operation of one or more solid electrolyte layer. Such a memory type will be referred to as a conductive bridging random access memory CBRAM herein. In some embodiments a CBRAM section can operate at a same power supply voltage as volatile section . This is in contrast to conventional systems that include electrically erasable and programmable read only memory EEPROM including flash EEPROM which can require operating voltages substantially greater than that of a corresponding DRAM of the system. In particular embodiments CBRAM section can store data in a nonvolatile fashion and or with a greater data retention time than volatile section .

Accordingly while embodiments herein describe CBRAM sections alternate embodiments can any other suitable memory technology having a different data retention time. Preferably such other suitable memory technology can operate at a power supply no greater than that used for the volatile section.

A second data transfer path can transfer data between volatile memory section and CBRAM section at a second bandwidth that is greater than the first bandwidth. Such a greater bandwidth can be accomplished with a greater bit width and or a faster data transfer speed than first data transfer path .

According to embodiments a second data transfer path can be independent of first data transfer path providing a data path only between volatile memory section and CBRAM section . In this way high bandwidth data transfers can occur between a volatile memory section and CBRAM section enabling rapid storing of data from volatile section to CBRAM section and or rapid recalling of data from CBRAM section to volatile section .

A physical implementation of a second data transfer path can take many forms. In some embodiments a second data transfer path can be implemented as wiring on a single die that includes the volatile section and CBRAM section . In an alternate embodiment in which volatile section and CBRAM section are formed on separate dies a second data transfer path can be implemented using die to die structures such as through silicon vias TSVs that connect separate stacked devices as but one very particular example.

A second data transfer path can provide power savings over conventional systems like that of as data in the volatile section can be saved to the CBRAM both quickly and with less power than the conventional approach. Power savings can be achieved from any of the speed at which data saves can occur the reduced size of signal lines of the second data transfer path or the reduced voltage needed to save data into CBRAM section . In a SAVE operation data can be transferred from volatile section and system logic in some embodiments to CBRAM section over second data transfer path . Power can then be removed from the system logic the volatile section and in some embodiments the CBRAM section . At a later time power can be returned to such portions of the system and a RESTORE operation can use second data transfer path to transfer data from CBRAM section to volatile section and system logic in some embodiments thus restoring a previous operational state to the system .

In the embodiment of a separate memory like flash memory of is not included. Accordingly a memory section can accommodate save restore operations to save system states and at the same time can serve as file repository for the system assuming the functions of a flash memory like that of .

A memory system can include a DRAM section and a CBRAM section connected to one another by a second data transfer path . A second data path can be up to many thousands of bits wide. With this wide data path data may be moved between the two memory sections quickly and without passing through the SoC . In addition by implementing second data path locally to the DRAM CBRAM sections a capacitance of wires making up such a data path can be small compared to wires that make up data transfer path between SoC and memory section . As a result each data bit moved switches less capacitance. A second data transfer path can transfer data between DRAM section and CBRAM section with a bandwidth that is greater than that of the first data transfer path and greater than that of the third data transfer path . In very particular embodiments a second data transfer path can have a bit width that is substantially greater than that of the first and third data transfer paths .

A memory section can operate with supply voltages VDD and VSS. Such voltages can be sufficient to enable the operation of DRAM section as well as any programming and or erasing of cells in the CBRAM section . In addition an SoC can also operate between the VDD and VSS voltages.

A flash memory can store data in a nonvolatile fashion. In the embodiment shown flash memory can receive or generate a programming voltage Vp to program data values into its EEPROM cells as well as an erase voltage Ve to erase sectors of such cells. A program voltage Vp can greater than VDD and an erase voltage Ve can be less than VSS. This is in sharp contrast to the CBRAM section which can operate at VDD VSS.

It is noted that a memory system according to embodiments herein can have various configurations. Particular embodiments showing variations memory system architecture are shown in .

It is understood that portions of CBRAM section can be physical divisions or logical divisions of the CBRAM section or a combination of both. Further portions of CBRAM section can be fixed i.e. address ranges remain the same or dynamic address ranges can be changed .

An interface A can receive a conventional set of RAM signals. In the particular embodiment shown interface A can take the form of a conventional DRAM interface having a set of standard DRAM input and output signals. Thus DRAM section can be controlled in a conventional fashion via DRAM control path using interface A.

Unlike a conventional DRAM interface interface A can include a CBRAM access command decoder which can enable CBRAM section to be controlled by special input signal sets that would be considered invalid commands to a standard DRAM. In response to such special input signal sets a CBRAM section can be controlled via CBRAM control path .

While shows an interface A with a standard DRAM interface alternate embodiments can include other conventional interfaces such as an SRAM interface as but one example.

According to embodiments data transfers between DRAM section and CBRAM section over data path can be controlled via interface A either directly or indirectly. In a direct case control signals are applied to interface to enable high bandwidth transfers between the sections . In an indirect case a memory section A can include a copy engine that is activated via interface A to automatically transfer data blocks between the memory sections . In very particular embodiments system logic e.g. an SoC can access interface A to control operations of a memory section A.

In this way a memory section can have a standard interface that enables accesses to a volatile section i.e. a DRAM section via standard signal combinations as well as accesses to CBRAM section via non standard signal combinations.

However unlike a conventional DRAM interface interface B can include additional signal inputs that can enable control of CBRAM section . In the very particular embodiment shown interface B can receive and process an additional chip select signal CS CBRAM to enable accesses to CBRAM section . Accordingly when signal CS DRAM is active DRAM section can be accessed by operation of the of the other control signals. However when signal CS CBRAM is active CBRAM section can be accessed by operation of the of the other control signals. Data transfers between DRAM section and CBRAM section over data path can be controlled via interface B either directly or indirectly. In very particular embodiments system logic can access interface B to control operations of a memory section B.

In this way a memory section can have an interface that includes extra signals in addition to standard signals to distinguish between accesses to a volatile section i.e. a DRAM section and a CBRAM section.

To access a CBRAM section a memory section C can include interface signals that are entirely independent of interface C i.e. out of band signals . Such interface signals can be applied directly to CBRAM section to control operations therein. Data transfers between DRAM section and CBRAM section over data path can be controlled via CBRAM control signals either directly or indirectly. In very particular embodiments system logic can access interface C and generate CBRAM control signals to control operations of a memory section C.

In this way a memory section can include signals separate from a memory interface to control accesses to a CBRAM section.

In the embodiment shown a high bandwidth data transfer path can be connected between volatile memory section and CBRAM section but not between volatile memory section and CBRAM section . An interface D can take the form of any of those shown herein or equivalents. In very particular embodiments system logic can access interface D to control operations of a memory section D.

In this way a memory section can include some volatile portions that are connected to a CBRAM section via a high bandwidth data transfer path while other volatile sections are not connected to the CBRAM section.

It is understood that while show very particular interfaces alternate embodiments can include any other suitable interface types.

A CBRAM section can include a CBRAM array a decoder and a wide CBRAM program read interface P R IF . A CBRAM array can include memory cells with CBRAM elements for storing data values. In some embodiments memory cells in CBRAM array can include one or more access devices e.g. transistors in combination with one or more CBRAM elements. A decoder can decode CBRAM addresses ADD CBRAM to access CBRAM memory cells. A wide P R IF can enable program and write operations to CBRAM memory cells within array . In particular embodiments a wide P R IF can have a large bit width i.e. greater than 512 bits .

In particular embodiments SAVE and RESTORE operations can occur by system logic generating appropriate address values ADD VOL ADD CBRAM and control values CTRL VOL CTRL CBRAM to transfer data between CBRAM array and volatile array over transfer path .

In particular embodiments SAVE and RESTORE operations can occur by system logic applying an appropriate command to copy engine which can then automatically execute data transfer operations over transfer path .

In SAVE or RESTORE operations data can be transferred between CBRAM section and volatile section by operation of R W IF and P R IF according to any of the embodiments shown herein or equivalents. In standard read operation e.g. access by system logic the same interfaces R W IF and P R IF can operate to access data. However by operation of select circuit only a portion of the data can be input or output on low bandwidth transfer path . As but one example a high bandwidth data transfer path can have a bit width of 512 bits. A selection circuit can output a 64 32 or 16 bit portion of such 512 bits on the low bandwidth data transfer path .

In a RESTORE operation write data can be received by volatile section via data transfer path . A write amplifier can amplify such data. Optionally selected of the data can be applied via a column decoder . However as noted above in particular embodiments data can be written on a row wise basis into volatile array .

In a CBRAM section can include CBRAM cells one shown as arranged into a CBRAM cell array having rows and columns. One or more rows of memory cells can be accessed via a row decoder . In SAVE operations data corresponding to rows of memory cells can be received over data transfer path . Program circuit can generate bias voltages suitable to write the received data values into memory cell array . In some embodiments such actions can include erasing CBRAM elements to one state e.g. a high impedance then selectively programming some to a low impedance state based on the received data. Optionally bits to be programmed into CBRAM cell array can be selected with a column decoder . However in particular embodiments data transfers occur on a row basis to avoid any delay introduced by column decoding.

In a RESTORE operation row s of data in CBRAM cell array can be read by read circuit . Optionally selected of the data can be read via a column decoder . However as noted above in particular embodiments data can be read on a row wise basis from CBRAM cell array directly onto data transfer path .

A data transfer path can be a high bandwidth data transfer path. High transfer speeds can be accomplished with very wide bit widths e.g. 512 bits wide or more fast interface circuits shorter data signal paths e.g. from volatile array to CBRAM array on a same integrated circuit or combinations thereof.

Having described various architectures and circuits according to embodiments data transfers according to particular embodiments will now be described.

In the embodiment of a volatile section can have an interface of N bits with data transfer path . Accordingly as groups of N bits are received such bits can be written in one operation into an N bit block within volatile section beginning at base address in . Subsequently data in volatile section can be accessed via a low bandwidth data transfer path by system logic e.g. SoC or other portions of a system. In very particular embodiments a low bandwidth data transfer path can have a bit width of no more than 64 bits excluding any parity error bits .

It is understood that SAVE operations can occur in the reverse manner with groups of N bits being read from volatile section onto data transfer path with a single read operation. Such N bits can then be programmed into locations of CBRAM section in a single program operation.

It is understood that SAVE operations can occur in the reverse manner with groups of N bits being read from volatile section onto data transfer path with a sequence of read operations. Such N bits can be collected into a larger group e.g. 2N and then be programmed into locations of CBRAM section in a single program operation. In some embodiments a CBRAM section can include data latches for accumulating multiple data transfers from volatile section .

It is understood that SAVE operations can occur in the reverse manner with groups of N bits being read from volatile section onto data transfer path with multiple operations. Corresponding program operations can program each N bit group into CBRAM section .

In some embodiments data stored in memory sections can have the constraint that the lengths of data blocks in the volatile section and CBRAM section can be the same. Accordingly region pairs i.e. storage regions in volatile and CBRAM portions can be specified by 1 a volatile memory base address 2 a CBRAM base address and 3 a common length. In embodiments bases can be multiples of a width of the high bandwidth data transfer path and lengths of data regions can be integral multiples of the high bandwidth data transfer path.

In some embodiments a copy engine e.g. of or controlling system logic e.g. SoC can maintain internal copy pointers one for a volatile section and one for the CBRAM section. Prior to a SAVE or RESTORE operation such pointers can be initialized to a volatile section base address and CBRAM section base address respectively. During a SAVE operation starting as such base addresses a controlling circuit can copy from a volatile section to the CBRAM section and vice versa for a RESTORE operation . If needed a number of such transfers may be implemented 

In some embodiments a system can include software which can indicate to a controlling circuit which regions are to be moved in the SAVE RESTORE operation by accessing stored copy instruction data. Such copy instruction data can be stored in a CBRAM section in a volatile section in other registers in a larger system device or in another memory of a larger system i.e. flash memory .

As noted above in conventional systems like that of system operations may not be possible until a restore operation is finished i.e. data from a flash memory has been loaded into a DRAM . In sharp contrast in some embodiments restore data can be available regardless of the progress of a RESTORE operation. Examples of such RESTORE operations i.e. zero delay RESTOREs will now be described.

In contrast if a RESTORE operation is in progress Y from a method can compare an access address to a restore pointer value . Such an action can include comparing the address of a write or read operation to an address pointer value where the pointer value indicates the progress of the RESTORE operation. In the particular embodiment shown an address values greater than or equal to the pointer value can indicate memory locations currently being written with data from CBRAM or memory locations that have not yet been written with CBRAM data. Thus if an access address is less than the address pointer value N from the volatile memory section can be accessed i.e. data values can be read from or written to the volatile memory section . In contrast if an access address is greater than or equal to the address pointer value Y from the CBRAM can be accessed i.e. data values can be read from or programmed into the CBRAM section .

In this way if data has not yet been restored to a volatile memory section such data can be accessed from the CBRAM section storing the data for the RESTORE operation.

While embodiments above have shown memory systems with start and end pointers indicating a continuous address space for copy alternate embodiments can transfer non contiguous address spaces. As but two examples memory systems can include linked list of pointers or some address generation algorithm.

A copy engine can enable automatic data transfers between volatile section and CBRAM section over data transfer path as described herein or equivalents. Copy engine can provide one or more values CurrAdd indicating the progress of a RESTORE operation. In one very particular embodiment a CurrAdd can be an address of volatile section that is currently being written to i.e. like CurrPtrV in .

An address comparator can compare an address received with an access request to the CurrAdd value. Based on such a comparison address comparator can provide an access select value ACC to IF . If a RESTORE operation is in progress and IF can enable an access to volatile section or CBRAM section based on select value ACC.

For one type of condition Type 1 a high retention high wear save operation can be executed. A Type 1 condition can involve the need to store data for a relatively long period of time. For example one Type 1 condition can be when a low battery alert for a system is indicated. A high retention wear operation can result in the transferring data from a volatile section to a CBRAM section and programming such data into the CBRAM section as described herein or equivalents. Such programming can result in CBRAM elements retaining data for a relatively long period of time. For example a relatively long period of time can be months years or many years. In some embodiments such high retention wear writes can be at higher energy conditions and or longer times than low retention wear writes.

For another type of condition Type 2 a low retention low wear save operation can be executed. A Type 2 condition can involve the need to store data for a relatively short period of time. For example type 2 conditions can involve a device being placed in a temporary non operational state e.g. its cover is closed a light sensor indicates no activity or the device has no activity for a certain amount of time . A low retention wear operation can also result in the transferring data from a volatile section to a CBRAM section and programming such data into the CBRAM section as described herein or equivalents. However such programming can result in CBRAM elements retaining data for a relatively short period of time. For example a short period of time can include a few days or less. In some embodiments such low retention wear writes can be at lower energy conditions and or shorter times than high retention wear writes.

IF can provide access to volatile section CBRAM section and can control transfers between the two as described herein or equivalents including the use of a copy engine. In addition in the very particular embodiment shown IF can generate a retention selection value RETN SL for application to a program control circuit which can establish a retention time for program operations.

Program control circuit can program CBRAM elements within CBRAM section to one of multiple data retention times. In the embodiment shown a program control circuit can establish a data retention time for program operations based on received value e.g. RETN SEL is activated by an input command . However data retention times can be established by any of many alternate ways.

In some embodiments a program control circuit can establish a data retention time based on a timer . If a predetermined amount of time has passed a program control circuit can execute a long retention write to a CBRAM in a SAVE operation. In contrast if a predetermined amount of time has not passed a program control circuit can execute a short retention write to a CBRAM in a SAVE operation.

In addition or alternatively a program control circuit can establish a data retention time based on a wear value . A wear value can indicate how much a CBRAM section has been accessed. If a wear value exceeds a limit a program control circuit can execute a long retention write to a CBRAM in a SAVE operation. In contrast if a wear value does not exceed any limits a program control circuit can execute a short retention write to a CBRAM in a SAVE operation.

In addition or alternatively a program control circuit can establish a data retention time based on an alarm . An alarm can indicate a system status that may necessitate a SAVE operation. In one very particular embodiment if power has been removed or if a power supply is now limited e.g. a battery low a program control circuit can execute a long retention write to a CBRAM in a SAVE operation. Otherwise a program control circuit can execute a short retention write to a CBRAM in a SAVE operation.

In some embodiments a short data retention time can be on the order of minutes hours days or even years while a long data retention time can be substantially nonvolatile lasting many years or longer.

Systems according to embodiments can take various forms. shows a system in which system logic a volatile memory section and a CBRAM section are all formed in the same integrated circuit substrate . In such an embodiment a high bandwidth data transfer path not shown can be formed with one or more interconnect layers for a high speed signal connections between the two memory sections .

In some embodiments a system A can further include system logic. Such logic can be formed on a same IC as a CBRAM section a same IC as a volatile memory section or an entirely different IC. In addition or alternatively a system A can include a third memory type e.g. flash memory . Such a third memory type can be formed on a same IC as a CBRAM section a same IC as the volatile memory section or an entirely different IC.

As in the case of a volatile memory section and CBRAM section can be formed on a same IC in which case a high bandwidth data transfer path can be formed in such an integrated circuit. However in an alternate embodiment a CBRAM section can be formed in a separate IC than a volatile memory section. In such an embodiment a high bandwidth data transfer path can be formed by vertical packaging connections such as TSVs as but one example.

Again as in the case of a system B can include further include system logic formed on a same IC as a CBRAM section a same IC as a volatile memory section or an entirely different IC. In addition or alternatively a system B can include a third memory type formed on a same IC as a CBRAM section a same IC as the volatile memory section or an entirely different IC.

It should be appreciated that in the foregoing description of exemplary embodiments various features are sometimes grouped together in a single embodiment figure or description thereof for the purpose of streamlining the disclosure aiding in the understanding of one or more of the various inventive aspects. This method of disclosure however is not to be interpreted as reflecting an intention that the claimed invention requires more features than are expressly recited in each claim. Rather as the following claims reflect inventive aspects lie in less than all features of a single foregoing disclosed embodiment. Thus the claims following the detailed description are hereby expressly incorporated into this detailed description with each claim standing on its own as a separate embodiment of this invention.

It is also understood that the embodiments of the invention may be practiced in the absence of an element and or step not specifically disclosed. That is an inventive feature of the invention can be elimination of an element.

Accordingly while the various aspects of the particular embodiments set forth herein have been described in detail the present invention could be subject to various changes substitutions and alterations without departing from the spirit and scope of the invention.

