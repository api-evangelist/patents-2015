---

title: Second-pass ranker for push notifications in a social network
abstract: Systems and methods for providing push notifications of social network content items include determining first and second engagement values for first and second content items, respectively, provided by first and second content item sources, respectively, based on previous interactions with content items. First and second utility values are determined for the first and second content items, respectively, based on a mathematical operation applied to the first and second engagement values, respectively, the first and second selection metrics, respectively, and, for the first utility value, the value metric. One of the first and second content items are determined as a push content item based on a difference between the first and second utility values and displayed on a user device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09413838&OS=09413838&RS=09413838
owner: LinkedIn Corporation
number: 09413838
owner_city: Mountain View
owner_country: US
publication_date: 20150630
---
This application claims the benefit of priority to U.S. Provisional Application No. 62 110 283 SOCIAL NETWORK CONTENT FEDERATION filed Jan. 30 2015 which is incorporated by reference herein in its entirety.

The subject matter disclosed herein generally relates to the federation of content from multiple content sources in a social network.

Social networks conventionally obtain content items from multiple content item sources. The content items as obtained may then be displayed to users of the social network on a user interface such as a news stream dedicated windows or spaces on a visual display separate windows and the like. Content item sources may include user profiles and changes thereto stored by the social network entities that provide sponsored content or databases in which the content items are stored and organic content recommendation engines such as engines that provide particular types of content including job recommendations recommended connections with members of the social network and content that other members and users of the social network have found interesting.

Example methods and systems are directed to providing push notifications of content from multiple content sources in a social network. Examples merely typify possible variations. Unless explicitly stated otherwise components and functions are optional and may be combined or subdivided and operations may vary in sequence or be combined or subdivided. In the following description for purposes of explanation numerous specific details are set forth to provide a thorough understanding of example embodiments. It will be evident to one skilled in the art however that the present subject matter may be practiced without these specific details.

In various examples of social networks the sources of content items may provide content items to be displayed on a user interface based on criteria the combination of which are unique to the content item source or which are not necessarily common to all of the content item sources. Thus for instance a sponsored content item source may factor in criteria such as an amount that a sponsoring entity has bid to display a sponsored content item to a user while a job recommendation engine may utilize criteria that focus on a user s qualifications for the job and the user s current employment status. Such diverse content item sources with selection criteria that are specific to the content items provided by the various individual content item sources may contribute to a rich and diverse user experience with the social network.

However such arrangements may not be sensitive to the quality of the content item sources and the need or desire to balance the display of the content items obtained therefrom appropriately. In particular if a content item source has relatively poor selection criteria as a first pass ranker of the content items included therein then the content items provided by the content item source may be of similarly poor quality or relevance to the user to whom the content items are displayed. Furthermore a single content item source may provide more content items than are necessarily desired without the capacity for the social network provider to understand if the large numbers of content items are desirable because they are highly relevant to the user or undesirable because they are of poor or middling quality in which case their sheer number may overwhelm other content items in a feed or may otherwise diminish the experience of the user.

A content source second pass ranker has been developed that may address the above issues among others by obtaining content items from the various content item sources according to the individual content item sources own first pass ranker selection criteria. The second pass ranker acting as a federator for the various content item sources assesses some or all of the content item sources for relative quality and or reliability of the content item sources first pass rankers and adjust the perceived value of the content items received from the respective content item sources accordingly. The second pass ranker may then provide the content items received from the individual content item sources as push notifications to members of the social network according to the adjusted value of the content items and according to any of a variety of considerations that may reflect on what content items are presented to the users of the social network.

One or more of the application server modules the content item publishing module or the social network system generally may include a federator module . As will be disclosed in detail herein the federator module may allow for content items from multiple content item sources to be combined into a single feed for transmission to and or display on a user interface of a member or user of the social network.

The federator module may be implemented on a separate server or may be part of a server that provides other portions of the social network system . As such the federator module in various examples incorporates any of the hardware and or software components that are or may be included in a server or other computing device conventionally known in the art including one or more processors electronic data storage devices network interfaces user input devices electronic memory and so forth. Thus it is to be understood that while the federator module is described as an integral component of a social network the principles described herein may be applied without the federator module being an integral part of a social network or even necessarily utilizing data from a social network if content items are available from alternative sources.

As illustrated the data layer includes but is not necessarily limited to several databases such as a database for storing profile data including both member profile data as well as profile data for various organizations. Consistent with some examples when a person initially registers to become a member of the social network service the person may be prompted to provide some personal information such as his or her name age e.g. birthdate gender interests contact information home town address the names of the member s spouse and or family members educational background e.g. schools majors matriculation and or graduation dates etc. employment history skills professional organizations and so on. This information is stored for example in the database . Similarly when a representative of an organization initially registers the organization with the social network service the representative may be prompted to provide certain information about the organization. This information may be stored for example in the database or another database not shown . With some examples the profile data may be processed e.g. in the background or offline to generate various derived profile data. For example if a member has provided information about various job titles the member has held with the same or different companies and for how long this information can be used to infer or derive a member profile attribute indicating the member s overall seniority level or seniority level within a particular company. With some examples importing or otherwise accessing data from one or more externally hosted data sources may enhance profile data for both members and organizations. For instance with companies in particular financial data may be imported from one or more external data sources and made part of a company s profile.

Once registered a member may invite other members or be invited by other members to connect via the social network service. A connection may require a bi lateral agreement by the members such that both members acknowledge the establishment of the connection. Similarly with some examples a member may elect to follow another member. In contrast to establishing a connection the concept of following another member typically is a unilateral operation and at least with some examples does not require acknowledgement or approval by the member that is being followed. When one member follows another the member who is following may receive status updates or other messages published by the member being followed or relating to various activities undertaken by the member being followed. Similarly when a member follows an organization the member becomes eligible to receive messages or status updates published on behalf of the organization. For instance messages or status updates published on behalf of an organization that a member is following will appear in the member s personalized data feed or content stream. In any case the various associations and relationships that the members establish with other members or with other entities and objects are stored and maintained within the social graph database .

Activities by users of the social network system including past searches that have been conducted by the federator module may be logged as activities in the activity and behavior database . Such activities may include search terms interactions with search results and subsequent engagement with the subject of search results scores assigned to such search terms as disclosed herein communication with others via the social network engagement with content items posted on the social network joining groups following entities and so forth.

The data layer collectively may be considered a content item database in that content items including but not limited to member profiles may be stored therein. Additionally or alternatively a content item layer may exist in addition to the data layer or may include the data layer . The content item layer may include individual content items stored on individual content item sources . The member profiles and the activities may be understood to be content items while the profile database the social graph database and the member activity database may also be understood to be content item sources . Content items may further include sponsored content items as well as posts to a feed articles or links to websites images sounds event notifications and reminders recommendations to users of the social network for jobs or entities to follow within the social network and so forth.

The content item sources may be separately implemented on individual servers. In an example each content item source includes a separate processor or processing resources and separate electronic data storage. In such an example as will be disclosed in detail herein each content item source utilizes its own processing resources to access its own electronic data storage and output content items to the federator module . Additionally or alternatively some or all of the content item sources may utilize a common processor or processing resources and may access a common electronic data storage for content items to transmit the federator module . In such an example the various content item sources may represent logical divisions of common processing electronic data storage and other hardware assets incident to the provision of content items as disclosed herein. It is noted and emphasized that other suitable configurations and arrangements are contemplated as appropriate.

The social network service may provide a broad range of other applications and services that allow members the opportunity to share and receive information often customized to the interests of the member. For example with some examples the social network service may include a photo sharing application that allows members to upload and share photos with other members. With some examples members may be able to self organize into groups or interest groups organized around a subject matter or topic of interest. With some examples the social network service may host various job listings providing details of job openings with various organizations.

Although not shown with some examples the social network system provides an application programming interface API module via which third party applications can access various services and data provided by the social network service. For example using an API a third party application may provide a user interface and logic that enables an authorized representative of an organization to publish messages from a third party application to various content streams maintained by the social network service. Such third party applications may be browser based applications or may be operating system specific. In particular some third party applications may reside and execute on one or more mobile devices e.g. phone or tablet computing devices having a mobile operating system.

The content item sources may rank the content items stored therein according to the ranking parameters of the content item source . Such content item sources may include content item sources disclosed in U.S. Patent Application Publication No. 2014 0143163 USER CHARACTERISTICS BASED SPONSORED JOB POSTINGS U.S. Patent Application Publication No. 2014 0143323 USER CHARACTERISTICS BASED SPONSORED COMPANY POSTINGS and U.S. Patent Application Publication No. 2015 0039406 INDEPENDENT TARGETED SPONSORED CONTENT MANAGEMENT SYSTEM AND METHOD all of which are incorporated by reference herein in their entirety. The content item sources may thus function as first past rankers of the content items stored therein or obtained thereby.

In various examples the content item sources provide content items on the basis of a request from the federator module for content items . In such examples the federator module may request a predetermined number of content items from some or all of the content item sources or may simply request content items in response to which the content item sources may provide as many content items as each content item source deems appropriate given their own respective criteria. In various examples the content item sources may also provide content items to the federator module for provision on a user interface of a user without being prompted by the federator module . In various examples such pushed content items may be incorporated into a feed or as push notifications or separate messages on the target user s user interface.

The federator module may rank the content items provided to the federator module by the content item sources . As such the federator module may function as a second pass ranker. Based on the content items as ranked by the federator module the federator module may produce as output a content item stream that may be an http API or any of a variety of other suitable formats known in the art. The content item stream may be utilized by the messaging publishing module and or the user interface module to provide the output to the user interface of the user or member.

A protocol may be defined between the federator module and the content item sources . The federator module may utilize the protocol to make requests to the content item sources for ranked content items from some or all of the sources . The requests may be according to a conventional http protocol. The content item sources may similarly respond according to a conventional http data transfer.

The content item sources may include or may be modified to include one or more files or programs that allow the ranked content items to be transmitted and formatted according to the protocol. In an example an object notation standard may be utilized to generate the data transfer of ranked content items . In an example the JavaScript Object Notation JSON standard may be utilized. Libraries that may programmatically generate libraries that may read validate serialize and deserialize the data transfer into language specific data structures. In the above example utilizing the JSON standard the data structures may be Java objects.

As such the one or more files or programs may include a product specification file that may be incorporated into a trunk directory of one or more of the content item sources . Additionally a project build file may likewise be incorporated. A common key in the above example a JSON coordinate may be utilized between the product specification file and the project build file.

A user interface metrics module may identify content items that produce or do not produce a user interaction with the content item when displayed on a user interface of a user device. In various examples if a user interacts with a content item as displayed on the user interface such as by clicking a link sharing the content item commenting on the content item and so forth the user interface metrics module variously either receives the interaction directly or receives an indication of the interaction. For instance receiving the interaction itself may be to receive the text of a comment that was entered while receiving an indication of the interaction may be to receive a notice that a comment was entered without receiving the comment itself. The user interface metrics module is optionally coupled to the content item sources and may save the interactions as received such as in the activities database .

The social network system may provide content items to the user interface in a federating mode and a testing mode. The social network system may switch between modes from time to time and from user to user. Thus some users may receive content items as provided by the federator module and other users may receive content items with the operation of the federator module reduced or disabled altogether. In the testing mode as will be discussed in detail herein the impact of the operations of the content item sources and their function as first pass rankers may be assessed using the user interface metrics module by varying the display of content items on the user interface . In the federating mode the federator module may utilize the assessments provided by the user interface metrics module to determine the relative effectivity of the content item sources at assessing the content items stored thereon and adjust the resultant display of content items on the user interface .

The testing mode may be selectively applied to particular components of the social network system to obtain particular information as disclosed herein. In various examples individual content item sources may be selectively placed in testing mode and their output randomly or varyingly presented to the user while the output of other content item sources may be presented to users according to federation policies implemented by the federator module . In such examples newly added or modified content item sources may be dynamically tested and their results compensated for as disclosed herein while other content item sources such as those that have already been assessed in the testing mode and incorporated into the federation protocol as disclosed herein may operate statically outside of the testing mode.

The ranker module may obtain collections of content items provided from the content item sources as specified by the feed definition module . The ranker module may de duplicate the content items from the various sources may perform a second pass or global ranking of the content items and may provide the result as the output of the federator module .

The feed definition module may provide the content items or cause the content items to be provided to the ranker module . The feed definition module may map an identifier of the feed to be output to the recommender modules and the ranker module . Thus content items may be identified in the recommender modules and provided to the ranker module based on the identifier.

The recommender modules may define a mapping between the content item sources and a recommender that will provide content items based on a request for content items to be provided and one or more of the resolver modules . The resolver modules may optionally covert a format of content items as obtained from the content item sources to a common format.

The social network system may operate in the testing mode described above by obtaining content items from the content item sources and displaying the content items on the user interface A without respect to the federator module . As such the content item sources may function in their first pass ranker mode without second pass ranking provided by the federator module . In various examples the content items may still pass through the federator module as illustrated in but the second pass ranking function of the federator module may be disabled.

In an example at least one of the federator module and the message publishing module call to a content item source to obtain at least one content item for display on the user interface A. The content item may then be displayed in a particular position of the feed . In an example the position is randomly selected or pseudo randomly selected. In an example the content item may be displayed on multiple user interfaces A corresponding to multiple different users. In such an example a given content item may be iteratively moved from position to position when it is displayed on multiple user interfaces A so as to sequentially be positioned in a variety of positions over time. Additional content items may be obtained from various content item sources and positioned randomly or varyingly in positions in the various user interfaces A so as to fill out the positions of the feed .

In addition to the content items themselves the content item sources may provide the first pass ranking details of each content item to the user interface metrics module . It is noted and emphasized that in the testing mode the content items as provided may not necessarily be placed according to the first pass ranking provided by the content item sources . However the data from the first pass ranking may be utilized by the user interface metrics module to assess the quality of the first pass ranking of the various content item sources .

As displayed on the various user interfaces the content items may be interacted with as disclosed herein. The user interface metrics module may note those interactions for each content item and or the lack of interactions thereof. In various examples the user interface metrics module may also optionally note the position in which the content item was displayed when it was or was not interacted with. It is noted that the position may be superfluous if the content item is displayed randomly or sequentially varying on a relatively large number of user interfaces A.

For a given content item as displayed on user interfaces A the user interface metrics module may note the rate at which the content item was the subject of a user interaction in comparison with the first pass ranking that the content item source provided for the content item . The user interface metrics module may compare those figures with the expected interaction performance of a content item that has been placed in the positions in which the given content item has been placed.

The various content item sources may perform first pass ranking and other assessments according to schemas that are not consistent among all of the content item sources . Thus in an example a first content item sources may operate according to a first selection schema that seeks to determine a selection metric indicative of the likelihood that a given content item will be interacted with by a user. The first content item source may further operate according to a first value schema that seeks to determine a value metric of a content item as if the content item were a piece of sponsored content. It is noted that if the content item is in fact a piece of sponsored content and the content item source is for instance an advertising index the actual bid for the sponsored content item may be the value metric. The value metric may in various examples be a value in a currency such as United States dollars or other national or international currency.

In contrast to the first content item source the second content item source may operate according to a second selection schema different from the first selection schema and a second value schema different from the first value schema. Most generally selection schemas and value schemas may differ between content item sources if the same content item receives a different selection metric when run against the first selection schema and the second selection schema. It is to be noted however that most or all content items may only be run against one selection schema and one value schema because content items may tend only to be stored in one content item source .

For instance in the illustrative example for a sample content item the content item source may provide a first pass rank that suggests that the content item is at the seventy fifth 75 percentile for likely user interaction and should optimally be placed in the third position . In the example the user interface metrics module has previously determined that on average a content item randomly placed in the feed that is expected to be in the seventy fifth percentile and or is placed in the third position is interacted with by a user on average eleven 11 percent of the time. In the illustrative example the user interface metrics module determines that overall the sample content item is interacted with thirteen 13 percent of the time both overall and in the third position .

On that basis the user interface metrics module may determine that the content item source that provided the content item understates or underestimates the likely performance of the content items it ranks. The user interface metrics module may perform the testing mode analysis on multiple content items from multiple content item sources . Ultimately the user interface metrics module may characterize some or all of the content item sources according to the degree by which the content item sources overestimate or underestimate the likely user interaction with the content items the content item source provides. Thus for the content item source that provided the sample content item referenced above the user interface metrics module may utilize dozens or more content items from the content item source to determine that the content item source consistently underestimates the user engagement rate for the content items it provides by two 2 percentage points. Other content item sources may be determined to overestimate by various percentages or be essentially accurate in their assessments.

In the federating mode the federator module may obtain from the various content item sources content items and an associated selection metric and an associated value metric for each content item . The federator module may request a predetermined number of content items from some or all of the content item sources or the content item sources may individually determine how many content items to send to the federator module . It is to be further recognized that the content item sources may at least initially transmit a list or index of content items to the federator module at least until the content items are selected by the federator module for display on the user interface A upon which point the content items themselves may be provided.

The federator module may further obtain from the user interface metrics module indications of the interactions with the content items from the various content item sources . The indications of the interactions may be on the basis of individual content items that have been tested in the testing mode or on the basis of complete content item sources that have been tested in the testing mode.

The federator module may determine an engagement value for each of the content items based on the data from the user interface metrics module . The engagement value may be representative of the inherent value of the content itself to the social network without respect to any money the content item may actually earn for the social network system . Put another way the engagement value may reflect the overall value to the social network of having good content to drive traffic to the social network without respect to directly making money off of that content.

The engagement value is based on normalized expected interactions with the content item in question. Different interactions may have different value as disclosed herein. Thus an expected viewing of a link in the content item may be worth 0.01 an expected comment on the content item may be worth 0.02 an forwarding or sharing of the content item may be worth 0.03 and so forth. A baseline probably of each of those interactions occurring may be multiplied by the value of each of those interactions and then summed to obtain the engagement value of the content item . Thus if a content item has a ten percent change each of a link being clicked a comment made and of being shared then for those interactions the engagement value would be 0.01 0.1 0.02 0.1 0.03 0.1 0.006 though it is noted that those interactions are not exhaustive. Furthermore the interactions may be valued differently for different implementations.

In an example the inherent value represented by the engagement value may vary at least in part based on either the user from whom the content item was received or to whom the content item is to be displayed. Thus certain content items may have a higher engagement for certain types of users than other types of users. The federator module may adjust the engagement value for a content item based on user profile data and activities for the user to whom the content item is displayed. Thus for instance the engagement value for a content item received from a CEO may be doubled relative to the engagement value for a content item received from a non managerial employee of the same company.

If the user interface metrics module provided data for the particular content item then the engagement value may be based only on the data related to that content item . If the user interface metrics module provided data for the content item source then all of the content items from that source may have an engagement value determined based on the same factors.

While the engagement value is not a monetary value the engagement value may be scaled or otherwise computed to allow equivalence between the engagement value and the monetary value of the content item . The engagement value may be adjusted based on the selection metric and value metric of the content item to account for the overestimation or underestimation of the likely interaction or value of the content item by the selection and value schemas of the content item source . Thus for instance in the above example the federator module may determine that the value of a content item from the sample first content item source described above should be increased by 0.005 to account for the fact that the content items from that source routinely underestimates the user interaction with the content items by two 2 percentage points.

It is to be emphasized that the engagement and monetary values are in fact unit less and may have any suitable numerical value. For the purposes of explanation in the disclosure herein the values disclosed herein have been normalized to an equivalent monetary value that is to say even though the engagement value is not a monetary value it is selected and scaled so that it is numerically equivalent or relevant to a currency value e.g. United States dollars. Thus in a simplified description for the purposes of illustration the engagement value is in essence described as being calculated as an equivalent monetary value and combined with an actual monetary value to create the utility value of equivalent monetary value. However it is to be noted and emphasized that the utility value does not need to represent an equivalent monetary value and rather can be directed at any value that administrators of the social network may have.

Thus while the steps described herein may relate to bringing the engagement value into line with the monetary value the opposite may readily be implemented to bring the monetary value in alignment with the engagement value according to the same principles. Thus in a simplified example one user interaction with a content item may have an engagement value of 1 and monetary values may for instance be multiplied by a factor of twenty 20 i.e. a monetary value of 0.005 is the equivalent to one interaction. It is to be readily understood that any suitable values value ranges may be implemented.

As such the utility value may express a propensity for an associated content item to lead to any outcome that has value to the social network. In an example the utility value may be tied to a number of down stream interactions that may stem from an initial interaction with a content item. A down stream interaction may stem from for instance a member selecting a link for a content item as the initial interaction and any subsequent selections of links or comments and the like on the webpage that was linked to would be a down stream interaction. The relative value of down stream interactions may be identified based on social network policies in relation to the value of sponsored content items and implemented according to the principles described herein. Further examples of the actual policy or objective of the utility value such as growth of the membership of the social network may similarly be implemented according to these principles. As such federator module may be sensitive to the impact on those objectives that the changes to the initial rankings of the content item sources may cause and adjust the changes accordingly.

The user interfaces B C of depicts a push notification of a content item as provided by the federator module . As described above the user interface A includes the feed in which the federator module transmits a command to individual content item sources to provide content items for display on the user interface A according to the mechanisms disclosed herein. Thus the feed is in such examples generated according to the command of the federator module .

By contrast the user interfaces B C include a push notification of a single content item provided by one content item source . The push notification exists outside of the context of the feed as illustrated as a popup window or screen in the user interfaces B C. In various alternative examples the push notification may be integrated into the user interfaces B C as a bar or window that may exist separate from but in the same screen as the feed .

The user interfaces B C are user interfaces presented on different user devices. In an example the user interface B is presented on a personal computer such as a work station a desktop computer a laptop computer or other computing device conventionally referred to as a personal computer or which is not otherwise considered to be readily usable as a mobile device . The user interface C is presented on what is conventionally referred to as a mobile device such as a smartphone a tablet computer a media player a personal digital assistant PDA and the like. It is to be recognized and understood that any of a variety of computing devices may be categorized according to the personal computer and mobile device classification as appropriate and that additional classifications may be implemented according to the principles disclosed herein.

As will be disclosed in detail herein the federator module may select for one member associated with both user interfaces B C a content item as provided by the content item sources based at least in part on a suitability of the content item for the particular user interface B C and associated user device type on which the push notification is to be displayed. While in various circumstances the user device type may not matter for which content item is to be displayed as a push notification in other circumstances the federator module may select a first content item for display to the member on the user interface B but a different second content item for display to the same member on the user interface C.

As will be disclosed in detail herein individual content item sources are configured to provide individual content items to the federator module without prompting from the federator module . Rather the federator module occasionally receives a content item from a content item source according to selection criteria of the content item source itself and then decides according to the criteria disclosed herein whether or not to display the content item as received as a push notification on the user interface B.

In an example the content item sources generate content items for the push notification according to the same mechanisms provided for supplying multiple content items for provision to the feed . Thus some or all of the content item sources according to their individual selection metrics identify a content item that may be of interest to a member associated with the user interface B or may be likely to result engagement by the member. The individual content item sources then provide their individual content items to the federator module to generate a utility value according to the mechanisms disclosed herein including adjustments for the quality of the individual content item source from which an individual content item was provided.

In various examples the content item sources provide their content item for a push notification in conjunction with other content item sources e.g. on a set schedule or based on a condition such as the member logging in to the online social network system . Additionally or alternatively the content item sources may provide content items according to asynchronous conditions such as in the event that the content item source identifies in the course of other operations a content item that may be suitable for the member. Thus the federator module may receive multiple content items one from each content item source as potential push notifications synchronously such as simultaneously or essentially simultaneously or may receive single content items from single content item sources asynchronously. In the first case the federator module may select one content item from among the pushed content items . In either case the federator module may determine if any content item is presented as a push notification based on the determined utility value for the content item in comparison with other utility values of the other content items and or a threshold utility value that may be met to display any content item as a push notification at all. These operations are discussed in detail in .

The federator module may then generate a utility value for each of the content items . The utility value reflects an engagement component and a monetary component. The engagement component is in an example comprised of the selection metric multiplied by the engagement value. The value component is in an example comprised of the value metric. The engagement component and the value component are in an example added together to obtain the utility value. The utility value may represent a normalized value for the content item . In various examples the federator module obtains a utility value for each of the content items obtained from the content item sources .

In an example the utility value will depend on a status of the content item as organic content or sponsored content. The utility value of a sponsored content item may be the engagement component e.g. the engagement value multiplied by the selection metric added to the value metric. The value metric for the sponsored content item may be a bid that the sponsoring entity has paid or will pay for the sponsored content item multiplied by the selection metric. In an example the value metric is thus computed by multiplying the estimated interaction rate for the sponsored content item by the amount of money the sponsoring entity promised to pay every time the sponsored content item is selected by a user. Thus the utility value for a sponsored content item would be the sum of the expected monetary value of the sponsored content item and the engagement value of the sponsored content item. Put another way the value of a sponsored content item may be realized in both the ability of the content item to drive user engagement with the social network and the ability of the content item to directly generate revenue.

The utility value of an organic or unsponsored content item on the other hand would in the above example be based entirely on the ability of the content item to generate engagement with the social network. Thus the utility value for the organic content item would be only the engagement component the engagement value multiplied by the selection metric . Thus it may be discerned that a piece of organic content that drives a great deal of user engagement may have a higher utility value than a piece of sponsored content that that drives relatively little user engagement. Further a piece of sponsored content that has the same or similar user engagement as an organic content item would have the higher utility value because of the monetary component all other things being equal the utility value for a content item that is sponsored would be higher than the utility value of a sponsored content item that is organic.

The federator module may thus in essence establish a normalized monetary value for each of the content items it receives for display on the feed of the user interface . In so doing the federator module may both consistently establish the relative value of the content items it receives regardless of the first pass ranker schemas utilized by the content item sources and provide a framework by which the value of a sponsored content item may be compared against an organic content item and vice versa. Thus both the value of the organic content items may be quantified and organic content items may be accurately positioned relative to sponsored content items on the feed .

In particular the federator module may include as part of the stream the relative utility values of the content items to the user interface module . Alternatively the federator module may simply order the content items within the stream according to their respective utility values. The user interface module may then cause the content items to be sequentially placed in the positions at least in part according to their utility values. Thus in an example the highest utility value may be positioned in the first position the second highest utility value in the second position and so forth. Alternatively additional factors may be implemented in order to meet certain conditions.

The conditions may in various cases specify displaying sufficient sponsored content items to generate a maximal amount of revenue while maintaining user engagement in the form of interactions with the content items above a predetermined threshold. Thus the sum of the engagement components of some or all of the content items that may be displayed over a period of time may be plotted against the sum of the value components of the content items that may be displayed over a period of time. In selecting the content items for the stream the federator module may select content items with sufficiently high engagement components to maintain the desired user engagement and then among that population select the content items with the highest value component.

The above example is simplified and it is to be understood that multi objective optimization techniques may be applied to the population of content items as appropriate. The constraints of the multi objective optimization may be applied separately to different types of users depending on the activities conducted by the individual users. Thus certain users may be relatively more likely to select sponsored content items than other users. Those users may be presented with more sponsored content items than other users thereby potentially increasing both the value metric as sponsored content may be directed to the users most likely to select the sponsored content and thus provide the revenue as well as engagement as more scope may thus be had to display content items with relatively high engagement components.

The principles applied to direct knowledge of the propensity of users to select sponsored content may be applied based on general user characteristics. Thus it may be determined that males of a certain age education and career may be relatively more likely to select sponsored content than women of the same age education and career. Those relationships may be determined empirically such as by being objectively determined in the testing mode. The difference in the likelihood of a certain demographic of user to select or not select sponsored content may produce a proportional increase in the rate at which sponsored content is displayed. Thus if a certain demographic of user is twenty five percent more likely to select a sponsored content item than the average user then users of that demographic may be presented with twenty five percent more sponsored content. Alternatively the additional sponsored content a user is presented with may be selected as a multi objective optimization variable such as to maximize revenue while maintaining user engagement and may not necessarily be tied to any particular percentage.

The federator module may be configured to retain sponsored content items in a particular order prior to or while including the sponsored content items in the stream . In various examples sponsored content items may be ranked with respect to one another prior to determining and applying the engagement value to the sponsored content items. After obtaining the engagement value the sponsored content items may be re ranked with respect to the organic content items. However in certain examples the sponsored content items may not be re ranked with respect to one another. Doing so may maintain the relative position of the sponsored content items for regulatory purposes. The fixing of the position of certain content items with respect to one another may be configurable based on any regulatory requirements in any relevant jurisdictions. The fixing of the position of certain content items may also be based on business needs or any other suitable factors.

The principles described herein with regard to the federation of individual content items apply as well to the federation of aggregated content items. An aggregated content item may be a combination of individual content items combined or otherwise placed together so that they may be displayed in a single position in contrast with conventional individual content items which are displayed one per position . The aggregated content item may be made up of individual content items that are related to one another in some way such as by being related to common news or members of the social network who share a common personal characteristic such as a job a job status a school and so forth.

Individual content items as displayed on the feed may not generate much user interaction by themselves but may generate more interest when presented as an aggregated content item. For instance the news that a first member has changed jobs to Company X may not generate much interest by itself. However an aggregated content item that seven members have all changed jobs to Company X in the last three days may generate much more user interaction than seven separately listed content items .

An aggregated content item A is illustrated in the user interface in . In contrast to conventional content items the aggregated content item references more than one discrete event occurrence or member. Thus the aggregated content item A states that members X Y and Z all joined Company A in the last two days. A conventional non aggregated content item might merely state that member X joined Company A yesterday by way of illustration.

The federator module may be configured to rank the aggregated content item A consistent with the ranking of other content items described herein. That is to say the federator module may determine a utility value for the aggregated content item A based on an engagement value of the aggregated content item A and if the aggregated content item A is a sponsored aggregated content item A or includes at least some sponsored content a monetary value as well.

In an example a distribution of utility values of the constituent content items of the aggregated content item A may be utilized to determine the utility value of the aggregated content item A. The distribution of utility values of the constituent content items may also be utilized by the federator module to determine if individual content items should be removed from the aggregated content item A in order to improve the overall utility value of the content items included in the aggregated content item A. While utility values will be discussed herein it is to be recognized and understood that any of a variety of metrics may be utilized for decision regarding the aggregation of content items. For instance basic estimated selection metrics such as estimated interactions or click through rates may be utilized in addition to or instead of the utility value.

To determine the utility value of an aggregated content item A or in various examples a proposed aggregated content item A the federator module utilize multiple models based on various factors. The models may be empirically determined based on arbitrarily generating aggregated content items A in the testing mode described herein and randomly presenting those aggregated content items A on user interfaces . In various examples individual models are based on a distribution of utility values of the constituent content items a time since or over which the content items were obtained or generated and an overall number of content items in the feed .

The distribution model may be based on an average of utility values of individual content items a maximum one of the utility values of the individual content items a minimum one of the utility values of the individual content items and a standard deviation of the utility values of the individual content items among other potential factors. The interplay of those factors may be determined empirically. In an example the distribution model may determine the utility value of the aggregated content item by computing the average utility value of the constituent content items and adjusting for the standard deviation of the utility values of the content items .

Thus for instance it may have been empirically determined that the distribution model tends to produce an accurate utility value for the aggregated content item A based on the average of the utility values of the individual content items A adjusted upward for a relatively small standard deviation and adjusted downward for a relatively large standard deviation. For instance a standard deviation less than twenty five percent of the average may be small and provide a bonus while a standard deviation greater than or equal to twenty five percent may be large and provide a penalty. The bonuses and penalties may be proportional to size of the standard deviation. By way of illustration if the average utility value is 0.005 and the standard deviation is 0.001 then the utility value of the aggregated content item may be 0.005 10 0.00125 0.001 0.0075 where the 0.005 value is the average utility value of the content items the 0.00125 value is twenty five percent of the average the 0.001 value is the standard deviation and the 10 value is an empirically determined bonus multiplier. The distribution model then would provide a utility value for the aggregated content item A of 0.0075.

The time and amount of content items models may function in the same or similar ways. The time model may assign bonus utility values to content items based on a time since the content item in question was generated. The utility values may be assigned based on an empirically determined decay model. For example a content item that is less than one day old may have a bonus utility value of 0.001 more than one but less than two days old may be 0.0005 more than two but less than three days may be 0.0025 and so forth. The utility values for the time model may then be combined utilizing some or all of the factors for the distribution model e.g. average minimum maximum and standard deviation.

Relatedly the overall number of content items in the feed may tend to factor the utility values of individual content items over the utility value of the aggregated content item A so as to provide more or fewer content items for the feed . Thus if the federator module has relatively few content items for the feed then the individual content items of the aggregated content item A may be given a relatively high bonus utility value while the aggregated content item A as a whole may be given a relatively low bonus utility value. By so doing the content items of the aggregated content item A may be more likely to be broken out of the aggregated content item A and presented individually on the feed . Conversely if the federator module has a relatively large number of available content items then the federator module may subtract utility value from the content items of the aggregated content item A making the content items more likely to remain part of the aggregated content item A.

The individual models may all be individually implemented and then manipulated together or otherwise compared. In an example the individual models may be averaged or may be added together to obtain a final utility value for the aggregated content item A. Alternatively only one determined utility value may be utilized for instance by selecting a maximum value minimum value or middle value among the utility values provided by the various models. Further alternatively individual models may be separately assessed in the testing mode and given bonus or negative weight or otherwise favored or disfavored based on the performance in the testing mode. Thus a model that consistently accurately provides a utility value may be weighted higher than a model that inconsistently provides accurate utility values. Alternatively only the best single model may be utilized though other models may be used particularly in testing mode to seek to improve the results of the models and utilize the models at a later date.

Based on the final utility value for the aggregated content item A the federator module may display the aggregated content item A in an appropriate position depending on the utility values of other content items not display the aggregated content item A at all and or separate individual content items out of the aggregated content item A if those individual content items have utility values greater than the utility value of the aggregated content item A. In an example if the aggregated content item has a utility value of 0.003 but one content item of the aggregated content item A has a utility value of 0.004 and another has a utility value of 0.005 then those content items may be removed from the aggregated content item A. In various examples the aggregated content item A may be recomputed to determine its new utility value or may be inserted into the stream in a position appropriate to its utility value.

The utility values of content items including herein both individual content items and aggregated content items A may be based on a relevance of the content item to the profile data and activities of the member to whom the content items are to be or may be presented. In various examples profile data and activities may be utilized by the federator module along with other factors to adjust the utility value of content items . The federator module may thus provide content items according to their value to the member to whom the content items are presented rather than to a generic or generalized member.

In an example a member may have an identifiable affinity for certain item types i.e. the member may prefer certain types of content items over others. Similarly the member may dislike certain types of content items . The affinity for content item types may be based both on inferences from the profile data of the member and past history as evidenced by the member s activities .

While the principles related to affinity are described with respect to utility values it is to be recognized and understood that they may apply equally well to circumstances that provide content items outside of the utility value framework. Thus bonuses to simple relevance factors or other metrics by which content items may be selected for display to users of a social network may also be applied consistent with this disclosure.

In an example a member who has profile data indicating that they are a computer programmer may tend to have an affinity for articles and links related to computer programming computers generally engineering generally and so forth. In an example the utility value of such types of content items may be given a bonus for each profile data item that correlates with the content item type. Similarly computer programmers may tend to be neutral towards other types of content items and may affirmatively dislike other types of content items .

The federator module may identify such correlations across multiple members. Thus the federator module may identify that computer programmers generally are fifty percent more likely to interact with content items related to computer programming than the population of members of the social network generally. In such an example the utility value of computer programming content items may be given a fifty percent bonus. Alternatively the bonus may be of a different percentage or may be a fixed value for matching a type with which the member has an affinity e.g. a bonus of 0.001 to the utility value. Any of a variety of suitable bonuses may be applied and such bonuses may also be negative for members who tend to dislike a content item type.

The principles for profile data apply as well to activities for a particular member. Thus if a member s activities indicate that the member tends to interact with computer science content items forty percent more frequently than members of the social network in general the utility value of computer science content items may receive a bonus. The bonus may be according to any suitable mechanism including the mechanisms described above.

The bonuses may be cumulative across multiple profile data and activities for a single content item or may be based on a single most significant factor. The single most significant factor may be a member s own activities with profile data being utilized if in the event the activities are unavailable or not extensive enough to establish a preference. Thus if a member s profile data indicates that the member would be expected to have an affinity for a content item type but the member s activities indicate that the member dislikes the content item type then the utility value of the content item may be reduced rather than increased.

The principles described with the item type affinity may be applied to other concepts as well. In an example members may have an affinity for the source of a content item rather than the content of the content item itself. Thus members may tend to click on links in a content item or otherwise interact with a content item if the content item is provided by a particular source. Such sources may include individuals companies groups and the like. Such sources may include the social network system itself such as for automatically generated content items .

Source affinity may be unique to each member. Thus source affinity may be based on activities for the particular member and may not necessarily be based on profile data of the member. Alternatively certain profile data may be indicative of a propensity for source affinity. Thus computer programmers may have a source affinity for certain celebrities in computer programming that may be factored in the same manner described above with respect to profile data and item type affinity.

Network size affinity may also be utilized to provide a utility value bonus. The social graph data for a member who posts a content item to the social network may be compared against the social graph data of a member to whom the content item may be presented. If the number of connections in the social graph data of the two members is broadly similar then the content item may receive a bonus to the utility value for display on the feed of the potential receiving member. In an example two social graphs have a similar number of connections if the number of connections are within twenty five percent of one another. Alternative percentages or absolute numbers of connections may be utilized as appropriate.

The bonus may be increased the closer in numbers the two social graphs are. Thus the bonus may be 0.005 if the social graphs are within twenty five percent 0.003 if the social graphs are between seventy five and twenty five percent and 0.001 if the social graphs are between seventy five and one hundred percent of one another. The bonus may be negative if the social graphs are larger than a certain percentage. In an example if the social graphs are more than two hundred percent of one another then the penalty may be 0.001 and so forth. It is to be recognized that the percentages may be from comparing the largest number of connections with the smallest number of connections for the purposes of this illustration. Thus if the connections were one hundred twenty five and one hundred then the percentage would be twenty five percent. If the connections were two hundred and one hundred then the percentage would be one hundred percent. If the connections were three hundred and one hundred then the percentage would be two hundred percent and so forth.

Affinities may be combined with one another to produce relatively more complex affinities. Thus in an example the content item type affinity may be combined with the network size affinity or network size generally. Utility values between various affinity metrics may be added multiplied or otherwise combined together to provide a broader affinity bonus. The federator module may empirically determine for instance in the testing mode and further correlation between individual affinities and adjust combined bonuses accordingly. As such the combination of content item type affinity and network size may produce a different bonus depending on how those affinities relate in actual practice.

The federator module may utilize various techniques to provide content items in the feed in a manner that is financially efficient for the social network as well as useful to and visually pleasing for the member to whom it is presented. In particular the federator module may provide for blending of content items so that particular types of content items do not clump or otherwise dominate the feed notwithstanding the absolute utility values of those content items . Further the federator module may provide for diversity of content item type on the feed .

Blending of content items may utilize the data from the content item type analysis above to prevent undue clumping of content items of the same type from occurring. In various examples content item types may include sponsored or organic content content items provided by the same source content items related to the same topic content items providing the same type of information such as members who change jobs or notices that an entity is trending and so forth and so forth.

The federator module may utilize the testing mode to identify degrees of blending or lack thereof that promote user interaction with content items in the feed . The federator module may empirically determine degrees of blending according to the same content item types in adjacent positions a number of the same content item type in consecutive positions a percentage of the same content item type in consecutive positions e.g. three content items of the same type in five consecutive positions and so forth. The federator module may utilize the testing mode to display content items according to their utility values but without respect to blending concepts and then iteratively apply different blending concepts to empirically determine blending concepts that provide for optimized user interaction with content items optimized utility value and any of a variety of other metrics.

In an example the federator module may operate in the testing mode to determine blending concepts by testing concepts of varying stringency. Thus a blending concept may mandate no content items of the same type in adjacent positions . A less stringent blending concept may mandate that two content items of the same type may be in adjacent positions but not three and so forth. Blending concepts may also be sensitive to certain types of content items but intentionally not other types. Thus in an example the blending concepts may be sensitive or more sensitive to certain content item types and not others. By way of illustration a first blending concept may require that sponsored content items not be placed in adjacent positions while a second blending concept implemented concurrently with the first blending concept may require that not more than three content items provided from the same source be placed in five consecutive positions and so forth.

It is to be recognized that certain blending concepts may be produce results that are inconsistent or conflict with one another such as where one concept suggests a placement of a content item in a position but another concept determines that the content item cannot be placed in that position . In cases such as those the federator module may establish a hierarchy for resolving conflicts. In such a hierarchy one blending concept may control conflicts. In the above example the sponsored content blending concept may override the source blending concept. The hierarchy along with the parameters of the blending concepts may also be set as a matter of social network policy and may not necessarily be adjusted by the federator module.

The federator module may provide for diversity in the feed by adjusting utility values or associated positions of content items that are related to content items that have already been seen by a user on the feed or will already have been seen by the user on the feed . Thus in various examples a content item of a content item type with a highest utility value may be placed in a high position . The federator module may depending on the diversity criteria adjusting the utility values or positions of lower utility value content items of the content item type to prevent the other content items of the type from being in positions that are too close to the position of the highest value content item .

In an example four content items of a single content item type have utility values that would cause those content items to be placed in positions on the feed . The federator module may then apply a discount to the three content items having the lowest utility values. In an example each of the lowest value three content items would have their utility value multiplied by a predetermined factor such as 0.75 and reassessed for new positions in the feed . It is noted that the reassessment of the three content items may result in other content items of the type being repositioned accordingly. Thus if the second highest value content item of the type drops three positions because of the diversity discount then the content items in those three positions would each be moved up by one position .

Upon the application of the discount to the three content items the federator module may reassess if the diversity requirements have been met. If not the discount may be iteratively applied again to each of the content items of the type that still violate diversity requirements in such an example those content items that have the discount applied twice would have a discount of 0.75 2 0.5625. The discount may be iteratively applied to individual ones of the content items of the type until the content items of the type meet the diversity requirement.

The federator module may rank the content items it assesses according to their utility values and then apply diversity requirements to all of the content items that have been ranked or to a predetermined number of the highest ranked content items . Diversity requirements may be applied concurrently among all of the content items that are ranked or to the predetermined number of the highest ranked content items . As the diversity requirements are applied to the ranked content items the discounts may be applied to the ranked content items as appropriate. Thus content items that violate any of the diversity requirements may have the discount applied to their utility values.

Following the application of the discount to the utility values of the ranked content items the federator module may re rank the content items and reassess the content items for the diversity requirements. Content items that as re ranked violate the diversity requirements may have the discount applied again and may be re ranked. The assessment of diversity requirements the application of a discount to the utility values of content items that violate the diversity requirements and the re ranking of content items may be conducted iteratively until all of the diversity requirements are met the content items as ranked settle into a steady state or a time out condition is met following a predetermined number of iterations.

The content item types may be based on a variety of factors and each content item may have multiple item types. In an example content items may be classified according to an actor of the content item such as a user who posted an article or a user about whom the content item refers. e.g. John Doe started a new job at Company X. In an example content items may be classified according to a verb or action of the content item thus in the above example a content item may have as a verb or action started a new job . In an example content items may be classified according to an object of the content item thus in the above example the object would be Company X .

The diversity requirement may be general in the feed or may be local in the feed . In an example a local diversity requirement may require diversity among the positions that are displayed on the feed at any one time but not for positions that are not or cannot be displayed concurrent with the positions that are currently displayed. Thus in an example if the feed as a whole only displays five positions at a time then the diversity requirement may only be applied to the content items that would be displayed in those five positions based on the initial utility value ranking.

The federator module may utilize the testing mode to optimize diversity requirements. The optimization may be generally applied across the members and users of the social network or may be individually applied to members based on those member s responses to various diversity requirement implementations. Thus the federator module may randomly vary diversity requirements and for instance allow four content items of the same type within an eight position block when the base diversity requirement is for only three content items of the same type and assess the reaction of users to the relatively less diverse requirement. If the less diverse requirement produces greater user interaction with content items in the feed then the less diverse requirement may be implemented as the default diversity requirement. It is to be recognized that these principles may be applied to individual members of the social network for personalized diversity requirements.

At operation first and second content items are provided from first and second content item sources to the federator module . As disclosed herein the provision of the first and second content items may be synchronous e.g. based on a common criterion such as a time or an event e.g. the member logging in to the online social network or asynchronous e.g. a content item source determining without respect to an external condition such as time or an event that a content item may be presented as a push notification . In any event over time the first and second content item sources each provide one content item to the federator module for consideration as push notifications whether synchronously or asynchronously.

In various examples each content item source provides at most one and only one content item for consideration by the federator module for provision as a push notification . Certain content item sources may provide no content items . However it is to be understood that the principles described herein may also be applied to alternative examples in which a single content item source may provide more than one content item for concurrent consideration as a push notification.

At operation the federator module determines from the user interface module a device type of the user device to which a push notification may be transmitted and as a consequence whether the push notification is to be presented on the user interface B or the user interface C. In various examples the federator module differentiates between personal computer device types and mobile device types as disclosed herein.

At operation the federator module determines a first engagement value for the first content item and a second engagement value for the second content item by the federator module . The first and second engagement values are determined according to any or all of the mechanisms disclosed herein. The first and second engagement values may be determined specific to the user interface B C on which the first and second content items may be determined. Thus the activity data may further be considered on the basis of the user device type on which the associated content items have been displayed. In a simplified illustrative example if the first content item has a ten 10 percent higher rate of user engagement when displayed on the user interface B than on the user interface C the first engagement value may be adjusted accordingly depending on whether the push notification is to be sent to the user interface B or C as determined at operation .

At operation the federator module determines first and second utility values for the first and second content items respectively based on the first and second engagement values respectively and selection metrics of the first and second content item sources respectively all as disclosed in detail herein. To the extent that one of the content items is a sponsored content item a value metric such as a monetary bid or an amount of money that would be realized based on a provision of or engagement by the member with the sponsored content item is also included in the utility value again as disclosed in detail herein.

At operation the federator module selects one of the first content item and the second content item as a push content item for display as the push notification . In various examples the federator module selects one and only one content item for display as a push notification at any given time. However in various alternative examples the principles disclosed herein may be adapted to configure the federator module to select multiple content items for display as push notifications simultaneously e.g. as multiple push notifications in a single window or over a short period of time e.g. a second push notification is displayed immediately after a first push notification is closed or dismissed .

The federator module may utilize any of a variety of criteria for selecting the one of the first and second content items as the push content item. At operation the federator module selects the push content item by identifying the highest or most valuable utility value of the first and second utility values and selecting the corresponding one of the first and second content items . At operation the federator module selects the push content item by determining if the first or second utility values qualifies relative to a threshold value. In various examples if a content item does not have a utility value that meets or exceeds the threshold value then the content item is not eligible as a push notification .

In various examples both of the operations and are implemented. Thus in such an example if both of the first and second utility values meets or exceeds the threshold value then the content item corresponding to the highest utility value is selected as the push content item. If only one of the utility values meets or exceeds the threshold then the corresponding content item is selected as the push content item and if none of the utility values meets or exceeds the threshold value then no content items are selected as push content items. By way of illustration if the first utility value is 0.1 the second utility value is 0.08 and the threshold value is 0.1 then the first content item is selected as the push content item by virtue of the corresponding utility value being the only one to meet the threshold value as well as by virtue of the corresponding utility value exceeding the second utility value. In the event of a tie between utility values the federator module may variously implement any suitable tie breaking mechanism or select both corresponding content items as push content items.

At operation the federator module determines if the push content item as selected at operation meets one or more duplication criteria. In various examples a duplication criterion is that the push content item can never have been displayed as a push notification to the member before. Alternatively the duplication criterion is that the push content item has not been displayed as a push notification to the member since a predetermined time e.g. two weeks one month or any of a variety of predetermined times that may be selected based on the priories of system administrators.

Further a duplication criterion may be based on a content item type of the push content item. Thus if the member has received a push notification of a content item of the same type as the push content item over a predetermined period of time the duplication criterion may be violated. The content item type may be based on any of the content item types disclosed herein or any other content item type that may desirably be implemented to prevent undesired duplication over predetermined time periods. Thus content item types may be based for instance on the subject of or actor in a news story with the duplication criteria being that another news item having the same object or actor not be provided as a push notification over a predetermined period of time different than that of news stories in general. These principles may be applied to any general content item type thus job notices form a particular employer may have a longer predetermined time than job notices in general.

As such different content item types may have different predetermined times over which they apply dependent on the policies of the social networking system administrators. Thus for instance the predetermined time period may be several days or one week for job recommendation content items but the predetermined time period for status updates of individual members may be multiple weeks or more. The predetermined time may be adjusted over time for individual members based on their engagement with content items as provided as push notifications and as stored as activities . Thus if a member s engagement with a content item type does not deteriorate in spite of comparatively frequent push notifications of that content item type then the predetermined time may be reduced. Similarly if engagement with the content item type does decrease then the predetermined time may be lengthened.

Multiple duplication criteria may be applied simultaneously as appropriate. Thus a duplication criterion may be applied for a news story another duplication criterion may be applied for a subject of the content item and so forth. In an example if any one duplication criterion is violated then the push content item may fail the duplication criteria. Alternatively other pass fail criteria may be applied. For instance if a push content item passes two criteria by fails one criterion then the push content item may be deemed to pass overall.

If the push content item passes the one or more duplication criteria then the federator module proceeds to operation . If the push content item fails duplication then the federator module removes the content item that was identified as the push content item and returns to to either identify a new push content item and proceed according to the flowchart or no select a push content item at all.

At operation the user interface module causes the push content item to be displayed as a push notification on the user interface of the user device associated with the member. As disclosed herein the user interface module formats the push notification as appropriate for display on the user interface .

The machine includes a processor e.g. a central processing unit CPU a graphics processing unit GPU a digital signal processor DSP an application specific integrated circuit ASIC a radio frequency integrated circuit RFIC or any suitable combination thereof a main memory and a static memory which are configured to communicate with each other via a bus . The machine may further include a graphics display e.g. a plasma display panel PDP a light emitting diode LED display a liquid crystal display LCD a projector or a cathode ray tube CRT . The machine may also include an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse a touchpad a trackball a joystick a motion sensor or other pointing instrument a storage unit a signal generation device e.g. a speaker and a network interface device .

The storage unit includes a machine readable medium on which is stored the instructions e.g. software embodying any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory within the processor e.g. within the processor s cache memory or both during execution thereof by the machine . Accordingly the main memory and the processor may be considered as machine readable media. The instructions may be transmitted or received over a network via the network interface device .

As used herein the term memory refers to a machine readable medium able to store data temporarily or permanently and may be taken to include but not be limited to random access memory RAM read only memory ROM buffer memory flash memory and cache memory. While the machine readable medium is shown in an example embodiment to be a single medium the term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database or associated caches and servers able to store instructions. The term machine readable medium shall also be taken to include any medium or combination of multiple media that is capable of storing instructions e.g. software for execution by a machine e.g. machine such that the instructions when executed by one or more processors of the machine e.g. processor cause the machine to perform any one or more of the methodologies described herein. Accordingly a machine readable medium refers to a single storage apparatus or device as well as cloud based storage systems or storage networks that include multiple storage apparatus or devices. The term machine readable medium shall accordingly be taken to include but not be limited to one or more data repositories in the form of a solid state memory an optical medium a magnetic medium or any suitable combination thereof.

Throughout this specification plural instances may implement components operations or structures described as a single instance. Although individual operations of one or more methods are illustrated and described as separate operations one or more of the individual operations may be performed concurrently and nothing requires that the operations be performed in the order illustrated. Structures and functionality presented as separate components in example configurations may be implemented as a combined structure or component. Similarly structures and functionality presented as a single component may be implemented as separate components. These and other variations modifications additions and improvements fall within the scope of the subject matter herein.

Certain embodiments are described herein as including logic or a number of components modules or mechanisms. Modules may constitute either software modules e.g. code embodied on a machine readable medium or in a transmission signal or hardware modules. A hardware module is a tangible unit capable of performing certain operations and may be configured or arranged in a certain physical manner. In various example embodiments one or more computer systems e.g. a standalone computer system a client computer system or a server computer system or one or more hardware modules of a computer system e.g. a processor or a group of processors may be configured by software e.g. an application or application portion as a hardware module that operates to perform certain operations as described herein.

In some embodiments a hardware module may be implemented mechanically electronically or any suitable combination thereof. For example a hardware module may include dedicated circuitry or logic that is permanently configured to perform certain operations. For example a hardware module may be a special purpose processor such as a field programmable gate array FPGA or an ASIC. A hardware module may also include programmable logic or circuitry that is temporarily configured by software to perform certain operations. For example a hardware module may include software encompassed within a general purpose processor or other programmable processor. It will be appreciated that the decision to implement a hardware module mechanically in dedicated and permanently configured circuitry or in temporarily configured circuitry e.g. configured by software may be driven by cost and time considerations.

Accordingly the phrase hardware module should be understood to encompass a tangible entity be that an entity that is physically constructed permanently configured e.g. hardwired or temporarily configured e.g. programmed to operate in a certain manner or to perform certain operations described herein. As used herein hardware implemented module refers to a hardware module. Considering embodiments in which hardware modules are temporarily configured e.g. programmed each of the hardware modules need not be configured or instantiated at any one instance in time. For example where a hardware module comprises a general purpose processor configured by software to become a special purpose processor the general purpose processor may be configured as respectively different special purpose processors e.g. comprising different hardware modules at different times. Software may accordingly configure a processor for example to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.

Hardware modules can provide information to and receive information from other hardware modules. Accordingly the described hardware modules may be regarded as being communicatively coupled. Where multiple hardware modules exist contemporaneously communications may be achieved through signal transmission e.g. over appropriate circuits and buses between or among two or more of the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times communications between such hardware modules may be achieved for example through the storage and retrieval of information in memory structures to which the multiple hardware modules have access. For example one hardware module may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware module may then at a later time access the memory device to retrieve and process the stored output. Hardware modules may also initiate communications with input or output devices and can operate on a resource e.g. a collection of information .

The various operations of example methods described herein may be performed at least partially by one or more processors that are temporarily configured e.g. by software or permanently configured to perform the relevant operations. Whether temporarily or permanently configured such processors may constitute processor implemented modules that operate to perform one or more operations or functions described herein. As used herein processor implemented module refers to a hardware module implemented using one or more processors.

Similarly the methods described herein may be at least partially processor implemented a processor being an example of hardware. For example at least some of the operations of a method may be performed by one or more processors or processor implemented modules. Moreover the one or more processors may also operate to support performance of the relevant operations in a cloud computing environment or as a software as a service SaaS . For example at least some of the operations may be performed by a group of computers as examples of machines including processors with these operations being accessible via a network e.g. the Internet and via one or more appropriate interfaces e.g. an application program interface API .

The performance of certain of the operations may be distributed among the one or more processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the one or more processors or processor implemented modules may be located in a single geographic location e.g. within a home environment an office environment or a server farm . In other example embodiments the one or more processors or processor implemented modules may be distributed across a number of geographic locations.

Some portions of this specification are presented in terms of algorithms or symbolic representations of operations on data stored as bits or binary digital signals within a machine memory e.g. a computer memory . These algorithms or symbolic representations are examples of techniques used by those of ordinary skill in the data processing arts to convey the substance of their work to others skilled in the art. As used herein an algorithm is a self consistent sequence of operations or similar processing leading to a desired result. In this context algorithms and operations involve physical manipulation of physical quantities. Typically but not necessarily such quantities may take the form of electrical magnetic or optical signals capable of being stored accessed transferred combined compared or otherwise manipulated by a machine. It is convenient at times principally for reasons of common usage to refer to such signals using words such as data content bits values elements symbols characters terms numbers numerals or the like. These words however are merely convenient labels and are to be associated with appropriate physical quantities.

Unless specifically stated otherwise discussions herein using words such as processing computing calculating determining presenting displaying or the like may refer to actions or processes of a machine e.g. a computer that manipulates or transforms data represented as physical e.g. electronic magnetic or optical quantities within one or more memories e.g. volatile memory non volatile memory or any suitable combination thereof registers or other machine components that receive store transmit or display information. Furthermore unless specifically stated otherwise the terms a or an are herein used as is common in patent documents to include one or more than one instance. Finally as used herein the conjunction or refers to a non exclusive or unless specifically stated otherwise.

