---

title: Security infrastructure for cloud services
abstract: A framework for handling a secure interaction between components in a cloud infrastructure system that wish to transfer information between each other during processing of a customer's subscription order is described. The framework orders the security zones of components based on security levels and protects the transfer of information between components in security zones with different security levels. The assignment of a component to a security zone is based upon the sensitivity of the data handled by the components, the sensitivity of functions performed by the component, and the like.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09319269&OS=09319269&RS=09319269
owner: Oracle International Corporation
number: 09319269
owner_city: Redwood Shores
owner_country: US
publication_date: 20150210
---
This application is a continuation of U.S. patent application Ser. No. 13 842 269 filed on Mar. 15 2013 now U.S. Patent Application Publication No. US 2014 0075499 A1 now allowed the entire contents of which is hereby incorporated by reference in its entirety for all purposes.

The present disclosure relates to computer systems and software and more particularly to techniques for facilitating and automating the provision of services in a cloud environment.

Cloud computing is a model for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks servers storage applications and services . The services provided or accessed through the cloud or network are referred to as cloud services. There is a lot of processing that needs to be performed by a cloud service provider to make cloud services available to a subscribing customer. Due to its complexity much of this processing is still done manually. For example provisioning resources for providing such cloud services can be a very labor intensive process.

Certain embodiments of the present invention provide techniques for automating the provisioning managing and tracking of services provided by a cloud infrastructure system. In one embodiment the cloud infrastructure system stores subscription order information related to one or more services subscribed to by a customer in the cloud infrastructure system.

In one embodiment the cloud infrastructure system provides a framework for handling the secure interaction between components in the cloud infrastructure system that wish to transfer information between each other during processing of a customer s subscription order. In one embodiment the components are assigned to various security zones. The assignment of a component to a security zone may be based upon the sensitivity of the data handled by the components the sensitivity of functions performed by the component and the like.

In one embodiment the framework orders the security zones of components based on security levels. The framework protects the transfer of information between components in security zones with different security levels. A component in a higher security zone pushes information to a component in a lower security zone component and pulls information from a component in lower security zone. A component in a lower security zone may not have direct read or write access to the data managed by a component in a higher security zone. Components within the same security zone may have read or write access with respect to each other. In one embodiment the granularity provided by the security zones is a tradeoff between security and efficiency when transferring information between two components where the communication between two components belonging to security zones with the same security level is faster and more efficient than the communication between two components belonging to security zones with different security levels.

Some embodiments relate to a method for providing the secure interaction between components in a cloud infrastructure system that wish to transfer information between each other during processing of a customer s subscription order. The method includes storing subscription order information related to services subscribed to by a customer. The method then includes receiving a request to transfer the information between a first component and a second component in the cloud infrastructure and determining a first security zone for the first component and a second security zone for the second component. The method then includes determining a first security level associated with the first security zone and a second security level associated with the second security zone. Then the method includes determining the transfer of information between the first component and the second component based upon the first security level the second security level and security rules information. In one embodiment the security rules information specifies rules related to the transfer of information between the first component and the second component.

In the following description for the purposes of explanation specific details are set forth in order to provide a thorough understanding of embodiments of the invention. However it will be apparent that various embodiments may be practiced without these specific details. The figures and description are not intended to be restrictive.

Certain embodiments of the present invention provide techniques for automating the provisioning managing and tracking of services provided by a cloud infrastructure system.

In certain embodiments a cloud infrastructure system may include a suite of applications middleware and database service offerings that are delivered to a customer in a self service subscription based elastically scalable reliable highly available and secure manner. An example of such a cloud infrastructure system is the Oracle Public Cloud provided by the present assignee.

A cloud infrastructure system may provide many capabilities including but not limited to provisioning managing and tracking a customer s subscription for services and resources in the cloud infrastructure system providing predictable operating expenses to customers utilizing the services in the cloud infrastructure system providing robust identity domain separation and protection of a customer s data in the cloud infrastructure system providing customers with a transparent architecture and control of the design of the cloud infrastructure system providing customers assured data protection and compliance with data privacy standards and regulations providing customers with an integrated development experience for building and deploying services in the cloud infrastructure system and providing customers with a seamless integration between business software middleware database and infrastructure services in the cloud infrastructure system.

In certain embodiments services provided by the cloud infrastructure system may include a host of services that are made available to users of the cloud infrastructure system on demand such as online data storage and backup solutions Web based e mail services hosted office suites and document collaboration services database processing managed technical support services and the like. Services provided by the cloud infrastructure system can dynamically scale to meet the needs of its users. A specific instantiation of a service provided by cloud infrastructure system is referred to herein as a service instance. In general any service made available to a user via a communication network such as the Internet from a cloud service provider s system is referred to as a cloud service. Typically in a public cloud environment servers and systems that make up the cloud service provider s system are different from the customer s own on premises servers and systems. For example a cloud service provider s system may host an application and a user may via a communication network such as the Internet on demand order and use the application.

A service in a computer network cloud infrastructure includes protected computer network access to storage a hosted database a hosted web server a software application or other service provided by a cloud vendor to a user or as otherwise known in the art. For example a service can include password protected access to remote storage on the cloud through the Internet. As another example a service can include a web service based hosted relational database and script language middleware engine for private use by a networked developer. As another example a service can include access to an email software application hosted on a cloud vendor s web site.

Cloud infrastructure system may provide the cloud services via different deployment models. For example services may be provided under a public cloud model where cloud infrastructure system is owned by an organization selling cloud services e.g. owned by Oracle and the services are made available to the general public or different industry enterprises. As another example services may be provided under a private cloud model where cloud infrastructure system is operated solely for a single organization and may provide services for one or more entities within the organization. The cloud services may also be provided under a community cloud model where cloud infrastructure system and the services provided by system are shared by several organizations in a related community. The cloud services may also be provided under a hybrid cloud model which is a combination of two or more different models.

As shown in cloud infrastructure system may comprise multiple components which working in conjunction enable provision of services provided by cloud infrastructure system . In the embodiment illustrated in cloud infrastructure system includes a SaaS platform a PaaS platform an IaaS platform infrastructure resources and cloud management functionality . These components may be implemented in hardware or software or combinations thereof.

SaaS platform is configured to provide cloud services that fall under the SaaS category. For example SaaS platform may provide capabilities to build and deliver a suite of on demand applications on an integrated development and deployment platform. SaaS platform may manage and control the underlying software and infrastructure for providing the SaaS services. By utilizing the services provided by SaaS platform customers can utilize applications executing on cloud infrastructure system . Customers can acquire the application services without the need for customers to purchase separate licenses and support.

Various different SaaS services may be provided. Examples include without limitation services that provide solutions for sales performance management enterprise integration and business flexibility for large organizations and the like. In one embodiment the SaaS services may include Customer Relationship Management CRM services e.g. Fusion CRM services provided by the Oracle cloud Human Capital Management HCM Talent Management services and the like. CRM services may include services directed to reporting and management of a sales activity cycle to a customer and others. HCM Talent services may include services directed to providing global workforce lifecycle management and talent management services to a customer.

Various different PaaS services may be provided by PaaS platform in a standardized shared and elastically scalable application development and deployment platform. Examples of PaaS services may include without limitation services that enable organizations such as Oracle to consolidate existing applications on a shared common architecture as well as the ability to build new applications that leverage the shared services provided by the platform. PaaS platform may manage and control the underlying software and infrastructure for providing the PaaS services. Customers can acquire the PaaS services provided by cloud infrastructure system without the need for customers to purchase separate licenses and support. Examples of PaaS services include without limitation Oracle Java Cloud Service JCS Oracle Database Cloud Service DBCS and others.

By utilizing the services provided by PaaS platform customers can utilize programming languages and tools supported by cloud infrastructure system and also control the deployed services. In some embodiments PaaS services provided by the cloud infrastructure system may include database cloud services middleware cloud services e.g. Oracle Fusion Middleware services and Java cloud services . In one embodiment database cloud services may support shared service deployment models that enable organizations to pool database resources and offer customers a database as a service in the form of a database cloud middleware cloud services provides a platform for customers to develop and deploy various business applications and Java cloud services provides a platform for customers to deploy Java applications in the cloud infrastructure system . The components in SaaS platform and PaaS platform illustrated in are meant for illustrative purposes only and are not intended to limit the scope of embodiments of the present invention. In alternate embodiments SaaS platform and PaaS platform may include additional components for providing additional services to the customers of cloud infrastructure system .

Various different IaaS services may be provided by IaaS platform . The IaaS services facilitate the management and control of the underlying computing resources such as storage networks and other fundamental computing resources for customers utilizing services provided by the SaaS platform and the PaaS platform.

In certain embodiments cloud infrastructure system includes infrastructure resources for providing the resources used to provide various services to customers of the cloud infrastructure system . In one embodiment infrastructure resources includes pre integrated and optimized combinations of hardware such as servers storage and networking resources to execute the services provided by the PaaS platform and the SaaS platform.

In certain embodiments cloud management functionality provides comprehensive management of cloud services e.g. SaaS PaaS IaaS services in the cloud infrastructure system . In one embodiment cloud management functionality includes capabilities for provisioning managing and tracking a customer s subscription received by the cloud infrastructure system and the like.

Various types of users may interact with cloud infrastructure system . These users may include for example end users that can interact with cloud infrastructure system using various client devices such as desktops mobile devices tablets and the like. The users may also include developers programmers who may interact with cloud infrastructure system using command line interfaces CLIs application programming interfaces APIs through various integrated development environments IDEs and via other applications. User may also include operations personnel . These may include personnel of the cloud service provider or personnel of other users.

Application services layer identifies various cloud services that may be offered by cloud infrastructure system . These services may be mapped to or associated with respective software components e.g. Oracle WebLogic server for providing Java services oracle database for providing database services and the like via a service integration and linkages layer .

In certain embodiments a number of internal services may be provided that are shared by different components or modules of cloud infrastructure system and by the services provided by cloud infrastructure system . These internal shared services may include without limitation a security and identity service an integration service an enterprise repository service an enterprise manager service a virus scanning and white list service a high availability backup and recovery service service for enabling cloud support in IDEs an email service a notification service a file transfer service and the like.

Runtime infrastructure layer represents the hardware layer on which the various other layers and components are built. In certain embodiments runtime infrastructure layer may comprise one Oracle s Exadata machines for providing storage processing and networking resources. An Exadata machine may be composed of various database servers storage Servers networking resources and other components for hosting cloud services related software layers. In certain embodiments the Exadata machines may be designed to work with Oracle Exalogic which is an engineered system providing an assemblage of storage compute network and software resources. The combination of Exadata and Exalogic provides a complete hardware and software engineered solution that delivers high performance highly available scalable secure and a managed platform for providing cloud services.

It should be appreciated that cloud infrastructure system depicted in may have other components than those depicted in . Further the embodiment shown in is only one example of a cloud infrastructure system that may incorporate an embodiment of the invention. In some other embodiments cloud infrastructure system may have more or fewer components than shown in may combine two or more components or may have a different configuration or arrangement of components.

Client computing devices and may be general purpose personal computers including by way of example personal computers and or laptop computers running various versions of Microsoft Windows and or Apple Macintosh operating systems cell phones or PDAs running software such as Microsoft Windows Mobile and being Internet e mail SMS Blackberry or other communication protocol enabled workstation computers running any of a variety of commercially available UNIX or UNIX like operating systems including without limitation the variety of GNU Linux operating systems or any other computing device. For example client computing devices and may be any other electronic device such as a thin client computer Internet enabled gaming system and or personal messaging device capable of communicating over a network e.g. network described below . Although exemplary system environment is shown with three client computing devices any number of client computing devices may be supported. Other devices such as devices with sensors etc. may interact with cloud infrastructure system .

A network may facilitate communications and exchange of data between clients and and cloud infrastructure system . Network may be any type of network familiar to those skilled in the art that can support data communications using any of a variety of commercially available protocols including without limitation TCP IP SNA IPX AppleTalk and the like. Merely by way of example network can be a local area network LAN such as an Ethernet network a Token Ring network and or the like a wide area network a virtual network including without limitation a virtual private network VPN the Internet an intranet an extranet a public switched telephone network PSTN an infra red network a wireless network e.g. a network operating under any of the IEEE 802.1X suite of protocols the Bluetooth protocol known in the art and or any other wireless protocol and or any combination of these and or other networks.

Cloud infrastructure system may comprise one or more computers and or servers which may be general purpose computers specialized server computers including by way of example PC servers UNIX servers mid range servers mainframe computers rack mounted servers etc. server farms server clusters or any other appropriate arrangement and or combination. The computing devices that make up cloud infrastructure system may run any of operating systems or a variety of additional server applications and or mid tier applications including HTTP servers FTP servers CGI servers Java servers database servers and the like. Exemplary database servers include without limitation those commercially available from Oracle Microsoft Sybase IBM and the like.

In various embodiments cloud infrastructure system may be adapted to automatically provision manage and track a customer s subscription to services offered by cloud infrastructure system . In one embodiment as depicted in the components in cloud infrastructure system include an Identity Management IDM module a services module a Tenant Automation System TAS module a Service Deployment Infrastructure SDI module an Enterprise Manager EM module one or more front end web interfaces such as a store user interface UI a cloud user interface UI and a support user interface UI an order management module sales personnel operator personnel and an order database . These modules may include or be provided using one or more computers and or servers which may be general purpose computers specialized server computers server farms server clusters or any other appropriate arrangement and or combination. In one embodiment one or more of these modules can be provided by cloud management functionality or IaaS platform in cloud infrastructure system . The various modules of the cloud infrastructure system depicted in are meant for illustrative purposes only and are not intended to limit the scope of embodiments of the present invention. Alternative embodiments may include more or fewer modules than those shown in .

In an exemplary operation at 1 a customer using a client device such as client device or may interact with cloud infrastructure system by browsing the various services provided by cloud infrastructure system and placing an order for a subscription for one or more services offered by cloud infrastructure system . In certain embodiments the customer may access store UI or cloud UI and place a subscription order via these user interfaces.

The order information received by cloud infrastructure system in response to the customer placing an order may include information identifying the customer and one or more services offered by the cloud infrastructure system that the customer intends to subscribe to. A single order may include orders for multiple services. For instance a customer may login to cloud UI and request a subscription for a CRM service and a Java cloud service in the same order.

Additionally the order may also include one or more service levels for the ordered services. As used herein and as will be discussed in greater detail below a service level for a service determines the amount of resources to be allocated for providing the requested service in the context of the subscription such as the amount of storage amount of computing resources data transfer facilities and the like. For example a basic service level may provide a minimum level of storage data transmission or number of users and higher service levels may include additional resources.

In addition in some instances the order information received by cloud infrastructure system may include information indicative of a customer level and the time period during which the service is desired. The customer level specifies the priority of the customer making the subscription request. In one example the priority may be determined based on the quality of service that the cloud infrastructure system guarantees or promises the customer as specified by a Service Level Agreement SLA agreed to between the customer and the provider of the cloud services. In one example the different customer levels include a basic level a silver level and a gold level. The time period for a service may specify the start date and time for the service and the time period for which the service is desired e.g. a service end date and time may be specified .

In one embodiment a customer may request a new subscription via store UI or request for a trial subscription via cloud UI . In certain embodiments store UI may represent the service provider s eCommerce store front e.g. www.oracle.com store for Oracle Cloud services . Cloud UI may represent a business interface for the service provider. Consumer can explore available services and sign up for interested services through cloud UI . Cloud UI captures user input necessary for ordering trial subscriptions provided by cloud infrastructure system . Cloud UI may also be used to view account features and configure the runtime environment located within cloud infrastructure system . In addition to placing an order for a new subscription store UI may also enable the customer to perform other subscription related tasks such as changing the service level of a subscription extending the term of the subscription increasing the service level of a subscription terminating an existing subscription and the like.

After an order has been placed per 1 at 2 the order information that is received via either store UI or cloud UI is stored in order database which can be one of several databases operated by cloud infrastructure system and utilized in conjunction with other system elements. While order database is shown logically as a single database in in actual implementation this may comprise one or more databases.

At 3 the order is forwarded to order management module . Order management module is configured to perform billing and accounting functions related to the order such as verifying the order and upon verification booking the order. In certain embodiments order management module may include a contract management module and an install base module. The contract management module may store contract information associated with the customer s subscription order such as the customer s service level agreement SLA with cloud infrastructure system . The install base module may include detailed descriptions of the services in the customer s subscription order. In addition to order information the install base module may track installation details related to the services product status and support service history related to the services. As a customer orders new services or upgrades existing ones the install base module may automatically add new order information.

At 4 information regarding the order is communicated to TAS module . In one embodiment TAS module utilizes the order information to orchestrate the provisioning of services and resources for the order placed by the customer. At 5 TAS component orchestrates the provisioning of resources to support the subscribed services using the services of SDI module . At 6 TAS module provides information related to the provisioned order received from SDI module to services module . In some embodiments at 7 SDI module may also use services provided by services module to allocate and configure the resources needed to fulfill the customer s subscription order.

At 8 services module sends a notification to the customers on client devices and regarding the status of the order.

In certain embodiments TAS module functions as an orchestration component that manages business processes associated with each order and applies business logic to determine whether an order should proceed to provisioning. In one embodiment upon receiving an order for a new subscription TAS module sends a request to SDI module to allocate resources and configure those resources needed to fulfill the subscription order. SDI module enables the allocation of resources for the services ordered by the customer. SDI module provides a level of abstraction between the cloud services provided by cloud infrastructure system and the physical implementation layer that is used to provision the resources for providing the requested services. TAS module may thus be isolated from implementation details such as whether or not services and resources are actually provisioned on the fly or pre provisioned and only allocated assigned upon request.

In certain embodiments a user may use store UI to directly interact with order management module to perform billing and accounting related functions such as verifying the order and upon verification booking the order. In some embodiments instead of a customer placing an order at 9 the order may instead be placed by sales personnel on behalf of the customer such as a customer s service representative or sales representative. Sales personnel may directly interact with order management module via a user interface not shown in provided by order management module for placing orders or for providing quotes for the customer. This for example may be done for large customers where the order may be placed by the customer s sales representative through order management module . The sales representative may set up the subscription on behalf of the customer.

EM module is configured to monitor activities related to managing and tracking a customer s subscription in cloud infrastructure system . EM module collects usage statistics for the services in the subscription order such as the amount of storage used the amount data transferred the number of users and the amount of system up time and system down time. At 10 a host operator personnel who may be an employee of a provider of cloud infrastructure system may interact with EM module via an enterprise manager user interface not shown in to manage systems and resources on which services are provisioned within cloud infrastructure system .

Identity management IDM module is configured to provide identity services such as access management and authorization services in cloud infrastructure system . In one embodiment IDM module controls information about customers who wish to utilize the services provided by cloud infrastructure system . Such information can include information that authenticates the identities of such customers and information that describes which actions those customers are authorized to perform relative to various system resources e.g. files directories applications communication ports memory segments etc. IDM module can also include the management of descriptive information about each customer and about how and by whom that descriptive information can be accessed and modified.

In one embodiment information managed by the identity management module can be partitioned to create separate identity domains. Information belonging to a particular identity domain can be isolated from all other identity domains. Also an identity domain can be shared by multiple separate tenants. Each such tenant can be a customer subscribing to services in the cloud infrastructure system . In some embodiments a customer can have one or many identity domains and each identity domain may be associated with one or more subscriptions each subscription having one or many services. For example a single customer can represent a large entity and identity domains may be created for divisions departments within this large entity. EM module and IDM module may in turn interact with order management module at 11 and 12 respectively to manage and track the customer s subscriptions in cloud infrastructure system .

In one embodiment at 13 support services may also be provided to the customer via a support UI . In one embodiment support UI enables support personnel to interact with order management module via a support backend system to perform support services at 14 . Support personnel in the cloud infrastructure system as well as customers can submit bug reports and check the status of these reports via support UI .

Other interfaces not shown in may also be provided by cloud infrastructure system . For example an identity domain administrator may use a user interface to IDM module to configure domain and user identities. In addition customers may log into a separate interface for each service they wish to utilize. In certain embodiments a customer who wishes to subscribe to one or more services offered by cloud infrastructure system may also be assigned various roles and responsibilities. In one embodiment the different roles and responsibilities that may be assigned for a customer may include that of a buyer an account administrator a service administrator an identity domain administrator or a user who utilizes the services and resources offered by cloud infrastructure system . The different roles and responsibilities are described more fully in below.

At a customer s subscription order is processed. The processing may include validating the order in one example. Validating the order includes ensuring that the customer has paid for the subscription and ensuring that the customer does not already have subscriptions with the same name or that the customer is not attempting to create multiple subscriptions of the same type in the same identity domain for subscription types for which this is disallowed such as in the case of a CRM service . Processing may also include tracking the status of an order for each order that is being processed by cloud infrastructure system .

At a business process associated with the order is identified. In some instances multiple business processes may be identified for an order. Each business process identifies a series of steps for processing various aspects of the order. As an example a first business process may identify one or more steps related to provisioning physical resources for the order a second business process may identify one or more steps related to creating an identity domain along with customer identities for the order a third business process may identify one or more steps for related to performing back office functions such as creating a customer record for the user performing accounting functions related to the order and the like. In certain embodiments different business processes may also be identified for processing different services in an order. For example different business process may be identified to process a CRM service and a database service.

At the business process identified for the order in is executed. Executing the business process associated with the order may include orchestrating the series of steps associated with the business process identified in step . For example executing a business process related to provisioning physical resources for the order may include sending a request to SDI module to allocate resources and configure those resources needed to fulfill the subscription order.

At a notification is sent to the customer regarding the status of the provisioned order. Additional description related to performing steps and is provided in detail in .

In one embodiment order processing module receives an order from a customer from one or more input sources . For example order processing module may directly receive an order via cloud UI or store UI in one embodiment. Alternatively order processing module may receive an order from order management module or order database . Order processing module then processes the order. In certain embodiments processing the order includes generating a customer record which includes information about the order such as a service type a service level a customer level the type of resources the amount of the resources to be allocated to the service instance and a time period during which the service is desired. As part of the processing order processing module also determines whether the order is a valid order. This includes ensuring that the customer does not already have subscriptions with the same name or that the customer is not attempting to create multiple subscriptions of the same type in the same identity domain for subscription types where this is disallowed such as in the case of a fusion CRM service .

Order processing module may also perform additional processing on the order. Processing may include tracking the status of an order for each order that is being processed by cloud infrastructure system . In one embodiment order processing module may process each order to identify a number of states pertaining to the order. In one example the different states of an order may be an initialized state a provisioned state an active state an administration required state an error state and the like. An initialized state refers to the state of a new order a provisioned state refers to the state of an order once the services and resources for the order have been provisioned. An order is in an active state when the order has been processed by TAS module and a notification to that effect has been delivered to the customer. An order is in an administration required state when intervention by an administrator is needed to resolve the issue. The order is in an error state when the order cannot be processed. In addition to maintaining the order progress status order processing module also maintains detailed information about any failures encountered during process execution. In other embodiments and as will be discussed in detail below the additional processing performed by order processing module may also include changing the service level for a service in the subscription changing the services included in the subscription extending the time period of the subscription and canceling the subscription or specifying different service levels for different time periods in the subscription.

After an order has been processed by order processing module business logic is applied to determine whether the order should proceed to provisioning. In one embodiment as part of orchestrating the order business process identifier receives the processed order from order processing module and applies business logic to identify a particular business process to use for the order being processed. In one embodiment business process identifier may utilize information stored in a service catalog to determine the particular business process to be used for the order. In one embodiment and as discussed in multiple business processes may be identified for an order and each business process identifies a series of steps for processing various aspects of the order. In another embodiment and as discussed above different business processes may be defined for different types of services or combinations of services such as a CRM service or a database service. In one embodiment service catalog may store information mapping an order to a particular type of business process. Business process identifier may use this information to identify a specific business process for the order being processed.

Once a business process has been identified business process identifier communicates the particular business process to be executed to business process executor . Business process executor then executes steps of the identified business process by operating in conjunction with one or more modules in the cloud infrastructure system . In some embodiments business process executor acts as an orchestrator for performing the steps associated with a business process. For example the business process executor may interact with order processing module to execute steps in a business process that identifies workflows related to the order determines the overage of services in the order or identifies service components related to the order.

In one example business process executor interacts with SDI module to execute steps in a business process for allocating and provisioning resources for services requested in the subscription order. In this example for each step in the business process business process executor may send a request to SDI component to allocate resources and configure resources needed to fulfill the particular step. SDI component is responsible for the actual allocation of the resources. Once all the steps of the business processes of an order have been executed business process executor may send a notification to the customer of the processed order by utilizing the services of services component . The notification may include sending an email notification to the customer with details of the processed order. The email notification may also include deployment information related to the order to enable the customer to access the subscribed services.

In certain embodiments TAS module may provide one or more TAS Application Programming Interfaces APIs that enable TAS module to interact with other modules in cloud infrastructure system and for other modules to interact with TAS module . For example the TAS APIs may include a system provisioning API that interacts with SDI module via an asynchronous Simple Object Access Protocol SOAP based web services call to provision resources for the customer s subscription order. In one embodiment TAS module may also utilize the system provisioning API to accomplish system and service instance creation and deletion switch a service instance to an increased service level and associate service instances. An example of this is the association of a Java service instance to a fusion applications service instance to allow secure web service communications. The TAS APIs may also include a notification API that interacts with the services module to notify the customer of a processed order. In certain embodiments the TAS module also periodically propagates subscription information outages and notifications e.g. planned downtime to services component .

In certain embodiments TAS module periodically receives usage statistics for each of the provisioned services such as the amount of storage used the amount data transferred the number of users and the amount of system up time and system down time from EM module . Overage framework utilizes the usage statistics to determine whether over use of a service has occurred and if so to determine how much to bill for the overage and provides this information to order management module .

In certain embodiments TAS module includes an order workflow identification module that is configured to identify one or more workflows associated with processing a customer s subscription order. In certain embodiments TAS module may include a subscription order generation framework for generating subscription orders for a customer when the customer places a subscription order for one or more services offered by the cloud infrastructure system . In one embodiment a subscription order includes one or more service components responsible for providing the services requested by a customer in the subscription order.

Additionally TAS module may also interact with one or more additional databases such as a Tenant Information System TIS database to enable the provisioning of resources for one or more services subscribed by the customer while taking into consideration historical information if any available for the customer. TIS database may include historical order information and historical usage information pertaining to orders subscribed by the customer.

TAS module may be deployed using different deployment models. In certain embodiments the deployment includes a central component that interfaces with one or more distributed components. The distributed components may for example be deployed as various data centers and accordingly may also be referred to as data center components. The central component includes capabilities to process orders and co ordinate services in cloud infrastructure system while the data center components provide capabilities for provisioning and operating the runtime system that provides the resources for the subscribed services.

In one embodiment the responsibilities of TAS central component include without limitation to provide a centralized component for receiving customer orders performing order related business operations such as creating a new subscription changing the service level for a service in the subscription changing the services included in the subscription and extending the time period of the subscription or canceling the subscription. The responsibilities of TAS central component may also include maintaining and serving subscription data needed by cloud infrastructure system and interfacing with order management module support UI cloud UI and store UI to handle all the back office interactions.

In one embodiment the responsibilities of TAS DCs and include without limitation performing runtime operations for orchestrating the provisioning the resources for one or more services subscribed by the customer. TAS DCs and also include capabilities to perform operations such as locking unlocking enabling or disabling a subscription order collecting metrics related to the order determining the status of the order and sending notification events related to the order.

In an exemplary operation of the distributed TAS system shown in TAS central component initially receives an order from a customer via cloud UI store UI via order management system or via order database . In one embodiment the customer represents a buyer who has financial information and the authority to order and or change a subscription. In one embodiment the order information includes information identifying the customer the type of services that the customer wishes to subscribe to and an account administrator who will be responsible for handling the request. In certain embodiments the account administrator may be nominated by the customer when the customer places an order for a subscription to one or more services offered by cloud infrastructure system . Based on the order information the TAS central component identifies the data region of the world such as Americas EMEA or Asia Pacific in which the order originates and the particular TAS DCs for e.g. or that will be deployed for provisioning the order. In one embodiment the particular TAS DC for e.g. from among DCs or that will be deployed for provisioning the order is determined based on the geographical data region in which the request originated.

TAS central component then sends the order request to the particular TAS DC in which to provision services for the order request. In one embodiment TAS DCs or identify a service administrator and an identity domain administrator responsible for processing the order request at the particular TAS DC. The service administrator and the identity administrator may be nominated by the account administrator identified in the subscription order. TAS DCs or communicate with SDI module to orchestrate the provisioning of physical resources for the order. SDI component in respective TAS DCs or allocates resources and configures those resources needed to fulfill the subscription order.

In certain embodiments TAS DCs or identify an identity domain associated with the subscription. SDI component may provide the identity domain information to IDM component shown in for identifying an existing identity domain or creating a new identity domain. Once the order is provisioned by the SDI module at respective TAS DCs or TAS central component may place information regarding the provisioned resources in a support system via support UI . Information may include for example displaying resource metrics related to the services and usage statistics of the services.

Once in operation at each data center EM module to periodically collects usage statistics for each of the provisioned services provisioned at that data center such as the amount of storage used the amount data transferred the number of users and the amount of system up time and system down time. These statistics are provided to the TAS DC that is local to EM module i.e. at the same data center . In an embodiment the TAS DCs may use the usage statistics to determine whether overuse of a service has occurred and if so to determine how much to bill for the overage and provide the billing information to order management system .

In one embodiment the modules in SDI module may include one or more modules in SaaS platform and PaaS platform in cloud infrastructure system . In order to perform provisioning of resources for various services SDI module may interact with various other modules each customized to help with provisioning resources for a particular type of service. For example as illustrated in SDI module may interact with a Java service provisioning control module to provision Java cloud services. In one embodiment Java service provisioning control component may deploy a Java Cloud Service JCS assembly specified by SDI module that includes a set of tasks to be performed to provision Java cloud services. Infrastructure resources then determines the resources needed to provision the Java cloud services.

As other examples SDI module may interact with one or more modules such as a Virtual Assembly Builder VAB module an Application Express APEX deployer module a Virtual Machine VM module an IDM module and a database machine module . VAB module includes capabilities to configure and provision complete multi tier application environments. In one embodiment VAB module deploys a Middleware MW service assembly specified by SDI module to provision a MW service in cloud infrastructure system using the services provided by VM module . APEX deployer module includes capabilities to configure and provision database services. In one embodiment APEX deployer module deploys a database service assembly specified by SDI module to provision a database service in cloud infrastructure system using the resources provided by infrastructure resources . SDI module interacts with IDM module to provide identity services such as access management across multiple applications in cloud infrastructure system .

SDI WS module includes capabilities for receiving a step in the business associated with an order from business process executor of TAS component . In one embodiment SDI WS module parses each step of the business process and converts the step into an internal representation used by SDI module . In one embodiment each step of the business process associated with the order arrives through a web service processing layer for example via System Provisioning API discussed in in the form of a SOAP request to SDI WS module .

SDI request controller module is the internal request processing engine in SDI module and includes capabilities for performing asynchronous request processing concurrent request processing concurrent task processing fault tolerant and recovery and plug in support related to the order requests. In one embodiment SDI request controller module accepts each step of the business process associated with the order from SDI WS module and submits the step to SDI task manager module .

SDI task manager module translates each step specified in the business process into a series of tasks for provisioning the particular step. Once the set of tasks for a specific step have been provisioned SDI task manager module responds to business process executor in TAS module with operation results that includes an order payload with details of the resources provisioned to fulfill the particular step. SDI task manager module repeats this process until all the steps of the particular business process associated with the order are complete.

In certain embodiments SDI task manager module translates each step specified in the business process into a series of tasks by utilizing the services of SDI connector module . SDI connector module includes one or more connectors for handling the deployment of tasks specified by SDI task manager module to provision one or more services related to the order request. In certain embodiments one or more of the connectors may handle tasks that are specific to a particular service type while other connectors may handle tasks that are common across different service types. In one embodiment SDI connector module includes a set of connectors wrapper APIs that interface with one or more of the external modules shown in in cloud infrastructure system to provision the services and resources related to the order request. For example Application Express APEX connector interfaces with APEX deployer module to provision database services. Web Center Connector WCC interfaces with a web center module in cloud infrastructure system to provision web services. The web center module is a user engagement platform and includes capabilities for delivering connectivity between people and information in cloud infrastructure system .

In certain embodiments Middleware Applications MA connector interfaces with VAB module in cloud infrastructure system to provision middleware application services. NUVIAQ connector interfaces with VAB module to provision Java services. IDM connector interfaces with IDM module to provide identity and access management for users subscribing to services and resources in cloud infrastructure system . Virtual Assembly Builder VAB connector interfaces with VAB module in cloud infrastructure system to configure and provision complete multi tier application environments. Plug in connector interfaces with EM module to manage and monitor the components in cloud infrastructure system . HTTP server connector interfaces with one or more web servers in the PaaS platform to provide connection services to users in cloud infrastructure system .

SDI monitoring module in SDI module provides an inbound interface for receiving Java Management Extensions JMX requests. SDI monitoring module also provides tools for managing and monitoring applications system objects and devices in cloud infrastructure system . SDI data access module provides an inbound interface for receiving Java Database Connectivity JDBC requests. SDI data access module supports data access and provides object relational mapping java transaction API services data access objects and connection pooling in cloud infrastructure system . The SDI common library module provides configuration support for the modules in SDI module .

The embodiment of discussed above describes modules in the SDI module according to an embodiment of the present invention. depicts a simplified flowchart depicting processing that may be performed by the modules of the SDI module in the cloud infrastructure system in accordance with an embodiment of the present invention. The processing depicted in may be implemented in software e.g. code instructions program executed by one or more processors hardware or combinations thereof. The software may be stored in memory e.g. on a memory device on a non transitory computer readable storage medium . The particular series of processing steps depicted in is not intended to be limiting. Other sequences of steps may also be performed according to alternative embodiments. For example alternative embodiments of the present invention may perform the steps outlined above in a different order. Moreover the individual steps illustrated in may include multiple sub steps that may be performed in various sequences as appropriate to the individual step. Furthermore additional steps may be added or removed depending on the particular applications. One of ordinary skill in the art would recognize many variations modifications and alternatives. In one embodiment the processing depicted in may be performed by one or more modules in the SDI module discussed in detail in .

At a business process associated with a subscription order is received. In one embodiment SDI WS module in SDI module receives one or more steps in the business process associated with the subscription order from business process executor . At each step in the business process is translated into a series of tasks for provisioning resources for the subscription order. In one embodiment SDI task manager module in SDI module translates each step specified in the business process into a series of tasks by utilizing the services of SDI connector module . At the subscription order is provisioned based on the series of tasks. In one embodiment and as discussed in SDI connector module includes one or more connectors for handling the deployment of tasks specified by SDI task manager module to provision resources for the services in the subscription order.

As described above with respect to SDI task manager module translates each step specified in a business process into a series of tasks by utilizing the services of SDI connector module which may include one or more connectors for handling the deployment of tasks specified by SDI task manager module to provision one or more services related to the order request. One or more of the connectors may handle tasks that are specific to a particular service type while other connectors may handle tasks that are common across different service types. In one embodiment SDI connector module includes a set of connectors wrapper APIs that interface with one or more of the external modules shown in in cloud infrastructure system to provision the services and resources related to the order request. For example a NUVIAQ connector interfaces with VAB module to provision Java services.

In certain embodiments Nuviaq system may be configured to provide a runtime engine for orchestrating PaaS operations. Nuviaq system may provide a web service API to facilitate integration with other products and services. Nuviaq system also provides support for complex workflows in system provisioning application deployment and associated lifecycle operations and integrates with management and monitoring solutions.

In the embodiment depicted in Nuviaq system comprises a Nuviaq proxy a Nuviaq manager and a Nuviaq database . In certain embodiments Nuviaq manager provides an entry point into Nuviaq system providing secure access to PaaS operations via the web service API. Internally it tracks system state in the database and controls job execution on the workflow engine. In a public cloud Nuviaq manager may be accessed by the Tenant Provisioning system SDI and the Tenant Console to drive provisioning and deployment operations respectively.

In one embodiment Nuviaq manager executes jobs asynchronously via an internal workflow engine. A job may be a sequence of actions specific to a given PaaS workflow. Actions may be performed in order with failure in any step resulting in failure of the overall job. Many workflow actions delegate to external systems relevant to the workflow such as the EM command line interface cli . In one implementation Nuviaq manager application may be hosted in a 2 node WebLogic cluster with associated HTTP server e.g. Oracle HTTP Server or OHS instance running inside a firewall.

In certain embodiments Nuviaq proxy is the public access point to the Nuviaq API. In one embodiment only Public API may be exposed here. Requests received by proxy may be forwarded to Nuviaq manager . In one embodiment Nuviaq proxy runs outside the firewall whereas manager runs within the firewall. In one implementation Nuviaq proxy application runs on a WebLogic cluster running outside the firewall.

In certain embodiments Nuviaq database tracks various domain entities such as without limitation platform instance deployment plan application WebLogic domain jobs alerts and the like. Primary keys may be aligned with the Service Database where appropriate.

In one embodiment Platform Instance may contain all resources required for a WebLogic service for a given tenant.

Nuviaq system may rely on additional systems of cloud infrastructure system to carry out the workflows used the WebLogic cloud service. These dependencies may include dependencies on SDI IDM a virus scan system a service database CRM instances and the like. For example Nuviaq system may depend upon functions performed by an Assembly Deployer in SDI . In one embodiment the Assembly Deployer is a system to manage interactions with OVAB Oracle Virtual Assembly Builder and OVM Oracle Virtual Machine . Capabilities of the Assembly Deployer used by Nuviaq system may include without limitation functions for deploying an assembly un deploying an assembly describing assembly deployment scaling appliance and the like. In one implementation Nuviaq system accesses the Assembly Deployer via a web service API.

In certain embodiments security policies may require certain artifacts to be scanned for viruses before being deployed to an application. Cloud infrastructure system may provide a virus scan system for this purpose that provides scanning as a service for multiple components of the public cloud.

In certain embodiments a public cloud infrastructure may maintain a Service Database containing information about tenants e.g. customers and their service subscriptions. Nuviaq workflows may access to this data in order to properly configure a WebLogic service as a client to other services that the tenant also subscribes to.

Nuviaq system may depend on IDM for its security integration. In certain embodiments Java Service instances can be associated with a CRM instance. The association allows user applications deployed to their Java Service instance to access a CRM instance though Web Service calls.

Various entities may use services provided by Nuviaq system . These clients of Nuviaq system may include a Tenant Console which is an management server e.g. Oracle Management Server based user interface that customers may access to manage their applications on their platform instances several IDEs such as Oracle IDEs JDeveloper NetBeans and OEPE have been extended to offer access to application lifecycle management operations one or more Command Line Interfaces CLIs that are available to access lifecycle operations on the platform instances.

Provisioning use case for Nuviaq system A Provision Platform Instance use case is realized via the Create Platform Instance operation of the Nuviaq API. In the context of cloud infrastructure system a service instance with respect to the Nuviaq system corresponds to a Nuviaq platform instance. A platform instance is assigned a unique identifier is used on all subsequent operations related to this instance. A Platform Deployment descriptor provided to the Create Platform Instance action allows for properties to be set that modify the configuration of the platform instance to meet the subscription requirements of the tenant. These properties may include for example 

Install Update Application use case The Install Application operation deploys an application to a running WebLogic Server after validating that the application archive meets the security requirements of the Public Cloud. In one embodiment the Application Deployment descriptor provided to the Install Application action allows for properties to be set that modify the configuration of the application to meet the subscription requirements of the tenant. These properties may include for example 

Referring back to in certain embodiments TAS and SDI working in cooperation are responsible for provisioning resources for one or more services ordered by a customer from a set of services offered by cloud infrastructure system . For example in one embodiment for provisioning a database service the automated provisioning flow may be as follows for a paid subscription 

In some embodiments a customer may also be allowed to subscribe to a service on a trial basis. For example such a trial order may be received via cloud UI e.g. using cloud.oracle.com .

In certain embodiments cloud infrastructure system enables underlying hardware and service instances to be shared between customers or tenants. For example the database service may be provisioned as shown in in one embodiment. depicts multiple Exadata compute nodes and each providing a database instance provisioned for the database service. For example compute node provides a database instance for a database service. Each Exadata compute node may have multiple database instances.

In certain embodiments each database instance can comprise multiple schemas and the schemas may be associated with different customers or tenants. For example in database instance provides two schemas and each with its own tables. Schema may be associated with a first customer or tenant subscribing to a database service and schema may be associated with a second customer or tenant subscribing to the database service. Each tenant gets a completely isolated schema. Each schema acts like a container that can manage database objects including tables views stored procedures triggers etc. for the associated tenant. Each schema may have one dedicated tablespace with each tablespace having one data file.

In this manner a single database instance can provide database services to multiple tenants. This not only enables sharing of underlying hardware resources but also enables sharing of service instance between tenants.

In certain embodiments such a multi tenancy system is facilitated by IDM which beneficially enables multiple separate customers each having their own separate identity domains to use hardware and software that is shared in the cloud. Consequently there is no need for each customer to have its own dedicated hardware or software resources and in some cases resources that are not being used by some customers at a particular moment can be used by other customers thereby preventing those resources from being wasted. For example as depicted in a database instance can service multiple customers each with their respective identity domains. Although each such database service instance can be a separate abstraction or view of a single physical multi tenant database system that is shared among the many separate identity domains each such database service instance can have a separate and potentially different schema than each other database service instance has. Thus the multi tenant database system can store mappings between customer specified database schemas and the identity domains to which those database schemas pertain. The multi tenant database system can cause the database service instance for a particular identity domain to use the schema that is mapped to that particular identity domain.

The multi tenancy can also be extended to other services such as the Java Service. For example multiple customers can have a JAVA service instance placed within their respective identity domains. Each such identity domain can have a JAVA virtual machine which can be viewed as being a virtual slice of hardware. In one embodiment a job monitoring service e.g. Hudson can be combined with a JAVA enterprise edition platform e.g. Oracle WebLogic in the cloud to enable each separate identity domain to have its own separate virtual slice of the JAVA enterprise edition platform. Such a job monitoring service can for example monitor the execution of repeated jobs such as building a software project or jobs run by an operating system s time based job scheduler. Such repeated jobs can include the continuous building and or testing of software projects. Additionally or alternatively such repeated jobs can include the monitoring of executions of operating system run jobs that are executed on machines that are remote from the machine on which the job monitoring service executes.

In certain situations processing a customer s subscription order in cloud infrastructure system may involve the storage of sensitive information related to the customer s subscription order by one or more components in the cloud infrastructure system. For example sensitive information stored by the components in cloud infrastructure system may include confidential customer information such as customer s identities credit card information contract details information related to a customer s access to resources provisioned to one or more services in the customer s subscription order and so on. In one embodiment cloud infrastructure system provides a framework for handling the secure interaction between these components that wish to transfer information between each other during processing of a customer s subscription order. In one embodiment the components are assigned to various security zones. The assignment of a component to a security zone may be based upon the sensitivity of the data handled by the components the sensitivity of functions performed by the component and the like.

In one embodiment the assignment of a component to a security zone and a security level may be based upon the sensitivity of the data handled by the components the sensitivity of functions performed by the component and the like. There may be multiple zones with the same level of security. As an example one or more components in order management module that perform back office functions such as billing and maintaining confidential customer information may be assigned to a security zone with a high security level. Similarly components in IDM module that maintain identity information within the data centers of cloud infrastructure system and components in SDI module that provision and control a customer s access to resources in cloud infrastructure system may be assigned to a security zone with a high security level. Components that orchestrate the provisioning of resources in cloud infrastructure system and enable monitoring of services in the customer s subscription order in TAS module and EM module may be assigned to a security zone with a medium security level. Components that provide a user interface to customers in cloud UI store UI and support UI may be assigned to a security zone with a low security level.

The assignment of a component to a security zone with an associated security level may also be performed based on the distance of a component from the end user or customer. In one example the closer a component is to the end user the lower is the security level of the security zone of the component. For example the user interface related components in cloud UI store UI and support UI which are directly accessible by a user are assigned to customer UI zone associated with a low security level. On the other hand back office processing components in order management module are assigned to accounting zone associated with a high security level .

In the example depicted in a component in SDI module is assigned to physical provisioning zone associated with high security level . A component in IDM module is assigned to identity management zone associated with a high security level . A component in order management module is assigned to accounting zone associated with a high security level . Components in TAS module EM module and support system are assigned to tenant zone associated with a medium security level . Components in cloud UI store UI and support UI are assigned to customer UI zone associated with a low security level . In one embodiment the assignment of a component to a particular security zone and particular security level may be performed by an administrator of cloud infrastructure system . In certain embodiments information may be stored by cloud infrastructure system mapping each component to its associated security zone and security level.

It is to be appreciated that the security zones and security levels discussed above are not intended to limit the scope of the present invention but are merely discussed to provide an example. Additional exemplary security zones and security levels may be defined for components of cloud infrastructure system in other embodiments. A particular zone may comprise zero or more components. One of ordinary skill in the art would recognize many variations modifications and alternatives.

In certain embodiments of the present invention the ability of two components to interact with each other including the ability of the two components to exchange data with one another is determined based on the security zones to which the components are assigned and the security levels associated with the zones. The security zones and their associated security levels thus control the transfer of information between components in cloud infrastructure system . A security zone based security infrastructure is defined that facilitates the interaction between one or more components in cloud infrastructure system in a secure manner.

In one embodiment security zone based security infrastructure defines a set of one or more rules for facilitating the interaction between one or more components that wish to transfer information between each other based on the security zones and the security levels.

In one embodiment security layer component may be provided as a separate component in cloud infrastructure system . In such an embodiment an interaction request from source component to target component may be intercepted by security layer component . Security layer component may then process the request and based upon the results of the processing enable the transfer of information between the source component and the target component.

In another embodiment security layer component may be part of each component in cloud infrastructure system . In such an embodiment an interaction request originating from a source component may be passed to security layer component within the components. The security layer component within the components may then process the request and based upon the results of the processing enable the transfer of information between the source component and the target component.

The security related processing performed by security layer component may be explained using the following example. Consider a situation where source component wishes to transfer information to the target component while processing a customer s subscription order in cloud infrastructure system . Source component may originate a request to transfer information to target component . Security layer component is configured to receive or intercept this request. From the request security layer component determines the identities of the source component and the target component. Using component to security zone information security layer component determines a security zone referred to as the source security zone to which source component belongs to and a security zone referred to as the target security zone to which target component belongs to. Security layer component then uses security zone to security level mapping information to determine a security level referred to as source security level for the source security zone and a security level referred to as target security level for the target security zone.

Once the source security level and target security level have been identified security layer component consults security rules information to control interactions between the source component and the target component. In certain embodiments security rules information may specify various rules that govern the transfer of information between the source component and the target component. In one embodiment and as will be discussed in detail below the rules specify when information is permitted to be pushed from one security level to another and when information is permitted to be pulled by one security level from another security level. Accordingly rules may be specified based on a push pull communication model for one or more components within cloud infrastructure system . The push pull rules are intended to protect the transfer of information from a less secure zone to a more secure zone. A component in a higher security zone pushes information to a component in a lower security zone and pulls information from a component in a lower security zone. A component in a lower security zone may not have direct read or write access to the data managed by a component in a higher security zone. Components within the same security zone may have read or write access with respect to each other.

In one embodiment the set of rules that govern the transfer of information between the source component and the target component are as follows 

In certain embodiments components within the cloud infrastructure system have read write access with respect to each other based on their security levels. These read write operations may be performed via appropriate APIs. In one embodiment if the source component wants to transfer information to the target component and the security level of the source component is higher than the security level of the target component it pushes information to the target component. In such a situation the source component invokes a synchronous write API of the target component. As an example source component may invoke a web service API or a PL SQL API of target component to push information to target component . As another example source component may push the information to target component in an asynchronous manner such as by publishing the information to a queue in target component .

In another embodiment if the source component needs to get information from the target component and the security level of the target component is lower than the security level of the source component or the security level of the target component is the same as the security level of the source component the source component pulls the information from the target component by calling a synchronous read API of the target component. In one example the source component may invoke a web service or a PL SQL API of the target component. If the security level of the target component is higher than the security level of the source component the source component publishes its request for information such as in an output queue of the source component and the target component pulls this request published by the source component and then pushes the requested information to the source component.

As an example consider an exemplary interaction between a component in order management module and a component in TAS module while processing a customer s subscription order in cloud infrastructure system . The component in order management module is assigned to a security zone that is in a high security level whereas the component in TAS module is assigned to a security zone that is in a medium security level. This is because all interactions between a component in order management module and a component in TAS module are controlled by the component in order management module . The component in order management module creates an order and pushes the order into the component in TAS module . Information flowing from the component in TAS module to the component in order management module is stored in a queue on the component in TAS module and it is then pulled from this queue by the component in order management module .

In certain embodiments when a new component is introduced into cloud infrastructure system security infrastructure may also allow an administrator of cloud infrastructure system to assign one of the existing security zones to the component or to create a new security zone with an associated security level for the component.

Security infrastructure may also allow an administrator of cloud infrastructure system to change associations between components and security zones and also the mappings between security zones and security levels. For example when the feature set of a component changes it is possible that the administrator may move the component to a different security zone. In this manner an administrator of cloud infrastructure system is provided complete control and flexibility on the flow of information between components of cloud infrastructure system .

At a request to transfer information between a first component also referred to as a source component and a second component also referred to as a target component in cloud infrastructure system is received.

At a first security zone for the first component and a second security zone for the second component are determined. In one embodiment the security zones that may be assigned to the first component and the second component may include an identity management zone a physical provisioning zone an accounting zone a tenant zone and a customer UI zone.

At a first security level associated with the first security zone and a second security level associated with the second security zone are determined. In one embodiment the security levels associated with a security zone may include a high security level a medium security level or a low security level.

At the transfer of information between the first component and the second component is determined based upon the first security level the second security level and security rules information. In one embodiment the security rules information specifies one or more rules related to the transfer of information between the first component and the second component. In one embodiment and as discussed in if the source component wants to transfer information to the target component and the security level of the source component is higher than the security level of the target component it pushes information to the target component. In such a situation the source component invokes a synchronous write API of the target component or publishes the information to a queue in the target component. On the hand if the target component is in a security zone with a security level that is higher than the security level of the security zone of the source component then the source component publishes the information such as by writing the information to an output queue of the source component and the target component may then pull this information from the output queue.

In another embodiment if the source component needs to get information from the target component and the security level of the target component is lower than the security level of the source component or the security level of the target component is the same as the security level of the source component the source component pulls the information from the target component by calling a synchronous read API of the target component. On the other hand if the security level of the target component is higher than the security level of the source component the source component publishes its request for information such as in an output queue of the source component and the target component pulls this request published by the source component and then pushes the requested information to the source component.

Computer system may additionally include a computer readable storage media reader a communications subsystem e.g. a modem a network card wireless or wired an infra red communication device etc. and working memory which may include RAM and ROM devices as described above. In some embodiments computer system may also include a processing acceleration unit which can include a digital signal processor DSP a special purpose processor and or the like.

Computer readable storage media reader can further be connected to a computer readable storage medium together and optionally in combination with storage device s comprehensively representing remote local fixed and or removable storage devices plus storage media for temporarily and or more permanently containing computer readable information. Communications system may permit data to be exchanged with network and or any other computer described above with respect to system environment .

Computer system may also comprise software elements shown as being currently located within working memory including an operating system and or other code such as an application program which may be a client application Web browser mid tier application RDBMS etc. . In an exemplary embodiment working memory may include executable code and associated data structures such as memory structures used for processing authorization requests described above. It should be appreciated that alternative embodiments of computer system may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Examples of storage and computer readable media include RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other memory medium which can be used to store the desired information and which can be read by a computer. Storage media and computer readable media may include non transitory memory devices.

Although specific embodiments of the invention have been described various modifications alterations alternative constructions and equivalents are also encompassed within the scope of the invention. Embodiments of the present invention are not restricted to operation within certain specific data processing environments but are free to operate within a plurality of data processing environments. Additionally although embodiments of the present invention have been described using a particular series of transactions and steps it should be apparent to those skilled in the art that the scope of the present invention is not limited to the described series of transactions and steps.

Further while embodiments of the present invention have been described using a particular combination of hardware and software it should be recognized that other combinations of hardware and software are also within the scope of the present invention. Embodiments of the present invention may be implemented only in hardware or only in software or using combinations thereof.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that additions subtractions deletions and other modifications and changes may be made thereunto without departing from the broader spirit and scope as set forth in the claims.

