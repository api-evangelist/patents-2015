---

title: Low-friction synchronous interaction in multiplayer online game
abstract: Methods, systems, and computer programs are presented for executing an online game. One method includes an operation for executing a first game board for a first user and a second game board for a second user. The first game board is created when the first user plays the game for the first time and the second game board is created when the second user plays the game for the first time. The method further includes operations for detecting a visit by the second user to the first game board, and for detecting a request by the second user to place a game asset in the first game board. The game asset is installed in the first game board when the first user approves the request, and the second user obtains one or more game rewards when the first user interacts with the game asset while playing the online game.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09522335&OS=09522335&RS=09522335
owner: Zynga Inc.
number: 09522335
owner_city: San Francisco
owner_country: US
publication_date: 20150529
---
This application is a continuation application and claims priority from U.S. application Ser. No. 13 958 973 entitled LOW FRICTION SYNCHRONOUS INTERACTION IN MULTIPLAYER ONLINE GAME filed Aug. 5 2013 which is a continuation application and claims priority from U.S. application Ser. No. 13 347 265 entitled LOW FRICTION SYNCHRONOUS INTERACTION IN MULTIPLAYER ONLINE GAME filed Jan. 10 2012 all of which are incorporated herein by reference.

The present invention relates to methods for playing online social games and more particularly methods systems and computer programs for low friction synchronous interaction in multiplayer online games.

Online games that allow players to interact with other players have become popular. Some online games such as chess or bridge have a small number of players that play together at the same time. Other online games such as Massively Multiplayer Online MMO games can have a large number of players playing simultaneously. Online game operators also referred to as social game operators harness the power of online social networks to design games that closely integrate the players social graph data with their existing friendship connections.

In social MMO games players collaborate in order to play the game and make progress. However interactions between players often take place asynchronously and players are not aware in real time when their friends are online. Furthermore interactions between players tend to be burdensome requiring a significant amount of effort and time to perform these interactions. For example if the player whishes to visit a friend s farm the game must exit the player s farm load the friend s farm perform game activities while in the friend s farm exit the friend s farm and reload the player s farm. This substantial effort is an obstacle that hinders online game interactions. It is in this context that embodiments arise.

Embodiments of the present invention provide methods systems and computer programs for low friction synchronous interaction in multiplayer online games. In one embodiment a method for processing game operations during execution of an online game is presented. The method includes an operation for executing a first game board for a first user and a second game board for a second user. The first game board is created when the first user plays the online game for a first time and the second game board is created when the second user plays the online game for a first time. Additionally the method includes operations for detecting a visit by the second user to the first game board and for detecting a request by the second user to place a game asset in the first game board. The game asset is installed in the first game board when the first user approves the request. The second user obtains one or more game rewards when the first user interacts with the game asset while playing the online game. In one embodiment the operations of the method are executed by a processor.

In another embodiment a system for processing game operations during execution of an online game includes a live interaction server and a game server. The live interaction server is operable to establish an synchronous mode of play when a first user and a second user play the online game at a same time and an asynchronous mode of play when the first user and the second user are not playing the online game at the same time. The game server has a processor that executes a computer program that performs a method which includes an operation for executing a first game board for a first user and a second game board for a second user. The first game board is created when the first user plays the online game for a first time and the second game board is created when the second user plays the online game for a first time. In addition the method includes operations for detecting a visit by the second user to the first game board and for detecting a request by the second user to place a game asset in the first game board. The game asset is installed in the first game board when the first user approves the request. The second user obtains one or more game rewards when the first user interacts with the game asset while playing the online game.

In yet another embodiment a non transitory computer readable storage medium storing a computer program for processing game operations during execution of an online game is presented. The computer readable storage medium includes program instructions for executing a first game board for a first user and a second game board for a second user. The first game board is created when the first user plays the online game for a first time and the second game board is created when the second user plays the online game for a first time. In addition the computer readable storage medium further includes program instructions for detecting a visit by the second user to the first game board and program instructions for detecting a request by the second user to place a game asset in the first game board. The game asset is installed in the first game board when the first user approves the request and the second user obtains one or more game rewards when the first user interacts with the game asset while playing the online game.

The present disclosure is now described in detail with reference to a few embodiments thereof as illustrated in the accompanying drawings. In the following description numerous specific details are set forth in order to provide a thorough understanding of the present disclosure. It is apparent however to one skilled in the art that the present disclosure may be practiced without some or all of these specific details. In other instances well known process operations and structures have not been described in detail in order not to unnecessarily obscure the present disclosure. In addition while the disclosure is described in conjunction with the particular embodiments it should be understood that this description is not intended to limit the disclosure to the described embodiments. To the contrary the description is intended to cover alternatives modifications and equivalents as may be included within the spirit and scope of the disclosure as defined by the appended claims.

Methods systems and computer programs for low friction synchronous interaction in multiplayer online games are presented. It will be apparent that the present embodiments may be practiced without some or all of these specific details. In other instances well known process operations have not been described in detail in order not to unnecessarily obscure the present embodiments.

Web page is one embodiment of a page designed for playing games online via web browsers. In this embodiment a list of games is presented for selection by the player and a list of featured games identifies popular games. In one embodiment the game is played in game area as an embedded component that may use any technology for presenting multimedia dynamic content such as Hyper Text Markup Language 5 HTML5 Adobe Flash etc.

Adobe Flash formerly known as Macromedia Flash is a multimedia platform for adding animation and interactivity to web pages. A Flash component e.g. game area may be embedded in a web page e.g. web page to create animation advertisements or games and to integrate video into the web page. Adobe Flash can manipulate vector and raster graphics and support bidirectional streaming of audio and video. In one embodiment Adobe Flash libraries are used with the Extensible Markup Language XML capabilities of the web browsers to render rich content in the browsers. This technology is known as Asynchronous Flash and XML.

Another technology for displaying dynamic content in a web page is HTML5. HTML5 s features include media playback and offline storage. With a predecessor version to HTML5 named HTML4 sites have to reach for Adobe Flash or Silverlight to show a video or play music. However HTML5 lets sites directly embed media using HTML tags e.g. and and plugins are not required.

In one embodiment games include objects such as characters currencies tools assets social relations etc. For example in a war game the characters may be the soldiers fighting on respective sides of the war. In addition there may be weapons used by the soldiers and objects around the battlefield e.g. buildings trees animals mountains rivers and so on . Each game object may be defined according to a predetermined syntax. For example the definition of a game object may include shape texture physical capabilities connection or relationship with other game objects etc.

In another embodiment a game application is embedded in a web page e.g. web page and the players play the game via web browsers. The display of a game is sometimes referred to as the stage of the game. Thus the stage of the game may be implemented as Adobe Flash or HTML5 component embedded in the web page. For example the stage is essentially a data structure that defines some of the basic elements of the game such as aspect ratio and display size. At any given time a game scene may be rendered and displayed on the stage by attaching one or more game objects to the stage.

In particular embodiments the first and the second virtual currencies are used for different purposes although some assets may be bought with either of the currencies. The first virtual currency has higher purchasing value than the second virtual currency. For example the first virtual currency can unblock some obstacles in the game that the second virtual currency cannot. Although a small amount of first virtual currency might be given to the player as the game starts a player needs to purchase more first virtual currency with real currency also referred to herein as legal currency real world currency or real cash. This provides a revenue stream for the online game provider.

In one embodiment the online game includes missions which identify one or more tasks that the player must complete before the mission is considered satisfied or finished. For example a mission may require three tasks chopping down a tree feeding an animal and planting an apple tree. Upon completion of the mission the player is rewarded in some fashion such as providing a new asset increasing the amount of energy getting more virtual currency etc. As the player completes tasks and missions the game score is increased and as the game score increases the experience level may also increase.

Clicking on inventory icon causes the online game to display a list of all the items or assets owned by the player. In addition clicking on build icon takes the player to a virtual marketplace where assets e.g. buildings can be acquired. As described above assets can be from within different categories such as buildings decorations housing businesses crops trees animals energy special items weapons etc. Each category includes a plurality of assets within the category. For example the housing category includes a cottage a town house a family house a suburban house a country house an apartment building a ranch etc. Some of the items within a category can be freely acquired by the player while purchasing of some items can be blocked until certain game condition is met such as reaching some score finishing a mission purchasing the ability to unblock the blocked item etc.

In one embodiment the online game is an online social game which leverages social relationships between the player and other online game players socially linked to the player. For example the player might add a neighbor to the game by inviting a friend from a social networking site. A neighbor of a first player as referred to herein is a second player that has established a social relationship in the online game with the first player. The social relationship is typically established by having one player inviting the other player to become a neighbor and then the other player accepting the invitation. Once the invitation is accepted both players are neighbors. A neighbor may also be referred to as a friend a crew member a buddy a partner an ally etc.

There are many types of online social networks run and maintained by various companies and any one of these companies can provide access to social graph data. One such company without limitation to others may include Facebook. Once a friend accepts being a neighbor a social relationship is established in the game where the game played by the player and the game played by the neighbor can interact with each other. For example the player might visit the game board e.g. city of the neighbor and perform some game activities therein and will be rewarded for doing so. Some of the missions in the game might include social activities that promote the interaction between players. For example one mission might include planting tomatoes in the neighbor s farm. Therefore the social interaction can provide advancement for the player and for the neighbor.

In one embodiment a game board is created the first time the player plays the online game. The game board can be a city a farm a forest an island etc. and the game board may also be referred to as the player s world environment playground etc. As the player makes progress in the game the game board changes by adding assets e.g. adding buildings shops clearing trees land etc. or by removing obstacles e.g. cutting down a tree . Each player manages her own game board although other players linked to the player e.g. neighbors in the online game may help by visiting and performing activities in the neighbor s game board. In one embodiment only the players socially linked to the owner of the game board can visit to perform game activities therein.

It is noted that the embodiments illustrated in are exemplary. Other embodiments may utilize different assets missions social interactions etc. The embodiments illustrated in should therefore not be interpreted to be exclusive or limiting but rather exemplary or illustrative.

It should be noted that the activities that player can perform while visiting a neighbor s game board may be similar to the activities that the friend may perform in her own game board. However there may be some activities that the friend may perform while visiting and that the player cannot perform in her own game board and vice versa.

As described above this type of social interaction e.g. a visit may be burdensome for the player because it requires loading the neighbor s game board and then re loading the player s own game board upon the end of the visit. This is referred to as a high friction interaction because of the complexity and effort involved in the interaction. On the other hand a low friction interaction is an operation involving the game board of another player that requires only a small effort by the player. In one embodiment a low friction interaction may be performed while the player is in the player s game board and without having to load the game board of the neighbor. This way the player does not have to leave her own game. Some embodiments of low friction interactions are described below in detail with reference to .

When a player provides an input into the player s client device the client device may in response send a message via the communications network to the social networking server. The social networking server may update the player profile save the message to a database send messages to other players etc. The social gaming network may include a social graph database which stores player relationships social player profiles player messages and player social data.

The gaming servers host one or more gaming applications and perform the computations necessary to provide the gaming features to the players and clients. One or more gaming realm databases store data related to the gaming services such as the gaming applications and modules virtual gaming environment realm data player gaming session data player scores player virtual gaming profiles game stage levels etc. The gaming servers may utilize the data from the gaming realm databases to perform the computations related to providing gaming services for the players. In some implementations a server load database stores gaming server load statistics such as computational load server responses times etc.

The social gaming network may include one or more load balancing servers and one or more live interaction servers . The live interaction servers monitor which players are online and determine if a player s neighbors are currently online. This allows live interactions between players as described below in more detail with reference to . In one embodiment a social data cache stores some of the graph data related to player game links e.g. neighbors for fast access to the social data.

The gaming servers are used to execute the online games and hold the gaming data which can be shared with social networking servers and live interaction servers . The game data e.g. game updates may be sent periodically without responding to a request or might be sent in response to a request or might be sent in combination piggy backed with other information exchanged between the servers e.g. game progress or activities data . In one embodiment live interaction servers periodically poll gaming servers requesting the list of users that are online playing the game or the list of neighbors of a particular user that are currently online. In one embodiment polling is performed every 15 seconds and in another embodiment the polling interval is in the range between 5 seconds and 5 minutes although other values are also possible.

In one embodiment communications between users are managed by the live interaction servers . A first user knows that a second user is online because the live interaction servers have notified the first user that the second user is online playing the game of course the first user and the second users are friends in the online game . When the first user sends a message to the second user the game of the first user sends the message to the live interaction servers which forward the message to the game of the second user. Similarly when the second user wants to send a message to the first user the message is sent through live interaction servers .

In another embodiment the game update information sent by the gaming servers includes information regarding the users playing a particular game as well as information regarding users that are playing other online games. This way a player may receive information about the neighbors that are playing the same online game or about the neighbors that are playing other online games. The game updates sent from the gaming servers include information regarding the status of the neighbor s game. The status may include score current activities requests for help recent progress made in the game sign on and sign off information etc.

Live interaction servers keep track of which neighbors are online at a given time. Live interaction servers analyze the game updates received from gaming servers and create social game data to inform users of neighbor s activities. These activities may include information on which neighbors are online neighbor s recent activities e.g. game progress news etc.

It is noted that the embodiments illustrated in are exemplary. Other embodiments may utilize different server configurations divide the tasks differently among the servers or exchange information between servers in different forms. The embodiments illustrated in should therefore not be interpreted to be exclusive or limiting but rather exemplary or illustrative.

Each game server has access to one or more game databases for keeping game data. In addition a single database can store game data for one or more online games. Each game server may also includes one or more levels of caching. Game data cache is a game data cache for the game data stored in game databases . For increased performance caching may be performed in several levels of caching. For instance data more frequently used is stored in a high priority cache while data requiring less access during a session will be cached and updated less frequently.

The number of game servers changes over time as the gaming platform is an extensible platform that changes the number of game servers according to the load on the gaming infrastructure. As a result the number of game servers will be higher during peak playing times and the number of game servers will be lower during off peak hours. In one embodiment the increase or decrease of bandwidth is executed automatically based on current line usage or based on historical data.

One or more social network management servers provide support for the social features incorporated into the online games. The social network management servers access social data from one or more social networks via Application Programming Interfaces API made available by the social network providers. Each social network includes social data and this social data or a fraction of the social data is made available via API . As in the case of the game servers the number of social network management servers that are active at a point in time changes according to the load on the infrastructure. As the demand for social data increases the number of social network management servers increases. Social network management servers cache user data in database and social data in database . The social data might include the social networks where a player is present the social relationships for the player the frequency of interaction of the player with the social network and with other players etc. Additionally the user data kept in database may include the player s name demographics e mail games played frequency of access to the game infrastructure etc.

It is noted that the embodiment illustrated in is an exemplary online gaming infrastructure. Other embodiments may utilize different types of servers databases APIs etc. and the functionality of several servers can be provided by a single server or the functionality can be spread across a plurality of distributed servers. The embodiment illustrated in should therefore not be interpreted to be exclusive or limiting but rather exemplary or illustrative.

During synchronous play a player of the game is aware that that neighbor is currently online playing the game. As a result the interactions between the player and the neighbor can be made in real time or almost real time. In one embodiment a status indicator that the player is online is shown next to the icon associated with the player. In another embodiment a news field also referred to as the news stream or news updates is added to the game stage of the player where live news regarding the game progress of one or more neighbors are displayed. For example the news stream may show that the friend has finished building a Post Office in her city i.e. game board . In one embodiment some of the features of the game available in synchronous mode are not available while on asynchronous mode and vice versa.

While the player is online the game provider automatically changes the mode of play between synchronous and asynchronous mode depending on whether the neighbor is online or offline simultaneously with the player. The player doesn t have to choose between playing synchronously or asynchronously. When friends are online simultaneously with the player some activities are performed synchronously and if friends are offline then the game is played using asynchronous activities.

Players are incentivized to play together when the players are simultaneously online. Furthermore players can take part in group activities when they are online and the players get the feeling that they are doing something together. For example a first layer may have the role of a cop and a second player of a robber. A car chase can take place between the first and second players using real time interactions. In one embodiment players receive rewards for engaging in synchronous social activities.

In one embodiment the player gets real time indications on what the friend is doing while visiting the game board e.g. the player s city . In another embodiment an icon associated with the visiting friend is moved around the city as the friend enters commands to move his avatar or mouse around the city. This way the player knows what the friend is doing. In addition if the friend performs an action in the game board e.g. harvests a crop by clicking on the crop the player sees immediately the consequences of the friend s action e.g. the crop is harvested and the field where the crop was harvested now shows dirt which indicates that a new crop can be planted on this field .

The request is presented to the player which is a neighbor of friend to notify the player that the friend wants help. In one embodiment a message indicator notifies the user of the incoming message with the request. It is noted that the player does not need to reload the game to see the message indicator. When the player reads the message with the request text in the message describes the nature of the request. The player is presented with buttons to accept or ignore the request.

If the player clicks accept button the game provides the help to the friend. However the helping player does not need to leave her own game board to help which means that the helping player does not have to leave her board load the friend s board perform an action to help and then re load her own board to get back to her game. Once the player clicks the accept button the player does not need to perform other actions to complete the help operation. This constitutes a low friction interaction for the player because the help is given with little effort without having to leave the game board. The low friction interaction encourages social help because of the small effort required to provide help. Besides the helper also is offered a reward such as a gift or additional currency. In addition the player gets instant gratification for knowing that the player has helped the friend.

Once the game recognizes the help given by the player the game proceeds to complete the help operation in the friend s game board. In one embodiment an action such as an animation is performed in the friend s game board to show the completion of the help operation. For example a helicopter flies by the city of the friend and an avatar parachutes from the helicopter to the Post Office . The avatar performs and animation in the Post Office to complete the help operation. In addition the consequences of the help will also be shown in the game board. For example if the help provided completes the Post Office the building for the Post Office will change from a building under construction to a finished building. In another example if the help unwithers a crop i.e. it makes a withered crop come back to be a healthy crop then the crop will be shown as healthy in the game board. In one embodiment the helper gets notification in the news field that the help was completed and the helper gets a reward for helping.

In one embodiment the request for help may be sent to a group of neighbors each neighbor being either online or offline. This way the help requester has more chances to get the needed help faster. The help may come from a player which is online and that performs a low friction operation for help or the help may be given by a player that is currently offline but that subsequently signs in and completes the viral request for help. In another embodiment the player is given an option to send the request only to neighbors that are currently online. In yet another embodiment the player is given an option to send the request only to the neighbors that are currently offline.

In one embodiment the action further occurs without input by the first user to control the action in the second game board. Still further the action can be in the form of an animation of an avatar of the first user which appears to the second user as if the first user was actually providing active participation and was actually controlling his or her avatar on the game board of the second user but without requiring active participation by the first user. Instead the action is automatically executed by the online game without direction from the first user to simulate that the first user is performing the action. In one embodiment the action takes one form from a plurality of forms based on game context or the action to be performed or both. Each form from the plurality of forms defines a sequence of moves or interactivity by an avatar or by objects in the game board or by a combination thereof. For example if the action is building a post office the avatar may wear construction worker type clothes and carry one or more tools such as a shovel. The animation for building the post office may include a sequence of images with different progress on the construction of the post office from building the foundation to installing the roof.

In one embodiment the animation is related to one or more of buildings automobiles helicopters planes trains motorcycles bicycles groups of avatars etc. or combinations thereof. In one embodiment each of the forms from the plurality of forms is selected dynamically by the online game. The form may be selected from a lookup table but other types of animation selection logic are also possible. The lookup table is accessed to select the corresponding animation based on the current context of the game and the activity being performed.

In one embodiment a player referred to herein as the franchise owner wishing to install a franchise in the city of a neighbor referred to as the franchise recipient visits the city where the franchise is to be installed. The franchise owner looks for an empty lot in the franchise recipient s city and then clicks on the selected lot to choose the type of franchise to install. After the lot is selected the game displays message e.g. tell friend to approve your franchise To prompt the franchise owner to inform the franchise recipient. In another embodiment the franchise owner may post a message for the franchise recipient.

After the franchise owner clicks on button to send the request to the franchise recipient the notification for the request is sent to the game of the franchise recipient. While in synchronous mode the franchise requester knows that the franchise recipient is online therefore sending the franchise request will likely result in a faster completion of the franchise installation. In one embodiment the franchise recipient sees an icon of the franchise owner on the empty lot where the franchise is to be installed. Next to the icon a message with the franchise request is displayed. In addition button for accepting the franchise and bottom for rejecting the request are presented to the user with message .

If the franchise recipient clicks on button to accept the franchise request then message is presented on the display indicating that the franchise has been installed. In addition the empty lot will now show the installed franchise . If the franchise owner is online message will show in the news field indicating that the friend accepted the franchise.

In one embodiment if the franchise requester is visiting the game board of the franchise recipient while the request for franchise is being presented the franchise requester will see a live animation showing how the franchise is being installed. The franchise requester will see the change from an empty lot to an installed franchise building. Once the franchise is installed the franchise owner can supply goods for the franchise e.g. ice cream for an ice cream parlor from her own game board without having to visit the franchise recipient s game board.

In the embodiment of the friend is initially offline. When the player signs in the status of the player changes to online. The friend also signs in and the status of the friend changes to online . Since both players are now online the synchronous mode of play begins as soon as the game correlates that both players are simultaneously online. When the player s game detects that the friend is online the player s game starts synchronous mode. The game notifies the player that the friend is now online. In one embodiment an icon associated with the friend changes the contents of a status field to be online. 

As the friend s game progresses e.g. the friend finishes a Post Office the progress is detected in the player s game and this progress is shown to the player such as in the news banner of . When the friend visits the player the friend s game displays the player s game board e.g. the city of player. The friend is able to interact with the player s game board see for example the interactions presented in . As the friend helps the player the friend receives rewards for her help.

As the friend is visiting the player s board the player s game detects the presence of friend in the player s board. An icon or animation associated with the friend is presented in the player s game. In one embodiment the icon is a picture from the profile s friend in the online game and in another embodiment the icon is and avatar generated by the online game but other types of icons are also possible. In addition the status indicator associated with the status of friend in the player s game changes from online to visiting. The player is able to see in real time the actions performed by the friend in the player s board e.g. collecting rent by clicking on a building . In addition the progress made by a friend may also be shown in the news banner.

When the friend performs an action in the player s board to help player the friend sees the consequences of providing help on the game stage e.g. if the friend clicks on a crop that is ready to be harvested the crop is harvested and the field changes the dirt showing that the field is ready for planting a new crop . In addition the friend receives rewards e.g. currency for giving a helping hand. On the player s side as the friend gives a helping hand the actions of friend are shown on the player s board . In one embodiment the news field is updated with information regarding the help provided by friend.

In operation the friend sends a request to the player for help. For example the friend wishes to staff her Post Office with player . On the player s game the request for help is shown to player and since player is online the player has immediate access to the request. A message from friend is displayed and an option e.g. a button to accept the request for help is presented to the player. In one embodiment the player is given an option to accept and an option to ignore or reject the request.

After the player reads the message with the request the player accepts or rejects the request. If the player decides to help by for example clicking on the accept button the action to provide help to the friend is started. It is noted that the player is able to provide help while playing in the player s board without having to visit the friend s game board.

When in synchronous mode the help provided by player is visualized in the friend s game . For example a character associated with the player parachutes from a helicopter into the Post Office as previously described with reference to . In one embodiment a player gets a bonus or reward for helping . Therefore the player has an incentive to help especially given the small effort required to provide the help i.e. the low friction interaction. In one embodiment the news stream is updated in the player s game board and or the friend s game board.

When the friend s game detects the franchise request the request is presented on the display. In one embodiment the request is presented on top of the empty lot where the franchise would be installed. If the friend accepts the franchise installation the franchise is placed in the friend s board where the empty lot previously existed . After the friend s acceptance the player s game board displays the news that the friend has installed the franchise . In one embodiment the player also collects a bonus or reward for having installed the franchise.

In operation the friend signs out and the status changes to offline . When that player s game detects that the friend is now offline the online game returns to an asynchronous mode of play.

The method continues the operation where a request is presented the request being for assistance to the first user in the first game board and being generated in the second game board. Further in operation upon detection of acceptance of the request by the first user an animation is generated in the second game board. The animation presents a sequence of images that appear as an action performed by the first user in the second game board. Additionally the action occurs without the first user accessing the second game board and the action performed in the second game board completes at least one task associated with the request for assistance.

In one embodiment the action occurs without input by the first user to control the action in the second game board. The action may be in the form of an animation of an avatar of the first user which appears to the second user as if the first user was actually providing active participation and was actually controlling his or her avatar on the game board of the second user but without requiring the active participation of the first user. In one embodiment the animation may include a plurality of avatars. For example the avatar associated with the first player visits the game board of the second player accompanied by a crew of workers which then help to complete the activity such as for example building a road. Further the action is automatically executed by the online game without direction from the first user to simulate that the first user is performing the action. Of course the user may start the action by providing an input that authorizes the help to the second user but after the authorization is given the involvement of the first user ends and the game takes over from there to complete the animation.

In one embodiment the action takes a form from a plurality of forms based on game context or the action to be performed. Each form from the plurality of forms defines a sequence of moves or interactivity by an avatar or by objects in the game board or by a combination thereof. For example if the action is building a post office the avatar may wear construction worker type clothes and carry one or more tools such as a shovel. The animation for building the post office may include a sequence of images with different progress on the construction of the post office from building the foundation to putting the roof. In one embodiment each of the forms from the plurality of forms is selected dynamically by the online game. The form may be selected from a lookup table but other types of animation selection logic are also possible. The lookup table is accessed to select the corresponding animation based on the current context of the game and the activity being performed.

One or more links couple a server or a client to network . In particular embodiments one or more links each includes one or more wireline wireless or optical links . In particular embodiments one or more links each includes an intranet an extranet a VPN a LAN a WLAN a WAN a MAN a portion of the Internet or another link or a combination of two or more such links .

Each server may be a stand alone server or may be a distributed server spanning multiple computers or multiple datacenters. Servers may be of various types such as for example and without limitation web server news server mail server message server advertising server file server application server exchange server database server or proxy server. Each server may include hardware software embedded logic components or a combination of two or more such components for carrying out the appropriate functionalities implemented or supported by server . For example a web server is generally capable of hosting websites containing web pages or particular elements of web pages. More specifically a web server may host HTML files or other file types or may dynamically create or constitute files upon a request and communicate them to clients in response to HTTP or other requests from clients . A mail server is generally capable of providing electronic mail services to various clients . A database server is generally capable of providing an interface for managing data stored in one or more data stores.

In particular embodiments one or more data storages may be communicatively linked to one or more severs via one or more links . Data storages may be used to store various types of information. The information stored in data storages may be organized according to specific data structures. In particular embodiments each data storage may be a relational database. Particular embodiments may provide interfaces that enable servers or clients to manage e.g. retrieve modify add or delete the information stored in data storage .

In particular embodiments each client may be an electronic device including hardware software or embedded logic components or a combination of two or more such components and capable of carrying out the appropriate functionalities implemented or supported by client . For example and without limitation a client may be a desktop computer system a notebook computer system a netbook computer system a handheld electronic device or a mobile telephone. A client may enable a network player at client to access network . A client may enable its player to communicate with other players at other clients . Further each client may be a computing device such as a desktop computer or a work station or a mobile device such as a notebook computer a network computer or a smart telephone.

In particular embodiments a client may have a web browser such as MICROSOFT INTERNET EXPLORER GOOGLE CHROME or MOZILLA FIREFOX and may have one or more add ons plug ins or other extensions. A player at client may enter a Uniform Resource Locator URL or other address directing the web browser to a server and the web browser may generate a Hyper Text Transfer Protocol HTTP request and communicate the HTTP request to server . Server may accept the HTTP request and communicate to client one or more Hyper Text Markup Language HTML files responsive to the HTTP request. Client may render a web page based on the HTML files from server for presentation to the user. The present disclosure contemplates any suitable web page files. As an example and not by way of limitation web pages may render from HTML files Extensible Hyper Text Markup Language XHTML files or Extensible Markup Language XML files according to particular needs. Such pages may also execute scripts such as for example and without limitation those written in JAVASCRIPT JAVA MICROSOFT SILVERLIGHT combinations of markup language and scripts such as AJAX Asynchronous JAVASCRIPT and XML and the like. Herein reference to a web page encompasses one or more corresponding web page files which a browser may use to render the web page and vice versa where appropriate.

Web browser may be adapted for the type of client where the web browser executes. For example a web browser residing on a desktop computer may differ e.g. in functionalities from a web browser residing on a mobile device. A user of a social networking system may access the website via web browser .

As example and not by way of limitation computer system may be an embedded computer system a system on chip SOC a single board computer system SBC such as for example a computer on module COM or system on module SOM a desktop computer system a laptop or notebook computer system an interactive kiosk a mainframe a mesh of computer systems a mobile telephone a personal digital assistant PDA a server or a combination of two or more of these. Where appropriate computer system may include one or more computer systems be stand alone or distributed span multiple locations span multiple machines or reside in a cloud which may include one or more cloud components in one or more networks. The one or more computer systems may perform in real time or in batch mode one or more operations of one or more methods described or illustrated herein.

In particular embodiments computer system includes a processor memory storage an input output I O interface a communication interface and a bus . Although this disclosure describes and illustrates a particular computer system having a particular number of particular components in a particular arrangement embodiments of the invention may be implemented with any suitable computer system having any suitable number of any suitable components in any suitable arrangement.

In particular embodiments processor includes hardware for executing instructions such as those making up a computer program. As an example and not by way of limitation to execute instructions processor may retrieve or fetch the instructions from an internal register an internal cache memory or storage decode and execute them and then write one or more results to an internal register an internal cache memory or storage . The present disclosure contemplates processor including any suitable number of any suitable internal registers where appropriate. Where appropriate processor may include one or more arithmetic logic units ALUs be a multi core processor or include one or more processors . Although this disclosure describes and illustrates a particular processor this disclosure contemplates any suitable processor.

In particular embodiments memory includes main memory for storing instructions for processor to execute or data that can be manipulated by processor . As an example and not by way of limitation computer system may load instructions from storage or another source such as for example another computer system to memory . Processor may then load the instructions from memory to an internal register or internal cache. During or after execution of the instructions processor may write one or more results which may be intermediate or final results to the internal register or internal cache. Processor may then write one or more of those results to memory . One or more memory buses which may each include an address bus and a data bus may couple processor to memory . Bus may include one or more memory buses as described below. One or more memory management units MMUs reside between processor and memory and facilitate accesses to memory requested by processor . Memory includes random access memory RAM .

As an example and not by way of limitation storage may include an HDD a floppy disk drive flash memory an optical disc a magneto optical disc magnetic tape or a Universal Serial Bus USB drive or a combination of two or more of these. Storage may include removable or non removable or fixed media where appropriate. In particular embodiments storage includes read only memory ROM . Where appropriate this ROM may be mask programmed ROM programmable ROM PROM erasable PROM EPROM electrically erasable PROM EEPROM electrically alterable ROM EAROM or flash memory or a combination of two or more of these.

In particular embodiments I O interface includes hardware software or both providing one or more interfaces for communication between computer system and one or more I O devices. One or more of these I O devices may enable communication between a person and computer system . As an example and not by way of limitation an I O device may include a keyboard keypad microphone monitor mouse printer scanner speaker still camera stylus tablet touch screen trackball video camera another suitable I O device or a combination of two or more of these.

Communication interface includes hardware software or both providing one or more interfaces for communication between computer system and one or more other computer systems on one or more networks. As an example and not by way of limitation communication interface may include a network interface controller NIC or network adapter for communicating with an Ethernet or other wire based network or a wireless NIC WNIC or wireless adapter for communicating with a wireless network such as a WI FI network. As an example computer system may communicate with a wireless PAN WPAN such as for example a BLUETOOTH WPAN a WI FI network a WI MAX network a cellular telephone network such as for example a Global System for Mobile Communications GSM network or other suitable wireless network or a combination of two or more of these.

In particular embodiments bus includes hardware software or both coupling components of computer system to each other. As an example and not by way of limitation bus may include an Accelerated Graphics Port AGP or other graphics bus an Enhanced Industry Standard Architecture EISA bus a front side bus FSB a HYPERTRANSPORT HT interconnect an Industry Standard Architecture ISA bus an INFINIBAND interconnect a low pin count LPC bus a memory bus a Micro Channel Architecture MCA bus a Peripheral Component Interconnect PCI bus a PCI Express PCI X bus a serial advanced technology attachment SATA bus a Video Electronics Standards Association local VLB bus or another suitable bus or a combination of two or more of these. Bus may include one or more buses where appropriate. Although this disclosure describes and illustrates a particular bus this disclosure contemplates any suitable bus or interconnect.

Herein reference to a computer readable storage medium encompasses one or more non transitory tangible computer readable storage media possessing structure that may store a computer program or data. As an example and not by way of limitation a computer readable storage medium may include a semiconductor based or other integrated circuit IC such as for example a field programmable gate array FPGA or an application specific IC ASIC a hard disk an HDD a hybrid hard drive HHD an optical disc an optical disc drive ODD a magneto optical disc a magneto optical drive a floppy disk a floppy disk drive FDD magnetic tape a holographic storage medium a solid state drive SSD a RAM drive a Secure Digital card a Secure Digital drive or another suitable computer readable storage medium or a combination of two or more of these where appropriate. Herein reference to a computer readable storage medium excludes any medium that is not eligible for patent protection under 35 U.S.C. 101.

One or more embodiments of the present invention can also be fabricated as computer readable code on a non transitory computer readable medium. Herein reference to software may encompass one or more applications bytecode one or more computer programs one or more executables one or more instructions logic machine code one or more scripts or source code and vice versa where appropriate.

The present disclosure encompasses all changes substitutions variations alterations and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend.

