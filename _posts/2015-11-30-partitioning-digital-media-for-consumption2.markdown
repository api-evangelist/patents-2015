---

title: Partitioning digital media for consumption
abstract: Embodiments of the present invention partition digital media content. One or more processors identify an episode of digital media content based on subscription preferences of a user. The one or more processors respond to a determination that a duration of the episode is less than or equal to a combined duration of two free time slots in an electronic calendar of a user by partitioning the episode into at least two segments. A first episode segment has a duration that is less than or equal to a duration of the first free time slot. A second episode segment has a duration that is less than or equal to the duration of the second free time slot. The one or more processors associate, in the electronic calendar, the first episode segment with the first time slot and the second episode segment with the second time slot.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09537922&OS=09537922&RS=09537922
owner: International Business Machines Corporation
number: 09537922
owner_city: Armonk
owner_country: US
publication_date: 20151130
---
The present invention relates generally to the field of digital media and more particularly to partitioning digital media content for consumption.

Availability of digital media such as audio tracks or video clips is expanding at a rapid pace. A common form of prescriptive digital media content comes from Rich Site Summary RSS feeds. RSS feeds are hosted on web servers and allow a user to subscribe to an episodic series of text audio or video content to be downloaded to computing devices such as a smart phone tablet or portable media player device. An RSS document includes full or summarized text along with meta data such as author s name publishing date and duration. The portable device constantly monitors the RSS website for updates to subscribed content and automatically downloads the new electronic content from the host computer for consumption by the user at a later time. The selection of content and the timing of downloads may be supported by a utility program that manages the subscription based on user preferences. An RSS reader allows the user to consume the received content offline at a convenient time.

Mobile devices such as smart phones tablets and portable media players provide capabilities that were once the domain of desktop computers and laptops such as accessing email web browsing reading RSS feeds and accessing calendars for tracking meetings and appointments. Mobile calendaring applications often allow the user to set up events with alarms to notify the user of upcoming events and provide information to the user about the event such as topic duration links to electronic media content etc.

Embodiments of the present invention disclose a method computer program product and computer system for partitioning digital media content for consumption. One or more processors identify an episode of digital media content wherein the identified first episode matches received user subscription preferences. The one or more processors respond to a determination that a duration of the episode is less than or equal to a combined duration of a first free time slot and a second free time slot in an electronic calendar of a user by partitioning the episode into at least two segments such that i a first episode segment has a duration that is less than or equal to a duration of the first free time slot and ii a second episode segment has a duration that is less than or equal to the duration of the second free time slot. The one or more processors associate in the electronic calendar of the user the first episode segment with the first time slot and the second episode segment with the second time slot.

As the amount of available digital media such as e books audio tracks or video clips increases finding time to listen or watch selected media becomes difficult. Most users subscribe to multiple Rich Site Summary RSS feeds but do not set aside enough time to consume the content they have downloaded. Embodiments of the present invention provide for partitioning digital media content into smaller segments for fitting into a list of free time slots on an electronic personal calendar and displaying entries on the calendar to aid in consuming the segments. Implementation of embodiments of the invention may take a variety of forms and exemplary implementation details are discussed subsequently with reference to the figures.

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

The present invention will now be described in detail with reference to the figures. is a functional block diagram illustrating a distributed data processing environment generally designated in accordance with an embodiment of the present invention. Distributed data processing environment includes server computer and client computers and interconnected over network .

Network can be for example a local area network LAN a wide area network WAN such as the Internet or a combination of the two and can include wired wireless fiber optic or any other connection known in the art. In general network can be any combination of connections and protocols that may support communications between server computer and client computers and in accordance with a desired embodiment of the present invention.

Server computer may be a specialized server computer a laptop computer tablet computer netbook computer personal computer PC a desktop computer a personal digital assistant PDA a smart phone or any programmable electronic device capable of communicating with client computers and via network . In certain embodiments server computer represents a computer system utilizing clustered computers and components that act as a single pool of seamless resources when accessed through network as is common in data centers and with cloud computing applications. In general server computer is representative of any programmable electronic device or combination of programmable electronic devices capable of executing machine readable program instructions and communicating with other computing devices via a network. Server computer may be a node in a distributed database management environment. Server computer may include internal and external hardware components as depicted and described in further detail with respect to .

Server computer includes an instance of digital media server application content divider and digital media content . In the depicted environment digital media server application is an application with capabilities including but not limited to allowing users to select subscribe to purchase download and manage digital media assets which are stored on a server such as server computer and downloaded or streamed to a client computer such as client computers and . In other embodiments of the present invention digital media server application content divider and digital media content may be on one computer or more than one computer and each item itself may be split into a plurality of parts or modules and spread across more than one computer. In any configuration the following is maintained digital media server application is connected to content divider and digital media content .

In an embodiment of the present invention digital media server application retrieves requested digital media content from digital media content and uses content divider to partition the retrieved digital media content to fit in two or more of the user s free time slots on an electronic calendar. Digital media content is a collection or database of digital media content files including but not limited to text files audio tracks or video clips stored on server computer or coupled to server computer via network . Content divider may be fully integrated partially integrated or completely separate from digital media server application . Content divider is described further in . Digital media server application is described further in .

In various embodiments of the present invention client computers and can each respectively be a laptop computer a tablet computer an application server a business email and calendar server a netbook computer a personal computer PC a desktop computer a personal digital assistant PDA a smartphone a portable media player or any programmable electronic device capable of communicating with server computer via network .

Client computers and may each respectively include an instance of client application which executes locally on the respective client computer and has the capability to connect to digital media server application on server computer via network . Client application sends information to and receives information from server computer over network . In the depicted environment client application is an application with capabilities including but not limited to allowing users to select purchase subscribe download and play various digital media content. Client application may be any program capable of connecting to digital media server application for the purpose of requesting digital media server application to perform some task. In some embodiments client application may be an associated client application created by the vendor or developer of digital media server application for use in a server client environment. In the depicted environment client application uses a user interface such as UI to receive user input and to output responses to a user. In various embodiments of the invention client application accesses user calendar to identify free time slots and to add calendar events in those free time slots with details for consuming digital media content which was partitioned by content divider to fit in two or more free time slots. In alternate embodiments client application program may reside on server computer . Client application is described further in .

User calendar is accessible by client application and may reside on the same client computer as client application or may reside on a different client computer such as client computers or . For example user calendar may reside on the user s laptop computer but an instance of client application residing on a smartphone or tablet can access or edit user calendar . User calendar may be viewed by client application and may receive input from client application to add one or more events to user calendar including a link to digital media content. When a link to digital media content is selected by a user user calendar uses client application to retrieve and display the digital media content.

UI may utilize a web page application a command line processor or any other graphical user interface GUI . UI includes components used to receive input from a user and transmit the input to client application residing on the respective client computer. In an embodiment UI uses a combination of technologies and devices such as device drivers to provide a platform to enable users of client computers and to interact with client application . In the exemplary embodiment UI receives input such as a selection from a list of items the selection received from a physical input device such as a keyboard or mouse via a device driver that corresponds to the physical input device.

In the illustrative embodiment of the present invention client application manages the user s subscriptions to episodes of digital media content from providers of prescriptive digital media such as various RSS feeds. Client application running on client computer has the ability to access the user s electronic calendar such as user calendar to identify all available free time slots within a specified beginning and end time for each day of the week according to user preferences. Upon identifying two or more free time slots on user calendar client application sends a request for content to digital media server application . Digital media server application receives a request for digital media content from client application via network . The request includes user subscription details and criteria regarding the number of free time slots and duration of each free time slot. Digital media server application processes the request and sends the partitioned digital media content or a link to it back to client application .

In various embodiments digital media server application running on server computer receives a request for digital media content from client application running on client computer via network . In other embodiments a request for digital media content may come from client application running on client computers or . In another embodiment a request for digital media content may come from within server computer through a server version of client application . Digital media server application retrieves the requested digital media content from digital media content . Digital media server application compares the duration of the free time slots with the durations of each retrieved episode of digital media content. Digital media server application uses content divider to partition the retrieved digital media content into segments to fit within two or more of the user s free time slots. Digital media server application sends the partitioned digital media content or links to it to client application on the requesting computer such as client computer via network . Client application adds calendar entries to free time slots on user calendar with links to the partitioned digital media content. The user may then consume the partitioned digital media content through UI by viewing the calendar during the associated free time and clicking on a link.

In the illustrative embodiment of the present invention client application requests a user of client computer to set up access to the user s electronic calendar such as user calendar by providing user credentials and access information about the application that manages the electronic calendar. Client application accesses user calendar through an application programming interface API of client application . User calendar may reside on a smartphone such as client computer or may be accessible to client application via network such as through a business email and calendar server on a separate computer such as client computer . Client application receives user credentials and access information through UI which may be entered upon each use or stored within a data store of client application for automatic retrieval. User credentials and access information may include but is not limited to username email address password server address and device name. Client application accesses user calendar step .

Client application identifies two or more calendar free time slots on user calendar step . Client application examines user calendar looking for available time between events including but not limited to meetings appointments start of day end of day and indicated travel time. For each time slot between events client application calculates a duration of time and labels it as a calendar free time slot CFTS such as CFTS1 CFTS2 CFTS3 etc. Travel time may also be included as a CFTS. Each CFTS has associated properties including but not limited to date start time end time content preferences and the calculated duration. Client application performs the process of identifying calendar free time slots on demand from the user or at different intervals for example daily or weekly depending on input from the user or previously defined defaults which are stored by client application . Content preferences for any CFTS within specific time ranges may also be input from the user and stored in client application . For example digital media content selected during work hours may come from different RSS feeds than digital media content selected for after dinner as in educational content versus entertainment content. Also a CFTS created during travel time may include content preferences such as limiting content to audio only.

Client application determines if two or more calendar free time slots are found decision block . If client application determines that only one or no calendar free time slots are found no branch decision block client application does not add calendar entries to user calendar . If desired client application may display a message to the user via UI denoting that no entries have been added to the calendar. No further processing is required by client application .

If client application determines that two or more calendar free time slots are found yes branch decision block client application sends the digital media content request including all criteria to digital media server application step . Client application creates a request for digital media content to fit within a list of calendar free time slots such as CFTS1 CFTS2 and CFTS3 for a specified time frame such as one day. Client application incorporates the properties e.g. duration and content preferences for each CFTS into the digital media content request to be sent to digital media server application . Client application manages the user s subscriptions to digital media content from various providers such as RSS feeds. Client application stores the subscription information for each user within client application or in a connected data store. Client application incorporates the user subscription details into the same digital media content request to be sent to digital media server application .

Client application receives unpartitioned and partitioned digital media content from digital media server application step . The unpartitioned digital media content includes an episode which fits within a single CFTS and does not need to be segmented. The partitioned digital media content received from digital media server application includes two or more segments of at least one episode of digital media content which was segmented and assigned to two or more sequential CFTSs. Client application either downloads and stores the digital media content onto client computer or it receives a link to the digital media content to be used later. Along with the content or link client application receives information from digital media server application matching each received segment of digital media content to a specific CFTS.

Client application determines if digital media content was received decision block . If client application determines that digital media content was not received no branch decision block client application does not add calendar entries to user calendar . If desired client application may display a message to the user via UI denoting that no entries have been added to the calendar. No further processing is required by client application .

If client application determines that digital media content was received yes branch decision block client application adds a calendar entry to user calendar in two or more calendar free time slots step . For each segment of digital media content received client application adds a calendar entry on user calendar in the date and time range defined by the properties of the related CFTS. If there are multiple segments of digital media content from different episodes assigned to the same CFTS the calendar entry will be updated to include the multiple segments. An example of a title of a calendar entry may be 3 Segments available for view during this time . The calendar entry for each CFTS may be formatted to include items such as title of segment duration of segment and a link to each available segment of digital media content. The link may be to a previously downloaded file on client computer or to a link to a file or section of a file on the web for streaming. The added calendar entry may contain an alert function which displays at least a portion of user calendar to the user via UI at the start of each CFTS containing digital media content. In some embodiments each sequential segment of digital media content may be matched or assigned to a later CFTS such that the segments will be consumed in order.

Client application receives a request from a user to display content step . Upon viewing user calendar or a calendar entry alert from user calendar a user may select a link within a calendar entry that points to a segment of digital media content. Client application uses the link to retrieve the digital media content either from a downloaded location on client computer or from a web server such as server computer . Client application provides or accesses the tools for playing the digital media content using one or more of audio video or textual display. Client application displays the retrieved digital media content to the user through UI step .

Digital media server application identifies a content request including criteria from client application step . The digital media content request identified from client application includes criteria not limited to the user s subscription details and the duration and content preferences for each CFTS within a list of calendar free time slots such as CFTS1 CFTS2 and CFTS3. Criteria may also include an option for rejection of content too long to fit within the sum of available calendar free time slots. Content preferences for each CFTS include one or more of video audio text or some other form of digital media. For example travel time may be limited to audio only.

Digital media server application identifies available digital media content from the received criteria step . Utilizing the user s subscription details digital media server application connects to the website associated with the RSS feeds to look for updates. The monitoring of the website for updates may happen on demand or on a schedule set by the user. Updates are identified individually as episodes of digital media content. RSS subscriptions are only one type of digital media content and the invention is not limited to this type of content or this type of connection to content. A person skilled in the art will recognize that there are many types of digital media content available for use by digital media server application .

Digital media server application determines if matching digital media content is found decision block . If digital media server application determines matching digital media content is not found no branch decision block then digital media server application does not return digital media content. Digital media server application may send a message to client application indicating that no matching content was found. No further processing is required by digital media server application . Digital media server application identifies the meta data of the subscribed digital media content to determine if it matches the content preferences for each CFTS in the list of calendar free time slots. If the content preference for an available CFTS is audio only and the meta data of the retrieved digital media content is video only then digital media server application will determine matching digital media content is not found.

If digital media server application determines matching digital media content is found yes branch decision block then digital media server application retrieves content for one or more matching episodes from digital media content step . In some embodiments digital media content represents a storage location for digital media content related to an RSS feed. Digital media content may be any data store such as a database or collection of files connected to a website application server such as server computer . Digital media server application retrieves the identified digital media content by downloading one or more episodes or files onto server computer or into memory of server computer for processing. For each retrieved episode digital media server application determines if the retrieved episode of digital media content fits the duration of at least one CFTS of a list of calendar free time slots decision block . Digital media server application compares the duration of the retrieved episode of digital media content with the duration of each CFTS in the list of calendar free time slots. If the duration of the episode is equal to or less than at least one of the CFTS then digital media server application determines the retrieved episode of digital media content fits the duration of at least one CFTS yes branch decision block . If the retrieved episode of digital media content fits within one time slot there is no need to create segments of the content steps to are skipped and digital media server application determines if all retrieved episodes have been assigned to a free time slot decision block .

If the duration of the episode is greater than each of the CFTSs in the list of calendar free time slots then digital media server application determines the retrieved episode of digital media content does not fit the duration of one CFTS no branch decision block . Digital media server application sends the retrieved episode of digital media content and the list of calendar free time slots to content divider step .

If the duration of the episode is greater than the summed duration of all of the CFTSs in the list of calendar free time slots then there are not enough time slots available in the searched time frame to contain the entire episode. Digital media server application stores the remaining portion to process the next time digital media server application performs the task of scheduling digital media content for consumption. In an alternate embodiment digital media server application may reject the episode as not matching in step . The ability to reject the episode may be part of the selection criteria passed in step .

Digital media server application receives partitioned digital media content and orphaned remainder from content divider step . The partitioned digital media content received from content divider includes two or more segments of one episode of digital media content which was segmented and related to two or more CFTSs. Digital media server application receives either two or more files containing the content or two or more links to the digital media content. Along with the content files or links digital media server application receives information from content divider regarding the assignment of each segment of digital media content to a specific CFTS. In the case where a remaining portion of an episode exists after all previous segments have been assigned to the available free time slots the remainder or orphan is stored for later processing. Digital media server application receives any orphaned remainder of a processed episode from content divider to store for processing the next time digital media server application performs the task of scheduling digital media content for consumption. Digital media server application may also send a message to client application indicating an orphaned remainder exists. Client application may send a message to the user via UI indicating an orphaned remainder exists and offering an option to expand the time frame for identifying calendar free time slots and reprocessing the content request.

Digital media server application determines if all retrieved episodes have been assigned to a free time slot decision block . If digital media server application determines that all retrieved episodes have not been assigned to a free time slot no branch decision block then digital media server application determines if the next episode of digital media content fits the duration of at least one CFTS of the list of calendar free time slots decision block . Digital media server application loops through steps through as previously described until all retrieved episodes of digital media content have been processed.

If digital media server application determines that all retrieved episodes have been assigned to a free time slot yes branch decision block then digital media server application sends unpartitioned and partitioned digital media content to client application step . The unpartitioned digital media content includes any episode which fits within a single CFTS and does not need to be segmented. The partitioned digital media content includes two or more segments of any one episode of digital media content which was segmented and related to two or more CFTSs. Digital media server application sends the available unpartitioned content and partitioned content to client application at the same time or may send them at different times. Digital media server application sends the unpartitioned content and partitioned content as either one or more files containing the content or one or more links to the digital media content. A person skilled in the art will recognize that there are many ways to send the unpartitioned and partitioned content to client application .

Content divider receives a retrieved episode of digital media content and the list of two or more free time slots from digital media server application step . The received episode of digital media content has been previously determined to not fit wholly in the duration of any one free time slot in the list of free time slots by digital media server application . Content divider receives a list of two or more calendar free time slots such as CFTS1 CFTS2 and CFTS3. For example a sixty minute episode of digital media content titled Weekly Tech News Ep. 305 subscribed to by the user has been passed to content divider along with criteria for CFTS1 CFTS2 and CFTS3 which have durations of thirty minutes twenty minutes and ten minutes respectively.

Content divider identifies markers within the received episode of digital media content step . When an episode of digital media content is initially created identifiable markers are placed within the episode or within the episode file meta data to facilitate partitioning the digital media content. For example markers may be placed at locations within the received episode corresponding to a unit of time such as every five or ten minutes or at locations where the subject matter may easily be broken up such as the end of a paragraph or story or at the end of an action sequence similar to chapters in a DVD movie. Each marker is defined by a time in relation to the start of the episode.

Content divider determines a marker that corresponds to a duration of a first free time slot step . Content divider determines which marker within the received episode creates a first segment which is less than or equal to the duration of the first free time slot in the received list of consecutive free time slots. In the example CFTS1 has a duration of thirty minutes. Content divider reads the meta data of the received episode file and determines that MARKER6 divides the episode file into a first piece that is thirty minutes long and a second piece which holds the remaining content. Content divider determines that MARKER6 corresponds to the duration of time associated with CFTS1.

Content divider creates a first segment of the received episode using the determined marker step . In the example content divider creates the first segment i.e. SEGMENT1 from the received episode of digital media content by dividing the content file at MARKER6 or thirty minutes into the content. The segment may either be a new file shortened from the original a link to the new file or a link to the original file which includes variables that detail the start and end times. SEGMENT1 may be formatted with meta data including the duration and is matched with CFTS1. User preferences may include partitioning criteria such as the minimum duration of orphans or the maximum number of segments which may be created from a single episode of digital media content. A person skilled in the art will recognize that there are many ways to define a segment of a file.

Content divider determines a duration of the remainder of the received episode step . Content divider subtracts the time of the determined marker from the original duration of the received episode to determine a duration of the remainder of the received episode to be stored in a variable i.e. REMAINDER.

Content divider determines if content partitioning is complete decision block . Partitioning is complete when REMAINDER is zero. If content divider determines that REMAINDER is zero then content partitioning is complete yes branch decision block and no further segments need to be created. Content divider sends any created segments to digital media server application step and no further processing is required by content divider .

If content divider determines that REMAINDER is greater than zero but no more free time slots exist in the list of calendar free time slots then partitioning is complete as there are not enough time slots available to contain the entire episode yes branch decision block . Content divider sends the orphaned remainder of the episode to digital media server application step to store the remaining portion for processing the next time digital media server application performs the task of scheduling digital media content for consumption and no further processing is required by content divider .

If content divider determines that REMAINDER is greater than zero and there are still unmatched free time slots in the list of calendar free time slots then content partitioning is not complete no branch decision block then content divider determines a marker that corresponds to the duration of the next free time slot step . Content divider determines which marker within the received episode creates a next segment which starts with the previous determined marker and which is less than or equal to the duration of the next sequential free time slot in the received list of free time slots. In the example CFTS2 has a duration of twenty minutes. Content divider reads the meta data of the received episode file and determines that MARKER10 divides the episode file from MARKER6 to MARKER10 into a next segment which is twenty minutes long. Content divider subtracts the time of the new determined marker from the original duration of the received episode to determine the duration of the remainder of the received episode and stores the shorter duration in the previously defined variable i.e. REMAINDER.

Content divider creates a next segment from the remainder of the received episode using the determined marker step . Content divider creates the next segment from the received episode of digital media content by dividing the content file between the determined marker and the previously determined marker. The loop of steps through may continue until REMAINDER is zero after forming multiple segments from the original received episode of digital media content.

In the example on the first time through the loop content divider creates the next segment i.e. SEGMENT2 from the received episode of digital media content by partitioning the episode file between MARKER6 and MARKER10 or twenty minutes into the remaining content. In the second time through the loop content divider creates the next segment i.e. SEGMENT3 from the received episode of digital media content by partitioning the episode file between MARKER10 and MARKER12 or ten minutes into the remaining content. At this point REMAINDER is zero content partitioning is complete yes branch decision block the loop is finished and no further segments need to be created.

Content divider sends partitioned digital media content and orphaned remainder to digital media server application step . In the example content divider sends SEGMENT1 SEGMENT2 and SEGMENT3 to digital media server application . The transmitted segments may each be a new file shortened from the original a link to the new file or a link to the original file which includes variables that detail the start and end times of the segment. Content divider sends any orphaned remainder of the episode to digital media server application to store for processing the next time digital media server application performs the task of scheduling digital media content for consumption and no further processing is required by content divider .

Server computer and client computers and each include respective communications fabric which provides communications between computer processor s memory persistent storage communications unit and input output I O interface s . Communications fabric can be implemented with any architecture designed for passing data and or control information between processors such as microprocessors communications and network processors etc. system memory peripheral devices and any other hardware components within a system. For example communications fabric can be implemented with one or more buses.

Memory and persistent storage are computer readable storage media. In this embodiment memory includes random access memory RAM and cache memory . In general memory can include any suitable volatile or non volatile computer readable storage media.

Digital media server application content divider digital media content and client application are stored in respective persistent storage for execution and or access by one or more of the further respective computer processors via one or more memories of memory . In this embodiment persistent storage includes a magnetic hard disk drive. Alternatively or in addition to a magnetic hard disk drive persistent storage can include a solid state hard drive a semiconductor storage device read only memory ROM erasable programmable read only memory EPROM flash memory or any other computer readable storage media that is capable of storing program instructions or digital information.

The media used by persistent storage may also be removable. For example a removable hard drive may be used for persistent storage . Other examples include optical and magnetic disks thumb drives and smart cards that are inserted into a drive for transfer onto another computer readable storage medium that is also part of persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices including resources of server computer and client computers and . In these examples communications unit includes one or more network interface cards. Communications unit may provide communications through the use of either or both physical and wireless communications links. Digital media server application content divider digital media content and client application may be downloaded to respective persistent storage through communications unit .

I O interface s allows for input and output of data with other devices that may be connected to server computer and client computers and . For example I O interface may provide a connection to external device s such as a keyboard a keypad a touch screen and or some other suitable input device. External device s can also include portable computer readable storage media such as for example thumb drives portable optical or magnetic disks and memory cards. Software and data used to practice embodiments of the present invention e.g. digital media server application content divider digital media content and client application can be stored on such portable computer readable storage media and can be loaded onto respective persistent storage via I O interface s . I O interface s also connect to a display .

The programs described herein are identified based upon the application for which they are implemented in a specific embodiment of the invention. However it should be appreciated that any particular program nomenclature herein is used merely for convenience and thus the invention should not be limited to use solely in any specific application identified and or implied by such nomenclature.

