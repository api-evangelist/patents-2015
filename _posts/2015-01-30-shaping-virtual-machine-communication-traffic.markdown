---

title: Shaping virtual machine communication traffic
abstract: Cloud computing platforms having computer-readable media that perform methods to shape virtual machine communication traffic. The cloud computing platform includes virtual machines and a controller. The controller limits the traffic associated with the virtual machines to enable the virtual machines to achieve desired communication rates, especially when a network servicing the virtual machines is congested. The controller may drop communication messages associated with the virtual machines based on a drop probability evaluated for the virtual machines.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09231878&OS=09231878&RS=09231878
owner: Microsoft Technology Licensing, LLC
number: 09231878
owner_city: Redmond
owner_country: US
publication_date: 20150130
---
This application is a continuation of U.S. patent application Ser. No. 13 959 790 filed 6 Aug. 2013 which is a continuation of U.S. patent application Ser. No. 13 545 407 filed 10 Jul. 2012 which is a continuation of U.S. Pat. No. 8 234 400 issued 31 Jul. 2012 filed 16 Mar. 2010 which are each hereby incorporated herein by reference in their entirety.

Conventionally cloud computing platforms host software applications in an Internet accessible virtual environment. The cloud computing platform allows an organization to use datacenters designed and maintained by third parties. The conventional virtual environment supplies small or large organizations with requested hardware resources software application resources network resources and storage resources. The virtual environment also provides application security application reliability application scalability and application availability.

The conventional datacenters provide the physical computing resources physical storage resources and physical network resources. The physical resources in the data center are virtualized and exposed to the organizations as a set of application programming interfaces. The organizations do not need to maintain their own hardware resources or software resources or maintain datacenters that are reliable and scalable.

The organizations may access these physical resources efficiently through the virtual environment without knowing the details of the software or the underlying physical hardware. In a conventional cloud computing platform the hardware resources and software resources may be shared by organizations who do not trust each other. To prevent denial of service to any one organization the conventional cloud platforms provide procedures that maintain equitable access to the shared resources. Most of the procedures require a significant amount of state information which increases computational and cost overhead in the cloud computing platform.

For instance the sharing procedures may include leaky bucket token bucket and fair queuing. The leaky bucket procedure stores communication messages in a queue and transmits the communication messages at a constant rate. When the queue is full communication messages are discarded. The token bucket procedure stores communication message in a queue and transmits the communication at a rate that is based on the number of tokens associated with the queue. Communication message may be discarded if the communication messages wait in the bucket for a predetermined time. The fair queuing procedure stores communication message in a queue and transmits the communication messages at a rate the is equal or proportional to the rate of experienced by other queues for other communication sessions. These procedures provide a mechanism to share resources in the cloud but have high CPU overhead because of the need to maintaining queues and associated state for the queues.

Embodiments of the invention relate in one regard to cloud computing platforms computer readable media and computer implemented methods that shape virtual machine traffic in a cloud computing platform. The cloud computing platform includes controllers and virtual machines that are connected to a communication network. The controllers provide a stateless mechanism for shaping communication traffic with minimal overhead.

The controllers monitor traffic on the communication network. The controllers calculate an average communication rate for virtual machines connected to the communication network. In turn a desired sending rate for the virtual machines is obtained by the controller. The controller determines a drop probability for the virtual machines based on the average communication rate. Communication messages in the network are dropped based on the drop probability for the virtual machines.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used in isolation as an aid in determining the scope of the claimed subject matter.

This patent describes the subject matter for patenting with specificity to meet statutory requirements. However the description itself is not intended to limit the scope of this patent. Rather the inventors have contemplated that the claimed subject matter might also be embodied in other ways to include different steps or combinations of steps similar to the ones described in this patent in conjunction with other present or future technologies. Moreover although the terms step and block may be used herein to connote different elements of methods employed the terms should not be interpreted as implying any particular order among or between various steps herein disclosed unless and except when the order of individual steps is explicitly described. Further embodiments are described in detail below with reference to the attached drawing figures which are incorporated in their entirety by reference herein.

The cloud computing platform enables sharing of hardware and software resources among virtual machines. In some embodiments virtual machine traffic is limited to prevent resource starvation in the cloud computing platform. The cloud computing platform execute traffic shaping procedures that limit bandwidth utilized by the virtual machines. Accordingly the cloud computing platform protects shared resources from malicious virtual machines that attempt to access excess resources to reduce accessibility by other virtual machines. The cloud computing platform also protects shared resources from inadvertent use of excess network resources by non malicious virtual machines.

In some embodiments the cloud computing platform utilizes a queueless and stateless mechanism to implement bandwidth limiting for the virtual machines. This mechanism keeps the overhead for each virtual machine low. In one embodiment the communication messages for the virtual machines are transmission control protocol TCP communication messages i.e. packets.

Bandwidth limiting allows an administrator of the cloud computing platform to set the bandwidth available to a given virtual machine based on the relationship with the virtual machine. For instance a small virtual machine may be limited to 100 Mbps and a large virtual machine may be limited to 1 Gbps. Thus desired communication rates may be set in service level agreements negotiated with each virtual machine in the cloud computing platform.

As one skilled in the art will appreciate the cloud computing platform may include hardware software or a combination of hardware and software. The hardware includes processors and memories configured to execute instructions stored in the memories. In one embodiment the memories include computer readable media that store a computer program product having computer useable instructions for a computer implemented method. Computer readable media include both volatile and nonvolatile media removable and nonremovable media and media readable by a database a switch and various other network devices. Network switches routers and related components are conventional in nature as are means of communicating with the same. By way of example and not limitation computer readable media comprise computer storage media and communications media. Computer storage media or machine readable media include media implemented in any method or technology for storing information. Examples of stored information include computer useable instructions data structures program modules and other data representations. Computer storage media include but are not limited to random access memory RAM read only memory ROM electrically erasable programmable read only memory EEPROM flash memory or other memory technology compact disc read only memory CD ROM digital versatile discs DVD holographic media or other optical disc storage magnetic cassettes magnetic tape magnetic disk storage and other magnetic storage devices. These memory technologies can store data momentarily temporarily or permanently.

In one embodiment the cloud computing platform includes cloud applications that are available to client devices. The client devices access the cloud computing platform to execute the cloud applications on one or virtual machines. The cloud applications are implemented using storage and processing resources available in the cloud computing platform.

The cloud computing platform is configured to execute cloud applications requested by the client devices . The cloud computing platform maintains computing devices that provide virtual machines which execute the cloud application . The cloud computing platform also includes storage resources that store applications and system information. The cloud computing platform connects to the client devices via a communications network such as a wireless network local area network wired network or the Internet.

The cloud applications are available to the client devices . The software executed on the cloud computing platform implements the cloud applications . In one embodiment virtual machines provided by the cloud computing platform execute the cloud applications . The cloud applications may include but are not limited to editing applications network management applications finance applications or any application requested or developed by the client devices . In certain embodiments some functionality of the cloud application may be executed on the client devices .

The client devices are utilized by a user to interact with cloud applications provided by the cloud computing platform . The client devices in some embodiments must register with the cloud computing platform to access the cloud applications . Any client device with an account from the cloud computing platform may access the cloud applications and other resources provided in the cloud computing platform . The client devices include without limitation personal digital assistants smart phones laptops personal computers gaming systems set top boxes or any other suitable client computing device. The client devices include user and system information storage to store user and system information on the client devices . The user information may include search histories cookies and passwords. The system information may include internet protocol addresses cached Web pages and system utilization. The client devices communicate with the cloud computing platform to receive results from the cloud applications .

Accordingly the computing system is configured with a cloud computing platform that provides cloud applications to the client devices . The cloud applications remove the burden of updating and managing multiple local client applications on the client devices .

In certain embodiments the cloud computing platform provides controllers that shape virtual machine communication traffic. The controllers provide a counter for each virtual machine. The counters may track the average sending rate of traffic. The cloud computing platform may evaluate an exponentially weighted average sending rate for the virtual machines. Based on the average sending rate a drop rate is computed by the controller for each virtual machines. Communication messages are randomly dropped by the controller based on the computed average sending rate. In one embodiment the drop probability may be set via policy included in the service level agreement governing the virtual machine. Alternatively the drop probability may be triggered on demand by a central policy based on network congestion detected by the cloud computing platform.

The controller monitors communication traffic on the communication network associated with virtual machines that execute the cloud applications. The controller includes a communication interface a discard loop processor and nonce engine . In certain embodiments the controller is configured to shape virtual machine communication traffic by discarding a fraction of the outbound traffic based on send rates detected for the virtual machines. The controller is able to shape traffic without maintaining queues for the virtual machines or communication sessions. The controller measures a sending rate of each virtual machine and selects one or more communication messages for discarding at a determined probability.

The communication interface receives the communication messages from the cloud devices executing the virtual machines . The communication interface also transmits the communication messages to the cloud device executing the virtual machines . The communication interface may include but is not limited to Ethernet or Asynchronous Transfer Mode ATM interfaces. The controller may transmit a communication message to the cloud device over the communication interface .

The discard loop is used by the controller to discard communication messages. The communication messages may be discarded by sending the message to an interface connected to ground. The communication messages are sent to the discard loop when the controller determines that a virtual machine has a drop probability above a specified threshold.

The processor performs calculations for the controller . The calculations are used by the controller to determine whether to discard communication messages for a virtual machine . The calculations may include evaluating an average sending rate a drop probability and a nonce. Based on these calculations the processor may set a flag to discard one or more communication messages for the virtual machine .

The processor obtains the current sending rate for the virtual machines executed by cloud device . In another embodiment the processor may calculate the current sending rate each time a communication message is received from the virtual machines by dividing the size of the communication message by the interval since last communication message was received by the controller from the virtual machine . The current sending rate is used to determine a drop probability for the virtual machines when the drop probability is not set in a service level agreement for the virtual machine . The service level agreement is stored in storage resource which is accessed by the processor to determine whether the drop probability is set.

In turn the processor calculates the average sending rate. In one embodiment the average sending rate is an exponential average sending rate ASR . The processor may evaluate ASR previous ASR 1 current SR where is set by the cloud computing platform the previous ASR is the ASR previously evaluated for the virtual machines and current SR is the current sending rate detected for the virtual machines. is a rational number. The exponential averaging uses less memory that other averaging function. In certain embodiments the other averaging functions e.g. mean sending rate. may be used.

The desired sending rate for the virtual machines is accessed to evaluate the drop probability. The desired sending rate may be set in the service level agreement. In other embodiments an administrator may set the desired sending rate in real time based on the network congestions. In yet another embodiment the desired sending rate may be automatically set based on the congestion detected on the network. The desired sending rate may be automatically decreased as congestion on the communication network increases.

The nonce engine is a random number generator. It generates a random number for the processor . The nonce engine may also provide the processor with the maximum random number. In turn the processor may generate a nonce that is used as a threshold. The processor evaluates

The processor compares the nonce and drop probability. When the drop probability is greater than the nonce the processor may discard the communication message.

In some embodiments the drop probability for a virtual machines may be set by the service level agreement based on network congestion. For instance when there is no network congestion is detected by the controller the service level agreement may indicate that the average sending rate should be set to the desired sending rate. Hence the drop probability is zero. And the virtual machine is allowed unrestricted resource utilization. But when network congestion is detected by the controller the average sending rate is set to a specific number e.g. 50 Mbps 20 Mbps depending on the congestion level and the number of virtual machines accessing the resources in the cloud computing platform.

Storage resources store the cloud applications and the service level agreements for each virtual machine . In some embodiments a virtual machine may have multiple service level agreements. Each service level agreement may correspond to different cloud applications executed by the virtual machine. The service level agreements may set desired sending rate for the virtual machines desired sending rates for the cloud applications and desired sending rates for the cloud device . In some embodiments the service level agreements may also store a drop probability for the virtual machines drop probability for the cloud applications and drop probability for the cloud device . The storage resource may transmit service level agreements to the controller in response to requests for the desired sending rate or drop probability.

In one embodiment the cloud computing platform executes cloud applications on virtual machines running on cloud devices. The cloud computing platform shapes communication traffic for the virtual machines. The cloud computing platform monitors communications rates for the virtual machines and discards packets based on the communication rates. The communication rates may include transmission rates and reception rates.

The cloud computing platform limits transmission communication messages or reception communication messages associated with the virtual machines to achieve the desired communication rates for virtual machines in the cloud computing platform. In one embodiment the limiting of transmission communication messages or reception communication messages is triggered when the cloud computing platform detects congestion on a network servicing the virtual machines. In turn the cloud computing platform randomly drops a communication message for the virtual machines when a drop probability for the virtual machines is greater than a nonce generated by the cloud computing platform in step . The method terminates in step .

In some embodiments the cloud computing platform shapes communication traffic based on sending rates for the virtual machines executing on cloud devices. The cloud computing platform may drop the communication messages to reduce overall network congestion. The cloud computing platform attempts to maintain an agreed service level for the virtual machines when deciding to whether to drop the communication message.

In step the cloud computing platform identifies the desired sending rate for the virtual machine. The desired sending rate DSR may be set in a service level agreement for the virtual machine. Alternatively the desired sending rate may be set by an administrator of the cloud computing platform.

The cloud computing platform also evaluates a drop probability for a communication message sent from the virtual machine in step . The drop probability DP is evaluated for the virtual machines by the cloud computing platform where

In step the cloud computing platform drops a communication message when a nonce generated by the cloud computing platform for the virtual machines is greater than the drop probability. The nonce is randomly generated for the virtual machines by the cloud computing platform where

In summary the cloud computing platform shapes communication traffic associated with virtual machines executing on cloud devices. The cloud computing platform monitors the communication rates and attempts to maintain an appropriate rate of communication for each virtual machine in the cloud computing platform. The service level agreements associated with the virtual machines are processed by the cloud computing platform to ensure an appropriate level of service is maintained for the virtual machines.

The foregoing descriptions of the embodiments of the invention are illustrative and modifications in configuration and implementation are within the scope of the current description. For instance while the embodiments of the invention are generally described with relation to those descriptions are exemplary. Although the subject matter has been described in language specific to structural features or methodological acts it is understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims. The scope of the embodiment of the invention is accordingly intended to be limited only by the following claims.

