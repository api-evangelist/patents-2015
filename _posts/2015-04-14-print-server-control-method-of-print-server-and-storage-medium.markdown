---

title: Print server, control method of print server, and storage medium
abstract: When a print server according to the present invention receives a printing cancellation request from a load balancer, the print server acquires information of a print job as a target of the printing cancellation request and information of a printing device. Then, the print server determines whether a status of the acquired print job is a first status where printing cancellation processing is to be executed by a print server in charge of the printing device, a second status where the printing cancellation processing is to be executed by the printing device, or a third status where the printing cancellation request is to be handled as an error. Thereafter, the print server executes the printing cancellation processing according to the determination result.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09250841&OS=09250841&RS=09250841
owner: Canon Kabushiki Kaisha
number: 09250841
owner_city: Tokyo
owner_country: JP
publication_date: 20150414
---
The present invention relates to a print server in a printing system which executes distributed processing of printing processing.

There is provided a printing system in which a print server generates print data by receiving a printing request from a client and then an image forming apparatus executes printing processing by receiving the print data. In the above described printing system for example when the client sends a printing cancellation request it is desirable that the print server promptly executes cancellation of the printing processing. However if the print server exists in the internet over a firewall the print server cannot notify the image forming apparatus of the cancellation of the printing processing. Therefore Japanese Patent Application Laid Open No. 2011 227624 discusses a technique for appropriately executing the cancellation of the printing processing by changing a determination of the printing cancellation processing according to a generation status or a transfer status of the print data.

With the widespread use of the above described print server connected thereto via the internet there has been provided a printing system which executes distributed processing of a print job by managing a number of printing devices with a plurality of print servers. In the printing system printing requests are distributed to the print servers through a typical load distribution apparatus known as a load balancer .

In the above described distributed processing type printing system various requests received from a client are distributed to each of the print servers through the load balancer. Although the load balancer can allocate the requests to the print servers at high speed it is not possible for the load balancer to execute complex processing such as controlling a printing order or identifying the print server that is processing a print job as a target of a printing cancellation request.

Accordingly it can be considered that the load balancer is configured to distribute the printing cancellation request received from the client to each of the print servers as well. When the print server has received the printing cancellation request distributed by the load balancer the print server has to transfer the printing cancellation request to the print server that is executing the processing of the print job as a target of that printing cancellation request. However in the technique discussed in Japanese Patent Application Laid Open No. 2011 227624 the printing cancellation request cannot be transferred because the distributed processing type printing system is not taken into consideration.

According to the present invention by appropriately managing the status of a print job a distributed processing type printing system appropriately executes printing cancellation processing by identifying a target to be notified of a printing cancellation request when the printing cancellation request is transmitted thereto.

A print server according to an exemplary embodiment of the present invention includes a receiving unit configured to receive a printing cancellation request from the load balancer an acquisition unit configured to acquire information of a print job as a target of the printing cancellation request received by the receiving unit and information of a printing device a determination unit configured to determine whether a status of the acquired print job is a first status where printing cancellation processing is to be executed by a print server in charge of the printing device a second status where the printing cancellation processing is to be executed by the printing device or a third status where the printing cancellation request is to be handled as an error and a control unit configured to control the print server in charge of the printing device to execute the printing cancellation processing in a case where the determination unit determines that the status of the print job is the first status control the printing device to execute the printing cancellation processing in a case where the determination unit determines that the status of the print job is the second status and control the print server to send an error notification indicating that the printing cancellation processing cannot be executed in a case where the determination unit determines that the status of the print job is the third status.

Further features of the present invention will become apparent from the following description of exemplary embodiments with reference to the attached drawings.

An exemplary embodiment of the present invention will be described below with reference to the drawings. is a block diagram illustrating a general configuration of an information processing system according to the present invention. As illustrated in the information processing system includes a server computer system for controlling the information processing system a printing device and a client computer. The server computer system the printing device and the client computer are widely connected to one another via a wide area network hereinafter referred to as WAN .

The server computer system includes a print server system a Web server system a directory server a database management system DBMS and a storage . The print server system is a server computer system for executing various operations in the information processing system such as monitoring and managing the printing device controlling and monitoring a print job and transferring a print job to the printing device. The print server system in a large scale information processing system has a cluster structure or a redundant cluster structure in order to execute distributed processing of load. In other words the print server system functions as a printing system having a plurality of print servers. Further the print server system exchanges information such as print job data printing control instructions and a management target print job by connecting to the DBMS and the Web server system via a local area network hereinafter referred to as LAN A.

The Web server system transmits information about the print job managed by the print server system and document information managed by the DBMS to each front end client via the WAN . Normally the Web server system in a large scale information processing system has a cluster structure or a redundant configuration in order to execute the distributed processing of load. Further the Web server system receives operations relating to the print job such as a printing instruction and a printing cancellation instruction from the client and transfers the instructions to the print server system . Furthermore the Web server system cooperates with the directory server to manage login authentication from the client .

The directory server manages authentication of a user by using a combination of a user name and a password. Each piece of user information can participate in a domain group and authority among users in the domain group can be set for example within a range different from a range of authority of a user as a single unit. Further the user information can be designed to participate in a plurality of domain groups.

The DBMS manages data such as a document table a job table and a device table described below with reference to stored in the storage . The DBMS executes operations for updating acquiring adding and deleting various types of data by receiving the operations from other servers. Further the DBMS in a large scale information processing system may have a cluster structure in order to execute the distributed processing of load or a redundant system structure in order to prepare for occurrence of failures. Furthermore the storage may be directly connected to the DBMS as a direct attached storage DAS or may be connected thereto as a storage area network SAN via the network.

Printing devices A B C and D are image forming apparatuses for printing the print data received from a print server. Hereinafter each of the printing devices A B C and D is referred to as a printing device . Each printing device is connected to a LAN B or a LAN C via a network interface not illustrated . Further the LANs B and C are connected to the WAN so that the printing device can communicate with the above described print server system via the LAN B or C and the WAN . A laser beam printer employing an electro photographic system or an ink jet printer employing an ink jet system may be used for the printing device as appropriate. Further the printing device includes a below described scheduling application for managing a printing schedule.

Clients A B C and D are client computers for executing information processing. Hereinafter each of the clients A B C and D is referred to as a client . Each client is connected to the LAN B or the LAN C via the network interface not illustrated so that the client can communicate with various server systems via the WAN . The client includes a Web browser so that a Web screen generated by the Web server system can be displayed thereon. The user operates the Web screen displayed on the Web browser so that authentication with respect to the server system a printing request a printing cancellation request and so forth can be performed.

An information processing system according to the present exemplary embodiment is realized on a system including a server and a printing device that have configurations as illustrated in . is a block diagram illustrating a state where a print server constituting the print server system and the printing device are communicably connected to each other via the WAN and the LAN .

First a hardware configuration of the print server will be described. The hardware block diagram illustrated in corresponds to a hardware block diagram of a general information processing apparatus and thus the hardware configuration of the general information processing apparatus can be employed for the print server according to the present exemplary embodiment. In addition to the print server the hardware configuration of the general information processing apparatus can be also employed for a Web server constituting the Web server system and the client .

The hardware configuration of the print server includes a central processing unit CPU a random access memory RAM a read only memory ROM a system bus a keyboard controller KBC a cathode ray tube controller CRTC a disk controller DKC a network controller NC a keyboard KB a CRT display and an external memory . The CPU executes a program such as an operating system OS or an application program stored in a program ROM of the ROM or the external memory such as a hard disk HD by loading the program onto the RAM to control each of blocks connected to the system bus . Various kinds of processing according to the present invention are realized by executing the above described various programs.

The RAM functions as a main memory or a work area of the CPU . A control program of the CPU is stored in the program ROM within the ROM . Font data used for generating output information is stored in a font ROM within the ROM . When the print server does not include the external memory such as a hard disk information transmitted or received to from the printing device is stored in a data ROM within the ROM . The KBC controls a key input from the keyboard or a pointing device not illustrated . The CRTC executes display control of the CRT display . The DKC controls the access to data within the external memory such as a hard disk which stores various kinds of data. The NC executes communication control processing with respect to the printing device or other devices connected thereto via the WAN or the LAN .

In the below described processing executed by the print server the CPU and the application program installed in the external memory respectively take major roles in terms of hardware and software unless otherwise specified.

Next a hardware configuration of the printing device will be described. The hardware configuration of the printing device includes a CPU a ROM an external memory a system bus a printing unit I F a printing unit an input unit a RAM a memory controller MC a network unit an operation unit a scanner unit I F and a scanner unit . The CPU controls each of blocks connected to the system bus by executing the control program stored in the ROM or the external memory . An image signal generated by the processing of the CPU is output to the printing unit as output information via the printing unit I F .

The scanner unit optically reads a document image and inputs the read data to the control program via the scanner unit I F . Further the CPU can execute communication processing with respect to the print server via the input unit and the network unit so that the information within the printing device can be notified to the print server .

A control program of the CPU is stored in a program ROM within the ROM . Font data used for generating output information is stored in a font ROM within the ROM . When the printing device does not include the external memory such as a hard disk information transmitted or received to from the print server is stored in a data ROM within the ROM .

The RAM functions as a main memory or a work area of the CPU and memory capacity thereof can be increased by an option RAM connected to an expansion port not illustrated . Further the RAM is used as an output information rasterization region an environmental data storage region or a non volatile random access memory NVRAM .

The MC controls the access to the external memory . The external memory is connected thereto as an option in order to store font data an emulation program and form data. The operation unit includes operation keys and a light emitting diode LED display unit.

In the below described processing executed by the printing device the CPU and the application program installed in the external memory respectively take major roles in terms of hardware and software unless otherwise specified.

A configuration of the print server will be described. The print server includes an application programming interface API a job manager and a device manager . The API receives a registration request of the document information from the Web server system and various control requests relating to the print job such as a printing request and a printing cancellation request of the document. Further the API communicates with the DBMS when registering the document information on the DBMS or updating the job information stored in the DBMS by receiving a printing request.

The job manager manages the document information received by the API by registering the document information on the document table stored in the DBMS via the API . When the API receives a printing request the job manager acquires the document information to be printed and device information from the DBMS via the API and manages a print job by registering the job information on the job table . Further the job manager instructs the device manager to print the acquired document information through the printing device to perform printing.

When the device manager receives a transmission request of the print data from the job manager the device manager starts communicating with the printing device to sequentially execute the printing processing. The printing processing will be described below in detail. The device manager manages the device table stored in the DBMS via the API .

The job table managed by the job manager includes a job ID a user name a document ID a status a device job ID a device ID and a cancel flag . Upon receiving a printing request the print server issues a document ID capable of uniquely identifying the print job. Specified values are respectively stored in the user name the document ID and the device ID when the print server receives the printing request. Further the document ID is associated with the document ID stored in the document table so that the values stored therein can be referred to each other.

The device ID is associated with a device ID stored in the device table so that the values stored therein can be referred to each other. The status represents a status of the print job and execution statuses such as printing stand by scheduling stand by transmitting transmitted printing printing completed and error end are stored therein. The transition of the status will be described below. The device job ID represents a job identifier issued by the scheduling application within the printing device . The print server can control the print job within the printing device by using the device job ID . The cancel flag indicates that the print job has been cancelled. The print server cancels the print job without advancing the printing processing forward if the cancel flag is valid i.e. flag 1 .

The device table managed by the device manager includes the device ID a device name an internet protocol IP address a port number a scheduling mode and a print server in charge . The printing device can be uniquely identified by the device ID . The device name represents a name of the printing device . The IP address and the port number represent destination information of the printing device so that the print server transmits the print data to the destination indicated by the IP address and the port number .

The scheduling mode indicates a management method for scheduling the transmission of print data executed by the print server . A server scheduling mode and a device scheduling mode are provided as the scheduling mode . In the server scheduling mode server mode the print server manages the transmission of the print data to the printing device . In the device scheduling mode device mode the print server transmits the print data to the printing device according to an instruction of the scheduling application of the printing device .

The printing processing executed in the above described respective scheduling modes will be described below in detail. The print server in charge represents a host name of the print server in charge of the printing processing executed by the printing device . If the plurality of the print servers executes printing processing through a single printing device a printing order thereof cannot be controlled. Therefore a single print server the host name of which is registered on the print server in charge takes charge of the printing processing executed by the printing device in order to manage the printing order.

As described above the Web server system normally has a cluster structure in order to execute the distributed processing of load and thus includes a plurality of Web servers. The Web server is software serving as a server for executing information communication processing in a world wide web WWW system. The Web server system includes the following functions. When the front end client logs into the Web server system the Web server system requests the directory server to execute authentication by acquiring user account information and a password thereof. When the log in authentication has succeeded the Web server system acquires the information stored in the document table the job table and the device table from the DBMS and transmits the information to the log in client and the printing device . Further upon the Web server system receiving a printing instruction of a document from the client the Web server system transmits the printing instruction including the document ID attached thereto to the print server system . Upon receiving a printing cancellation instruction from the client the Web server system transmits the printing cancellation instruction including the job ID attached thereto to the print server system .

The DBMS stores the above described document table the job table and the device table as table information. For example the DBMS is used when the Web server system acquires all of the document information conforming to a specified user name. Further the DBMS acquires the document information conforming to a specified document ID from the print server or registers new document information from the print server . The print server executes all the processing for referring to or updating the document table the job table and the device table through the DBMS although description thereof will be omitted.

A device controller controls the respective operations executed by the image forming unit and the image reading unit for example to copy the document information read by the image reading unit by the image forming unit . Further the device controller includes the network interface unit a print processing unit the fax unit and an operation control unit and controls the information exchange executed among these units.

The fax unit executes transmission and reception of a facsimile image. In other words the fax unit executes processing such as transmitting the digital image information read by the image reading unit or decoding a received facsimile signal to record the decoded facsimile signal by the image forming unit .

The operation control unit controls to generate a signal according to an operation of a user executed via an operation panel or a display unit that is provided on the printing device and to display various kinds of data or messages on the operation panel. The print processing unit controls to print print data input for example via the network interface unit by processing and outputting the print data to the image forming unit . The network interface unit controls transmission and reception of data with respect to other communication terminals via the communication line.

A virtual machine is located at an upper level of the device controller in the hierarchy so that the device controller can be controlled by the virtual machine . Further the device controller and the virtual machine can directly use the network interface unit to access the external network individually and independently.

Furthermore applications described in a programming language supported by an API provided by the virtual machine are located at an upper level of the virtual machine . These applications can indirectly act on the device controller or operate the image forming unit and the image reading unit via the virtual machine .

In the present exemplary embodiment the printing device includes the scheduling application as the application. The above described applications can be uninstalled from the virtual machine or newly installed on the virtual machine as an application.

In the present exemplary embodiment although the above described applications have been described as the applications installed on the printing device the applications may be provided as hardware. Alternatively the applications may be provided as the applications installed on a computer serving as an external device communicably connected to the printing device .

After the image forming unit has converted the image read by the image reading unit into a data format that can be stored in an external storage device an external memory control unit stores the converted image data format in the external storage device. Further the external memory control unit reads the data stored in the external memory to execute printing processing through the image forming unit or to externally transmit the data through the network via the network interface unit .

The job manager is a module for scheduling and managing the print jobs received from the print server in order to control the print jobs to be sequentially processed according to the schedule. Settings for scheduling the print jobs can be changed by a user operation. Further the job manager controls the print jobs by receiving an instruction for controlling the print jobs e.g. instruction for printing cancellation from the print server . The device manager is a module for communicating with the device controller functioning as a driver for deleting a print job or grasping changes in the status of the print job.

The schedule information illustrated in includes a device job ID and a status of a print job. The device job ID is issued as a job identifier when the scheduling application receives a scheduling request of the print job. The status represents a status of the print job notified to the print server as an event according to transition of the status. Various statuses such as scheduling stand by transmitting transmitted printing printing completed and error end are set to the status although the statuses are not limited to the above.

Hereinafter printing processing and a print job operation flow according to the present exemplary embodiment will be described with reference to . is a flowchart illustrating processing executed by the print server when the print server receives a printing request from the Web server system . In step S the print server receives a printing request having the parameters such as a user name a document ID of a printing target document and a device ID of the printing device . In step S the print server acquires the device information a device ID of which conforms to the device ID included in the received printing request from the device table and then identifies a host name of the print server in charge of the printing device corresponding to the printing request from the print server in charge .

In step S the print server determines whether another print server is in charge of the printing device . When the print server in charge is not empty or stores a host name other than its own host name the print server determines that another print server is in charge of the printing device . For example in a case where the print server in charge is empty NO in step S the processing proceeds to step S. In step S the print server updates the print server in charge by using its own host name. Then in step S the print server issues a new job ID and newly registers the job information on the job table .

The user name the document ID and the device ID included in the received printing request are stored as the user name the document ID and the device ID of the newly registered job information. The print server sets the status to printing stand by while setting the cancel flag to 0 . In step S in a case where another print server is in charge of the printing device YES in step S the processing proceeds to step S. In step S the print server transfers the printing request received in step S to the host name registered on the print server in charge .

In step S the print server determines whether the cancel flag is set to 1 . In a case where the cancel flag is set to 1 YES in step S the processing proceeds to step S. In step S the print server sets the status to cancel end without executing the printing processing. In a case where the cancel flag is set to 0 NO in step S the processing proceeds to step S. In step S the print server updates the status to scheduling stand by and advances the printing processing forward. In other words in the status scheduling stand by the printing processing has started while the cancel flag is set to 0 so that the print job is ready to be executed according to the schedule. The printing processing varies according to scheduling modes and thus description thereof will be given below in detail.

In step S the print server determines whether a print job in a printing stand by state exists in the job table . In a case where the job is newly registered on the job table YES in step S the processing proceeds to step S. In step S the print server starts the printing processing. In step S in a case where the new job is not registered on the job table NO in step S the processing proceeds to step S. In step S the print server makes the print server in charge of the device table empty and stops taking charge of the printing device .

A printing sequence of the print server in a server scheduling mode will be described. is a sequence diagram illustrating processing executed by the print server and the device controller . Although it is not illustrated in a printing request notified to the print server includes a document ID and a device ID. Based on the notified document ID the print server acquires document information and document data saved in the data path from the document table of the DBMS . Further the print server executes the printing processing according to the following sequence by identifying the printing target printing device from the device ID.

In step S the print server establishes a communication session with the device controller . The communication session is established by a communication protocol such as a transmission control protocol internet protocol TCP IP or a hyper text transfer protocol HTTP . In step S the print server sends a connection request to the device controller . In step S the print server registers an event on the device controller in order to receive a notification when a status of a print job or the printing device is changed.

In step S the print server requests and acquires a device status from the device controller . In step S in a case where the device status indicates that the printing device can execute printing the print server updates the status to transmitting from scheduling stand by and starts transferring print data. After transferring the print data the print server updates the status of the job table to transmitted .

In step S the device controller sequentially analyzes the received print data and starts the printing processing. Further in step S the device controller sends a printing start notification indicating that the status of the printing device is changed to printing start to the print server on which the event has been registered. The print server receives the printing start notification and updates the status of the job table to printing . Herein the job ID issued by the print server is embedded in the print data transmitted to the device controller . When the device controller sends the above notification the job ID is notified together with a job handle. The print server can monitor the status of the print job by using the job ID . Further the print server saves the job handle notified from the device controller in the device job ID . The print server can execute control processing of the print job such as printing cancellation processing with respect to the device controller by using the job handle.

In step S when the printing device ends the printing processing the processing proceeds to step S. In step S the device controller sends a printing end notification to the print server in a same manner as the processing for sending the printing start notification. The print server receives the printing end notification and updates the status of the job table to printing completed . Further in step S the print server cancels the event registered on the device controller when the print jobs for all of the scheduled printing requests have been completed. Then in step S the print server sends a disconnection request to the device controller . The device controller executes processing for ending the communication with the print server when the event is cancelled and the disconnection request is transmitted thereto. Lastly in step S the print server ends the session established in step S.

As described above when the printing processing is executed in the server scheduling mode the print server makes a determination to transmit the print data by scheduling and monitoring the print job.

A printing sequence in a device scheduling mode executed by the print server and the scheduling application will be described. is a sequence diagram illustrating processing executed by the print server the scheduling application and the device controller . Although it is not illustrated in the scheduling application registers an event on the device controller when the scheduling application is activated. Accordingly the device controller notifies the scheduling application of a status when the status of the print job or the device managed by the device controller is changed.

A printing request notified to the print server includes a document ID and a device ID. Based on the notified document ID the print server acquires document information and document data saved in the data path from the document table of the DBMS . The print server executes printing processing according to the following sequence by identifying the printing target printing device from the device ID.

In step S the print server establishes a communication session with the scheduling application . The communication session is established by a communication protocol such as TCP IP or HTTP. In step S the print server sends a connection request to the scheduling application . The scheduling application receives the connection request through the communication manager . In step S the print server registers an event on the scheduling application in order to receive a notification when the status of the print job or the printing device is changed.

In step S the print server requests and acquires a list of the scheduling information currently managed by the job manager of the scheduling application . In step S the print server issues a scheduling request of the print job to the scheduling application . The scheduling request includes job information of the print job as a printing target listed on the job table .

In step S the scheduling application receives the scheduling request issues the device job ID and sets the status of the scheduling information to scheduling stand by . In step S after the scheduling request has been executed successfully the print server receives the device job ID from the scheduling application and stores the device job ID in the device job ID of the job table . Further the print server updates the status to scheduling stand by .

The scheduling application controls a printing order according to an order registered on the scheduling information . In step S the scheduling application notifies the print server of a printing permission of the print job identified by the device job ID by taking the device job ID as a parameter. The print server receives the printing permission and identifies the job information having the device job ID conforming to the device job ID included in the printing permission from the job table . In step S the print server sends a transfer start notification to the scheduling application based on the identified job information. Then in step S the print server updates the status to transmitting and starts transferring the print data. The scheduling application receives the transfer start notification in step S and changes the status of the scheduling information to transmitting .

In step S the device controller sequentially analyzes the received print data and starts the printing processing. Further in step S in order to change the status of the print job managed by its own device controller the device controller sends a printing start notification indicating that the status is changed to printing start to the scheduling application on which the event has been registered. After receiving the printing start notification via the device manager in step S the scheduling application sends the printing start notification to the print server by which the event has been registered. The print server receives the printing start notification and updates the status of the job table to printing . As described above the print server can grasp the status of the print job whose printing processing has been executed by its own print server.

In step S the print server sends a transfer end notification to the scheduling application after transferring the print data. The scheduling application receives the transfer end notification and changes the status of the scheduling information to transmitted in a same manner as the processing for sending the transfer start notification. At this time the print server does not update the status of the job table because the status thereof has already been updated to printing .

After the printing device ends the printing processing in step S in step S the device controller sends a printing end notification to the scheduling application in a same manner as the processing for sending the printing start notification. Similarly in step S the scheduling application sends the printing end notification to the print server after receiving the printing end notification. The print server receives the printing end notification and updates the status of the job table to printing completed . Further in step S the print server cancels the event registered on the scheduling application when print jobs for all of the scheduled printing requests have been completed. Then in step S the print server sends a disconnection request to the scheduling application . The scheduling application executes processing for ending the communication with the print server when the event is cancelled and the disconnection request is transmitted thereto. Lastly in step S the print server and scheduling application end the session established in step S.

As described above when the printing processing is executed in the device scheduling mode the scheduling application schedules and monitors the print job. Then the print server starts transmitting the print data according to the notification from the scheduling application .

In step S the print server determines the scheduling mode of the device information acquired in step S. In a case where the scheduling mode is the server scheduling mode SERVER SCHEDULING MODE in step S the processing proceeds to step S. In step S the print server determines the status of the job information acquired in step S. In step S in a case where the status is printing or printing completed PRINTING PRINTING COMPLETED in step S the processing proceeds to step S. In step S the print server ends the processing by taking the printing cancellation request as an error because the printing processing cannot be cancelled. In this case the print server may send an error notice to the requestor of the printing cancellation request.

In step S in a case where the status is printing stand by scheduling stand by or transmitting PRINTING STAND BY SCHEDULING STAND BY TRANSMITTING in step S the processing proceeds to step S. In step S the print server identifies the print server in charge of the printing device by referring to the print server in charge . In step S the print server determines whether the own device print server is in charge of the printing device . In a case where the print server in charge conforms to a host name of its own print server YES in step S the processing proceeds to step S. In step S the print server executes the printing cancellation processing.

In the printing cancellation processing in step S the print server sets the status of the job table to cancel end if the print data has not been transmitted. In a case where the print data is being transmitted the print server discontinues the transmission and sets the status of the job table to cancel end .

In step S in a case where the print server in charge does not conform to a host name of its own print server NO in step S the processing proceeds to step S. In step S the print server transfers the printing cancellation request to the print server in charge . In other words the print server transfers the printing cancellation request to another print server if the other print server takes charge of the processing of the print job. Therefore the other print server executes the printing cancellation processing.

In step S in a case where the status is transmitted TRANSMITTED in step S the processing proceeds to step S. In step S based on the job handle stored in the device job ID the print server sends a printing cancellation request to the device controller of the printing device identified by the device information acquired in step S. Then the device controller of that printing device cancels the print job.

As described above by appropriately managing the status of the print job the print server can promptly execute the printing cancellation processing by identifying a target to be notified of the printing cancellation request from among the own print server another print server and the printing device .

In step S in a case where the scheduling mode is the device scheduling mode DEVICE SCHEDULING MODE in step S the processing proceeds to step S. In step S the print server determines the status of the job information acquired in step S. In step S in a case where the status is printing or printing completed PRINTING PRINTING COMPLETED in step S the processing proceeds to step S. In step S the print server ends the processing by taking the printing cancellation request as an error because the printing processing cannot be cancelled. In step S in a case where the status is printing stand by PRINTING STAND BY in step S the processing proceeds to step S. In step S the print server identifies the print server in charge of the printing device by referring to the print server in charge . In step S the print server determines whether the own device print server is in charge of the printing device . In a case where the print server in charge conforms to a host name of its own print server YES in step S the processing proceeds to step S. In step S the print server executes the printing cancellation processing.

In the printing cancellation processing of step S the print server sets the status of the job table to cancel end .

In step S in a case where the print server in charge does not conform to a host name of its own print server NO in step S the processing proceeds to step S. In step S the print server transfers the printing cancellation request to the print server in charge . Then the print server in charge of the printing device executes the printing cancellation processing.

In step S in a case where the status is scheduling stand by transmitting or transmitted SCHEDULING STAND BY TRANSMITTING TRANSMITTED in step S the processing proceeds to step S. In step S based on the device job ID the print server sends a printing cancellation request to the scheduling application of the printing device . Then the device controller of that printing device cancels the print job.

As described above according to the differences in scheduling modes or print job statuses the printing cancellation request can be sent to the print server the scheduling application or the device controller as appropriate and thus the printing processing can be cancelled promptly.

According to the above described exemplary embodiment when a print server in a distributed processing type printing system receives a printing cancellation request the print server can execute the printing cancellation processing as appropriate by identifying a target to be notified of the printing cancellation request.

Embodiment s of the present invention can also be realized by a computer of a system or apparatus that reads out and executes computer executable instructions e.g. one or more programs recorded on a storage medium which may also be referred to more fully as a non transitory computer readable storage medium to perform the functions of one or more of the above described embodiment s and or that includes one or more circuits e.g. application specific integrated circuit ASIC for performing the functions of one or more of the above described embodiment s and by a method performed by the computer of the system or apparatus by for example reading out and executing the computer executable instructions from the storage medium to perform the functions of one or more of the above described embodiment s and or controlling the one or more circuits to perform the functions of one or more of the above described embodiment s . The computer may comprise one or more processors e.g. central processing unit CPU micro processing unit MPU and may include a network of separate computers or separate processors to read out and execute the computer executable instructions. The computer executable instructions may be provided to the computer for example from a network or the storage medium. The storage medium may include for example one or more of a hard disk a random access memory RAM a read only memory ROM a storage of distributed computing systems an optical disk such as a compact disc CD digital versatile disc DVD or Blu ray Disc BD a flash memory device a memory card and the like.

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of Japanese Patent Application No. 2014 084776 filed Apr. 16 2014 which is hereby incorporated by reference herein in its entirety.

