---

title: Interface gateway and method of interfacing a property management system with a guest service device
abstract: An interface gateway interfaces between a first device and a second device serving a hospitality establishment. The first device is one of a property management system (PMS) and a guest service device, and the second device is the other of the property management system (PMS) and the guest service device. One or more communication ports perform data communications with the first device and the second device. One or more processors receive a message from the first device, determine that the message is in a first format, convert the message from the first format to an internal data structure, parse the message in the internal data structure to determine that the message is applicable to the second device, determine that the second device supports a second format, convert the message from the internal data structure to the second format, and send the message in the second format to the second device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09456047&OS=09456047&RS=09456047
owner: Guest Tek Interactive Entertainment Ltd.
number: 09456047
owner_city: Calgary
owner_country: CA
publication_date: 20151019
---
The present application is a continuation of U.S. patent application Ser. No. 13 242 883 filed on Sep. 23 2011 which is incorporated herein by reference.

The invention pertains generally to property management systems and guest service devices serving hospitality establishments such as hotels and resorts. More particularly the invention relates to interfacing property management systems with guest service devices.

Hospitality establishments such as hotels and resorts commonly use a computerized property management system PMS to manage guest bookings online reservations point of sale terminals telephone and other amenities. For example front desk staff may be provided with a computer terminal connected to the PMS allowing staff members to view room status and check in guests to vacant rooms. Automatic interaction with the PMS by guest service devices is also useful. In one example when a guest makes a long distance phone call using an in room telephone the hotel s telephone system automatically posts a charge to the guest s room by sending a room charge message to the hotel s PMS. The telephone charge is thereby automatically added to the guest s folio.

A PMS is typically a standalone device having a limited number of communication interfaces to help secure sensitive data stored therein. The communication interfaces allow external guest service devices to access information stored within the PMS by sending and receiving messages to and from the PMS via a communication interface. The PMS may also send notification messages to guest service devices via the communication interfaces. A serial port is often included as one of the interfaces to allow interconnection to a guest service device such as a controller of the above described telephone system. A plurality of serial ports for connecting to multiple guest service devices may be included for example allowing simultaneous connections to a telephone system controller an electronic door access controller a minibar door access controller a video on demand VOD controller a high speed internet access HSIA controller etc. One or more network ports may also be included as communication interfaces in order to allow the PMS to communicate with any number of external guest service devices via a computer network.

Different PMSs and different guest service devices often utilize incompatible proprietary formats when sending and receiving messages via their respective communication interfaces. For example a first PMS from a first vendor may require a post room charge message sent by a guest service device to be in a certain format while a second PMS from a second vendor may require the same message to be in another format. Likewise a first guest service device may expect to receive a message containing room information from the PMS in a particular format while another guest service device from a different vendor may expect to receive the same information from the PMS in a different message format. Different message formats may involve different message sizes data fields authentications encoding techniques compression message segmentation acknowledgements checksums and failure notification requirements for example.

Due to the substantial numbers of vendors providing PMS and guest service systems in the hospitality industry and no accepted standard messaging format communication incompatibilities between different vendor components is a common problem. These incompatibilities increase the costs related to component integration. For example guest service system vendors often need to custom modify their systems to support a specific message format in use by a PMS currently installed at a customer s hotel. Significant costs are incurred each time a guest service system vendor has to make modifications to support a new PMS message format. The reverse problem of a PMS vendor having to modify their PMS product to support of any of hundreds of different proprietary guest service system message formats is equally costly.

Hospitality establishments themselves also suffer from the above described message format incompatibilities. For example after a hotel installs a particular guest service system such as VOD if the hotel decides to change to a new type of PMS requiring messages in a different format a controller of the already installed VOD system may need to be modified to support the new PMS messaging format. Furthermore when a hotel has many different guest service systems installed from different vendors the hotel may be required to pay fees to each guest service system vendor to support the new PMS messaging format.

One attempt to solve these message format incompatibility problems is the Lodging Link product suite offered by Comtrol . Comtrol s solution requires PMS vendors to implement Control s proprietary and exclusive universal hospitality language layer UHLL to thereby enable the PMS to communicate with hundreds of different vendors guest service devices via the Lodging Link product.

However in order to benefit from the Lodging Link product a PMS vendor must still expend effort and cost ensuring their PMS is properly UHLL compliant. Additionally from a hotel s point of view vendor choice is limited because not all PMSs are UHLL compliant and not all guest service systems are supported by the Lodging Link product suite. Furthermore once a hotel invests in a UHLL compliant PMS and guest service systems supported by the Lodging Link product it may be very costly for the hotel to switch to a non UHLL compliant PMS or utilize an unsupported guest service system. For example after switching to a non UHLL compliant PMS the hotel may need to pay substantial vendor fees to have either the non UHLL compliant PMS or the already installed guest service systems or both modified to support a new message format such as the UHLL.

According to an exemplary configuration of the invention there is provided an interface gateway for interfacing between a first device and a second device serving a hospitality establishment. The first device is one of a property management system PMS and a guest service device and the second device is the other of the property management system PMS and the guest service device. The interface gateway includes one or more communication ports for performing data communications with the first device and the second device. The interface gateway further includes one or more processors configured to receive a message via the one or more communication ports from the first device determine that the message is in a first format convert the message from the first format to an internal data structure parse the message in the internal data structure to determine that the message is applicable to the second device determine that the second device supports a second format convert the message from the internal data structure to the second format and send the message in the second format to the second device via the one or more communication ports.

According to another exemplary configuration of the invention there is provided a method of interfacing between at least a first device and a second device serving a hospitality establishment. The first device is one of a property management system PMS and a guest service device and the second device being the other of the property management system PMS and the guest service device. The method includes receiving a message from the first device determining that the message is in a first format converting the message from the first format to an internal data structure parsing the message in the internal data structure to determine that the message is applicable to the second device determining that the second device supports a second format converting the message from the internal data structure to the second format and sending the message in the second format to the second device.

According to yet another exemplary configuration of the invention there is provided an interface gateway for interfacing between at least a first device and a second device serving a hospitality establishment. The first device being one of a property management system PMS and a guest service device and the second device being the other of the property management system PMS and the guest service device. The interface gateway includes means for receiving a message from the first device means for determining that the message is in a first format means for converting the message from the first format to an internal data structure means for parsing the message in the internal data structure to determine that the message is applicable to the second device means for determining that the second device supports a second format means for converting the message from the internal data structure to the second format and means for sending the message in the second format to the second device.

These and other embodiments and advantages of the invention will become apparent from the following detailed description taken in conjunction with the accompanying drawings illustrating by way of example principles of the invention.

One or more processors coupled to the communication ports send and receive messages to and from the attached devices via the communication ports . A storage device is coupled to the processors for storing state data a number of format conversion modules a message destination table a device format table and a transmit queue .

In this configuration each of the format conversion modules is an updatable software module comprising rules and or instructions that when utilized e.g. executed by the processors allows the processors to convert messages between a particular external message format and an internal data structure Int utilized by the interface gateway .

For example the interface gateway includes a first format conversion module allowing the processors to convert messages between a first format A and the internal data structure Int . Specifically the first format conversion module allows the processors to convert messages from the first format A to the internal data structure Int and to convert messages represented using the internal data structure Int to the first format A . Likewise second third and fourth format conversion modules respectively allow the processors to convert messages between second third and fourth formats B C D and the internal data structure Int . Additional or fewer format conversion modules may be used in other configurations and the specific format conversion modules stored in the storage device may be dynamically updated at any time.

To use the interface gateway in conjunction with a particular hospitality establishment the message formats A B C D etc. of the format conversion modules installed in the storage device are selected to correspond to each of the specific message formats utilized by attached devices in use at the hospitality establishment such as a PMS and one or more guest service devices.

For example an attached HSIA controller coupled to one of the communication ports may send and receive messages in a proprietary format such that utilized by the One View Internet product offered by Guest Tek Interactive Entertainment Ltd. In this case one of the format conversion modules installed in the storage device is directed to this proprietary format. Other arbitrary message formats may also be utilized by different attached vendor components according to each component s specific design and interface capabilities. The above mentioned proprietary UHLL by Comtrol is another example of a message format that may be employed by a PMS and or guest service device coupled to one or more of the communication ports . For each different message format utilized by an attached device a corresponding format conversion module directed at that message format is stored in the storage device .

In some cases two or more attached devices may utilize a same message format in this case one of the format conversion modules stored in the storage device is directed at this common message format and messages to and from each of these devices are converted into and out of the internal data structure Int by this same format conversion module .

The internal data structure Int includes a generalized set of fields that may be required to process messages by different attached devices and the interface gateway natively processes received messages and generates outgoing messages according to the internal data structure Int . The processors utilize the appropriate format conversion modules to get the messages into and out of the internal data structure Int depending on the specific format required by the attached source and destination device s .

As shown in the upper part of the diagram by using a first format conversion module the processors are able to convert between a post room charge message in a first message format A and the same message in the internet data structure Int . In this example the first format conversion module contains rules that allow the processors to convert between the various characters of the message expressed in format A and the corresponding fields of the internal data structure Int according to character positions in the message.

In particular the first format conversion module includes rules that the message type is expressed by the first four characters the message ID is expressed by the next three characters the revenue code is expressed by the next two characters and the amount is expressed by the final five characters . Some fields of the internal data structure Int are not applicable to the first format A such as the Charge time field which may occur when using a message format that is not capable of or required to include all fields of the internal data structure Int . When converting from the internal data structure Int to the first format A in this example these non applicable fields are ignored by the first format conversion module

In the lower part of the diagram by using a second format conversion module the processors are able to convert between a post room charge message expressed in a second message format B and the same message in the internal data structure Int . In this example the second format conversion module contains rules that allow the processors to convert the first two characters between the message type field and to convert the remaining characters of the message between their corresponding fields of the internal data structure Int according to field codes and delimiters in the message.

In particular the second format conversion module includes rules that the message type is expressed by the first two characters the message ID is expressed by the characters between ID and any following delimiter the revenue code is expressed by the characters between RC and any following delimiter the amount is expressed by the characters between AM and any following delimiter the date portion of the charge time is expressed by the characters between DA and any following delimiter and the time portion of the charge time is expressed by the characters between TI and any following delimiter of which there is no following delimiter in this example . Because the second format B in this example is more sophisticated than the first format A additional fields of the internal data structure Int such as the charge time may now be utilized when sending receiving messages to attached devices using this format B .

Different message types may be converted by the format conversion modules in a similar way. For example each format conversion module may include additional rules to handle conversion between other fields of the internal data structure Int used by other exemplary message types such as LOOK START DATABASE UPDATE TEST VERIFY ERROR CHECK IN CHECK OUT in addition to or instead of the POST message type illustrated in . Any other proprietary or application specific message types may also be supported such as room announcement messages for VOD. The message types supported by each format conversion module may be selected according to the specific message types supported by the message format to which each format conversion module is directed and or the specific devices attached to the interface gateway .

A beneficial feature of the exemplary interface gateway of involves the ability to convert between different message formats A B C D so that guest service devices can communicate with a PMS and vice versa without requiring either the PMS vendor or the guest service device vendors to support a specific message format. The conversion between different message formats is advantageously performed by the interface gateway utilizing a two step process including 1 converting from a determined source format utilized by the source device to the internal data structure Int and 2 converting from the internal data structure Int to a determined destination format supported by the destination device.

Another beneficial feature of the interface gateway involves the ability to process received messages after they are converted to the internal data structure Int and to automatically generate new messages in the internal data structure Int as required. Because the interface gateway is designed to operate according to the internal data structure Int the operation of the interface gateway may be rigorously tested and confirmed correct with respect to messages represented in the internal data structure Int . After confirming core operations function correctly according to messages represented in the internal data structure Int testing and confirmation of each format conversion module may be conducted at subsequent stage s as required. In this way verification of the interface gateway is greatly facilitated by the employment of the two step conversion process.

Yet another beneficial feature of the interface gateway involves the ability to dynamically update the format conversion modules stored in the storage device after deployment. For example adding a new conversion module for handling converting between a new message format and the internal data structure Int thereby allows the interface gateway to interface newly attached devices using the new message format with the previously attached devices using other incompatible message formats. The interface gateway natively understands the internal data structure Int and has already been rigorously tested and confirmed to properly process messages in the internal data structure Int . Adding a new format conversion module to convert between the new message format and the internal data structure Int allows the interface gateway to get messages into and out of the internal data structure Int . Updating the installed format conversion modules is particular beneficial to allow a hotel or other hospitality establishment to cost effectively integrate different vendor components having incompatible message formats without requiring any vendor to support a particular message format. Because the format conversion modules and other configuration tables stored in the storage device such as the message destination table and device format table may be updated at any time the hospitality establishment further benefits from the freedom to use vendor components having incompatible message formats both when initially purchasing components and during future expansions and enhancements.

Several practical applications and examples to help illustrate these and other beneficial features of the interface gateway are provided in the following figures and accompanying description.

In this example one or more access points APs are coupled to the HSIA controller for providing wireless Internet access from within a plurality of guest rooms . Each guest room respectively includes an electronic door lock coupled to the room security controller a set top box STB coupled to the VOD controller and a television TV coupled to the in room STB 

Hotel employees interact with the PMS utilizing a front desk terminal . Additionally guest reservations are received from a web based reservation system via a wide area network WAN such as the Internet connected to the hospitality establishment . An update server is coupled to the interface gateway via the WAN to allow remote updates to the format conversion modules and other tables installed in the interface gateway . Updating the format conversion modules may include modifying an existing format conversion module deleting an existing format conversion module replacing an existing format conversion module and or adding a new format conversion module for example. The message destination table and the device format table may also be updated by the update server at any time such as when a new format conversion module is installed. The update server is located offsite in this example to allow the interface gateway to be remotely updated however in other configurations the update server may also be located within the hospitality establishment .

For illustration purposes the PMS in this example is shown operating with a first message format A the VOD controller is shown operating with a second message format B the HSIA controller is shown operating with a third message format C and the room security controller is shown operating with a fourth message format D . In this example the message formats A B C D are assumed to be different and incompatible. The PMS is coupled to the interface gateway using a serial cable which is connected to a serial port of the interface gateway . The VOD controller the HSIA controller and the room security controller are coupled to the interface gateway using a network cable which is connected to a wired network port of the interface gateway . Other connections of such devices to the interface gateway may be utilized in other configurations.

There may also be other components and interconnections in use at the hospitality property such as a firewall not shown to provide security when coupling the Internet to the LAN . As these components are well known and not necessary to describe the interface gateway they are omitted herein for simplicity.

The process begins at step when the interface gateway receives an incoming message from a first attached device referred to hereinafter as the source device. The source device may be the PMS or any of the guest service devices of and the message is in the specific message format utilized by the source device. As shown in when the message originates from the PMS the message will be in the first format A when originating from the VOD controller it will be in the second format B when originating from the HSIA controller it will be in the third format C and when originating from the room security controller it will be in the fourth format D .

At step the processors of the interface gateway utilize the appropriate format conversion module to convert the message from the source format to the internal data structure Int . For example assuming the processors receive a room check in notification message originating from the PMS via the one or more communication ports the processors utilize the first format conversion module to convert the first message from the format A utilized by the PMS to the internal data structure Int utilized by the interface gateway . Prior to performing the conversion this step involves the processors determining the source format in order to select the appropriate format conversion module . The processors may automatically detect the format of the received message and thereby select the appropriate format conversion module such as by scanning for a format type designator included in the message. Because not all message formats will include such an easily recognizable designator in this configuration the processors utilize a combination of the connection port on which the message was received and or a source address of the message to determine the source device and look up the source format type in the device format table . The source IP address or another address such as a source MAC address may be included in the message itself or more likely may be included in a packet or frame containing the message as passed across a computer network or serial cable .

Column Device Stores the device identifier of the attached device. For illustration purposes the devices are identified by a descriptive name however in other configurations other types of device identifiers may be utilized such as a media access control MAC address unique serial numbers etc.

Column Communication port Stores an indication of the communication port to which the device is attached. Messages received from and sent to the device specified in column utilize this port.

Column Internet Protocol IP address Stores the IP address of the device on the hospitality establishment s LAN . In other examples the IP address may be a public IP address when the device is located on the Internet. This column may not apply to devices connected to a serial port. Alternatively devices connected to a serial port may have another type of address stored in this column being applicable to a serial interface standard.

Column Message format Stores an indication of the message format type utilized by the device. The format types A B C D listed in this column respectively correspond to the different format conversion modules illustrated in . In this way the value of column informs the processors of which format conversion module to utilize when converting a message received from the attached device into the internal data structure Int and when converting a message from the internal data structure Int for transmission to the device.

Continuing the description of at step the interface gateway parses the received message in the internal data structure Int and updates state data stored in the storage device according to the message. This step may involve the processors performing actions such as caching information contained in the message updating statistics related to the type or content of the message and or clearing pending messages in the transmit queue that have now received a required confirmation reply. Continuing the above example of the room check in notification message received from the PMS the processors at this step parse the message in the internal data structure to determine that the first message includes new PMS data corresponding to the room check in. The state data in the storage device is thereafter updated according to this new PMS data.

Column Room number Stores the room identifier such as the guest room number to which this row in the state data corresponds. Other types of room identifiers such as room names or locations may also be utilized in other configurations for example.

Column Guest name Stores the name of the guest staying in the room when the room is occupied or not applicable N A when the room is not occupied.

Column Special announcement Stores a room specific special announcement to be displayed on a home page menu of the in room TV by the STB or not applicable N A when the room is not occupied.

Continuing the description of at step assuming the message received from the PMS and parsed by the processors in the internal data structure Int is found to be a notification message including new PMS data specifying that a guest is now checked in to a previously vacant room and including the guest s name the processors find the row in the state data corresponding to the room and update the Occupancy and Guest name columns according to new PMS data e.g. new occupancy status and guest name included in the message. It should also be noted that although the state data in this example stores a cached version of data stored at the PMS the state data may also store a cached version of data stored at any attached devices for example the PMS VOD controller HSIA controller and or room security controller . In general the processors parse the received message after it has been converted to the internal data structure Int to determine new data included in the message and update the state data in the storage device according to the new data.

At step the processors determine whether the message needs to be sent to a second attached device referred to hereinafter as a destination device. Some messages received at the gateway may be applicable to both a second attached device and a third attached device or more referred to hereinafter as destination devices. By parsing the received message after it is converted to the internal data structure Int the interface gateway may determine that the message is applicable to one or more destination device s . For example after converting a message originating from the PMS to the internal data structure Int the processors may parse the message in the internal data structure Int to determine the type of message and to then determine that that type of message is applicable to one or more of the guest service devices . In order to determine which types of messages are applicable to other devices the processors may refer to the message destination table .

Column Source device Stores an identifier of the source device. For illustration purposes the source devices are identified by a descriptive name however in other configurations other types of source identifiers may be utilized such as the device s IP or MAC address unique identifier etc.

Column Message type Stores an identifier of the message type. Although descriptive strings are used to illustrate the different message types in this example the message types stored in this column may actually correspond to another proprietary value passed along with the message to indicate its type. The different message type values may be specified according to the specific message formats A B C D each of which having a respective format conversion module installed in the storage device for example. Specific message type codes included in the messages may be converted to a same message type field by different format conversion modules . For example with reference to a first format A may include a message type code e.g. value POST corresponding to a POST message type in the internal data structure Int . Likewise a second format B may include a message type code e.g. value PS which also corresponds to the POST message type in the internal data structure Int .

Column Applicable destinations Stores a list of destination device s to which the message is applicable. In this example the state data is also included as an applicable destination for certain types of messages received from the PMS . In this way messages from the PMS having an applicable destination s including state data in column are deemed to include new PMS data at step of .

Column Reply required Stores an indication of whether a reply from each of the applicable destinations indicated in column is required. A reply may be required when it is important that the message be received by the applicable destination such as when billing or security aspects are involved. Alternatively no reply may be required when the message simply involves information or notifications sent for non critical purposes such as routine statistics or logging for example. Additionally in this example the Reply required column does not apply to the state data since the interface gateway may itself automatically confirm that the state data is property updated when storing the new PMS data.

By parsing the received message in the internal data structure Int to determine the message type and then searching the message destination table to find the row corresponding to that message type the processors may determine whether the message is applicable to another device. In this way the processors determine that the above described PMS notification message Guest check into room is firstly applicable to the VOD controller . This may be so that the VOD controller will upon guest check in unlock the ability for the in room STB to order pay per use VOD in the room . In this example the same PMS notification message is also applicable to the HSIA controller in order to activate Internet access in the room upon guest check in and the room security controller to change the room s electronic door key card code upon guest check in for example.

Alternatively some messages received at the gateway may not be applicable to other devices. For example a broadcast message from the PMS to indicate a current event Broadcast current event message may simply be stored in the state data without being directly applicable to any of the guest service devices . This may be beneficial for example when the VOD controller is already programmed to periodically query the PMS for current event messages. In this case because the interface gateway has cached the current event message in the state data the interface gateway may reply to the VOD controller on behalf of the PMS according to the cached data state data . In this way requests from the VOD controller to the PMS may be handled by the interface gateway which thereby reduces the load on the PMS . Reducing load on the PMS further reducing data traffic to from the PMS which is especially beneficial when the PMS is connected to other devices using a slow speed serial cable .

Continuing the description of step of when the received message is applicable to one or more destination devices control proceeds to step otherwise control proceeds to step .

At step for each applicable destination device and according to the message format of the applicable destination device as specified in the device format table the processors convert the message from the internal data structure Int to the appropriate destination format. The processors may determine that a destination device supports a particular format by looking up the message format type utilized by the destination device in the device format table stored in the storage device prior to converting the message from the internal data structure to the destination format.

Continuing the above example of a PMS room check in notification message Guest check into room in addition to storing the new PMS data in the state data the processors utilize the second format conversion module to convert the notification message from the internal data structure Int to the second format B for sending to the VOD controller . Likewise the processors utilize the third and fourth format conversion modules to respectively convert the notification message from the internal data structure Int to the third and fourth formats C D for sending to the HSIA controller and room security controller .

At step the processors determine whether the interface gateway expects to receive a confirmation reply after sending the message to the applicable destination. As previously mentioned some critical messages such as a post room charge message may be required to be confirmed by the destination e.g. the PMS with an acknowledgement message whereas other messages such as routine room state updates or a device shutdown messages may not require a confirmation reply. The determination of whether the interface gateway expects to receive a confirmation reply may be determined according to the type of message and the corresponding Reply required value stored in column of the message destination table . When a reply is expected control proceeds to step otherwise control proceeds to step .

At step the processors record the message as persistent until a confirmation reply is received. This action ensures the processors will not erase the message from the transmit queue until either the proper confirmation reply is received or a reply timeout occurs.

At step the processors queue the message in the destination format for transmission to the applicable destination by adding the message in the destination format to the transmit queue .

Column Message Stores a description of the message to be sent for illustration purposes. Note that in actual implementations this column may store the actual data of the outgoing message as formatted in the destination format for example a string of bytes to send to the destination via the appropriate communication port .

Column Source When the interface gateway converts a received message to a format supported by an applicable destination this column stores an identifier of the source device from which the message originated. When the interface gateway generates a message on behalf of another device such as may occur when the interface gateway replies to a message on behalf of the PMS by using information stored in the state data this column stores an identifier of the device for which the interface gateway is replying on behalf of Taking the last illustrated message row of as an example the interface gateway may have previously received a message from the VOD controller requesting information e.g. the name of the guest in room from the PMS . Because the state data may already contain a cached version of this data the interface gateway may reply to the VOD controller on behalf of the PMS . In this situation the gateway is acting as the source on behalf of another device i.e. the PMS .

Column Message ID Stores a message identifier utilized to correlate confirmation replies with the message.

Column Confirmation reply expected Stores an indication of whether a confirmation reply is expected from the destination. Messages that have a value of NO stored in this column may be deleted from the transmit queue upon transmission to the destination. Alternatively messages that have a value of YES stored in this column are not deleted by the processors upon transmission to the destination device. Instead a message requiring a confirmation reply is left in the transmit queue to be periodically resent until a reply is received. For example with reference to after receiving the reply message at step and converting the reply message to the internal data structure Int at step the processors parse the reply message to determine the message number being acknowledged and then delete the corresponding message from the transmit queue at step .

Column Originally sent Stores a record of when the message was originally sent to the destination device. For messages awaiting a confirmation reply this field may be used by the processors when determining whether the message has timed out due to lack of a confirmation reply within a predetermined time after the original send time.

Column Last sent Stores a record of when the message was last sent to the destination device. For messages awaiting a confirmation reply this field indicates when the message was last sent and may be used by the processors to retry the message every predetermined number of seconds for example.

Column Number of retries Stores a record of how many times the message has been resent to the destination device so far. For messages awaiting a confirmation reply this field may be used by the processors when determining whether the message has timed out due to lack of a confirmation reply before a maximum number of retries has been exceeded for example.

Continuing the description of the flowchart of at step the processors determine whether the received message requires a reply. For some messages the interface gateway may reply directly to the source device. For example when receiving a request from the VOD controller for the name of a guest in a particular room the interface gateway may check internal state data at step and when the requested information is cached determine not to forward the message to the PMS at step . Instead the processors may determine at step to reply to the VOD controller on behalf of the PMS . A reply may also be determined required at this step when the interface gateway is to confirm receipt of a received message. If the message requires a reply from the interface gateway control proceeds to step otherwise control proceeds to step .

At step the processors generate the reply message in the internal data structure. For example at this step the processors may form a response message in the internal data structure Int containing information gathered from the state data in the storage device . Other types of reply messages may also be generated at this step such as a confirmation of receipt message for example. The reply message may include specified information and fields as specified in the request e.g. as requested in the original incoming message received at step .

At step the processors convert the reply message from the internal data structure Int to the destination format as looked up in the device format table using the corresponding format conversion module . In most cases the device to which the reply is sent will be the source device and therefore the reply message will be converted from the internal data structure Int to the source format utilizing the same format conversion module that was utilized at step .

At step the processors queue for transmission the reply message to the source device by adding the resulting reply message as converted at step to the transmit queue .

At step the processors take no further action for received messages that neither require the interface gateway to send the message to another destination at step nor to reply to the message at step .

The process begins at step when the processors initiate message queue processing. This may occur periodically when the transmit queue has at least one pending message for example.

At step the processors determine whether there a new message to send. In this configuration new message refers to a message that has not yet been sent such as a message having N A stored in the Originally sent column of the transmit queue of . When there is a new message to send control proceeds to step otherwise control proceeds to step .

At step the processors determine whether there is an unconfirmed message to resend. This may happen where the interface gateway recorded the message as persistent at step of but no confirmation reply has yet been received. In one example messages expecting a confirmation reply are resent every fifteen seconds until either a confirmation reply is received or a timeout threshold is reached. An unconfirmed message may therefore be determined by the processors searching for a pending message in the transmit queue having a Last sent value being greater than fifteen seconds. If there is an unconfirmed message ready to be resent control proceeds to step otherwise control proceeds to step .

At step the processors check the communication link to the destination device specified in column of the message transmit queue to ensure the link is operating correctly and transmit the message to the destination via the communication port specified in column of when the link is functional.

At step the processors determine whether a confirmation reply is expected. This will be the case when the processors previously recorded the message as persistent at step of which will also be indicated in column of the transmit queue . If no reply is expected control proceeds to step otherwise control proceeds to step .

At step because a confirmation reply is expected the processors do not remove the message from the message transmit queue and instead update the message send statistics by recording the original message send time column last message sent time column and or the number of retries column . These statistics may be used later to determine when to resend the message or when to timeout if no confirmation reply is received.

At step the processors determine whether there is an unconfirmed message that has timed out. Timeout in this example occurs one minute after the message was originally sent. The processors may therefore search the transmit queue to determine whether any pending messages have an Originally sent value in column being greater than one minute from the current time. Other timeout conditions such as after a threshold number of retries column could also be used in other configurations. If there is an unconfirmed message that has timed out control proceeds to step to remove the timed out message from the queue otherwise control proceeds to step .

The process begins at step when the processors determine that communication with the PMS is no longer possible. This may be done in a number of ways including by periodically sending a ping or other test message to the PMS via the communication port s coupled to the PMS . The processors may determine communication with the PMS to no longer be available when not receiving a reply to a threshold number of ping or test messages. In another example the processors may detect that the number of pending messages having the Destination column in the transmit queue equal to the PMS to have exceeded a predetermined threshold number of messages. In yet another example the processors may determine communication with the PMS to no longer be possible after deleting due to timeout a predetermined number ofpending messages from transmit queue having the Destination column being equal to the PMS .

At step the processors determine whether communication with the PMS has been reestablished. For example the communication with the PMS may be determined to have been reestablished when receiving a reply from the PMS to the ping or tests messages receiving a replies to another message sent to the PMS on behalf of one of the guest service devices or when receiving any other message from the PMS . When communication with the PMS has been reestablished control proceeds to step otherwise the process remains at this step to continue monitoring for communication to be reestablished.

At step the processors generate a re synchronization request message to the PMS . Similar to as previously described this is done by first generating the message in the internal data structure Int and then utilizing the appropriate format conversion module to convert the re synchronization message from the internal data structure Int to the message format utilized by the PMS which in this example is format A as specified by the device format table of .

At step the processors send the re synchronization message in the message format A of the PMS to the PMS via the one or more communication ports . The appropriate communication port and any required addressing details of the PMS may also be retrieved by the processors from the device format table . Sending the re synchronization message at this step may involve adding the message to the transmit queue .

At step the processors receive a response message in the format utilized by the PMS and utilize the appropriate format conversion module to convert the response message from the PMS format to the internal data structure Int . The message format of the incoming message received at this step may be determined by the processors first determining that the message is from the PMS and then retrieving the message format utilized by the PMS from the device format table . In this example the PMS utilized the first format A and therefore the processors utilize the first format conversion module to convert the response message from the first format A to the internal data structure Int .

At step the processors parse the response message in the internal data structure Int to determine new PMS data included in the response message and update the state data in the storage device according to the new PMS data. For example when the new PMS data includes a different occupancy state guest name or special announcement for one or more guest rooms the processors update the corresponding rows and columns to cache the room information illustrated in the state data of . In this way the processors resynchronize the state data in the storage device by requesting the new PMS data from the PMS via the one or more communication ports in response to communication with the PMS being reestablished.

After resynchronizing at least a portion of the state data in the storage device at step the processors determine from the state data in the storage device whether the new PMS data is applicable to an attached device such as one or more of the guest service devices . This may be done by examining the data that was changed in the state data in order to determine whether that data is of interest to one or more guest service devices . For example when a guest s name in column of the state data is changed the processors may determine that a notification message needs to be sent to the VOD controller so that the a STB in the guest s room may be updated to display a new guest s name. The storage device may further store another table not shown similar to the message destination table that indicates applicable destination devices when various rows of the state data are changed.

At step the processors generate the notification message in the internal data structure and then utilize the appropriate format conversion module to convert the notification message from the internal data structure Int to the format utilized by the destination guest controller. The destination format may be retrieved by the processors from the device format table .

At step the processors send the notification message in the format of the destination guest service device. For example this may be done by the processors adding the message to the transmit queue .

At step the process ends as no guest controllers need to be notified of the change in the state data . This may be the case when the guest service controllers are configured to actively request certain information from the PMS rather than accept notification messages from the PMS .

The first and second hotels respectively include a local PMS coupled to STBs in guest rooms via the hotel s LAN 

Coupled between the first PMS and the first hotel s LAN is a serial to network adaptor . Rather than or in addition to providing for serial PMS links directly at the interface gateway a serial to network converter may be included at any PMS that includes a serial interface. In this way the interface gateway may only need to support network type communication ports and may be located either local or remote to each hospitality establishment. A further benefit is that redundancy of the interface gateway is facilitated by not having to directly support serial cable connections between the gateway and each PMS. Instead the serial to network interface may be a standalone and robust hardware solution that essentially becomes part of the PMS network link. Should a first interface gateway fail the PMS is still connected to the network and a second interface gateway may automatically take over without requiring any cabling changes at the PMS . In this way the adaptor beneficially allows a serial port only PMS to be coupled to a network by acting as a network server on the hotel LAN side and acting as a serial server on the PMS side.

For illustration purposes the central VOD controller operates utilizing a first message format A the PMS at the first hospitality property operates utilizing a second message format B and the PMS at the second hospitality property operates utilizing a third message format C . In this example the three formats A B C are assumed to be different and incompatible.

The system shown in beneficially allows hospitality establishments such as hotels to integrate their already installed PMSs with a centrally provided VOD system by installing Internet coupled STBs in each guest rooms . If the hotels already have Internet coupled STBs no additional hardware may be required. Additionally neither of the various PMS vendors nor the VOD system vendor needs to modify their product to support a particular message format because the interface gateway beneficially converts messages between the various incompatible formats A B C.

In a usage example when the PMS at the first hotel sends a notification message indicating that a new guest has checked in to a particular guest room of the first hotel the interface gateway receives the notification message via a communication port coupled to the Internet . The processors determine the format of the notification message to be the second format B and therefore utilize the second format conversion module to convert the notification message from the second format B utilized by the PMS to the internal data structure Int . The processors then parse the notification message in the internal data structure Int to determine that the notification message is applicable to the VOD controller . The processors then utilize the first format conversion module to convert the notification message from the internal data structure Int to the first format A as this is the message format utilized by the VOD controller . The processors then send the notification message in the first format A to the VOD controller via the appropriate communication port e.g. coupled to either the Internet or another direct communication link . In this way the VOD controller receives the notification message and can unlock VOD functionality on an in room STB of the particular guest room specified in the notification message. The guest s name or another guest specific welcome message may also be displayed on the in room STB according to information in the notification message.

In an opposite direction when a guest in the particular guest room of the first hotel orders a movie on the in room STB the STB sends an order message to the VOD controller via the Internet . As the STB is already compatible with the VOD system i.e. because both are provided by the same vendor there is no message incompatibility problem with the order message and the VOD controller receives the order message and activates playback of VOD content on the STB in the particular guest room in response to the order message. The VOD controller then sends a room charge message in the first format A to the interface gateway utilizing either a serial or network data communications.

At the interface gateway the processors receive the room charge message via one of the communication ports and determine the room charge message to be in the first format A . The processors therefore utilize the first format conversion module to convert the room charge message from the first format A to the internal data structure Int . The processors then parse the room charge message in the internal data structure Int to determine that the room charge message is applicable to the PMS at the first hotel . The processors then utilize the second format conversion module to convert the room charge message from the internal data structure Int to the second format B as this is the format utilized by the PMS at the first hotel . The processors then send the room charge message in the second format B to the PMS via the Internet and the serial to network adaptor . In this way the room charge message is added to the guest s folio for the particular guest room in response to the guest ordering a VOD movie.

As shown in the first and second hotels respectively include a local VOD controller for streaming VOD content to STBs in guest rooms via the hotel s LAN 

For illustration purposes the primary PMS operates utilizing a first message format A the backup PMS operates utilizing a second message format B the VOD controller at the first hotel operates utilizing a third message format C and the VOD controller at the second hotel operates utilizing a fourth message format D . In this example the four formats A B C D are assumed to be different and incompatible.

The system shown in beneficially allows multiple hotels to share a central PMS while still having one or more locally installed guest service devices for example the VOD controller at the first hotel and the VOD controller at the second hotel . By using locally installed VOD controllers unlike the centralized VOD system of should one of the hotels connection with the Internet become unavailable movies that were already purchased and streaming within the hotels continue to play unaffected. New VOD content may also be streamed to the in room STBs while the Internet connection is down because the VOD content is stored local to the hotel . The various PMS vendors and the VOD system vendors do not need to modify their products to support a particular message format because the interface gateway beneficially converts messages between the various incompatible formats A B C D.

In a usage example when the primary PMS sends a notification message indicating that a new guest has checked in to a particular guest room of the first hotel the processors of the interface gateway receive the notification message via a communication port coupled to the Internet and determine that it is in the first format A utilized by the primary PMS . The processors utilize the first format conversion module to convert the notification message from the first format A to the internal data structure Int . The processors then parse the notification message in the internal data structure Int to determine that the notification message is applicable to the VOD controller at the first hotel . The processors then utilize the third format conversion module to convert the notification message from the internal data structure Int to the third format C as this is the message format utilized by the VOD controller at the first hotel . The processors then send the notification message in the first format A to the VOD controller via the appropriate communication port e.g. coupled to either the Internet . In this way the VOD controller at the first hotel receives the notification message and can unlock VOD functionality on an in room STB of the particular guest room specified in the notification message. The guest s name or another guest specific welcome message may also be displayed on the in room STB according to information in the notification message.

In an opposite direction when a guest in a particular guest room of the first hotel orders a movie on their in room STB the STB sends an order message to the local VOD controller via the hotel s LAN . As the VOD system is provided by the same vendor there is no message incompatibility problem with the order message and the VOD controller receives the order message and activates the playback of VOD content on the STB in the particular guest room in response to the order message. The VOD controller then sends a room charge message in the third format C to the interface gateway via the Internet .

At the interface gateway the processors receive the room charge message via a communication port coupled to the Internet and determine that the message is in the third format C utilized by the VOD controller at the first hotel . The processors utilize the third format conversion module to convert the room charge message from the third format C to the internal data structure Int . The processors then parse the room charge message in the internal data structure Int to determine that the room charge message is applicable to the primary PMS . The processors then utilize the first format conversion module to convert the room charge message from the internal data structure Int to the first format A as this is the message format utilized by the primary PMS . The processors then send the room charge message in the first format A to the primary PMS via a communication port coupled to the primary PMS . In this way the room charge message is added to the guest s folio for the particular guest room at the first hotel in response to the guest ordering a VOD movie.

Concerning the backup PMS the processors of the interface gateway may parse the above described room charge message in the internal data structure Int to determine that the room charge message is also applicable to the backup PMS . The processors then utilize the second format conversion module to convert the room charge message from the internal data structure Int to the second format B as this is the format utilized by the backup PMS . The processors then send the room charge message in the second format B to the backup PMS via a communication port coupled to the backup PMS . In this way both the primary PMS and backup PMS are sent the room charge message.

Should the interface gateway detect that communication with the primary PMS is no longer available for example using methods similar to as described in conjunction with step of the interface gateway may direct requests for PMS information received from the VOD controllers to the backup PMS . In this way regardless of a failure of the primary PMS the VOD controllers will still be able to receive information from the backup PMS . Additionally because the interface gateway automatically performs message format conversion there is no need to modify the VOD controllers to support the second message format B utilized by the backup PMS . The interface gateway may also include load balancing functionality to alternatively route and or distribute messages received from the VOD controllers between the primary PMS and the backup PMS . This configuration is particularly beneficial when the primary PMS and backup PMS already have a data replication channel between them such as illustrated by the dotted line between PMSs in .

For illustration purposes the PMS at the first hotel operates utilizing a first message format A and the VOD controller at the first hotel operates utilizing a second message format B . At the second hotel the PMS operates utilizing a third message format C and the VOD controller operates utilizing a fourth message format D . In this example the four formats A B C D are assumed to be different and incompatible.

The system shown in beneficially allows multiple hotels to integrate a locally installed PMS with a locally installed guest service device such as VOD controller without installing any additional equipment at the hotel or requiring vendors of the PMS or the VOD controller to modify their components to support a particular message format. The interface gateway beneficially converts messages between the various incompatible formats A B C D.

In a usage example when the PMS at the first hotel sends a notification message indicating that a new guest has checked in to a particular guest room of the first hotel the interface gateway receives the notification message via a communication port coupled to the Internet . The processors determine that the received message is in the first format A utilized by the PMS and utilize the first format conversion module to convert the notification message from the first format A to the internal data structure Int . The processors then parse the notification message in the internal data structure Int to determine that the notification message is applicable to the VOD controller at the first hotel . The processors then utilize the second format conversion module to convert the notification message from the internal data structure Int to the second format B as this is the format utilized by the VOD controller at the first hotel . The processors then send the notification message in the second format B to the VOD controller at the first hotel via a communication port coupled to the Internet .

As illustrated in the above example when receiving a PMS message applicable to a guest service device such as one of the VOD controllers the processors select the guest service device e.g. VOD controller from a plurality of guest service devices e.g. VOD controllers such that the selected guest service device serves a same hotel as the PMS from which the message originated. In this way upon guest check in the VOD controller at the first hotel receives the notification message and can unlock VOD functionality on an in room STB of the particular guest room specified in the notification message. The guest s name or another guest specific welcome message may also be displayed on the in room STB according to information in the notification message.

In an opposite direction when a guest in a particular guest room of the first hotel orders a movie on their in room STB the STB sends an order message to the local VOD controller via the hotel s LAN . As the VOD system is provided by the same vendor there is no message incompatibility problem with the order message and the VOD controller receives the order message and activates the playback of VOD content on the STB in the particular guest room in response to the order message. The VOD controller then sends a room charge message in the second format B to the interface gateway via the hotel LAN and the Internet .

At the interface gateway the processors receive the room charge message via a communication port coupled to the Internet and determine that it is in the second format B utilized by the VOD controller . The processors therefore utilize the second format conversion module to convert the room charge message from the second format B to the internal data structure Int . The processors then parse the room charge message in the internal data structure Int to determine that the room charge message is applicable to the PMS at the first hotel . The processors then determine that this destination device utilizes the first format A and utilize the first format conversion module to convert the room charge message from the internal data structure Int to the first format A . The processors then send the room charge message in the first format A to the PMS via the Internet . In this way the room charge message is added to the guest s folio for the particular guest room in response to the guest ordering a VOD movie. Similar processes are utilized when passing messages between the PMS and VOD controller at second hotel

In an example configuration the interface gateway handles replying to and generating messages in response to certain events on its own and thereby reduces load on the PMS while also increasing overall efficiency and performance of a system employing the interface gateway . For example the interface gateway may automatically ensure all applicable guest service devices are kept appraised of changes to the state data without requiring active involvement of the PMS. Furthermore even in the event that both a guest service device and a PMS utilize a same message format the interface gateway may still convert messages received from one into the internal data structure Int before converting back to the original external format to pass to the other in order to obtain the above described benefits from processing the received message in the internal data structure Int . For example by processing the message in the internal data structure Int the interface gateway may update the state data in the storage device and reply to future requests for the same information without involving the PMS.

In another configuration the interface gateway also offers a common application programming interface API allowing PMSs and or guest service devices that support the common API to directly interface with the interface gateway . The common API may be considered as a particular message format and one of the format conversion modules installed in the storage device may be directed at the common API to thereby allow conversion of messages utilizing the common API into and out of the internal data structure Int .

As shown in rather than locating the interface gateway at the hotel property the interface gateway may be located in the cloud such as at an offsite location accessible by a computer network e.g. the Internet . When used in a cloud solution the gateway may beneficially handle PMS integration between guest service devices and PMSs at a plurality of different hospitality establishments such as hotels. In this case the storage data further store tables and or information used to correlate guest service device s serving a particular hospitality establishment to the appropriate PMS s serving the same hospitality establishment and vice versa. When receiving an incoming message from a source device e.g. PMS that is applicable to a certain type of destination device e.g. VOD controller the one or more processors select the destination device of this type from the plurality of attached devices such that the selected destination device serves a same hospitality establishment as the source device. This beneficially allows a single interface gateway to interface between additional property management systems and guest service devices serving other hospitality establishments while ensuring that messages are only forwarded between attached devices that serve a same hospitality establishment. Although illustrate a single type of guest service device e.g. VOD controllers the same systems are also applicable to other types of guest service devices.

A cluster of multiple interface gateways may be employed for a single hotel or other hospitality establishment such that if one gateway should fail for whatever reason a second gateway will continue to operate and guest service systems at the hotel will continue to operate. For example a VOD controller or PMS may timeout when sending a first message to a primary gateway that has failed however on second try of sending the same message a redundant secondary gateway may take over for the primary. More sophisticated designs using load sharing may prevent the timeout from occurring when the primary fails by automatically rerouting the request to the backup.

For a cloud based design where the interface gateway is accessible from a public network security of personal information is a concern. Personal information may be protected by carefully following the payment card industry PCI data security standard.

In another advantageous configuration the interface gateway also dynamically adjusts the content of messages as a part of the format conversion process. For example a first attached device such as a VOD controller may send a message such as 

This example message means the VOD controller wants the guest s first name FN last name LN ACCT number and checkin date DA in a certain representation mm dd yyyy for room 113. The interface gateway receives the message converts the message to the internal data structure parses the message to determine it is applicable to a second attached device such as the PMS determines the message format required by the PMS and then converts the message from the internal data structure to the format used by the PMS which may only support a similar but generic message such as 

In response the PMS replies with all stored data at the PMS pertaining to room 113 which could include extra information in addition to that requested by the VOD controller and the information may be represented in different forms like dates in yy mm dd for example. The interface gateway receives the response message from the PMS converts the response message to the internal data structure parses the response message in the internal data structure to determine that it is applicable i.e. a reply to the VOD controller. The interface gateway then generates a reply message to VOD controller using only the fields of the internal data structure that OVM actually requested in its original request i.e. FN LN ACCT DA in this example and also puts the fields in their requested representation such as making sure the DA field is represented as mm dd yyyy .

An advantage of this configuration is the various attached devices can be upgraded or changed at any time to request specific information and or use different representations and other devices attached to the interface gateway and the interface gateway itself do not need to be modified as long as the interface gateway includes the appropriate format conversion module s selected to correspond with the attached devices.

In summary an example interface gateway interfaces between a first device and a second device serving a hospitality establishment. The first device is one of a property management system PMS and a guest service device and the second device is the other of the property management system PMS and the guest service device. One or more communication ports perform data communications with the first device and the second device. One or more processors receive a message from the first device determine that the message is in a first format convert the message from the first format to an internal data structure parse the message in the internal data structure to determine that the message is applicable to the second device determine that the second device supports a second format convert the message from the internal data structure to the second format and send the message in the second format to the second device.

Although the invention has been described in connection with a preferred embodiment it should be understood that various modifications additions and alterations may be made to the invention by one skilled in the art without departing from the spirit and scope of the invention as defined in the appended claims. For example in addition to one or more general purpose and or specific purpose processors a microcontroller circuit or other hardware based implementation technique such as an application specific integrated circuit ASIC or field programmable gate array FPGA may be utilized to perform the above described functions of the interface gateway . In another example although software based format conversion modules are anticipated to be of particular benefit by the inventors firmware or hardware based format conversion modules may also be employed in other configurations. In another example the state data may include cached data corresponding to data stored at the guest service devices to thereby reduce load on the guest service devices should the cached data later be requested by the PMS or another device. In other examples a message may be represented as i.e. segmented into a plurality of messages and a plurality of messages may be combined into a single message. In yet another example rather than operating as a standalone unit the interface gateway may be combined with and or operate as a function of the PMS one of the guest service devices or another device such as an Internet gateway or firewall.

Although the invention has been described as being utilized at a hotel the invention is equally applicable to any hospitality related location or service wishing to integrate guest service devices with property management systems including but not limited to hotels motels resorts hospitals apartment townhouse complexes restaurants retirement centers cruise ships busses airlines shopping centers passenger trains casinos etc. The exemplary user of guest is utilized in the above description because customers of hospitality establishments are generally referred to as guests however the exemplary user of guest in conjunction with the invention further includes all types of users whether or not they are customers. The invention is also applicable outside the hospitality industry such as to interface between an attached management system and a number of external control devices having different message format requirements at a factory. In another example the interface gateway of the invention may be employed to interface between attached digital signage devices having different message format requirements.

The various separate elements and modules of the invention described above may be integrated or combined into single units. Similarly functions of single elements and modules may be separated into multiple units. The flowcharts may be implemented as processes executed by dedicated hardware and may also be implemented as one or more software programs executed by a general or specific purpose processor to cause the processor to operate pursuant to the software program to perform the flowchart steps. In this way a computer readable medium stores computer executable instructions that when executed by a computer cause the computer to perform above described actions of the interface gateway . Examples of the computer readable medium include optical media e.g. CD ROM DVD discs magnetic media e.g. hard drives diskettes and other electronically readable media such as flash storage devices and memory devices e.g. RAM ROM . The computer readable medium may be local to the computer executing the instructions or may be remote to this computer such as when coupled to the computer via a computer network. For example the interface gateway of may be implemented by a computer having one or more processors executing a computer program loaded from a hard drive located within the computer or elsewhere to perform the steps of the various flowcharts and above description. In one configuration the computer is a computer server connected to a network such as the Internet and the computer program stored in the hard drive may be dynamically updated by the update server . In addition to a dedicated physical computing device the word server may also mean a service daemon on a single computer virtual computer or shared physical computer for example. Unless otherwise specified features described may be implemented in hardware or software according to different design requirements. Additionally all combinations and permutations of the above described features and configurations may be utilized in conjunction with the invention.

