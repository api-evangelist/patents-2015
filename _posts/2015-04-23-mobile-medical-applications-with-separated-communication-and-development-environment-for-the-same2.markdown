---

title: Mobile medical applications with separated communication and development environment for the same
abstract: Systems and methods are provided for a mobile medical application operating environment and automated/semi-automated systems for creating application software for the operating environment. In the operating environment, all data storage and communication with external devices relating to sensitive medical data and operations is handled by a data manager application concurrently running with the medical application on a mobile device. Multiple medical applications can be run concurrently on the mobile device with reduced risk of data failure, thereby simplifying the design and release process for mobile medical applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09619213&OS=09619213&RS=09619213
owner: ARIZONA BOARD OF REGENTS ON BEHALF OF ARIZONA STATE UNIVERSITY
number: 09619213
owner_city: Scottsdale
owner_country: US
publication_date: 20150423
---
This application claims the benefit of U.S. Provisional Application No. 61 983 053 filed on Apr. 23 2014 and entitled TRUSTWORTHY MOBILE MEDICAL APPLICATION MODEL AND DEVELOPMENT ENVIRONMENT the entire contents of which are incorporated herein by reference.

This invention was made with government support under grants 1116385 and 1231590 awarded by the National Science Foundation. The government has certain rights in the invention.

The present invention relates to medical applications for mobile devices. In particular the present invention relates to development platforms architecture framework and safety security of mobile medical applications.

According industry reports by 2018 1.7 billion smartphone users will have downloaded at least one health application. Such widespread adoption of smartphone based medical apps will open new avenues for innovation bringing mobile medical apps MMAs to the forefront of low cost healthcare delivery. A smartphone user may have multiple apps running on a smart phone or tablet controlling his health in a collaborative manner and sharing data. Such applications might range from simple data monitoring to more complex actuation control for devices such as for example infusion pumps.

Mobile medical apps MMAs work closely with human physiology through sensing and control. As such it is essential for them to achieve intended functionality without having harmful effects on human physiology or compromising the privacy of health data in spite of runtime faults caused for example by service availability and application coding errors. Key challenges in ensuring correct functioning of MMAs include maintaining privacy of health data long term operation of wearable sensors and ensuring that no physical harm is done to a user by the MMAs. Providing evidence of such safety security and sustainability S3 properties can increase development time and may require higher skill sets for the developer. As such although ensuring S3 is essential it often acts as a hindrance to innovation.

Various embodiments described herein provide a tool for partially automating the process of developing and optimizing code for medical health applications. In some embodiments the system receives a high level description of the functionality of the health app for example expressed in Architectural Analysis and Description Language AADL format and outputs security enabled code for interfacing with sensors storing data and communicating data to other apps other devices or remote storage systems e.g. a cloud based EHR management environment . In some embodiments the system will also apply static analysis tools to test the automated code for errors. Furthermore for apps that control actuation devices in a closed loop the system will allow developers to test their generated apps for patient safety using algorithms such as for example non linear spatio temporal hybrid automata.

In some embodiments medical device applications running on a user device e.g. a smart phone or tablet will be configured to interface with sensors external devices other apps and remote storage systems only through a medical data manager application or Trustworthy Data Manager TDM . The TDM application is optimized and tested to provide secure and reliable communication and safe operation of the mobile app regardless of user errors and varying operating conditions. As a result operation of app controlled medical devices and storage of medical data is less susceptible to app coding errors or run time fault conditions.

In one embodiment the invention provides a method of developing a mobile medical software application. A code development system receives specification information defining operational characteristics of a first mobile medical software application. The code development system then automatically generates a data manager software application. The generated data manager includes portions of previously written software code stored on a non transitory computer readable memory of the code development system. These previously written software code are experimentally verified to satisfy safety and security criteria. The portions of previously written software code are selected and arranged by the code development system such that the generated data manager software application is configured to communicate with the first mobile medical software application and to provide communication with other software applications and one or more external devices based on the specification information received for the first mobile medical software application. The first mobile medical software application is generated such that the first mobile medical software application is configured to communicate with the data manager software application and is not capable of direct communication with any external device.

In another embodiment the invention provides a mobile medical system comprising a first external medical device a second external medical device and a mobile device. The mobile device includes a processor and a non transitory memory storing instructions that when executed by the processor operate a plurality of software applications including a first mobile medical software application a second mobile medical software application and a mobile medical data manager software application. Operating the mobile medical data manager includes providing all communication between the first mobile medical software application the second mobile medical software application the first external medical device and the second external medical device. Operating the first mobile medical software application and the second mobile medical software application includes performing a data operation related to a medical function and communicating with the mobile medical data manager to transfer data related to the data operation to or from the external medical devices. Neither the first mobile medical software application nor the second mobile medical software application is capable of communicating directly with any external device all communications to and from the mobile medical software applications are provided through the mobile medical data manager.

Other aspects of the invention will become apparent by consideration of the detailed description and accompanying drawings.

Before any embodiments of the invention are explained in detail it is to be understood that the invention is not limited in its application to the details of construction and the arrangement of components set forth in the following description or illustrated in the following drawings. The invention is capable of other embodiments and of being practiced or of being carried out in various ways.

Diagnostic and analysis data which may be generated manually by the medical professional or automatically by the remote system can then be transmitted back to the smartphone where it can be utilized by the user or the connected sensor actuator devices . For example in some MMAs the user will monitor a graphical user interface displayed on the smartphone which provides feedback regarding a medical condition or progress towards a goal e.g. a step counter . In other MMAs the smartphone may transmit a signal to a device or actuator to modify the operation of the device based on feedback. For example one MMA may operate as an artificial pancreas that receives sensor data processes that data and transmits an operating instruction to a communicatively coupled insulin infusion pump associated with the user .

In MMAs like those illustrated in the example of a wearable sensor can collect physiological data and communicate it to the smartphone through a wireless channel. The smartphone in turn can communicate the data to a cloud server where it can be stored in an electronic health record EHR . As noted above the smartphone can also control safety critical devices such as a drug infusion pump. In this way the control outputs computed by the MMA can directly affect the physiology and well being of the user . In such cases the control algorithms must be verified for patient safety. In fact because some MMAs operating on smartphones are considered to be medical devices by the FDA documentation of such testing and verification may be required before the MMA can be made available to the public.

Due to lack of in depth knowledge about human physiology smartphone app developers might fail to consider these safety concerns. Further since the smartphone is not a dedicated healthcare platform non medical apps such as games might affect system performance and data reliability e.g. via rapid battery depletion thereby the availability and operation of the medical app. Also all communications between the sensors the smartphone and the cloud take place through the wireless channel which may be susceptible to security attacks.

Similarly Medical Application B also includes its own graphical user interface and a module for controlling the data analysis and other substantive functionality of the app i.e. module . Furthermore Medical Application B must also include modules for managing and regulating communication with other apps operating on the same smartphone module with any communicative coupled sensors module and with other devices or remote systems via Wi Fi module .

This framework creates system redundancies in the modules of Medical Application A and Medical Application B . For example each developer must design and implement code to control the interactions between the smartphone the specific app and the external sensors. This may be a somewhat acceptable design characteristic when the first application is utilizing one sensor and the second application is using a different sensor . However in situations where both applications are utilizing data from the same sensor the redundant sensor communication modules increase the load on system resources and may affect the reliability of the sensor .

Furthermore although there are synergistic benefits to providing for communication and data sharing between two medical applications running on the same smartphone making each application responsible for implementing its own inter app communication requires some degree of knowledge about the input output characteristics of other applications in order to effective implement communication and data sharing between apps.

Lastly because the FDA now regulates certain MMAs as medical devices the system functionality and communication interface modules of each app must separately undergo extensive testing validation and documentation. These added requirements may dissuade app developers from designing and releasing MMAs that could otherwise be beneficial to specific patients or to the public at large.

In the architectural framework of the MMA sensor actuator interfaces data communication and data storage mechanisms are isolated from the core mobile device GUI and processing algorithms. In the example of two mobile medical applications are being run on the same smartphone Medical Application A and Medical Application B . Furthermore a third application i.e. the Trustworthy Data Manager TDM Application is also being run on the same smart phone to handle internal and external communications including for example communications between the two applications and communication with the external sensors .

The content and complexity of each individual MMA is greatly simplified under this framework. The first application includes a GUI the functional processing algorithms specific to the first application module and a basic application I O module . Similarly the second application includes a GUI the functional processing algorithms and another basic application I O module . The I O module of each application does not need to be capable of comprehensive internal and external communication. Instead in some implementations the I O module simply needs to control a fixed number of memory locations where output data generated by the application is to be stored and to access memory locations where input data from the TDM application can be found.

Notably in the framework illustrated in each MMA does not need to provide its own secure sustainable and safe data communication modules. Instead a separate application the TDM provides optimized code for communication with external sensors module for communication between applications running on the same smartphone module and for communications with other external devices and remote systems via Wi Fi module .

In the framework of the MMA software itself i.e. Medical Application A or Medical Application B is in charge of only the graphical and algorithmic aspects of the application. Every instance of data communication to the sensor cloud data storage in the smartphone control inputs to the actuator and other interaction with the user is performed through the TDM application . This framework enables development of MMAs in the form of a suite where participating apps are certified by the regulatory agencies for safety sustainability and security. The app model registry may provide guidelines to other apps to become part of the application suite e.g. the types of sensors being used by currently available apps in the application suite sensor sampling frequency energy management algorithms etc. . However to allow new MMAs to be developed that are not restricted by compliance with the existing guidelines of a specific application suite a new TDM can be developed and implemented that modifies the requirements and guideline effectively creating a new group of MMAs or application suite .

The application model of ensures that S3 properties are taken into account during new MMA development. Any form of control input from an MMA is safety assured by checking it with a hybrid automata based model as discussed in further detail below. Any sensor communicating with the TDM supports long term availability with sustainable design. Finally any form of data communication is privacy ensured by the TDM. Also data collected by different applications are kept in secured databases shared only with certified applications similar in principal to application sandboxing .

Furthermore the architectural framework illustrated in can be implemented by a semi automated application development system that ensures safety from interactions sustainability in sensor usage and security of data i.e. the S3 principles . The semi automated application development can also generate a customized TDM application for interfacing with specific sensors and other data communication. In various implementations a developer can use the development tool to either a verify that a previously developed MMA satisfies trustworthiness requirements and or b automatically generate critical parts of the code that will sufficiently address S3 vulnerabilities.

The semi automated application development tool can be a implemented as a software application running for example on a desktop computer laptop computer or tablet computer. In other words the system would include a processor and a non transitory computer readable memory storing instructions that when executed by the processor provide the application development functionality. In other embodiments the development tool is implemented as a web or network based design environment where use input is entered through a user end terminal e.g. a personal computer with Internet network access and forwarded to a remote server system that provides the development tool functionality as described below.

The design specification provided by the software developer includes an app software component and an interfaces and communication component . The app software component defines the graphical user interface and the control algorithm for the MMA. The interfaces and communication component defines specifications for interacting with certain sensors and actuators that are to be utilized by the MMA and other I O communication interface protocol . Both the application software component and the interfaces and communication component are provided as inputs to the automated development environment ADE . The ADE performs static analysis of the application software step using for example spatio temporal hypbrid automata as described in further detail below. The ADE analyzes the sensor actuator specifications and performs a multi object optimization routine to optimize how sensors and actuators can be monitored and controlled to optimize performance variables such as for example execution time energy consumption etc. The ADE also generates appropriate encryption algorithms according to the I O communication interface specification provided by the developer step . Based on the output of the static analysis of the application specific component step the multi object optimization step and the developed encryption algorithms step the ADE configures the application according to S3 principles and constraints step .

Based on the output of the application configuration step the ADE outputs automatically generated code modules step that conform to the operational requirements specified by the developer and to the S3 principles or other performance verification standards . These code modules can be assembled using pre written code that is optimized and adjusted based on the output of the analysis and configuration performed by the ADE .

The output of the process illustrated in is an application software component i.e. the MMA sensor code and code configured to manage interfaces and communication. In the example of application code written by the developer portion is combined with automated code generated by the ADE to form the MMA . The TDM in this example is however generated entirely by automated code provided by the ADE and includes optimized communication code including data encryption algorithms and code for communicating with external sensors and actuators . The sensor code output by the ADE can be uploaded to the specific external sensors to control sensor side functionality and communications with the smartphone. The ADE also outputs an analysis report describing the results of the static analysis performed on the MMA design. This report can then be used to document application safety for example for FDA review or certification for inclusion in an application suite or medical application marketplace.

Although in the example of the MMA code includes a combination of developer written code and automatically generated code the degree to which the resulting MMA utilizes automated code can vary in different implementations or can be controlled by developer preferences. For example in some situations a developer may choose to manually create the code for the graphical user interface and the control algorithm of the MMA and to use automatically generated code from the ADE only for I O interface with the TDM. In other situations a developer may prefer to have the ADE develop all of the code of the MMA without using any developer written code.

Furthermore the sensor and smartphone code generated by the ADE can then also be passed through a static analyzer to validate the code against data type and memory related errors. The static analyzer the STHA reachability analysis sustainable optimized sensor design and the security primitives are then used to generate the certification report stating the findings and conclusions of the ADE . The output code and the certification report can then be reviewed by expert personnel in the field to certify the application. If the MMA fails certification then the developer can redesign and again use the ADE according to . IN some implementations the ADE can also be used in a modular fashion so that the user can use different modules individually and generate only partial reports.

As discussed above the ADE is configured to derive an optimized sustainable design for sensors and actuators including for example wearable sensors. Wearable sensors typically scavenge energy from light or human body heat. The availability of scavenging sources is unpredictable. Therefore operation of such sensors must be optimized to achieve energy neutrality in order to ensure sustainable operation of the sensors. A system is energy neutral when the storage device level remains the same before and after a computation i.e. energy needed for the computation is solely obtained from a scavenging source .

In this problem formulation the ADE optimizes the data sending frequency of the sensor depending on the availability of scavenging source. For example if the sending frequency is fwhen the scavenging source is available and fwhen scavenging source is unavailable and to achieve energy neutrality the sensor battery is to be charged only when the scavenging source is available the ADE must find values of fand fsuch that the execution should require only the energy obtained from scavenged source. Further even if the scavenging source is available the sensor battery is unable to store energy beyond the battery capacity. Given these constraints the ADE will minimize fand f. For problems like this the ADE may provide a set of time constrained sustainable designs and the developer can choose a proposed design based on available sensors and their configuration settings.

Furthermore as also noted above the ADE is configured to perform safety verification in the design of the smartphone MMA and the TDM. In some implementations this is accomplished by implementing a theoretical safety verification to prove the design safety using model checking and reachability analysis techniques. The safety verification ensures that the side effects of interactions between human physiology and sensors are within accepted limits. These interactions are typically governed by smartphone control algorithms when a sensor acts as an actuator. In such a scenario the developer provides hybrid automata which is embedded in the control algorithm while specifying high level design. Reachability analysis is then performed on the specified hybrid automata while considering optimized time constrained designs as an initial set.

In some implementations of the ADE the safety verification methods use spatio temporal hybrid automata STHA and a related reachability analysis algorithm. STHA considers the effect of interactions over time as well as over space to provide more accurate results as compared to only time based analysis. Interactions are considered in the form of equation 1 

In some implementations the ADE allows the developer to specify requirements for various components such as sensing computation and communication. In sensing the type of sensors motes sampling frequency and sending frequency may be specified. The computation component may include processing of data on both sensors and smartphone which uses various physiological algorithms from a database including for example Fast Fourier Transform FFT peak detection and mean. The developer can also add new algorithms as well as modify the inputs of existing available algorithms. Furthermore as noted above communication protocol between the sensors and the smartphone as well as between the smartphone and the cloud can be specified. The developer can also specify energy management techniques such as duty cycle and radio power level.

The ADE can also provide the developer the ability to specify aspects of the security protocol selected from a security algorithm database which can also be extended to include new security protocols as defined by a developer . As discussed above the ADE generates a TDM application which ensures that wireless communication to and from the smartphone is secure. It includes a security algorithm specified by the developer and maintains a code template for generating the TDM application. The code for the specified security algorithm is accessed from a database and inserted into the code template. The code generator uses Application Programming Interfaces APIs to allow communication between external wireless mote and an smartphone for example via Bluetooth. The Bluetooth API ensures that a connection is established and that data communication between mote and smartphone while a sensor handler acts as a manager and registers all user assigned sensors different algorithms associated with each sensor and handling of data received from the particular sensor. For each of the wireless communication calls the code generator of the ADE appends the security protocol.

Lastly the ADE applies static analysis techniques to verify proper operation of the smartphone code and any code that will be run by an external sensor. The quality of application code may be quantified in terms of the number of defects found. The software generated by the ADE may use a high level language such as java C or objective C. Although compilers for these languages may include advanced features to find bugs or errors in the code the complexity involved in high level languages such as for example multithreading methods classes and various design types may make available compilers inefficient in identifying all bugs. Therefore the ADE also uses static analysis tools to make the resulting code more robust. Tools such as Find Bugs generate unit test cases compute code metrics and identify duplicate code dead code misunderstood API methods and other performance problems.

Thus the invention provides among other things a combination of mobile medical applications running on a smartphone where all communications and data operations are handled by a separate data management application that is isolated from the code of the mobile medical applications and an automated development environment for assisting with the development of safety verified code for the mobile medical applications and the separate data management application. Various features and advantages of the invention are set forth in the following claims.

