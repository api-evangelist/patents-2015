---

title: Techniques for monitoring transformation techniques using control charts
abstract: Techniques for applying transformation techniques and using transformation outputs to implement remedial actions are included. A system may include a receiver that may receive time series data including data points and one or more specifications for a transformation technique applicable to the time series data. The system may include a transformation engine that may apply the transformation technique to the time series data to produce outputs. The system may include a control engine that may determine a set of control limits using, for example, a control chart and a set of residual values. The system may include an anomaly detection engine that may generate the set of residual values using the current data points and the outputs. The anomaly detection engine may further identify one or more anomalies of the set of residual values based on the set of control limits and the control chart.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09208209&OS=09208209&RS=09208209
owner: SAS INSTITUTE INC.
number: 09208209
owner_city: Cary
owner_country: US
publication_date: 20150325
---
The present disclosure claims the benefit of priority under 35 U.S.C. 119 e to U.S. Provisional Application No. 62 058 848 filed Oct. 2 2014 the entirety of which is incorporated herein by reference.

The present disclosure generally relates to systems and methods for automated transformation technique monitoring and process control methodology using control charts.

Transformation technique specifications are a vital tool in determining subsequent data points from historical time series data. Maintaining a large number of these specifications may present computational challenges. For example as further data points are received remedial actions e.g. specification selection specification re parameterization and generation of output related to these specifications may occur at inappropriate times. For example performing a remedial action with respect to the specification every time a data point is received is impractical and computationally extensive. As a further example performing a remedial action with respect to the specification at periodic intervals may result in these remedial actions being unnecessarily performed.

In accordance with the teachings provided herein systems and methods for applying transformation techniques and using transformation outputs to implement remedial actions are provided.

For example a system is provided for applying transformation techniques and using transformation outputs to implement remedial actions. The system may include a receiver that receives time series data including a plurality of current data points and one or more specifications for a transformation technique applicable to the time series data. The system may further include a transformation engine that applies the transformation technique to the time series data to produce a plurality of outputs. The system may further include a control engine that determines a set of control limits using a control chart and a set of residual values. The system may further include an anomaly detection engine that generates the set of residual values using the plurality of current data points and the plurality of outputs wherein each residual value in the set of residual values indicates a difference between a current data point of the plurality of current data points and an output of the plurality of outputs. The anomaly detection engine may additionally identify one or more anomalies of the set of residual values based on the set of control limits and the control chart. The system may further include a remedial action engine that determines a remedial action for the transformation technique based on the one or more anomalies and performs the remedial action related to the one or more specifications for the transformation technique.

In another example a non transitory computer program product tangibly embodied in a non transitory machine readable storage medium is provided the non transitory computer program product including instructions operable to receive time series data including a plurality of current data points. The computer program product may include further instructions operable to receive one or more specifications for a transformation technique applicable to the time series data. The computer program product may include further instructions operable to apply the transformation technique to the time series data to produce a plurality of outputs. The computer program product may include further instructions operable to generate a set of residual values using the plurality of current data points and the plurality of outputs wherein a residual value indicates a difference between a current data point of the plurality of data points and an output of the plurality of outputs. The computer program product may include further instructions operable to determine a set of control limits using a control chart and the set of residual values. The computer program product may include further instructions operable to identify one or more anomalies of the set of residual values wherein anomalies are identified using the set of control limits and the control chart. The computer program product may include further instructions operable to determine a remedial action for the transformation technique based on the one or more anomalies. The computer program product may include further instructions operable to perform the remedial action related to the one or more specifications for the transformation technique.

In still one further example a computer implemented method is provided for applying transformation techniques and using transformation outputs to implement remedial actions. The method may include receiving time series data including a plurality of current data points. The computer implemented method may further include receiving one or more specifications for a transformation technique applicable to the time series data. The computer implemented method may further include applying the transformation technique to the time series data to produce a plurality of outputs. The computer implemented method may further include generating a set of residual values using the plurality of current data points and the plurality of outputs wherein a residual value indicates a difference between a current data point of the plurality of data points and an output of the plurality of outputs. The method may further include determining a set of control limits using a control chart and the set of residual values The method may further include identifying one or more anomalies of the set of residual values wherein anomalies are identified using the set of control limits and the control chart. The method may further include determining a remedial action for the transformation technique based on the one or more anomalies. The method may further include performing the remedial action related to the one or more specifications for the transformation technique.

Certain aspects of the disclosed subject matter relate to system and methods for automated transformation technique monitoring and process control methodology using control charts. As used herein a transformation technique is intended to refer to forecasting a future data point from historical time series data. Forecasting or forecast generation is intended to include the process of making statements about events whose actual outcomes have not yet been observed. Examples of a transformation technique specification may include a statistical and or predictive model such as a generalized linear model logistic regression model ordinary least square regression model classification model regression tree model multivariate adaptive regression spline model and the like. A control chart e.g. a Shewhart control chart is intended to refer to a graph used to study how a process changes over time. Data points may be plotted in chronological order on a control chart. A control chart can include a central line for the average at least one upper control limit and at least one lower control limit though multiple upper and lower control limits may be utilized. The control limits may be used to determine whether a process is in a state of statistical control. A tracking signal as used herein is a measurement of error that is used to determine whether bias is present in a transformation technique specification. The present disclosure relates to process control methods for automated monitoring of transformation technique specifications using control charts to detect scenarios in which performance of a remedial action may be appropriate.

Predictive modeling is a process used in predictive analytics to create a transformation technique specification e.g. a predictive model . Predictive analytics is an area of data mining concerned with determining subsequent data points in a time series by applying a transformation technique according to a transformation technique specification. A transformation technique specification may be made up of a number of predictors which are variable factors that are likely to influence subsequent data points. In predictive modeling data is collected for the relevant predictors a transformation technique specification is formulated predictions are made and the specification is validated or revised as additional data becomes available. The specification may employ a simple linear equation or a complex neural network for example. A time series as used herein is intended to refer to a sequence of data points typically consisting of successive measurements made over a time interval. References to a time series is intended to refer to one or more individual time series unless otherwise specified.

Some transformation technique software tools and technologies may include capabilities for automated specification development specification selection comparison parameter optimization hierarchical reconciliation user overrides exception handling accuracy determinations and output generation. Specification families considered may typically include for example Exponential Smoothing Models ESM Auto Regressive Integrated Moving Average Models either with or without exogenous variables ARIMA X Unobserved Components Models UCM and Intermittent Demand Models IDM . Custom or user defined specifications can be considered as well.

Once specifications are selected and output data points are generated the resultant specifications may become inaccurate as new data points are added to the historical time series data. Some transformation techniques enable the user to specify a number of remedial actions be performed on the specification s . For example a user may cause different a set of specification s to be diagnosed and selected SELECT . Additionally or alternatively the user may cause a fit parameterization FIT of a set of current specification s . Additionally or alternatively the user may cause a set of output data points to be updated using the currently selected specification s GENERATE . Current techniques require that each time series must be treated in the same manner. Thus using current techniques the specified remedial action e.g. SELECT FIT or GENERATE is applied to each time series.

Executing such a transformation technique specification development and selection process each time a new data point is added to a time series is impractical and inadvisable as it results in a lack of specification stability and may cause output to fluctuate in some cases dramatically. To circumvent this issue current techniques typically redevelop and reselect specifications periodically. As new data points are added to the time series such specifications may become inaccurate. Thus aspects of the current disclosure for managing specifications related to transformation techniques are more efficient effective and or avoid undesirable side effects or other drawbacks with respect to at least one significant use case.

In one example the environment may include a stand alone computer architecture where a processing system e.g. one or more computer processors includes the system being executed on it. The processing system has access to a computer readable memory .

In one example the environment may include a client server architecture. The users may utilize a PC to access the servers running the system on the processing system via the networks . The servers may access the computer readable memory .

Some or all of the process described in relation to transformation technique monitoring engine may be performed under the control of one or more computer systems configured with specific computer executable instructions and may be implemented as code e.g. executable instructions one or more computer programs or one or more applications executing collectively on one or more processors by hardware or combinations thereof. The code may be stored on a non transitory computer readable storage medium for example in the form of a computer program including a plurality of instructions executable by one or more processors. The computer readable storage medium may be non transitory.

A disk controller can interface with one or more optional disk drives to the bus . These disk drives may be external or internal floppy disk drives such as a storage drive external or internal CD ROM CD R CD RW or DVD drives or external or internal hard drive . As indicated previously these various disk drives and disk controllers are optional devices.

A display interface may permit information from the bus to be displayed on a display in audio graphic or alphanumeric format. Communication with external devices may optionally occur using various communication ports . In addition to the standard computer type components the hardware may also include data input devices such as a keyboard or other input output devices such as a microphone remote control touchpad keypad stylus motion or gesture sensor location sensor still or video camera pointer mouse or joystick which can obtain information from bus via interface .

In accordance with at least one embodiment data preparation analysis and pre processing techniques may be performed on the loaded data at block . For example such techniques may include data visualization outlier anomaly detection data cleansing and segmentation clustering. Visualization may include tasks that provide a visual representation and or report generation related to the data loaded at . Outlier Anomaly detection may include tasks related to the identification of unusual data records or data errors within the loaded data. Data cleansing may include tasks related to the removal or correction of identified outliers and or anomalies from the loaded data. Segmentation and or clustering may include tasks related to discovering groups and structures that indicate relationships between variables and or data points included in the loaded data.

In accordance with at least one embodiment a number of outputs e.g. forecasted data points may be generated at block . During a process for generating the outputs hierarchy and specification options for example may be identified. Additionally transformation technique specifications e.g. predictive models may be created selected and or fitted prior to or subsequent to producing the number of outputs.

In accordance with at least one embodiment post processing and analysis techniques may be performed on a selected transformation technique specification at block . For example such techniques may include visualization of results specification evaluation exception identification reporting and specification performance monitoring and tracking. Performance monitoring and tracking may include evaluating performance of the outputs produced by the applying the transformation technique associated with the transformation technique specification to time series data.

At decision block a determination may be made as to whether the output is acceptable e.g. falls within quality threshold amount . If the output is not acceptable e.g. the specification is inaccurate based on the evaluations of block then the flow may proceed to where the transformation technique specification e.g. the predictive model may be refined.

In accordance with at least one embodiment if a determination is made at decision block that the output is acceptable e.g. based on the evaluations of block then the flow may proceed to where the transformation technique specification s and outputs may be locked or otherwise assigned to a time series data set.

In accordance with at least one embodiment the transformation technique specification may be promoted to production and corresponding results published at block . At block the data mart and or master control file may be updated and the process may repeat from block .

In accordance with at least one embodiment if a determination is made at decision block that the output is not acceptable e.g. based on the evaluations of block then the flow may proceed to where the transformation technique specification s may be refined e.g. a new specification selected parameterize the current specification and or generate output using the current specification .

In the embodiment shown in the drawings rule data store a control chart data store a time series data store and a transformation technique data store are shown although data can be maintained derived or otherwise accessed from various data stores either remotely or locally to achieve the functions described herein. The transformation technique monitoring engine shown in includes various modules such as a graphical user interface an application programming interface a receiver a transformation engine a control engine an anomaly detection engine and a remedial action engine . Some functions of these modules are described below. However for the benefit of the reader a brief non limiting description of each of the modules is provided in the following paragraphs.

In accordance with at least one embodiment a process is enabled for utilizing the transformation technique monitoring engine . For example a user e.g. a user of users in may utilize device s e.g. processing system of to interact with server s e.g. the server s of to utilize the functionality of transformation technique monitoring engine . The device s and the server s may be configured to communicate with networks e.g. the networks of . For example transformation technique monitoring engine may be executed on the servers or on the device s .

In accordance with at least one embodiment a user may utilize device s to request initiation of a monitoring process for one or more transformation technique specification s . Additionally or alternatively servers may transmit a request to initiate a monitoring process of one or more transformation technique specification s . In either case such a request may be received via graphical user interface and application programming interface both components of the transformation technique monitoring engine . In some instances the request may be generated automatically by a triggering event e.g. upon elapse of a specified time period on a specified date time etc. .

In accordance with at least one embodiment receiver a component of the transformation technique monitoring engine may receive or obtain time series data. For example the receiver may interact with time series data store to obtain time series data. The time series data store may be a data store responsible for storing data associated with one or more time series. Additionally the receiver may receive or obtain transformation technique specifications from for example the transformation technique data store a data store responsible for storing such specification s . Upon receiving and or obtaining times series data and one or more transformation technique specifications the receiver may communicate such information to the transformation engine a component of transformation technique monitoring engine .

In accordance with at least one embodiment the transformation engine may apply a transformation technique defined by the transformation technique specification to a data to produce a set of outputs. The set of outputs may include a number of predicted data points for a time series that indicate one or more predicted data values. The transformation engine may communicate the set of outputs to anomaly detection engine a component of transformation technique monitoring engine .

In accordance with at least one embodiment anomaly detection engine may receive or otherwise obtain a set of outputs from transformation engine . The anomaly detection engine may generate a set of residual values using the time series data and the set of outputs. A residual value is intended to refer to a computed difference between the observed value of a data point and a predicted value of the data point. In at least one example the set of residual values may be generated by determining a difference between each current data point of the time series and a corresponding predicted data point of the set of outputs. The anomaly detection engine may obtain a number of rules and or tests from for example rule data store a data store responsible for storing such rules tests. Additionally anomaly detection engine may obtain one or more control charts from control chart data store a data store responsible for storing one or more control charts. In at least one example the anomaly detection engine may utilize the set of residuals the one or more control charts and the one or more rules tests to identify exceptions and or anomalies within the set of outputs. The anomaly detection engine may interact with control engine and or remedial action engine both components of the transformation technique monitoring engine .

In accordance with at least one embodiment the control engine may receive or otherwise obtain a control chart and a set of residual values. For example control engine may obtain a control chart from control chart data store . The control engine may obtain a set of residual values from the anomaly detection engine . The control engine may utilize the control chart and the set of residuals to determine a set of control limits. In at least one example control engine may calculate a tracking signal. A tracking signal is a measurement of error that is used to determine whether bias is present in a transformation technique specification. In at least one example the calculated tracking signal may be used to construct control limits. The tracking signal may be computed for example as follows 

Control limits may be communicated to the anomaly detection engine or any suitable component of the transformation technique monitoring engine .

In accordance with at least one embodiment remedial action engine may receive information related to one or more identified anomalies. For example remedial action engine may receive identification information related to one or more anomalies identified by anomaly detection engine . The remedial action engine may determine one or more remedial actions e.g. SELECT FIT GENERATE for the transformation technique based on the one or more anomalies. For example the remedial action engine may utilize one or more rules tests from rule data store to determine the one or more remedial actions. The remedial action engine may perform the determined remedial actions on one or more transformation technique specifications. The remedial action engine may cause modified transformation technique specifications to be stored in transformation technique data store .

The modules described above provides an efficient and robust capability to determine when it is advisable to select fit parameterize or generate output from one or more transformation technique specifications on an individual specification basis. Information related to actions performed by modules may at any suitable time be displayed to a user of device s via graphical user interface .

The flow diagram may begin at block . At block 3 sigma upper and lower control limits may be determined using a Shewhart control chart by for example the control engine of . For example the Shewhart control chart may be initialized with a mean p equal to 0. A set of residuals may be plotted on the Shewhart control chart. The plotted chart may be optionally displayed to a user via graphical user interface of .

At block the determined control limits from block may be refined. For example the 3 sigma upper and lower control limits may be refined using a set of rules tests e.g. Western Electric tests . Western Electric rules tests may be used for detecting out of control or non random conditions in a control chart. In at least one example Western Electric tests may identify exceptions in the control chart by identifying one or more outliers of the set of residuals. In at least one example residual data points identified as outliers may be replaced with a corresponding upper or lower control limit.

At block the determined control limits from block may be refined using a second control chart with 0. The plotted chart may be optionally displayed to a user.

At block the control limits from block may be even further refined using a third control chart. For example the third control chart may utilize Western Electric tests and a set of custom tests over a region including a vintage date. A vintage date is intended to refer to a date at which the specification for the transformation technique was last selected or fitted parameterized.

At block exceptions may be identified in the set of residuals using a combination of the Western Electric tests and custom tests created using the third control chart. Such exceptions may be identified for dates that are for example greater than or equal to the vintage date.

At block one or more anomalies may be identified from the exceptions identified at block . An anomaly may be associated with a remedial action e.g. SELECT FIT GENERATE . Remedial actions may be prioritized according to a computational cost. For example SELECT may be prioritized above FIT while FIT may be prioritized above GENERATE. A computational cost may correspond to the computational requirements for performing the remedial action. For example reselecting a transformation technique specification may be computationally more extensive and thus more computationally costly than fitting a transformation technique specification. Similarly fitting a transformation technique specification may be computationally more extensive and thus more computationally costly than generating a set of output data points using the currently selected transformation technique specification. The prioritization scheme described above is illustrative in nature any suitable prioritization scheme may be utilized.

At block the one or more anomalies may be sorted according to a computation cost associated with corresponding remedial actions. In at least one example a most computational costly anomaly may be determined and retained. For example it may be the case that two anomalies are identified at block . The two anomalies may individually correspond to a SELECT remedial action and a GENERATE remedial action. Accordingly the anomalies may be sorted such that the anomaly corresponding to the SELECT remedial action is retained according to the prioritization scheme described above.

At block a transformation technique specification may be identified as requiring a remedial action. For example a list or other parameter may be updated to indicate that the transformation technique corresponding to the set of residuals may require the identified remedial action from block .

The flow diagram may begin at . At block a period loop variable i may be initialized to the value of 1. At block a number of counters e.g. Running Sum of the Absolute Residuals RSAR and Running Sum of the Residuals RSR may be initialized. A determination may be made at decision block as to whether i is equal to the last period in the set of residuals.

If i is not the last time period in the set of residuals at decision block the flow may proceed to block where the tracking signal may be computed for example as follows 

Where Fi represents the transformation forecast value in period i Ai represents an actual value e.g. in the time series data in period i and n represents the number of periods considered. At block or at any suitable time the computed tracking signal from block may be converted to units of standard deviation 1 MAD 0.798 standard deviations for later use in a control chart.

At decision block a determination may be made as to whether or not the absolute value of the tracking signal in MAD units abs TS MAD is greater than or equal to 4. If abs TS MAD is not greater than or equal to 4 then no bias has been detected in the transformation technique specification and the flow may proceed to block where i may be set to the next period in the set of residuals in order to be reevaluated at decision block .

If the abs TS MAD is determined to be greater than or equal to 4 at block then the flow may proceed to block where the residual data point may be flagged or otherwise identified as a tracking signal exception. Additionally period counters such as RSR and RSAR may be set to 0 at block . The flow may proceed to block where i may be set to the next period in the data set in order to be reevaluated at decision block .

If i is determined to be the last time period in the set of residuals at decision block the flow may proceed to block where SIGMA levels e.g. control limits for a tracking signal control chart may be set. For example sigma levels for a control chart may be initialized with an upper control limit of 3.192 4 MAD converted to standard deviation units and a lower control limit of 3.192 4 MAD converted to standard deviation units . At block a tracking signal may be plotted on a Shewhart control chart using the sigma control levels from block and a mean mu value of 0. At block one or more tests e.g. Western Electric tests and or custom tests may be applied over the entire region. At block tracking signal exceptions may be identified for dates occurring on or after the vintage date. One or more anomalies may be identified for each tracking signal exception in a similar manner as described in connection with .

In at least one example one or more remedial action lists may be initialized at block . For example a remedial action list corresponding to time series in need of transformation technique specification selection e.g. a SELECT list may be initialized. Similarly a remedial action list corresponding to time series associated with a transformation technique specification in need of fit parameterization e.g. a FIT list may be initialized. Further a remedial action list corresponding to time series associated with a transformation technique specification that needs to be executed to generate a new set of outputs e.g. a GENERATE list may be initialized. In one example the SELECT list may be initialized with indicators for all the time series. The FIT list and the GENERATE list may each be initialized to NULL e.g. an empty value . Thus at block the SELECT list may indicate that each time series requires a transformation technique specification to be selected.

The flow may proceed to block where a time series input data set may be created for each time series. For example data points for a time series may be included in a time series input data set for dates that occur after an end date. The end date may be utilized to structure the time series input data set. An end date may be used when for example causal independent variables are provided but actual values for a target forecast variable for future period is unknown.

The flow may proceed to decision block where SELECT FIT and GENERATE time series data sets may be created from the corresponding lists. Thus in the current example each time series may have SELECT time series data sets created.

The flow may proceed to block where a determination as to whether the SELECT time series set is empty. Continuing with the current example the SELECT set includes time series data sets for each time series thus the flow may proceed to block where a transformation technique specification may be selected for each time series in the SELECT set. In at least one example a predefined procedure for transformation technique specification selection may be utilized. For instance procedure that diagnose statistical characteristics of a time series to identify an appropriate transformation technique specification may be used. An example of one such procedure includes HPFDiagnose an algorithm included in SAS Forecast Server Procedures part of SAS Forecast Server . HPFDiagnose or similar procedures may consider numerous types of transformation technique specifications capable of being applied to each time series. HPFDiagnose or similar procedures may determine autoregressive and moving average orders detect outliers and select best input variables. The HPFDiagnose procedure results in output such as transformation technique specifications for multiple types of specifications and a selection list of transformation technique specifications. Such output may be used as input for execution with a selection procedure for example HPFEngine utilizing a task parameter SELECT in order to select a particular transformation technique specification for each time series.

Upon selection of a transformation technique specification for each time series the flow may proceed to block where various lists and variables may be updated. For example the revisit master set variables may be updated.

The flow may proceed to block where a determination as to whether or not the FIT set is empty. Given the ongoing example the FIT set may be determined to be empty and the flow may proceed to block where the GENERATE set may also be determined to be empty. The flow may proceed to block where output for the SELECT FIT and GENERATE sets may be appended to an output master file for example. The flow may proceed to block where i may be decremented to the next period and the flow may proceed back to block .

Continuing with the ongoing example a determination may be made at block that i is greater than the end date. Thus the flow may proceed to decision block where it may be determined that i is no longer equal to the start date. Given such a determination the flow may proceed to block where a vintage set including but not limited to unique vintage dates and vintage macro variables may be created. The flow may proceed to where a vintage loop variable j may be set to the first vintage date in the vintage set.

The flow may proceed to block where a determination may be made as to whether j is equal to the last vintage date in the vintage set. If j is not equal to the last vintage date in the vintage set the flow may proceed to block where a residual set processing may be performed using one or more control charts. Residual set processing performed at block may include either the process described above in connection with e.g. using a Shewhart control chart or the process described above in connection with e.g. using a converted or modified tracking signal with a Shewhart control chart . One or more anomalies may be identified in a set of residuals at block . Accordingly a remedial action for time series associated with the one or more anomalies may be determined.

The flow may proceed to block where the revisit master set may be updated with information indicating one or more times series for which remedial actions have been identified. The flow may proceed to block where the SELECT list the FIT list and the GENERATE list may be updated to indicate time series associated with transformation technique specifications that need to be selected fit parameterized or generated respectively.

The flow may proceed to block where j may be set to the next vintage date. The flow may then repeat block block block block and block until j equals the last vintage date in the vintage set. At such time the flow may proceed back to block where once again a time series input data set may be created for each time series data set.

The flow may proceed though decision block block block and block as described above. The process may proceed to block where a determination may be made as to whether the FIT set is empty. If the FIT set is not empty the flow may proceed to block where transformation technique specifications included in the FIT set may be fit. Fitting a transformation technique specification includes but is not limited to adjusting parameters and or variables associated with the transformation technique specification in order to produce a fitted transformation technique specification. A fitted transformation technique specification may produce a set of outputs that fall within an error threshold amount of a set of data points in a time series. A selection procedure for example HPFEngine utilizing a task parameter FIT may produce one or more fitted transformation technique specifications for a time series indicated in the FIT set. The HPFEngine procedure may select a particular fitted transformation technique specification for each time series indicated in the FIT set. Upon selection of a transformation technique specification for each time series the flow may proceed to block where various lists and variables may be updated. For example the revisit master set variables may be updated.

The flow may proceed to block where a determination may be made as to whether or not the GENERATE set is empty. If the GENERATE set is not empty the flow may proceed to block where a set of output data points may be generated using the currently selected transformation technique specification for a corresponding time series included in the GENERATE set. Upon generating the set of output data points the flow may proceed to block where various lists and variables may be updated. For example the revisit master set variables may be updated.

The flow may proceed through block and block as described above. The process may repeat in the same manner as described above until i equals the end date at block . When i equals the end date at block the process may end at block .

The flow above enables each time series to be individually monitored and custom remedial actions to be employed rather than a one size fits all manner that exists today in current techniques.

At block a plurality of outputs may be determined. For example a transformation technique may be applied to the time series data e.g. by transformation engine of to produce a plurality of outputs.

At block a set of residual values may be generated using the plurality of current data points and the plurality of output e.g. by the anomaly detection engine of . Each residual value in the set of residual values may indicate a difference between a current data point of the plurality of current data points and an output of the plurality of outputs.

At block a set of control limits may be determined e.g. by control engine of using a control chart e.g. a Shewhart control chart and the set of residual values determined at block . The set of control limits may be determined for example by using either or both processes described in connection with .

At block one or more anomalies of the set of residual values may be identified e.g. by the anomaly detection engine of . The identification of the one or more anomalies may be based on the set of control limits determined at block and a control chart.

At block a remedial action may be determined for the transformation technique e.g. by the remedial action engine of . As discussed above a remedial action may include but is not limited to actions that cause a transformation technique specification to be selected cause a transformation technique specification to be fit parameterized or cause a transformation technique specification to be applied to the time series to generate a plurality of outputs. The determined remedial action may be based on for example standard and or custom tests including but not limited to the Western Electric tests of the custom tests of the custom tests of or any suitable combination thereof.

At block the remedial action related to the transformation technique may be performed e.g. by the remedial action engine of . Thus a different transformation technique specification may be selected a current transformation technique specification may be fit parameterized or a transformation technique specification to be applied to the time series to generate a plurality of outputs.

Systems and methods according to some examples may include data transmissions conveyed via networks e.g. local area network wide area network Internet or combinations thereof etc. fiber optic medium carrier waves wireless networks etc. for communication with one or more data processing devices. The data transmissions can carry any or all of the data disclosed herein that is provided to or from a device.

Additionally the methods and systems described herein may be implemented on many different types of processing devices by program code comprising program instructions that are executable by the device processing subsystem. The software program instructions may include source code object code machine code or any other stored data that is operable to cause a processing system to perform the methods and operations described herein. Other implementations may also be used however such as firmware or even appropriately designed hardware configured to carry out the methods and systems described herein.

The data e.g. associations mappings data input data output intermediate data results final data results etc. may be stored and implemented in one or more different types of computer implemented data stores such as different types of storage devices and programming constructs e.g. RAM ROM Flash memory removable memory flat files temporary memory databases programming data structures programming variables IF THEN or similar type statement constructs etc. . It is noted that data structures may describe formats for use in organizing and storing data in databases programs memory or other computer readable media for use by a computer program.

A computer program also known as a program software software application script or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules subprograms or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network. The processes and logic flows and figures described and shown in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.

Generally a computer can also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks . However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a tablet a mobile viewing device a mobile audio player a Global Positioning System GPS receiver to name just a few. Computer readable media suitable for storing computer program instructions and data include all forms of nonvolatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks . The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

The computer components software modules functions data stores and data structures described herein may be connected directly or indirectly to each other in order to allow the flow of data needed for their operations. It is also noted that a module or processor includes but is not limited to a unit of code that performs a software operation and can be implemented for example as a subroutine unit of code or as a software function unit of code or as an object as in an object oriented paradigm or as an applet or in a computer script language or as another type of computer code. The software components or functionality may be located on a single computer or distributed across multiple computers depending upon the situation at hand.

The computer may include a programmable machine that performs high speed processing of numbers as well as of text graphics symbols and sound. The computer can process generate or transform data. The computer includes a central processing unit that interprets and executes instructions input devices such as a keyboard keypad or a mouse through which data and commands enter the computer memory that enables the computer to store programs and data and output devices such as printers and display screens that show the results after the computer has processed generated or transformed data.

Implementations of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Implementations of the subject matter described in this specification can be implemented as one or more computer program products i.e. one or more modules of computer program instructions encoded on a computer readable medium for execution by or to control the operation of data processing apparatus . The computer readable medium can be a machine readable storage device a machine readable storage substrate a memory device a composition of matter effecting a machine readable propagated processed communication or a combination of one or more of them. The term data processing apparatus encompasses all apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a graphical system a database management system an operating system or a combination of one or more of them .

While this disclosure may contain many specifics these should not be construed as limitations on the scope of what may be claimed but rather as descriptions of features specific to particular implementations. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be utilized. Moreover the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations and it should be understood that the described program components and systems can generally be integrated together in a single software or hardware product or packaged into multiple software or hardware products.

Some systems may use Hadoop an open source framework for storing and analyzing big data in a distributed computing environment. Some systems may use cloud computing which can enable ubiquitous convenient on demand network access to a shared pool of configurable computing resources e.g. networks servers storage applications and services that can be rapidly provisioned and released with minimal management effort or service provider interaction. Some grid systems may be implemented as a multi node Hadoop cluster as understood by a person of skill in the art. Apache Hadoop is an open source software framework for distributed computing. Some systems may use the SAS LASR Analytic Server in order to deliver statistical modeling and machine learning capabilities in a highly interactive programming environment which may enable multiple users to concurrently manage data transform variables perform exploratory analysis build and compare models and score. Some systems may use SAS In Memory Statistics for Hadoop to read big data once and analyze it several times by persisting it in memory for the entire session.

It should be understood that as used in the description herein and throughout the claims that follow the meaning of a an and the includes plural reference unless the context clearly dictates otherwise. Also as used in the description herein and throughout the claims that follow the meaning of in includes in and on unless the context clearly dictates otherwise. Finally as used in the description herein and throughout the claims that follow the meanings of and and or include both the conjunctive and disjunctive and may be used interchangeably unless the context expressly dictates otherwise the phrase exclusive or may be used to indicate situations where only the disjunctive meaning may apply.

