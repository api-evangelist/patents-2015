---

title: Documenting interactive graphical designs
abstract: Examples of systems and methods for documenting an interactive graphical design address the need to document interactive graphical designs automatically and efficiently without requiring substantial manual time and effort. These examples are operable to automatically generate documentation based on data collected from an interaction session of a user with the interactive graphical design without any additional user input. The documentation is populated automatically with descriptive text and images of the interactive graphical design. Some examples also provide tools for editing the documentation. Examples of these tools include tools for removing portions of the documentation on the basis of events that occurred during the interaction session, and tools for customizing the content and appearance of the documentation. In addition, some examples are operable to update the documentation automatically to reflect modifications to the interactive graphical design.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09459780&OS=09459780&RS=09459780
owner: Axure Software Solutions, Inc.
number: 09459780
owner_city: San Diego
owner_country: US
publication_date: 20150429
---
Throughout the software development process before and after the software reaches production it is necessary to create documentation to communicate the use administration and interfaces of the software with the development team stakeholders and end users. Manual creation of software documentation is difficult time consuming and expensive. Automated software documentation systems typically execute test scripts to run software applications through particular operational scenarios. One exemplary automated documentation system produces natural language textual descriptions of graphical user interface GUI object activity during the script based execution of the software the textual descriptions then are combined with screenshots of the graphical user interface that are captured manually during playback of the script to produce documentation for the software. Another exemplary automated documentation system updates existing software documentation using test scripts that include tags at locations in the test script that trigger the capture of respective screenshots of the software GUI at particular times during the execution of the test script the screenshots then are incorporated into the documentation at designated locations that correlate with the tags in the test script.

In one embodiment a computer implemented method is provided. Each step of the method is conducted using a processor and a memory. The method comprises the steps of recording a sequence of events occurring in the interaction session during an interaction session of a user with an interactive graphical design. The method also comprises automatically generating a first set of images of the interactive graphical design. Each of the images in the first set of images represents a state of the interactive graphical design following a respective one of the events. The method also comprises producing documentation for the interactive graphical design comprising an arrangement of descriptions of respective ones of the events ordered according to the recorded event sequence and respective ones of the images from the first set. The method also comprises automatically creating a second set of images of a modified version of the interactive graphical design based on the recording. The method also comprises automatically updating respective ones of the images from the first set with corresponding ones of the images from the second set to provide updated documentation in the documentation for the interactive graphical design.

In another embodiment at least one non transitory computer readable medium having computer readable program code embodied therein is provided. The computer readable program code when executed by computer apparatus causes the computer apparatus to perform operations. The operations include recording a sequence of events occurring in the interaction session during an interaction session of a user with an interactive graphical design. The operations also include automatically generating a first set of images of the interactive graphical design. Each of the images in the first set of images represents a state of the interactive graphical design following a respective one of the events. The operations also include producing documentation for the interactive graphical design comprising an arrangement of descriptions of respective ones of the events ordered according to the recorded event sequence and respective ones of the images from the first set. The operations also include automatically creating a second set of images of a modified version of the interactive graphical design based on the recording. The operations also include automatically updating respective ones of the images from the first set with corresponding ones of the images from the second set to provide updated documentation in the documentation for the interactive graphical design.

In the following description like reference numbers are used to identify like elements. Furthermore the drawings are intended to illustrate major features of exemplary embodiments in a diagrammatic manner. The drawings are not intended to depict every feature of actual embodiments nor relative dimensions of the depicted elements and are not drawn to scale.

The examples that are described herein provide improved systems and methods for documenting an interactive graphical design by solving practical problems that have arisen as a result of the need to document interactive graphical designs automatically and efficiently without requiring substantial manual time and effort.

These systems and methods are operable to automatically generate documentation based on data collected from an interaction session of a user with the interactive graphical design without any additional user input. The documentation is populated automatically with descriptive text and images of the interactive graphical design without requiring text that has been pre scripted by a script designer or screen capture triggering tags embedded in test scripts. Some examples also provide tools for editing the documentation. Examples of these tools include tools for removing portions of the documentation on the basis of events that occurred during the interaction session and tools for customizing the content and appearance of the documentation. In addition some examples are operable to update the documentation automatically to reflect modifications to the interactive graphical design.

In specific examples these systems and methods include improved special purpose computer apparatus programmed to automatically document interactive graphical designs based on live interaction sessions of users with the interactive graphical designs and to automatically update the documentation to reflect modifications to the interactive graphical designs.

The product web page shown in includes passive elements and interactive elements. The passive elements include a product image a product name a product price and a shopping cart summary . The interactive elements include a product quantity input box an Add to Cart button and a shopping cart icon . The quantity input box allows the user to enter a desired quantity of the product to purchase. Selection of the Add to Cart Button causes the web browser to instruct the web site to add the indicated quantity of the product to the user s shopping cart and in response the web site sends the web browser the shopping cart web page to display. Selection of the shopping cart icon causes the web browser to report the selection to the web site and in response the web site sends the web browser the shopping cart web page to display.

The shopping cart web page shown in also includes passive elements and interactive elements. The passive elements include a purchase summary table header a product image a product identifier a product price a sub total purchase amount a total purchase amount and a shopping cart quantity summary . The active elements include a Continue Shopping button a product link a quantity input box a remove product link an Update Cart link and a Checkout button . Selection of the Continue Shopping button causes the web browser to report the selection to the web site and in response the web site sends the web browser a designated shopping landing page to display. Selection of the product link causes the web browser to report the selection to the web site and in response the web site sends the web browser the web page for the product to display. The quantity input box allows the user to modify the quantity of the product to purchase. Selection of the remove product link causes the web browser to instruct the web site to remove the product from the user s shopping cart and update the shopping cart page . Selection of the Update Cart link causes the web browser to report the selection to the web site and in response the web site sends the web browser an updated shopping cart page to display. Selection of the Checkout button causes the web browser to report the selection to the web site and in response the web site sends the web browser a checkout web page not shown to display.

During a user interaction session with the web site the user may provide a variety of user inputs that manipulate the computer system to perform a series of user interface actions with respect to the web pages retrieved from the website. Examples of such user inputs include activating a link e.g. by mouse over or selection selecting a button moving a mouse cursor over a display area moving or resizing a user interface window inputting text via a keyboard and speaking voice commands into a microphone. The user s computer system is configured to detect particular ones of the user inputs and certain occurrences e.g. changes in the state of the GUI as events. In some examples the user s computer system includes software routines referred to as event handlers that are attached to applications to monitor events and perform actions in response to respective types of events. Examples of such actions include providing information e.g. mouse and keyboard information or design variable values to the attached applications shifting design focus hiding elements showing elements moving elements scrolling a window linking to a different page or chapter of a design and selecting menu elements.

In some examples the user s computer system is configured to record a sequence of the user inputs received during the user interaction session with the web site. For each user input the recorded information may include a timestamp an identifier of the user input and other data associated with the user input. In some examples the user s computer system executes a user interface monitor to record the user s inputs. The user interface monitor may be a component of the web browser or it may be a separate application e.g. a JavaScript application that is executed by the web browser. In some examples the user s computer system also records information regarding the event handlers that respond to the events that are detected during the user interaction session. Examples of the types of event handler information that may be recorded for each activated event handler include an identifier of the event handler and the action performed by the event handler. In some examples the recorded information includes data that defines a sequence of the current states of the interface over time such as current variable values e.g. values input into fields window size adaptive view information and menu selections. In addition to user actions some examples also record network transactions between the user s computer system and the web site e.g. requests by the user s computer system and responses from the web site .

As explained above and described in detail below the examples that are disclosed herein are able to generate documentation based on data collected from an interaction session of a user with the interactive graphical design without any additional user input. The documentation may be generated directly from the live interaction session or from a recording of the live interaction session. These examples automatically populate the documentation with descriptive text and images of the interactive graphical design without requiring text that has been pre scripted by a script designer or screen capture triggering tags embedded in test scripts.

Each section also includes a respective image of the interactive graphical design following the respective event. In the illustrated example the image in the first section of the documentation shows the interactive graphical design in a state resulting from the occurrence the first event in the recording . In the illustrated example the resulting state corresponds to a particular state of the product web page . Similarly the image in the second section of the documentation shows the interactive graphical design in the state resulting from the occurrence of the second event in the recording . In the illustrated example the resulting state corresponds to a particular state of the shopping cart web page .

As explained in detail below the images may be screenshots of the interactive graphical design that are captured during a live interaction session of the user with the interactive graphical design. Alternatively the images may be images of the interactive graphical design that are generated during a playback of a recording of the live interaction session with respect to the interactive graphical design. In this regard the sequence of events in the recording is input into the interactive graphical design to run the interactive graphical design through a corresponding sequence of interface states that can be captured as images . In some examples the images are displayed on a display device and captured as screenshots. In other examples a rendering engine may generate the images directly from a playback of a recording of the live interaction session and the interactive graphical design without having to retrieve the images from image buffers storing display versions of the product and shopping cart web pages .

In accordance with the method of a sequence of events occurring in an interaction session of a user with an interactive graphical design is recorded block . A first set of images of the interactive graphical design is generated automatically where each of the images in the first set of images represents a state of the interactive graphical design following a respective one of the events block . Documentation for the interactive graphical design is produced block . The documentation includes an arrangement of descriptions of respective ones of the events ordered according to the recorded event sequence and respective ones of the images from the first set. A second set of images of a modified version of the interactive graphical design is automatically created based on the recording block . The modified version of the interactive graphical design can be specified by a designer using a design tool to improve or otherwise modify the design that was used to generate the recording. In the documentation for the interactive graphical design respective ones of the images from the first set are automatically updated with corresponding ones of the images from the second set to provide updated documentation block .

In general the documentation may be stored in a wide variety of different formats including portable document format rich text document format RTF HTML XML Extensible Markup Language or other markup languages.

In some examples the descriptions of respective ones of the events also are recorded during the interaction session. In some examples descriptions of actions following respective ones of the events are recorded and the production of the documentation includes incorporating descriptions of respective ones of the actions in the documentation. In some examples data may be incorporated into the documentation from sources other than the recording. For example in some cases descriptions of the actions are added to the documentation based on data stored in the design. In some of these examples the event handlers are associated with descriptions of the actions they perform and the documentation system extracts the action descriptions from the design data as the documentation is being constructed.

In some examples the first set of images is generated automatically during the interaction session. In other examples the first set of images is generated during a playback of the recorded interaction session. In some examples a respective image of the interactive graphical design is automatically generated for each recorded event in the interaction session which alters the appearance of the interactive graphical design.

In some examples the second set of images is created automatically while the recording is being played with respect to the modified version of the interactive graphical design.

In some examples the production of the documentation involves identifying which of the images to exclude from the documentation based on user input and automatically modifying the layout to produce the documentation without the identified images. In some of these examples the identification process includes determining which of the events to exclude from the documentation based on user input and automatically identifying ones of the images corresponding to the determined events as the images to exclude from the documentation.

In some examples the production of the documentation involves automatically creating a presentation of descriptions of the events and the images in the layout receiving user input specifying one or more configuration options and modifying the presentation according to the one or more specified configuration options to produce the documentation for the interactive graphical design.

In some of these examples the process of updating the images to reflect the modified version of the interactive graphical design involves applying at least one of the one or more specified configuration options to the updated documentation. At least one of the specified configuration options may be a modification that is applied to a particular one of the images e.g. a transformation of the particular image and the process of updating that images in the documentation involves applying the modification with respect to the updated version of the particular image.

Some examples provide a user interface showing a graphical representation of the documentation a list comprising respective ones of the event descriptions and user selectable configuration options for modifying the documentation. In some of these examples the user selectable configuration options include controls for designating respective ones of the event descriptions to exclude from the documentation where the event description designated by a particular control is removed from the documentation in response to user selection of the particular control.

In some examples each description in the arrangement of descriptions of respective ones of the events in the documentation is generated automatically based on at least one user input to a design tool that is used to generate the interactive graphical design.

Examples of systems for generating documentation for interactive graphical designs are described below.

Some examples provide tools for editing the documentation including tools for removing portions of the documentation on the basis of events that occurred during the interaction session as well as tools for customizing the content and appearance of the documentation .

The structural editor pane includes an event section that shows an editable list of recorded events and optionally event handler actions that are ordered by timestamp. The documentation editing interface provides tools for removing portions of the documentation on the basis of events that occurred during the interaction session. In some example for each event listed in the structural editor pane the documentation editing interface provides a respective control that allows the user to indicate whether or not to include the corresponding section in the documentation . In the illustrated example a checkbox appears when the user manipulates an input device to mouse over a region of the structural editor panel that is adjacent to a particular one of the listed events. In response to the user checking the checkbox the color of the textual description of the event changes e.g. from black to red to indicate that it has been removed from the documentation and the corresponding section in the documentation is deleted. In the illustrated example the checkbox adjacent to the Click Check Out event is checked. This is interpreted by the documentation generator as an instruction to exclude the section corresponding to the Click Check Out event and any associated event handler actions e.g. Open Page from the documentation. The user may uncheck the checkbox to reincorporate the removed section back into the documentation .

The graphical tools pane includes tools for customizing the content and appearance of the documentation. The illustrated example shows a set of image editing tools including a pencil tool an eraser tool a paint bucket tool a select tool an eyedropper tool a text tool a line tool a rectangle tool a stamp tool a freeform pen tool an ellipse tool and a highlighter tool. The user may select these tools to overlay graphical customizations on the pages of the documentation that are shown in the documentation pane .

The structural edits and graphical customizations that are made by the user are stored in computer readable memory in association with the documentation . These modifications to the documentation may be used in rendering the documentation and in updating the documentation to reflect changes to the interactive graphical design.

As explained above some examples are operable to update the documentation automatically to reflect modifications to the interactive graphical design without changing the usage scenario embodied in the recording of the user s live interaction session with the original interactive graphical design. Examples of the types of modifications that might be made to the interactive graphical design include one or more of removal of features addition of new features error corrections reconfigurations and other modifications.

Updated documentation is produced from the original documentation the new GUI images and the user configurations associated with the original documentation . In some examples the documentation generator identifies sections in the original documentation . For each section the documentation generator identifies one or more of the new GUI images and user configurations that correspond to the section and automatically replaces any images in the original documentation with the one or more identified new GUI images . The documentation generator also automatically applies the identified user configurations. The user configurations can include any information applied in structural editor regarding the content of the documentation that were applied prior to the modification of the design. As long as the design is not modified in a manner that removes an event or event handler action from the recording the user configurations will generally still apply to the documentation when it is altered for the modified design. The user configurations can also include changes made to the screenshots using the graphical tools . Since the additions to the screenshots on a different layer of the documentation they can be overlain on the modified versions of the screenshots and still serve the purpose for which they were originally intended. Slight changes to these user configurations may be required to align them with the screenshots generated for the modified design.

Any of the methods described herein can be conducted through the use of a computer system as shown in . For example the design environment could be provided by a processing system acting in tandem with a memory . A user would be able to access the design environment through the use of a routing system and a user interface system . Any method steps involving providing or accepting things to and from a user can be conducted using interface system . Any method steps involving executing an action can be conducted using processing system alone or in combination with memory . is only an illustrative computer system that is amenable to operation in accordance with embodiments of the present invention and variant computer system topologies may be used in its stead. Nothing in this description should limit the processor of processing system to a single processor as the function of this block can be accomplished by multiple physical processors located either on a single workstation or server or distributed through a network. It is not essential for memory to be physically distinguishable from processing system as they are merely illustrated as separate blocks for purposes of invoking common conceptions of how computing systems operate. Routing system could be the internal routing system of a single work station a LAN a WAN a wired or wireless network the Internet or any other system capable of routing signals. User interface system could be a work station a computer a mobile phone or other mobile device or any computing device or group of computing devices capable of receiving inputs from a single user or group of users. should also not be taken to indicate that the invention can only involve design environments or design programs that may only be accessed by one user as there could be multiple users and that group of multiple users could access the design environment using any number of routing systems . Those users could also access the design environment simultaneously.

While the specification has been described in detail with respect to specific embodiments of the invention other embodiments are within the scope of the claims. It will be appreciated that those skilled in the art upon attaining an understanding of the foregoing may readily conceive of alterations to variations of and equivalents to these embodiments. These and other modifications and variations to the present invention may be practiced by those skilled in the art without departing from the spirit and scope of the present invention which is more particularly set forth in the appended claims.

