---

title: Consultation among feedback instances
abstract: Concepts and technologies disclosed herein are directed to consultation among feedback instances. According to one aspect, a system can receive a feedback instance consultation request for a consultation among an original feedback instance and a target feedback instance. The target feedback instance can be consulted with by the original feedback instance to enable the original feedback instance to cure a deficiency. The system can examine the feedback instance consultation request to determine if a match exists with an application programming interface associated with a target feedback instance model upon which the target feedback instance is based. If examination of the feedback instance consultation request determines that a match exists, the system can update the target feedback instance model with an intercommunication plan by which the consultation can occur. The system also can update an original feedback instance model upon which the original feedback instance is based.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09524200&OS=09524200&RS=09524200
owner: AT&T Intellectual Property I, L.P.
number: 09524200
owner_city: Atlanta
owner_country: US
publication_date: 20150331
---
User defined network cloud UDNC strategic objectives include exploiting the economic advantages of running network functions on general purpose hardware platforms using cloud technology to manage resources elastically based upon business and technical policies. Services can be designed created deployed and managed in near real time rather than requiring software development cycles to create or modify services. Enhanced control orchestration management and policy ECOMP is the framework that provides service creation and operational management of UDNC. ECOMP enables significant reductions in the time and cost required to develop deploy operate and retire products services and networks.

Within ECOMP frameworks policy has emerged as the brain trust that enables dynamic real time decision making processes. Policy plays a key role in the feedback instance domain. A feedback instance typically involves at least two actors including policy as one of the actors but in many cases a feedback instance involves more than two actors. Other common actors might include orchestrators controllers network functions analytic modules combinations thereof and the like. In the current market feedback instances are constructed statically to identify and or to solve certain known anomalies. This approach will not scale up in the highly virtualized real time and dynamic environment of UDNC.

Concepts and technologies disclosed herein are directed to consultation among feedback instances. According to one aspect of the concepts and technologies disclosed herein a system can receive a feedback instance consultation request for a consultation among an original feedback instance and a target feedback instance. The target feedback instance is to be consulted with by the original feedback instance to enable the original feedback instance to cure a deficiency. The system can examine the feedback instance consultation request to determine if a match exists with an application programming interface API associated with a target feedback instance model upon which the target feedback instance is based. If examination of the feedback instance consultation request causes the system to determine that a match exists with the API associated with the target feedback instance model upon which the target feedback instance is based the system can update an original feedback instance model upon which the original feedback instance is based with an intercommunication plan by which the consultation among the original feedback instance and the target feedback instance can occur. If examination of the feedback instance consultation request causes the system to determine that a match exists with the API associated with the target feedback instance model upon which the target feedback instance is based the system can update the target feedback instance model upon which the target feedback instance is based with the intercommunication plan by which the consultation among the original feedback instance and the target feedback instance can occur.

In some embodiments the system can receive the feedback instance consultation directly from the original feedback instance. In some other embodiments the system can receive the feedback instance consultation request from a policy engine.

In some embodiments if examination of the feedback instance consultation request causes the system to determine that a match does not exist with the API associated with the target feedback instance model upon which the target feedback instance is based the system can map the feedback instance consultation request to an objective of the target feedback instance model. The objective can be utilized by the target feedback instance model to cure the deficiency of the original feedback instance. The system also can map the consultation request to an event response pair. The event response pair can include an event to which the target feedback instance model subscribes and an event response to which the original feedback instance model should subscribe to interact with the target feedback instance model. The system also can update the original feedback instance model upon which the original feedback instance is based with the intercommunication plan by which the consultation among the original feedback instance and the target feedback instance can occur. The system also can update the target feedback instance model upon which the target feedback instance is based with the intercommunication plan by which the consultation among the original feedback instance and the target feedback instance can occur.

In some embodiments the system can generate a feedback instance consultation realization request and can send the feedback instance consultation realization request to a feedback instance orchestrator and controller FIOC system to direct the FIOC system to realize a communication method between the original feedback instance model and the target feedback instance model. The communication method between the original feedback instance model and the target feedback instance model can enable a consultation communications link between the original feedback instance and the target feedback instance in runtime. The communication method between the original feedback instance model and the target feedback instance model can enhance the consultation communications link to connect to a further target feedback instance model to be utilized by the original feedback instance model to cure the deficiency.

According to another aspect of the concepts and technologies disclosed herein a computer readable storage medium can include computer executable instructions. The computer executable instructions can be executed by a processing unit of a system to cause the system to perform operations such as described above.

According to another aspect of the concepts and technologies disclosed herein a system can receive a feedback instance consultation realization request to realize a communication method between an original feedback instance model and a target feedback instance model. The system can realize the communication method between the original feedback instance model and the target feedback instance model to allow an original feedback that is based upon the original feedback instance model to consult with a target feedback instance that is based upon the target feedback instance in runtime to cure a deficiency of the original feedback instance.

In some embodiments the system can realize the communication at least in part by retrieving the original feedback instance model and the target feedback instance model from an active feedback instance model portion of a feedback instance model template repository. The original feedback instance model and the target feedback instance model in some embodiments have been updated by a further system to include an intercommunication plan by which a consultation among the original feedback instance and the target feedback instance can occur to enable the original feedback instance to cure a deficiency.

In some embodiments the communication method can include enabling in accordance with the intercommunication plan a consultation communications link between the original feedback instance and the target feedback instance in runtime. In some embodiments the communication method can further include enhancing the consultation communications link to connect to a further target feedback instance model to be utilized by the original feedback instance model to cure the deficiency.

In some embodiments the deficiency in the original feedback instance can include a deficiency in a number of actors a type of actor an inactivity of a particular actor a number of operational parameters a type of operational parameter an analytic application another attribute or a combination thereof.

It should be appreciated that the above described subject matter may be implemented as a computer controlled apparatus a computer process a computing system or as an article of manufacture such as a computer readable storage medium. These and various other features will be apparent from a reading of the following Detailed Description and a review of the associated drawings.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended that this Summary be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

Currently feedback instances are statically established and provisioned in different layers of a compute storage network and management infrastructure. For each feedback instance provisioned in the layered infrastructure data are collected anomalies are analyzed and actionable tasks are derived by a policy engine for enforcement components to execute. When the infrastructure becomes more complex such as with hundreds of thousands of feedback instances running to track down problems and anomalies detected in both the virtual and physical world drilling down and verifying the true root cause of these problems and anomalies based upon advanced policy constructs will be greatly increased.

Concepts and technologies disclosed herein are directed to the dynamic creation and management of ephemeral coordinated feedback instances to address the aforementioned problems and others that will become apparent after reading this disclosure. According to embodiments of the concepts and technologies disclosed herein a new feedback instance can be created automatically or semi automatically when a need is identified. A feedback instance model can be established based upon model templates and policies by a feedback instance resolver and creator entity. The objective s of the model can be identified based upon one or more requests. The target actors can be identified input attributes can be collected and analytic applications can be identified or created. The feedback instance model can be stored in a repository for later use. A feedback instance can be instantiated based upon the feedback instance model to be handled by another entity referred to herein as a feedback instance orchestrator and controller FIOC . The FIOC entity can retrieve the feedback instance model from the repository implement the model verify the feedback instance model result and activate a new feedback instance based upon the feedback instance model in production.

Other concepts and technologies disclosed herein are directed to policy based modification of existing feedback instances. In accordance with one aspect disclosed herein a feedback instance change and upgrade resolver FICUR entity can modify feedback instance models based upon extensibility of one or more policies. More particularly the FICUR entity can examine an original objective of a feedback instance model and can compare the original objective to a change upgrade request. The original objective can be extended based upon one or more model extensibility policies to specify a modified objective. Additional attributes can be added to the feedback instance model based upon the modified objective. The realization of the modified feedback instance model can be handled by another entity referred to herein as a feedback instance orchestrator and controller FIOC . The FIOC entity can retrieve the modified feedback instance model that the FICUR entity modified and can implement the modified portion of the modified feedback instance model to an existing feedback instance in production.

Other concepts and technologies disclosed herein are directed to the escalation of feedback instances. In accordance with one aspect disclosed herein a policy driven feedback instance escalation resolver FIER entity can enable a dynamic method of escalating from an original feedback instance to a different feedback instance in the same domain or across different domains. The FIER can refine the objective of the original feedback instance. Based on the refined objective the FIER can search a plurality of active and non active feedback interface models to determine one or more possible candidates. The FIER can then apply a distance calculation to obtain the highest score candidate. A model identifier is obtained from the highest score candidate. Realization of the feedback instance escalation can be handled by the FIOC. The FIOC can retrieve the model using the model identifier received from FIER from a model repository. If the feedback instance is in a non active state the FIER can re activate the model first. The FIER can then associate an escalation plan to the escalated active model in runtime.

Other concepts and technologies disclosed herein are directed to consultation among feedback instances. In accordance with one aspect disclosed herein a feedback instance consultation and interaction resolver FICIR entity can enable a dynamic way for a feedback instance to issue a consultation request to another feedback instance in the same domain or across different domain s . The FICIR entity can attempt to map the consultation request to an available application programming interface API published by one or more feedback instances. If an available API is found the FICIR entity can record a method of API invocation in an active feedback instance storage in association with a requesting feedback instance model. If no available API is found the FICIR entity can map the consultation request to a closest match to a target feedback instance objective. Once matched the FICIR entity can map the consultation request to an event type that the target feedback instance already supports. The FICIR entity can retrieve an event response that the target feedback instance publishes. An interaction mechanism can be recorded back to both the requesting feedback instance and the target feedback instance in the active feedback instance store. Realization of the feedback instance intercommunication can be handled by the FIOC entity. The FIOC entity can receive one or more model identifiers from the FICIR. The FIOC can use the model identifier s to retrieve the corresponding feedback instance model s from a model repository. The FIOC can enable upgrade an intercommunication path between the requesting feedback instance and the target feedback instance.

Other concepts and technologies disclosed herein are directed to multiple feedback instance inter coordination to determine optimal actions. In accordance with one aspect disclosed herein a feedback instances coordination and optimization resolver FICOR entity can receive events from a group of feedback instances. The FICOR can leverage policies to develop a coordinated optimization plan to optimize actions performed by the group of feedback instances. Realization of the coordinated optimization plan can be handled by the FIOC. The FIOC entity can interact with all participating feedback instances in the group and can execute the coordinated optimization plan to optimize actions performed by the group of feedback instances.

Other concepts and technologies disclosed herein are directed to modes of policy participation for feedback instances. A mode can represent a degree or level of guidance constraints and or interactions provided by policy. Alternatively or more generally a mode can reflect different policy guidance constraints and or interactions. In accordance with one aspect disclosed herein a feedback instance can be adjusted and executed at an optimized policy participation level mode PPLM based upon current feedback instance conditions. Explicit involvement of policy can be automatically or manually adjusted to a suitable mode based upon data associated with traffic conditions computing resource conditions network resource conditions energy conditions priority consideration or a combination thereof.

While the subject matter described herein may be presented at times in the general context of program modules that execute in conjunction with the execution of an operating system and application programs on a computer system those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally program modules include routines programs components data structures computer executable instructions and or other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the subject matter described herein may be practiced with other computer systems including hand held devices mobile devices wireless devices multiprocessor systems distributed computing systems microprocessor based or programmable consumer electronics minicomputers mainframe computers routers switches other computing devices described herein and the like.

Turning now to a block diagram illustrating aspects of a feedback instance architecture will be described according to an illustrative embodiment. A feedback instance as used herein is an intentional directed feedback loop that can be utilized to effect at least in part one or more policies in a cloud computing environment. A feedback instance can include one or more targets one or more objectives and one or more inputs. A feedback instance can optionally include a duration a state a history or a combination thereof. A target can include one or more actors to be influenced by a feedback instance. An actor can include one or more components of the feedback instance architecture one or more existing feedback instances one or more orchestrators one or more controllers one or more network functions traditional routers traditional switches traditional firewalls servers computing devices storage devices one or more analytic modules one or more virtual functions e.g. virtual network functions virtual system functions and or virtual application functions and other components not shown and combinations thereof. An actor alternatively can include a scope of orchestration that includes operations performed by one or more components of the feedback instance architecture one or more existing feedback instances one or more orchestrators one or more controllers one or more network functions one or more analytic modules and or other components of a cloud computing environment. An objective can include one or more goals to be achieved by a feedback instance along with any pertinent definitions and scopes to meet the goal s . An input can include any data to be utilized by a feedback instance to at least partially achieve an objective. A duration can include a lifespan of a feedback instance a time to live TTL of a feedback instance or other similar attributes. A state can include active dormant and reserved states. It is contemplated that other states can be defined to accommodate other scenarios. A history can include when a feedback instance was used.

The illustrated feedback instance architecture includes one or more policy requestors a policy engine PE a policy repository one or more policy enforcement points a feedback instance model repository one or more other repositories a feedback instance resolver and creator FIRC a feedback instance change and upgrade resolver FICUR a feedback instance escalation resolver FIER a feedback instance consultation and interaction resolver FICIR a feedback instance coordination and optimization resolver FICOR a feedback instance mode operation monitor and selector FIOM FIMOS a feedback instance orchestrator and controller FIOC and one or more feedback instances A N collectively feedback instances . Each of these components and others will be described in detail below. While connections are shown between some of the components illustrated in it should be understood that some none or all of the components illustrated in can be configured to interact with one another to carry out various operations described herein. Thus it should be understood that and the following description are intended to provide a general understanding of a suitable environment in which various aspects of embodiments can be implemented and should not be construed as being limiting in any way.

The policy requestor s can include any entity that can utilize one or more policies. In some embodiments the policy requestor includes a component of the feedback instance architecture . In some other embodiments the policy requestor includes an activated feedback instance. The policy requestor in other embodiments includes a customer a service provider or other human or non human entity. The policy requestor s can generate one or more policy requests directed to the PE . The policy request s can be generated automatically by the policy requestor s semi automatically by the policy requestor s along with input received from one or more external sources such as one or more human operators or manually in response to input received exclusively from one or more human operators.

The PE can receive data associated with one or more events illustrated as event data data associated with one or more operational inquiries illustrated as operational inquiry data and or data associated with an active monitoring process illustrated as active monitoring data . The policy requestor s can communicate with the PE to retrieve at least a portion of the event data the operational inquiry data the active monitoring data or some combination thereof. In some embodiments the policy requestor s can subscribe to at least a portion of the event data the operational inquiry data the active monitoring data or some combination thereof. The policy requestor s can subscribe directly to the component that is the source of at least a portion of the event data the operational inquiry data the active monitoring data or some combination thereof.

The PE can receive the policy request s from the policy requestor s and can determine through a policy decision process whether to activate one or more existing policies such as one or more policies A N collectively policies stored in the policy repository . If the PE determines that at least one of the policies in the policy repository should be activated in response to the policy request s the PE can retrieve at least one of the policies from the policy repository and can instruct the policy enforcement point s to enforce at least one of the policies . The policy enforcement point s can be or can include one or more orchestrators controllers application servers other servers one or more of the feedback instances A N combinations thereof and the like. If however the PE determines that none of the policies in the policy repository should be activated in response to the policy request s the PE can determine that a feedback instance should be utilized at least in part to satisfy the policy request s . The PE can communicate with the FIRC the FICUR the FIER the FICIR the FICOR the FIOM FIMOS the FIOC or some combination thereof to utilize at least in part one or more of the feedback instances and or create one or more new feedback instances to satisfy the policy request s .

The PE can communicate with the FIRC . The FIRC can create one or more new feedback instance models for root cause identification of problems and policy optimization purposes. In some embodiments the FIRC can create one or more new feedback instance models which might be based at least in part upon one or more model templates stored in the feedback instance model repository or might be generated without any model template. The FIRC can create the new feedback instance model s in response to a request received from the PE . The FIRC can identify one or more intentions objectives for the new feedback instance model. The FIRC can identify one or more actors to be utilized by the new feedback instance model. The FIRC can identify one or more input attributes to be collected by the new feedback instance model. The FIRC can identify one or more applications that should be utilized by the new feedback instance model. The FIRC also can generate a feedback instance model identifier and can associate the feedback instance model identifier with the new feedback instance model. The FIRC can store the new feedback instance model and the feedback instance model identifier in a non active feedback instance model storage of the feedback instance model repository . Realization of feedback instance models can be handled by the FIOC . The FIOC can retrieve the new feedback instance model created by the FIRC implement the new feedback instance model verify that the new feedback instance model creates the appropriate model results and can activate one or more new feedback instances in production based upon the new feedback instance model.

The PE can communicate with the FICUR . The FICUR can modify the scope of one or more existing feedback instance models for root cause identification of problems and policy optimization purposes. The FICUR can modify e.g. change and or upgrade one or more existing feedback instance models stored in the feedback instance model repository based upon one or more model extensibility policies such as one or more of the policies stored in the policy repository . The FICUR can examine an original intention objective of one or more existing feedback instance models and compare the original intention objective to a modification request received from the PE . The FICUR can extend the original intention objective of one or more existing feedback instance models based upon one or more model extensibility policies. The FICUR can add one or more attributed based upon the modified extended original intention objective. The FICUR can utilize the same feedback instance model identifier as the original feedback instance model prior to modification. Realization of modified feedback instance models can be handled by the FIOC . The FIOC can retrieve a modified feedback instance model created by the FICUR implement the modified feedback instance model or implement the modified portion of the modified feedback instance model verify that the modified feedback instance model creates the appropriate model results and can activate one or more feedback instances or modify one or more feedback instances currently in production based upon the modified feedback instance model.

The PE can communicate with the FIER . The FIER can enable a dynamic process of escalating from an original feedback instance to a different feedback instance in the same domain or across different domains. The FIER can convey one or more issues unresolved in one feedback instance such as one of the feedback instances to another active or non active feedback instance. The FIER can refine an existing intention objective of the original feedback instance or can create a new intention objective for the original feedback instance. Based upon the refined or new intention objective the FIER can search the non active feedback instance model storage and an active feedback instance model storage of the feedback instance model repository to find any candidate feedback instance model s that can be utilized to satisfy the refined or new intention objective. The FIER can perform a distance calculation process to determine how close each candidate feedback instance model is to a model that shares the refined or new intention objective. The FIER can select the candidate with the highest distance score i.e. closest match and can obtain the model identifier associated with that candidate and can provide the model identifier to the FIOC . Realization feedback instance escalation can be handled by the FIOC . The FIOC can retrieve the appropriate feedback instance model from the feedback instance model repository using the model identifier received from the FIER . If the feedback instance model is in a non active state the FIER can activate or re activate the model for escalation.

The PE can communicate with the FICIR . The FICIR can build or extend the interaction capability between two feedback instance models to allow a requesting feedback instance model to acquire information from another feedback instance model. The FICIR can enable a dynamic process through which a requesting feedback instance can issue a consultation request to another feedback instance in the same domain or across different domains. The FICIR can map a consultation request to an available application programming interface API published by e.g. exposed by one or more feedback instances. If an API is found a method of API invocation can be recorded in the requesting feedback instance model in the active feedback instance model storage . If no API is found the FICIR can map the consultation request to a closest target feedback instance intention objective. Once matched the FICIR can map the request to an event type that the target feedback instance already supports. The FICIR can retrieve an event response that the target feedback instance publishes. The interaction mechanism can be recorded back to both the requesting feedback instance model and to the target feedback instance model in the active feedback instance model storage . Realization of feedback instance intercommunication can be handled by the FIOC . The FIOC can retrieve the models from the feedback instance model repository . The FIOC can then enable upgrade an intercommunication path between the requesting feedback instance and the target feedback instance.

The PE can communicate with the FICOR . The FICOR can receive events from a group of feedback instances and can leverage one or more policies such as one or more of the policies to develop a coordinated optimization plan. Realization of the coordinated optimization plan can be handled by the FIOC . The FIOC can interact with all participating feedback instances to execute the coordinated optimization plan.

In a feedback loop construct a set of components can interact with each other in a deterministic manner. For example in a feedback loop instance that involves three actors such as a controller a policy engine and an analytic module the analytic module can collect events and logs from the controller the policy engine can detect one or more anomalies the policy engine also can subscribe to events and can deliver actionable instructions to the controller for adjustment to anomalies and or events and the controller can execute the action s and can log the result in a log entity. This pattern can be repeated continuously until the feedback instance is deactivated. This deterministic mechanism fails to support additional flexibility and or efficiency of how the entire feedback instance should be executed based on various conditions especially the level of participation contribution from an external policy engine in a given runtime condition.

The PE can communicate with the FIOM FIMOS . The FIOM FIMOS can coordinate adjustment and execution of policy participation level mode PPLM based upon current feedback instance conditions. Based on traffic conditions computing or network resource conditions energy conditions and priority considerations explicit involvement of policy can be automatically or manually tuned adjusted to a suitable mode. A mode as used herein can represent a degree or level of guidance constraints required interactions and or the like provided by a policy. Alternately or more generally modes may reflect different alternative in any respect policy guidance constraints required interactions and or the like.

Turning now to aspects of a method for operating the feedback instance architecture will be described according to an illustrative embodiment. It should be understood that the operations of the methods disclosed herein are not necessarily presented in any particular order and that performance of some or all of the operations in an alternative order s is possible and is contemplated. The operations have been presented in the demonstrated order for ease of description and illustration. Operations may be added omitted and or performed simultaneously without departing from the scope of the concepts and technologies disclosed herein.

It also should be understood that the methods disclosed herein can be ended at any time and need not be performed in its entirety. Some or all operations of the methods and or substantially equivalent operations can be performed by execution of computer readable instructions included on a computer storage media as defined herein. The term computer readable instructions and variants thereof as used herein is used expansively to include routines applications application modules program modules programs components data structures algorithms and the like. Computer readable instructions can be implemented on various system configurations including single processor or multiprocessor systems minicomputers mainframe computers personal computers hand held computing devices microprocessor based programmable consumer electronics servers routers switches combinations thereof and the like.

Thus it should be appreciated that the logical operations described herein are implemented as a sequence of computer implemented acts or program modules running on a computing system and or as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance and other requirements of the computing system. Accordingly the logical operations described herein are referred to variously as states operations structural devices acts or modules. These states operations structural devices acts and modules may be implemented in software in firmware in special purpose digital logic and any combination thereof. As used herein the phrase cause a processor to perform operations and variants thereof is used to refer to causing a processor a processor one or more computing systems devices engines switches routers or components disclosed herein to perform operations. It should be understood that the performance of one or more operations may include operations executed by one or more virtual processors at the instructions of one or more of the aforementioned hardware processors.

The method will be described with reference to and further reference to . The method begins at operation where the PE receives at least a portion of the event data the operational inquiry data and or the active monitoring data . From operation the method proceeds to operation where the PE receives the policy request from the policy requestor .

From operation the method proceeds to operation where the PE determines whether one or more policies exist such as one or more of the policies stored in the policy repository that can be utilized to satisfy the policy request . If at operation one or more policies are available the method proceeds to operation where the PE retrieves from the policy repository the one or more policies to satisfy the policy request . From operation the method proceeds to operation where the PE instructs one or more of the policy enforcement points to enforce the one or more policies . As described above the policy enforcement point s can be or can include one or more orchestrators controllers application servers other servers one or more of the feedback instances A N combinations thereof and the like. From operation the method proceeds to operation where the policy enforcement point s enforce the one or more policies . From operation the method proceeds to operation . The method ends at operation .

If at operation one or more policies are not available the method proceeds to operation shown in . At operation the PE determines whether one or more existing feedback instances should be modified by the FICUR to satisfy the policy request . If so the method proceeds to operation which represents a method performed at least in part by the FICUR to modify one or more existing feedback instances as illustrated and described with reference to . If not the method proceeds to operation .

One non limiting example of the method for modifying an existing feedback instance model will now be described. In this example a feedback instance is utilized to monitor one or more anomalies of a set of home devices and related virtual network functions VNFs associated with the set of home devices in a network. The actors of the feedback instance can include the physical home devices an access control server for the physical home devices the VNFs associated with the physical home devices a virtual function controller an analytics module and the PE . In this example the feedback instance can focus on Internet traffic performance. A few anomalies are detected which imply unusual video pattern to clog an access network. The attributes being collected did not include over the top video program usage parameters. Therefore the normal way to deal with the issue is to publish a video congestion event to a trouble ticket system which must be accomplished via a manual intervention process. However using the feedback instance the PE can automatically determine to extend the data collection scope with the inclusion of over the top usage parameters. The automation of the PE further determines to add a video pattern analytic module to the feedback instance since the PEs inputs seem to indicate this need which justifies the additional feedback loop extent and effort. Thus the feedback instance can be modified to take on the new task with no manual intervention.

At operation the PE determines whether the policy request should be escalated to an existing feedback instance. If so the method proceeds to operation which represents a method performed at least in part by the FIER to escalate an existing feedback instance as illustrated and described with reference to . If not the method proceeds to operation .

One non limiting example for escalating to an existing feedback instance will now be described. In this example an original feedback instance involves three actors namely a software defined network SDN controller the PE and an analytics module. The original feedback instance can enable the analytics module to identify one or more anomalies. The original feedback instance also can enable the PE to recommend one or more mitigation rules. The original feedback instance also can instruct the SDN controller to execute the mitigation rule s . In this example an anomaly is identified but the PE determines that the scope of the resolution or needed actions might be beyond what the feedback instance can handle. The possible fixes for this scenario are to either modify the existing feedback instance such as by utilizing the method for modifying the feedback instance briefly described above and in further detail herein below or to escalate to another feedback instance to handle the anomaly. The PE can locate the other feedback instance to perform the escalation process. In this example the other feedback instance can involve four actors including the SDN controller the PE and the analytics module of the feedback instance. The fourth actor can be an orchestrator that has the capability of performing cross domain validation. For example in this scenario to compare the anomaly to one or more similar patterns in another region. If the pattern matches to what is known in another region the orchestrator can facilitate a signature migration process to the original feedback instance. If however the pattern does not match a new signature should be created for future references in the original feedback instance. After the escalation process satisfactorily completes control may be passed back to the original feedback instance.

At operation the PE determines whether a new feedback instance should be created to satisfy the policy request . If so the method proceeds to operation which represents a method performed at least in part by the FIRC to create a new feedback instance model upon which the new feedback instance can be based as illustrated and described with reference to . If not the method proceeds to operation .

One non limiting example of the method for creating a new feedback instance model will now be described. In this example a first feedback instance can monitor layer network traffic patterns. The first feedback instance can include a physical router e.g. a CISCO brand router a virtual router and the PE as actors. Data attributes can be collected and documented in a feedback instance model template stored in the feedback instance model repository . The model template can provide one layer of abstraction so that future physical router virtual router of different brands can reuse the model template in certain way. Installation personnel can install a set of other routers e.g. JUNIPER brand routers . In this example the personnel does not have time to retool the model template and create new feedback instance s particular to the JUNIPER routers. After installation of the JUNIPER routers network operations personnel can issue a request to monitor slow network response time. The PE might fail to locate an active or inactive feedback instance to take on the request to monitor slow network response time and in response can determine to create a new feedback instance second feedback instance . The PE can leverage the existing model template for the first feedback instance but can readjust the involved actors and dynamically create the second feedback instance in the FI model repository . The FICO can realize instantiate the second feedback instance in runtime. Analysis from the second feedback instance can then be passed back to the network operations personnel. The second feedback instance can continue to operate.

At operation the PE determines whether the PE should consult with one or more other feedback instances to satisfy the policy request . If so the method proceeds to operation which represents a method performed at least in part by the FICIR to enable intercommunication among feedback instances to satisfy the policy request as illustrated and described with reference to . If not the method proceeds to operation .

One non limiting example of the method for a first feedback instance to consult with a second feedback instance will be described. In this example the first feedback instance can monitor virtual machine VM usage. The first feedback instance can detect heavy application usages for a set of VMs. Under normal operation the first feedback instance can expand VM instances on the same hardware or relocate VMs to new hardware. Although users will not notice the difference the network processors will be tied up for a time which might slow down other maintenance related activities. In order to ensure the anomaly should be handled in this manner the first feedback instance can consult with the PE for further instruction. The PE can suggest a consultation request to a second feedback instance which includes an application controller one or more VNFs an analytics module and the PE . The second feedback instance can respond with the message Demand for Application 1 Application N will soon reduce by a factor of 80 in 15 minutes. As a result of this consultation the first feedback instance can determine to only migrate a small set of VMs to a new hardware and leave the rest intact.

At operation the PE determines whether the PE should coordinate a solution via an optimization plan that involves multiple feedback instances. If so the method proceeds to operation which represents a method performed at least in part by the FIOM FIMOS to coordinate a solution via an optimization plan that involves multiple feedback instances as illustrated and described with reference to . If not the method proceeds to operation shown in . The method ends at operation . Alternatively the PE may issue an error or other notification to suggest that the policy request cannot currently be satisfied in response to which an operator or other entity can intervene.

One non limiting example of the method for coordinating a solution among feedback instances will be described. In this example a first feedback instance for VM usage management can include three actors namely an orchestrator a cloud resource controller and a PE . The first feedback instance can be used to detect VM usage issues. In this example scenario an anomaly was detected that an event is ready to be published to create new VMs to ease off the capacity glitches. However this scenario is happening at an unusual time period e.g. at 4 30 PM which normally would be a time for the traffic to go down not up . The PE can make a dynamic decision to coordinate with a second feedback instance focused on security to coordinate with the first feedback instance to monitor the situation. The second feedback instance can detect a Denial of Service DNS attack. Instead of creating new VM instances via the first feedback instance the security threats can instead be mitigated via the second feedback instance.

Turning now to a block diagram illustrating further aspects of the feedback instance architecture will be described according to an embodiment. The illustrated feedback instance architecture includes the policy requestor the PE the policy repository the FIRC the feedback instance model repository and the FIOC . Each of these components and others will be described in detail below. While connections are shown between some of the components illustrated in it should be understood that some none or all of the components illustrated in can be configured to interact with one another to carry out various operations described herein. Thus it should be understood that and the following description are intended to provide a general understanding of a suitable environment in which various aspects of embodiments can be implemented and should not be construed as being limiting in any way.

The policy requestor can generate the policy request directed to the PE . The PE can receive the policy request from the policy requestor and can determine through a policy decision process whether or not a policy exists that can be utilized to satisfy the policy request . If so the PE can activate the policy and can instruct the policy enforcement point s to enforce the policy .

The illustrated PE includes a PE processing unit a PE memory unit and a policy module . The PE processing unit can be or can include one or more central processing units CPUs configured with one or more processing cores. The PE processing unit can be or can include one or more graphics processing units GPUs configured to accelerate operations performed by one or more CPUs and or to perform computations to process data and or to execute computer executable instructions of one or more application programs operating systems and or other software that may or may not include instructions particular to graphics computations. In some embodiments the PE processing unit can be or can include one or more discrete GPUs. In some other embodiments the PE processing unit can be or can include CPU and GPU components that are configured in accordance with a co processing CPU GPU computing model wherein the sequential part of an application executes on the CPU and the computationally intensive part is accelerated by the GPU. The PE processing unit can be or can include one or more field programmable gate arrays FPGAs . The PE processing unit can be or can include one or more system on chip SoC components along with one or more other components including for example the PE memory unit . In some embodiments the PE processing unit can be or can include one or more SNAPDRAGON SoCs available from QUALCOMM of San Diego Calif. one or more TEGRA SoCs available from NVIDIA of Santa Clara Calif. one or more HUMMINGBIRD SoCs available from SAMSUNG of Seoul South Korea one or more Open Multimedia Application Platform OMAP SoCs available from TEXAS INSTRUMENTS of Dallas Tex. one or more customized versions of any of the above SoCs and or one or more proprietary SoCs. The PE processing unit can be or can include one or more hardware components architected in accordance with an ARM architecture available for license from ARM HOLDINGS of Cambridge United Kingdom. Alternatively PE processing unit can be or can include one or more hardware components architected in accordance with an x86 architecture such an architecture available from INTEL CORPORATION of Mountain View Calif. and others. Those skilled in the art will appreciate the implementation of the PE processing unit can utilize various computation architectures and as such the PE processing unit should not be construed as being limited to any particular computation architecture or combination of computation architectures including those explicitly disclosed herein.

The PE memory unit can be or can include one or more hardware components that perform storage operations including temporary and or permanent storage operations. In some embodiments the PE memory unit can include volatile and or non volatile memory implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data disclosed herein. Computer storage media includes but is not limited to random access memory RAM read only memory ROM Erasable Programmable ROM EPROM Electrically Erasable Programmable ROM EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store data and which can be accessed by the PE processing unit . The policy module can be stored in the PE memory unit .

The policy module can be executed by the PE processing unit to perform operations in response to the policy request . More particularly the policy module can execute operations of a policy decision process through which the policy module determines whether to activate one or more existing policies such as one or more of the policies stored in the policy repository . If the PE module determines that at least one of the policies in the policy repository should be activated in response to the policy request the PE module can retrieve the one or more policies from the policy repository and can instruct the policy enforcement point s to enforce the one or more policies . If however the PE module determines that none of the policies in the policy repository should be activated in response to the policy request the PE module can determine that a feedback instance should be created to satisfy the policy request and so can generate a feedback instance creation request directed to the FIRC .

The PE can generate the feedback instance creation request based at least in part upon feedback instance creation decision criteria . The feedback instance creation decision criteria can include one or more targets one or more intentions objectives one or more inputs and or one or more operational attributes such as duration and or state. The PE can examine the policy request and the initial policy decision to generate the feedback instance creation decision criteria . For instance the PE can define the objective s for a feedback instance. The PE also can define the target s the input s and the operational attribute s .

The illustrated FIRC includes an FIRC processing unit an FIRC memory unit an external interface subsystem EIS module a policy adaptive subsystem PAS module and a model establishment subsystem MES module . The EIS module the PAS module and the MES module can be stored in the FIRC memory unit and can be executed by the FIRC processing unit to cause the FIRC to perform operations to create feedback instance models in accordance with embodiments disclosed herein.

The FIRC processing unit can be or can include one or more CPUs configured with one or more processing cores. The FIRC processing unit can be or can include one or more GPUs configured to accelerate operations performed by one or more CPUs and or to perform computations to process data and or to execute computer executable instructions of one or more application programs operating systems and or other software that may or may not include instructions particular to graphics computations. In some embodiments the FIRC processing unit can be or can include one or more discrete GPUs. In some other embodiments the FIRC processing unit can be or can include CPU and GPU components that are configured in accordance with a co processing CPU GPU computing model wherein the sequential part of an application executes on the CPU and the computationally intensive part is accelerated by the GPU. The FIRC processing unit can be or can include one or more FPGAs. The FIRC processing unit can be or can include one or more SoC components along with one or more other components including for example the FIRC memory unit . In some embodiments the FIRC processing unit can be or can include one or more SNAPDRAGON SoCs available from QUALCOMM of San Diego Calif. one or more TEGRA SoCs available from NVIDIA of Santa Clara Calif. one or more HUMMINGBIRD SoCs available from SAMSUNG of Seoul South Korea one or more OMAP SoCs available from TEXAS INSTRUMENTS of Dallas Tex. one or more customized versions of any of the above SoCs and or one or more proprietary SoCs. The FIRC processing unit can be or can include one or more hardware components architected in accordance with an ARM architecture available for license from ARM HOLDINGS of Cambridge United Kingdom. Alternatively the FIRC processing unit can be or can include one or more hardware components architected in accordance with an x86 architecture such an architecture available from INTEL CORPORATION of Mountain View Calif. and others. Those skilled in the art will appreciate the implementation of the FIRC processing unit can utilize various computation architectures and as such the FIRC processing unit should not be construed as being limited to any particular computation architecture or combination of computation architectures including those explicitly disclosed herein.

The FIRC memory unit can be or can include one or more hardware components that perform storage operations including temporary and or permanent storage operations. In some embodiments the FIRC memory unit can include volatile and or non volatile memory implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data disclosed herein. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store data and which can be accessed by the FIRC processing unit .

The EIS module can receive and examine feedback instance creation requests such as the illustrated feedback instance creation request received from the PE . The EIS module can receive and examine other feedback instance creation requests from other participating actors. The EIS module can provide a feedback instance model realization request to the FIOC .

The PAS module can examine the feedback instance creation request using one or more policy rules to define one or more objectives for a new feedback instance model. The PAS module can then use the defined model objective s to derive one or more model target actors one or more model input attributes as well as associated real time feedback instance establishment and operation visualization attributes policies. Real time feedback instance establishment and operation visualization attributes policies can indicate influence or control various aspects of establishment and visualization. Policy criteria as attributes can be defined under what conditions a particular feedback instance can be activated. Examples of these attributes include but are not limited location time of day the intended uses e.g. organization or security and computing resource constraints of involved actors. Each of the feedback instances can then be visualized by network system operation personnel. Attributes in this regard can include but are not limited to the operation organization security level real time update frequency e.g. every second every minute on demand drill down level history log duration and the like. The MES module can create a new feedback instance model based upon output of the PAS module and can provide the new feedback instance model along with an associated model identifier to the feedback instance model repository for storage as a non active feedback instance model in the non active feedback instance model storage of the feedback instance model repository . Upon or after activation of one or more new feedback instances based upon the new feedback instance model the model identifier of the new feedback instance model can be moved to the active feedback instance model storage of the feedback instance model repository .

The FIRC in some embodiments is implemented as a policy application executable by the PE processing unit of the PE . In other embodiments such as the illustrated embodiment the FIRC is implemented as an external entity that is in communication with the PE to support the creation of feedback instance models. A new feedback instance model creation request such as the feedback instance creation request can be received from the PE although in some embodiments the FIRC can subscribe to requests directly from an actor external to the PE .

The illustrated FIOC is located downstream from the FIRC in the illustrated feedback instance architecture . The FIOC can respond to the feedback instance model realization request received from the FIRC to realize that is to put into production the feedback instance model identified in the feedback instance model realization request . The FIOC can function as a supporting entity to the FIRC . In some embodiments the functionality of the FIOC is combined with the functionality of the FIRC . In other embodiments such as the illustrated embodiment the FIOC is implemented as an external entity that is in communication with the FIRC .

The illustrated FIOC includes an FIOC processing unit an FIOC memory unit an actor interface subsystem AIS module a flow execution subsystem FES module and a verification and activation subsystem VAS module . The AIS module the FES module and the VAS module can be stored in the FIOC memory unit and can be executed by the FIOC processing unit to cause the FIOC to perform operations described herein.

The FIOC processing unit can be or can include one or more CPUs configured with one or more processing cores. The FIOC processing unit can be or can include one or more GPUs configured to accelerate operations performed by one or more CPUs and or to perform computations to process data and or to execute computer executable instructions of one or more application programs operating systems and or other software that may or may not include instructions particular to graphics computations. In some embodiments the FIOC processing unit can be or can include one or more discrete GPUs. In some other embodiments the FIOC processing unit can be or can include CPU and GPU components that are configured in accordance with a co processing CPU GPU computing model wherein the sequential part of an application executes on the CPU and the computationally intensive part is accelerated by the GPU. The FIOC processing unit can be or can include one or more FPGAs. The FIOC processing unit can be or can include one or more SoC components along with one or more other components including for example the FIOC memory unit . In some embodiments the FIOC processing unit can be or can include one or more SNAPDRAGON SoCs available from QUALCOMM of San Diego Calif. one or more TEGRA SoCs available from NVIDIA of Santa Clara Calif. one or more HUMMINGBIRD SoCs available from SAMSUNG of Seoul South Korea one or more OMAP SoCs available from TEXAS INSTRUMENTS of Dallas Tex. one or more customized versions of any of the above SoCs and or one or more proprietary SoCs. The FIOC processing unit can be or can include one or more hardware components architected in accordance with an ARM architecture available for license from ARM HOLDINGS of Cambridge United Kingdom. Alternatively the FIOC processing unit can be or can include one or more hardware components architected in accordance with an x86 architecture such an architecture available from INTEL CORPORATION of Mountain View Calif. and others. Those skilled in the art will appreciate the implementation of the FIOC processing unit can utilize various computation architectures and as such the FIOC processing unit should not be construed as being limited to any particular computation architecture or combination of computation architectures including those explicitly disclosed herein.

The FIOC memory unit can be or can include one or more hardware components that perform storage operations including temporary and or permanent storage operations. In some embodiments the FIOC memory unit can include volatile and or non volatile memory implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data disclosed herein. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store data and which can be accessed by the FIOC processing unit .

The AIS module can receive the feedback instance model realization request from the FIRC . The AIS module can retrieve a feedback instance model from the non active feedback instance model storage stored in the feedback instance model repository in accordance with a model identifier supplied in the feedback instance model realization request . The AIS module can interact with one or more actors defined in the feedback instance model to realize one or more of the feedback instances .

The FES module can decompose a feedback instance model retrieved from the feedback instance model repository and can direct the AIS module in an operation by operation manner to realize the model. Realizing the model can include instantiating the model for a particular feedback instance. Some operations for realizing the model can include but are not limited to 1 examine identified analytic module instance and then configure data collection algorithm to be used and event publication rules 2 examine all other actors e.g. one actor at a time to configure needed policies rules to each actor to make the feedback instance complete and 3 after operation the feedback instance is created but still in an inactive mode until the feedback instance passes a verification process.

One operation in the flow can be enabling of one or more visualization policies so that the feedback instance can be visually observed by operations personnel. When a feedback instance is activated the feedback instance can operate as a standalone feedback instance continuously. However every feedback instance can be managed so that operations personnel can visualize the current condition of the feedback instance and the associated status of the feedback instance . Visualization policies can be defined to identify who can view this information how frequently the information can be used to update the monitoring dashboard and how many levels the policy allows operation personnel to drill down to view finer grain details.

The VAS module can perform one or more verification operations before activating the feedback instance in a production mode. For example verification operations prior to activation of the feedback instance can include but are not limited to conflict detection various heuristic and or algorithmic validation checks governance checks and the like. Operation groups such as network operation center NOC information technology IT operation personnel Internet operation center IOC and others might have an interest in verifying that the feedback instance is acceptable. Additional verification operations might be to ensure all participating actors are up and running to ensure all activation policies are met e.g. time of day security level location and the like and to ensure no conflicting feedback instance s is are present. The VAS module also can perform one or more activation operations to activate the feedback instance in the production mode.

The FIOC can be implemented as an orchestration application within a service and or resource orchestrator or can be implemented as an external entity in communication with such an orchestrator. When the FIOC is implemented as an external entity to the orchestrator the FIOC can leverage the existing interface infrastructure of the orchestrator.

Turning now to aspects of a method for creating and managing feedback instances in the feedback instance architecture will be described according to an illustrative embodiment. The method begins at operation where the PE receives the policy request from the policy requestor . From operation the method proceeds to operation where the PE receives the feedback instance creation decision criteria . From operation the method proceeds to operation where the PE generates the feedback instance creation request in response to the policy request and based at least in part upon the feedback instance creation decision criteria . From operation the method proceeds to operation where the PE provides the feedback instance creation request to the FIRC .

From operation the method proceeds to operation where the FIRC examines the feedback instance creation request to determine one or more objectives to be met by a new feedback instance model. From operation the method proceeds to operation where the FIRC builds a detailed specification for the new feedback instance model using one or more feedback instance building policies. Feedback instance building policies can include any useful and various conditional policies that will help enable the construction of feedback instances. For example for a particular security related feedback the feedback instance might have to include one of the security related tools such as virus detection function denial of service DoS attack module deep packet inspection DPI and this can be indicated and enforced via a building policy. For a cloud resource feedback instance a building policy can include a cloud controller and research orchestrator in the building policies. The building policies can suggest a minimal set of actors to form the feedback instance. There will be additional rules to suggest in what situation additional actors may need to participate. The FIRC can use the requested content to match the intent. Once the intent is matched the FIRC can look into a building policy repository as part of the other repositories to select the most suitable building policy policies to be used as the blueprint for constructing the feedback instance.

From operation the method proceeds to operation where the FIRC creates a new feedback instance model in accordance with the detailed specification built at operation . From operation the method proceeds to operation where the FIRC stores the new feedback instance model in the non active feedback instance model storage of the feedback instance model repository in association with a unique feedback instance model identifier that identifies the new feedback instance model for later retrieval.

From operation the method proceeds to operation where the FIOC receives the feedback instance model realization request from the FIRC . From operation the method proceeds to operation where the FIOC retrieves the new feedback instance model from the feedback instance model repository using the unique feedback instance model identifier received in the feedback instance model realization request . From operation the method proceeds to operation where the FIOC performs feedback instance model realization operations to realize a new feedback instance such as the feedback instance based upon the new feedback instance model. From operation the method proceeds to operation where the FIOC verifies the new feedback instance . From operation the method proceeds to operation where the FIOC activates the new feedback instance to put the new feedback instance into production and monitors the new feedback instance based upon one or more operational parameters. Operational parameters can include monitoring details and any other factors or considerations useful in day to day operations of feedback instances . The operational parameters can include but are not limited to when the feedback instance can be running any location limitations or other limitations or constraints that might apply which operational organizations can visually or otherwise see and monitor these feedback instances who can suspend and resume these feedback instances under what conditions the feedback instance should pause operation and request intervention and the like.

Turning now to a block diagram illustrating further aspects of the feedback instance architecture will be described according to an illustrative embodiment. The illustrated feedback instance architecture includes the policy requestor the PE the policy repository the FICUR the feedback instance model repository and the FIOC . Each of these components and others will be described in detail below. While connections are shown between some of the components illustrated in it should be understood that some none or all of the components illustrated in can be configured to interact with one another to carry out various operations described herein. Thus it should be understood that and the following description are intended to provide a general understanding of a suitable environment in which various aspects of embodiments can be implemented and should not be construed as being limiting in any way.

The PE can receive the policy request from the policy requestor and can determine through a policy decision process whether or not a policy exists that can be utilized to satisfy the policy request . If so the PE can activate the policy and can instruct one or more policy enforcement points to enforce the policy .

The illustrated PE includes the PE processing unit the PE memory unit and the PE module described above with reference to . The PE module can be executed by the PE processing unit to perform operations in response to the policy request . More particularly the PE module can execute operations of a policy decision process through which the PE module determines whether to activate one or more existing policies such as one or more of the policies stored in the policy repository . If the PE module determines that at least one of the policies in the policy repository should be activated in response to the policy request the PE module can retrieve one or more of the policies from the policy repository and can instruct the policy enforcement point s to enforce the one or more policies . If however the PE module determines that none of the policies in the policy repository should be activated in response to the policy request the PE module can determine whether an existing active feedback instance such as an original feedback instance can be utilized to satisfy the policy request . If an existing active feedback instance can be utilized to satisfy the policy request the PE can associate that existing active feedback instance with the policy request . For example if the PE determines that the original feedback instance can be utilized to satisfy the policy request the PE can associate the original feedback instance with the policy request . If however the original feedback instance cannot be utilized to satisfy the policy request the PE can identify one or more deficiencies in the original feedback instance that can be cured via a modification process disclosed herein.

The illustrated original feedback instance includes a plurality of original feedback instance actors illustrated as OFI actor  OFI actor N A N although the original feedback instance might include a different number of actors. As used herein the term original with regard to a feedback instance refers to an existing active feedback instance prior to any modifications. Moreover it should be understood that a modified feedback instance can be further modified to accommodate additional policy requests and can be modified to revert back to a previous state. For example the original feedback instance can be modified to add a new actor in response to the policy request and later can be modified to remove the new actor to revert back to a state indicative of the original feedback instance .

The original feedback instance might be deficient in one or more aspects. The original feedback instance might be deficient in a number of actors and or type of actor. In some embodiments the original feedback instance includes a particular actor but can be deficient in that the particular actor is inactive. Alternatively in other embodiments the original feedback instance does not include an actor and in this manner is deficient. The original feedback instance might be deficient in a number of inputs and or type of inputs. The original feedback instance might be deficient in a type or number of operational parameters and or values associated therewith. The original feedback instance might be deficient in one or more applications e.g. analytics application s and might benefit from or require the addition of one or more applications and or the removal of one or more applications to cure a deficiency. The original feedback instance might need changes to other attributes such as but not limited to capacity traffic and the like.

The PE can generate a feedback instance modification request directed to the FICUR to notify the FICUR of one or more deficiencies in the original feedback instance . The illustrated FICUR includes an FICUR processing unit an FICUR memory unit an FICUR EIS module and a change upgrade subsystem CUS module . The FICUR EIS module and the CUS module can be stored in the FICUR memory unit and can be executed by the FICUR processing unit to cause the FICUR to perform operations to modify feedback instances in accordance with embodiments disclosed herein.

The FICUR processing unit can be or can include one or more CPUs configured with one or more processing cores. The FICUR processing unit can be or can include one or more GPUs configured to accelerate operations performed by one or more CPUs and or to perform computations to process data and or to execute computer executable instructions of one or more application programs operating systems and or other software that may or may not include instructions particular to graphics computations. In some embodiments the FICUR processing unit can be or can include one or more discrete GPUs. In some other embodiments the FICUR processing unit can be or can include CPU and GPU components that are configured in accordance with a co processing CPU GPU computing model wherein the sequential part of an application executes on the CPU and the computationally intensive part is accelerated by the GPU. The FICUR processing unit can be or can include one or more FPGAs. The FICUR processing unit can be or can include one or more SoC components along with one or more other components including for example the FICUR memory unit . In some embodiments the FICUR processing unit can be or can include one or more SNAPDRAGON SoCs available from QUALCOMM of San Diego Calif. one or more TEGRA SoCs available from NVIDIA of Santa Clara Calif. one or more HUMMINGBIRD SoCs available from SAMSUNG of Seoul South Korea one or more OMAP SoCs available from TEXAS INSTRUMENTS of Dallas Tex. one or more customized versions of any of the above SoCs and or one or more proprietary SoCs. The FICUR processing unit can be or can include one or more hardware components architected in accordance with an ARM architecture available for license from ARM HOLDINGS of Cambridge United Kingdom. Alternatively the FICUR processing unit can be or can include one or more hardware components architected in accordance with an x86 architecture such an architecture available from INTEL CORPORATION of Mountain View Calif. and others. Those skilled in the art will appreciate the implementation of the FICUR processing unit can utilize various computation architectures and as such the FICUR processing unit should not be construed as being limited to any particular computation architecture or combination of computation architectures including those explicitly disclosed herein.

The FICUR memory unit can be or can include one or more hardware components that perform storage operations including temporary and or permanent storage operations. In some embodiments the FICUR memory unit can include volatile and or non volatile memory implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data disclosed herein. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store data and which can be accessed by the FICUR processing unit .

The FICUR EIS module can receive and examine feedback instance modification requests such as the illustrated feedback instance modification request received from the PE . The FICUR EIS module can receive and examine other feedback instance modification requests from other participating actors. The majority of feedback instance modification requests will likely come from the PE . However in some cases participating actors can also contribute to the request process. For example in a scale up feedback instance a resource controller might signal the FICUR EIS module that the VM spin off process might become too frequent and certain thresholds might need to be readjusted without needing to modify the entire feedback instance. In this case FICUR may decide to make some modification of configuration parameters while keeping the feedback instance running. The FICUR EIS module can provide a feedback instance modification realization request to the FIOC so that the FIOC can execute one or more operations to upgrade or change the original feedback instance .

The CUS module can examine the feedback instance modification request using one or more policy rules to modify one or more model objectives of the feedback instance model upon which the original feedback instance is based. The CUS module can then utilize the modified model objective s to modify a specification associated with the feedback instance model to create a modified feedback instance model. Modification to the specification can add or reduce model target actors model input attributes associated operation s and or visualization attributes policies. The CUS module can provide the modified feedback instance model and the associated modified specification along with a model identifier to the feedback instance model repository . The CUS module can store the modified feedback instance model in the active feedback instance model storage of the feedback instance model repository .

The FICUR in some embodiments is implemented as a policy application executable by the PE processing unit of the PE . In other embodiments such as the illustrated embodiment the FICUR is implemented as an external entity that is in communication with the PE to support the modification of feedback instance models. A feedback instance modification request such as the feedback instance modification request can be received from the PE although in some embodiments the FICUR can subscribe to requests directly from an actor external to the PE .

The illustrated FIOC is located downstream from the FICUR in the feedback instance architecture . The FIOC can respond to the feedback instance modification realization request received from the FICUR to realize that is to put into production the feedback instance model identified via a model identifier in the feedback instance modification realization request . The FIOC can function as a supporting entity to the FICUR . In some embodiments the functionality of the FIOC is combined with the functionality of the FICUR . In other embodiments such as the illustrated embodiment the FIOC is implemented as an external entity that is in communication with the FICUR .

The illustrated FIOC includes the FIOC processing unit the FIOC memory unit the AIS module the FES module and the VAS module . The AIS module the FES module and the VAS module can be stored in the FIOC memory unit and can be executed by the FIOC processing unit to cause the FIOC to perform realization operations described herein.

The AIS module can receive the feedback instance modification realization request from the FICUR . The AIS module can retrieve the modified instance model from the active feedback instance model storage stored in the feedback instance model repository utilizing the model identifier supplied in the feedback instance modification realization request .

The FES module can decompose the modified feedback instance model retrieved from the feedback instance model repository and can direct the AIS module in an operation by operation manner to perform a realization process using the modified feedback instance model to deploy a modified feedback instance . The AIS module can interact with one or more actors illustrated as MFI actor  MFI actor N A N defined in the modified feedback instance to establish connectivity as part of the realization process. The MFI actors A N can include actors that were inactive or otherwise unavailable in the original feedback instance . Also as part of the realization process the AIS module can negotiate with a data collection actor to ensure additional feedback instance data attributes can be obtained. As an example assuming that a virtual router can provide one hundred attributes for performance monitoring however only ninety of the attributes are frequently used and the remaining ten include a large data set but less value. The feedback instance can be constructed back on only collecting the ninety attributes. When the needs arise the AIS module can look into the data set the virtual router contains the flexibility of the data collection API and can then instruct an analytic module to start collection of the additional ten attributes for certain duration. The AIS module also can connect with any newly added analytic algorithm s and or program s for the modified feedback instance module.

The VAS module can perform one or more verification operations before activating the modified feedback instance in production. As an example verification operations can ensure that all actors are in active state and there are no other conflicting feedback instance s running or other policy attribute restrictions such as time of day location and or the like . The VAS module can perform one or more activation operations to activate the modified feedback instance in production.

Turning now to aspects of a method for modifying an existing feedback instance such as the original feedback instance in the feedback instance architecture will be described according to an illustrative embodiment. The method will be described with reference to and further reference to . The method begins at operation where the FICUR receives the feedback instance modification request from the PE . The feedback instance modification request can be generated by the PE to instruct the FICUR to change adjust upgrade or otherwise modify one or more existing active feedback instances such as the original feedback instance . For ease of explanation the feedback instance modification request will be described herein as instructing the FICUR to modify the original feedback instance to cure one or more deficiencies of the original feedback instance .

From operation the method proceeds to operation where the FICUR examines the feedback instance modification request to determine which aspects of the original feedback instance are to be modified. At operation the FICUR also interacts with the PE to establish one or more modified objectives to be used to enhance the original feedback instance to cure one or more deficiencies of the original feedback instance .

From operation the method proceeds to operation where the FICUR uses a pre defined extensibility policy to extend the specification of the original feedback instance model utilized to create the original feedback instance to allow for the creation of a modified feedback instance model to create the modified feedback instance . An extensibility policy allows an original feedback instance model used to create an original feedback instance to be extended in various ways to support creation of a modified feedback instance. A feedback instance model might be allowed to be modified only if the result will still be within a pre defined set of extensibility policies or constraints. A network fault management feedback instance might not be allowed to be extended to become a security virus detection feedback instance. A compute based feedback instance might not be allowed to be extended to a network monitoring feedback instance. When a modification request is received and analyzed a new model objective might be determined that can involve adding or dropping some of the actors in the original feedback instance. The new model objective might involve maintaining the same set of actors but simply adding or removing modifying some of the actions that are allowed to be taken or adding removing modifying some attributes from data collection module or adding removing modifying new limitation to the API definition between two actors. The allowed manner and extent of allowable modification is defined by the extensibility policies. For example for a VM restart compute feedback instance the extensibility policies might be to allow extending the model to another region but within California or another state only to allow extending the model to include one or more hypervisors to allow extending the feedback instance only if the average the controller CPU utilization is below 70 to allow extending the feedback instance only if the actors added in belong to other compute infrastructure within the same data center.

From operation the method proceeds to operation where the FICUR modifies the original feedback instance model in accordance with the extended specification. From operation the method proceeds to operation where the FICUR stores the modified feedback instance model in the active feedback instance model storage of the feedback instance model repository .

From operation the method proceeds to operation where the FIOC receives the feedback instance modification realization request including a model identifier associated with the modified feedback instance model from the FICUR . From operation the method proceeds to operation where the FIOC retrieves the modified feedback instance model from the feedback instance model repository in accordance with the model identifier received in the feedback instance modification realization request .

From operation the method proceeds to operation where the FIOC performs feedback instance model realization operations to deploy the modified feedback instance in production. From operation the method proceeds to operation where the FIOC validates the modified feedback instance . From operation the method proceeds to operation where the FIOC monitors the modified feedback instance based upon one or more operational parameters.

Turning now to a block diagram illustrating further aspects of a feedback instance architecture will be described according to an illustrative embodiment. The illustrated feedback instance architecture includes the policy requestor the PE the policy repository the FIER the feedback instance model repository and the FIOC . Each of these components and others will be described in detail below. While connections are shown between some of the components illustrated in it should be understood that some none or all of the components illustrated in can be configured to interact with one another to carry out various operations described herein. Thus it should be understood that and the following description are intended to provide a general understanding of a suitable environment in which various aspects of embodiments can be implemented and should not be construed as being limiting in any way.

The PE can receive the policy request from the policy requestor and can determine through a policy decision process whether or not a policy exists that can be utilized to satisfy the policy request . If so the PE can activate the policy and can instruct the policy enforcement point s to enforce the policy . The illustrated PE includes the PE processing unit the PE memory unit and the PE module described above. The PE module can be executed by the PE processing unit to perform operations in response to the policy request . More particularly the PE module can execute operations of a policy decision process through which the PE module determines whether to activate one or more existing policies such as one or more of the policies stored in the policy repository . If the PE module determines that at least one of the policies in the policy repository should be activated in response to the policy request the PE module can retrieve the one or more policies from the policy repository and can instruct the policy enforcement point s to enforce the one or more policies . If however the PE module determines that none of the policies in the policy repository should be activated in response to the policy request the PE module can determine whether an existing active feedback instance such as the original feedback instance can be utilized to satisfy the policy request . If an existing active feedback instance can be utilized to satisfy the policy request the PE can associate that existing active feedback instance with the policy request . For example if the PE determines that the original feedback instance can be utilized to satisfy the policy request the PE can associate the original feedback instance with the policy request . If however the original feedback instance cannot be utilized to satisfy the policy request the PE can identify one or more deficiencies in the original feedback instance that can be cured via an escalation process disclosed herein. For example the original feedback instance might fail to meet one or more objectives or might detect an anomaly that the original feedback instance cannot handle. The escalation process described herein can enable escalation of the issue experienced by the original feedback instance to another feedback instance as will be described in further detail herein.

The illustrated original feedback instance includes the original feedback instance actors A N although the original feedback instance might include a different number of actors. The original feedback instance might be deficient in one or more aspects. The original feedback instance might be deficient in a number of actors and or type of actor. In some embodiments the original feedback instance includes a particular actor but can be deficient in that the particular actor is inactive. Alternatively in other embodiments the original feedback instance does not include an actor and in this manner is deficient. The original feedback instance might be deficient in a number of inputs and or type of inputs. The original feedback instance might be deficient in a type or number of operational parameters and or values associated therewith. The original feedback instance might be deficient in one or more analytic applications and might benefit from or require the addition of one or more analytic applications and or the removal of one or more analytic applications to cure a deficiency. The original feedback instance might need changes to other attributes such as but not limited to capacity traffic and the like.

The PE can generate a feedback instance escalation request directed to the FIER to notify the FIER of one or more deficiencies in the original feedback instance . The FIER can convey issues e.g. deficiencies unresolved in one feedback instance to another active or non active feedback instance. The illustrated FIER includes an FIER processing unit an FIER memory unit an FIER EIS module and the FIER EDS module . The FIER EIS module and the FIER EDS module can be stored in the FIER memory unit and can be executed by the FIER processing unit to cause the FIER to perform operations to escalate feedback instances in accordance with embodiments disclosed herein.

The FIER processing unit can be or can include one or more CPUs configured with one or more processing cores. The FIER processing unit can be or can include one or more GPUs configured to accelerate operations performed by one or more CPUs and or to perform computations to process data and or to execute computer executable instructions of one or more application programs operating systems and or other software that may or may not include instructions particular to graphics computations. In some embodiments the FIER processing unit can be or can include one or more discrete GPUs. In some other embodiments the FIER processing unit can be or can include CPU and GPU components that are configured in accordance with a co processing CPU GPU computing model wherein the sequential part of an application executes on the CPU and the computationally intensive part is accelerated by the GPU. The FIER processing unit can be or can include one or more FPGAs. The FIER processing unit can be or can include one or more SoC components along with one or more other components including for example the FIER memory unit . In some embodiments the FIER processing unit can be or can include one or more SNAPDRAGON SoCs available from QUALCOMM of San Diego Calif. one or more TEGRA SoCs available from NVIDIA of Santa Clara Calif. one or more HUMMINGBIRD SoCs available from SAMSUNG of Seoul South Korea one or more OMAP SoCs available from TEXAS INSTRUMENTS of Dallas Tex. one or more customized versions of any of the above SoCs and or one or more proprietary SoCs. The FIER processing unit can be or can include one or more hardware components architected in accordance with an ARM architecture available for license from ARM HOLDINGS of Cambridge United Kingdom. Alternatively the FIER processing unit can be or can include one or more hardware components architected in accordance with an x86 architecture such an architecture available from INTEL CORPORATION of Mountain View Calif. and others. Those skilled in the art will appreciate the implementation of the FIER processing unit can utilize various computation architectures and as such the FIER processing unit should not be construed as being limited to any particular computation architecture or combination of computation architectures including those explicitly disclosed herein.

The FIER memory unit can be or can include one or more hardware components that perform storage operations including temporary and or permanent storage operations. In some embodiments the FIER memory unit can include volatile and or non volatile memory implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data disclosed herein. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store data and which can be accessed by the FIER processing unit .

The FIER EIS module can receive and examine feedback instance escalation requests such as the illustrated feedback instance escalation request received from the PE . The FIER EIS module can receive and examine other feedback instance escalation requests from other participating actors. Escalation requests might often or usually come from the policy engine . However in some cases an escalation request can come from or result from any of the participating actors. For example one cloud controller might raise concerns regarding consistently encountering resource contention issues but the impact is confined within the cloud controller s own domain i.e. not within the current scope of the feedback instance . The FIER might still take this request seriously and might decide to escalate to another more appropriate feedback instance in order to relieve some burden from the local cloud controller. The FIER EIS module can provide a feedback instance escalation realization request to the FIOC so that the FIER can perform model escalation operations described herein. The feedback instance escalation realization request can include a suggested escalation model identifier associated with a suggested feedback instance escalation model. The suggested feedback instance escalation model can be determined by the FIER EDS module as described below.

The FIER EDS module can examine the feedback instance escalation request along with the objective s of the original feedback instance using policy rules to define one or more new model objectives. Policy can be used to define new model objectives. For example the original model for a particular feedback instance might be to focus on VM performance within a single data center. However due to some problem that has occurred in a nearby data center many of the resources are now used to support that data center. The objective of the original feedback instance that has been defined to have a local single data center view might no longer be satisfactory. A new objective might be to monitor the process across multiple data centers. In this case the issue might be better addressed by escalating to another feedback instance that already has a view into all four of the data centers in question.

Based upon the new model objective s the FIER EDS module can search the non active feedback instance model storage and the active feedback instance model storage of the feedback instance model repository for possible feedback instance escalation model candidates. The FIER EDS module also can calculate a distance score among all or a subset of the possible model candidates. Distance scores might be calculated to determine how alike or unlike two feedback instances are both in terms of particular feedback instance definitional dimension aspects and also overall. Overall distances can be calculated for example by summing or averaging the distance values of each definitional dimension or aspect. Definitional model aspects can include the various types extents specifics and frequency of data collected by a feedback instance the type degree and other descriptive factors regarding analysis to be performed and multiples of these if multiple types of analysis are included in the feedback instance the number of participating actors and associated specific identities the target s which may be actors or particular aspects components of actors of the feedback instance in terms of what particular entity behavior functionality or entities behaviors functionalities the feedback instance is intended to affect and any other possible feedback instance definition components that may exist or may be added. For each separable aspect or for groups of aspects in any reasonable combination distance values might be configured such that certain values or settings of aspect s are closer together or farther apart i.e. having shorter smaller or larger farther distances therebetween . Actual values can be numerical or in any other form or format that might be useful. For example when a feedback instance escalation request is received in many cases more than one feedback instance may be suitable as the escalation target. In order to determine to which feedback instance to escalate a distance score might help in determining which feedback instance to select e.g. the feedback instance that is closest shortest overall distance to what is needed .

The FIER EDS module can select a best match based upon which of the possible model candidates has the highest distance score. The model with the highest distance score can be determined to be the suggested feedback instance escalation model. The FIER EDS module can provide a suggested model escalation identifier associated with the suggested feedback instance escalation model to the FIER EIS module which can generate the feedback instance escalation realization request including the suggested model escalation identifier and can provide the feedback instance escalation realization request to the FIOC .

The FIER in some embodiments is implemented as a policy application executable by the PE processing unit of the PE . In other embodiments such as the illustrated embodiment the FIER is implemented as an external entity that is in communication with the PE to support the escalation of feedback instance models. A feedback instance escalation request such as the feedback instance escalation request can be received from the PE although in some embodiments the FIER can subscribe to requests directly from an actor external to the PE .

The illustrated FIOC is located downstream from the FIER in the feedback instance architecture . The FIOC can respond to the feedback instance escalation realization request received from the FIER to realize that is to put into production the feedback instance escalation model identified via a model identifier in the feedback instance escalation realization request . The FIOC can function as a supporting entity to the FIER . In some embodiments the functionality of the FIOC is combined with the functionality of the FIER . In other embodiments such as the illustrated embodiment the FIOC is implemented as an external entity that is in communication with the FIER .

The illustrated FIOC includes the FIOC processing unit the FIOC memory unit a feedback instance reactivation subsystem FIRS module and a reactivation and association subsystem RAS module . The FIRS module and the RAS module can be stored in the FIOC memory unit and can be executed by the FIOC processing unit to cause the FIOC to perform escalation operations described herein.

The FIRS module can receive the feedback instance escalation realization request from the FIER . The FIRS module can be executed when the model identifier received in the feedback instance escalation realization request is related to a non active feedback instance. When the non active feedback instance model is located the FIRS module can validate the non active feedback instance to ensure the non active feedback instance model meets the entire specification for the non active feedback instance as stored in the non active feedback instance model storage of the feedback instance model repository .

The RAS module can reactivate the validated non active feedback instance and can associate the feedback escalation realization request with the reactivated feedback instance which in the illustrated example is an escalated feedback instance that includes one or more escalated feedback instance actors A N. The RAS module can enable one or more visualization policies so that the escalated feedback instance can be visually observed by operations pertaining to the escalation identifier. Visualization policies can allow an escalated feedback instance to be visually observed by operations pertaining to an escalation identifier in various ways including any filters to be applied preferred visualization mechanisms or factors preferences or requirements applying conditional aspects and the like. For instance once a feedback instance is escalated to a different feedback instance the operations personnel should be able to visualize the newly escalated feedback instance. Operations personnel might benefit from visual indications that escalation has occurred the scope or purpose of the escalation the cause of the escalation the progress or current status regarding the escalation objective any associated constraints or limitations any conditions that might result in a request for manual intervention and the like. Which of these apply how they apply and or mechanisms to be used can be included in visualization policies.

The FIOC can be implemented as an orchestration application within a service and or resource orchestrator or can be implemented as an external entity in communication with such an orchestrator. When the FIOC is implemented as an external entity to the orchestrator the FIOC can leverage the existing interface infrastructure of the orchestrator.

Based on the foregoing an escalation can include a determination that a second feedback instance is to be assigned an additional responsibility and an assignment of the additional responsibility to the second feedback instance based upon information provided by the FIER . The FIER can adjust the definition of the second feedback instance to have an expanded or multiple scopes.

Turning now to aspects of a method for escalating a feedback instance such as the original feedback instance in the feedback instance architecture will be described according to an illustrative embodiment. The method will be described with reference to and further reference to . The method begins at operation where the FIER receives the feedback instance escalation request from the policy engine . From operation the method proceeds to operation where the FIER examines the feedback instance escalation request and one or more objectives of the original feedback instance to identify one or more escalated objectives for the escalated feedback instance .

From operation the method proceeds to operation where the FIER creates a definition for the escalated feedback instance . The definition can include the escalated objective s identified in operation along with one or more escalated targets and one or more escalated inputs to satisfy the escalated objective s . The escalated target s can include one or more actors to be influenced by the escalated feedback instance . The escalated input s can include the specific input s to be utilized by the escalated feedback instance .

From operation the method proceeds to operation where the FIER maps the definition for the escalated feedback instance to one or more active feedback instance models identified in the active feedback instance model storage of the feedback instance model repository and or to one or more non active feedback instance models identified in the non active feedback instance model storage of the feedback instance model repository . In some embodiments the FIER can utilize a table of all or a relevant subset of available active and non active feedback instances to map the definition for the escalated feedback instance . The table can be updated to accommodate new or different feedback instance models.

From operation the method proceeds to operation where the FIER calculates a distance score for each qualified feedback instance model or in other words to each feedback instance model to which the definition for the escalated feedback instance has been mapped in operation . From operation the method proceeds to operation where the FIER selects the closest match based upon the distance scores calculated at operation . Although not shown in the illustrated example a feedback instance model that is the closest match can be selected as a candidate for the escalated feedback instance if the distance between the closest match and the definition for the escalated feedback instance does not exceed one of more thresholds.

Thresholds might be used for many purposes for example in the determination of whether the distance between the closest match and the definition for the escalated feedback instance does not exceed one of more settable values along various dimensions. Multiple thresholds can be set each for an acceptable maximum distance along a particular dimension. Dimensions might be defined for each aspect of the feedback instance definition such that these dimensions or scales denote how closely two feedback instances are alike. The greater the distances between values or settings in dimensions the more the feedback instances are different. Whereas the shorter or smaller the distances between them the more the feedback distances are alike. If all distances are zero reflecting no difference in the definitional aspects of the feedback instances then two feedback instances are identical. Also when looking for a feedback instance to which to escalate one might find out that although there are a set of feedback instances to which to escalate none of the feedback instances may match to the objectives 100 . One approach to help resolve this is to set a threshold rule. For example if less than 70 of objectives can be handled by an identified feedback instance for escalation then this percentage might be deemed unacceptable i.e. not good enough such that a brand new feedback instance will instead have to be created to which to escalate. If the distance does exceed one or more thresholds the FIER can instruct the FIOC to create a new feedback instance model to resolve the issue s that prompted the escalation process.

From operation the method proceeds to operation where the FIER generates the feedback instance escalation realization request . From operation the method proceeds to operation where the FIER sends the feedback instance escalation realization request to the FIOC . From operation the method proceeds to operation where the FIOC receives the feedback instance escalation realization request from the FIER .

From operation the method proceeds to operation where the FIOC determines whether to activate or reactivate a non active model or to associate the feedback instance escalation realization request with an active feedback instance. From operation the method proceeds to operation where if the FIOC has determined to activate or re activate a non active feedback instance model the method proceeds to operation where the FIOC retrieves a non active feedback instance model and activates the non active feedback instance model in runtime as the escalated feedback instance . From operation the method proceeds to operation where the method ends. If however at operation the FIOC has determined not to activate or re activate a non active feedback instance model the method proceeds to operation where the FIOC associates the feedback instance escalation realization request with an active feedback instance in runtime as the escalated feedback instance . From operation the method proceeds to operation where the method ends.

Turning now to a block diagram illustrating further aspects of the feedback instance architecture will be described according to an illustrative embodiment. The illustrated feedback instance architecture includes the policy requestor the PE the policy repository the FICIR a feedback instance model repository and the FIOC . Each of these components and others will be described in detail below. While connections are shown between some of the components illustrated in it should be understood that some none or all of the components illustrated in can be configured to interact with one another to carry out various operations described herein. Thus it should be understood that and the following description are intended to provide a general understanding of a suitable environment in which various aspects of embodiments can be implemented and should not be construed as being limiting in any way.

The PE can receive the policy request from the policy requestor and can determine through a policy decision process whether or not a policy exists that can be utilized to satisfy the policy request . If so the PE can activate the policy and can instruct the policy enforcement point s to enforce the policy . The illustrated PE includes the PE processing unit the PE memory unit and the PE module .

The PE module can be executed by the PE processing unit to perform operations in response to the policy request . More particularly the PE module can execute operations of a policy decision process through which the PE module determines whether to activate one or more existing policies such as one or more of the policies stored in the policy repository . If the PE module determines that at least one of the policies in the policy repository should be activated in response to the policy request the PE module can retrieve one or more of the policies from the policy repository and can instruct the policy enforcement point s to enforce one or more of the policies . If however the PE module determines that none of the policies in the policy repository should be activated in response to the policy request the PE module can determine whether an existing active feedback instance such as the original feedback instance can be utilized to satisfy the policy request . If an existing active feedback instance can be utilized to satisfy the policy request the PE can associate that existing active feedback instance with the policy request . For example if the PE determines that the original feedback instance can be utilized to satisfy the policy request the PE can associate the original feedback instance with the policy request . If however the original feedback instance cannot be utilized to satisfy the policy request the PE can identify one or more deficiencies in the original feedback instance that can be cured via a feedback instance consultation process disclosed herein.

The illustrated original feedback instance includes the OFI actors A N although the original feedback instance might include a different number of actors. The original feedback instance might be deficient in one or more aspects. The original feedback instance might be deficient in a number of actors and or type of actor. In some embodiments the original feedback instance includes a particular actor but can be deficient in that the particular actor is inactive. Alternatively in other embodiments the original feedback instance does not include an actor and in this manner is deficient. The original feedback instance might be deficient in a number of inputs and or type of inputs. The original feedback instance might be deficient in a type or number of operational parameters and or values associated therewith. The original feedback instance might be deficient in one or more analytic applications and might benefit from or require the addition of one or more analytic applications and or the removal of one or more analytic applications to cure a deficiency. The original feedback instance might need changes to other attributes such as but not limited to capacity traffic and the like.

In response to identifying one or more deficiencies the original feedback instance can generate a consultation request directed to the policy engine . The consultation request can be utilized by the original feedback instance to request help from one or more different feedback instances such as a target feedback instance which can include one or more actors such as target feedback instance actor s A N that can utilize a consultation communications link to communicate with the original feedback instance actor s A N to help the original feedback instance cure one or more deficiencies.

In response to receiving the consultation request from the original feedback instance the PE can generate a feedback instance consultation request . The PE in some embodiments can generate the feedback instance consultation request after verifying the validity of the consultation request . For example the PE can reference one or more policies regarding permissions for the original feedback instance to consult with one or more different feedback instances such as the target feedback instance . Alternatively the PE in some embodiments can function as a pass through for communications between the original feedback instance and the FICIR . In these embodiments the feedback instance consultation request might be the same as or similar to the consultation request . In either the case the FICIR can receive the feedback instance consultation request and can perform one or more operations of a consultation process described in further detail herein below at least in part to help the original feedback instance cure one or more deficiencies.

The illustrated FICIR includes an FICIR processing unit an FICIR memory unit an FICIR EIS module an API method subsystem APIMS module and an event response method subsystem ERMS module . The FICIR EIS module the APIMS module and the ERMS module can be stored in the FICIR memory unit and can be executed by the FICIR processing unit to cause the FICIR to perform operations to facilitate consultation among feedback instances in accordance with embodiments disclosed herein.

The FICIR processing unit can be or can include one or more CPUs configured with one or more processing cores. The FICIR processing unit can be or can include one or more GPUs configured to accelerate operations performed by one or more CPUs and or to perform computations to process data and or to execute computer executable instructions of one or more application programs operating systems and or other software that may or may not include instructions particular to graphics computations. In some embodiments the FICIR processing unit can be or can include one or more discrete GPUs. In some other embodiments the FICIR processing unit can be or can include CPU and GPU components that are configured in accordance with a co processing CPU GPU computing model wherein the sequential part of an application executes on the CPU and the computationally intensive part is accelerated by the GPU. The FICIR processing unit can be or can include one or more FPGAs. The FICIR processing unit can be or can include one or more SoC components along with one or more other components including for example the FICIR memory unit . In some embodiments the FICIR processing unit can be or can include one or more SNAPDRAGON SoCs available from QUALCOMM of San Diego Calif. one or more TEGRA SoCs available from NVIDIA of Santa Clara Calif. one or more HUMMINGBIRD SoCs available from SAMSUNG of Seoul South Korea one or more OMAP SoCs available from TEXAS INSTRUMENTS of Dallas Tex. one or more customized versions of any of the above SoCs and or one or more proprietary SoCs. The FICIR processing unit can be or can include one or more hardware components architected in accordance with an ARM architecture available for license from ARM HOLDINGS of Cambridge United Kingdom. Alternatively the FICIR processing unit can be or can include one or more hardware components architected in accordance with an x86 architecture such an architecture available from INTEL CORPORATION of Mountain View Calif. and others. Those skilled in the art will appreciate the implementation of the FICIR processing unit can utilize various computation architectures and as such the FICIR processing unit should not be construed as being limited to any particular computation architecture or combination of computation architectures including those explicitly disclosed herein.

The FICIR memory unit can be or can include one or more hardware components that perform storage operations including temporary and or permanent storage operations. In some embodiments the FICIR memory unit can include volatile and or non volatile memory implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data disclosed herein. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store data and which can be accessed by the FICIR processing unit .

The FICIR EIS module can receive and examine consultation requests such as the illustrated feedback instance consultation request received from the PE . The FICIR EIS module can deliver to the FIOC a feedback instance consultation realization request . The feedback instance consultation realization request can include a requesting model identifier associated with a requesting feedback instance model such as the model associated with the original feedback instance . The feedback instance consultation realization request also can include a target model identifier associated with a target feedback instance model such as the model associated with the target feedback instance .

The APIMS module can examine the feedback instance consultation request and can search an active feedback instance model API library stored in the feedback instance model repository for an available API exposed by i.e. offered by a peer feedback instance such as the target feedback instance in the illustrated example to allow consultation communications via the consultation communications link . The active feedback instance model API library can include one or more APIs for each active feedback instance model in the active feedback instance model storage upon which one or more currently active feedback instances are based i.e. feedback instance s operating in runtime .

The ERMS module can map the feedback instance consultation request to an event response already supported by a peer feedback instance such as the target feedback instance . The result of one or more operations performed by the APIMS module and the ERMS module upon execution by the FICIR processing unit can be delivered to the FIOC via the FICIR EIS module in the feedback instance consultation realization request to establish the consultation communications link between the original feedback instance and the target feedback instance .

The FICIR in some embodiments is implemented as a policy application executable by the PE processing unit of the PE . In other embodiments such as the illustrated embodiment the FICIR is implemented as an external entity that is in communication with the PE to support consultation among active feedback instances. A feedback instance consultation request such as the illustrated feedback instance consultation request can be received from the PE although in some embodiments the FICIR can subscribe to requests directly from an actor external to the PE .

The illustrated FIOC is located downstream from the FICIR in the feedback instance architecture . The FIOC can respond to the feedback instance consultation realization request received from the FICIR EIS module to realize that is to put into production the consultation communications link between the instances identified in the feedback instance consultation realization request such as the original feedback instance and the target feedback instance in the illustrated example. The FIOC can function as a supporting entity to the FICIR . In some embodiments the functionality of the FIOC is combined with the functionality of the FICIR . In other embodiments such as the illustrated embodiment the FIOC is implemented as an external entity that is in communication with the FICIR .

In response to the feedback instance consultation realization request the FIOC can create and or extend one or more intercommunication paths among two or more feedback instances. In the illustrated example the FIOC creates the consultation communications link between the original feedback instance and the target feedback instance . In some embodiments the FIOC can extend the consultation communications link to facilitate communications with one or more other feedback instances.

The illustrated FIOC includes the FIOC processing unit the FIOC memory unit a feedback instance API interaction subsystem FIAPIIS module and a feedback instance event response interaction subsystem FIERIS module . The FIAPIIS module and the FIERIS module can be stored in the FIOC memory unit and can be executed by the FIOC processing unit to cause the FIOC to perform consultation realization operations described herein.

The FIAPIIS module can receive the feedback instance consultation realization request from the FICIR . The FIAPIIS module can be executed by the FIOC processing unit to invoke an API call to one or more APIs published in the active feedback instance model API library to establish communication with one or more target feedback instances such as the illustrated target feedback instance . The FIERIS module can be executed by the FIOC processing unit to enable the requesting feedback instance such as the original feedback instance to execute operations of an event response method to communicate with the target feedback instance such as the target feedback instance for consultation purposes to satisfy at least in part the policy request .

Turning now to aspects of a method for consulting among feedback instances in the feedback instance architecture will be described according to an illustrative embodiment. The method will be described with reference to and further reference to . The method begins at operation where the original feedback instance generates the consultation request directed to the PE to request establishment of a feedback instance intercommunication link such as the consultation communications link over which to receive assistance from one or more target feedback instances such as the target feedback instance in the example illustrated in to help the original feedback instance cure one or more deficiencies in a feedback instance model upon which the original feedback instance is based. From operation the method proceeds to operation where the original feedback instance sends the consultation request to the PE .

From operation the method proceeds to operation where the PE receives the consultation request from the original feedback instance . From operation the method proceeds to operation where the PE examines and verifies the consultation request to generate the feedback instance consultation request . From operation the method proceeds to operation where the PE sends the feedback instance consultation request to the FICIR . The PE in some embodiments can generate the feedback instance consultation request after verifying the validity of the consultation request . For example the PE can reference one or more policies regarding permissions for the original feedback instance to consult with one or more different feedback instances such as the target feedback instance . Alternatively the PE in some embodiments can function as a pass through for communications between the original feedback instance and the FICIR . In these embodiments the feedback instance consultation request might be the same as or similar to the consultation request .

From operation the method proceeds to operation where the FICIR examines the feedback instance consultation request to determine if a match exists with one or more APIs associated with the target feedback instance model upon which the target feedback instance is based. If at operation the FICIR determines that a match does not exist the method proceeds to operation . At operation the FICIR maps the feedback instance consultation request to one or more objectives of a target feedback instance model available from the active feedback instance model storage of the feedback instance model repository that can be utilized to cure one or more deficiencies of the original feedback instance .

From operation the method proceeds to operation where the FICIR maps the feedback instance consultation request to an event response pair that is supported by the target feedback instance model to which the feedback instance consultation request was mapped at operation . The event response pair can include an event to which the target feedback instance model subscribes. The event response pair can include an event response to which the original feedback instance model should subscribe.

From operation the method proceeds to operation where the FICIR updates the original and target feedback instance models with an intercommunication plan via an API and or an event. Also if at operation the FICIR determines that a match does exist the method proceeds directly to operation .

From operation the method proceeds to operation where the FICIR directs the FIOC to realize a communication method between the original and target feedback instance models via the feedback instance consultation realization request . From operation the method proceeds to operation where the FIOC retrieves the modified i.e. updated original and target feedback instance models from the active feedback instance model storage of the feedback instance model repository . From operation the method proceeds to operation where the FIOC enables communication e.g. establishes the consultation communications link or enhances communication e.g. extends connectivity of the consultation communications link between the original and target feedback instance models upon which the original feedback instance and the target feedback instance are respectively based.

Turning now to a block diagram illustrating further aspects of the feedback instance architecture will be described according to an illustrative embodiment. The illustrated feedback instance architecture includes the PE the policy repository the FICOR the feedback instance model repository and the FIOC . Each of these components and others will be described in detail below. While connections are shown between some of the components illustrated in it should be understood that some none or all of the components illustrated in can be configured to interact with one another to carry out various operations described herein. Thus it should be understood that and the following description are intended to provide a general understanding of a suitable environment in which various aspects of embodiments can be implemented and should not be construed as being limiting in any way.

In the illustrated embodiment a feedback instance group includes a plurality of feedback instances A B N each of which includes one or more actors A N A N A N respectively. The feedback instance group can generate one or more feedback instance events . Each of the feedback instance events can be generated by one of the plurality of feedback instances A B N in the feedback instance group in response to detection of one or more anomalies. In some cases a single set of anomalies might not be enough for the PE or other decision making system to execute a complete optimization plan. The feedback instance events from the feedback instance group might need or at least might benefit in some way from being coordinated to derive an optimization plan. In order to support dynamic coordination the FICOR and the FIOC will be utilized.

The PE can receive the feedback instance events or data such as the event data associated therewith as illustrated in . In the illustrated embodiment the PE can pass the feedback instance events to the FICOR . In other embodiments the FICOR can subscribe to the feedback instance group to receive all or a portion of the feedback events . In other embodiments the FICOR can create the feedback instance group and can subscribe to two or more events generated by or otherwise associated with the feedback instance group . The FICOR can receive the feedback instance events and can leverage one or more policies such as one or more of the policies retrieved from the policy repository to develop a coordinated optimization plan to optimize interactions among the feedback instances A N in the feedback instance group.

The FICOR includes a FICOR processing unit a FICOR memory unit a FICOR EIS module a method extender subsystem MES module and an optimization resolver subsystem ORS module . The FICOR EIS module the MES module and the ORS module can be stored in the FICOR memory unit and can be executed by the FICOR processing unit to cause the FICOR to perform operations to coordinate and optimize events among feedback instances in a feedback instance group in accordance with embodiments disclosed herein.

The FICOR processing unit can be or can include one or more CPUs configured with one or more processing cores. The FICOR processing unit can be or can include one or more GPUs configured to accelerate operations performed by one or more CPUs and or to perform computations to process data and or to execute computer executable instructions of one or more application programs operating systems and or other software that may or may not include instructions particular to graphics computations. In some embodiments the FICOR processing unit can be or can include one or more discrete GPUs. In some other embodiments the FICOR processing unit can be or can include CPU and GPU components that are configured in accordance with a co processing CPU GPU computing model wherein the sequential part of an application executes on the CPU and the computationally intensive part is accelerated by the GPU. The FICOR processing unit can be or can include one or more FPGAs. The FICOR processing unit can be or can include one or more SoC components along with one or more other components including for example the FICOR memory unit . In some embodiments the FICOR processing unit can be or can include one or more SNAPDRAGON SoCs available from QUALCOMM of San Diego Calif. one or more TEGRA SoCs available from NVIDIA of Santa Clara Calif. one or more HUMMINGBIRD SoCs available from SAMSUNG of Seoul South Korea one or more OMAP SoCs available from TEXAS INSTRUMENTS of Dallas Tex. one or more customized versions of any of the above SoCs and or one or more proprietary SoCs. The FICOR processing unit can be or can include one or more hardware components architected in accordance with an ARM architecture available for license from ARM HOLDINGS of Cambridge United Kingdom. Alternatively the FICOR processing unit can be or can include one or more hardware components architected in accordance with an x86 architecture such an architecture available from INTEL CORPORATION of Mountain View Calif. and others. Those skilled in the art will appreciate the implementation of FICOR processing unit can utilize various computation architectures and as such FICOR processing unit should not be construed as being limited to any particular computation architecture or combination of computation architectures including those explicitly disclosed herein.

The FICOR memory unit can be or can include one or more hardware components that perform storage operations including temporary and or permanent storage operations. In some embodiments the FICOR memory unit can include volatile and or non volatile memory implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data disclosed herein. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store data and which can be accessed by the FICIR processing unit .

The FICOR EIS module can receive and examine the feedback instance events received from the feedback instance group that should be coordinated. The FICOR EIS module also can provide one or more model extension requests to the FIOC to instruct the FIOC to extend a selected set of feedback instances and deliver a finalized optimization plan to the FIOC for execution.

The MES module can determine whether feedback instance model s in the selected set of feedback instances should be extended. If the MES module determines that feedback instance model s in the selected set of feedback instances should be extended the MES module can instruct the FIOC to extend the feedback instance model s via one or more model extension requests . The ORS module can map the feedback instance events collected from the feedback instance group to a coordinated optimization plan and can instruct the FIOC to realize the coordinated optimization plan via a realization request .

The FICOR in some embodiments is implemented as a policy application executable by the PE processing unit of the PE . In other embodiments such as the illustrated embodiment the FICOR is implemented as an external entity that is in communication with the PE .

The illustrated FIOC is located downstream from the FICOR in the feedback instance architecture . The FIOC can respond to the model extension request received from the FICOR EIS module by extending one or more feedback instance models. The FIOC can respond to the realization request received from the FICOR EIS module to realize that is to put into production the optimization plan.

The FIOC can function as a supporting entity to the FICOR . In some embodiments the functionality of the FIOC is combined with the functionality of the FICOR . In other embodiments such as the illustrated embodiment the FIOC is implemented as an external entity that is in communication with the FICOR .

The illustrated FIOC includes the FIOC processing unit the FIOC memory unit a feedback instance extension subsystem FIES module and a coordinated optimization orchestration subsystem COOS module . The FIES module and the COOS module can be stored in the FIOC memory unit and can be executed by the FIOC processing unit to cause the FIOC to perform optimization orchestration operations described herein.

The FIES module can receive the model extension request from the FICOR . The FIES module can be executed by the FIOC processing unit to extend the event scope of the selected set of feedback instances. The COOS module is used to enable the execution of the optimization plan by interacting with all or at least a portion of the participating feedback instances. The FIOC can be implemented as an orchestration application within a service resource orchestrator or can be implemented as an external entity in communication with the orchestrator. When the FIOC is implemented as an external entity to the orchestrator the FIOC should attempt to leverage the existing interface infrastructure of the orchestrator.

Turning now to a method for coordinating multiple feedback instances to determine optimal actions to be taken in the feedback instance architecture will be described according to an illustrative embodiment. The method begins and proceeds to operation where feedback instances such as one or more of the feedback instances A N send the feedback instance events to the FICOR . From operation the method proceeds to operation where the FICOR receives the feedback instance events .

From operation the method proceeds to operation where the FICOR verifies that all related feedback instances have been received for an optimization plan to optimize actions to be taken by a group of feedback instances such as the feedback instance group . From operation the method proceeds to operation where the FICOR determines whether events have been received from all related feedback instances in the feedback instance group . If not the method proceeds to operation where the FICOR continues to wait for events from one or more other related feedback instances and the method returns to operation . After all events from the feedback instance group have been received the method proceeds to operation where the FICOR examines the feedback instance events from all feedback instances in the feedback instance group to determine whether the feedback instance events can be matched to a single actionable optimization plan.

If at operation the FICOR determines that a match does not exist the method proceeds from operation to operation where the FICOR examines and identifies extensibility of one or more feedback instances that might provide additional information responsive to one or more of the feedback instance events . From operation the method proceeds to operation where the FICOR updates feedback instance model s associated with the feedback instances from which the feedback instance events were received in the active feedback instance model storage of the feedback instance model repository . From operation the method proceeds to operation where the FICOR instructs the FIOC to extend the scope via the model extension request of one or more feedback instances identified at operation . From operation the method proceeds to operation where the FIOC retrieves the updated scope for each feedback instance identified at operation and makes one or more adjustments to each feedback instance in runtime. From operation the method proceeds to operation where the extended feedback instances can generate one or more new events. The method can return to operation where the where the FICOR continues to verify that all related feedback instances have been received for the optimization plan. As such the method or at least the aforementioned operations of the method can be dynamic and continuous and thus may repeat as new events are obtained by the FICOR and as new optimization plans are sent to the FIOC to be executed enforced by the set of coordinated feedback instances as appropriate.

If however at operation the FICOR determines that a match exists the method proceeds to operation where the FICOR instructs the FIOC via the realization request to realize the matched optimization plan. From operation the method proceeds to operation where the FIOC communicates an action plan to each participating feedback instance to execute the optimization plan. From operation the method proceeds to operation where the method ends.

Turning now to a block diagram illustrating further aspects of the feedback instance architecture will be described according to an illustrative embodiment. The illustrated feedback instance architecture includes the PE the FIOM FIMOS which includes a FIOM and a FIMOS the feedback instance model repository the FIOC an active feedback instance performance threshold policy AFIPTP repository and an events stats and feedback instance performance repository . Each of these components and others will be described in detail below. While connections are shown between some of the components illustrated in it should be understood that some none or all of the components illustrated in can be configured to interact with one another to carry out various operations described herein. Thus it should be understood that and the following description are intended to provide a general understanding of a suitable environment in which various aspects of embodiments can be implemented and should not be construed as being limiting in any way.

The PE can communicate with the FIOM and the FIMOS . The PE includes the PE processing unit the PE memory unit and the PE module described above. The FIOM and the FIMOS can coordinate adjustment and execution of policy participation level mode PPL mode based upon current feedback instance conditions. Based on traffic conditions computing or network resource conditions energy conditions and priority considerations explicit involvement of policy can be automatically or manually tuned adjusted to a suitable mode. A mode as used herein can represent a degree or level of guidance constraints required interactions and or the like provided by a policy. Alternately or more generally modes may reflect different alternative in any respect policy guidance constraints required interactions and or the like.

The FIOM includes an FIOM processing unit an FIOM memory unit and an FIOM module . The FIOM module can be stored in the FIOM memory unit and can be executed by the FIOM processing unit to cause the FIOM to perform operations to monitor feedback instances in accordance with embodiments disclosed herein.

The FIOM processing unit can be or can include one or more CPUs configured with one or more processing cores. The FIOM processing unit can be or can include one or more GPUs configured to accelerate operations performed by one or more CPUs and or to perform computations to process data and or to execute computer executable instructions of one or more application programs operating systems and or other software that may or may not include instructions particular to graphics computations. In some embodiments the FIOM processing unit can be or can include one or more discrete GPUs. In some other embodiments the FIOM processing unit can be or can include CPU and GPU components that are configured in accordance with a co processing CPU GPU computing model wherein the sequential part of an application executes on the CPU and the computationally intensive part is accelerated by the GPU. The FIOM processing unit can be or can include one or more FPGAs. The FIOM processing unit can be or can include one or more SoC components along with one or more other components including for example the FIOM memory unit . In some embodiments the FIOM processing unit can be or can include one or more SNAPDRAGON SoCs available from QUALCOMM of San Diego Calif. one or more TEGRA SoCs available from NVIDIA of Santa Clara Calif. one or more HUMMINGBIRD SoCs available from SAMSUNG of Seoul South Korea one or more OMAP SoCs available from TEXAS INSTRUMENTS of Dallas Tex. one or more customized versions of any of the above SoCs and or one or more proprietary SoCs. The FIOM processing unit can be or can include one or more hardware components architected in accordance with an ARM architecture available for license from ARM HOLDINGS of Cambridge United Kingdom. Alternatively the FIOM processing unit can be or can include one or more hardware components architected in accordance with an x86 architecture such an architecture available from INTEL CORPORATION of Mountain View Calif. and others. Those skilled in the art will appreciate the implementation of the FIOM processing unit can utilize various computation architectures and as such the FIOM processing unit should not be construed as being limited to any particular computation architecture or combination of computation architectures including those explicitly disclosed herein.

The FIOM memory unit can be or can include one or more hardware components that perform storage operations including temporary and or permanent storage operations. In some embodiments the FIOM memory unit can include volatile and or non volatile memory implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data disclosed herein. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store data and which can be accessed by the FIOM processing unit .

The FIOM in some embodiments is implemented as a policy application executable by the PE processing unit of the PE . In other embodiments such as the illustrated embodiment the FIOM is implemented as an external entity that is in communication with the PE .

The FIOM module can be executed by the FIOM processing unit to monitor performance of one or more active feedback instances such as the feedback instance to detect a possible trigger point for a PPL mode adjustment for one or more actors operating as part of the feedback instance

The FIMOS includes a FIMOS processing unit a FIMOS memory unit a FIMOS EIS module and a participation level resolver PLR module . The FIMOS EIS module and the PLR module can be stored in the FIMOS memory unit and can be executed by the FIMOS processing unit to cause the FIMOS to perform operations to adjust a participation level of one or more actors in one or more feedback instances such as the feedback instance in accordance with embodiments disclosed herein.

The FIMOS processing unit can be or can include one or more CPUs configured with one or more processing cores. The FIMOS processing unit can be or can include one or more GPUs configured to accelerate operations performed by one or more CPUs and or to perform computations to process data and or to execute computer executable instructions of one or more application programs operating systems and or other software that may or may not include instructions particular to graphics computations. In some embodiments the FIMOS processing unit can be or can include one or more discrete GPUs. In some other embodiments the FIMOS processing unit can be or can include CPU and GPU components that are configured in accordance with a co processing CPU GPU computing model wherein the sequential part of an application executes on the CPU and the computationally intensive part is accelerated by the GPU. The FIMOS processing unit can be or can include one or more FPGAs. The FIMOS processing unit can be or can include one or more SoC components along with one or more other components including for example the FIMOS memory unit . In some embodiments the FIMOS processing unit can be or can include one or more SNAPDRAGON SoCs available from QUALCOMM of San Diego Calif. one or more TEGRA SoCs available from NVIDIA of Santa Clara Calif. one or more HUMMINGBIRD SoCs available from SAMSUNG of Seoul South Korea one or more OMAP SoCs available from TEXAS INSTRUMENTS of Dallas Tex. one or more customized versions of any of the above SoCs and or one or more proprietary SoCs. The FIMOS processing unit can be or can include one or more hardware components architected in accordance with an ARM architecture available for license from ARM HOLDINGS of Cambridge United Kingdom. Alternatively the FIMOS processing unit can be or can include one or more hardware components architected in accordance with an x86 architecture such an architecture available from INTEL CORPORATION of Mountain View Calif. and others. Those skilled in the art will appreciate the implementation of the FIMOS processing unit can utilize various computation architectures and as such the FIMOS processing unit should not be construed as being limited to any particular computation architecture or combination of computation architectures including those explicitly disclosed herein.

The FIMOS memory unit can be or can include one or more hardware components that perform storage operations including temporary and or permanent storage operations. In some embodiments the FIMOS memory unit can include volatile and or non volatile memory implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data disclosed herein. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store data and which can be accessed by the FIMOS processing unit .

The FIMOS in some embodiments is implemented as a policy application executable by the PE processing unit of the PE . In other embodiments such as the illustrated embodiment the FIMOS is implemented as an external entity that is in communication with the PE .

The FIMOS EIS module and the PLR module can be executed by the FIMOS processing unit . The FIMOS EIS module can receive from the FIOM one or more events associated with the feedback instance . The PLR module can determine whether the policy participation level of the feedback instance should be adjusted. The PLR module can then map out the level of participation for each actors in feedback instance . The PLR module also can save changes to the participation level in association with the feedback instance model upon which the feedback instance is based in the active feedback instance model storage . The PLR module also can send a policy participation level adjustment request to the FIMOS EIS module for delivery to the FIOC .

The illustrated FIOC is located downstream from the FIOM FIMOS in the feedback instance architecture . The illustrated FIOC includes the FIOC processing unit the FIOC memory unit and a policy level tuner adjuster PLTA module . The PLTA module can be stored in the FIOC memory unit and can be executed by the FIOC processing unit to cause the FIOC to perform operations described herein.

The FIOC processing unit can be or can include one or more CPUs configured with one or more processing cores. The FIOC processing unit can be or can include one or more GPUs configured to accelerate operations performed by one or more CPUs and or to perform computations to process data and or to execute computer executable instructions of one or more application programs operating systems and or other software that may or may not include instructions particular to graphics computations. In some embodiments the FIOC processing unit can be or can include one or more discrete GPUs. In some other embodiments the FIOC processing unit can be or can include CPU and GPU components that are configured in accordance with a co processing CPU GPU computing model wherein the sequential part of an application executes on the CPU and the computationally intensive part is accelerated by the GPU. The FIOC processing unit can be or can include one or more FPGAs. The FIOC processing unit can be or can include one or more SoC components along with one or more other components including for example the FIOC memory unit . In some embodiments the FIOC processing unit can be or can include one or more SNAPDRAGON SoCs available from QUALCOMM of San Diego Calif. one or more TEGRA SoCs available from NVIDIA of Santa Clara Calif. one or more HUMMINGBIRD SoCs available from SAMSUNG of Seoul South Korea one or more OMAP SoCs available from TEXAS INSTRUMENTS of Dallas Tex. one or more customized versions of any of the above SoCs and or one or more proprietary SoCs. The FIOC processing unit can be or can include one or more hardware components architected in accordance with an ARM architecture available for license from ARM HOLDINGS of Cambridge United Kingdom. Alternatively the FIOC processing unit can be or can include one or more hardware components architected in accordance with an x86 architecture such an architecture available from INTEL CORPORATION of Mountain View Calif. and others. Those skilled in the art will appreciate the implementation of the FIOC processing unit can utilize various computation architectures and as such the FIOC processing unit should not be construed as being limited to any particular computation architecture or combination of computation architectures including those explicitly disclosed herein.

The FIOC memory unit can be or can include one or more hardware components that perform storage operations including temporary and or permanent storage operations. In some embodiments the FIOC memory unit can include volatile and or non volatile memory implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data disclosed herein. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store data and which can be accessed by the FIOC processing unit .

The FIOC can respond to policy participation level adjustment requests received from the FIMOS EIS module by executing the PLTA module to tune adjust the policy participation level of the feedback instance . The FIOC can respond to the policy participation level of the feedback instance by retrieving the associated feedback model from the active feedback instance model storage and can interact with actors in the feedback instance to adjust the policy participation level for each actor.

The FIOC can function as a supporting entity to the FIMOS . In some embodiments the functionality of the FIOC is combined with the functionality of the FIMOS . In other embodiments such as the illustrated embodiment the FIOC is implemented as an external entity that is in communication with the FIMOS .

Turning now to a method for selecting feedback instance modes will be described according to an illustrative embodiment. The method begins and proceeds to operation where the FIOM subscribes to and monitors one or more events that might impact a policy participation level of an active feedback instance such as the feedback instance or one or more actors thereof. From operation the method proceeds to operation where the FIOM examines and forwards the event s to the FIMOS .

From operation the method proceeds to operation where the FIMOS maps the event s to a set of policy participation level policies. From operation the method proceeds to operation where the FIMOS determines which participation level the feedback instance should be tuned to and duration of the new participation level. From operation the method proceeds to operation where the FIMOS stores a feedback instance model adjusted in accordance with the participation level determined at operation in the active feedback instance model storage . From operation the method proceeds to operation where the FIMOS directs the FIOC to realize one or more feedback instances and or adjust the feedback instance based upon the adjusted feedback instance model.

One non limiting example of the method will now be described. In this example a first feedback instance can involve a network controller an orchestrator an analytic module and the PE . The first feedback instance can identify compute and network traffic anomalies for a large international bank in conjunction with strict policy rules that have to be followed in order to enforce performance security requirements and guidelines during normal business hours. The rules may not be relaxed in after hour time due to being international in nature. For purposes of this example assume that a financial crisis in one of the nations has caused unusual traffic volumes to withdraw funds. An anomaly is accordingly detected. Since the signature indicates that there is no security threat and the anomaly is really due to the financial crisis security policy does not need to play such a large role in this scenario and therefore the policy participation with respect to the strictness of security enforcement is reduced in this particular case to allow more real time allocation of VM resources to best accommodate the actual situation.

The computer system includes a processing unit a memory one or more user interface devices one or more input output I O devices and one or more network devices each of which is operatively connected to a system bus . The system bus enables bi directional communication between the processing unit the memory the user interface devices the I O devices and the network devices .

The processing unit may be a standard central processor that performs arithmetic and logical operations a more specific purpose programmable logic controller PLC a programmable gate array or other type of processor described herein or known to those skilled in the art and suitable for controlling the operation of the computer system . Processing units are generally known and therefore are not described in further detail herein. The PE processing unit the FIRC processing unit the FIOC processing unit the FICUR processing unit the FIER processing unit the FICIR processing unit the FICOR processing unit the FIOM processing unit the FIMOS processing unit or a combination thereof can include one or more of the processing units .

The memory communicates with the processing unit via the system bus . In some embodiments the memory is operatively connected to a memory controller not shown that enables communication with the processing unit via the system bus . The PE memory unit the FIRC memory unit the FIOC memory unit the FICUR memory unit the FIER memory unit the FICIR memory unit the FICOR memory unit the FIOM memory unit the FIMOS memory unit or a combination thereof can include one or more instances of the memory .

The illustrated memory includes an operating system and one or more program modules . The operating system can include but is not limited to members of the WINDOWS WINDOWS CE and or WINDOWS MOBILE families of operating systems from MICROSOFT CORPORATION the LINUX family of operating systems the SYMBIAN family of operating systems from SYMBIAN LIMITED the BREW family of operating systems from QUALCOMM CORPORATION the MAC OS OS X and or iOS families of operating systems from APPLE CORPORATION the FREEBSD family of operating systems the SOLARIS family of operating systems from ORACLE CORPORATION other operating systems and the like.

The program modules may include various software and or program modules to perform the various operations described herein. The program modules and or other programs can be embodied in computer readable media containing instructions that when executed by the processing unit perform various operations such as those described herein. According to embodiments the program modules may be embodied in hardware software firmware or any combination thereof. The program modules can include the PE module the EIS module the PAS module the MES module the AIS module the FES module the VAS module the FIER EIS module the FIER EDS module the FIRS module the RAS module the FICIR EIS module the APIMS module the ERMS module the FIAPIIS module the FIERIS module the FICOR EIS module the MES module the ORS module the FIES module the COOS module or a combination thereof.

By way of example and not limitation computer readable media may include any available computer storage media or communication media that can be accessed by the computer system . Communication media includes computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any delivery media. The term modulated data signal means a signal that has one or more of its characteristics changed or set in a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared IR and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.

Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to random access memory RAM read only memory ROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer system . In the claims the phrase computer storage medium and variations thereof does not include waves or signals per se and or communication media.

The user interface devices may include one or more devices with which a user accesses the computer system . The user interface devices may include but are not limited to computers servers personal digital assistants PDAs cellular phones smartphones or any suitable computing devices. The I O devices enable a user to interface with the program modules . In one embodiment the I O devices are operatively connected to an I O controller not shown that enables communication with the processing unit via the system bus . The I O devices may include one or more input devices such as but not limited to a keyboard a mouse or an electronic stylus. Further the I O devices may include one or more output devices such as but not limited to a display screen or a printer. In some embodiments the I O devices can be used for manual controls for operations to exercise under certain situations.

The network devices enable the computer system to communicate with other networks or remote systems via a network . Examples of the network devices include but are not limited to a modem a RF or IR transceiver a telephonic interface a bridge a router or a network card. The network may include a wireless network such as but not limited to a Wireless Local Area Network WLAN a Wireless Wide Area Network WWAN a Wireless Personal Area Network WPAN such as provided via BLUETOOTH technology a Wireless Metropolitan Area Network WMAN such as a WiMAX network or metropolitan cellular network. Alternatively the network may be a wired network such as but not limited to a Wide Area Network WAN a wired Personal Area Network PAN or a wired Metropolitan Area Network MAN . The network may be any other network described herein.

Turning now to details of a network are illustrated according to an illustrative embodiment. The network includes a cellular network a packet data network for example the Internet and a circuit switched network for example a public switched telephone network PSTN . The cellular network includes various components such as but not limited to base transceiver stations BTSs node B s or e node B s base station controllers BSCs radio network controllers RNCs mobile switching centers MSCs mobile management entities MMEs short message service centers SMSCs multimedia messaging service centers MMSCs home location registers HLRs home subscriber servers HSSs visitor location registers VLRs charging platforms billing platforms voicemail platforms GPRS core network components location service nodes an IP multimedia subsystem IMS and the like. The cellular network also includes radios and nodes for receiving and transmitting voice data and combinations thereof to and from radio transceivers networks the packet data network and the circuit switched network .

A mobile communications device such as for example a cellular telephone a user equipment a mobile terminal a PDA a laptop computer a handheld computer and combinations thereof can be operatively connected to the cellular network . The cellular network can be configured as a 2G global system for mobile communications GSM network and can provide data communications via general packet radio service GPRS and or enhanced data rates for GSM evolution EDGE . Additionally or alternatively the cellular network can be configured as a 3G universal mobile telecommunications system UMTS network and can provide data communications via the high speed packet access HSPA protocol family for example high speed downlink packet access HSDPA enhanced uplink EUL also referred to as high speed uplink packet access HSUPA and HSPA . The cellular network also is compatible with 4G mobile communications standards such as long term evolution LTE or the like as well as evolved and future mobile standards.

The packet data network includes various devices for example servers computers databases and other devices in communication with another as is generally known. The packet data network can be or can include the network . The packet data network devices are accessible via one or more network links. The servers often store various files that are provided to a requesting device such as for example a computer a terminal a smartphone or the like. Typically the requesting device includes software a browser for executing a web page in a format readable by the browser or other software. Other files and or data may be accessible via links in the retrieved files as is generally known. In some embodiments the packet data network includes or is in communication with the Internet. The circuit switched network includes various hardware and software for providing circuit switched communications. The circuit switched network may include or may be what is often referred to as a plain old telephone system POTS . The functionality of a circuit switched network or other circuit switched network are generally known and will not be described herein in detail.

The illustrated cellular network is shown in communication with the packet data network and a circuit switched network though it should be appreciated that this is not necessarily the case. One or more Internet capable devices for example a PC a laptop a portable device or another suitable device can communicate with one or more cellular networks and devices connected thereto through the packet data network . It also should be appreciated that the Internet capable device can communicate with the packet data network through the circuit switched network the cellular network and or via other networks not illustrated .

As illustrated a communications device for example a telephone facsimile machine modem computer or the like can be in communication with the circuit switched network and therethrough to the packet data network and or the cellular network . It should be appreciated that the communications device can be an Internet capable device and can be substantially similar to the Internet capable device . In the specification the network is used to refer broadly to any combination of the networks shown in and or the network . It should be appreciated that substantially all of the functionality described with reference to the network can be performed by the cellular network the packet data network and or the circuit switched network alone or in combination with other networks network elements and the like.

Based on the foregoing it should be appreciated that concepts and technologies directed to consultation among feedback instances have been disclosed herein. Although the subject matter presented herein has been described in language specific to computer structural features methodological and transformative acts specific computing machinery and computer readable media it is to be understood that the concepts and technologies disclosed herein are not necessarily limited to the specific features acts or media described herein. Rather the specific features acts and mediums are disclosed as example forms of implementing the concepts and technologies disclosed herein.

The subject matter described above is provided by way of illustration only and should not be construed as limiting. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described and without departing from the true spirit and scope of the embodiments of the concepts and technologies disclosed herein.

