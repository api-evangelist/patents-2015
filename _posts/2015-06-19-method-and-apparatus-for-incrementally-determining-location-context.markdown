---

title: Method and apparatus for incrementally determining location context
abstract: Techniques to derive or predict location context for a user of a mobile device include receiving signal data that indicates a set of one or more distinct signal sources from which signals are received at the mobile device for each of multiple different times. The method further comprises determining whether the mobile device is moving outside a specified area at a current time based on the signal data. The method further comprises incrementing a count for a stationary state associated with the set of one or more distinct signal sources at the current time, if the mobile device is determined to be not moving outside the specified area. The method also comprises delivering a service to the mobile device based on the stationary state.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09313322&OS=09313322&RS=09313322
owner: NOKIA TECHNOLOGIES OY
number: 09313322
owner_city: Espoo
owner_country: FI
publication_date: 20150619
---
This application is a continuation of U.S. patent application Ser. No. 14 218 477 filed Mar. 18 2014 which is division of U.S. patent application Ser. No. 12 565 573 tiled Method and Apparatus for incrementally Determining Location Context filed Sep. 23 2009 which is incorporated herein in its entirety.

Service providers e.g. wireless cellular etc. and device manufacturers are continually challenged to deliver value and convenience to consumers by for example providing compelling network services. A popular application is delivering services to a user of a wireless device based on the device s location and many mobile devices include Global Positioning System GPS receivers that provide geolocation of the device to about 30 meter accuracy. While suitable for many purposes there are problems delivering services based on GPS data. One problem is that the power consumption in continuously monitoring on device GPS is high. It is still not possible for most of the mobile phones to continuously trace a user for more than a relatively short period e.g. 3 hours without charging. A second problem is that the storage cost for storing GPS traces is also high. A third problem is that it is still not efficient and effective to derive a context for a user e.g. at or near a usual spot such as caf gym work or home based on determining similarity of different GPS traces. It is desirable to derive context such as work or lunch or recreation to be used to tailor network services. However current techniques for deriving location context from geolocation data are computationally intensive and do not scale well to thousands of users of the service.

Therefore there is a need for an approach to derive or predict location context for a user of a mobile device or both that scales well to many users such as incrementally determining location context.

According to one embodiment a method comprises receiving signal data that indicates a set of one or more distinct signal sources from which signals are received at a mobile device for each of a plurality of different times. The method further comprises determining whether the mobile device is moving outside a specified area at a current time of the plurality of different times based on the signal data. The method further comprises incrementing a count for a stationary state associated with the set of one or more distinct signal sources at the current time if the mobile device is determined to be not moving outside the specified area. The method also comprises delivering a service to the mobile device based on the stationary state.

According to another embodiment a computer readable storage medium carrying one or more sequences of one or more instructions which when executed by one or more processors cause an apparatus to receive signal data that indicates a set of one or more distinct signal sources from which signals are received at a mobile device for each of a plurality of different times. The apparatus is also caused to determine whether the mobile device is moving outside a specified area at a current time of the plurality of different times based on the signal data. The apparatus is further caused to increment a count for a stationary state associated with the set of one or more distinct signal sources at the current time if the mobile device is determined to be not moving outside the specified area. The apparatus is also caused to delivering a service to the mobile device based on the stationary state.

According to another embodiment an apparatus comprises means for receiving signal data that indicates a set of one or more distinct signal sources from which signals are received at a mobile device for each of a plurality of different times. The apparatus further comprises means for determining whether the mobile device is moving outside a specified area at a current time of the plurality of different times based on the signal data. The apparatus further comprises means for incrementing a count for a stationary state associated with the set of one or more distinct signal sources at the current time if the mobile device is determined to be not moving outside the specified area. The apparatus further comprises means for delivering a service to the mobile device based on the stationary state.

According to another embodiment an apparatus comprising at least one processor and at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause the apparatus to receive signal data that indicates a set of one or more distinct signal sources from which signals are received at a mobile device for each of a plurality of different times. The apparatus is also caused to determine whether the mobile device is moving outside a specified area at a current time of the plurality of different times based on the signal data. The apparatus is also caused to increment a counter for a stationary state associated with the set of one or more distinct signal sources at the current time if the mobile device is determined to be not moving outside the specified area. The apparatus is also caused to initiate delivery of a service to the mobile device based on the stationary state.

According to another embodiment a method comprises facilitating access to including granting access rights for a user interface configured to receive signal data that indicates a set of one or more distinct signal sources from which signals are received at a mobile device for each of a plurality of different times. The method further comprises facilitating access to including granting access rights for a user interface that delivers a service to the mobile device based on a stationary state associated with a set of one or more distinct signal sources at a time when the mobile device is determined to be not moving outside a specified area based on the signal data.

Still other aspects features and advantages of the invention are readily apparent from the following detailed description simply by illustrating a number of particular embodiments and implementations including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments and its several details can be modified in various obvious respects all without departing from the spirit and scope of the invention. Accordingly the drawings and description are to be regarded as illustrative in nature and not as restrictive.

A method and apparatus for incrementally determining location context are disclosed. In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent however to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention.

To address this problem instead of predicting the exact geo coordinates where a user is about to go system of introduces the capability to predict the location state that the user is probably transiting to or from. As used herein each location state for a user refers to a set of one or more anchoring points regions in space and the context is gleaned from those anchoring points or user comments or communications when associated with those anchoring points. The prediction task results in a sequence of predicted location states for a given time window after a query is made. By solving this problem accurately and efficiently a set of new location based services LBS are enabled which can smartly recommend information to a user based on his her current and future location states.

In certain embodiments an Incremental Location State Acquisition and Prediction iLoc framework is provided to address the prediction problem by utilizing the sensor information on a user s mobile device. ILoc incrementally learns the location states by constantly monitoring the signal environment of the mobile device. Learning and prediction modules are tightly integrated into one single framework. As a result iLoc is capable of updating location states continuously and simultaneously predicting future location states.

As shown in the system comprises mobile user equipment UE having connectivity to server host and server host via a communication network . By way of example the communication network of system includes one or more networks such as a data network not shown a wireless network not shown a telephony network not shown or any combination thereof. It is contemplated that the data network may be any local area network LAN metropolitan area network MAN wide area network WAN a public data network e.g. the Internet or any other suitable packet switched network such as a commercially owned proprietary packet switched network e.g. a proprietary cable or fiber optic network. In addition the wireless network may be for example a cellular network and may employ various technologies including enhanced data rates for global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi satellite mobile ad hoc network MANET and the like.

The UE is any type of mobile terminal or portable terminal including a mobile handset station unit device multimedia tablet Internet node communicator desktop computer laptop computer Personal Digital Assistants PDAs or any combination thereof. It is also contemplated that the UE can support any type of interface to the user such as wearable circuitry etc. . The UE communicates with the network using one or more wireless links . An example mobile terminal is described in more detail below with reference to . The server host or server host is any mobile or fixed terminal and each communicates with the network through a network link that may be wired or wireless.

The mobile UE includes a location context client process and the server host includes a location context service process to determine the location context of the UE . This location context is then provided to other network applications such as location based service process on server host . The location context service employs a database with one or more user state records described in more detail below.

By way of example the UE and host or host communicate with each other and other components of the communication network using well known new or still developing protocols. In this context a protocol includes a set of rules defining how the network nodes within the communication network interact with each other based on information sent over the communication links. The protocols are effective at different layers of operation within each node from generating and receiving physical signals of various types to selecting a link for transferring those signals to the format of information indicated by those signals to identifying which software application executing on a computer system sends or receives the information. The conceptually different layers of protocols for exchanging information over a network are described in the Open Systems Interconnection OSI Reference Model.

Communications between the network nodes are typically effected by exchanging discrete packets of data. Each packet typically comprises 1 header information associated with a particular protocol and 2 payload information that follows the header information and contains information that may be processed independently of that particular protocol Often the data in the payload for the particular protocol includes a header and payload for a different protocol that is said to be encapsulated in the lower layer protocol.

Processes executing on various devices such UE and server host or server host often communicate using the client server model of network communications. The client server model of computer process interaction is widely known and used. According to the client server model a client process sends a message including a request to a server process and the server process responds by providing a service. The server process may also return a message with a response to the client process. Often the client process and server process execute on different computer devices called hosts and communicate via a network using one or more protocols for network communications. The term server is conventionally used to refer to the process that provides the service or the host on which the process operates. Similarly the term client is conventionally used to refer to the process that makes the request or the host on which the process operates. As used herein the terms client and server refer to the processes rather than the hosts unless otherwise clear from the context. In addition the process performed by a server can be broken up to run as multiple processes on multiple hosts sometimes called tiers for reasons that include reliability scalability and redundancy among others. A well known client process available on most nodes connected to a communications network is a World Wide Web client called a web browser or simply browser that interacts through messages formatted according to the hypertext transfer protocol HTTP with any of a large number of servers called World Wide Web WWW servers that provide web pages.

According to the illustrated embodiment location context for the UE is derived at least in part from signals received from distinct signal sources such as signals that form wireless links . As used herein the term stationary wireless transmitter refers to any wireless transmitter used for wireless communications which persists in one location for an extended period of time that is long compared to the time for determining the location context of a mobile terminal e.g. persists in one location for more than about a week. Although various embodiments are described with respect to wireless fidelity WiFi access points and global system for mobile communications GSM base stations it is contemplated that the approach described herein may be used with other wireless communication transmitters such as any of the transmitters used for network communications described with reference to communications network .

According to an illustrated embodiment the location context client continuously samples the signal fingerprints from a user s mobile terminal . At each fixed sampling time interval e.g. 30 seconds it samples the signals received from all wireless transmitters in range and sends data indicating the transmitters of those signals to the location context service . For example two signal fingerprints vectors are sampled the GSM cell identifiers and the WiFi access point identifiers e.g. a service set identifier SSID which is the name of a wireless local area network WLAN . The signal fingerprints are sent to the location context service in a signal data stream of one or more data packets.

Any method may be used to indicate the wireless transmitter identifiers IDs in the signal data field . For example in some embodiments the code for the letters and numerals of each ID are explicitly included. In some embodiments the identifiers are of variable length are hashed to a fixed length number of bits. In some embodiments a binary vector is defined with a vector position for each wireless transmitter encountered with vector size increasing over time. A zero in a vector position indicates the corresponding transmitter is not in range of the UE at a particular time while a one indicates it is in range. In some embodiments the vector is included in the signal data field . In some embodiments a list of the non zero positions of the vector is indicted in the signal data field . The vector may be formed at the location context client before transmission or by the location context service upon receipt. In general the contents of a single signal data field at time interval i is a set represented by vector vi of one or more wireless transmitter identifiers e.g. for 1 where Ki is the number of wireless transmitter IDs received at the mobile terminal at time interval i.

While mobile terminal is not moving substantively e.g. not moving outside a limited or otherwise specified area the identifiers indicated by successive signal data fields are similar changing slightly for example if one or more WiFi access points powers up or powers down or the user moves to different locations within an apartment . When mobile terminal is moving substantively however the identifiers indicated by successive signal data fields change more dramatically and are therefore less similar. When a mobile terminal is frequently not moving with similar sets of transmitter IDs those similar sets define a stationary state e.g. a limited area where the user of the mobile terminal has a tendency to stay. Transition states are defined by a fixed transition time interval tick an initial stationary state From State and a final stationary state To State and include states in which the initial and final states are the same stationary state. Thus a stationary state that persists for the tick which most stationary states do is a member of the set of all possible transition states. In some embodiments the transition time interval tick is the same as the sampling time interval for determining whether a mobile terminal is moving. In general however the tick e.g. about 10 minutes is longer than the sampling time interval e.g. 30 seconds to 2 minutes .

The user input is anything input by the user that is passed to the location context server including any response to prompts for identifying the user s current location to anything the user does or says at the mobile device including applications opened and closed. For example in some embodiments when a primary stationary state is identified as described in more detail below the user is prompted to label the user s current location with a word or phrase that can be used to tag the associated stationary state. In some embodiments the user s messages or voice calls are monitored while the user is in one of the primary stationary states and the words are mined to derive a context for the stationary state. For example if the user repeatedly says or writes text indicating working out aerobics exercise etc. then it is deduced that the stationary state is associated with a gym.

The annotation module takes the user input data forwarded by the location context client and determines a notation label or tag or some combination to attach to a stationary or transition state determined by the learning module . The annotation component is responsible for connecting the user tagged states to the learned states. Thus the output states information can have more semantic information attached e.g. at home or at work . In embodiments using a passive mode a server can listen to the content pushed out from a mobile device e.g. micro blogging . Based on the content the location tagging information can be derived. In embodiments using an active mode the user is prompted or polled for information. For example these embodiments prompt the user to confirm different location tags when the system believes the user is in a stationary state of some importance. The system only needs to ask very few questions to the user which makes the polling approach very feasible and less annoying to the user. In some embodiments the annotation module is omitted.

In some embodiments the signal data stream includes an occasional GPS geo location that can be used to determine which particular location is associated with the stationary state and further provide context. For example a street address can be determined for the gym at or near the GPS location associated with the stationary state tagged with the gym label. In some embodiments the location context service module sends a request to the location context client to capture a GPS position and include it in the signal data stream for example while the mobile terminal is determined to be in a stationary state. By using only occasional GPS geo locations the power memory and computational resources of the mobile terminal are not as heavily burdened as prior approaches that depend on GPS for predicting future user locations.

The learning module includes a movement detection module an incremental state learning module and a database with stationary states data structure for each user and transition states data structure for each user. Thus database is an embodiment of database while user state records are implemented as stationary states data structure and transition states data structure . The functions provided by each of these modules and data structures are described in more detail in the following diagrams and flowcharts.

The user ID tag context field holds data that indicates the user each user is expected to have different stationary and transition states and patterns of change . In some embodiments the user ID tag text field includes data that indicates a tag provided by the user e.g. work or context determined by other means e.g. from analysis of messages or GPS geo location.

The state ID field holds data that provides a unique identifier z for the stationary state e.g. an index into the stationary states data structure or a sequence number that restarts for each user or mobile device.

Each transmitter set field e.g. transmitter set field holds data that indicates one or more distinct signal sources such as wireless transmitter IDs received simultaneously at the user s mobile terminal e.g. the value of one vector vi received when the service determines that the mobile terminal is not. Each count field e.g. count field holds data that indicates the number of sample intervals for which that particular set of transmitter IDs was received simultaneously. A different but similar set of transmitter IDs determined to correspond to the same stationary state is included in a different transmitter set field e.g. transmitter set field with its corresponding count field e.g. 

The wireless transmitters indicated may be stationary or non stationary transmitters. Using non stationary transmitter e.g. Bluetooth involves a step to localize these transmitters. In some embodiments mined stationary states from stationary transmitters e.g. GSM WiFi are used to partition the non stationary transmitters e.g. Bluetooth or other ad hoc networks . From these partitions non stationary transmitters can be identified which have good location sense e.g. always appears when a user is in the office state or context e.g. in a particular automobile . After this step the localized non stationary transmitters are used in some embodiments for the purpose of determining stationary states or transition states or associated contexts or some combination.

As described in more detail below a determination is made whether two different sets of distinct signal sources e.g. transmitter IDs are similar and in some embodiments this determination is made based on the posterior probability probability based on past history of finding a particular transmitter ID given a particular stationary state. This probability is represented by the symbols P ID z . This value can be determined by sorting the transmitter IDs in the fields and adding the counts for each set in which the ID appears and dividing by the sum of the counts in the count fields . Thus an ID that appears in every set will have a probability of 100 while an ID that appears in a few sets will have a smaller probability. In some embodiments the probability for each transmitter ID in the stationary state is updated when the stationary state record is updated and the updated value is stored in the probability field .

The user ID field holds data that indicates the user each user is expected to have different stationary and transition states and patterns of change . The From State ID field holds data that indicates the unique identifier z1 for the stationary state at the beginning of the time tick. The To State ID field holds data that indicates the unique identifier z2 for the stationary state at the end of the time tick.

Each time context field e.g. time context field holds data that indicates a temporal feature such as weekend or workday morning or afternoon or night associated with the beginning of the time tick. Several temporal features can be defined. A temporal feature has a fixed number of domain values which represent some semantic concepts of time. For example a feature can have morning afternoon evening as its domain values. In Table 1 a set of example temporal features are listed which are used in an example embodiment. Each temporal feature has a unique ID each value of a feature also has a unique ID that serves as a bin into which data is accumulated. In the illustrated embodiment for purposes of illustration very general features are defined. It is anticipated that more domain specific features can be easily added in other embodiments.

Each mean duration field e.g. mean duration field holds data that indicates mean duration in a transition state. Any method may be used to indicate the mean duration. In some embodiments the mean duration field includes a count of how many occurrences of the transition in the current time context are observed so that duration can be updated by discounting the latest observed transition duration by it relative contribution to the overall count. Each STD duration field e.g. STD duration field holds data that indicates a standard deviation of durations to accomplish a transition state. Any method may be used to indicate the STD duration. In some embodiments keeping the number of duration observations in the mean duration field the STD duration field indicates a sum of durations squared which can be updated with each new duration squared. The standard deviation can be computed from the sum of the durations squared along with the number of observations and mean value the latter two indicated in the mean duration field .

A particular transition state can be observed at different times and thus can be associated with more than one time context. Thus in some embodiments a different temporal feature value is included in a different time context field e.g. field with its corresponding mean duration field e.g. and STD duration field

As described in more detail below a determination is made of the probability of a different transition state given a current transition state and previous distributions of changes among transition states. Thus in some embodiments the transition state record includes the prior state and count field . The prior state and count field holds data that indicates the transition state e.g. za to zb observed just before the transition state z1 to z2 indicated by fields and . The prior state and count field also includes data that indicates how many times that previous state e.g. za to zb was observed just prior to the current transition state. This data from every transition state record can be used to determine the posterior probability of distributions among different transition states. That data can be fit with a mathematical model in some embodiments such as a multinomial fit well known in the art.

Although records are shown above as contiguous blocks of data with particular fields in a particular order for purposes of illustration in other embodiments one or more fields or records or portions thereof may be arranged in the same or different order on the same or different portions of a database on one or more network nodes.

In step current data in the signal data stream is received. For example signal data in signal data stream is received from mobile terminal of a particular user. In step the mobile terminal of the user is classified as moving or not moving at the current time. In an illustrated embodiment step is performed based on determining similarity of transmitter IDs at the current and a previous time as described in more detail below with reference to . In some embodiments steps and are performed by the movement detection module of the learning module .

In step it is determined whether the mobile terminal is currently moving based on the classification performed in step . If not then in step a stationary state record is updated. In an illustrated embodiment step is performed based on the posterior probability of finding the transmitter IDs in a particular state as described in more detail below with reference to . After the stationary state is updated or if it is determined in step that the mobile terminal of the user is currently moving then in step data for a transition state of the user is updated. In an illustrated embodiment step is performed based on the posterior probability of a transition state duration for a given temporal feature as described in more detail below with reference to . In some embodiments step and step and step are performed by the incremental state learning module .

In step it is determined whether there is sufficient historical data collected to make predictions of future transition states. For example in some embodiments different movements are expected on different days of the week or at least between weekends and non weekends so that data over a significant portion of a week such as about three days to about five days are deemed sufficient to make predictions. In other embodiments other durations are sufficient. For example for emergency or military workers one day may be considered sufficient to make predictions. Step includes determining whether there is any desire for predicting future states e.g. because an external application has requested a prediction out to a certain query time. If there is no request from any external application for prediction of a future state then in some embodiments step determines that there is not sufficient data for a prediction.

If data is not sufficient to make predictions then in step a service is delivered to a user based on the current or most recent transition state or stationary state. For example an external application queries the location context service through application API for the most recent stationary state or the transition state that is based on the most recent stationary state and delivers a coupon to the user s mobile terminal based on that state.

If there is sufficient data to make predictions then in step zero or more predictions of future transition states are made including any transition states that maintain the same stationary state. In an illustrated embodiment step is performed by determining the most probable transition state at a future time based on the posterior probability of one or more transition states changing to a different transition state during a tick as described in more detail below with reference to . In some embodiments step and step are performed by the state prediction module .

If it is determined in step that conditions are satisfied for ending the determination of current and future states the process ends. Otherwise the process continues at step .

In step a current window is defined of one or more contiguous signal data fields from the signal data stream ending at the current time. In step a previous window is defined having the same number of contiguous signal data fields but ending at a time earlier than the current time. Each window therefore has w signal data fields. In some embodiments the two windows overlap and include some signal data fields in both windows. In an illustrated embodiment the previous window defined in step ends on the last signal data field before the first signal data field of the current window defined in step . In some embodiments each window includes only one signal data field.

In step a similarity measure is determined for the signal data fields in the two windows. Any similarity measure may be used. In an illustrated embodiment using GSM and WiFi streams the similarity function is defined using cosine similarity commonly used by many information retrieval systems. For the two time windows the observations are grouped into 2 vectors v1 and v2 respectively. Where i is an index for the current sample time the current window signal v1 vi vi 1 . . . vi w and the previous window signal v2 vi w 1 vi w 2 . . . vi 2w. The cosine similarity can then be defined by Equation 1. 1 2 1 2 1 

In step the similarity of the two windows is compared to a movement threshold . If the similarity is greater than the threshold then in step the classifier determines that the mobile terminal is not moving. Otherwise in step the classifier determines that the mobile terminal is moving. After classification the process ends and control passes to step of process .

In step it is determined whether there is another stationary state to compare to the current vector vi. If not then in step a new stationary state based on the vector vi is added to the stationary states data structure e.g. as a new stationary state record . For example the very first vector vi when the mobile terminal is not moving is added as the first filed in the first stationary state record . A stationary state ID z is formed and stored in field the wireless transmitter IDs in vi are stored in field and a count of 1 is stored in field . The probability field is updated for a 100 probability of finding each transmitter ID in vi given stationary state z. The update process is then complete and control passes to step in to update a transition state.

If another stationary state exists then in step the stationary state record for that stationary state z is retrieved. In step the probability P z vi is determined that the next stationary state is the stationary state given the current vector vi of transmitter IDs.

In step it is determined if that probability P z vi is greater than a cluster threshold . If so then in step the stationary state record is updated i.e. the current vector is added to the cluster of transmitter ID sets associated with the stationary state. In an example embodiment the cluster threshold is a 10 probability. Thus is this embodiment a probability of the current state z given the current vector vi greater than 10 causes the current state to be updated to include the set of transmitter IDs in vector vi.

In step the stationary state record is updated. For example the vector vi is matched to one of the sets of transmitter IDs in transmitter set field . If an exact match is found then the associated count is incremented. If not then a new transmitter set field is added to the record with the exact set of transmitter IDs in vector vi and its associated count field is set to indicate . In some embodiments probability field is also updated to indicate the new values for P ID z . The update process then ends and control passes to step .

If it is determined in step that the probability P z vi is not greater than the threshold then control passes back to step described above to determine if there is another stationary state record already in the database.

In an illustrated embodiment in step the probability P z vi is estimated based on the individual probabilities of each transmitter ID of vi given the stationary state as found in field of the stationary state record. Essentially in step the incremental state learning module computes the posterior distribution of P z vi . Each input can be decomposed into a set of feature value pairs also called attribute value pairs. For example a WiFi signal input at time ti can have a set of Ki WiFi IDs represented as IDk k 1 to Ki and can be treated as a binary feature. The posterior distribution can be estimated as given by Equation 2. 2 where Z is the number of stationary states in the set Z. The conditional independent assumption that P vi z P IDk z is similar to the Naive Bayes NB condition. It is a reasonable assumption since sensor features e.g. WiFi SSIDs very often are independently installed. This assumption works when each P IDk z is not equal to zero otherwise the likelihood probability for the input vector Pr vi z becomes 0. This is handled using two different considerations. In a first scenario if a large portion e.g. 70 of the transmitter IDs in a input vector vi are missing from a cluster z then the likelihood probability for that cluster P z vi becomes 0. In the second scenario only a small portion of the terms in the input vector are missing given a stationary state z. Each of the missing terms IDk is assigned with a small probability. This way the overall likelihood will remain non zero. In experiments described in more detail below each missing IDk is assigned a value equal to a reciprocal of the size of stream inputs observed so far.

Thus in the illustrated embodiment to evaluate Equation 2 in step the next IDk in vi is obtained. In step it is determined whether the P IDk z 0 e.g. because that particular wireless transmitter ID has not before been observed in the current state z. If so then in step a small non zero value is assigned to the P IDk z e.g. the reciprocal of the size of the signal data stream up to the current time. In step it is determined if vi includes less that 70 of the transmitter IDs already detected in stationary state z. If so then control passes to step to set the value of P z vi 0 to ensure that the record for the current stationary state z is not updated.

If it is determined that P IDk z is not equal to zero in step or that vi includes 70 or more of the transmitter IDs in z then control passes to step to determine if there is another IDk in vi. If so control passes back to step to get the next IDk in vi. Otherwise P IDk z is non zero for all k 1 to Ki and Equation 2 can be evaluated. In step P z vi is determined using Equation 2 which is a function of the P IDk z for k 1 to Ki.

Given the time and transitional information the probabilities of the next transition state given the previous transition state P si 1 si are updated using the temporal features and past observations according to Equation 3. 1 1 1 . . . 3 where represents the time duration for staying in si. A set of B temporal features is obtained 1 . . . B . The temporal feature value pairs are not allowed to include each other as described in more detail below with reference to a precedence graph and thus they can be assumed to be conditionally independent.

To allow the assumption of conditional independence the dependencies are removed using a precedence graph. Given a time instance ti it is possible to have multiple matching temporal feature value pairs. It is desirable to select only those that are discriminative or important. The precedence graph encodes the importance relationships. The graph defines a partial order for all the temporal feature value pairs. is a diagram of precedence for multiple temporal features according to one embodiment. The precedence graph has a node for each value of each feature. The nodes for the values for the first feature are morning node representing B1 from Table 1 afternoon node representing B2 and night node representing B3. The nodes for the values for the second feature are weekend node representing B4 and non weekend node representing B5. The nodes for the values for the third feature are weekend morning node representing B6 weekend afternoon node representing B7 and weekend night node representing B8. The nodes for the values for the fourth feature are vacation node representing B9 and non vacation node representing B10. The nodes above dominate connected nodes below e.g. are more useful descriptions that include and replace the less useful description.

With the precedence graph the time instance ti can be better characterized. Table 2 illustrates the process of extracting the time features.

With the assumption of time feature independence Equation 2 can be expanded using Equation 3. 1 . . . 3 To estimate the values of P s si b first the probability P si si b also known as survival probability is estimated. The survival probability means the probability that the subject stays in the same transitional state si at the next time tick. A normal distribution with mean and standard deviation is used to model a given observed distribution of duration values from as given by Equation 4. 1 4 

An example illustrates the process. It is assumed for purposes of illustration that the subject is in a transition state s1 at time ti. From the past data for a time feature value of j e.g. TF1B1 Morning it is known that the subject transitions to another state s2 s3 etc. in 20 minutes on average i.e. 20 with standard deviation of 5 minutes i.e. 5 . If the subject has already stayed in s1 for 25 minutes the probability of remaining in s1 reduces to 16 which also means that the probability of changing to another transition state is 84 . Knowing the survival probability the total probability of going to other transitional states P s si si b is known as the remaining probability 1 survival probability. Depending on the meaning of si probability of transiting to other transitional states is computed differently. In a first situation si represents moving from one stationary state z1 to a different stationary state z2. Since the destination is specified P s si si b represents the probability of reaching z2 i.e. s z2 z2 . In a second situation if si represents staying in a stationary state then P s si si b represents the total probability of changing to other transitional states given by Equation 5 5 

If it is known that si is about to transit to sq the duration of staying at si becomes irrelevant and hence P s sq si b equals to P s sq si b which can be modeled by a multinomial distribution fit to historical data. The parameters of the distribution can be maintained in the database e.g. in one or more transition state records when new observations arrive. Thus in process depicted in the most recent stationary state z is determined in step . In step it is determined if P z is greater than the minimum support 5 min . If not a transitional state from this stationary state is not sufficiently important and the process ends without updating a transitional state. Otherwise the duration is incremented by the tick time e.g. 10 minutes . In step it is determined whether the mobile terminal is moving based on the moving classification received from the movement detector. If so then the From State z1 is set equal to the last stationary state z. The precise transition state is unknown because the mobile terminal has not yet arrived at the To State and the process ends.

If it is determined in step that the mobile terminal is not moving then in step the To State z2 is known as the current stationary state z and is set equal to that value. In step it is determined whether the From State has been set. If not z1 is null and control passes to step to set the current transition state si to the self transition with the From State the same as the To State z2 both equal to z. If the From State had been set then z1 is not null and in step the transition state si is set to the transition from state z1 to z2 z. The From State z1 is set to null. In either case control passes to step to update the transition state si with duration current time feature . In some embodiments the duration is restarted e.g. set to zero thus a self transition will always have duration equal to the tick time. In some embodiments the self transition duration is not reset to zero until the mobile terminal is classified as moving again.

In step the probability of the next transition state given the current transition state P s si is determined to support predictions. Then the process ends and control passes to step of process in .

In the illustrated embodiment step includes steps to step . In step the mean and standard deviation of duration in the transition state si for time feature is determined e.g. extracted from field and field in transition state record . In step the survival probability P si si is determined based on and e.g. using Equation 4. In step it is determined whether the current state si is a self transition state in which z1 z2. If not then in step the probability of returning to the most recent stationary state not transitioning is determined as the remaining probability 1 P si si and the process ends.

If it is determined in step that the current state si is a self transition state in which z1 z2 then duration does not matter and control passes to step to determine the likely transitions to different stationary states based on historical distribution of transition state changes. For example a multinomial distribution is fit to the historical data based on the prior state and counts in field in each transition state record . This distribution is used to apportion the remaining probability 1 P si si among the other possible transition states sq where q i and the process ends.

The first order Markov assumption is reasonable since in the practical situations the locations where the mobile terminal is about to go are highly associated with the current location but less so for the previous locations. Since an efficient process for computing Pr si 1 si has been described above in step the prediction task becomes feasible. The prediction task in process is separated into two sub tasks. The first task in step is to predict the most probable transitional state si at current time ti. The second task in step is to predict the most probable state sequence for the future time window x.

In step there are two possible scenarios considered. In the first scenario at the point of prediction ti the movement detection module does not detect any movements and the incremental state learning module indicates one of the stationary states zi. Therefore the transitional state represents a self transition si zi zi . In the second scenario the movement detection module reports the mobile terminal is on the move at the query time ti and the final stationary To State z2 is unknown so si is also unknown. The last self transitional state is known at a previous time t0 and is represented as s0. In this case the prediction starts from the last self transitional state. The time interval from the last stationary state is made discrete into a set of time ticks e.g. 10 minutes each . Based on the first order Markov assumption the most probable transition is assumed at each step which is an implementation of the well known Viterbi algorithm to compute the most probable transitional state at query time ti. The Viterbi algorithm is a dynamic programming algorithm for computing the Viterbi path which corresponds to a sequence of transitional state sequence with maximum probability. At query time ti there are m time ticks from last stationary state. The best transition state at time ti has a probability of P max P sm . The states at each earlier time tick j can be defined as P sj max P sj sj 1 . For the starting state s0 the following is set P s0 z0 z0 1 and P s0 z0 z0 0 since it starts from a self transition in a known stationary state z0. In current time ti is simplified as current time t and si is represented as St.

Thus in step the most recent stationary state z0 and the associated time t0 are determined. In step it is determined if the movement detector has classified the mobile terminal as moving. If not then si z0 z0 and step is complete.

If it is determined in step that the movement detector has classified the mobile terminal as moving then in step the number of time ticks since the last stationary state is determined using Equation 7. 0 tick 7 

In step the most probable transition state is determined at each time tick e.g. j 1 to m according to Equation 8. max 1 for 1 to 8 

Where max is an operator that returns the maximum value of a set of values indicated in the argument. For a given transition state sj 1 of duration and time feature there is a finite probability of remaining in the same transition state and a finite or zero probability of changing to each of one or more different transition states. These state are represented in Equation 8 as sk k 1 to S the total number of transition states . The max operator compares all these probabilities many of which are zero and selects the most probable one as sj. At the last time step the most probable current transition state si St is computed and step is complete.

In step the entire Viterbi path into the future is returned not just the transition state at the end time tX. Given the query end time tX the time is divided from the last known stationary state z0 or the current transition state si again into a discrete number represented by the number X of time ticks e.g. 10 minutes and output the transition state sequence with the maximum probability. Thus in step the number X of ticks is determined using Equation 9. 0 tick 9 

And in step the most probable sequence of transition state is determined at each time tick e.g. j 1 to X according to Equation 8 above.

The complexity of the system represented by the processes depicted in through is estimated here. As determined in the experiments described in more detail below the complexity is very manageable and scales well to a large number of users. Thus a reasonable number of servers and hosts can service a large number of location context users.

In terms of storage complexity since the set of transitional states S consist of all possible pair of stationary states space on the order of Z indicated as O Z is useful. To maintain the transitional states up to all the pair wise transitional behavior from all the transitional states P sk si j would be useful. That involves O S space. If there are B temporal feature value pairs the overall storage requirement is bounded by O B S . For example if 10 stationary states exist there may be 100 possible transitional states and 10 000 possible pair wise transitions. Fortunately in practice many of the transitional states are not possible e.g. from work directly to vacation hotel which drastically reduces the number of pair wise transitions. Therefore the models can be efficiently stored.

In terms of computational complexity for every sensor input v that goes through the incremental state learner module the movement detection module uses ON time for similarity computations. During the state mining process a hash table is built on the transitional states S and possible pair wise changes among them. It takes O log B S on average to update the models. Therefore for each input the cost is O v O log B S . If the size of each input is small the movement detection has approximately constant cost. Therefore the cost of processing n stream inputs is O n log B S . For the large number of inputs and small number of transitional states the overall complexity is almost linear with number of inputs.

The overall complexity of the prediction module depends on how many pair of the transition states are involved between two time ticks. In the worst case it can be up to S 2. Hence the worst case complexity is O m S . In practice not all the transition states between two time ticks are possible because of the time constraints which is especially true when the number of time ticks X is small. Therefore the prediction process is expected to be very efficient when the prediction time window is small e.g. 1 hour but less efficient when it is big e.g. 1 day or 1 week .

Extensive experiments with certain embodiments show that the quality of the location states learned by iLoc is better than the quality of the other known approaches. It is also demonstrated that when learning processes of other approaches failed to produce reasonable predictions iLoc still provides good forecasts. As for efficiency iLoc passes the data only once whereas learning processes of other approaches require multiple iterations. In fact iLoc does not require caching any data records on the mobile device which fits well with many data stream processing models.

In the experiment certain embodiments were implemented using Python. The run time reported in these embodiments are measured from a P4 2 GigaHertz GHz 1 GHz 109 Hz 1 Hz 1 cycle per second PC with Linux operating system OS . For comparisons a Latent Dirichlet Allocation LDA model and a hidden Markov model HMM are also implemented. The LDA and HMM models are generated by utilizing various statistical tools from MATLAB of MATHWORKS of Natick Mass.

Although LDA has shown very good performance in text mining domains there are a few problems when applied to location context. The first problem is that LDA does not consider time dependencies. Each record document is assumed to be independent or interchangeable. Hence LDA cannot be directly used for predicting future location states. The second problem is that LDA does not have the semantic concept of stationary states which represent the places that a user stays. In a LDA model a WiFi source encountered while moving will appear in both the starting and final stationary states which leads to poor clustering performance. Furthermore it is difficult to incrementally update the LDA model especially in deciding the number of clusters and estimating the parameters. Although other non model based clustering algorithms like K means or hierarchical agglomerative clustering HAC can also be applied they have been shown less accurate than model based methods and these non model based methods also suffer from similar problems to those of LDA.

HMM is also a generative model such that each observation is generated by a latent state variable. The latent state at a time point also depends on its previous latent state. The parameters in the HMM can be estimated by using Baum Welch algorithm which is a generalized expectation maximization GEM algorithm. Although modeling state transition is part of HMM the states do not physically correspond to the location states. This leads to poor performance in predicting future movements. For HMM the observation sequence is not available at the point of prediction. For example only given the first records it is desirable to predict the transition between the two location states. Without providing future observations HMM is very unlikely to predict the transition.

The experiments employ GSM and WiFi sensor data because these two types of data have clear location sense and are widely available. Experimental data was obtained by continuously monitoring 3 users for a period of 66 days.

A data collection client serving as location context client is implemented using Python for S60 and runs on S60 series mobile phones from NOKIA of Espoo Finland. The client periodically uploads the data to a server. The overall service is also known as NOKIA Simple Context service. is a diagram of location context data at a client process according to one embodiment. In the illustrated embodiment shows a screen capture of the client running on a N95 mobile phone from NOKIA. The client is highly customizable with the capabilities of monitoring multiple sensors GSM WiFi GPS Bluetooth etc. at the same time. One interesting feature of the client is an adaptive GPS which uses the same movement detection module described above to control the GPS sensing. It can smartly turn on the GPS when the device is on the move and switch it off otherwise. Although the GPS data is used to geo tag the WiFi and GSM signal sources in the certain embodiments involved in the experiments it is anticipated that other embodiments further utilize the GPS data in the incremental state learning module .

Once the data sent from the client is stored on the server various APIs e.g. API can be used to retrieve download the data. Although the embodiments employed in the experiments are built on a PC the code can also be directly run on the mobile client in a real time mode. A standard PC is used to benchmark the performance against other alternative or prior art approaches like LDA and HMM.

During the experimental time period thousands of distinct WiFi access points and GSM cell IDs have been observed. and are maps of transmitter coverage for GSM cells and WiFi access points respectively according to various embodiments. These cells are geo tagged based on one user s data and plotted on a map image of the experimental area. The GSM signal source locations and WiFi signal source locations cover a very large geographic region. It is noted that it is not sufficient to only use an individual signal sources e.g. a single GSM cell ID to represent a stationary state. Many of these signal sources do not correspond to a stationary state e.g. they are discovered during commuting and many of them represent the same stationary state e.g. multiple WiFi access points in one scan .

In Table 3 data sets for the users during the period of 2 months are summarized. Table 3 shows the total number of records and the number of distinct signal sources e.g. transmitter IDs for each user. Notice that the number of records for WiFi is less than GSM. This is because a WiFi scan is more power consuming than a GSM scan and hence WiFi scans are done at slower rate than GSM scans. For these users WiFi scanning rate is set between 2 and 5 minutes and the GSM scanning rate is set between 30 seconds and 2 minutes. In the reminder of this section focus is on User 1 s data to understand how well each component works. All users data are included to summarize the overall performance.

Table 4 shows the default parameter settings used by iLoc. For different components the parameters have different sensitivity. For instance the threshold settings in movement detection module and stationary state portion of the incremental state learning module are less sensitive than the parameters used in the transitional state portion of the incremental state learning module . Therefore in the later part in this section the performance implications in changing the parameter values are evaluated.

HMM and LDA learners are not incremental learners. To provide a favorable comparison for these alternative approaches the HMM and LDA are trained with the full two months of data even though such results would not be available for 66 days. Another difficult question is how to decide the number of clusters for the HMM and LDA approaches. There are different heuristics proposed in the literature. Here a very good estimate is provided by utilizing the results from iLoc. The number of clusters for HMM and LDA is based on the top stationary states that cover 95 of the stationary time of a user. The assumption is that if either HMM or LDA will outperform iLoc that outperforming model should discover a similar set of stationary states. Table 7 shows the number of clusters to account for 95 of stationary time for different users from iLoc. Furthermore to apply HMM and LDA effectively the number of iterations also is determined. For HMM the maximum number of iterations is set to be 100. For LDA a Gibbs sampler approach to training the LDA model is used. The number of the iterations for the Gibbs sampler is set to be 500.

The quality of clusters from different approaches was also examined. For User 1 the top 5 clusters WiFi data stream are compared to those from HMM and LDA in Table 8 which shows the top 3 WiFi access point IDs from each learning approach. To the user these access point IDs can be easily associated with some semantic meaning. In Table 9 the user tags these clusters based on the top ten WiFi IDs. For iLoc the user is able to identify and distinguish several interesting places including home work and a friend s home. Also iLoc correctly clusters the WiFi access point IDs near the user s usual lunch and Gym locations. Table 9 also shows the prior probabilities support of each cluster which represents the degree of importance of each cluster. The user agrees with the iLoc clusters associated with stationary sates. However HMM and LDA cannot clearly separate these stationary states. For example the WiFi ID Home appears in a few clusters. If these HMM and LDA clusters were selected as stationary states the transitional model is severely affected leading to poor prediction performance. Similar clustering behaviors are observed for the other two users.

To fully test out the transitional model and the prediction framework a continuous set of prediction queries was formed automatically. In this setting the inputs from a data stream were replayed sequentially. At each sampling point the movement detection process is invoked and two types of queries are formed. The first query type is called non moving query and labeled Qt1 such that if a user is not moving a query of 60 minutes time range was made. The prediction module output a most probable transition state every 10 minutes until the user started to move again or the 60 minutes prediction window elapsed. The accuracy was computed at each time tick by comparing the predicted transitional state s against the stationary state z0. A prediction was considered correct ifs represents the self transition s z0 z0 . The second query type is called moving query and labeled Qt2 such that if the user was on the move starting from the most recent stationary state z0 a time range was formed that lasts until the user reaches another stationary state z1. During this time range s was predicted every 10 minutes. The accuracy was measured at each time tick by comparing the predicted transitional state s against the correct transition between two stationary states z0 z1. Table 10 shows the query load for both types of queries.

These two query types cover many use cases. A non moving query essentially asks how long a user will be staying in the same stationary state and a moving query asks if a user is about to transit and to which stationary state. If iLoc can consistently provide accurate prediction for both queries it can be utilized for many real life applications e.g. Ad serving . Although the illustrated embodiments are fully incremental models statistics are assembled over several days to populate the posterior probabilities. The predictions were performed continuously on exactly two months of data. For the predictions if a predictor refuses to make a prediction the predictor is considered to not have sufficient information to make the prediction and it is not part of the query load. This is reasonable since the goal is to have very accurate predictions rather than very broad predictions. To gain some insights to the prediction process daily prediction for User 1 were examined. If there s no predictions made for a day it is treated as correct choice i.e. 100 correct for the day .

Predictions based on a GSM data stream were not as good as those based on a WiFi data stream. The main reason is that GSM cells cover larger spatial regions. Qt1 predictions mainly test the self transitions for different stationary states. The stationary states from a GSM data stream can sometimes mix up different stationary states if they are nearby. As a result the self transition model for GSM is not as good as the one for WiFi. However even for GSM iLoc is still able to achieve 62 overall accuracy. For WiFi data stream iLoc performs very well and achieves 73 overall accuracy.

Some days the accuracy of predictions for Qt2 queries shown in graph and is not very good e.g. close to 0 . After consulting with the users it turns out that these days mostly are weekends and vacations. Predicting these days are challenging due to irregular movements. However being able to differentiate these days from normal week days can improve the prediction accuracy for those days. The GSM predictions were again worse than WiFi predictions. Therefore it is useful for the incremental state learning module stationary state update process to discover the stationary states accurately.

Compared with HMM and LDA in the next set of experiments it became more evident that iLoc had superior performance. Overall iLoc predictions based on the WiFi data stream was able to achieve 84 prediction accuracy and GSM stream achieved 25 . Both GSM and WiFi based prediction modules made reasonable predictions for query time ranges up to an hour. This is sufficient for many application scenarios for which predicting a user s behavior for the next hour is extremely helpful for satisfying the user s information cravings.

Table 11 shows the overall accuracy measures for all users under different approaches and different parameter settings. The first row shows the accuracies of iLoc with the default parameters from Table 4 . Table 11 easily compares the performance of different approaches and different parameter settings. Table 11 has three parts. In the first part the performance of iLoc is compared against HMM and LDA. Both HMM and LDA show low accuracies that are not suitable for this prediction task. LDA only provides clustering information which can be used as stationary states. HMM requires observations to infer the hidden states whereas at the query time instance future observations are not available yet. Although HMM provides transitional probability distribution for different states these transitions are mostly for self transitions. The Viterbi algorithm will always end up with the same state. To illustrate this Table 12 shows the transition matrix from a HMM model. From the matrix itself some transitions other than self transition can be observed. For instance state1 is able to transit to state3 with 63 of probability. However given the semantic meaning of the states shown in Table 9 they are essentially the same state. Similar conclusions can be drawn for other transitions. Therefore to have a fair comparison only the cluster stationary states from LDA and HMM are included. As can be observed from the results especially for the query type Qt2 there are some predictions for HMM and LDA. However the accuracy is still far behind the iLoc with default parameters iLoc default . This can also be observed from the average accuracy for the corresponding method listed below the approach name. For this set of experiments since the full set of data is used to train HMM and LDA any incremental learning methods for HMM and LDA cannot outperform the results shown for iLoc. Furthermore being able to easily plug in different clustering methods iLoc is more flexible and open.

The second part of the Table 11 shows the accuracy of iLoc when the min support parameter value is varied. Four settings 0 1 default 2 and 5 are tested which are labeled iLoc 0 iLoc default iLoc 2 and iLoc 5. The higher the min support the fewer stationary states are considered in the transition states and generally the greater the prediction accuracy. The price for the greater accuracy is not being able to predict some infrequent movements.

As shown in and as min support increases the number of the queries that can be answered decreases monotonically. At min support 0 iLoc can answer a maximum number of queries both for Qt1 and Qt2 however with the worst accuracy. For Qt1 with min support at 1 iLoc is still able to answer a large portion of queries with good gain in accuracy. For Qt2 at 1 min support the number of queries dropped can be large for some settings. However the accuracy gain is dramatic. As min support keeps increasing e.g. iLoc 2 and iLoc 5 the number of queries dropped also increases. The accuracy gain is only moderate 6 to 9 overall improvements . Therefore to reach the right balance a min support value of 1 was chosen as the default.

The third part of Table 11 shows the effect of the temporal features. The iLoc none embodiment uses no temporal features. The iLoc none performs badly for Qt2 queries. This is expected since iLoc none does not differentiate movements in different time contexts. When morning afternoon and night temporal features are added labeled iLoc man the performance improves drastically. The performance is further enhanced with the full feature set labeled iLoc default .

The iLoc framework is an open framework. The illustrated embodiments work well for the mobile signal environment. In other embodiments more sensor inputs are incorporated such as accelerometer sensor data to differentiate finer grain movements. In some embodiments signal strength is incorporated to help identify smaller stationary states.

The iLoc learning framework captures spatial and temporal dimensions and is able to accurately forecast a user s future locations in a fully automatic and incremental fashion. Recommendation systems based on iLoc can accurately push relevant information based on the predicted location information. For instance a system can automatically fetch relevant traffic information and prepare routing information when a user is about to transit to another stationary state e.g. from work to home without any command from the user. Alternatively a system can smartly push advertisements that are related to different stationary states e.g. push lunch coupons when a user is about to go to lunch . In order to generate values for millions of users a system should be able to scale linearly with the amount of information received. It has been shown that iLoc is able to satisfy this requirement due to its incremental signal data stream processing modules. The efficiency of building and storing different user states has been shown empirically.

The processes described herein for incrementally determining location context may be advantageously implemented via software hardware e.g. general processor Digital Signal Processing DSP chip an Application Specific Integrated Circuit ASIC Field Programmable Gate Arrays FPGAs etc. firmware or a combination thereof. Such exemplary hardware for performing the described functions is detailed below.

A bus includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors for processing information are coupled with the bus .

A processor performs a set of operations on information as specified by computer program code related to incrementally determining location context. The computer program code is a set of instructions or statements providing instructions for the operation of the processor and or the computer system to perform specified functions. The code for example may be written in a computer programming language that is compiled into a native instruction set of the processor. The code may also be written directly using the native instruction set e.g. machine language . The set of operations include bringing information in from the bus and placing information on the bus . The set of operations also typically include comparing two or more units of information shifting positions of units of information and combining two or more units of information such as by addition or multiplication or logical operations like OR exclusive OR XOR and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions such as an operation code of one or more digits. A sequence of operations to be executed by the processor such as a sequence of operation codes constitute processor instructions also called computer system instructions or simply computer instructions. Processors may be implemented as mechanical electrical magnetic optical chemical or quantum components among others alone or in combination.

Computer system also includes a memory coupled to bus . The memory such as a random access memory RAM or other dynamic storage device stores information including processor instructions for incrementally determining location context. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory is also used by the processor to store temporary values during execution of processor instructions. The computer system also includes a read only memory ROM or other static storage device coupled to the bus for storing static information including instructions that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus is a non volatile persistent storage device such as a magnetic disk optical disk or flash card for storing information including instructions that persists even when the computer system is turned off or otherwise loses power.

Information including instructions for incrementally determining location context is provided to the bus for use by the processor from an external input device such as a keyboard containing alphanumeric keys operated by a human user or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus used primarily for interacting with humans include a display device such as a cathode ray tube CRT or a liquid crystal display LCD or plasma screen or printer for presenting text or images and a pointing device such as a mouse or a trackball or cursor direction keys or motion sensor for controlling a position of a small cursor image presented on the display and issuing commands associated with graphical elements presented on the display . In some embodiments for example in embodiments in which the computer system performs all functions automatically without human input one or more of external input device display device and pointing device is omitted.

In the illustrated embodiment special purpose hardware such as an application specific integrated circuit ASIC is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor quickly enough for special purposes. Examples of application specific ICs include graphics accelerator cards for generating images for display cryptographic boards for encrypting and decrypting messages sent over a network speech recognition and interfaces to special external devices such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.

Computer system also includes one or more instances of a communications interface coupled to bus . Communication interface provides a one way or two way communication coupling to a variety of external devices that operate with their own processors such as printers scanners and external disks. In general the coupling is with a network link that is connected to a local network to which a variety of external devices with their own processors are connected. For example communication interface may be a parallel port or a serial port or a universal serial bus USB port on a personal computer. In some embodiments communications interface is an integrated services digital network ISDN card or a digital subscriber line DSL card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments a communication interface is a cable modem that converts signals on bus into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example communications interface may be a local area network LAN card to provide a data communication connection to a compatible LAN such as Ethernet. Wireless links may also be implemented. For wireless links the communications interface sends or receives or both sends and receives electrical acoustic or electromagnetic signals including infrared and optical signals that carry information streams such as digital data. For example in wireless handheld devices such as mobile telephones like cell phones the communications interface includes a radio band electromagnetic transmitter and receiver called a radio transceiver. In certain embodiments the communications interface enables connection to the communication network for obtaining signal data streams from the UE .

The term computer readable medium is used herein to refer to any medium that participates in providing information to processor including instructions for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media include for example optical or magnetic disks such as storage device . Volatile media include for example dynamic memory . Transmission media include for example coaxial cables copper wire fiber optic cables and carrier waves that travel through space without wires or cables such as acoustic waves and electromagnetic waves including radio optical and infrared waves. Signals include man made transient variations in amplitude frequency phase polarization or other physical properties transmitted through the transmission media. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM CDRW DVD any other optical medium punch cards paper tape optical mark sheets any other physical medium with patterns of holes or other optically recognizable indicia a RAM a PROM an EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave or any other medium from which a computer can read. The term computer readable storage medium is used herein to refer to any computer readable medium except transmission media.

Logic encoded in one or more tangible media includes one or both of processor instructions on a computer readable storage media and special purpose hardware such as ASIC .

Network link typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example network link may provide a connection through local network to a host computer or to equipment operated by an Internet Service Provider ISP . ISP equipment in turn provides data communication services through the public world wide packet switching communication network of networks now commonly referred to as the Internet .

A computer called a server host connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example server host hosts a process that provides information representing video data for presentation at display . It is contemplated that the components of system can be deployed in various configurations within other computer systems e.g. host and server .

At least some embodiments of the invention are related to the use of computer system for implementing some or all of the techniques described herein. According to one embodiment of the invention those techniques are performed by computer system in response to processor executing one or more sequences of one or more processor instructions contained in memory . Such instructions also called computer instructions software and program code may be read into memory from another computer readable medium such as storage device or network link . Execution of the sequences of instructions contained in memory causes processor to perform one or more of the method steps described herein. In alternative embodiments hardware such as ASIC may be used in place of or in combination with software to implement the invention. Thus embodiments of the invention are not limited to any specific combination of hardware and software unless otherwise explicitly stated herein.

The signals transmitted over network link and other networks through communications interface carry information to and from computer system . Computer system can send and receive information including program code through the networks among others through network link and communications interface . In an example using the Internet a server host transmits program code for a particular application requested by a message sent from computer through Internet ISP equipment local network and communications interface . The received code may be executed by processor as it is received or may be stored in memory or in storage device or other non volatile storage for later execution or both. In this manner computer system may obtain application program code in the form of signals on a carrier wave.

Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor for execution. For example instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system receives the instructions and data on a telephone line and uses an infra red transmitter to convert the instructions and data to a signal on an infra red carrier wave serving as the network link . An infrared detector serving as communications interface receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus carries the information to memory from which processor retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory may optionally be stored on storage device either before or after execution by the processor .

In one embodiment the chip set includes a communication mechanism such as a bus for passing information among the components of the chip set . A processor has connectivity to the bus to execute instructions and process information stored in for example a memory . The processor may include one or more processing cores with each core configured to perform independently. A multi core processor enables multiprocessing within a single physical package. Examples of a multi core processor include two four eight or greater numbers of processing cores. Alternatively or in addition the processor may include one or more microprocessors configured in tandem via the bus to enable independent execution of instructions pipelining and multithreading. The processor may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors DSP or one or more application specific integrated circuits ASIC . A DSP typically is configured to process real world signals e.g. sound in real time independently of the processor . Similarly an ASIC can be configured to performed specialized functions not easily performed by a general purposed processor. Other specialized components to aid in performing the inventive functions described herein include one or more field programmable gate arrays FPGA not shown one or more controllers not shown or one or more other special purpose computer chips.

The processor and accompanying components have connectivity to the memory via the bus . The memory includes both dynamic memory e.g. RAM magnetic disk writable optical disk etc. and static memory e.g. ROM CD ROM etc. for storing executable instructions that when executed perform the inventive steps described herein to incrementally determine location context. The memory also stores the data associated with or generated by the execution of the inventive steps.

Pertinent internal components of the telephone include a Main Control Unit MCU a Digital Signal Processor DSP and a receiver transmitter unit including a microphone gain control unit and a speaker gain control unit. A main display unit provides a display to the user in support of various applications and mobile terminal functions that perform or support the steps of incrementally determining location context. The display unit includes display circuitry configured to display at least a portion of a user interface of the mobile terminal e.g. mobile telephone . Additionally the display unit and display circuitry are configured to facilitate user control of at least some functions of the mobile terminal. An audio function circuitry includes a microphone and microphone amplifier that amplifies the speech signal output from the microphone . The amplified speech signal output from the microphone is fed to a coder decoder CODEC .

A radio section amplifies power and converts frequency in order to communicate with a base station which is included in a mobile communication system via antenna . The power amplifier PA and the transmitter modulation circuitry are operationally responsive to the MCU with an output from the PA coupled to the duplexer or circulator or antenna switch as known in the art. The PA also couples to a battery interface and power control unit .

In use a user of mobile terminal speaks into the microphone and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter ADC . The control unit routes the digital signal into the DSP for processing therein such as speech encoding channel encoding encrypting and interleaving. In one embodiment the processed voice signals are encoded by units not separately shown using a cellular transmission protocol such as global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi satellite and the like.

The encoded signals are then routed to an equalizer for compensation of any frequency dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream the modulator combines the signal with a RF signal generated in the RF interface . The modulator generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission an up converter combines the sine wave output from the modulator with another sine wave generated by a synthesizer to achieve the desired frequency of transmission. The signal is then sent through a PA to increase the signal to an appropriate power level. In practical systems the PA acts as a variable gain amplifier whose gain is controlled by the DSP from information received from a network base station. The signal is then filtered within the duplexer and optionally sent to an antenna coupler to match impedances to provide maximum power transfer. Finally the signal is transmitted via antenna to a local base station. An automatic gain control AGC can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone other mobile phone or a land line connected to a Public Switched Telephone Network PSTN or other telephony networks.

Voice signals transmitted to the mobile terminal are received via antenna and immediately amplified by a low noise amplifier LNA . A down converter lowers the carrier frequency while the demodulator strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer and is processed by the DSP . A Digital to Analog Converter DAC converts the signal and the resulting output is transmitted to the user through the speaker all under control of a Main Control Unit MCU which can be implemented as a Central Processing Unit CPU not shown .

The MCU receives various signals including input signals from the keyboard . The keyboard and or the MCU in combination with other user input components e.g. the microphone comprise a user interface circuitry for managing user input. The MCU runs a user interface software to facilitate user control of at least some functions of the mobile terminal to send user input or a signal data stream to incrementally determine location context. The MCU also delivers a display command and a switch command to the display and to the speech output switching controller respectively. Further the MCU exchanges information with the DSP and can access an optionally incorporated SIM card and a memory . In addition the MCU executes various control functions required of the terminal. The DSP may depending upon the implementation perform any of a variety of conventional digital processing functions on the voice signals. Additionally DSP determines the background noise level of the local environment from the signals detected by microphone and sets the gain of microphone to a level selected to compensate for the natural tendency of the user of the mobile terminal .

The CODEC includes the ADC and DAC . The memory stores various data including call incoming tone data and is capable of storing other data including music data received via e.g. the global Internet. The software module could reside in RAM memory flash memory registers or any other form of writable storage medium known in the art. The memory device may be but not limited to a single memory CD DVD ROM RAM EEPROM optical storage or any other non volatile storage medium capable of storing digital data.

An optionally incorporated SIM card carries for instance important information such as the cellular phone number the carrier supplying service subscription details and security information. The SIM card serves primarily to identify the mobile terminal on a radio network. The card also contains a memory for storing a personal telephone number registry text messages and user specific mobile terminal settings.

While the invention has been described in connection with a number of embodiments and implementations the invention is not so limited but covers various obvious modifications and equivalent arrangements which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims it is contemplated that these features can be arranged in any combination and order.

