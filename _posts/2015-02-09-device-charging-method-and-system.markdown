---

title: Device, charging method, and system
abstract: A device includes a display control unit configured to display a Web page on an operations panel, the Web page including a standard script and an extended script for controlling the device, an execution unit configured to cause the device to perform a process according to an instruction indicated by the extended script, and a storing unit configured to store information indicating whether respective instructions indicated by extended scripts require charges. The execution unit is configured to determine whether the instruction indicated by the extended script included in the Web page requires a charge by referring to the information stored in the storing unit, and to update charging information for the process performed according to the instruction indicated by the extended script when the instruction requires the charge.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09195976&OS=09195976&RS=09195976
owner: RICOH COMPANY, LTD.
number: 09195976
owner_city: Tokyo
owner_country: JP
publication_date: 20150209
---
The present application is a continuation application of U.S. patent application Ser. No. 13 368 674 filed on Feb. 8 2012 and is based upon and claims the benefit of priority of Japanese Patent Application No. 2011 036882 filed on Feb. 23 2011 the entire contents of which are incorporated herein by reference.

There exists an image forming device including a browser function that obtains a Web page written in for example the Hypertext Markup Language HTML from another device via a network or from a storage unit of the image forming device and displays the Web page on an operations panel of the image forming device. In addition to displaying a Web page a browser function may also be capable of parsing or interpreting scripts extended for device control and thereby controlling the image forming device for example to perform printing. With such a browser function it is possible to provide a browser based API application programming interface such as a scripting language for customization of the image forming device see for example Japanese Laid Open Patent Publication No. 2006 352845 .

Also there is an image forming device including a charging or billing function. For example the image forming device manages charging information based on which the user is charged and updates the charging information when printing or scanning is performed.

Here charges for the use of functions of an image forming device resulting from execution of scripts on a Web page are preferably determined in a more flexible manner than in a case where functions of the image forming device are used via standard applications preinstalled in the image forming device.

In an aspect of this disclosure there is provided a device that includes a display control unit configured to display a Web page on an operations panel the Web page including a standard script and an extended script for controlling the device an execution unit configured to cause the device to perform a process according to an instruction indicated by the extended script and a storing unit configured to store information indicating whether respective instructions indicated by extended scripts require charges. The execution unit is configured to determine whether the instruction indicated by the extended script included in the Web page requires a charge by referring to the information stored in the storing unit and to update charging information for the process performed according to the instruction indicated by the extended script when the instruction requires the charge.

Preferred embodiments of the present invention are described below with reference to the accompanying drawings. is a drawing illustrating an exemplary configuration of a system according to an embodiment. As illustrated in the system may include an image forming device and a Web server device that are connected to each other for communications via a wired or wireless network such as a local area network LAN or the Internet.

The image forming device may be for example a multifunction peripheral including two or more functions such as printing scanning copying and facsimile transmission and reception. Alternatively the image forming device may include one of the above functions. The image forming device is an example of a device according to an aspect of this disclosure.

The Web server device may be for example a computer that receives a request for a Web page from the image forming device and sends the corresponding Web page to the image forming device based on identification information e.g. uniform resource locator URL specified in the request. The Web page to be sent by the Web server device may be retrieved from a storage unit of the Web server device or an external storage unit or may be dynamically generated by the Web server device or another computer connected to the Web server device . In the present embodiment a Web page may indicate display data to be obtained by the image forming device via Hypertext Transfer Protocol HTTP communications from an internal storage unit of the image forming device or from another device e.g. the Web server device . A Web page may be written for example in the Hypertext Markup Language HTML .

Although only one image forming device and one Web server device are illustrated in the system may include two or more image forming devices and two or more Web server devices . Also the relationship between the image forming device s and the Web server device s may be one to many many to one or many to many .

The controller may include a central processing unit CPU a random access memory RAM a read only memory ROM a hard disk drive HDD and a non volatile RAM NVRAM . The ROM stores for example programs and data used by the programs. The RAM is used for example as a storage area into which programs are loaded and as a work area for the loaded programs. The CPU executes the programs loaded into the RAM to implement various functions. The HDD stores for example programs and data used by the programs. The NVRAM stores for example various settings.

The scanner is a hardware component image scanning unit for scanning a document to obtain image data. The printer is a hardware component printing unit for printing print data on a recording medium such as paper. The modem is a hardware component for connecting the image forming device to a telephone line and is used to send and receive image data for facsimile communications. The operations panel is a hardware component including an input unit such as buttons for receiving user inputs and a display unit such as a liquid crystal display panel. For example a liquid crystal display panel including a touch panel function may be used as the display unit. In this case the liquid display panel may also function as the input unit. The network interface is a hardware component for connecting the image forming device to a wired or wireless network such as a local area network LAN .

The SD card slot reads for example programs stored in a secure digital SD card . With the image forming device configured as described above in addition to the programs stored in the ROM and the HDD programs stored in the SD card can be loaded into the RAM and executed. Instead of the SD card any other storage medium e.g. a CD ROM or a universal serial bus USB memory may also be used for this purpose. That is a storage medium that can be mounted on the image forming device is not limited to the SD card . When a storage medium other than the SD card is used the SD card slot may be replaced with a hardware component corresponding to the storage medium used.

The standard applications are default applications installed in the image forming device before the factory shipment. In the example of the standard applications include a scan application a print application a copy application and a fax application . The scan application performs a scan job. The print application performs a print job. The copy application performs a copy job. The fax application performs a facsimile transmission job and a facsimile reception job.

The control service is implemented by software modules that for example provide functions for controlling various hardware resources to upper layer applications and perform fundamental functions of the image forming device .

The device browser is a program that obtains Web pages from the Web server device and displays the obtained Web pages on the operations panel . Also the device browser can parse or interpret a script a program written in a scripting language in a Web page and cause the image forming device to perform a process according to the script. That is the device browser can parse extended scripts e.g. a scan request for controlling the image forming device in addition to scripts that a general purpose Web browser can parse. The device browser may be installed for example via the SD card or a network into the image forming device .

The charge management unit manages charging information and updates the charging information when a given function of the image forming device is used or executed. The charging information may be represented by for example charge counts recorded in the NVRAM and indicating the numbers of times that respective functions of the image forming device are executed. The charge counts are increased when the corresponding functions e.g. copying and scanning are executed.

The OS is an operating system. Software programs in the image forming device run as processes or threads on the OS .

The device browser is described below in more detail. is a drawing illustrating an exemplary functional configuration of the device browser . As illustrated in the device browser includes a communication control unit an HTML parser a drawing unit a script execution unit a local function execution unit an image processing unit a communication processing unit and a charge requirement information storing unit .

The communication control unit controls HTTP communications as a client. For example the communication control unit sends a request an HTTP request to the Web server device and receives a response an HTTP response from the Web server device .

The HTML parser parses or interprets HTML code and scripts e.g. Javascript registered trademark in a Web page included in a response from the Web server device . For example based on the parsed results the HTML parser requests the drawing unit to draw a screen defined by the HTML code and or requests the script execution unit to execute the scripts.

The script execution unit performs a process according to a script written in a Web page. The script execution unit can execute standard scripts such as Javascript registered trademark that a general purpose Web browser can parse as well as scripts hereafter called extended scripts that are extended for the image forming device . Examples of extended scripts include a print request and a scan request. When an extended script is included in a Web page the script execution unit requests the local function execution unit to perform a process corresponding to the extended script.

The local function execution unit controls execution of a process corresponding to an extended script in response to a request from the script execution unit .

The image processing unit is implemented by for example libraries that provide function interfaces for image processing such as copying scanning and printing. For example the local function execution unit uses the image processing unit to cause the image forming device to perform copying scanning or printing.

The communication processing unit is implemented by for example a library that provides a function interface for network communication processing. For example the local function execution unit uses the communication processing unit to cause the image forming device to download a document or document data to be printed.

The charge requirement information storing unit stores for each extended script charge requirement information indicating whether it is necessary to charge for the use of the image forming device resulting from execution of the extended script. In other words the charge requirement information storing unit stores information indicating scripts that require charges. The charge requirement information storing unit may be implemented for example by a storage area of the HDD or the NVRAM .

The Web server controls HTTP communications as a server. For example the Web server receives a request an HTTP request from a client i.e. the device browser and executes one of the Web applications corresponding to a URL specified in the request. Then the Web server sends a response including a processing result e.g. a Web page of the executed Web application to the client sending the request.

In it is assumed that the Web application includes a function to provide documents or document data stored in the Web server device . The device browser causes the image forming device to download or obtain a document from the Web server device according to an extended script written in a Web page generated by the Web application . Then the device browser requests the control service to print the document downloaded according to the extended script in the Web page. Also if the extended script is charged for the device browser reports to the control service that the extended script is charged for. In response the control service causes the image forming device to print the print data. Also if the extended script is charged for the control service requests the charge management unit to update the charging information.

An exemplary process performed by the image forming device is described below. is a sequence chart illustrating an exemplary process performed by the image forming device .

In step S the user enters a request to display a Web page a Web page display request via the operations panel . The Web page display request is input or sent via the control service to the device browser S S . The Web page display request may be entered for example by selecting a screen item e.g. a button displayed on the operations panel . Here it is assumed that the screen item is associated with a URL and the URL is specified in the Web page display request.

When receiving the Web page display request the device browser sends an HTTP request to the URL specified in the Web page display request S . In this exemplary process the URL indicates the Web application of the Web server device and therefore the HTTP request is received by the Web server of the Web server device . In response the Web server starts the Web application corresponding to the URL specified in the HTTP request.

When started the Web application obtains information indicating a list of documents or sets of document data stored in the Web server device and generates a Web page hereafter called a document list page including the list of documents. Then the Web server sends an HTTP response including the generated document list page to the device browser .

When receiving the document list page the device browser parses statements code tags scripts etc. in the document list page.

The HTML parser parses all the statements in the document list page. According to statements related to drawing or displaying in the document list page the HTML parser requests the drawing unit to draw a screen. Also according to statements related to scripts in the document list page the HTML parser requests the script execution unit to execute the scripts. The script execution unit controls execution of standard scripts in the scripts by itself. Meanwhile the script execution unit requests the local function execution unit to perform processes corresponding to extended scripts in the example of doDownload and doPrint in the scripts. The local function execution unit causes the communication processing unit to perform a process corresponding to the extended script doDownload download request . Also the local function execution unit causes the image processing unit to perform a process corresponding to the extended script doPrint print request .

In this exemplary process a drawing process is performed in synchronization with the reception of the document list page. According to the statements related to drawing in the document list page the drawing unit of the device browser generates image information that the control service can interpret and requests the control service to display the image information S . Based on the image information the control service displays the document list page on the operations panel S .

When one of the documents is selected on the document list page and the print button is pressed or touched S an event a button pressed event indicating that the print button has been pressed is sent via the operations panel and the control service to the device browser S S . When receiving the button pressed event the script execution unit of the device browser executes scripts associated with the button press event in the document list page . More specifically the script execution unit requests the local function execution unit to perform a process corresponding to the extended script doDownload based on the identifier hereafter called a document ID of the document selected on the document list page .

When requested the local function execution unit refers to the charge requirement information storing unit to determine whether the extended script doDownload is charged for.

Next the script execution unit requests the local function execution unit to perform a process corresponding to the extended script doPrint for the downloaded document S . When requested the local function execution unit refers to the charge requirement information storing unit to determine whether the extended script doPrint is charged for. In the example of the charge requirement for the extended script doPrint differs depending on job attributes. For example when the data format of the document is the Portable Document Format PDF documentType pdf a charge is required. Meanwhile when the data format of the document is bitmap documentType bmp no charge is required. Also when the number of pages is one page 1 no charge is required.

Accordingly the local function execution unit determines whether a charge is required by referring to the charge requirement information storing unit based on job attribute information i.e. attribute information of the document to be printed . In this exemplary process it is assumed that the local function execution unit determines that execution of the extended script doPrint for the downloaded document requires a charge.

Here there may be a case where a document matches a job attribute that does not require a charge and also matches a job attribute that requires a charge e.g. one page of a PDF document . To deal with such a case priorities between different conditions i.e. charge required and charge not required may be predetermined.

Attributes other than the data formats and the number of pages of documents may also be used to determine the charge requirement. Further a print job attribute such as N up processing e.g. two pages on one sheet which is not an attribute of a document itself may also be used to determine the charge requirement.

When it is determined that execution of the extended script doPrint for the downloaded document requires a charge the local function execution unit sends a print request charged print request including information indicating that the print request needs to be charged via the image processing unit to the control service S . When receiving the charged print request the control service requests the charge management unit to update charging information i.e. to increase a charge count for a print job corresponding to the extended script doPrint S . The charge management unit updates the charging information and sends the result of updating the charging information e.g. information indicating whether the charging information has been successfully updated S .

When the charging information has been successfully updated the control service causes the printer to print the downloaded document or to perform the print job S . When a print result indicating whether the document is successfully printed is received from the printer S the control service for example displays a pop up screen indicating the print result over the document list page on the operations panel S .

Step S and subsequent steps represent a process that is performed when a document requiring no charge in for example bitmap data is selected on the document list page and the print button is pressed.

Steps S through S are substantially the same as steps S through S except that the local function execution unit determines in step S that execution of the extended script doPrint for the downloaded document here bitmap data requires no charge. Then the local function execution unit sends a print request non charged print request including information indicating that the print request does not need to be charged via the image processing unit to the control service S .

When receiving the non charged print request the control service causes the printer to print the downloaded document without requesting the charge management unit to update the charging information S . Steps S and S are substantially the same as steps S and S.

As described above the above embodiment makes it possible to determine the charge requirement i.e. whether a charge is required for each script and for each combination of a script and attribute information of a process or a job performed according to the script. In other words the above embodiment makes it possible to flexibly charge for processes that are performed according to potentially differing scripts.

The above embodiment may also be applied to jobs processes or functions other than scanning copying facsimile transmission and printing.

In the above embodiment the image forming device and the Web server device are provided separately. Alternatively the image forming device may include the Web server and the Web applications .

An aspect of this disclosure provides a device a system a charging method and a non transitory computer readable storage medium storing program code that make it possible to flexibly charge for processes that are performed according to definitions of a Web page.

The present invention is not limited to the specifically disclosed embodiments and variations and modifications may be made without departing from the scope of the present invention.

