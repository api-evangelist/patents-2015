---

title: Low cost mesh network capability
abstract: A wireless device that utilizes a single network interface to simultaneously connect to an infrastructure network and a mesh network. The device has a driver layer with a media access control module for each network type. A multiplexing module and transceiver module within the driver can direct received information associated with one of the networks to an appropriate media access control and then to an appropriate network adapter. For transmitted data, the multiplexing module can receive data from the application layer through an appropriate network adapter and route it to an appropriate media access control module for processing. The processed data can be interleaved by the transceiver for transmission.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09503957&OS=09503957&RS=09503957
owner: Microsoft Technology Licensing, LLC
number: 09503957
owner_city: Redmond
owner_country: US
publication_date: 20151013
---
This application is a continuation of U.S. patent application Ser. No. 14 262 094 filed Apr. 25 2014 entitled LOW COST MESH NETWORK CAPABILITY which is a continuation of U.S. patent application Ser. No. 12 133 250 filed Jun. 4 2008 entitled LOW COST MESH NETWORK CAPABILITY now U.S. Pat. No. 8 711 817 issued Apr. 29 2014. The entirety of each of these afore mentioned applications is incorporated herein by reference.

With the advent of cheaper and more portable computers the demand for wireless devices and networks is growing rapidly. The increasing popularity of wireless networks has led to the development of new methods and techniques to improve connectivity between portable wireless devices and networks.

Wireless networks can generally be classified as two types. In the first type called an infrastructure network devices such as computers or mobile phones are connected to the network through access points which are in turn connected together through the network. For two devices to communicate over an infrastructure network both must be connected to an access point. The second type called an ad hoc network is de centralized. In an ad hoc network a set of wireless devices herein referred to as nodes interact directly and do not need to be connected directly to the access point. Instead one node can connect to the network through another node that is already connected to the wireless network.

Mesh networks are a subcategory of ad hoc networks. In mesh networks nodes may receive and forward messages allowing messages to be passed from node to node. As a result mesh networks can be established over a relatively wide area. Additionally because connections between nodes can be defined or adapted ad hoc communication over the mesh network can continue despite communication failures between one or more of the nodes.

Substantial functionality can be achieved by configuring a wireless device to provide a low cost means to communicate with an infrastructure network and a mesh network. The system has multiple media access control MAC modules one associated with each network type within a driver for a network interface allowing both network types to be supported using the same network interface hardware.

The MACs are abstracted in multiple network adapters one for each supported network type. A transceiver may be included coupled between each MAC and the underlying hardware to interleave information for the multiple network types for transmission using the hardware. For received information the transceiver may pass the information to a MAC appropriate for the network type over which it was received. The MAC can tag the information so that when it is directed to the appropriate network adapter.

Such an architecture may more generally be used to support communication over any two types of networks using the same radio. Accordingly some aspects of the present invention are directed to a wireless device adapted to connect to a first network using a first protocol and a second network using a second protocol. The wireless device comprises a computer readable medium having computer executable instructions comprising a radio a computer readable medium having computer executable instructions comprising a first interface to the first network and a second interface to the second network a first media access control module adapted to control the radio in accordance with the first protocol a second media access control module adapted to control the radio in accordance with the second protocol and a multiplexing module adapted to selectively route messages between the first media access control module the second media access control module and the first interface and the second interface for concurrent operation of the radio on the first network and the second network.

Another embodiment of the invention is directed to a method of operating a wireless device to communicate selectively over a first network and a second network. The method comprises acts of A configuring the wireless device the configuring comprising configuring a first control module and a first component to receive data from the first network configuring a second control module and a second component to receive data from the second network B receiving a first message the receiving comprising receiving data from the first network at the first control module and from the second network at the second control module obtaining data from the first control module and the second control module directing the data to either a first adapter or a second adapter based on the network over which the data was received and C transmitting a second message the transmitting comprising acquiring data to be transmitted from an application or a user interface of the wireless device through the first adapter the acquiring comprising encoding the data by assigning the data at least one tag acquiring data to be transmitted from an application or a user interface of the wireless device through the second adapter the acquiring comprising encoding the data comprises assigning the data at least one tag directing data to a selected control module of the first control module and the second control module the selected control module selected based on a tag associated with the data processing the data within the selected control module and transmitting the processed data.

Another embodiment of the invention is directed to a computer storage medium having computer executable instructions adapted to control a wireless device for concurrent communication over at least two networks. The computer storage medium comprises a first interface to the first network and a second interface to the second network a first media access control module adapted to control the radio in accordance with the first protocol a second media access control module adapted to control the radio in accordance with the second protocol and a multiplexing module adapted to selectively route messages between the first media access control module the second media access control module and the first interface and the second interface for concurrent operation of the radio on the first network and the second network.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

The inventors have recognized and appreciated that substantial functionality for a computer and a system of computers can be achieved at low cost by enabling the computer or computers in the system to concurrently support a mesh network adapter and an ad hoc network adapter for communication with a single radio.

Multiple computers with such a configuration can cooperate to effectively extend the range of a wireless access point with relatively little infrastructure. Those computers within range of an access point may connect directly to a network through the access point. Those computers out of range of the access point may use their wireless radios to form a mesh network including one or more of the computers in range of the wireless access points. A computer within range of the wireless access point may act as a bridge enabling those computers in the mesh out of range of the wireless access point to nonetheless achieve a network connection to the infrastructure network.

As a specific example such a network will greatly enhance the range and ability for many students in remote locations with little network infrastructure to achieve Internet connectivity. A first student s laptop can connect to a second student s laptop which can connect to a third student s laptop which may be directly connected to a wireless access point that provides Internet connectivity. Even though the first and second students laptops may be out of range of the access point of the network both will still be connected to the network due to the connection with the third student s laptop. In this way the need for multiple wireless access points is avoided yet network connectivity is provided over a much greater area than can be serviced by a single wireless access point.

Embodiments of the invention are described as being implemented in a suitable computing environment. Although not required embodiments of the invention will be described in the general context of computer executable instructions such as program modules being executed by a personal computer. Generally program modules include routines programs objects components data structures and software layers that perform particular tasks or implement particular abstract data types. Those skilled in the art will appreciate that embodiments of the invention may be practiced with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with embodiments of the invention include but are not limited to personal computers server computers hand held or laptop devices tablet devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

In view of the many possible embodiments to which the principles of this invention can be applied it will be recognized that the embodiments described herein with respect to the drawing figures are meant to be illustrative only and are not be taken as limiting the scope of invention. For example those of skill in the art will recognize that the elements of the illustrated embodiments shown in software can be implemented in hardware and vice versa or that the illustrated embodiments can be modified in arrangement and detail without departing from the spirit of the invention. Therefore the invention as described herein contemplates all such embodiments as can come within the scope of the following claims and equivalents thereof.

The computers and are connected with each other wirelessly through links and . Such links may be established using wireless radio hardware as is known in the art or with any other suitable hardware. The hardware may be controlled to implement communications between devices in accordance with an ad hoc network protocol as is known in the art. However any suitable protocol may be used.

Such hardware in one or more of the devices also may be controlled to operate according to methods described in more detail below to also connect to an infrastructure network. In this example computer is wirelessly connected via link to an infrastructure network through an access point . An example of an infrastructure network may be the Internet or a corporate Intranet in an office. Those of skill in the art can appreciate that an infrastructure network is not limited by any means to an office network or the Internet but can exist in any geographical location provided there is an access point to connect to the infrastructure network.

Each device connected to a mesh network may have an operating system OS which provides functional and management support for software applications running on the device. The support may include managing network operations network connections network configurations memory control and allocation user interfaces input output components and other functions that are known to one of skill in the art. In the example disclosed in the device is a computer . Contemporary OSes for computers include the Linux Solaris Unix Mac OS X and Microsoft Windows operating systems. Techniques used for implementing such known operating systems may be used to implement an operating system providing functionality as described herein. However any suitable techniques may be used.

Hardware may contain a transmitter receiver to support wireless communication. In the embodiment illustrated hardware may be a wireless network interface card implemented as is known in the art. Such a transmitter receiver may be controllable to perform transmit and receive operations appropriate for a specific network protocol to be implemented. In this way the same transmitter receiver may be used to support communications over more than one type of network. In the illustrated embodiment multiple network connections to different types of networks may be maintained concurrently using the same transmitter receiver.

In the example of application level components such as application programs or a user interface generate or consume data communicated using such a transmitter receiver. In the embodiment illustrated each of the application level components need not be specifically configured for operation with a computer that is configured to support communication using different protocols. Rather the application programming interface API layer provided by an operating system on the computer may provide interfaces for each supported network. Each component at the application level may interact through API as in a computer interacting with a single network type as is known in the art.

API layer may interact with an interface layer which provides an interface to one or more driver layers where control of hardware may be implemented. Interface layer may format commands and data provided through API layer specifically for operation in a system configured for access to multiple network types and such formatting may reflect the specific network type to which such commands and data relate.

In the embodiment illustrated the driver layer is implemented with an Intermediate IM driver and an NDIS miniport driver . An NDIS miniport driver may be implemented to specifically control functions of hardware and for example may be implemented by the developer of hardware . It may expose an interface in a known format such as NDIS through which it may interact with other elements of the computer system.

More general control functions may be implemented in the IM driver . In this example the functions implemented in IM driver are not hardware dependent and IM driver may be implemented by an OS vendor and provided as part of an OS or acquired from any other suitable source.

One function provided by IM driver is to expose adapters associated with each supported network type. In the example illustrated in which an infrastructure network and a mesh network are supported IM driver exposes an infrastructure network adapter and a mesh network adapter . In the embodiment illustrated even though the network functionality associated with each adapter is provided by the same hardware each adapter may present an interface in a format as known for different networks implemented using separate hardware components.

The interface layer translates functions between the application programming interface layer and the adapters and exposed by the driver components. In the embodiment illustrated the interface layer includes several modules to process mesh network and infrastructure network functions independently. An infrastructure adapter interface manages and formats information relating to an interface network that is transmitted between the infrastructure adapter and the API layer . Similarly a mesh adapter interface manages and formats information communicated between the mesh network adapter and the API layer . Though not expressly shown API layer may also be partitioned so that one part of the API layer manages communications with the infrastructure network and the other part manages communications with the mesh network. However any suitable partitioning of the illustrated components may be used.

Connected to the two adapters and is an Internet Connection Sharing ICS Bridge module . The ICS Bridge module manages information being transmitted to wireless devices in a mesh network from wireless devices in an infrastructure network and vice versa. The ICS Bridge module can direct information according to hardware assigned MAC addresses.

As described in greater detail below the driver layers of the architecture of are configured such that each network adapter may be active simultaneously to support simultaneous network connection that can concurrently communicate over multiple networks even though only a single radio may be present. This capability allows computer to be configured as a bridge. In operation ICS Bridge module may relay information received through one network adapter for transmission through another network adapter. In this way ICS Bridge module establishes a bridge between two networks.

The interface layer also provides the necessary communication protocols for communicating over multiple networks. Protocol modules such as the Transmission Control Protocol Internet Protocol TCP IP modules and and a Routing and Advertisement module are known in the art and can be integrated into the interface layer. Two separate TCP IP modules an infrastructure network TCP IP module and another mesh TCP IP module can provide networking and name resolution protocols. The Routing and Advertisement protocols provide the infrastructure for assigning Layer 3 addresses such as IP router and Domain Name System DNS server addresses. A Dynamic Host Configuration Protocol DHCP client and or server known to one of skill in the art provides the above mentioned functionality. In addition service protocols such as Universal Plug and Play UpnP and Web Services are either transmitted or received.

As mentioned above information whether control information or data for transmission provided by the application programs and the interface layer may be sent to the hardware via the IM driver and the NDIS miniport module .

In some embodiments the transceiver can be connected to two MACs each MAC being a software module that implements functions associated with network controls known to one of skill in the art. MACs can be programmed to execute instructions independently or to depend on the functionality of another MAC in the NDIS miniport layer . In the embodiment illustrated a Station STA MAC executes addressing access controls and protocols to connect to an access point in the infrastructure network. A Mesh Point MP MAC executes addressing and access controls and protocols to connect to nodes in the mesh network.

In the embodiment in which a single radio is provided a datagram such as a packet received over either network will received by transceiver . The packet may operate on only the network connection over which it was received. Any suitable mechanism may be used to ensure that each received packet is processed in connection with the network over which it was received. For example when transceiver receives a packet access protocols in the STA MAC and the MP MAC may determine using header or other packet information whether the packet was received from the infrastructure network or the mesh network. Each MAC may then process the packet only if it relates to its network. Alternatively transceiver may analyze the packet to determine the network over which the packet was transmitted and direct the packet to the appropriate MAC. Though any suitable mechanism may be used to ensure packets associated with different networks are processed in components adapted for processing packets for those networks.

Each MAC may recognize when a received packet contains data or command packets to be provided to higher levels of the networking stack. If a received packet regardless of which network over which it is received contains data the packet may be provided to data multiplexer .

Each MAC may provide data in conjunction with a tag that indicates the network over which that data was received. A tag may be any suitable identifier or indicator associated with data. The tag may be in a packet header a container for data stored in a data structure associated with data or represented in any other suitable way. The tags may be closely linked with the data or may be supplied separate from the data. For example a tag may be specified as a setting for data multiplexer that is provided by control logic or from another source. Moreover in some embodiments one tag may be associated with more than one packet. As an example of such an embodiment a setting may be specified for data multiplexer that is applicable to multiple packets or applicable for a defined period of time. Thus the specific mechanism by which a tag is specified is not critical to the invention and any suitable mechanism may be used.

Regardless of the manner in which a tag is specified multiplexer can direct data to the appropriate portions of IM Driver such that the data is provided through an adapter associated with the network over which the data was received. Received data can then be processed as is known in the art such as through TCP IP protocol modules or if the network over which the data was received operates according to the TCP IP protocol.

In embodiments in which some or all of the command packets received over a supported network are not consumed within the MAC associated with the network those command packets may also be provided to higher levels of the network stack through data multiplexer or any other suitable component. As with data packets the command packets can be tagged so that data multiplexer or other suitable multiplexer component can appropriately direct the packets for processing.

Multiplexer can perform a converse function for data or command packets generated at higher levels of the network stack. Data multiplexer may receive data or command packets for transmission over a network and based on a tag associated with that information route the information to a MAC associated with the network with which the data is associated. For example when transmitting a data packet from computer to an external node in the mesh network the multiplexer will receive the data packet and direct it to the MP MAC based on tags associated with the data packet.

Other components may also be included for processing received information associated with each network. In embodiments in which a mesh network is implemented for example a mesh routing forwarding module may be included to manage transmitted and received packets in the mesh network. For mesh protocols in which a device that is part of a mesh may receive and forward packets mesh routing forwarding module can track multiple connections of the wireless device to other devices in a mesh network. Upon receipt of a packet mesh routing forwarding module can determine whether the packet is to be forwarded to another device in the mesh network. If so mesh routing forwarding module can apply the packet to the MP MAC and the transceiver where the packet may be forwarded to another node in the mesh network. In such a scenario the wireless device serves as a transit node for communications between a source and a destination node in the infrastructure or mesh networks.

The driver layers may also include components to implement control functions. In the illustrated embodiments commands that control operation of the network interface including miniport driver and hardware may be specified as command objects sometimes called Object Identifiers OIDs . Miniport driver may include a component such as management unit to respond to such commands. The management unit can synchronize and control the modules in the NDIS miniport layer . Management unit may process each OID and in response generate appropriate control information to other components.

OIDs can be generated in the OS and can command the management unit to perform functions such as to report the capabilities and capacity of the NDIS miniport to handle communications with the infrastructure and mesh networks. OIDs processed by management unit may include OIDs as are known in the art for any of the MACs supported. In response to such OIDs management unit may identify the appropriate MAC for processing such an OID and apply the OID to the MAC for processing as is known in the art. Management unit can also process OIDs that facilitate simultaneous connection over more than one network. To facilitate simultaneous connectivity to the infrastructure and mesh networks using a single transceiver a number of new OIDS can be defined according to some embodiments of the present invention. A list of some of the OIDS related to mesh networks is provided in Table I.

The OIDS listed in Table I and other supported OIDs may be called by the OS to optimize and configure the NDIS miniport settings. The OIDS can be specific to a MAC all MACs connected to a specific network or all the MACs present in the wireless device. In some embodiments the calling of OIDS to reset or reconfigure a MAC does not interfere with the operations of the other MACs. As another example a MESH CONNECT OID may not initiate a connection to an existing mesh network or start a new mesh network before the MESH CONNECT PARAMS OID has been called. Several combinations or sequence of OID calls are possible. Furthermore it should be appreciated that several other OIDS not listed in Table I can be defined to facilitate wireless connectivity in mesh networks.

After activating or starting a device at step in the first step the OS of device may reset its miniport or Mesh MAC with a first OID. Using a second OID the OS may check how many MACs are currently being supported . If no MAC or only one MAC is being supported then device will not be able to connect to the mesh network. However if two or more MACs are detected the OS invokes a third OID to determine the capability and capacity of a MAC that will be used for the mesh network. Using a forth and a fifth OID the OS sets one MAC to communicate with the infrastructure network and another MAC to communicate with the mesh network. Next the OS scans the area or network for a list of all the devices operating in the mesh network by calling a sixth and a seventh OID. If no mesh network is detected the OS may create a new mesh network. An eighth OID may be employed to query and obtain configuration parameters of devices in the mesh network. The encryption and authentication information is obtained and set for the devices in the mesh using two more OIDs . Finally after assigning IDs to the mesh network and to each device in the mesh network using another two OIDs the OS invokes a last OID to connect device to the mesh network.

Other sequences of OIDs may be used to configure a miniport driver for communication in other scenarios. Regardless of the specific sequence of OIDs once configured to support two MACs a computer may communicate over two networks concurrently using the same radio.

After configuring the data in the API module data may be routed in step to the appropriate adapter in the IM driver and subsequently to the NDIS module . For example packets with tags indicating data to be transferred to the infrastructure network will be routed to adapter whereas packets with tags indicating data to be transferred to the mesh network will be routed to adapter . In step the multiplexer uses information contained in the tags and out of band data to determine if a packet is directed to the mesh network. If a determination is made that the packet is destined for the infrastructure network the packet will be sent to the STA MAC . Similarly packets for the mesh network will be directed to the MP MAC . Subsequently the packets are transmitted in step to the appropriate network through the transceiver .

In the embodiment illustrated processing at block may entail interleaving data for the different supported networks such that concurrent operation of two or more network connections is achieved. In some embodiments a component such as transceiver may buffer information for transmission received from one network MAC while transmitting information from another network MAC. The buffering may be implemented so that data is transmitted in the order in which it is received at transceiver . However other implementations are possible. For example information associated with one of the networks may be given priority. Priority may be defined in any suitable way. For example priority may be defined a priori based on network type or may be defined dynamically in response to OIDs or other commands applied to miniport driver in response to user input or execution of an application.

Prioritization can also be achieved at other locations within NDIS miniport driver . For example data multiplexer may alternatively or additionally implement prioritization.

When information is received over a supported network a converse process may be performed to direct the data to the appropriate component. describes a method of processing packets that have been received on computer through transceiver in accordance with an embodiment of the invention. A destination address carried in the headers and other identifying characteristics such as overall packet format associated with a received packet can help the transceiver determine whether the packet originated from a node in the mesh network or the infrastructure network . Packets from the infrastructure network will be directed to the STA MAC and packets from the mesh network will be directed to the MP MAC for further processing.

The MP MAC can extract instructions contained in the packet and determine if any low level functions need to be executed . Low level functions include and are not limited to routing network connectivity network diagnostics and network security. If a low level function is detected the MP MAC will execute the function . For example computer may receive a packet from another node in the mesh network. After processing the packet MP MAC may determine that the packet needs to be forwarded to another node in the network and subsequently the transceiver is instructed to forward the packet to the destination node in the mesh network.

After executing any low level functions if higher level functions need to be executed the packet is sent to the multiplexor where it is tagged to designate it as a packet arriving from the mesh network. The packet is then directed to the mesh sections of IM driver in step . The interface layer can direct the packet to the mesh portion of the API . The API then notifies the package to its intended destination in computer . As mentioned earlier the destination may be part of the user interface an application or within the OS of computer . Furthermore computer may execute low level and high level functions at the same time or at different times.

Conversely in step if a packet is determined to have arrived from a node in the infrastructure network the packet is passed to the STA MAC . By default the STA MAC may be configured without the ability to perform low level functions however in some embodiments a user may configure the STA MAC to perform low level functions in the infrastructure network if desired. After processing the received packet the packet is passed on to the multiplexor and subsequently the infrastructure adapter . As described earlier the MAC tags the packet as having arrived from the infrastructure network so that multiplexor can direct it to the appropriate adapter . The infrastructure adapter selects the appropriate modules in the interface layer to further process and subsequently transfer the packet to the infrastructure network portion of the API layer . The API then notifies the package to its intended destination in computer .

As has been described herein several components within an OS are utilized for implementing computer networking. These components can be grouped according to the nature of functions they perform. In three groups or tiers of components with an OS are shown. Low level functions as described earlier can be executed by the NDIS miniport layer . In an illustrated embodiment of the invention the NDIS miniport layer comprises components such as a routing table a security unit and a diagnostics unit . Low level functions are not necessarily limited to execution by these components and may involve other components in the OS or miniport driver . The routing table security unit and diagnostics unit can be connected to each other and help execute the tasks performed by the MACs management unit transceiver and multiplexor. In some embodiments NDIS miniport driver may be configured to perform these low level functions without interaction from the OS or higher level components.

The routing table contains information regarding network routes and destinations as is well known to one of ordinary skill in the art. The information includes and is not limited to a network ID a host ID and a default mode. This information may be used to determine whether a received packet is to be forwarded to other nodes in a mesh network provided to higher levels within the networking stack for processing or both.

The security unit contains information related to security protocols and passwords for accessing and connecting to other networks. For example one or more passwords or may be needed for a user of computer to communicate with another user connected to the mesh network and or the infrastructure network. If multiple users use computer each may have a unique password or protocol setting for connecting to other networks. Information on these passwords and protocols is stored in the security unit 

The diagnostics unit can monitor the connectivity with other networks. The diagnostics unit for example can monitor traffic flowing in a particular data communication link and determine if there is a problem in the link. The diagnostics unit can also determine the cause of a problem and provide instructions to fix a network connectivity problem.

In addition to the low level functions supported with NDIS miniport driver higher level functions may be supported within a network control unit . These higher level control functions may be based on commands sent to or received from NDIS miniport driver . These commands my be implemented using OIDs or in any other suitable way. The network control unit performs high level functions including but not limited to executing application or registry specific commands and outputting received data instructions to the user. The network control unit also implements the routing logic associated with higher layer protocols such as TCP IP as well as advertisement of services which include associated peripheral functions such as printing scanning storage as well as connectivity to the Internet. The network control unit can also allow a user of computer to trouble shoot and configure the settings for connecting or receiving transmitting packets to the mesh and or infrastructure networks and to specific users in the networks. For example OIDs may be defined to allow diagnostics module to poll NDIS miniport driver to provide status information used for network diagnostics.

Network control functions may similarly be partitioned between high level and low level functions. In an illustrated embodiment of the invention the network control unit includes a mesh control unit infrastructure control unit and a diagnostics unit . High level functions originating or designated for the mesh network are implemented in the mesh unit where as high level functions originating or designated for the infrastructure network can be implemented in the infrastructure unit . For example these high level network control units may generate OIDs representing high level commands such as connect or disconnect. More detailed steps required to establish a connection may be implemented within the MAC or other lower level components for the associated network.

Having thus described several aspects of at least one embodiment of this invention it is to be appreciated that various alterations modifications and improvements will readily occur to those skilled in the art.

Such alterations modifications and improvements are intended to be part of this disclosure and are intended to be within the spirit and scope of the invention. Accordingly the foregoing description and drawings are by way of example only.

The above described embodiments of the present invention can be implemented in any of numerous ways. For example the embodiments may be implemented using hardware software or a combination thereof. When implemented in software the software code can be executed on any suitable processor or collection of processors whether provided in a single computer or distributed among multiple computers.

Further it should be appreciated that a computer may be embodied in any of a number of forms such as a rack mounted computer a desktop computer a laptop computer or a tablet computer. Additionally a computer may be embedded in a device not generally regarded as a computer but with suitable processing capabilities including a Personal Digital Assistant PDA a smart phone or any other suitable portable or fixed electronic device.

Also a computer may have one or more input and output devices. These devices can be used among other things to present a user interface. Examples of output devices that can be used to provide a user interface include printers or display screens for visual presentation of output and speakers or other sound generating devices for audible presentation of output. Examples of input devices that can be used for a user interface include keyboards and pointing devices such as mice touch pads and digitizing tablets. As another example a computer may receive input information through speech recognition or in other audible format.

Such computers may be interconnected by one or more networks in any suitable form including as a local area network or a wide area network such as an enterprise network or the Internet. Such networks may be based on any suitable technology and may operate according to any suitable protocol and may include wireless networks wired networks or fiber optic networks.

Also the various methods or processes outlined herein may be coded as software that is executable on one or more processors that employ any one of a variety of operating systems or platforms. Additionally such software may be written using any of a number of suitable programming languages and or programming or scripting tools and also may be compiled as executable machine language code or intermediate code that is executed on a framework or virtual machine.

In this respect the invention may be embodied as a computer readable medium or multiple computer readable media e.g. a computer memory one or more floppy discs compact discs optical discs magnetic tapes flash memories circuit configurations in Field Programmable Gate Arrays or other semiconductor devices or other tangible computer storage medium encoded with one or more programs that when executed on one or more computers or other processors perform methods that implement the various embodiments of the invention discussed above. The computer readable medium or media can be transportable such that the program or programs stored thereon can be loaded onto one or more different computers or other processors to implement various aspects of the present invention as discussed above.

The terms program or software are used herein in a generic sense to refer to any type of computer code or set of computer executable instructions that can be employed to program a computer or other processor to implement various aspects of the present invention as discussed above. Additionally it should be appreciated that according to one aspect of this embodiment one or more computer programs that when executed perform methods of the present invention need not reside on a single computer or processor but may be distributed in a modular fashion amongst a number of different computers or processors to implement various aspects of the present invention.

Computer executable instructions may be in many forms such as program modules executed by one or more computers or other devices. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.

Also data structures may be stored in computer readable media in any suitable form. For simplicity of illustration data structures may be shown to have fields that are related through location in the data structure. Such relationships may likewise be achieved by assigning storage for the fields with locations in a computer readable medium that conveys relationship between the fields. However any suitable mechanism may be used to establish a relationship between information in fields of a data structure including through the use of pointers tags or other mechanisms that establish relationship between data elements.

Various aspects of the present invention may be used alone in combination or in a variety of arrangements not specifically discussed in the embodiments described in the foregoing and is therefore not limited in its application to the details and arrangement of components set forth in the foregoing description or illustrated in the drawings. For example aspects described in one embodiment may be combined in any manner with aspects described in other embodiments.

Also the invention may be embodied as a method of which an example has been provided. The acts performed as part of the method may be ordered in any suitable way. Accordingly embodiments may be constructed in which acts are performed in an order different than illustrated which may include performing some acts simultaneously even though shown as sequential acts in illustrative embodiments.

Use of ordinal terms such as first second third etc. in the claims to modify a claim element does not by itself connote any priority precedence or order of one claim element over another or the temporal order in which acts of a method are performed but are used merely as labels to distinguish one claim element having a certain name from another element having a same name but for use of the ordinal term to distinguish the claim elements.

Also the phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of including comprising or having containing involving and variations thereof herein is meant to encompass the items listed thereafter and equivalents thereof as well as additional items.

