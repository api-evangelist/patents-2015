---

title: Client device using a markup language to control a periphery device via a point-of-sale printer
abstract: A device control system has a terminal  with an application , and a printer  that controls a device. The terminal  sends a request written in XML generated by the application . The printer  receives the XML request, the terminal  sends an XML response, and if the terminal  requested control of the device in the XML request, controls the device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09495121&OS=09495121&RS=09495121
owner: Seiko Epson Corporation
number: 09495121
owner_city: Tokyo
owner_country: JP
publication_date: 20151230
---
This application is a continuation of and claims priority under 35 U.S.C. 120 on application Ser. No. 14 140 301 filed Dec. 24 2013 which claims priority under 35 U.S.C. 119 e on provisional application No. 61 748 232 filed Jan. 2 2013. The content of each such related application is incorporated by reference herein in its entirety.

The present invention relates to a device control system that controls a device and a control method of the device control system.

A device such as a computer used as a controller for controlling devices is conventionally part of a system that controls devices such as a keyboard and barcode scanner by means of a terminal connected to a network.

The present invention is directed to the foregoing problem and an object of the invention is to provide a device control system a terminal and a control method of a device control system that can control devices by a terminal connected to a network.

To achieve the foregoing object a device control system according to the invention has a device configured to input or output data a terminal configured to run an application to send a request in markup language and to receive a response in markup language and a device control device configured to connect to the device to control the device based on the markup language request and to send the markup language response.

The invention enables controlling devices connected to the device control device by a terminal connected to a network. The terminal can be any device that can run an application that generates data written in XML. Because XML is highly versatile many different devices can be used as the terminal. Developing applications for the terminal is also simple.

The application also sends to the device control device the request including an establish communication message requesting establishing a communication link to the device control device and when the request including the establish communication message is received the device control device sends to the application the response including a response message to the establish communication message contained in the request.

The application also establishes a communication link with the device control device based on a response message to the establish communication message contained in the response sent by the device control device.

After the communication link is established the application also sends to the device control device the request including an open message to open communication to the device connected to the device control device to the device control device.

When the request containing the open message is received the device control device sends to the application the response including a response message to the open message contained in the request.

The application also receives the response containing a response message to the open message sent by the device control device and based on a response message to the open message becomes able to communicate with the device.

After communication with the device is enabled the application also sends to the device control device the request including a close message to close communication with the device.

The device control device also receives the request containing the close message and sends to the application the response containing a response message to the close message.

In addition the application receives the response containing a response message to the close message sent by the device control device and closes communication with the device based on a response message to the close message.

Another aspect of the invention is a control method of a device control system including a device configured to input or output data a terminal configured to run an application and a device control device configured to connect to the device comprising sending a markup language request generated by the application to the device control device and receiving the request by the device control device generating a response in the markup language and sending the generated response to the terminal.

The control method of a device control system also includes sending information contained in the request to the device by the device control device executing a process based on information contained in the request by the device and sending a result processed based on information contained in the request to the device control device and sending to the terminal the response including a result processed based on information contained in the request sent by the device.

The control method of a device control system also includes the application sending to the device control device the request including an establish communication message requesting establishing a communication link to the device control device and when the request including the establish communication message is received the device control device sending to the application the response including a response message to the establish communication message contained in the request.

In addition the application establishes a communication link with the device control device based on a response message to the establish communication message contained in the response sent by the device control device.

In addition after the communication link is established the application sends to the device control device the request including an open message to open communication to the device connected to the device control device to the device control device.

In addition when the request containing the open message is received the device control device sends to the application the response including a response message to the open message contained in the request.

In addition the application receives the response containing a response message to the open message sent by the device control device and based on a response message to the open message becomes able to communicate with the device.

In addition the application sends to the device control device the request including a close message to close communication with the device when stopping the application after communication between the application and the device is enabled.

In addition the device control device receives the request containing the close message and sends to the application the response containing a response message to the close message.

In addition the application receives the response containing a response message to the close message sent by the device control device and closes communication with the device based on a response message to the close message.

Objects of the present invention are also met in a printer for a point of sale POS system. The printer includes a connector configured to connect to a device responsive to device control commands a communication interface configured to communicate with a terminal to receive a markup language request from the terminal and to send a markup language response to the terminal a controller configured to interpret the markup language request received from the terminal and to control the device using appropriate device control commands to execute the interpreted markup language request the printer being further configured to encode any response from the device as a markup language response and to send the markup language response to the terminal wherein the device control commands are not a markup language.

Additionally the printer may also receive from the terminal an establish communication markup language request to establishment a communication link with the printer. In this case the printer may send to the terminal a markup language response to the establish communication markup language request.

Further preferably in response to the printer receiving from the terminal an open markup language request to open communication with the device connected to the printer the printer sends to the terminal a markup language response to the open markup language request indicating whether a communication link with the device is established.

Furthermore in response to the printer receiving from the terminal a close markup language request to close communication with the device the printer sends to the terminal a markup language response to the close markup language request indicating whether communication with the device is closed.

A preferred embodiment of the invention is described below with reference to the accompanying figures.

The terminal may be any device that connects to a network and is capable of socket communication and could be a personal computer a smartphone or a tablet computer for example. The terminal has an environment that is capable of socket communication and can handle XML documents which are markup language and uses iOS Android Windows Linux or MacOS for example as the OS operating system .

The terminal and printer are connected over a communication network. In the example shown in the device control system has a wireless LAN access point and the wireless LAN access point is connected to the printer by a cable. The terminal and printer communicate by a wireless connection between the terminal and the wireless LAN access point .

A network printer customer display and barcode scanner are connected to the printer as controlled devices. The network printer is connected to the printer through a network. The network printer is a printer separate from the local printer of the printer and has a wired LAN or wireless LAN interface. The customer display is connected through the USB interface described below. The barcode scanner is connected through the USB interface described below. These devices are generally called peripheral devices peripherals and are referred to below as devices. Devices that connect to the printer are not limited to the devices shown in . For example displays and key input devices such as keyboards are also included. Also included are devices that can be controlled by a HID human interface device driver standard to the OS serial communication devices that can be operated using a serial communication driver standard to the OS and USB devices that can be controlled in the same way as serial communication devices.

The device control system uses Device XML which is a command system written in XML markup language defining functions for controlling devices peripheral devices connected to the printer .

The terminal has an application . The application is a native application program installed on the terminal . The application the device application programming interface API sends an XML format request message Request by socket communication to the printer .

A device service interface and a device control script are built in to the printer . The device service interface and device control script interpret the request message and output a request to the device control script . The device control script controls a key input device and serial communication device . The device control script outputs key input device and serial communication device events and control result responses to the device service interface . The key input device in this example includes the keyboard in and the serial communication devices include the barcode scanner and cash drawer in .

The device service interface exchanges data with the local printer . The local printer is the printer incorporated in the printer . The device service interface also exchanges data with the network printer and customer display .

The device service interface outputs an XML format response Response to the application based on the results of controlling the network printer customer display and local printer and device control script responses.

The printer thus controls devices through the device service interface and device control script . Devices controlled in the example shown in are the network printer customer display key input device serial communication device and local printer .

The terminal can control devices connected to the printer using the Device XML command system of the device control system by the above operation.

The printer has a CPU RAM flash ROM nonvolatile memory a video controller an auxiliary storage device SSD solid state drive interface and a local printer print unit . The printer could also have a speaker. The local printer is a thermal printer that can print on 80 mm wide or 58 mm wide roll paper.

The printer can be installed in a POS point of sale system. The operating system OS of the printer is Windows based for example and is stored in the auxiliary storage device.

A device control program which is software for the terminal to control devices connected to the printer is installed to the printer . As a result installing a driver program to the terminal is not necessary.

The printer also has a Windows standard device driver program APD UPOS driver OPOS driver or other software for controlling devices and the local printer of the printer .

A web application can be installed to the printer . This enables using the printer as an application server as shown in . The web application could for example be a PHP and Perl server side script or SQLite database access script server side script .

The foregoing network printer customer display and barcode scanner can be connected to the printer . A display cash drawer and keyboard can be connected to the printer .

A roll paper cover is disposed to the top of the printer . The roll paper cover opens when the cover open button is pressed and roll paper can be loaded. A manual cutter for manually cutting the roll paper and a cutter cover are disposed to the paper exit from which the roll paper is discharged after printing. The cutter cover is opened when a paper jam occurs in the local printer of the printer and when the roll paper cover does not open. The blade of the manual cutter returns to the home position when the cutter cover opens. The printer also has a power switch B reset button A LED display unit and control panel . The LED display unit includes a disc access LED indicating accessing the auxiliary storage device and status LEDs. The status LEDs report the operating state of the OS the standby mode of the OS that the power is off the OS start up sequence and a high CPU temperature warning.

The control panel includes a power LED error LED roll paper LED and paper feed button. The power LED lights when power is supplied. The error LED is off during normal operation and lights when the printer resets and when the end of the roll paper is detected and printing stops. The paper LED is off when sufficient roll paper remains lights steady when little paper is left and blinks when the self diagnostic test is running. Pressing the feed button advances the roll paper one line at a time or continuously.

A connector cover is disposed to the back of the printer . Removing the connector cover exposes the connector panel connection panel on the back of the printer .

The cash drawer or an optional buzzer is connected to the drawer kick out connector . The Ethernet connector is connected to the network. The USB connector has six USB ports. The customer display barcode scanner keyboard and other devices are connected to the USB connector . The display is connected to the VGA connector . The serial interface of a serial communication device connects to the COM connector . The line output connects to an external speaker.

Configure the system and printer network. The network settings of the printer can be configured using any of the following methods.

Connect a device to the printer . As described above connectable devices include the customer display barcode scanner display cash drawer and keyboard . Also included are devices that can be controlled by a HID driver standard to the OS serial communication devices that can be operated using a serial communication driver standard to the OS and USB devices that can be controlled in the same way as serial communication devices. The connection panel in has only one COM connector but plural serial communication devices can be connected if a serial USB conversion cable is used and the driver program is compatible with serial USB conversions.

A device control script prepared by the user is registered in order for the printer to control devices other than the products with which the printer is compatible. Registration is done from the web browser.

Register the device connected to the printer in the printer software. Registration is done from the web browser.

A method of registering a device control script prepared by the user is described with reference to .

 4 Start the TMNetWebConfig utility. Click on Web service settings Register delete in the window shown in .

Click on Browse in the Control script to be registered field and select the device control script to register.

The device control script is registered and listed in the Registered control scripts field in the bottom of the window.

Register a device to be controlled by Device XML. A device is registered by the web browser displaying the TMNetWebConfig utility as shown in .

 2 TheTMNetWebConfig utility starts. From Web service settings Device registration in the window shown in click on the type of device to register. Devices are displayed under Device registration in the screen shown in . Click on the type of device to register. The type of device in this embodiment can be selected from five types printer display key input device serial communication device and other as shown in . Details about the types of devices are as shown in .

 3 A configuration screen is displayed for each device. The connected device is registered in the printer .

 3 1 1 Check that printer is registered for the device ID local printer in the Registered Printer field in the screen shown in .

 3 1 3 1 Set the items shown in device ID type model number IP address retry interval and click Registration .

 3 1 3 2 After confirming the printer is added to the Registered Printer list click Test printing . Confirm that TEST PRINT is printed by the registered network printer .

The device ID of the customer display is a constant local display . Register the connected customer display by the following steps.

 3 3 2 After confirming the registered device was added to the Registered Key Input Device field click Operating test .

 3 3 3 A screen will be displayed by the web browser. Operate the key input device and confirm that the result is displayed as operated.

 3 4 1 Set the items device ID device name control script communication speed data bit parity stop bit free control shown in for the connected serial communication device and click Registration .

 3 5 1 Set the items device ID control script shown in for the connected device and click Registration .

Applications in corresponds to application Device Control indicates the device control function device service interface and Device denotes a controlled device.

1 Establish TCP connection. Establish a TCP connection to the socket interface from the application .

6 Application sends a device data message. Application controls device using the device data message.

8 Application sends close device nmessage. The connection to the device service interface and socket interface communication is terminated.

Examples of communication data between the application and the device service interface are shown in and . In and the NULL character is represented by 0 . and show examples of communication data when establishing a connection acquiring administrator information opening a device controlling a device and closing a device.

This is XML for request messages from the application to the printer and response messages from the printer to the application .

This is XML for storing request and response data for each controlled device. This forms a sub element of the element of a message.

Message data for each device specifies the data that controls the device in a sub element of the element of a message.

Before specifying the data declare the type of message data using the element and then specify the data of the sub element. The elements that can be used for each type of device are shown in .

Returns the administrator information set in the printer . The information is set with the TMNet WebConfig utility.

This message returns the administrator information to the application . A description of the sub elements and data types is shown in .

This message makes the device linked to the device ID usable. Exclusive use of the specified device is given to the requesting application .

This message specifies the device to open. A description of the sub elements and data types is shown in .

This message returns the device open result to the application . A description of the sub elements and data types is shown in .

This message specifies the device to close. A description of the sub elements and data types is shown in .

This message returns the device close result to the application . A description of the sub elements and data types is shown in .

This message sends data to a device. Device control commands and print and display data are included. A description of the sub elements and data types is shown in .

This message returns data from the device. The result of device control events that occurred in the device and input data from the device are included. A description of the sub elements and data types is shown in .

This message returns device control command and service control command errors and other common errors. A description of the sub elements and data types is shown in .

This message returns scanned data from the barcode scanner to the application. A description of the sub elements and data types is shown in .

This message sends print data and settings data to the printer. A description of the sub elements and data types is shown in .

This message returns the print result to the application. A description of the sub elements and data types is shown in .

This is an XML document sent from an application to a printer. This document instructs the printer to execute a specified function. contains the element.

This attribute gets an OR function as a decimal expression according to the printer status. shows the attribute values.

This message specifies the character string to print. This message also configures string related settings such as style print position and line feed space.

In page mode characters are printed from the current print position referenced to the baseline dot of the characters printer specifications page .

Horizontal tab line feed and other symbols required for printer control are written using the entity references shown in .

This attribute specifies smoothing. Text printing quality improves if smoothing is enabled. shows the attribute values.

If the dw attribute and the width attribute are both specified in one element the horizontal scale specified by the width attribute takes precedence.

If the dh attribute and the height attribute are both specified in one element the vertical scale specified by the height attribute takes precedence.

If the dw attribute and the width attribute are both specified in one element the horizontal scale specified by the width attribute takes precedence.

If the dh attribute and the height attribute are both specified in one element the vertical scale specified by the height attribute takes precedence.

This attribute specifies inverting the black and white parts of characters. shows the attribute values.

In page mode this is the same as the horizontal print position specified by the position element but the print position moves on the horizontal axis.

The align attribute set in this element also applies to the align attribute of image logo barcode and symbol elements.

In page mode the print direction is set to right to left right to left using the direction element to print text rotated 180 degrees.

The rotate attribute set in this element also applies to the rotate attribute of the barcode and symbol elements.

This message specifies the paper feed distance. This message specifies the paper feed distance in dots or in lines. When the paper feed amount is not specified the paper is fed one line line feed . This message also sets the paper feed distance per line.

If the paper feed distance per line is 30 dots a maximum paper feed distance of 240 lines can be specified.

The paper feed distance is stored separately for the standard mode and the page mode. Specifying the linespc attribute also affects the linespc attributes of the and elements that follow.

Raster graphics refer to data generated by horizontally scanning the pixels of an image starting from an origin at the top left corner of the image.

Data is generated at 1 bit per pixel for two tone images and 4 bits per pixel for 16 tone images starting from the most significant bit of each byte. Zero padding is added so that scan data is in byte units for each line.

To print a raster image at high speed specify left for the align attribute and specify a multiple of 8 that does not exceed the printer paper width for the width attribute.

In page mode raster images are printed from the current print position referenced to the bottom left dot of the raster image. The print position does not move.

The align attribute set in this element also applies to the align attribute in the text logo barcode and symbol elements.

A logo must first be registered in the printer using a model specific utility or logo registration utility TMFLogo .

In page mode logos are printed from the current print position referenced to the bottom left dot of the logo.

This attribute specifies the value of key code set at the time of NV logo registration. This attribute is required.

The align attribute set in this element also applies to the align attribute in the text logo barcode and symbol elements.

A barcode will not be printed if the settings are not compliant with the barcode standard or if the barcode will be larger than the print area of the printer.

In page mode a barcode is printed from the current print position referenced to the bottom left dot of the barcode not including the HRI .

The align attribute set in this element also applies to the align attribute in the text image logo and symbol elements.

The rotate attribute set in this element also applies to the rotate attribute in the text and symbol elements.

A two dimensional symbol will not be printed if the settings are not compliant with the two dimensional symbol standard or if the two dimensional symbol will be larger than the print area of the printer.

In page mode a two dimensional symbol is printed from the current print position referenced to the bottom left dot of the two dimensional symbol.

The align attribute set in this element also applies to the align attribute in the text image logo and barcode elements.

The rotate attribute set in this element also applies to the rotate attribute in the text and barcode elements.

A vertical line is drawn until the end is specified by the message described below. This element is used with vline end.

The print area is set by specifying the origin width and height referenced to the absolute origin. As shown in the absolute origin is a dot above the top left corner of the printable area.

Specify the print area according to the print content. If print data extends beyond the print area the print data will not be completely printed.

Specify the width and height of the print area according to the print direction setting. The print data may not be completely printed.

This message specifies the print direction and rotates the print area. The starting point of the print area moves according to the rotation of the print area.

This message specifies the print position referenced to the starting point of the print area. The starting point of the print area moves according to the direction of rotation.

This message specifies the print start position coordinates according to the content to be printed. Refer to the following.

This is optional when for left aligned printing of standard sized characters. To print double sized height characters specify a value equal to or greater than 42 for y.

This attribute specifies the position in dots to stop printing a vertical line. Specify the line type.

This attribute specifies the position in dots to stop printing a vertical line. Specify the line type.

This message executes at the beginning of a line. The paper is at the beginning of a line after the paper is cut.

This message specifies outputting a signal to the drawer kick out connector. A buzzer can be sounded depending upon the model.

This message returns the result of sending to the customer display to the application. shows the sub element.

Customer Display Control XML which is an XML document that controls a customer display is described next.

This is an XML document sent from the application to the customer display. This document requests the customer display to execute the specified function. An message contains sub elements required to control the customer display.

This attribute specifies the scrolling method of the window when a window is created. shows the attribute values.

This attribute specifies whether or not to delete the window specified by the number attribute. shows the attribute values.

This attribute specifies the language of the text display. If omitted the current setting is used. shows the attribute values.

This attribute specifies the display method of the cursor. If omitted the current setting is used. shows the attribute values.

This message controls screen blinking. Blinking continues at the interval specified in the interval attribute.

For example if interval is 1 to 50 the actual interval is 50 ms if the interval is 51 to 100 the actual interval is 100 ms.

The specified string is displayed 1 character at a time at the interval specified in uwait. After the string is displayed to the end display pauses for the time specified by rwait and the string is then displayed again from the beginning.

This attribute specifies the interval waited to display each character in milliseconds. shows the attribute values.

This attribute specifies how long to wait after the end of the string is displayed in milliseconds. shows the attribute values.

This attribute specifies display language. If omitted the current setting is used. shows the attribute values.

This message specifies the key code used to determine the start of a character string to detect input from the POS keyboard. If a key code specified by this message is input the character string from then until the Enter key is pressed is returned in the onstring message.

This is used for example to substitute input from the POS keyboard for barcode input. To stop the onstring message send a setprefix message without a keycode.

This message specifies the key code used to determine the start of a character string to detect input from the POS keyboard. shows sub elements.

This message reports detection of input from any one of the key codes specified with setprefix to Enter. The detected key code information is acquired in the argument in addition to the input sequence of characters. shows sub elements.

By using the device control script API provided by the device control function of the invention data processing by a device can be customized and new devices can be used from the application .

As shown in a device control script has a DeviceConnection object and a ClientConnection object . In devices of the highly functional printer are collectively represented by device .

When XML data Request containing the open device message described above is sent the socket interface of the printer receives the XML data. The socket interface then passes the received data to the device service interface . The device service interface then instantiates an object so that the device control script corresponding to the device requested by the open device message can be used. The device can then be controlled through the instantiated object.

The objects shown in are then passed to the device control script from the device service interface . By using the device connection DeviceConnection object and client connection ClientConnection object the device control script can communicate with the application and device .

This object is an object passed to the first parameter of the constructor of the device control script .

An example is shown in . In this example the onkeypress event of the device object is called and 49 is received from data.keycode and 1 is received from data.ascii using the data parameter of the onkeypress event.

This object is an object passed in the second parameter of the constructor of the device control script .

Configure the system and printer network settings. The network settings of the printer can be configured using either of the following methods.

Register a barcode scanner to be controlled by Device XML in the printer . The barcode scanner is registered and configured using the TMNet WebConfig utility.

2. Start the web browser on the computer used for configuring and input the URL http IP address of printer webconfig .

3. The TMNetWebConfig utility starts. Click on Web service settings Device registration Key input device shown in 3 in .

4. The Key input device screen is displayed. Set the items shown in in the input fields shown in 4 in and click Registration .

As described above a device control system according to this embodiment of the invention has a terminal that executes an application and a printer with a connection panel to which a device connects connected over a network. The terminal sends XML data generated by the application to the printer . The printer receives the XML data sent from the terminal through a socket interface . When the terminal sends data requesting administrator information the printer sends the administrator information of the printer to the terminal using functions of a device service interface and device control script . When the terminal sends data requesting device control the printer controls the device. As a result devices connected to the printer can be controlled by a terminal connected to the network. The terminal can be any device that can run an application that generates data written in XML. Because XML is highly versatile many different devices can be used as the terminal . Developing applications for the terminal is also simple.

When the terminal requests administrator information by sending data containing an message the printer returns XML data including the administrator name and or location stored by the printer to the terminal .

When the terminal sends data including a device open request the printer enables controlling the device and when the terminal sends data including a device close request the printer disables control of the controlled device.

The data generated by the application also includes message data that differs for each device connected to the printer or message data common to devices.

When controlling a device requested by data the printer also instantiates a DeviceConnection object that sends data to the device and a ClientConnection object that sends data to the terminal .

The foregoing embodiment obviously describes one example of the invention and can be modified and adapted as desired within the scope of the accompanying claims.

