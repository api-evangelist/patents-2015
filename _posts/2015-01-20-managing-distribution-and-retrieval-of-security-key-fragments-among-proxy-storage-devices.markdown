---

title: Managing distribution and retrieval of security key fragments among proxy storage devices
abstract: A method performed by a processor of a computer, includes obtaining a security key associated with data, dividing the security key into key fragments, and distributing different ones of the key fragments to different proxy storage devices. Key fragments are received from the proxy storage devices, a reconstructed security key is generated based on the key fragments received from the proxy storage devices, and programmatic access to the data is controlled based on the reconstructed security key. Related computer program products and systems are disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09413735&OS=09413735&RS=09413735
owner: CA, Inc.
number: 09413735
owner_city: New York
owner_country: US
publication_date: 20150120
---
The present disclosure relates to computing systems and in particular to management of security keys among computer systems including Bitcoin management systems.

Bitcoin is a software based peer to peer payment system. Bitcoins especially personal Bitcoins are typically stored in a digital wallet which exists either in the cloud or on a user s computer or mobile device. The digital wallet functions as a virtual bank account that allows users to send and receive Bitcoins and make payments. However only users credentials for Bitcoin ownership are stored in the digital wallets. A Bitcoin payment occurs by transfer of value between Bitcoin addresses that gets recorded in a publically accessible transaction ledger the blockchain where Bitcoin address identifiers are listed.

Security of digital wallets is an increasing concern in view of hackers stealing Bitcoins due to insufficient security mechanisms for digital wallets. The most sensitive data in a digital wallet is the collection of private keys associated with the Bitcoin addresses that occur in the public blockchain. Some Bitcoin owners have resorted to dividing their Bitcoins between less secure hot storage residing in a network accessible digital wallet and more secure cold storage residing on a non network accessible device such as a removable non volatile memory device.

Some embodiments of the present disclosure are directed to a method performed by a processor of a computer. The method includes obtaining a security key associated with data dividing the security key into key fragments and distributing different ones of the key fragments to different proxy storage devices. The method further includes receiving the key fragments from the proxy storage devices generating a reconstructed security key based on the key fragments received from the proxy storage devices and controlling programmatic access to the data based on the reconstructed security key.

Some related other embodiments are directed to a computer program product that includes a non transitory computer readable storage medium storing computer readable program code which when executed by a processor of a computer causes the processor to perform operations including obtaining a security key associated with data dividing the security key into key fragments and distributing different ones of the key fragments to different proxy storage devices. The operations further include receiving the key fragments from the proxy storage devices generating a reconstructed security key based on the key fragments received from the proxy storage devices and controlling programmatic access to the data based on the reconstructed security key.

Other methods computer program products and or systems according to embodiments of the inventive subject matter will be or become apparent to one with skill in the art upon review of the following drawings and detailed description. It is intended that all such additional methods computer program products and or systems be included within this description be within the scope of the present inventive subject matter and be protected by the accompanying claims. Moreover it is intended that all embodiments disclosed herein can be implemented separately or combined in any way and or combination.

In the following detailed description numerous specific details are set forth in order to provide a thorough understanding of embodiments of the present disclosure. However it will be understood by those skilled in the art that the present invention may be practiced without these specific details. In other instances well known methods procedures components and circuits have not been described in detail so as not to obscure the present invention. It is intended that all embodiments disclosed herein can be implemented separately or combined in any way and or combination.

Many computer systems use various forms of security keys e.g. private key password etc. to control access to data such as application program code user information etc. A fundamental problem is that a weak security key short enough for a human to reliably remember may be guessed or determined by brute force e.g. repetitive logical attempts by an attacker. In contrast a stronger security key increases the risk that it will be recorded by the user somewhere whether on paper or in digital form and the protection of the recorded format then becomes a challenge. In addition to providing data security characteristics of a security key can affect other system operations such as system robustness recovery system convenience of use and unauthorized attempted access detection and response by the system.

When stored locally sensitive data can be protected by encryption under either a password or a cryptographic key. As used herein a security key refers to a cryptographic key a password and or other information that can be used to control access to data.

Increased protection of a security keys may be obtained by the use of n of n or n of m secret sharing to split each security key into fragments that are dispersed across email accounts social media accounts websites text message addresses trusted associates and various types of storage media each of which may have different security processes that control access thereto. The original security keys can be regenerated responsive to receiving all or a threshold number of the key fragments from the distributed storage locations. Some approaches for n of m secret sharing that may be used with various embodiments of the present disclosure are described in the publication Shamir Adi 1979 How to share a secret Communications of the ACM 22 11 612 613 the contents of which are incorporated herein by reference.

Various embodiments of the present disclosure are described in the context of controlling access to data of a Bitcoin digital wallet program also referred to herein as a Bitcoin wallet. However the embodiments are not limited thereto and may be applied to other systems that can benefit from improved data security. For example access control computers disclosed herein may be used to control access to any type of data such as application program code and or user information accessed by application program code including online user account information such as financial accounts email accounts streaming media service accounts etc.

Bitcoin uses public key cryptography whereby keys are created in pairs each pair has a private key and a public key. With Bitcoin rather than use a public key directly a small sequence of alphanumeric characters is derived which is called a Bitcoin address . Each Bitcoin address is the possible destination of a Bitcoin payment such as to a network addressable Bitcoin transaction ledger. An address functions like an account number or name and a private key functions as an ownership credential. The Bitcoin wallet may securely store many pairs of addresses and private keys.

The Bitcoin wallet may be encrypted by the access control computer as a whole using a password security key and or individual private keys storable within the Bitcoin wallet may be encrypted separately using corresponding security keys. For example the Bitcoin wallet data can be encrypted under a password by generating a symmetric password security key from the password via a well known mechanism such as one of the public key cryptography standards PKCS e.g. PKCS 5. The data is then encrypted using the generated password security key and a corresponding algorithm such as Advanced Encryption Standard AES .

When a key management program manages a plurality of security keys for each of the plurality of security keys the operations can be repeated to divide the security key into key fragments and to distribute different ones of the key fragments to different ones of the proxy storage devices and or . The key fragments from one of the plurality of security keys can be distributed to a group of the proxy storage devices which is selected based on the group containing at least one proxy storage device that is not within another group of the proxy storage devices that receives distribution of key fragments from another one of the plurality of security keys. Distributing key fragments of different ones of the security keys to different groups containing at least some different proxy storage devices may increase a level of security by which the collection of security keys is protected. The key splitter the key fragment distributor and or the key fragment receiver of the access control computer may encapsulate application programming interfaces of the key management program. Providing the key fragment generation distribution and receiving functionality through program code that encapsulates key management program code which uses the regenerated security key facilitates deployment of enhanced security features without necessitating modification of program code for the key management program.

Various embodiments of the present disclosure provide increased security and or flexibility for storing and or sharing security keys. A security key associated with data is split into key fragments and the key fragments are then distributed across different proxy storage devices. For example a password key private key and or public key may be split into key fragments. A key splitter may operate to divide a security key into key fragments. The key fragments are distributed to different proxy storage devices for storage. A key fragment distributor may operate to distribute the key fragments. The key fragments can be later received from the proxy storage devices. A key fragment receiver may operate to receive the key fragments. A reconstructed security key can be generated based on the key fragments received from the proxy storage devices. A security key regenerator may operate to generate the reconstructed security key. Programmatic access to the data can be controlled based on the reconstructed security key. The Bitcoin wallet or other program code of the access control computer may operate to control access to the data.

Controlling programmatic access to the data can include attempting a login process to a user account using the reconstructed security key attempting to decrypt previously encrypted data etc. For example a password may be reconstructed from the key fragments and used to attempt to obtain access to data contained in the Bitcoin wallet and or an encryption key may be may be reconstructed from the key fragments and used to attempt to decrypt individual private keys addresses and or other content of the Bitcoin wallet . In the embodiment of the access control computer may decrypt the Bitcoin wallet or a private key therein based on the reconstructed security key matching the original security key. Alternatively or additionally when the security key is a password for a user account the access control computer may grant user access to the user account via a user interface program based on the reconstructed security key matching the password for the user account.

Multiple key fragments may be distributed to a same proxy storage device which is determined to provide at least a threshold level of security. For example the levels of security provided by the proxy storage devices for storage of key fragments can be determined. A subset of the proxy storage devices can be selected for storage of the key fragments based on the levels of security and the key fragments can be distributed to the subset of the proxy storage devices for storage. In this manner some proxy storage devices that are determined to have less than the threshold level of security based on user defined parameters and or defined rules may not be selected for storage of key fragments or may be selected for storage of only a single key fragment each. In contrast some other proxy storage devices that have at least the threshold level of security may be selected for storage of one or more key fragments.

These and other operations of the access control computer and other components of the system of are explained in more detail below.

The proxy storage devices may include local applications and storage devices which can include application programs processed by a same computer component as the access control computer and or removable memory devices e.g. USB storage devices . The proxy storage devices may alternatively or additionally include network proxy storage devices which are communicatively connected to the access control computer via a data network e.g. a public network such as the Internet and or a private network . The network proxy storage devices can include but are not limited to social media servers email servers web page servers and or mobile terminals .

The social media servers may include a social network server e.g. Facebook a blog network server e.g. Tumblr server providing Web2.0 Properties Networks etc. a micro blog network server e.g. Twitter and or another type of social media server. A social media server receives a message containing a key fragment and a message string from the key fragment distributor and publishes the message for receipt by one or more computers who have registered with the social media server to track publishing of messages on the social media server containing a defined message string. The message string may correspond to a username used for the Bitcoin wallet an identifier associated with the access control computer and or a string of characters that is defined by a user and which is defined as being tracked by an intended recipient computer .

In the embodiment of a key splitter divides a security key into any plural number of key fragments. The key splitter may utilize a n of m secret sharing algorithm to split the security key into m different key fragments which enables a security key regenerator to reconstruct the security key from a fewer number n e.g. n m 1 of the key fragments received from the proxy storage devices. For example using a 4 of 5 secret sharing algorithm a security key is divided into 5 different key fragments that are distributed to 5 different proxy storage devices for storage. The security key regenerator can regenerate the original security key so long as at least 4 of the key fragments are received back from those proxy storage devices.

The key splitter may be configured to form different groups of the proxy storage devices associated with different ones of a plurality of security keys. The key splitter may select one of the groups of proxy storage devices based on the security key obtained matching a security key associated with the selected one of the groups of proxy storage devices. A number of the proxy storage devices in the selected one of the groups can be determined and used by the key splitter to control a number of the key fragments generated from a security key based on the number of the proxy storage devices in the selected one of the groups of proxy storage devices . Which of the proxy storage devices are members of which of the groups may be defined by a user and or defined by one or more defined rules based on characteristics of the proxy storage devices which for example seek to store the key fragments using a threshold number of different types of access security mechanisms provided by the various proxy storage devices .

The key fragment distributor distributes different ones of the key fragments to selected ones of the proxy storage devices . is a flowchart of operations that may be performed by the key fragment distributor and the key fragment receiver according to some embodiments.

The key fragment distributor receives the key fragments from the key splitter and distributes the key fragments to a plurality of the proxy storage devices. The distributor determines an email address for an email account hosted by one of the email servers and communicates block an email message containing one of the key fragments first key fragment with the email address. The distributor determines a mobile terminal identifier for one of the mobile terminals and communicates block a text message containing another one of the key fragments second key fragment with the mobile terminal identifier. The distributor determines a device address of one of the local application and or storage devices having a direct non network connection to the security computer e.g. the access control computer and generates block a command to write another one of the key fragments third key fragment to the device address. The distributor selects an application programming interface API from among a plurality of APIs based on information identifying one of the proxy storage devices and or and communicates block another one of the key fragments fourth key fragment through the API that was selected. The distributor determines a web address for one of the web servers and communicates block another one of the key fragments fifth key fragment as a web feed with the web address.

The key fragment receiver receives key fragments from the different proxy storage devices. A security key regenerator reconstructs the security key using the key fragments from the key fragment receiver . The security key regenerator may be configured to reconstruct the security key from less than all of the key fragments that were generated by the key splitter from the security key. When the security key regenerator receives a threshold number of the key fragments which can be less than all of the key fragments generated by the key splitter the security key regenerator can regenerate the original security key. The security key regenerator may attempt to regenerate and verify the regenerated security key for correctness upon receipt of each key fragment from various ones of the proxy storage devices and upon successful verification output the regenerated security key for use in controlling access to the data.

Continuing with the example of the key fragment receiver receives block an email message from the email address for the user account hosted by the email server and obtains the first key fragment from the email message. The key fragment receiver receives block a text message containing the second key fragment. The key fragment receiver generates block a command to read the third key fragment from the device address for the local application and or the storage device having a direct non network connection to the security computer e.g. the access control computer . The key fragment receiver receives block the fourth key fragment through an API and selectively uses the fourth key fragment based on whether the API through which it was received corresponds to the API that was selected block for indication of the fourth key fragment. The key fragment receiver receives block the fifth key fragment in a web feed from the web address for the web server to which the fifth key fragment was communicated block . The security key regenerator reconstructs block the security key based on the first second third fourth and fifth key fragments.

When a key fragment is stored in a user account on an email server access to the key fragment can be controlled based on a secure user ID and password received from the user and or from the key fragment receiver . When a key fragment is stored on a web server at a defined URI access to the key fragment can be controlled based on a secure user ID and password received from the user and or from the key fragment receiver . When a key fragment is sent via text messaging e.g. SMS the receiving mobile terminal can control access to the stored key fragment via a security program layer processed by the mobile terminal e.g. screen lock functionality . Accordingly increased protection of the security key can be obtained by splitting the security key into fragments that are dispersed across a plurality of different locations and types of proxy storage devices each having local security processes that control access to the respective locally stored key fragments.

Key fragments may additionally or alternatively be stored on one or more of the social media servers . When communicated to a social media server the key fragment can be stored in a private area having secured user ID and password controlled access. Referring to the flowchart of example operations shown in the key fragment distributor determines block a first message string tracked by a first computer on one of the social media servers e.g. a social network server and posts block a message containing one of the key fragments first key fragment and the message string to the social media server for publishing through the social media server to the first computer . Similarly the key fragment distributor determines block a second message string tracked by a second computer on the same or another one of the social media servers e.g. a micro blog network server and posts block a message containing another one of the key fragments second key fragment and the message string to the social media server for publishing through the social media server to the second computer .

When determining the first and second message strings block and the key fragment distributor may select the message strings from among a plurality of defined message strings that identify different groupings of messages published by the social media servers that can be separately tracked by the computers . Thus for example the first message string can be selected based on it being defined as tracked by the first computer so that the first computer will receive and locally store the first key fragment. Similarly the second message string can be selected based on it being defined as tracked by the second computer so that the second computer will receive and locally store the second key fragment. The first and or second computers may fetch the respective first and second key fragments from respective user accounts on the social media servers and or may receive the key fragments in one or more communications pushed to the respective computers from the social media servers .

The key fragment receiver may receive the first key fragment by tracking block informational postings by the first computer to one of the social media servers e.g. the social network server and identifying block one of the informational postings by the first computer as containing the first key fragment. Similarly the key fragment receiver may receive the second key fragment by tracking block informational postings by the second computer to one of the social media servers e.g. the micro blog network server and identifying block one of the informational postings by the second computer as containing the second key fragment.

In this manner increased security and or flexibility for storing and or sharing security keys can be obtained.

The processor may include one or more data processing circuits such as a general purpose and or special purpose processor e.g. microprocessor and or digital signal processor that may be collocated or distributed across one or more networks. The processor is configured to execute computer program code in the memory described below as a non transitory computer readable medium to perform at least some of the operations described herein as being performed by an access control computer. The computer program code when executed by the processor causes the processor to perform operations in accordance with one or more embodiments disclosed herein for the access control computer . The access control computer may further include a user input interface e.g. touch screen keyboard keypad etc. and a display device .

In the above description of various embodiments of the present disclosure aspects of the present disclosure may be illustrated and described herein in any of a number of patentable classes or contexts including any new and useful process machine manufacture or composition of matter or any new and useful improvement thereof. Accordingly aspects of the present disclosure may be implemented in entirely hardware entirely software including firmware resident software micro code etc. or combining software and hardware implementation that may all generally be referred to herein as a circuit module component or system. Furthermore aspects of the present disclosure may take the form of a computer program product comprising one or more computer readable media having computer readable program code embodied thereon.

Any combination of one or more computer readable media may be used. The computer readable media may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an appropriate optical fiber with a repeater a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device. Program code embodied on a computer readable signal medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present disclosure may be written in any combination of one or more programming languages including an object oriented programming language such as Java Scala Smalltalk Eiffel JADE Emerald C C VB.NET Python or the like conventional procedural programming languages such as the C programming language Visual Basic Fortran 2003 Perl COBOL 2002 PHP ABAP dynamic programming languages such as Python Ruby and Groovy or other programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider or in a cloud computing environment or offered as a service such as a Software as a Service SaaS .

Aspects of the present disclosure are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the disclosure. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable instruction execution apparatus create a mechanism for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that when executed can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions when stored in the computer readable medium produce an article of manufacture including instructions which when executed cause a computer to implement the function act specified in the flowchart and or block diagram block or blocks. The computer program instructions may also be loaded onto a computer other programmable instruction execution apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatuses or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

It is to be understood that the terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. Unless otherwise defined all terms including technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this disclosure belongs. It will be further understood that terms such as those defined in commonly used dictionaries should be interpreted as having a meaning that is consistent with their meaning in the context of this specification and the relevant art and will not be interpreted in an idealized or overly formal sense unless expressly so defined herein.

The flowchart and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various aspects of the present disclosure. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular aspects only and is not intended to be limiting of the disclosure. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof. As used herein the term and or includes any and all combinations of one or more of the associated listed items. Like reference numbers signify like elements throughout the description of the figures.

The corresponding structures materials acts and equivalents of any means or step plus function elements in the claims below are intended to include any disclosed structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present disclosure has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the disclosure in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the disclosure. The aspects of the disclosure herein were chosen and described in order to best explain the principles of the disclosure and the practical application and to enable others of ordinary skill in the art to understand the disclosure with various modifications as are suited to the particular use contemplated.

