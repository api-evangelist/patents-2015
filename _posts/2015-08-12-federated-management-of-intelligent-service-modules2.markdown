---

title: Federated management of intelligent service modules
abstract: Intelligent services are provided in a storage network using intelligent service modules that can be cabled to a switch external to the switch chassis and yet be managed as part of the switch's logical domain. Data and management communications between the intelligent service module and the core switch are provided through a “soft-backplane” implemented using in-band communications through cabling attached between the switch and the intelligent service module rather than through a hardwired backplane within the chassis. Management communications from management software is directed to the switch, which handles the management functions relating to the intelligent service module or forwards the management requests to the intelligent service module for processing.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09661085&OS=09661085&RS=09661085
owner: Brocade Communications Systems, Inc.
number: 09661085
owner_city: San Jose
owner_country: US
publication_date: 20150812
---
This application is a continuation of U.S. patent application Ser. No. 11 239 954 entitled Federated Management of Intelligent Service Modules filed Sep. 29 2005 which is incorporated by reference in its entirety herein.

The invention relates generally to storage area networks and more particularly to federated management of intelligent service modules in a storage area network.

A storage area network SAN may be implemented as a high speed special purpose network that interconnects different kinds of data storage devices with associated data servers on behalf of a large network of users. Typically a storage area network includes high performance switches as part of the overall network of computing resources for an enterprise. The storage area network is usually clustered in close geographical proximity to other computing resources such as mainframe computers but may also extend to remote locations for backup and archival storage using wide area network carrier technologies. Fibre Channel networking is typically used in SANs although other communications technologies may also be employed including Ethernet and IP based storage networking standards e.g. iSCSI FCIP Fibre Channel over IP etc. .

In one configuration switches are assembled in a chassis using a selection of blade components of a SAN switch. Individual blade components are fitted into slots in the chassis and connected to a chassis backplane for interconnectivity. For example line card blades switch blades and other blade components can be inserted into a chassis to provide a scalable and customizable storage network switch configuration. Typically the blades are controlled by shared control processors e.g. one active and one backup powered by one or more shared power supplies through the backplane and cooled by a shared set of cooling fan trays.

Fabric based intelligent services such as routing virtualization and distance services may be added to a switch to enhance the performance scalability and features of the switch. For example a wide area connectivity service blade can be inserted into an open slot in the chassis to provide fibre channel over IP bridging. In this fashion the intelligent services can be managed as part of the switch.

However adding such services as blades in a chassis presents significant limitations. A chassis has a limited number of slots and a SAN administrator may not have an open slot in which to add an intelligent service blade. Even with an available slot a service blade adds additional risk to the core switch reducing the overall mean time between failures MTBF . Further intelligent service blades tend to run hotter than core switch blades and therefore require placement in the better cooled slots in the chassis. If such slots are already occupied by other blades addition of a service blade can disrupt service as the other blades are moved around in the chassis. A chassis backplane also has power and signaling constraints that can restrict the scalability of a switch particularly when an intelligent services blade is added to the chassis.

Implementations described and claimed herein address the foregoing problems by providing intelligent services using intelligent service modules that can be cabled to a switch external to a chassis and yet be managed through the switch. In some implementations such intelligent service modules may be managed as part of the switch s logical domain. Data and management communications between the intelligent service module and the core switch are provided through a soft backplane implemented using in band communications between the switch and the intelligent switch module rather than a hardwired backplane within the chassis.

Each intelligent service module can be managed through the switch and or within the same logical domain as the switch such that a traditional physical Ethernet i.e. out of band connection between management software and each intelligent service module can be omitted. In this configuration the switch can handle much of the management of the intelligent service module and otherwise forwards management communications received by the switch from the management software to the intelligent service module.

In some implementations articles of manufacture are provided as computer program products. One implementation of a computer program product provides a non transitory computer program storage medium readable by a computer system and encoding a computer program. Exemplary storage media may include without limitation magnetic and optical disks EEPROMS flash memory RAM and other storage devices.

Federated management of intelligent service modules in a storage area network brings a combination of new management concepts and capabilities to traditional switching products. Intelligent service modules can be located external to a switch chassis and communicate with the switch components in the chassis via an external cable using a communications transport mechanism between the switch components and the intelligent service modules. In one implementation for example IPFC Internet Protocol over Fibre Channel is employed as the transport mechanism between a switch and an intelligent service module. The intelligent service module is cabled to a switch through fibre channel ports in each device such that the communications between the intelligent service module and the port module are in band communications relative to the data communications of the switching network.

Each intelligent service module can be managed within the same logical domain as the switch such that a traditional physical Ethernet i.e. out of band connection between management software and each intelligent service module can be omitted. In this configuration the switch can handle much of the management of the intelligent service module and otherwise forwards management communications received by the switch from the management software to the intelligent service module.

Generally a switching fabric involves a collection of interconnected switches that are capable of communicating among them. In contrast a SAN can comprise one or more fabrics.

With the SAN one or more switches provide connectivity routing and other SAN functionality. Some such switches may be configured as a set of blade components inserted into a chassis or as rackable or stackable modules. The chassis has a back plane or mid plane into which the various blade components such as switching blades and control processor blades may be inserted. Rackable or stackable modules may be interconnected using discrete connections such as individual or bundled cabling.

In the illustration of at least one switch is coupled to at least one external intelligent service module. Rather than being inserted into an open slot in the switch chassis the intelligent service module is connected to the switch via an optical or wired cable. The intelligent service module can nevertheless be managed within the same logical domain as the switch without the need for a separate out of band connection. In addition the intelligent service module can be attached or added to the switch without disrupting operation of the switch e.g. to move blades or make chassis slots available .

A management client is connected to the switch via an Ethernet connection. The management client provides user control and monitoring of various aspects of the switch and attached devices including without limitation zoning security firmware routing addressing etc. The management client may identify the managed switch using a domain ID specific to the switch and in a federated management configuration shared with attached intelligent service modules. In addition the management client may identify the managed switch using a World Wide Name WWN or an IP address. In cases where a switch implements multiple virtual fabrics the management client may use more than one domain ID in its communications with the switch. The management client therefore can send a management request referencing the domain ID of the switch an intelligent service module identifier and a port identifier of an attached intelligent service module and the switch will perform whatever portion of the requested management function it is capable of performing if any and forwards instructions to the intelligent service module possessing the referenced port for additional activity if necessary.

Despite being external from the chassis the intelligent service modules and can be managed within the same logical domain as the switch . As discussed herein each switch is attributed with a domain ID each intelligent service module is attributed with a unique intelligent service module identifier within the logical domain associated with the domain ID and one or more ports of the intelligent service module are attributed with unique port identifier within the intelligent service module identifier. In this manner the management client can uniquely identify individual intelligent service modules and ports within the logical domain of the switch and the switch can handle some portion of the management requests while forwarding certain management functions to the appropriate intelligent service module for processing when necessary.

In the illustrated implementation the intelligent service module represents a virtualization intelligent service module VSM that provides Layer SCSI block storage services. The VSM provides virtualization services and flexible switch connectivity. The VSM has fibre channel ports which can be connected by cabling to the switch to provide private uplink connection. One of the uplinks can be designated as an active path and another of the uplinks can be designated as a standby path. Upon failover the standby path is promoted to the active path and another uplink is designated as the new standby path. Alternatively communications can be spread among all available links.

Each virtual device e.g. a virtual target or virtual initiator of the virtualization engine within the VSM logs into the switch indirectly using a specified protocol. Each of these virtual devices also logs in with NPIV Nport ID Virtualization which provides a fibre channel facility for sharing a single physical port among multiple port IDs. In this manner multiple virtual initiators are capable of sharing the port with each initiator having its own port ID. Accordingly the VSM appears to the switch as an extended end device rather than another switch. Therefore the VSM does not consume another domain ID it falls within the logical domain of the switch .

Another intelligent service module in the illustration of represents a routing intelligent service module RSM that provides Layer SAN routing services. The RSM provides inter fabric routing between physical and virtual fabrics within the SAN. Yet another intelligent service module in represents a WAN intelligent service module WSM that can provide wide area connectivity including iFCP or FCIP bridging FICON tunneling and streaming such as fast write compression encryption etc. Yet another intelligent service module in represents an aggregation intelligent service module ASM that aggregates end devices e.g. host initiators or storage targets to the attached switch thereby simplifying the core edge topology into a collapsed core that is a logical part of the switch .

In one implementation the management software may also direct management traffic through the switch to the switch and the intelligent service module . In this manner a single management Ethernet connection to a single switch can be used to manage devices such as intelligent service modules and switches throughout the storage network. For example the management software can specify the domain ID of the switch a switch identifier e.g. domain ID of the switch an intelligent service module identifier of the intelligent service module and a port identifier of a port on the intelligent service module . In this implementation the switch interprets the management request as destined for another logical domain and forwards the request to the switch according to the domain ID. Thereafter the switch determines the IPFC address of the appropriate intelligent service module and forwards the request to the intelligent service module via the fibre channel connection. In alternative implementations the management software may additionally or alternatively address a switch using an IP address or WWN.

The exemplary IPFC implementation for communicating between switches and intelligent service modules allows management traffic from the management software to travel through the switch to the appropriate intelligent service modules using in band communications while requiring minimal processing by the switch. In one implementation management Ethernet packets are sent to the switch s MAC address using a proxy ARP address resolution protocol function on the switch e.g. included in Ethernet Interface Network Management Services module of . When the management software issues an ARP request for an intelligent service module IPFC address the switch answers with its own MAC address. Therefore for intelligent service modules within federated management of the switch the ARP table within the management software contains the MAC address of the switch . Accordingly when the management software sends out management requests to such an intelligent service module the packets are sent to the switch .

When the switch receives a management request specifying an intelligent service module the switch examines the IPFC address in the request and recognizes it as not matching its own IP address. Therefore the switch looks up another destination address on its fibre channel connection to which to send the request via IPFC typically using a local federated management address table that is similar to an ARP table. An exemplary local federated management address FMA table is shown below for an IP address of a switch an intelligent service module with reference to the IP IPFC addresses in Note In the example given in Table 1 end devices e.g. targets or initiators are referenced by WWPNs. 

It should also be understood that SAN devices may also be referenced by other unique identifiers including Fibre Channel addresses e.g. FCIDs IPFC addresses and iSCSI addresses.

An IPFC module on the switch wraps the request in an IPFC frame in order to forward the request in band across a fibre channel connection. When the switch looks up another destination address in the FMA table it first reads the Type field in the table row associated with the IP IPFC address in the request to determine how to route the request. If the Type designates another switch the IPFC wrapped request is sent to the domain controller for the switch associated with the received IPFC address using the WWNN for the destination switch. For an intelligent service module attached to the switch the switch sends the IPFC wrapped request to the fabric controller address FFFFFD using the port number for the specified intelligent service module. For an intelligent service module not attached to the switch e.g. switch the IPFC wrapped request is sent to the domain controller of the intermediary switch using the WWNN for that switch. The switch is then responsible for forwarding the request to the intelligent service module using its own local FMA table. For an end device the IPFC frame is forwarded to the end device using the WWPN and the Domain ID.

The switch and the intelligent service module each include one or more processors controlled by firmware which embodies instructions for executing the various modules illustrated in . At power up components of the firmware are read from persistent storage e.g. flash memory on the device and executed by the processor. Individual modules are illustrated to describe an exemplary functional division in one implementation of a switch and one implementation of an intelligent service module. It should be understood however that alternative functional divisions may be employed and some functions may be implemented in circuitry.

Federated management modules and in the intelligent service module and the switch respectively are similar although the two federated management modules and may have different functionality. In one implementation the functionality of the federated management modules and is allocated as follows 

The federated management modules and implement one or more APIs application programming interfaces . One exemplary API is termed the federated management API which provides an interface for management subsystems e.g. firmware services to access the intelligent service module from the switch . In one implementation the federated management API functions are written in C Programming Language source code for platform independence. Each of the functions creates XML commands corresponding to the API type and supplied parameters. Such XML commands are sent to the federated management module on the opposite side of the switch server module connection via IPFC. The receiving federated management module parses the XML command and calls the appropriate environment API function. Exemplary commands functions and formats include 

Another exemplary API is termed a host environment API through which the federated management modules and accesses persistent storage provides notification and receives status information. The host environment API functions provide wrappers or translation functions between the management subsystems and the federation management modules.

One exemplary function performed by the federated management modules and is the communication of intelligent service module configuration data. Initially the federated management module in the switch initializes generic configuration information pertaining to the intelligent service module stores it in persistent storage and then forwards the configuration information to the intelligent service module . The federated management module in the switch module receives the generic configuration information from the switch stores it in persistent storage and when appropriate supplements the configuration information in the persistent storage with service module specific configuration information e.g. configuration information specific to the type or instance of the intelligent service module . The configuration data both generic and service module specific is mirrored on both the intelligent service module and the switch to provide a backup for each device.

One example of an API data flow includes a command line interface CLI command from the CLI client through the switch to configure a port parameter physically belonging to the intelligent service module . The data flow starts with entry of a command through the interface of the CLI client. The command data is sent via a serial interface through the Ethernet interface network management service to the federated management module in the switch . The federated management module first stores the command data locally in the persistent storage via the data storage engine and then determines that the port number provided in the command data applies to the attached intelligent service module . Alternatively the federated management module may not store the command data locally in the persistent storage e.g. when the command data is intended only for an attached intelligent service module .

Having identified the destination intelligent service module the federated management module calls a federated management API function that creates an XML string with parameters and sends it to the destination intelligent service module via IPFC through the fibre channel interface . The XML string is received by the intelligent service module through the fibre channel interface and the Ethernet interface network management service to the federated management module in the intelligent service module . The federated management module then calls the appropriate host environment API function to effect the configuration change to port parameter of the intelligent service module . The configuration change is written to the persistent storage via a data storage engine which returns a success or failure return code. Assuming the configuration change at the intelligent service module is successful a successful return code is returned to the switch which makes a similar change to the configuration information stored in the switch in order to keep the configuration information in the switch synchronized i.e. mirrored with the configuration information in the intelligent service module .

In another example a port property change occurs on the intelligent service module which issues an asynchronous notification to the switch . A status subsystem in the intelligent service module detects the port property change and calls the federated management API function to create an XML string with parameters as a notification of the change. The federated management module transfers the notification of the change to the switch via IPFC and the fibre channel interfaces of the intelligent service module and the switch . On the switch side of the communication the federated management module parses the XML string and calls the appropriate host environment API function to update the status information in the switch .

In response to detecting an intelligent service module connection a link operation initializes a federated management link with the intelligent service module. The federated management module collects a World Wide Node Name WWNN from the intelligent service module and collects a range of area IDs for the intelligent service module a domain ID to be assigned to the intelligent service module and an IPFC address for the intelligent service module from the user or configuration data through the management software. Alternatively a set of available values may be pre defined in the management software or switch and dynamically allocated when an intelligent service module is connected to the switch.

In a querying operation the federated management module then transmits and assigns the IPFC address to the intelligent service module and on the basis of that IPFC address queries the intelligent service module for its type e.g. VSM ASM RSM etc. its firmware version and corresponding API version and the number of logical ports requested by the intelligent service module. In a configuration operation the federated management module locally stores the collected information and other default values attributable to the intelligent service module as configuration information for the intelligent service module.

In a transmission operation the switch presents a portion of the configuration information to a management software client or CLI client and awaits a response from a user. An exemplary set of configuration information parameters sent to the user may include the intelligent service module type the IPFC address the firmware version the number of requested logical ports the WWNN the range of area IDs and the domain ID to be assigned to the intelligent service module.

In a receiving operation the switch receives the response set of configuration information from the user via a management interface. This set of configuration information may have been changed by the user. In addition the response from the user includes an acceptance or rejection of the intelligent service module into the federated management configuration. In some circumstances the user may wish to manage the intelligent service module independently of the switch. If there are any changes to the configuration information the federated management module updates the switch s local storage of the configuration information.

A transmission operation forwards the configuration information to the intelligent service module including logical port assignments data inherited from the switch port configuration information etc. In one implementation transmission of the domain ID and area ID range to the intelligent service module is accomplished using a separate FC SW exchange although in an alternative implementation the transmission operation may forward all of the configuration information together. FC SW represents a switch interoperability standard using in band communications .

In one implementation the intelligent service modules are organized using a numbering structure which uniquely indexes individual intelligent service modules physical ports port areas and logical ports. Each intelligent service module is designated with an intelligent service module identifier or index which may be configured by a user. The intelligent service module identifier is unique for each intelligent service module attached to the same switch. In one convention the switch is assumed to be index 0 and any attached intelligent service module is numbered index 1 through N where N is the limit of intelligent service modules that may be attached to a single director. Each intelligent service module also has a service module context port number referred to as a port locator. As such a port of any intelligent service module can be referenced by a value pair including the intelligent service module identifier and the port locator.

In addition each intelligent service module port can be referenced by an integer number within the context of the switch. The switch context identifier is generally dependent on the type and specifications of the switch.

In one implementation the switch firmware presents both service module context descriptions and switch context descriptions to the management software. Accordingly an exemplary data structure for identifying a service module port using 32 bits is employed 

It should be understood however that other data structures may be employed and either the port integer value or the sm index port locator value may be used individually as needed. For example management software may include a look up table that maps port integer values to sm index port locator values and or vice versa.

The intelligent service module mirrors the configuration information in its own local storage gathers service module specific information updates the configuration information in local storage with this service module specific information and returns the service module specific information to the switch. In receiving operation the switch receives and stores the service module specific information from the intelligent service module updating its local storage with the new information. To this point the intelligent service module remains offline.

An address operation receives the IPFC address and domain ID from the switch which are also stored in the local storage of the intelligent service module. A listening operation sets a network management intelligent service module to listen for messages on the appropriate TCP port capable of servicing the IPFC address.

If the user indicates that the intelligent service module is to be managed through the switch via federated management a configuration operation receives generic configuration information from the switch which may include user specified parameters and stores the configuration information in the local storage of the intelligent service module. The configuration operation also gathers service module specific configuration information from the intelligent service module s components and updates the locally stored configuration information with the service module specific configuration information. The updated configuration information can be sent back to the switch to ensure that the switch mirrors the updated information.

In a connection operation the management software client or CLI interface establishes a management connection with the intelligent service module through the switch. In one implementation this connection is accomplished through a fibre channel cable via the switch. In an alternative implementation this connection is accomplished through a backplane extender port and cabling to a switch module. Management requests to the intelligent service module are forwarded from the switch in accordance with the addressing schemes described herein or some other applicable addressing scheme. When in receiving operation the intelligent service module receives an online command from the fabric services of the switch the intelligent service module begins providing its intelligent service e.g. routing security aggregation virtualization etc. to the storage network.

In compatibility operation the switch compares the firmware and API versions provided by each intelligent service module and determines whether a firmware update is required. In one implementation the switch firmware maintains compatibility information in the form of a configuration file. The file specifies which firmware and API versions on the service modules are compatible with the current switch firmware. Alternatively a database of compatibility information can be maintained and accessed by the switch firmware.

If the firmware versions and API versions are not compatible between the switch s firmware and the intelligent service module s firmware an upgrade request operation requests an intelligent service module firmware upgrade from the management software client which alerts the user that an upgrade is needed. If the user approves an upgrade operation sends the upgraded firmware to the intelligent service module via the switch and causes it to be installed in the intelligent service module. The intelligent service module notifies the switch when the installation is complete notification operation resets and then notifies the switch that the reset is complete notification operation .

The embodiments of the invention described herein are implemented as logical steps in one or more computer systems. The logical operations of the present invention are implemented 1 as a sequence of processor implemented steps executing in one or more computer systems and 2 as interconnected machine or circuit modules within one or more computer systems. The implementation is a matter of choice dependent on the performance requirements of the computer system implementing the invention. Accordingly the logical operations making up the embodiments of the invention described herein are referred to variously as operations steps objects or modules. Furthermore it should be understood that logical operations may be performed in any order unless explicitly claimed otherwise or a specific order is inherently necessitated by the claim language.

The above specification examples and data provide a complete description of the structure and use of exemplary embodiments of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention the invention resides in the claims hereinafter appended. Furthermore structural features of the different embodiments may be combined in yet another embodiment without departing from the recited claims.

