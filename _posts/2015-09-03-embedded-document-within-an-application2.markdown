---

title: Embedded document within an application
abstract: Data structures, methods, program products and systems for creating and executing an executable file for the Binary Runtime Environment for Wireless (BREW) where the file is capable of causing presentation of a document embedded in the file on a BREW system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09582478&OS=09582478&RS=09582478
owner: Adobe Systems Incorporated
number: 09582478
owner_city: San Jose
owner_country: US
publication_date: 20150903
---
This application is a divisional application of U.S. utility application Ser. No. 13 620 522 filed on Sep. 14 2012 which is a divisional of and claims priority to U.S. utility application Ser. No. 11 567 111 filed on Dec. 5 2006 the entire content of which is incorporated herein by reference.

It can be difficult for content publishers to create engaging experiences for new mobile phones and other consumer electronics devices since such devices typically have proprietary hardware interfaces and lack mature software development tools. Moreover content developed for one device may not be compatible with other devices. To overcome this issue content publishers may need to create custom presentation software for each device to which they publish content. However this makes publishing content to different devices cumbersome at best.

In general one aspect of the subject matter described in this specification can be embodied in a data structure within a computer memory. The data structure comprises an application for the Binary Runtime Environment for Wireless BREW the application includes an executable portion and a document portion. The executable portion is capable of signaling an external module to cause presentation of the document by the external module.

These and other aspects can optionally include one or more of the following features. The document can be one of a Flash document a Shockwave document or a Portable Document Format PDF document. The document can be compressed encrypted or both. The external module can be a BREW extension. The external module is compiled separately from the application.

In general another aspect of the subject matter described in this specification can be embodied in a data structure within a computer memory. The data structure comprises an executable module for BREW. The executable module includes an executable portion and a Flash content portion where the executable portion is capable of causing the presentation of the Flash content on a mobile device.

These and other aspects can optionally include one or more of the following features. The document can be compressed encrypted or both. The external module can be a BREW extension. The external module can be compiled separately from the application.

In general another aspect of the subject matter described in this specification can be embodied in a method that includes identifying an application for BREW. The application includes an executable portion and a document portion. The executable portion is executed where the execution causes presentation of the document portion by signaling an external module capable of causing the presentation of the document. Other embodiments of this aspect include corresponding systems apparatus and computer program products.

These and other aspects can optionally include one or more of the following features. The document can be one of a Flash document a Shockwave document or a Portable Document Format PDF document. The external module can be a BREW extension. The external module can be compiled separately from the application. An account can be debited or credited based on the identifying the executing or the signaling. An account to be debited or credited based on receiving the application and the external module.

In general another aspect of the subject matter described in this specification can be embodied in a method that includes receiving a BREW application that contains a document. An external module is received and the application is executed where the executing causes presentation of the document by signaling the external module. An account is debited or credited based on the receiving the executing or the signaling. Other embodiments of this aspect include corresponding systems apparatus and computer program products.

These and other aspects can optionally include one or more of the following features. The document can one of a Flash document a Shockwave document or a Portable Document Format PDF document. The external module can be a BREW extension. The external module can be compiled separately from the application.

Particular embodiments of the subject matter described in this specification can be implemented to realize one or more of the following advantages. Documents can be easily packaged for presentation in a BREW environment. Document distribution and presentation can automatically tie into a revenue generation system. Necessary presentation software can be automatically downloaded on the target device when the document is first presented to a user. Since the content is part of a binary package the package provides implicit security to the content. Since content is part of the binary module and the binary module is loaded by the system no additional run time memory may be required to load the content.

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features objects and advantages of the invention will be apparent from the description and drawings and from the claims.

A so called escort application program e.g. encapsulates a document e.g. such as for example an Adobe Flash document and enables the document to be downloaded to and presented on clients that support BREW e.g. . Flash and Flash Player are available from Adobe Systems Incorporated of San Jose Calif. Adobe Flash is an Integrated Development Environment IDE for developing Flash documents that support for instance rich content user interfaces and web applications. Adobe Flash Player is a multiple platform virtual machine used to present Flash documents. Flash is commonly used to create interactive web page content such as advertisements integrate video into web pages and create rich client side applications for example.

A BREW system includes a set of Application Programming Interfaces APIs for running software on clients e.g. . The APIs allow application software e.g. to be independent of client s native software . The BREW APIs provide applications access to a client s communication systems input systems e.g. microphones cameras and output systems e.g. displays speakers . Moreover the BREW APIs also allow applications to take advantage of an automatic billing model which can automatically charge a user for downloading an application or parts of an application running an application or combinations of these.

To create the escort application a software developer first creates or identifies a document for presentation on the client device . The document can include text graphics sound animation other multimedia content and combinations of these. The document is not limited to a particular content format and can contain interactive content. For example the document can be formatted as a Shockwave from Adobe Systems Incorporated Portable Document Format PDF Flash Flash Lite from Adobe Systems Incorporated a sound or music file an electronic game executable a movie or animation file or graphic file etc. The document can additionally be compressed encrypted or both.

The developer uses a software development tool to combine a document loader portion with the document to create the BREW escort application . The document loader portion is a BREW application. In some implementations the software development tool can insert the document contents into a data segment of the document loader portion . The new escort application can be uploaded to a BREW Distribution System BDS as an item within a BDS catalog . The BDS catalog is a system in which BREW applications are made available over a wireless service provider to end users through a wireless service provider s Application Download Server ADS . A wireless service provider also known as a wireless carrier mobile phone operator or cellular provider is a company that provides communication services for its subscribers wireless devices.

A client user can browse a wireless service provider s ADS to locate BREW applications available within the BDS catalog such as the escort application for download to the client . Once the escort application is downloaded to the client a user can choose to execute the escort application or the escort application can automatically execute. Execution of the escort application causes execution of the document loader portion which in turn causes presentation of the document on the client as will be described in more detail below.

The document and the document loader portion are then incorporated into an escort application e.g. step . A software development tool for example a compiler product can bundle a document with a document loader into an escort application. The development tool can also compress and or encrypt the document. The escort application is then published in an application catalog such as the BDS catalog for example step . This makes the escort application available to users for downloading into their clients. In some implementations a client device s wireless service provider provides client access to the catalog and facilitates downloading of the escort application from its servers.

The escort application is dependent on one or more external modules which are needed to present the document . An external module is compiled separately from the escort application . In some implementations an external module is a BREW extension. Extensions are module software that can be downloaded once and shared by a number of applications similar to Dynamic Link Libraries DLL in the Microsoft Windows and Unix operating systems. During or after the escort application has been downloaded to the client one or more external modules e.g. and which are needed by the escort application are automatically downloaded from a server e.g. by the BREW system if they are have not already been downloaded.

The escort application can begin to execute automatically after the download process has completed or the escort application can be explicitly invoked by the user. The escort application interacts with the public extension by way of one or more APIs for example to cause the public extension to present the document bundled within the escort application . For example a public extension API function call could take as arguments the location of the document within the escort application the document s type the document s length and other suitable parameters. With this information the public extension can obtain and present the document such as by providing the document or a reference to the document to a Flash player or a PDF viewer.

In some implementations the means for presenting the document is incorporated into the public extension . In other implementations the means is incorporated into a private extension so that the escort application does not interact directly with the private extension . Instead the public extension interacts with the private extension on behalf of the escort application . The private extension can include a fine level of granularity in its API which can be taken advantage of by the public extension for controlling the presentation of the document . The private extension API can be hidden from applications such that in some implementations only through the public extension can an application interact with the private extension . This has the advantage of providing a simpler API to applications by hiding more complex APIs behind the public extension .

A revenue generation system is built into the BREW environment that allows an account to be automatically charged for downloading files executing applications or combinations of these according to a billing model. In one implementation the BREW application performs calls to one or more BREW extensions to verify access to the application. For example a previously downloaded application can require additional payment in order to run because the monthly license for content access has expired. In this circumstance a BREW extension can be used to enact a debit to the user s wireless service provider service account. In another implementation a BREW extension can be used to trigger a credit to a user s wireless service provider service account.

The memory is a computer readable medium such as volatile or non volatile that stores information within the system . The memory could store data structures representing one or more applications a private extension and a public extension for example. The storage device is capable of providing persistent storage for the system . The storage device can be a floppy disk device a hard disk device an optical disk device a flash drive or a tape device or other suitable persistent storage means. The input output devices provide input output operations for the system . In one implementation the input output device includes a keyboard stylus and or pointing device. In another implementation the input output device includes a display unit for displaying graphical user interfaces.

The input output device can provide input output operations for the application The application can be for example an application containing a document formatted in Shockwave Portable Document Format PDF Flash or Flash Lite document format available from Adobe Systems Incorporated of San Jose Calif. or another document format or executable format for presentation on a wireless device. The BREW application can include external modules required for its presentation. Examples of such external module software components include private extension and public extension . BREW APIs provide translation between the BREW application software and the device specific software such as the software used for accessing the input output device . Such software components and can be persisted in storage device memory or can be obtained over a network connection to name a few examples.

Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer program products i.e. one or more modules of computer program instructions encoded on a computer readable medium for execution by or to control the operation of data processing apparatus. The computer readable medium can be a machine readable storage device a machine readable storage substrate a memory device a composition of matter effecting a machine readable propagated signal or a combination of one or more of them.

The term data processing apparatus encompasses all apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them. A propagated signal is an artificially generated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus.

A computer program also known as a program software software application script or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio player a Global Positioning System GPS receiver to name just a few. Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user embodiments of the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specifics these should not be construed as limitations on the scope of the invention or of what can be claimed but rather as descriptions of features specific to particular embodiments of the invention. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features can be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination can be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing can be advantageous. Moreover the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Thus particular embodiments of the invention have been described. Other embodiments are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results.

