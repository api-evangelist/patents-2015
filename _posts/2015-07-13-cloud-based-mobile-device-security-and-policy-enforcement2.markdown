---

title: Cloud based mobile device security and policy enforcement
abstract: Cloud based mobile device security and policy systems and methods use the “cloud” to pervasively enforce security and policy on mobile devices. The cloud based mobile device security and policy systems and methods provide uniformity in securing mobile devices for small to large organizations. The cloud based mobile device security and policy systems and methods may enforce one or more policies for users wherever and whenever the users are connected across a plurality of different devices including mobile devices. This solution ensures protection across different types, brands, operating systems, etc. for smartphones, tablets, netbooks, mobile computers, and the like.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09609460&OS=09609460&RS=09609460
owner: Zscaler, Inc.
number: 09609460
owner_city: San Jose
owner_country: US
publication_date: 20150713
---
This application is a continuation of co pending U.S. patent application Ser. No. 13 243 807 filed Sep. 23 2011 and entitled CLOUD BASED MOBILE DEVICE SECURITY AND POLICY ENFORCEMENT which is a continuation in part of U.S. patent application Ser. No. 13 206 337 filed Aug. 9 2011 now U.S. Pat. No. 9 060 239 which issued on Jun. 16 2015 and entitled CLOUD BASED MOBILE DEVICE MANAGEMENT SYSTEMS AND METHODS and this application is a continuation in part of co pending U.S. patent application Ser. No. 13 051 519 filed Mar. 18 2011 now U.S. Pat. No. 8 763 071 which issued Jun. 24 2014 and entitled SYSTEMS AND METHODS FOR MOBILE APPLICATION SECURITY CLASSIFICATION AND ENFORCEMENT the contents of each are incorporated in full by reference herein.

The present invention generally relates to mobile device systems and methods. More particularly the present invention relates to cloud based mobile device security and policy systems and methods to use the cloud to enforce pervasively security and policy on mobile devices.

The adoption of smart mobile devices such as smartphones tablets etc. by consumers and enterprises is occurring at a staggering rate. It is estimated that such devices will shortly eclipse the annual shipments of desktop and laptop computers. Employees frequently bring mobile devices into work i.e. in the enterprise. With the proliferation of mobile devices in the enterprise Information Technology IT administrators can no longer ignore these devices as outside their scope of responsibility. In fact mobile devices are now as powerful as laptop computers. Employees want to access corporate data and the Internet through wireless networks such as Wi Fi hotspots IEEE 802.11 and variants thereof or cellular data networks e.g. 3G 4G WiMax etc. which are outside the control of IT. On mobile devices the line between enterprise and personal usage is blurred. Since the enterprise typically does not own the device enforcing policies for acceptable usage or installing application controls as a traditional IT administrator would on a corporate PC is often not viable.

Conventionally security vendors have responded to emerging mobile threats by extending the desktop antivirus concept to mobile devices in the form of security apps . Unlike the personal computer PC world which is dominated by Microsoft there are several different mobile operating systems such as systems from Apple Android Windows Mobile Blackberry Symbian Palm HP etc. Each platform has its own software development environment and a security vendor developing mobile security apps has to replicate the effort across various platforms. Furthermore some platforms such as Apple iOS do not allow traditional antivirus apps on their devices. Loading third party apps not approved by the platform vendor may lead to violation of the contract and often requires jailbreaking the device which is definitely not an enterprise option. Even if security apps are allowed they are a headache to deploy require constant updates and are easy to circumvent i.e. the user can simply uninstall them if they are disliked. Worst of all the security apps impact device performance and degrade the user experience by stretching the already limited processor memory and battery resources on the mobile device.

In an exemplary embodiment a mobile device security and policy enforcement method implemented by a node in a cloud based system includes subsequent to communicatively coupling a mobile device to the node monitoring data between the mobile device and an external network performing one or more of i enforcing policy relative to the data wherein the policy is associated with a user of the mobile device and ii inspecting the data for malicious content therein allowing the data responsive to the data complying with the policy and or containing no malicious content and blocking the data in the node responsive to one or more of the data not complying with the policy and containing malicious content. The monitoring the enforcing the inspecting the allowing and the blocking can be performed by the node without a platform specific app on the mobile device. The malicious content can include one or more of viruses spyware malware Trojans botnets spam email phishing content and blacklisted content. The policy can include one or more of inappropriate content data leakage data usage limits time of day usage limits location operation of a particular application and black lists of websites. The policy can include preventing installation of a particular application on the mobile device. The particular application can be blocked for one or more of failing to meet a minimum threshold for security and or privacy and interfering with an enterprise network associated with the user. The mobile device security and policy enforcement method can further include receiving an update to the policy for the user or for a group of users comprising the users and performing the enforcing with the updated policy. The mobile device security and policy enforcement method can further include receiving an update related to the malicious content from another node in the cloud based system and performing the inspecting the data with the update. The node can form an association with the mobile device.

In another exemplary embodiment a mobile device security and policy enforcement system includes a network interface communicatively coupled to a processor and memory storing instructions that when executed cause the processor to subsequent to communicatively coupling to a mobile device monitor data between the mobile device and an external network perform one or more of i enforce policy relative to the data wherein the policy is associated with a user of the mobile device and ii inspect the data for malicious content therein allow the data responsive to the data complying with the policy and or containing no malicious content and block the data in the node responsive to one or more of the data not complying with the policy and containing malicious content.

In a further exemplary embodiment a mobile device includes a network interface communicatively coupled to a processor and memory storing instructions that when executed cause the processor to subsequent to communicatively coupling to a node in a mobile device security and policy enforcement system transmit data to an external network through the node wherein responsive to the data one or more of i complying with policy associated with a user of the mobile device based on enforcement by the node and ii containing no malicious data therein based on inspection by the node the node is configured to allow the data responsive to responsive data from the external network one or more of i complying with the policy based on enforcement by the node and ii containing no malicious content therein based on inspection by the node receive the responsive data from the node and responsive to any of the data not complying with the policy responsive to the data containing malicious data therein responsive to the responsive data from the external network not complying with the policy or responsive to the responsive data containing malicious content therein receive a notification from the node.

In an exemplary embodiment a cloud based security method for a mobile device includes providing a mobile configuration to the mobile device the mobile configuration configured to provide communications between the mobile device and external network through a cloud based system receiving communications from the mobile device for the external network analyzing the communications from the mobile device for policy and security compliance therewith and blocking the communications from the mobile device based on a violation of the policy and security compliance. In another exemplary embodiment a mobile device includes a network interface configured to connect to a wireless network memory and a processor the network interface the memory and the processor are communicatively coupled therebetween wherein the processor with the network interface and the memory is configured to connect to a cloud based security system over the wireless network communicate data with an external network through the cloud based security system and receive notifications of content blocking of the data from the cloud based security system based on security and policy violations. In yet another exemplary embodiment a cloud network configured to perform mobile device security and policy enforcement includes a plurality of cloud nodes communicatively coupled to a network each of the plurality of cloud nodes is configured to communicate with a mobile device and perform mobile device policy and security enforcement of the mobile device while concurrently providing access to the network.

In various exemplary embodiments the present invention relates to cloud based mobile device security and policy systems and methods to use the cloud to enforce pervasively security and policy on mobile devices. The cloud based mobile device security and policy systems and methods provide uniformity in securing mobile devices for small to large organizations. The cloud based mobile device security and policy systems and methods may enforce one or more policies for users wherever and whenever the users are connected across a plurality of different devices including mobile devices. This solution ensures protection across different types brands operating systems etc. for smartphones tablets netbooks mobile computers and the like.

Additionally cloud based mobile device management MDM systems and methods may use the cloud to manage pervasively mobile devices. The cloud based MDM systems and methods provide an ability to manage mobile devices with or without MDM clients while not requiring an MDM appliance or service at the enterprise. This provides a no hardware no software deployment. In an exemplary embodiment a client less implementation leverages the ActiveSync protocol proxied through distributed cloud nodes to enforce mobile policies. In another exemplary embodiment a client based implementation uses a platform specific application and associated application programming interfaces API to connect managed mobile devices to any one of several distributed nodes in the cloud and provide MDM features through the cloud. Advantageously the cloud based MDM systems and methods provide reliability and resiliency elasticity lower cost mobility integration of management and security and agility over conventional MDM based solutions.

Referring to in an exemplary embodiment a block diagram illustrates a distributed security system . The system may for example be implemented as an overlay network in a wide area network WAN such as the Internet a local area network LAN or the like. The system includes content processing nodes PN that proactively detect and preclude the distribution of security threats e.g. malware spyware viruses email spam etc. and other undesirable content sent from or requested by an external system. Example external systems may include an enterprise a computer device and a mobile device or other network and computing systems communicatively coupled to the system . In an exemplary embodiment each of the processing nodes may include a decision system e.g. data inspection engines that operate on a content item e.g. a web page a file an email message or some other data or data communication that is sent from or requested by one of the external systems. In an exemplary embodiment all data destined for or received from the Internet is processed through one of the processing nodes . In another exemplary embodiment specific data specified by each external system e.g. only email only executable files etc. is process through one of the processing node .

Each of the processing nodes may generate a decision vector D d1 d2 . . . dn for a content item of one or more parts C c1 c2 . . . cm . Each decision vector may identify a threat classification e.g. clean spyware malware undesirable content innocuous spam email unknown etc. For example the output of each element of the decision vector D may be based on the output of one or more data inspection engines. In an exemplary embodiment the threat classification may be reduced to a subset of categories e.g. violating non violating neutral unknown. Based on the subset classification the processing node may allow distribution of the content item preclude distribution of the content item allow distribution of the content item after a cleaning process or perform threat detection on the content item. In an exemplary embodiment the actions taken by one of the processing nodes may be determinative on the threat classification of the content item and on a security policy of the external system to which the content item is being sent from or from which the content item is being requested by. A content item is violating if for any part C c1 c2 . . . cm of the content item at any of the processing nodes any one of the data inspection engines generates an output that results in a classification of violating. 

Each of the processing nodes may be implemented by one or more of computer and communication devices e.g. server computers gateways switches etc. such as the server described in . In an exemplary embodiment the processing nodes may serve as an access layer . The access layer may for example provide external system access to the security system . In an exemplary embodiment each of the processing nodes may include Internet gateways and one or more servers and the processing nodes may be distributed through a geographic region e.g. throughout a country region campus etc. According to a service agreement between a provider of the system and an owner of an external system the system may thus provide security protection to the external system at any location throughout the geographic region.

Data communications may be monitored by the system in a variety of ways depending on the size and data requirements of the external system. For example an enterprise may have multiple routers switches etc. that are used to communicate over the Internet and the routers switches etc. may be configured to establish communications through the nearest in traffic communication time for example processing node . A mobile device may be configured to communicated to a nearest processing node through any available wireless access device such as an access point or a cellular gateway. A single computer device such as a consumer s personal computer may have its browser and email program configured to access the nearest processing node which in turn serves as a proxy for the computer device . Alternatively an Internet provider may have all of its customer traffic processed through the processing nodes .

In an exemplary embodiment the processing nodes may communicate with one or more authority nodes AN . The authority nodes may store policy data for each external system and may distribute the policy data to each of the processing nodes . The policy may for example define security policies for a protected system e.g. security policies for the enterprise . Example policy data may define access privileges for users websites and or content that is disallowed restricted domains etc. The authority nodes may distribute the policy data to the processing nodes . In an exemplary embodiment the authority nodes may also distribute threat data that includes the classifications of content items according to threat classifications e.g. a list of known viruses a list of known malware sites spam email domains a list of known phishing sites etc. The distribution of threat data between the processing nodes and the authority nodes may implemented by push and pull distribution schemes described in more detail below. In an exemplary embodiment each of the authority nodes may be implemented by one or more computer and communication devices e.g. server computers gateways switches etc. such as the server described in . In some exemplary embodiments the authority nodes may serve as an application layer . The application layer may for example manage and provide policy data threat data and data inspection engines and dictionaries for the processing nodes .

Other application layer functions may also be provided in the application layer such as a user interface UI front end . The user interface front end may provide a user interface through which users of the external systems may provide and define security policies e.g. whether email traffic is to be monitored whether certain web sites are to be precluded etc. Another application capability that may be provided through the user interface front end is security analysis and log reporting. The underlying data on which the security analysis and log reporting functions operate are stored in logging nodes LN which serve as the application layer . Each of the logging nodes may store data related to security operations and network traffic processed by the processing nodes for each external system. In an exemplary embodiment the logging node data may be anonymized so that data identifying an enterprise is removed or obfuscated. For example identifying data may be removed to provide an overall system summary of security processing for all enterprises and users without revealing the identity of any one account. Alternatively identifying data may be obfuscated e.g. provide a random account number each time it is accessed so that an overall system summary of security processing for all enterprises and users may be broken out by accounts without revealing the identity of any one account. In another exemplary embodiment the identifying data and or logging node data may be further encrypted e.g. so that only the enterprise or user if a single user account may have access to the logging node data for its account. Other processes of anonymizing obfuscating or securing logging node data may also be used.

In an exemplary embodiment an access agent may be included in the external systems. For example the access agent is deployed in the enterprise . The access agent may for example facilitate security processing by providing a hash index of files on a client device to one of the processing nodes or may facilitate authentication functions with one of the processing nodes e.g. by assigning tokens for passwords and sending only the tokens to a processing node so that transmission of passwords beyond the network edge of the enterprise is minimized. Other functions and processes may also be facilitated by the access agent . In an exemplary embodiment the processing node may act as a forward proxy that receives user requests to external servers addressed directly to the processing node . In another exemplary embodiment the processing node may access user requests that are passed through the processing node in a transparent mode. A protected system e.g. enterprise may for example choose one or both of these modes. For example a browser may be configured either manually or through the access agent to access the processing node in a forward proxy mode. In the forward proxy mode all accesses are addressed to the processing node .

In an exemplary embodiment an enterprise gateway may be configured so that user requests are routed through the processing node by establishing a communication tunnel between enterprise gateway and the processing node . For establishing the tunnel existing protocols such as generic routing encapsulation GRE layer two tunneling protocol L2TP or other Internet Protocol IP security protocols may be used. In another exemplary embodiment the processing nodes may be deployed at Internet service provider ISP nodes. The ISP nodes may redirect subject traffic to the processing nodes in a transparent proxy mode. Protected systems such as the enterprise may use a multiprotocol label switching MPLS class of service for indicating the subject traffic that is to be redirected. For example at the within the enterprise the access agent may be configured to perform MPLS labeling. In another transparent proxy mode exemplary embodiment a protected system such as the enterprise may identify the processing node as a next hop router for communication with the external servers.

Generally the distributed security system may generally refer to an exemplary cloud based security system. Cloud computing systems and methods abstract away physical servers storage networking etc. and instead offer these as on demand and elastic resources. The National Institute of Standards and Technology NIST provides a concise and specific definition which states cloud computing is a model for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks servers storage applications and services that can be rapidly provisioned and released with minimal management effort or service provider interaction. Cloud computing differs from the classic client server model by providing applications from a server that are executed and managed by a client s web browser with no installed client version of an application required. Centralization gives cloud service providers complete control over the versions of the browser based applications provided to clients which removes the need for version upgrades or license management on individual client computing devices. The phrase software as a service SaaS is sometimes used to describe application programs offered through cloud computing. A common shorthand for a provided cloud computing service or even an aggregation of all existing cloud services is the cloud. The distributed security system is illustrated herein as one exemplary embodiment of a cloud based system and those of ordinary skill in the art will recognize the cloud based mobile device security and policy systems and methods contemplate operation on any cloud based system.

Referring to in an exemplary embodiment a block diagram illustrates various components of the distributed security system in more detail. Although illustrates only one representative component processing node authority node and logging node those of ordinary skill in the art will appreciate there may be many of each of the component nodes and present in the system . A wide area network WAN such as the Internet or some other combination of wired and or wireless networks communicatively couples the processing node the authority node and the logging node therebetween. The external systems and likewise communicate over the WAN with each other or other data providers and publishers. Some or all of the data communication of each of the external systems and may be processed through the processing node .

In an exemplary embodiment a client access agent may be included on a client computer . The client access agent may for example facilitate security processing by providing a hash index of files on the user computer to a processing node for malware virus detection etc. Other security operations may also be facilitated by the access agent . In another exemplary embodiment a server access agent may facilitate authentication functions with the processing node e.g. by assigning tokens for passwords and sending only the tokens to the processing node so that transmission of passwords beyond the network edge of the enterprise is minimized. Other functions and processes may also be facilitated by the server access agent . The computer device and the mobile device may also store information warranting security measures such as personal bank records medical information and login information e.g. login information to the server of the enterprise or to some other secured data provider server. The computer device and the mobile device can also store information warranting security measures such as personal bank records medical information and login information e.g. login information to a server of the enterprise or to some other secured data provider server.

In an exemplary embodiment the processing nodes are external to network edges of the external systems and . Each of the processing nodes stores security policy data received from the authority node and monitors content items requested by or sent from the external systems and . In an exemplary embodiment each of the processing nodes may also store a detection process filter and or threat data to facilitate the decision of whether a content item should be processed for threat detection. A processing node manager may manage each content item in accordance with the security policy data and the detection process filter and or threat data if stored at the processing node so that security policies for a plurality of external systems in data communication with the processing node are implemented external to the network edges for each of the external systems and . For example depending on the classification resulting from the monitoring the content item may be allowed precluded or threat detected. In general content items that are already classified as clean or not posing a threat can be allowed while those classified as violating may be precluded. Those content items having an unknown status e.g. content items that have not been processed by the system may be threat detected to classify the content item according to threat classifications.

The processing node may include a state manager A. The state manager A may be used to maintain the authentication and the authorization states of users that submit requests to the processing node . Maintenance of the states through the state manager A may minimize the number of authentication and authorization transactions that are necessary to process a request. The processing node may also include an epoch processor B. The epoch processor B may be used to analyze authentication data that originated at the authority node . The epoch processor B may use an epoch ID to validate further the authenticity of authentication data. The processing node may further include a source processor C. The source processor C may be used to verify the source of authorization and authentication data. The source processor C may identify improperly obtained authorization and authentication data enhancing the security of the network. Collectively the state manager A the epoch processor B and the source processor C operate as data inspection engines.

Because the amount of data being processed by the processing nodes may be substantial the detection processing filter may be used as the first stage of an information lookup procedure. For example the detection processing filter may be used as a front end to a looking of the threat data . Content items may be mapped to index values of the detection processing filter by a hash function that operates on an information key derived from the information item. The information key is hashed to generate an index value i.e. a bit position . A value of zero in a bit position in the guard table can indicate for example the absence of information while a one in that bit position can indicate the presence of information. Alternatively a one could be used to represent absence and a zero to represent presence. Each content item may have an information key that is hashed. For example the processing node manager may identify the Uniform Resource Locator URL address of URL requests as the information key and hash the URL address or may identify the file name and the file size of an executable file information key and hash the file name and file size of the executable file. Hashing an information key to generate an index and checking a bit value at the index in the detection processing filter generally requires less processing time than actually searching threat data . The use of the detection processing filter may improve the failure query i.e. responding to a request for absent information performance of database queries and or any general information queries. Because data structures are generally optimized to access information that is present in the structures failure query performance has a greater effect on the time required to process information searches for very rarely occurring items e.g. the presence of file information in a virus scan log or a cache where many or most of the files transferred in a network have not been scanned or cached. Using the detection processing filter however the worst case additional cost is only on the order of one and thus its use for most failure queries saves on the order of m log m where m is the number of information records present in the threat data .

The detection processing filter thus improves performance of queries where the answer to a request for information is usually positive. Such instances may include for example whether a given file has been virus scanned whether content at a given URL has been scanned for inappropriate e.g. pornographic content whether a given fingerprint matches any of a set of stored documents and whether a checksum corresponds to any of a set of stored documents. Thus if the detection processing filter indicates that the content item has not been processed then a worst case null lookup operation into the threat data is avoided and a threat detection can be implemented immediately. The detection processing filter thus complements the threat data that capture positive information. In an exemplary embodiment the detection processing filter may be a Bloom filter implemented by a single hash function. The Bloom filter may be sparse table i.e. the tables include many zeros and few ones and the hash function is chosen to minimize or eliminate false negatives which are for example instances where an information key is hashed to a bit position and that bit position indicates that the requested information is absent when it is actually present.

In general the authority node includes a data store that stores master security policy data for each of the external systems and . An authority node manager may be used to manage the master security policy data e.g. receive input from users of each of the external systems defining different security policies and may distribute the master security policy data to each of the processing nodes . The processing nodes then store a local copy of the security policy data . The authority node may also store a master detection process filter . The detection processing filter may include data indicating whether content items have been processed by one or more of the data inspection engines in any of the processing nodes . The authority node manager may be used to manage the master detection processing filter e.g. receive updates from a processing nodes when the processing node has processed a content item and update the master detection processing filter . For example the master detection processing filter may be distributed to the processing nodes which then store a local copy of the detection processing filter .

In an exemplary embodiment the authority node may include an epoch manager . The epoch manager may be used to generate authentication data associated with an epoch ID. The epoch ID of the authentication data is a verifiable attribute of the authentication data that can be used to identify fraudulently created authentication data. In an exemplary embodiment the detection processing filter may be a guard table. The processing node may for example use the information in the local detection processing filter to quickly determine the presence and or absence of information e.g. whether a particular URL has been checked for malware whether a particular executable has been virus scanned etc. The authority node may also store master threat data . The master threat data may classify content items by threat classifications e.g. a list of known viruses a list of known malware sites spam email domains list of known or detected phishing sites etc. The authority node manager may be used to manage the master threat data e.g. receive updates from the processing nodes when one of the processing nodes has processed a content item and update the master threat data with any pertinent results. In some implementations the master threat data may be distributed to the processing nodes which then store a local copy of the threat data . In another exemplary embodiment the authority node may also monitor the health of each of the processing nodes e.g. the resource availability in each of the processing nodes detection of link failures etc. Based on the observed health of each of the processing nodes the authority node may redirect traffic among the processing nodes and or balance traffic among the processing nodes . Other remedial actions and processes may also be facilitated by the authority node .

The processing node and the authority node may be configured according to one or more push and pull processes to manage content items according to security policy data and or detection processing filters and or and the threat data and or . In a threat data push implementation each of the processing nodes stores policy data and threat data . The processing node manager determines whether a content item requested by or transmitted from an external system is classified by the threat data . If the content item is determined to be classified by the threat data then the processing node manager may manage the content item according to the security classification of the content item and the security policy of the external system. If however the content item is determined to not be classified by the threat data then the processing node manager may cause one or more of the data inspection engines to perform the threat detection processes to classify the content item according to a threat classification. Once the content item is classified the processing node manager generates a threat data update that includes data indicating the threat classification for the content item from the threat detection process and transmits the threat data update to an authority node .

The authority node manager in response to receiving the threat data update updates the master threat data stored in the authority node data store according to the threat data update received from the processing node . In an exemplary embodiment the authority node manager may automatically transmit the updated threat data to the other processing nodes . Accordingly threat data for new threats as the new threats are encountered are automatically distributed to each processing node . Upon receiving the new threat data from the authority node each of processing node managers may store the updated threat data in the locally stored threat data .

In a threat data pull and push implementation each of the processing nodes stores policy data and threat data . The processing node manager determines whether a content item requested by or transmitted from an external system is classified by the threat data . If the content item is determined to be classified by the threat data then the processing node manager may manage the content item according to the security classification of the content item and the security policy of the external system. If however the content item is determined to not be classified by the threat data then the processing node manager may request responsive threat data for the content item from the authority node . Because processing a content item may consume valuable resource and time in some implementations the processing node may first check with the authority node for threat data before committing such processing resources.

The authority node manager may receive the responsive threat data request from the processing node and may determine if the responsive threat data is stored in the authority node data store. If responsive threat data is stored in the master threat data then the authority node manager provide a reply that includes the responsive threat data to the processing node so that the processing node manager may manage the content item in accordance with the security policy data and the classification of the content item. Conversely if the authority node manager determines that responsive threat data is not stored in the master threat data then the authority node manager may provide a reply that does not include the responsive threat data to the processing node . In response the processing node manager can cause one or more of the data inspection engines to perform the threat detection processes to classify the content item according to a threat classification. Once the content item is classified the processing node manager generates a threat data update that includes data indicating the threat classification for the content item from the threat detection process and transmits the threat data update to an authority node . The authority node manager can then update the master threat data . Thereafter any future requests related to responsive threat data for the content item from other processing nodes can be readily served with responsive threat data.

In a detection process filter and threat data push implementation each of the processing nodes stores a detection process filter policy data and threat data . The processing node manager accesses the detection process filter to determine whether the content item has been processed. If the processing node manager determines that the content item has been processed it may determine if the content item is classified by the threat data . Because the detection process filter has the potential for a false positive a lookup in the threat data may be implemented to ensure that a false positive has not occurred. The initial check of the detection process filter however may eliminate many null queries to the threat data which in turn conserves system resources and increases efficiency. If the content item is classified by the threat data then the processing node manager may manage the content item in accordance with the security policy data and the classification of the content item. Conversely if the processing node manager determines that the content item is not classified by the threat data or if the processing node manager initially determines through the detection process filter that the content item is not classified by the threat data then the processing node manager may cause one or more of the data inspection engines to perform the threat detection processes to classify the content item according to a threat classification. Once the content item is classified the processing node manager generates a threat data update that includes data indicating the threat classification for the content item from the threat detection process and transmits the threat data update to one of the authority nodes .

The authority node manager in turn may update the master threat data and the master detection process filter stored in the authority node data store according to the threat data update received from the processing node . In an exemplary embodiment the authority node manager may automatically transmit the updated threat data and detection processing filter to other processing nodes . Accordingly threat data and the detection processing filter for new threats as the new threats are encountered are automatically distributed to each processing node and each processing node may update its local copy of the detection processing filter and threat data .

In a detection process filter and threat data pull and push implementation each of the processing nodes stores a detection process filter policy data and threat data . The processing node manager accesses the detection process filter to determine whether the content item has been processed. If the processing node manager determines that the content item has been processed it may determine if the content item is classified by the threat data . Because the detection process filter has the potential for a false positive a lookup in the threat data can be implemented to ensure that a false positive has not occurred. The initial check of the detection process filter however may eliminate many null queries to the threat data which in turn conserves system resources and increases efficiency. If the processing node manager determines that the content item has not been processed it may request responsive threat data for the content item from the authority node . Because processing a content item may consume valuable resource and time in some implementations the processing node may first check with the authority node for threat data before committing such processing resources.

The authority node manager may receive the responsive threat data request from the processing node and may determine if the responsive threat data is stored in the authority node data store. If responsive threat data is stored in the master threat data then the authority node manager provides a reply that includes the responsive threat data to the processing node so that the processing node manager can manage the content item in accordance with the security policy data and the classification of the content item and further update the local detection processing filter . Conversely if the authority node manager determines that responsive threat data is not stored in the master threat data then the authority node manager may provide a reply that does not include the responsive threat data to the processing node . In response the processing node manager may cause one or more of the data inspection engines to perform the threat detection processes to classify the content item according to a threat classification. Once the content item is classified the processing node manager generates a threat data update that includes data indicating the threat classification for the content item from the threat detection process and transmits the threat data update to an authority node . The authority node manager may then update the master threat data . Thereafter any future requests for related to responsive threat data for the content item from other processing nodes can be readily served with responsive threat data.

The various push and pull data exchange processes provided above are exemplary processes for which the threat data and or detection process filters may be updated in the system of . Other update processes however are contemplated with the present invention. The data inspection engines processing node manager authority node manager user interface manager logging node manager and access agent may be realized by instructions that upon execution cause one or more processing devices to carry out the processes and functions described above. Such instructions can for example include interpreted instructions such as script instructions e.g. JavaScript or ECMAScript instructions or executable code or other instructions stored in a non transitory computer readable medium. Other processing architectures can also be used e.g. a combination of specially designed hardware and software for example.

Referring to in an exemplary embodiment a block diagram illustrates a server which may be used in the system or standalone. Any of the processing nodes the authority nodes and the logging nodes may be formed through one or more servers . Further the computer device the mobile device the servers etc. may include the server . The server may be a digital computer that in terms of hardware architecture generally includes a processor input output I O interfaces a network interface a data store and memory . It should be appreciated by those of ordinary skill in the art that depicts the server in an oversimplified manner and a practical embodiment may include additional components and suitably configured processing logic to support known or conventional operating features that are not described in detail herein. The components and are communicatively coupled via a local interface . The local interface may be for example but not limited to one or more buses or other wired or wireless connections as is known in the art. The local interface may have additional elements which are omitted for simplicity such as controllers buffers caches drivers repeaters and receivers among many others to enable communications. Further the local interface may include address control and or data connections to enable appropriate communications among the aforementioned components.

The processor is a hardware device for executing software instructions. The processor may be any custom made or commercially available processor a central processing unit CPU an auxiliary processor among several processors associated with the server a semiconductor based microprocessor in the form of a microchip or chip set or generally any device for executing software instructions. When the server is in operation the processor is configured to execute software stored within the memory to communicate data to and from the memory and to generally control operations of the server pursuant to the software instructions. The I O interfaces may be used to receive user input from and or for providing system output to one or more devices or components. User input may be provided via for example a keyboard touchpad and or a mouse. The system output may be provided via a display device and a printer not shown . I O interfaces can include for example a serial port a parallel port a small computer system interface SCSI an infrared IR interface a radio frequency RF interface and or a universal serial bus USB interface.

The network interface may be used to enable the server to communicate on a network such as the Internet the WAN the enterprise and the like etc. The network interface may include for example an Ethernet card or adapter e.g. 10BaseT Fast Ethernet Gigabit Ethernet 10 GbE or a wireless local area network WLAN card or adapter e.g. 802.11a b g n . The network interface may include address control and or data connections to enable appropriate communications on the network. A data store may be used to store data. The data store may include any of volatile memory elements e.g. random access memory RAM such as DRAM SRAM SDRAM and the like nonvolatile memory elements e.g. ROM hard drive tape CDROM and the like and combinations thereof. Moreover the data store may incorporate electronic magnetic optical and or other types of storage media. In one example the data store may be located internal to the server such as for example an internal hard drive connected to the local interface in the server . Additionally in another embodiment the data store may be located external to the server such as for example an external hard drive connected to the I O interfaces e.g. SCSI or USB connection . In a further embodiment the data store may be connected to the server through a network such as for example a network attached file server.

The memory may include any of volatile memory elements e.g. random access memory RAM such as DRAM SRAM SDRAM etc. nonvolatile memory elements e.g. ROM hard drive tape CDROM etc. and combinations thereof. Moreover the memory may incorporate electronic magnetic optical and or other types of storage media. Note that the memory may have a distributed architecture where various components are situated remotely from one another but can be accessed by the processor . The software in memory may include one or more software programs each of which includes an ordered listing of executable instructions for implementing logical functions. The software in the memory includes a suitable operating system O S and one or more programs . The operating system essentially controls the execution of other computer programs such as the one or more programs and provides scheduling input output control file and data management memory management and communication control and related services. The operating system may be any of Windows NT Windows 2000 Windows XP Windows Vista Windows 7 Windows Server 2003 2008 all available from Microsoft Corp. of Redmond Wash. Solaris available from Sun Microsystems Inc. of Palo Alto Calif. LINUX or another UNIX variant available from Red Hat of Raleigh N.C. Android and variants thereof available from Google Inc. of Mountain View Calif. Apple OS X and variants thereof available from Apple Inc. of Cupertino Calif. or the like. The one or more programs may be configured to implement the various processes algorithms methods techniques etc. described herein.

Referring to in an exemplary embodiment a block diagram illustrates a mobile device which may be used in the system or the like. The mobile device can be a digital device that in terms of hardware architecture generally includes a processor input output I O interfaces a radio a data store and memory . It should be appreciated by those of ordinary skill in the art that depicts the mobile device in an oversimplified manner and a practical embodiment may include additional components and suitably configured processing logic to support known or conventional operating features that are not described in detail herein. The components and are communicatively coupled via a local interface . The local interface can be for example but not limited to one or more buses or other wired or wireless connections as is known in the art. The local interface can have additional elements which are omitted for simplicity such as controllers buffers caches drivers repeaters and receivers among many others to enable communications. Further the local interface may include address control and or data connections to enable appropriate communications among the aforementioned components.

The processor is a hardware device for executing software instructions. The processor can be any custom made or commercially available processor a central processing unit CPU an auxiliary processor among several processors associated with the mobile device a semiconductor based microprocessor in the form of a microchip or chip set or generally any device for executing software instructions. When the mobile device is in operation the processor is configured to execute software stored within the memory to communicate data to and from the memory and to generally control operations of the mobile device pursuant to the software instructions. In an exemplary embodiment the processor may include a mobile optimized processor such as optimized for power consumption and mobile applications. The I O interfaces can be used to receive user input from and or for providing system output. User input can be provided via for example a keypad a touch screen a scroll ball a scroll bar buttons barcode scanner and the like. System output can be provided via a display device such as a liquid crystal display LCD touch screen and the like. The I O interfaces can also include for example a serial port a parallel port a small computer system interface SCSI an infrared IR interface a radio frequency RF interface a universal serial bus USB interface and the like. The I O interfaces can include a graphical user interface GUI that enables a user to interact with the mobile device . Additionally the I O interfaces may further include an imaging device i.e. camera video camera etc.

The radio enables wireless communication to an external access device or network. Any number of suitable wireless data communication protocols techniques or methodologies can be supported by the radio including without limitation RF IrDA infrared Bluetooth ZigBee and other variants of the IEEE 802.15 protocol IEEE 802.11 any variation IEEE 802.16 WiMAX or any other variation Direct Sequence Spread Spectrum Frequency Hopping Spread Spectrum Long Term Evolution LTE cellular wireless cordless telecommunication protocols e.g. 3G 4G etc. wireless home network communication protocols paging network protocols magnetic induction satellite data communication protocols wireless hospital or health care facility network protocols such as those operating in the WMTS bands GPRS proprietary wireless data communication protocols such as variants of Wireless USB and any other protocols for wireless communication. The data store may be used to store data. The data store may include any of volatile memory elements e.g. random access memory RAM such as DRAM SRAM SDRAM and the like nonvolatile memory elements e.g. ROM hard drive tape CDROM and the like and combinations thereof. Moreover the data store may incorporate electronic magnetic optical and or other types of storage media.

The memory may include any of volatile memory elements e.g. random access memory RAM such as DRAM SRAM SDRAM etc. nonvolatile memory elements e.g. ROM hard drive etc. and combinations thereof. Moreover the memory may incorporate electronic magnetic optical and or other types of storage media. Note that the memory may have a distributed architecture where various components are situated remotely from one another but can be accessed by the processor . The software in memory can include one or more software programs each of which includes an ordered listing of executable instructions for implementing logical functions. In the example of the software in the memory system includes a suitable operating system O S and programs . The operating system essentially controls the execution of other computer programs and provides scheduling input output control file and data management memory management and communication control and related services. The operating system may be any of LINUX or another UNIX variant Android available from Google Symbian OS Microsoft Windows CE Microsoft Windows 7 Mobile iOS available from Apple Inc. webOS available from Hewlett Packard Blackberry OS Available from Research in Motion and the like. The programs may include various applications add ons etc. configured to provide end user functionality with the mobile device . For example exemplary programs may include but not limited to a web browser social networking applications streaming media applications games mapping and location applications electronic mail applications financial applications and the like. In a typical example the end user typically uses one or more of the programs along with a network such as the system .

Referring to in an exemplary embodiment a cloud system is illustrated for implementing cloud based mobile device security and policy systems and methods and cloud based MDM systems and methods. The cloud system includes one or more cloud nodes CN communicatively coupled to the Internet . The cloud nodes may include the processing nodes the server or the like. That is the cloud system may include the distributed security system or another implementation of a cloud based system. In the cloud system traffic from various locations such as a regional office headquarters various employee s homes mobile laptop and mobile device is redirected to the cloud through the cloud nodes . That is each of the locations is communicatively coupled to the Internet through the cloud nodes . The cloud system may be configured to perform various functions such as spam filtering uniform resource locator URL filtering antivirus protection bandwidth control data loss prevention zero day vulnerability protection web 2.0 features and the like. In an exemplary embodiment the cloud system and the distributed security system may be viewed as Security as a Service through the cloud.

In various exemplary embodiments the cloud system is configured to provide mobile device security and policy systems and methods. The mobile device may be the mobile device and may include common devices such as smartphones tablets netbooks personal digital assistants MP3 players cell phones e book readers and the like. The cloud system is configured to provide security and policy enforcement for devices including the mobile devices in the cloud. Advantageously the cloud system avoids platform specific security apps on the mobile devices forwards web traffic through the cloud system enables network administrators to define policies in the cloud and enforces cleans traffic in the cloud prior to delivery to the mobile devices . Further through the cloud system network administrators may define user centric policies tied to users not devices with the policies being applied regardless of the device used by the user. The cloud system provides 24 7 security with no need for updates as the cloud system is always up to date with current threats and without requiring device signature updates. Also the cloud system enables multiple enforcement points centralized provisioning and logging automatic traffic routing to a nearest cloud node geographical distribution of the cloud nodes policy shadowing of users which is dynamically available at the cloud nodes etc.

In other exemplary embodiments the cloud system is configured to provide MDM functionality for mobile devices such as the mobile device . The cloud based MDM systems and methods provide an ability to manage the mobile device and other mobile devices with or without an MDM client on the mobile device and without an appliance or server at the enterprise i.e. at the regional office or the headquarters . In an exemplary embodiment a client less implementation leverages the ActiveSync protocol proxied through the distributed cloud nodes to enforce basic policies e.g. password screen lock remote wipe enable disable features such as the browser or camera etc. In another exemplary embodiment a client based implementation uses a specific platform application and associated API to connect with the mobile device and provide MDM features. The cloud system provides scalability redundancy and reduced latency with the multiple geographically distributed cloud nodes . MDM policies may be defined in a Central Authority CA that pushes then out on demand to geographically distributed cloud nodes . The mobile devices communicate with local cloud nodes without requiring configuration changes e.g. the mobile devices may be automatically directed to the closest cloud node . Policies are automatically available at the local cloud node minimizing latency. In the event of cloud node failure or excessive load connections are load balanced automatically across other cloud nodes transparent to the mobile device .

ActiveSync is a mobile data synchronization technology and protocol developed by Microsoft. ActiveSync works over hypertext transfer protocol HTTP and HTTPS and is licensed by several mobile device manufacturers such as Apple Google etc. ActiveSync email client is pre installed on most mobile devices today. ActiveSync allows email and policy sync. Generally there are two implementations of ActiveSync. A first implementation synchronizes data and information with mobile devices and a specific computer. A second implementation commonly known as Exchange ActiveSync EAS provides push synchronization of contacts calendars tasks email and the like between servers and the mobile devices . Exchange ActiveSync runs over HTTP S using Wireless Application Protocol WAP binary Extensible markup language XML . WAP binary XML is a binary format that encodes the parsed physical form of an XML document i.e. the structure and content of the document entities. Meta information including the document type definition and conditional sections is removed when the document is converted to the binary format. This provides a compact binary representation optimized for wireless applications.

In exemplary embodiments the cloud nodes may be configured to intercept or spoof Exchange ActiveSync messages. In an exemplary embodiment if a mobile device has an ActiveSync association such as with a server at the headquarters the cloud node can proxy this connection blocking it if non compliant and optionally insert policy provisioning commands. In another exemplary embodiment if the mobile device does not have an Exchange ActiveSync association the cloud node can be configured to emulate or spoof an Exchange ActiveSync server and issue policy provisioning commands to the mobile device . In yet another exemplary embodiment the mobile device may be provisioned with a platform specific MDM API which interfaces to the cloud node . The cloud based MDM systems and methods are described herein with exemplary embodiments referencing Exchange ActiveSync for illustration and those of ordinary skill in the art will recognize this may include any synchronization techniques between the mobile device and the cloud nodes including WAP binary XML and the like. Fundamentally the cloud based MDM systems and methods seek to utilize one or more existing synchronization techniques with the cloud system for providing MDM functionality.

Referring to in an exemplary embodiment a flowchart and a network diagram illustrate an Exchange ActiveSync provisioning method for the cloud system . In particular the provisioning method assumes the mobile device does not have an Exchange ActiveSync association and the cloud node is configured to emulate or spoof an Exchange ActiveSync server and issue policy provisioning commands. For the provisioning method an administrator specifies mobile users and their associated mobile devices in a company s active directory step . Active Directory AD is a service created by Microsoft that uses standardized protocols to provide a variety of network services including Lightweight Directory Access Protocol LDAP Kerberos based authentication Domain Name System DNS based naming and other network information and the like. Features of the active directory include a centralized location for network administration and security information security and single sign on for user access to networked resources scalability standardized access to application data and the like. The CA synchronizes with the company s active directory step . Specifically the CA obtains user credentials for associated mobile devices in a company s active directory. Each of the mobile users receives a notification to sign up for the cloud MDM step . This may include a plurality of methods for the notification including an email a text message offline instructions and the like.

Through the sign up the user adds ActiveSync email e.g. user company.com and a server e.g. gateway.zscaler.net step . Here the user s mobile device is configured to set up an Exchange ActiveSync connection with the server gateway.zscaler.net i.e. the cloud node . DNS resolution for gateway.zscaler.net is done by the cloud service such that the resolved IP address points the mobile device to the nearest cloud node . Once connected the cloud node is configured to implement the ActiveSync protocol with the mobile device and the cloud node requests authentication from the CA step . Here the CA provides the cloud node with the applicable authentication data as well as configuration data for MDM. Finally upon successful authentication an ActiveSync account is provisioned between the mobile device and the cloud node step . The cloud node utilizes this ActiveSync account to provide MDM of the mobile device .

Referring to in an exemplary embodiment a flowchart and a network diagram illustrate Exchange ActiveSync based MDM method for the cloud system . For the MDM method an administrator specifies mobile policy profiles and applies it to users groups of mobile devices step . In the provisioning method the mobile device is already set up with an ActiveSync account on the Exchange server . The mobile device checks the cloud node ActiveSync Server for mailbox policy updates step . In an exemplary embodiment the cloud node may be configured to operate as an ActiveSync Server to the mobile device . In another exemplary embodiment the cloud node may be configured to monitor and update ActiveSync messages between the mobile device and the Exchange server and issue policy provisioning commands therein. In either embodiment the mobile device is communicatively coupled to the Exchange server through the cloud node . The cloud node may check the CA for any policy updates for the user step . Specifically the administrator may define the policy for the user through the CA . The cloud node ActiveSync Server sends provisioning payload information to the mobile device step .

Additionally the mobile device may be configured to get an email from the actual company.com Exchange server step . Specifically the mobile device may have an ActiveSync association with the cloud node and another with the Exchange server . If the ActiveSync association is with the Exchange server the cloud node may be configured to monitor for ActiveSync messages for compliance with policy and to add information for provisioning etc. In either embodiment the cloud node may be configured to proxy ActiveSync messages between the mobile device and the Exchange server step . If the ActiveSync messages do not comply with defined policy the cloud node may be configured to block email traffic from the Exchange server to the mobile device . Finally the administrator has access to various information related to MDM such as reports of missing devices reports of non compliant devices etc. step . In particular the cloud node is configured to proxy ActiveSync messages from the Exchange server . In an exemplary embodiment without the Exchange server the cloud node is configured to spoof policy messages of the ActiveSync protocol. With the Exchange server then cloud node is proxying the traffic and in the process can insert MDM policy messages in the stream.

Using Exchange ActiveSync with the cloud node and the mobile device the provisioning method and the MDM method may utilize the built in support for ActiveSync among many existing mobile devices . For example mobile devices with built in or native operating system support for Exchange ActiveSync include Apple iPhone iPad Android devices Palm OS Symbian devices Microsoft platforms and the like. Using ActiveSync the cloud based MDM systems and methods can perform various functions policies etc. including for example remote wipe of the mobile device password enforcement on the mobile device locking the mobile device based on inactivity a refresh interval for policy updates requiring manual synchronization such as while roaming preventing use of the camera etc. For example related to the password enforcement the cloud based MDM systems and methods can enforce a minimum password length set a number of failed password attempts before locking the mobile device or performing a local wipe require a mixture of characters in the password set a password expiration period and keep a password history to prevent new passwords from matching previous passwords and the like.

The cloud based MDM systems and methods can implement various additional functions features policies etc. such as instantaneous policy changes scheduled policy changes device backup device settings and the like. Further the cloud based MDM systems and methods can allow disallow various functions of the mobile device including for example installation of specified applications use of specified applications prevention of screen capture prevention of voice dialing prevention of games prevention of social media prevention of streaming media web browser usage prevention of Wi Fi and or Bluetooth and the like. Also the cloud based MDM systems and methods may further provide provisioning of various functions and features on the mobile device including for example Wi Fi settings virtual private network VPN settings email settings provisioning of credentials and the like MDM settings wireless e.g. GSM CDMA 4G settings and the like.

Referring to in an exemplary embodiment a flowchart and a network diagram illustrate a platform specific MDM configuration for the cloud system . In an exemplary embodiment the platform specific MDM configuration operates with a push notification server and a third party MDM server each in communication with the mobile device . In another exemplary embodiment the platform specific MDM configuration may include the cloud node performing the functions of both the push notification server and the platform specific MDM server . The platform specific MDM configuration begins with a configuration profile containing MDM server information being sent to the mobile device step . The user of the mobile device may be presented with information about what will be managed and or queried by the server. The configuration profile may be sent or provided to the mobile device is a variety of methods e.g. email text message web browser link physical loading via a connection to the mobile device and the like. Also the configuration profile may include software configured to operate on the mobile device to coordinate and provide the MDM functionality.

The user or an IT administrator installs the profile to opt the mobile device into being managed by the MDM server or the cloud node . The mobile device is enrolled as the profile is being installed step . The server cloud node validates the mobile device and allows access. The push notification server sends a push notification prompting the mobile device to check in for tasks queries etc. step . Finally the mobile device connects directly to the MDM server or the cloud node such as over HTTPS step . The MDM server or the cloud node is configured to operate with the installed profile on the mobile device . Specifically the MDM server or the cloud node may send commands to or request information from the mobile device . The exemplary commands may include the various functions described herein with reference to the provisioning methods or any other MDM related functions. The platform specific MDM configuration is described herein using the push notification server and the MDM server or the cloud node . Generally the platform specific MDM configuration uses other MDM platform specific clients that need to be installed on the mobile device and use various APIs to get configuration updates and report status to the MDM server or the cloud node .

Referring to in various exemplary embodiments graphical user interfaces GUI illustrate screen shots of an MDM provisioning platform. As described herein the cloud system or the distributed security system may provide a cloud based MDM system and method. Since the cloud nodes and or the processing nodes act as proxies for the mobile device they can log all traffic and concurrently provide MDM functionality. Each of the cloud system or the distributed security system has a management system. For example the distributed security system has the user interface front end . The cloud system may have a similar function. Specifically the management system provides an administrator with a consolidated view for managing and provisioning the cloud system and the distributed security system . In an exemplary embodiment the cloud based MDM system and method may include an integrated dashboard such as through the management system the user interface front end a web server associated with the cloud nodes and the like. This integrated dashboard may be utilized by the administrator to define configurations policy security provisioning etc. of the mobile devices . Furthermore the integrated dashboard may provide transaction logs alerts reports etc. related to MDM of the mobile devices .

Referring to in various exemplary embodiments GUIs illustrate screen shots of reporting and graphing associated with the cloud based MDM system and method. illustrates an exemplary list of mobile device under the management of the cloud based MDM system and method. This list may include various attributes user ID user name device type etc. and may be sorted by any column. The list may allow sort search and ability to apply pre defined policy profiles to selected users. Further an administrator may click on a particular user to drill down into more details. The list may provide a convenient method of applying the policy to multiple mobile devices simultaneously. Further the cloud based MDM system and method contemplate location based policies even on Apple devices. Here the mobile devices may be set for different policies based on which cloud node they are connected through. This may be provisioned through the list or through another GUI. illustrates a graph associated with the cloud based MDM system and method. That is the integrated dashboard may include a reporting tab which provides the administrator with an ability to do reporting tracking etc. In a pie chart illustrates a division of types of mobile devices associated with the cloud based MDM system and method. The cloud based MDM system and method can provide numerous reports such as number of devices by platform that have checked in over a period of time number of missing devices by platform that have not checked in etc. Further the cloud based MDM system and method contemplates an ability to drill down to gather further details on devices history etc.

As described herein the cloud based MDM system and method contemplate MDM management through the cloud thereby reducing or eliminating the need for external equipment software etc. to provide MDM. With the cloud policies may be dynamic adaptable based on individual user behavior aggregate user behavior user location etc. Specifically the cloud enables IT administrators to see a global view. For example if a new mobile application is introduced that has a perilous effect on the enterprise the administrator can block this mobile application across all mobile devices in a single step. The cloud based MDM further provides flexibility to IT administrators allowing prevention of data leakage across mobile devices and the like. The cloud can protect different mobile devices across different networks in a single integrated fashion. The cloud is pervasive and up to date with respect to security threats. The cloud by nature is distributed enabling access across the enterprise i.e. HQ as well as road warrior employees. The cloud provides a quick rollout low maintenance and low cost of ownership for the enterprise. Finally the cloud is inherently resilient and scalable.

Referring to in an exemplary embodiment a network illustrates an exemplary implementation of the present invention with one or more mobile devices communicatively coupled to an external network e.g. the Internet via the distributed security system the cloud system or the like. In particular the mobile devices may include any of the aforementioned mobile devices described herein. The distributed security system the cloud system or any other cloud based system is configured to provide real time continuous inspection of mobile data transactions while not impacting performance. Further the distributed security system the cloud system etc. advantageously is platform independent allowing the mobile devices to be any type of device platform operating system etc. while providing a consistent level of protection. In an exemplary embodiment the mobile devices are communicatively coupled to the distributed security system such as for example via the processing nodes or to the cloud system via the cloud nodes . Note the mobile devices may access the distributed security system the cloud system etc. via a service provider s wireless network via a Wi Fi hotspot via a wired connection etc. Each of the mobile devices may include an application configuration settings operating system settings and combinations thereof that configured the mobile device to communicate through to the distributed security system the cloud system etc.

In the distributed security system the cloud system etc. is configured to act as a gatekeeper with respect to traffic forwarded from the mobile device to the network and for traffic forward from the network to the mobile device . In particular the system is configured to enforce policy guidelines with respect to traffic from the mobile device to the network . As described herein policy refers to a set of use guidelines associated with the mobile device . Exemplary policies may include but not limited to data usage time of day location work vs. off site using social networking sites operating a particular application black list of websites and the like. The system may enforce policy in a variety of ways including blocking non compliant traffic and displaying a notification on the mobile device alerting an administrator and the like. For example the administrator of the system may interact with the system to define policy guidelines as well as to receive reports from the system associated with the mobile devices . Concurrent with the policy enforcement the system may also inspect content from the network for malicious content e.g. malware spyware viruses email spam etc. and blocking such content from the mobile device .

Thus the implementation of the network provides a cloud based security system to the mobile devices that is a user location and platform independent. There is no requirement for external software on the mobile device other than configuration settings that instruct the mobile device to communicate data through the system . In an exemplary embodiment the mobile device is configured to communicate solely data traffic through the system while voice traffic is handled directly with an end service provider. The network offers a seamless solution that works independent of platform requires no updates on the mobile device filtering and policy enforcement is performed in the cloud etc. In another exemplary embodiment the network may provide IT administrators an ability to monitor and prevent specific applications on the mobile devices . This may prevent unacceptable or risky applications.

The network enforces policy in the cloud not on the mobile device . This means all network content is scanned both browser and application generated web traffic to ensure that malicious content is blocked in the cloud long before it reaches the mobile device or the corporate network. Unlike other mobile security solutions that require platform specific applications to be installed on every device the present invention works seamlessly across mobile platforms including iPhones iPads and Android devices for example. Advantageously the present invention requires no signature updates on the mobile device and provides real time inspection in the cloud for every web or data transaction regardless of whether it came from a browser or from an application installed on the device. Further the present invention runs in the cloud and has no impact on the mobile device s performance battery life or processing resources. Also the system may provide real time logs and reports for any user from any location on any device at any time.

Referring to in an exemplary embodiment a flow chart illustrates a mobile device use method for using a cloud based security system with a mobile device. The method may for example be implemented in the network such as through the mobile device and the system or alternatively any cloud based system . The steps shown in are each processes that can be executed independently and concurrently as appropriate. First an enterprise or the like pushes a mobile profile and or application on an end user s mobile device step . In an exemplary embodiment the push includes pushing configuration settings on the mobile device such that data traffic flows through the cloud based security system. This may include an HTTP Proxy a VPN between the mobile device and the cloud based system from devices in a carrier or service provider s network to the cloud based system from a Wi Fi network to the cloud based system etc. For example a specific operating system associated with the mobile device may natively support such configurations. Alternatively an application may be pushed onto the mobile device to provide such a connection to the cloud based security system. The mobile profile and or the application is installed on the end user s mobile device step . Once installed the mobile device is configured to connect to a network using the mobile profile and or the application step . Here the mobile device is configured such that data communication e.g. web email etc. is through the cloud based security system. The cloud based security system is configured to provide content inspection and policy enforcement step .

Referring to in an exemplary embodiment a flow chart illustrates a mobile application classification method for classifying applications associated with mobile devices. The method may for example be implemented in the network such as through the mobile device and the system or alternatively any cloud based system or on a device such as the server communicatively coupled to the network . The steps shown in are each processes that can be executed independently and concurrently as appropriate. The method may be utilized for classifying applications based on their security and privacy profile and leveraging the associated data to provide protection and policy enforcement for applications by leveraging the cloud. First a plurality of applications for mobile devices is analyzed for various attributes step . The applications may include mobile applications on Apple s App Store Google s Android Market and the like. Exemplary attributes may include application creator category user agent strings used by the application to communicate over the network security attributes privacy attributes and the like. The purpose of the method is to classify each application with an associated score defining risk. For example in one exemplary embodiment the method may determine a security score and a privacy score for each of the plurality of applications step . These scores may take any form numerical alphabetical etc. . For example the scores may be based on a numerical range e.g. 1 10 where 1 is very secure and 10 is very insecure. These scores may define a mobile Application Security Rating ASR .

In an exemplary embodiment the security score may be computed based on 1 a security analysis done for the application 2 application permissions which determine what the application is capable of accessing 3 reputation of the vendor that created the application 4 feedback from users 5 real time analysis of app behavior in the cloud and 6 combinations thereof. In an exemplary embodiment the privacy score may be based on 1 a privacy analysis done for the application 2 feedback from users of the application around security 3 real time analysis of app behavior in the cloud and 4 combinations thereof. With this data a database may be created with the plurality of applications and their associated scores and attributes step . For example the database may be at a server in the cloud based system such as at a processing node at an authority node the cloud node or combinations thereof. This database may be continually or periodically updated step . For example the database may be updated as new applications emerge as new ratings are determined based on the cloud based system etc. Further the method is configured to provide the scores and the attributes on demand as required by the cloud based system step . For example the cloud based system may utilize this data in a policy enforcement step i.e. is a particular application requested by a mobile device allowed per policy does it meet a minimum threshold for security and or privacy will this application interfere with an enterprise network etc.

Referring to in an exemplary embodiment a flow chart illustrates a mobile device security method using a cloud based security system with a mobile device. The method may for example be implemented by a cloud based system such as in the network through the mobile device and the system or alternatively any cloud based system . The steps shown in are each processes that can be executed independently and concurrently as appropriate. The method assumes the mobile device is configured to operate with the cloud based system such as through the method . A cloud based system receives data from a mobile device step . As described herein the mobile device is configured to communicate data traffic through the cloud based security system. The data may include Web traffic and the like. In an exemplary embodiment the data may be forwarded to the cloud based system through a variety of mechanisms such as for example a Hypertext Transfer Protocol HTTP Proxy a VPN between the mobile device and the cloud based system from devices in a carrier or service provider s network to the cloud based system from a Wi Fi network to the cloud based system etc. For example related to a carrier or service provider s network a user of the mobile device may access a wireless network e.g. a 3G 4G network from any of AT T Verizon Sprint T Mobile etc. In this embodiment the cloud based system may be configured to receive direct data from the mobile device without requiring an HTTP proxy VPN etc.

The cloud based system is configured to analyze data from the mobile device to apply predefined policy step . As described herein the policy may be broadly defined as any acceptable use activity defined by an IT administrator etc. For example the acceptable use activity may include blocking use and or installation of applications based on the mobile Application Security Rating preventing access to blacklisted Web sites data use during specified times e.g. at work and the like. The administrator can define policies that block applications based on Application Security Rating category vendor etc. In another exemplary embodiment the data may include a Web request and the cloud based system may implement the Web Risk Index described herein to determine whether or not to forward such request. Policies may be defined for a company group or user. Appropriate application policies are enforced in line. For example applications that are deemed malicious or violating the policy can be prevented from being downloaded by the secure web gateway. That is if the cloud based system deems the data from the mobile device violates a policy step the data may be blocked step . In an exemplary embodiment the data may be blocked and a message may be provided to the mobile device notifying a user as such.

If the data does not violate a policy step the cloud based system may forward the data to an external network step . For example the cloud based system may forward the data to the Internet including a designated Web site. Subsequently the cloud base system may receive a data response from the network for the mobile device based on the initially forwarded data step . Upon receipt of the data response the cloud based system is configured to inspect the content of the data response step . Here the cloud based system is configured to provide real time traffic analysis and enforcement in the cloud. As described herein the system may provide a secure gateway to view all data transactions in real time and provide content inspection with respect to malicious content including but not limited to viruses spyware malware Trojans botnets spam email phishing content inappropriate content with respect to policy blacklisted content and the like. In particular the cloud based system is configured to determine if the content is valid and or capable of being forwarded to the mobile device step . If the cloud based system determines for some reason e.g. malicious content unapproved application risky content from a security or privacy perspective policy violation etc. the cloud based system may block the data from the mobile device step and potentially notify the user and or the IT administrator. Alternatively if the data response is clean and not in violation of any defined policy the data response from the network may be forwarded to the mobile device by the cloud based system step .

Referring to in an exemplary embodiment a flowchart and screen shots illustrate an exemplary operation of IPsec VPN with cloud based mobile device security and policy systems and methods. Internet Protocol Security IPsec is a protocol suite for securing Internet Protocol IP communications by authenticating and encrypting each IP packet of a communication session. IPsec also includes protocols for establishing mutual authentication between agents at the beginning of the session and negotiation of cryptographic keys to be used during the session. In an exemplary embodiment the mobile device may use an IPsec VPN to communicate to the system . First an administrator pushes a mobile configuration profile on to a mobile device step . In an exemplary embodiment this push may include a two dimensional bar code that is input into the mobile device via a scanner a camera etc. A user installs the mobile profile on the mobile device step . For example following the configuration push the user may be presented with a screen for the user to confirm or initiate installation. The mobile device may automatically connect to the installed IPsec VPN on demand step . For example the user may initiate a connection via a screen to connect to the IPsec VPN. Alternatively the IPsec VPN may be automatically always on. Finally security and policy management enforcement is performed in the cloud step . For example a screen shot illustrates a user screen when the cloud detects a virus. In lieu of downloading the virus to the mobile device the cloud blocks the content and provides relevant details to the user.

Referring to in an exemplary embodiment a flowchart and screen shots illustrate an exemplary operation of Junos Pulse Secure Socket Layer SSL with cloud based mobile device security and policy systems and methods. Junos Pulse available from Juniper Networks Inc. for iOS enables secure connectivity over SSL VPN to corporate applications and data from anywhere at any time. Using Junos Pulse a user can connect securely to a corporate Juniper Networks SA Series SSL VPN gateway and gain instant access to business applications and networked data anywhere. In an exemplary embodiment the mobile device may use a Junos Pulse SSL VPN to communicate to the system . First an administrator pushes a mobile configuration profile on to a mobile device step . In an exemplary embodiment this push may include a two dimensional bar code that is input into the mobile device via a scanner a camera etc. A user installs the mobile profile on the mobile device step . For example following the configuration push the user may be presented with a screen for the user to confirm or initiate installation. The mobile device may automatically connect to the installed Junos Pulse SSL VPN on demand step . For example the user may initiate a connection via a screen to connect to the Junos Pulse SSL VPN. Alternatively the Junos Pulse SSL VPN may be automatically always on. Finally security and policy management enforcement is performed in the cloud step . For example a screen shot illustrates a user screen when the cloud detects a virus. In lieu of downloading the virus to the mobile device the cloud blocks the content and provides relevant details to the user.

Referring to in various exemplary embodiments screenshots illustrate security and policy enforcement in the cloud on a mobile device. For example the screen shots may be on the mobile device being used with the system . In each of the mobile device with the screen shots is connected to a cloud based security system. In the mobile device communicates with an exemplary site with a Jailbreak application. Jailbreaking leverages known vulnerabilities of a mobile device to unlock the device. At its core jailbreaking a mobile device gives access to its root filesystem allowing modification and installing third party software components. This gives the user more control over the device and may enable features that were previously unavailable. In many cases also jailbreaking voids the device s warranty. Upon initiating a download of the Jailbreak the cloud based security system blocks the content and informs the user that a virus was detected in the web page or file that the user sought to download. For example the screenshot may include information related to the blocked content e.g. location a category of the content e.g. trojan the activity taken e.g. blocked and contact information for the defined policy and IT support.

Referring to in an exemplary embodiment a screen shot illustrates a user interface for a network administrator of a cloud based security system. For example the screenshot may be associated with the system and accessed via a network connection to the system . Through the user interface the network administrator may define policy and security for individual users groups of users the entire population of users etc. as well as manage policy and security. The screen shot of shows an example of a user interface where the network administrator may view e.g. via various filters security and policy events in the cloud based security system over a defined period e.g. the last three hours .

Although the present invention has been illustrated and described herein with reference to preferred embodiments and specific examples thereof it will be readily apparent to those of ordinary skill in the art that other embodiments and examples may perform similar functions and or achieve like results. All such equivalent embodiments and examples are within the spirit and scope of the present invention and are intended to be covered by the following claims.

