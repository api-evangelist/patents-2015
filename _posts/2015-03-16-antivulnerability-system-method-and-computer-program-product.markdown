---

title: Anti-vulnerability system, method, and computer program product
abstract: A system, method, and computer program product are provided for identifying a first and second occurrence in connection with at least one of the networked device. In use, it is possible that it is determined that the at least one actual vulnerability of the at least one networked device is capable of being taken advantage of by the first occurrence identified in connection with the at least one networked device. Further, it is also possible that it is determined that the at least one actual vulnerability of the at least one networked device is not capable of being taken advantage of by the second occurrence identified in connection with the at least one networked device. To this end, the first occurrence and the second occurrence are reported differently.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09225686&OS=09225686&RS=09225686
owner: SecurityProfiling, LLC
number: 09225686
owner_city: Garland
owner_country: US
publication_date: 20150316
---
This application is a continuation of U.S. patent application Ser. No. 14 499 237 filed Sep. 28 2014 which is a continuation in part for the purposes of providing a glossary in accordance with the Glossary Pilot Program of U.S. patent application Ser. No. 14 138 014 filed Dec. 21 2013 which in turn is a continuation of U.S. patent application Ser. No. 10 882 852 filed Jul. 1 2004 which in turn claims priority to U.S. App. No. 60 484 085 filed Jul. 1 2003 which are all incorporated herein by reference in their entirety for all purposes.

The present invention relates to computer systems and more particularly to management of security of computing and network devices that are connected to other such devices.

A system method and computer program product are provided for identifying a first and second occurrence in connection with at least one of the networked device. In use it is possible that it is determined that the at least one actual vulnerability of the at least one networked device is capable of being taken advantage of by the first occurrence identified in connection with the at least one networked device. Further it is also possible that it is determined that the at least one actual vulnerability of the at least one networked device is not capable of being taken advantage of by the second occurrence identified in connection with the at least one networked device. To this end the first occurrence and the second occurrence are reported differently.

data warehouse a component that contains vulnerabilities and updates for devices that operate on at least one network.

NOC server network operations center server that periodically synchronize latest vulnerability and update data with other servers.

SDK software development kit that allows programmers to develop security applications that access data collected in a database.

For the purpose of promoting an understanding of the principles of the present invention reference will now be made to the embodiment illustrated in the drawings and specific language will be used to describe the same. It will nevertheless be understood that no limitation of the scope of the invention is thereby intended any alterations and further modifications of the described or illustrated embodiments and any further applications of the principles of the invention as illustrated therein are contemplated as would normally occur to one skilled in the art to which the invention relates.

Generally the present invention in one embodiment operates in the context of a network as shown in . System includes a vulnerability and remediation database connected by Internet to subnet . In this exemplary embodiment firewall serves as the gateway between Internet and the rest of subnet . Router directs connections between computers and each other and other devices on Internet . Server collects certain information and provides certain data services that will be discussed in further detail herein.

In particular security server includes processor and memory encoded with programming instructions executable by processor to perform several important security related functions. For example security server collects data from devices and including the software installed on those devices their configuration and policy settings and patches that have been installed. Security server also obtains from vulnerability and remediation database a regularly updated list of security vulnerabilities in software for a wide variety of operating systems and even in the operating systems themselves. Security server also downloads a regularly updated list of remediation techniques that can be applied to protect a device from damage due to those vulnerabilities. In one embodiment each vulnerability in remediation database is identified by a vulnerability identifier and the vulnerability identifier can be used to retrieve remediation information from database and from database discussed below in relation to .

In one embodiment computers and each comprise a processor memory and storage . Computer executes a client side program stored in storage loaded into memory and executed by processor that maintains an up to date collection of information regarding the operating system service pack if applicable software and patches installed on computer and the policies and configuration data including configuration files and elements that may be contained in files such as .ini and .conf files and registry information for example and communicates that information on a substantially real time basis to security server . In an alternative embodiment the collection of information is not retained on computer but is only communicated once to security server then is updated in real time as changes to that collection occur.

Computer stores loads and executes a similar software program that communicates configuration information pertaining to computer to security server also substantially in real time. Changes to the configuration registry in computer are monitored and selected changes are communicated to security server so that relevant information is always available. Security server may connect directly to and request software installation status and configuration information from firewall and router for embodiments wherein firewall and router do not have a software program executing on them to communicate this information directly.

This collection of information is made available at security server and combined with the vulnerability and remediation data from source . The advanced functionality of system is thereby enabled as discussed further herein.

Turning to one sees additional details and components of the devices in subnet . Computers and are traditional client or server machines each having a processor memory and storage . Firewall and router also have processors and storage respectively as is known in the art. In this embodiment devices and each execute a client side program that continuously monitors the software installation and configuration status for that device. Changes to that status are communicated in substantially real time to security server which continuously maintains the information in database . Security server connects directly to firewall and router to obtain software installation and configuration status for those devices in the absence of a client side program running thereon.

Processors may each be comprised of one or more components configured as a single unit. Alternatively when of a multi component form processor may each have one or more components located remotely relative to the others. One or more components of processor may be of the electronic variety defining digital circuitry analog circuitry or both. In one embodiment processor are of a conventional integrated circuit microprocessor arrangement such as one or more PENTIUM 4 or XEON processors from INTEL Corporation of 2200 Mission College Boulevard Santa Clara Calif. 95052 USA or ATHLON XP processors from Advanced Micro Devices One AMD Place Sunnyvale Calif. 94088 USA.

Memories may include one or more types of solid state electronic memory magnetic memory or optical memory just to name a few. By way of non limiting example memory may include solid state electronic Random Access Memory RAM Sequentially Accessible Memory SAM such as the First In First Out FIFO variety or the Last In First Out LIFO variety Programmable Read Only Memory PROM Electrically Programmable Read Only Memory EPROM or Electrically Erasable Programmable Read Only Memory EEPROM an optical disc memory such as a DVD or CD ROM a magnetically encoded hard drive floppy disk tape or cartridge media or a combination of any of these memory types. Also memories may be volatile nonvolatile or a hybrid combination of volatile and nonvolatile varieties.

In this exemplary embodiment storage comprises one or more of the memory types just given for memories preferably selected from the non volatile types.

This collection of information is used by system in a wide variety of ways. With reference to assume for example that a connection request arrives at firewall requesting that data be transferred to computer . The payload of request is in this example a probe request for a worm that takes advantage of a particular security vulnerability in a certain computer operating system. Based on characteristics of the connection request firewall sends a query to security server . Query includes information that security server uses to determine 1 the intended destination of connection request and 2 some characterization of the payload of connection request such as a vulnerability identifier. Security server uses this information to determine whether connection request is attempting to take advantage of a particular known vulnerability of destination machine and uses information from database see to determine whether the destination computer has the vulnerable software installed and whether the vulnerability has been patched on computer or whether computer has been configured so as to be invulnerable to a particular attack.

Security server sends result signal back to firewall with an indication of whether the connection request should be granted or rejected. If it is to be granted firewall passes the request to router as request and router relays the request as request to computer as is understood in the art. If on the other hand signal indicates that connection request is to be rejected firewall drops or rejects the connection request as is understood in the art.

Analogous operation can protect computers within subnet from compromised devices within subnet as well. For example illustrates subnet with computer compromised. Under the control of a virus or worm for example computer sends connection attempt to router in an attempt to probe or take advantage of a potential vulnerability in computer . On receiving connection request router sends relevant information about request in a query to security server . Similarly to the operation discussed above in relation to security server determines whether connection request poses any threat and in particular any threat to software on computer . If so security server determines whether the vulnerability has been patched and if not it determines whether computer has been otherwise configured to avoid damage due to that vulnerability. Security server replies with signal to query with that answer. Router uses response to determine whether to allow the connection attempt.

In some embodiments upon a determination by security server that a connection attempt or other attack has occurred against a computer that is vulnerable based on its current software patch policy and configuration status security server selects one or more remediation techniques from database that remediate the particular vulnerability. Based on a prioritization previously selected by an administrator or the system designer the remediation technique s are applied 1 to the machine that was attacked 2 to all devices subject to the same vulnerability based on their real time software patch policy and configuration status or 3 to all devices to which the selected remediation can be applied.

In various embodiments remediation techniques include the closing of open ports on the device installation of a patch that is known to correct the vulnerability changing the device s configuration stopping disabling or removing services setting or modifying policies and the like. Furthermore in various embodiments events and actions are logged preferably in a non volatile medium for later analysis and review by system administrators. In these embodiments the log also stores information describing whether the target device was vulnerable to the attack.

A real time status database according to the present invention has many other applications as well. In some embodiments the database is made available to an administrative console running on security server or other administrative terminal. When a vulnerability is newly discovered in software that exists in subnet administrators can immediately see whether any devices in subnet are vulnerable to it and if so which ones. If a means of remediation of the vulnerability is known the remediation can be selectively applied to only those devices subject to the vulnerability.

In some embodiments the database is integrated into another device such as firewall or router or an individual device on the network. While some of these embodiments might avoid some failures due to network instability they substantially increase the complexity of the device itself. For this reason as well as the complexity of maintaining security database functions when integrated with other functions the network attached device embodiment described above in relation to is one possible embodiment.

In one embodiment a software development kit SDK allows programmers to develop security applications that access the data collected in database . The applications developed with the SDK access information using a defined application programming interface API to retrieve vulnerability remediation and device status information available to the system. The applications then make security related determinations and are enabled to take certain actions based on the available data.

In these exemplary systems configuration information for each device may take the form of initialization files often named .ini or .conf configuration registry such as the Windows Registry on Microsoft WINDOWS operating systems or configuration data held in volatile or non volatile memory. Such configuration information often determines what and how data is accepted from other devices sent to other devices processed stored or otherwise handled and in many cases determines what routines and sub routines are executed in a particular application or operating system.

In one embodiment security information management system is provided wherein a database of potential vulnerabilities is maintained along with data describing remediation techniques patches policy settings and configuration options available to protect against them. At least one vulnerability is associated in the database with multiple available remediation techniques. In one embodiment the system presents a user with the list of remediation techniques available to protect against a known vulnerability accepts the user s selection from the list and executes the selected technique. In other embodiments the system uses a predetermined prioritization schedule to automatically select among the available remediation techniques then automatically executes the selected technique.

One embodiment of the present invention is a database of information about a plurality of devices updated in real time and used by an application to make a security related decision. The database stores data indicating the installed operating system s installed software patches that have been applied system policies that are in place and configuration information for each device. The database answers queries by one or more devices or applications attached by a network to facilitate security related decision making. In one form of this embodiment a firewall or router handles a connection request or maintenance of a connection based on the configuration information stored in the database that relates to one or both of the devices involved in the transmission.

In one embodiment database includes vulnerability and remediation information such that for at least one vulnerability multiple methods of remediating the vulnerability are specified. When the system has occasion to implement or offer remediation of a vulnerability all known alternatives are presented that are relevant to the device or machine s particular configuration or setup. For example when a vulnerability of a device is presented to an administrator the administrator is given a choice among the plurality of remediation options to remediate the vulnerability. In some embodiments the administrator can select a preferred type of remediation that will be applied if available and a fallback type. For example an administrator may select application of a policy setting over installation of a software patch so that the risk of disruption of critical business systems is minimized.

In other embodiments an administrator or other user is presented with a set of user interface elements that identify multiple options for remediating and identifying the vulnerability. The administrator or user selects the method to be used and that remediation is applied to the vulnerable device s .

In use a database maintains security status information on each device in a network based on whether the device s operating system software and patches are installed and configured to meet a baseline level of security. A network gateway proxy blocks connection attempts from devices for which the database indicates a substandard security status but allows connections from other devices to pass normally. The database is preferably updated on a substantially real time basis by client side software run by each device in the network.

Another form of the present embodiment includes a connection proxy that filters connections originating within the network. In particular one embodiment employs a proxy that denies connection attempts originating with devices in the network when the originating device has a status reflected in the database that fails to meet predetermined security characteristics in terms of installed operating system and software patch levels and system policy and configuration registry information.

In this embodiment router serves as a connection proxy for devices and subnet as will be understood by those skilled in the art. In addition to basic proxy functionality however router accesses database on security server via the SDK at each connection attempt. If for example device attempts to connect to any device where the connection must pass through the proxy server router in this example such as a device on Internet router checks the security status of device in database using the real time status therein to determine whether device complies with one or more predetermined security policies. If it does router allows the connection to be made. If it does not router prevents the connection preferably redirecting the connection to a diagnostic page that explains why the connection is not being made.

This system is illustrated by method in . Method begins with start point . The proxy router in the above example receives a connection request at block then retrieves the security status of the source device at block . This preferably uses the real time updated status information from database see at decision block . If the security status indicates that the source device complies with the predetermined security policy the proxy allows the connection at block . If not the proxy refuses the connection at block and redirects the connection to an explanation message such as a locally generated web page or other message source at block . In either case method ends at end point .

In possible embodiments the determination and decision at block apply a comprehensive minimum policy set that protects other devices in subnet see from viruses trojans worms and other malware that might be inadvertently and or carelessly acquired due to the requested connection.

In another embodiment a security information management system is provided wherein client side devices preferably collect and monitor information describing the operating system software and patches installed on the device s as well as configuration thereof. A database of this information is maintained along with data describing vulnerabilities of available software and associated remediation techniques available for it. The system exposes an API to support security related decisions by other applications. For example an intrusion detection system IDS accesses the database to determine whether an actual threat exists and should be or has been blocked.

In another form of this embodiment client software runs on each monitored device and reports configuration information to the database so that the database has substantially real time current information.

The present embodiment of the present invention advantageously acquires the real time status information from each client using client side software. In this manner a resource burden of monitoring is spread among the devices being monitored and uses far fewer network resources in the process.

In these exemplary systems configuration information for each device may take the form of initialization files often named .ini or .conf configuration registry such as the Windows Registry on Microsoft Windows operating systems or configuration data held in volatile or non volatile memory. Such configuration information often determines what and how data is accepted from other devices sent to other devices processed stored or otherwise handled and in many cases determines what routines and sub routines are executed in a particular application or operating system.

In one embodiment a system maintains a database of vulnerabilities and associated remediation techniques. The remediation techniques include software patches policy settings or changes and registry settings or changes. This multi faceted provides novel flexibility in management of security issues and convenience for security administrators in both determining available options and selecting remediation steps for vulnerable systems.

In another embodiment of the present invention patches policy changes software updates and configuration changes are rolled out to devices on a network using a staged roll out technique. In this technique the change is applied to a selected device or set of devices identified by an administrator. After a predetermined amount of time passes unless the administrator has canceled the roll out the change is applied to an additional group of devices on the network. Third and fourth tier groups may also be identified by the administrator where implementation of the remediation or upgrade is automatically effected in subsequent stages a predetermined amount of time after the preceding stage roll out. Thus if no failures are noted following a more limited roll out on a first set of devices then the remediation or upgrade is automatically applied to other devices. If on the other hand an error or failure is observed the subsequent roll out can be canceled so that further failures and problems are avoided.

In one possible embodiment provided is a platform and underlying back end that includes a logic engine and vulnerability data warehouse. It may easily integrate with and enable network security products such as IDS scanners or firewalls to intelligently reference and share the same vulnerability data set and independently provide complete vulnerability remediation patching functionalities such as that provided by the patch management and vulnerability remediation application. Thereby the technology may improve system accuracy and efficiencies minimize false positives and false negatives and provide policy compliance and enforcement capabilities.

The latest network compromises are combining qualities of viruses worms and denial of service attacks into new blended attacks. Additionally blended attacks may now utilize metamorphic or polymorphic abilities to change their signatures to avoid detection. To mitigate these new risks organizations are now deploying a multi tiered network defense strategy comprised of a variety of network security components layered at the perimeter and to internal network machines and devices. The security components are managed separately and possibly their data is ported into a Security Information Management System SIMS correlation engine.

However network security components and correlation engines rely on signatures or anomalies producing an ever increasing quantity of data including false positive benign and erroneous events. They also lack the intelligence to identify reference or remediate the vulnerabilities targeted by the attack. Furthermore the time and cost to acquire manage and maintain these numerous network security components is overwhelming the end user. Therefore more sophisticated technology is provided to resolve these performance and management issues.

In one embodiment technology may be provided that addresses these requirements by making each security component smarter and provides managers with remote remediation options. Thereby improving system performance and streamlining management processes.

In one embodiment an intelligent integration platform and SDK are provided to meet the above requirements.

In one embodiment security products are enhanced and system intelligence may be provided. The same vulnerability data warehouse information is shared with the products so that more intelligent actions may then be taken to mitigate complex threats.

One embodiment cross references the threat s identifier with the target s configuration. The threat s CVE ID or other identifier and the destination IP address are fed into the logic engine where it cross references the threat with the machine s existing OS application and patch configuration profile. An answer is returned accurately indicating if the machine is vulnerable.

In one embodiment network vulnerabilities are identified. The platform may independently identify which network machines and devices have vulnerabilities by querying a client agent or a device s OS or firmware directly.

One embodiment proactively remediates the vulnerability. Once a vulnerability is identified a remediation function may be provided that may remotely and automatically deploy the appropriate update to each machine or device install it and document it with change tracking and audit trail reports.

Examples of Anti Vulnerability applications that may be integrated into network security products for enterprise and small office home office SOHO networks when integrated with one embodiment via the SDK will be described.

In one embodiment update or patch deployment are provided which remotely remediate network vulnerabilities and provide policy compliance and enforcement capabilities. And for the consumer market it may additionally support non security related updates such as application version performance and bug fix upgrades.

In one embodiment an IDS may be provided that accurately determines if the targeted machine is actually vulnerable to an attack virtually eliminates false positives and false negatives and adds vulnerability remediation and policy compliance and enforcement functionalities.

In one embodiment a scanner may be provided that virtually eliminates false positive and false negatives and adds vulnerability remediation and policy compliance and enforcement functionalities.

In one embodiment a firewall may be provided that virtually eliminates false positive and false negatives preventing the security system from denying valid traffic to the organization self inflicted denial of service attacks and adds vulnerability remediation and policy compliance and enforcement functionalities.

In one embodiment multiple products are provided including an IDS scanner and firewall. Each may communicate with the same back end data warehouse sharing the same vulnerability information attaining intelligence and more accurate information about the target and its vulnerabilities thereby more effectively mitigating complex threats.

In one embodiment change management may be provided which may automatically create a change request in the system specifying what update patch is applicable to what system or groups of systems by vulnerability. After approval of the request they may automatically deploy and install the update patch. Finally they may also verify correct operation after installation and automatically provide all necessary documentation and logging required.

Lastly the platform may also provide product upgrades and signature updates to each of these various security products.

The platform is comprised of the following software components SDK client agent logic engine and data warehouse stored on a dedicated on site server. Network operations center NOC Servers periodically synchronize the customers servers with the latest vulnerability and update data. See .

The same client agent and on site server support all security applications that are integrated onto the platform thereby providing the added anti vulnerability functionalities presented in the previous section.

There are two system requirements TCP IP connectivity and supported network machines and devices. In one embodiment platforms supported are set forth below in Table 1.

Platform support is scalable to any network size or architecture consumer small office home office SOHO enterprise and distributed networks.

In one embodiment technology may be provided that includes a backend platform that includes a logic engine and vulnerability data warehouse. It may easily integrate with and enable network security products such as IDS scanners or firewalls to intelligently reference and share the same vulnerability data set and independently provide complete vulnerability remediation patching functionalities such as that provided by the patch management and vulnerability remediation application update application and the intelligent IDS. Thereby the technology may improve system accuracy and efficiencies minimize false positives and false negatives and provide policy compliance and enforcement capabilities.

For example networks are probed at an ever increasing frequency for vulnerabilities which may be exploited with compromise attacks. To protect the network administrators have traditionally set up perimeter defense strategies.

These strategies generally call for network managers to lock down core servers and monitor scan filter all incoming and outgoing traffic at the network perimeter with several network security products such as antivirus and firewalls to identify and attempt to neutralize hackers and malicious code. In the past these strategies worked well however new threats are becoming more complex.

The latest malicious code may combine qualities of viruses worms and direct compromise attacks into new blended attacks. Virus payloads are becoming more complex and by using metamorphic or polymorphic abilities viruses are able to change their signatures to avoid the fingerprint type filtering that most applications employ.

To mitigate these new risks organizations deploy a multi tiered network defense strategy comprised of a variety of additional network security products layered at the perimeter and to internal network machines and devices. Such network security products include antivirus firewall scanners and network and host based intrusion detection systems.

Each of these systems is based on specific signatures rules or anomalies of each attack and their variants and do not identify and remediate the specific network vulnerabilities the attack is targeting. So each attack and its variants must be identified and analyzed a signature prepared then finally deployed to each point product on each customer s network. This process is uncoordinated among multiple disparate systems and creates an ever increasing number of signatures producing more and more attack alerts requiring immediate attention many of which are erroneous. The security components are managed separately and possibly their data is ported into a security information management system SIMS correlation engine.

Additionally to proactively remediate the vulnerabilities the malicious code is targeting administrators quickly and diligently update or patch each network machine and device which is a time consuming and costly process. Further compounding the burden on administrators best practice and government compliance directives may require higher standards of network security and integrity to protect consumer privacy and they are documented with change tracking and audit trail reports.

Therefore it is increasingly difficult and costly to effectively mitigate new threats and manage numerous systems particularly in an environment of rising security standards and policy compliance requirements.

Thus the multi tiered network defense strategy is falling short primarily for four reasons. First there is an inability of multi tiered network security products to communicate and share information necessary to mitigate blended threats and minimize false positives and false negatives. The vulnerabilities targeted by malicious code are not accurately identified nor proactively remediated. The associated excessive aggregate cost of ownership of multiple systems. The excessive administrative burden and cost of managing and maintaining multiple systems.

Hence there is a need to integrate systems share information intelligently to better defend against blended threats reduce management and cost requirements and automate vulnerability identification and remediation functionalities as presented in the high level requirements.

In one embodiment technology is provided to meet the following market requirements integrate network security products to share information provide system intelligence and remediate network vulnerabilities.

In one embodiment technology may integrate with and enable network security products to intelligently reference and share information from the same vulnerability data set provide vulnerability identification and remediation functionalities and efficiently meet policy compliance and enforcement requirements.

In one embodiment the platform is a complimentary network security technology. When integrated into the defense strategy it adds intelligence that more accurately and efficiently mitigates blended threats and offloads the time consuming functions that burden network administrators.

In one embodiment the platform enables network security products to share information via its proprietary logic engine to automatically cross reference the threat identifier with the targeted machine s configuration to determine if it is actually vulnerable to that threat. Previously separate and uncoordinated processes are now more intelligent and automated resulting in improved system accuracy and efficiency. Therefore the need to layer more and more point products and add a SIMS is reduced in turn decreasing the amount of data particularly erroneous data to manage. Subsequently the costs to acquire operate and manage the additional multiple point products and the need to implement a SIMS are also reduced.

In one embodiment the platform may also remotely and proactively remediate vulnerabilities by first determining which updates are needed and compatible with each machine or device taking into account the OS applications or firmware installed. Then the updates may be deployed installed and validated. Thereby policy compliance is effectively and efficiently enforced and documented.

In one embodiment the present technology fulfills market requirements noted in the previous section. For example it may integrate network security products and provides system intelligence. The same vulnerability data warehouse information is shared with all products so that more intelligent actions may then be taken to mitigate complex threats.

Still yet it may cross reference the threat s identifier with the target s configuration. The threat s CVE ID or other identifier and the destination IP address are fed into the logic engine where it cross references the threat with the machine s existing OS application and patch configuration profile. An answer is returned accurately indicating if the machine is vulnerable. Thereby minimizes erroneous benign and false positive data produced by each security product.

One embodiment identifies network vulnerabilities. The platform may independently identify which network machines and devices have vulnerabilities by querying a client agent or a device s OS or firmware directly.

One embodiment proactively remediates the vulnerability. Once a vulnerability is identified a remediation function may be provided that may remotely and automatically deploy the appropriate update to each machine or device install it and document it with change tracking and audit trail reports.

Various possible benefits include blended attacks being more effectively mitigated and the overwhelming management and maintenance burden on administrators to purchase operate and maintain multiple network security products being reduced while increasing productivity reducing costs and more effectively and efficiently meeting policy compliance and enforcement requirements.

Examples of applications that may be made available for enterprise and small office home office SOHO networks when integrated with Anti Vulnerability technology via the SDK will now be set forth.

In one embodiment update or patch deployment is provided. In one embodiment a patch management and vulnerability remediation solution is provided. The technology enables products to add accurate vulnerability identification remediation verification and policy compliance functions. With such technology products may gain intelligence accuracy and efficiency eliminate false positives and false negatives and ensure policy compliance thereby saving the organization time and money. Such functionalities and benefits are available for both the enterprise and SOHO networks. And for the consumer market it may additionally support non security related updates such as application version performance and bug fix updates for widely distributed programs which may optimize system performance and enhance the consumer experience.

In one embodiment an IDS is provided. IDS products attempt to identify malicious code by signatures at both the network and host client level. While they may be able to identify malicious code by CVE ID or other identifier and targeted machines by IP address but they generally do not have the intelligence to determine if the any of the machines on the network are susceptible to that attack or with finer granularity if any machine has a specific vulnerability to that specific attack or if the targeted vulnerability has already been patched. For example if the malicious code has been written as a Windows based attack targeting a Windows vulnerability is the Destination IP actually running Windows or a UNIX variant And if Windows is it vulnerable to the attack or has it already been patched IDS do not have the intelligence to answer these questions and incident alerts are generated indiscriminately. Lastly even if the targeted machine is vulnerable it remains unremediated an IDS does not have the capability to remediate it.

With the present embodiment a product architect can integrate functionalities listed in the previous section to enable the IDS to access the Anti Vulnerability logic engine and platform. It may then have the intelligence to determine if any machine on the network is susceptible to the attack remediate the vulnerability mitigate the attack and verify policy compliance. Now if no machines were susceptible to the attack it is identified as an event but not an incident no further data or alert is generated and a management response is not required. Integrated products may gain intelligence accuracy and efficiency eliminate false positives and false negatives and ensure policy compliance thereby saving the organization time and money. Such functionalities and benefits are available for both the enterprise and SOHO networks.

In one embodiment scanners may be provided. Vulnerability scanners assess each machine on the network for vulnerabilities and create lists of potential vulnerabilities to the system managers. The lists commonly contain many false positives and false negatives burdening the system and managers with inaccuracies.

With the present embodiment a product architect can integrate functionalities listed in the previous section to enable the scanner to access the logic engine and platform and then have the intelligence to determine if the machine has actual vulnerabilities remediate them and verify policy compliance. Integrated products may gain intelligence accuracy and efficiency eliminated false positives and false negatives and ensured policy compliance thereby saving the organization time and money.

In one embodiment a firewall may be provided. Smart firewalls are based in part on signatures and other similar functionalities as the IDS products described above.

With the present embodiment the firewall can determine whether an attack is valid or a false positive thereby preventing the security system from denying valid traffic to the organization self inflicted DoS attacks. Such functionalities and benefits may be available for both the enterprise and SOHO networks.

In one embodiment vulnerability management may be provided. Vulnerability management products enable managers to set policy and identify potential network vulnerabilities. They typically do not accurately identify each vulnerability on each network machine and device nor remediate each vulnerability meeting policy compliance enforcement requirements.

The present embodiment offers similar functionalities and benefits as the patch deployment products described above. In short it enables products to add accurate vulnerability identification remediation verification and policy compliance and enforcement. Such functionalities and benefits are available for both the enterprise and SOHO networks.

To this end multiple products may be provided IDS scanner firewall and vulnerability management. Each product functions as the individual products noted above. Each may be deployed and operated on the network in a multi tiered network defense strategy. They may be disparate system and their signatures and update deployment schedules may vary. Therefore the probability of mitigating a new and complex threat decreases while management requirements and cost increases.

In one embodiment they each may communicate with the same backend data warehouse sharing the same vulnerability information attaining intelligence and more accurate information about the target and its vulnerabilities thereby more effectively mitigating complex threats. It may also enable the products to add accurate vulnerability identification remediation verification and policy compliance and enforcement functionalities.

In one embodiment change management CM may be provided. Existing CM applications control the documentation and logging of change throughout the enterprise. These applications ensure that an organization maintains consistent records of what happened and when. Currently administrators must independently recognize that a security patch update must be deployed to a computer or group of computers.

The user enters the request in the system through the pipelined process of change management the request would be approved the patch update would be manually installed by a user then documented in the change management software that the process has been completed. While CM software assists in documentation very little if any assistance may be provided to identify the patches updates needed nor verifying correct function after the update patch is installed.

With the current possible embodiment change management integration may greatly streamline this process further reducing total cost of ownership ease of use and a higher standard of documentation. The products may then automatically create a change request in the system specifying what update patch is applicable to what system or groups of systems by vulnerability. After approval of the request they may automatically deploy and install the update patch. Finally they may also verify correct operation after installation and automatically provide all necessary documentation and logging required.

Lastly one possible embodiment may also provide product upgrades and signature updates to each of these various security products including all of the technology benefits such as ensuring compliance of signature versions logging reporting and verification of installation.

Thus one possible embodiment includes an intelligent platform that may supplement any existing defense strategy. Once integrated with the technology security products may share the same vulnerability data set to improve automation and accuracy increasing efficiencies and minimizing false positives and false negatives. It also enables remote identification management and remediation of network vulnerabilities and provides update deployment validation and reporting capabilities. Thereby the technology improves network security and integrity mitigation of blended threats while increasing productivity reducing total cost ownership and more effectively and efficiently attaining policy compliance and enforcement requirements.

One embodiment provides IDS intelligence accuracy and remote patching functions IDS data output integrated with the aforementioned platform via the SDK. The platform s underlying backend including a logic engine and vulnerability data warehouse provides the added functions and performance.

Conventional IDS produce an ever increasing quantity of alert data including erroneous and false positive data. They also lack the intelligence to identify or remediate the vulnerabilities targeted by the attack. Furthermore the cost of the acquiring managing and maintaining conventional IDS is overwhelming the end user.

Therefore a more sophisticated intelligent technology is provided to resolve these issues. In one embodiment an intelligent IDS is provided to meet market requirements. The alert data output from a distribution of Snort is integrated with the platform via the SDK which may add the following functions.

In one embodiment it cross references the threat s identifier with the target s configuration. The CVE ID or other identifier and the Destination IP address are fed into the logic engine where it cross references the threat with the machine s configuration profile.

In one embodiment it virtually eliminates false positives and false negatives. The backend accurately determines in real time if the targeted machine is susceptible to the attack. And if the machine is not susceptible it is filtered and reported back as an event and not an incident. No further data or alert is generated and a management response is not required.

In one embodiment it remotely remediates the vulnerability. When a machine is identified as vulnerable to an attack an incident a remediation function may be provided to the administrator to remotely deploy the appropriate update to the machine or device install it verifies the files and hashes and document it with change tracking and audit trail reports.

To this end erroneous benign and false positive data is filtered out and incidents may be remotely remediated. Therefore complex threats are more effectively and efficiently mitigated. Correspondingly the management and maintenance burden on administrators is reduced saving time and effort.

In one embodiment the intelligent patch management and vulnerability remediation application automatically updates computer OS and application vulnerabilities before they can be exploited by hackers and viruses.

Networks are probed at an ever increasing frequency for vulnerabilities which may be exploited with directed compromise attacks. To protect the network administrators must diligently update or patch server and workstation vulnerabilities which is a time consuming and costly process. Further compounding the burden on administrators best practice and government compliance directives now require higher standards of network security to protect consumer privacy and proprietary data which must be documented with change tracking and audit trail reports. Therefore fully automated technology is provided to resolve these issues.

In one embodiment a intelligent application called SysUpdate the first technology to fully automate the updating and reporting processes as described below.

In terms of function one possible embodiment automatically researches updates. In collaboration with software development companies it receives updates and their respective compatibility and installation guidelines which are thoroughly reviewed and tested in a lab for system compatibility and stability. One embodiment automatically and securely downloads and archives all updates. Once the updates and guidelines are thoroughly reviewed and tested they are automatically downloaded to each customer s on site server verified with MD5 hashes and archived in a self populating patch repository database.

One possible embodiment automatically determines the update and dependency requirements for all computers on a network based on their individual operating systems applications and previously installed updates. The logic engine automatically matches the tested updates and their guidelines across each computer s configuration profile.

One possible embodiment remotely securely and automatically deploys updates to each computer and device. Updates may be tested on a test group and then queued for release to each computer on the network consistently in accordance with the policy determined by the network administrator.

One possible embodiment automatically verifies the updates are installed and running correctly. Each computer s client agent installs the updates and verifies the files and hashes.

One possible embodiment automatically generates change tracking and audit trail reports. Change tracking and audit trail reports may be selected and printed from the management console reporting modules. Additionally application license audit reports may be generated which lists software installed on each machine by license key.

In one embodiment a secure computer log management application is provided with fully automated archiving querying and reporting options.

Best practice directives and government compliancy regulations now require administrators to archive log events over an extended period of time and extensively document log and audit trail reports. With existing tools these are time consuming processes. Furthermore existing tools transfer logs in clear text and are subject to malicious manipulation and logs may be lost since few utilize guaranteed delivery protocols. Therefore the integrity and security of the log data is not assured. In the event of an internal or external compromise logs may be deleted manipulated or the network flooded with decoy log data.

The present possible embodiment automatically and continuously transfers logs from each computer into a self configuring self populating maintenance free database where they may be archived for years on end. The transfer process utilizes AES encryption for authentication between the client and server and a guarantee delivery protocol ensuring no data is compromised or lost. Flexible cross correlation queries may be run from a single remote viewer console and the data is then automatically formatted into reports.

In one embodiment cross correlation query type descriptions are provided. Such embodiment may provide the following three flexible cross correlation queries in Table 5 which provide increasing detail and breadth of filtering sorting capabilities respectively.

In one embodiment automated reports may be provided. Query data is automatically formatted into professional reports Also a separate reporting interface is available to generate general machine and user statistics. The present embodiment quickly and easily fulfills best practice and government compliance requirements for log event archiving and reporting.

As shown in the server component automatically configures the application and the database and communicates with the client agents. In client agents are deployed which then identifies manages and continuously transfers all logs to the server. In all client log data may be automatically archived the self populating database for years on end. In from the centralized viewer general specific or advanced cross correlation queries may be run. See Table 7. Query and statistics data is automatically formatted into professional reports to easily document audit and compliance requirements.

One possible embodiment provides best practice security policy templates to proactively and remotely manage and enforce enterprise security compliance policies.

Best practice and government compliance directives require higher standards of network security to protect consumer privacy and proprietary data which must be consistently enforced and documented with change tracking and audit trail reports for compliance verification. Therefore a fully automated technology is provided to resolve these issues.

One embodiment offers an intelligent application to manage and enforce security policies the first technology to fully automate the policy configuration enforcement and reporting processes as described below.

In one embodiment centralized remote management is provided. The policy compliance and enforcement module is managed via the centralized management console in MMC format and automates the deployment assessment and enforcement of the policy chosen.

One embodiment provides standardized policies selected from many standardized policy templates recommended by NSA SANS US Navy and ISO 17799 or custom policy options to formulate policies that meet the individual needs of any organization.

One possible embodiment automatically determines out of compliance parameters for all computers and devices on a network. Based on each client s individual policy parameter settings and configuration profile the system s logic engine automatically reports back each client s out of compliance parameters.

In one embodiment it remotely securely and automatically enforces policy to each computer or device. Policy changes may be automatically enforced to each computer or device individually or by group consistently in accordance with the policy selected by the network administrator. Policy configuration profiles are transmitted between client agent and server in an AES encrypted format for security and privacy. Policy options may be rolled back with one click.

Automatically generates change tracking and audit trail reports. Change tracking and audit trail reports may be selected and printed from the Management Console s Reporting Center. Table 8 sets forth some possible features.

As shown in the on site server periodically initiates communication with the off site NOC servers. In templates rules and updates are pulled from the NOC servers to the on site server. In a centralized management console offers flexible security policy templates options and comprehensive reporting capabilities. In agents are automatically deployed to each client accurately identifying which policy parameters OS apps and updates are applied or installed. In a logic engine automatically determines which clients are out of compliance. In appropriate policy changes are automatically enforced on each client.

In one embodiment an intelligent IPS may be provided that provides intelligence accuracy real time prevention and remote patching functions. In one embodiment it accurately identifies and prevents malicious code from reaching their destination at the in line IPS Sensor. Thereafter a security officer may remotely patch the targeted vulnerability.

Conventional IDS IPS produce an ever increasing quantity of alert data including erroneous and false positive data. They also lack the intelligence to identify or remediate the vulnerabilities targeted by the attack. Furthermore the cost of the acquiring managing and maintaining conventional IPS is overwhelming the end user.

Therefore a more sophisticated intelligent technology is provided to resolve these issues by offering an intelligent IPS to meet market requirements. The alert data output from a standard distribution of Snort is integrated with the platform via the SDK which accurately identifies attacks and the attack is terminated at the in line sensor as described in the following functions.

One embodiment cross references the threat s identifier with the target s configuration. The in line Sensor monitors and processes traffic and sends alert data to the on site server where its logic engine queries the backend in real time to determine if the destination IP is vulnerable to the attack.

One possible embodiment provides enhanced flex response. If the destination IP is vulnerable to the attack the in line Sensor is commanded to immediately drop the exploit packets preventing the attack. Further it remotely remediates the vulnerability. When a machine is identified as vulnerable to an attack an incident a remediation function is also provided to the administrator to remotely deploy the appropriate update to the machine or device install it verifies the files and hashes and documents it with change tracking and audit trail reports.

In one embodiment attacks are accurately identified and mitigated before they reach their targets and targeted vulnerabilities may be remotely remediated. Therefore complex threats are more effectively and efficiently mitigated. Correspondingly the management and maintenance burden on administrators is reduced saving time and effort.

As shown in the on site server periodically initiates communication with the NOC servers. In updates are pulled from the NOC servers to the on site server.

In an IPS in line sensor monitors and processes network traffic and sends real time alert data to the on site server where it cross references the data with the backend. In if the destination IP is vulnerable to the attack the in line Sensor is commanded in real time to drop the malicious packets. As shown in agents are deployed to each client accurately identifying which OS apps and updates are installed. In the logic engine automatically determines which updates are needed to remediate the targeted machine and may be remotely deployed from the IPS console. In appropriate updates are remotely deployed installed and validated on each client.

In one embodiment an anti vulnerability SDK is provided. The SDK was designed to be a simple integration pathway to the Anti Vulnerability platform backend. The SDK is documented and deliverable. The SDK is compatible with many different programming languages such as C C VB Java and others.

The technology is sophisticated yet all of the details of managing the communications are implemented in the library requiring the developer to only learn a simple function calls as detailed hereinafter. A product architect chooses the functionality desired inserts the provided functionality SDK code into the product code. The SDK code may then query via the logic engine the data warehouse and in turn may return an answer to the point product. The architect can then show the results in any format desired in the product s interface. Full vulnerability remediation and policy compliance and enforcement functionalities may be integrated as well.

Hence the SDK serves as the architect s tool belt or building blocks needed to quickly and transparently access the Anti Vulnerability backend and seamlessly integrate the desired functionality into the product without changing or complicating the end user experience.

Furthermore the SDK enables system architects to use the Anti Vulnerability platform to integrate multiple security products and functionalities. Products may then share the same vulnerability data set improve system automation and accuracy increasing efficiencies and minimizing false positives and false negatives and coordinate policy compliance and enforcement functionalities.

Anti Vulnerability functions that are accessible via the SDK. The functions are presented in groups as follows in Table 10.

These functions are provided in a separate source tree policy tree for the Policy Compliance and Enforcement module. Function include Password system access policies log configurations audit settings user group privilege rights general service settings service permissions registry values registry permissions file permissions. It can also perform deltas on and get information about groups users services and all the Run registry keys.

All publications prior applications and other documents cited herein are hereby incorporated by reference in their entirety as if each had been individually incorporated by reference and fully set forth.

While the invention has been illustrated and described in detail in the drawings and foregoing description the same is to be considered as illustrative and not restrictive in character it being understood that only the preferred embodiments have been shown and described and that all changes and modifications that would occur to one skilled in the relevant art are desired to be protected.

