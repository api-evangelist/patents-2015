---

title: Power efficient storage management
abstract: One or more systems and/or techniques are provided for managing a partially encrypted file system, for storage hardware virtualization, and/or for storage management. In example, data may be stored in a partially encrypted file system, where sensitive data is encrypted for security and non-sensitive data is unencrypted, which may mitigate energy usage otherwise used for encrypting non-sensitive data, thus improving battery life. In an example, a storage device may be exposed to applications as a plurality of isolated storage structures where an application is provided data access to an isolated storage structure assigned to the application but not to isolated storage structures assigned to other applications, which may provide hardware level isolation with improved energy efficiency. In an example, a storage management component, configured to provide isolation and encryption, may be integrated into a computing device as an application specific integrated circuit (ASIC) or a system on a chip (SoC).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09596235&OS=09596235&RS=09596235
owner: Microsoft Technology Licensing, LLC
number: 09596235
owner_city: Redmond
owner_country: US
publication_date: 20150330
---
Many computing devices such as desktops laptops smart phones and tablets are developed around conserving power consumption and or extending battery life. In an example a mobile device may be transitioned into a connected standby state. While in the connected standby state a screen of the mobile device is powered off along with low priority functionality e.g. a videogame a calculator app and a camera app may be placed in a sleep state . Other higher priority functionality may remain operable e.g. an incoming message notification service may be placed in a low power operational state in order to detect incoming messages so that the mobile device may awaken into an up to date state with regard to new messages and or other data .

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description. This summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Among other things one or more systems and or techniques for managing a partially encrypted file system for storage hardware virtualization and or for storage management are provided herein. In an example of managing a partially encrypted file system data that is to be stored by an application to a partially encrypted file system may be identified. A data sensitivity for the data may be determined. Responsive to the data sensitivity exceeding an encryption threshold the data may be stored as encrypted data within the partially encrypted file system. Responsive to the data sensitivity not exceeding the encryption threshold the data may be stored as unencrypted data within the partially encrypted file system.

In an example of storage hardware virtualization a storage virtualization component is configured to identify a first application that is to be hosted by a computing device. The storage virtualization component is configured to identify a second application that is to be hosted by the computing device. The storage virtualization component is configured to expose a first portion of a storage device to the first application as a first isolated storage structure for data storage by the first application based upon a first energy constraint for the first application. The storage virtualization component is configured to expose a second portion of the storage device to the second application as a second isolated storage structure for data storage by the second application based upon a second energy constraint for the second application.

In an example of storage management a storage management component comprises an isolation component. The isolation component is configured to provide a first application hosted on a computing device with access to a first portion of a storage device but not a second portion of the storage device. The isolation component is configured to provide a second application hosted on the computing device with access to the second portion of the storage device but not the first portion of the storage device.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are generally used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth to provide an understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are illustrated in block diagram form in order to facilitate describing the claimed subject matter.

One or more systems and or techniques for managing a partially encrypted file system for storage hardware virtualization and or for storage management are provided herein. Many users may prefer computing devices such as a mobile device e.g. a smart phone a tablet etc. with relatively long lasting battery life. Some computing devices may provide a low power state to conserve power consumption and improve battery life. While in the low power state a computing device may allow certain applications and or functionality to execute e.g. messaging functionality may be allowed to check for new incoming messages so that new messages may be available when the computing device is brought back into a normal operating state . Unfortunately storage functionality performed while in the low power state and or during the normal operating state may consume a relatively large amount of energy because of encryption used for security and or because of overhead resulting from applications that execute in a managed programming language environment that provides application isolation between applications. For example an encryption hardware subsystem may be unable to match the throughput of a storage device such as a nonvolatile memory card and thus encryption may be performed on a general central processing unit CPU that may increase energy usage used to perform encryption. The management of applications executing in the managed programming language environment e.g. executing by a common language runtime CLR may result in additional computational overhead and thus energy usage.

As provided herein a partially encrypted file system may be used to store sensitive data as encrypted data and to storage non sensitive data as unencrypted data which may mitigate energy utilization that may otherwise occur should both sensitive data and non sensitive data be encrypted. Thus sensitive data e.g. locational data of a user social network data of the user etc. may remain secure while improving energy efficiency of the computing device by not using computational resources to encrypt non sensitive data. As provided herein storage hardware virtualization may be used to expose a single storage device such as the nonvolatile memory card as a plurality of isolated storage structures to applications in order to provide data isolation between applications which may mitigate energy utilization by eliminating or reducing reliance on a CLR for managing the applications e.g. where the CLR may be computationally intensive and thus consume significant resources energy etc. . As provided herein a storage management component may comprise an isolation component that may provide isolation between applications at a hardware level and or an encryption component to provide hardware encryption that may match the throughput of a storage device which may mitigate energy utilization by eliminating or reducing reliance on a CLR for isolation and or a general CPU for encryption.

An embodiment of managing a partially encrypted file system is illustrated by an exemplary method of . At the method starts. A computing device such as a mobile device e.g. a smart phone a tablet etc. may host one or more applications such as a first application and a second application. The one or more applications may be allowed to perform certain functionality while the computing device is in a low power state such as a connected standby state or a display off state. Such functionality may involve storing data to a file system of the mobile device. As provided herein a partially encrypted file system may be managed for the computing device so that data may be stored for applications as encrypted data or unencrypted data while the computing device is in a normal operational state and or while the computing device is in the low power state which may mitigate energy utilization that may otherwise occur should all data be encrypted.

At data that is to be stored by the first application to the partially encrypted file system may be identified e.g. a social network application may be storing physical user location data within a social network file . At a data sensitivity for the data may be determined. For example a data sensitivity specification associated with the first application e.g. an application manifest specified by an app developer a policy enforced by a platform such as an enterprise platform for an enterprise social network etc. may be evaluated to determine the data sensitivity e.g. a value on a scale from least sensitive to most sensitive a designation as either sensitive or non sensitive etc. for the data.

At responsive to the data sensitivity exceeding an encryption threshold e.g. the data sensitivity may indicate that the physical user location data is sensitive and thus the data sensitivity may exceed the encryption threshold the data may be stored as encrypted data within the partially encrypted file system. At responsive to the data sensitivity not exceeding the encryption threshold e.g. the data sensitivity may indicate that the physical user location data is not sensitive and thus the data sensitivity may not exceed the encryption threshold the data may be stored as unencrypted data within the partially encrypted file system. In an example the data may be stored while the computing device is in the normal operation state. In an example the data may be stored while the computing device is in the low power state e.g. the connected standby state or the display off state .

In an example second data corresponding to a second portion of the social network file may be identified e.g. the social network application may be storing an application binary update within the social network file . The data sensitivity specification may be evaluated to determine a second data sensitivity for the second data. Responsive to the second data sensitivity exceeding the encryption threshold e.g. the second data sensitivity may indicate that the application binary update is sensitive and thus the second data sensitivity may exceed the encryption threshold the second data may be stored as encrypted second data within the partially encrypted file system. Responsive to the second data sensitivity not exceeding the encryption threshold e.g. the second data sensitivity may indicate that the application binary update is not sensitive and thus the second data sensitivity may not exceed the encryption threshold the second data may be stored as unencrypted second data within the partially encrypted file system. In an example the physical user location data of the social network file may be stored as the encrypted data and the application binary update of the social network file may be stored as the unencrypted second data and thus one portion of a file may be stored as encrypted data while another portion of the file may be stored as unencrypted data. In an example a portion of data of a second application may be stored as encrypted data within the partially encrypted file system while another portion of the data of the second application may be stored as unencrypted data within the partially encrypted file system e.g. a contact list of an email application may be encrypted while email application binaries of the email application may be unencrypted . Accordingly certain portions of data for different applications may be stored as encrypted data while other portions of the data for the different applications may be stored as unencrypted data.

In an example a request for encrypted data may be received from a requestor e.g. the social network application may request encrypted user contact data stored on the partially encrypted file system . The requestor may have permission to access the encrypted data. An unencrypted version of the encrypted data may be provided to the requestor. The unencrypted version of the encrypted data may be actively tracked to enforce a safety policy specifying that no copies of the unencrypted version of the encrypted data are to remain on persistent storage after use by the requestor. For example the unencrypted version of the encrypted data may be deleted or may be encrypted again for storage within the partially encrypted file system after the social network application is finished with the unencrypted version of the encrypted data. In an example the safety policy may specify that the unencrypted version of the encrypted data is to be stored within DRAM memory and not within other types of memory. In this way energy utilized during data encryption may be mitigated by merely encrypting sensitive data and security may be preserved by enforcing the safety policy. At the method ends.

The encryption component may identify first data of a file A that is to be stored by the application A . In an example where the application A comprises a racing videogame the first data of file A may correspond to a user purchase validation code stored within a racing game file of the racing videogame. The encryption component may evaluate the data sensitivity specification A to determine a data sensitivity for the user purchase validation code. For example the data sensitivity may indicate that the user purchase validation code is sensitive. The encryption component may determine that the data sensitivity exceeds an encryption threshold and thus the encryption component may store the first data of the file A as encrypted first data of file A . In this way sensitive data such as the user purchase validation code may be encrypted for storage within the partially encrypted file system .

The storage virtualization component may be configured to expose the storage device to an operating system and or applications of the computing device as a plurality of independent and isolated virtualized storage devices e.g. make a single storage device appear as a plurality of storage devices . For example the storage virtualization component may identify a first application that is to be hosted by the computing device . The storage virtualization component may expose a first portion of the storage device as a first isolated storage structure for data storage by the first application such as based upon a first energy constraint for example for the first application e.g. the first application may be allocated a particular amount of computing resources for execution such as power consumption corresponding to utilization of the storage device . The storage virtualization component may identify a second application that is to be hosted by the computing device . The storage virtualization component may expose a second portion of the storage device as a second isolated storage structure for data storage by the second application such as based upon a second energy constraint for example for the second application e.g. the second application may be allocated a particular amount of computing resources for execution such as power consumption corresponding to utilization of the storage device . The storage virtualization component may identify a third application that is to be hosted by the computing device . The storage virtualization component may expose a third portion of the storage device as a third isolated storage structure for data storage by the third application such as based upon a third energy constraint for example for the third application e.g. the third application may be allocated a particular amount of computing resources for execution such as power consumption corresponding to utilization of the storage device .

In an example the storage virtualization component may expose the first portion of the storage device as a first virtualized bus used to access the first isolated storage structure to a file system of the computing device . The storage virtualization component may expose the second portion of the storage device as a second virtualized bus used to access the second isolated storage structure to the file system of the computing device . The storage virtualization component may expose the third portion of the storage device as a third virtualized bus used to access the third isolated storage structure to the file system of the computing device .

The storage virtualization component may provide the first application with access to the first isolated storage structure but not the second isolated storage structure and or the third isolated storage structure . The storage virtualization component may provide the second application with access to the second isolated storage structure but not the first isolated storage structure and or the third isolated storage structure . The storage virtualization component may provide the third application with access to the third isolated storage structure but not first isolated storage structure and or the second isolated storage structure . In this way the storage virtualization component provides hardware level isolation between data of applications using the single storage device . In an example the storage virtualization component may provide an application hosted on the computing device with access to an isolated storage structure while the computing device is in a low power state e.g. a connected standby state or a display off state .

In an example an application hosted on the computing device may comprise a managed application e.g. a C application a Visual Basic .NET application etc. that is managed by a managed programming language environment e.g. a common language runtime CLR environment . The managed programming language environment may provide isolation for the application so that other applications cannot access data of the application e.g. to prevent another application from accessing financial data of a bank application . However the managed programming language environment may consume a relatively large amount of energy trying to provide the isolation due to software overhead of the managed programming language environment. Because the storage virtualization component provides hardware isolation between applications using the isolated storage structures storage operations of the application may bypass the managed programming language environment e.g. bypass energy intensive software isolation functionality provided by the CLR environment such that the storage virtualization component provides an application with energy efficient access to merely a corresponding isolated storage structure. For example the storage virtualization component may facilitate native application programming interface API storage operations from the application to the isolated storage structure e.g. a C application may directly utilize native C storage operations to access the isolated storage structure without undue oversight by the CLR environment .

The isolation component may be configured to provide an application A hosted on the computing device with access to a first portion of a storage device but not a second portion of the storage device . The isolation component may be configured to provide an application B hosted on the computing device with access to the second portion of the storage device but not the first portion of the storage device . For example the isolation component may expose a first isolated storage structure to the application A for data storage and may isolate the application A from accessing a second isolated storage structure . The isolation component may expose the second isolated storage structure to the application B for data storage and may isolate the application B from accessing the first isolated storage structure . In this way the isolation component may provide hardware isolation between applications using a single storage device .

The encryption component may be configured to store first data of the application A as encrypted data within the first portion of the storage device e.g. based upon the first data and or the first application being determined as corresponding to sensitive data . The encryption component may be configured to store second data of the application B as encrypted data within the second portion of the storage device e.g. based upon the second data and or the second application being determined as corresponding to non sensitive data . For example the encryption component may identify a file A that is to be stored by the application A to the first isolated storage structure . Responsive to a data sensitivity of the file A exceeding an encryption threshold the encryption component may store the file A as encrypted file A within the first isolated storage structure . In this way data isolation is provided by the first isolated storage structure and security is provided by encryption. The encryption component may identify a file B that is to be stored by the application B to the second isolated storage structure . Responsive to a data sensitivity of the file B not exceeding the encryption threshold the encryption component may store the file B as unencrypted file B within the second isolated storage structure . In this way data isolation is provided by the second isolated storage structure and energy is conserved by not encrypting data that is not sensitive.

The storage management component may be configured to identify a data throughput rate of the storage device . The storage management component may provide access to the first isolated storage structure such as to the encrypted file A and or to the second isolated storage structure such as to the unencrypted file B based upon the data throughput rate. In an example the storage management component may provide data access at a rate that may be relatively similar to the data throughput rate while providing encryption and or isolation because the storage management component may be implemented as the application specific integrated circuit ASIC or the system on a chip SoC e.g. as compared to less efficient implementations such as a general purpose CPU .

According to an aspect of the instant disclosure a method for managing a partially encrypted file system is provided. The method includes identifying data that is to be stored by an application to a partially encrypted file system. The method includes determining a data sensitivity for the data. The method includes responsive to the data sensitivity exceeding an encryption threshold storing the data as encrypted data within the partially encrypted file system. The method includes responsive to the data sensitivity not exceeding the encryption threshold storing the data as unencrypted data within the partially encrypted file system.

According to an aspect of the instant disclosure a system for storage hardware virtualization is provided. The system includes a storage virtualization component. The storage virtualization component is configured to identify a first application that is to be hosted by a computing device. The storage virtualization component is configured to identify a second application that is to be hosted by the computing device. The storage virtualization component is configured to expose a first portion of a storage device to the first application as a first isolated storage structure for data storage by the first application based upon a first energy constraint for the first application. The storage virtualization component is configured to expose a second portion of the storage device to the second application as a second isolated storage structure for data storage by the second application based upon a second energy constraint for the second application.

According to an aspect of the instant disclosure a system for storage management is provided. The system includes a storage management component comprising an isolation component. The isolation component is configured to provide a first application hosted on a computing device with access to a first portion of a storage device but not a second portion of the storage device. The isolation component is configured to provide a second application hosted on the computing device with access to the second portion of the storage device but not the first portion of the storage device.

According to an aspect of the instant disclosure a means for managing a partially encrypted file system is provided. Data that is to be stored by an application to a partially encrypted file system is identified by the means for means for managing a partially encrypted file system. A data sensitivity for the data may be determined by the means for means for managing a partially encrypted file system. Responsive to the data sensitivity exceeding an encryption threshold the data is stored as encrypted data within the partially encrypted file system by the means for means for managing a partially encrypted file system. Responsive to the data sensitivity not exceeding the encryption threshold the data is stored as unencrypted data within the partially encrypted file system by the means for means for managing a partially encrypted file system.

According to an aspect of the instant disclosure a means for storage hardware virtualization is provided. A first application that is to be hosted by a computing device is identified by the means for storage hardware virtualization. A second application that is to be hosted by the computing device is identified by the means for storage hardware virtualization. A first portion of a storage device is exposed to the first application as a first isolated storage structure for data storage by the first application by the means for storage hardware virtualization based upon a first energy constraint for the first application. A second portion of the storage device is exposed to the second application as a second isolated storage structure for data storage by the second application by the means for storage hardware virtualization based upon a second energy constraint for the second application.

According to an aspect of the instant disclosure a means for storage management is provided. A first application hosted on a computing device is provided with access to a first portion of a storage device but not a second portion of the storage device by the means for storage management. A second application hosted on the computing device is provided with access to the second portion of a storage device but not the first portion of the storage device by the means for storage management.

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to implement one or more of the techniques presented herein. An example embodiment of a computer readable medium or a computer readable device is illustrated in wherein the implementation comprises a computer readable medium such as a CD R DVD R flash drive a platter of a hard disk drive etc. on which is encoded computer readable data . This computer readable data such as binary data comprising at least one of a zero or a one in turn comprises a set of computer instructions configured to operate according to one or more of the principles set forth herein. In some embodiments the processor executable computer instructions are configured to perform a method such as at least some of the exemplary method of for example. In some embodiments the processor executable instructions are configured to implement a system such as at least some of the exemplary system of at least some of the exemplary system of and or at least some of the exemplary system of for example. Many such computer readable media are devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing at least some of the claims.

As used in this application the terms component module system interface and or the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Computer storage media does not however include propagated signals. Rather computer storage media excludes propagated signals. Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via a network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein. Also it will be understood that not all operations are necessary in some embodiments.

Further unless specified otherwise first second and or the like are not intended to imply a temporal aspect a spatial aspect an ordering etc. Rather such terms are merely used as identifiers names etc. for features elements items etc. For example a first object and a second object generally correspond to object A and object B or two different or two identical objects or the same object.

Moreover exemplary is used herein to mean serving as an example instance illustration etc. and not necessarily as advantageous. As used herein or is intended to mean an inclusive or rather than an exclusive or . In addition a and an as used in this application are generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form. Also at least one of A and B and or the like generally means A or B and or both A and B. Furthermore to the extent that includes having has with and or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising .

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application.

