---

title: System and methodology providing automation security analysis and network intrusion protection in an industrial environment
abstract: Automation security in a networked-based industrial controller environment is implemented. Various components, systems and methodologies are provided to facilitate varying levels of automation security in accordance with security analysis tools, security validation tools and/or security learning systems. The security analysis tool receives abstract factory models or descriptions for input and generates an output that can include security guidelines, components, topologies, procedures, rules, policies, and the like for deployment in an automation security network. The validation tools are operative in the automation security network, wherein the tools perform security checking and/or auditing functions, for example, to determine if security components are in place and/or in suitable working order. The security learning system monitors/learns network traffic patterns during a learning phase, fires alarms or events based upon detected deviations from the learned patterns, and/or causes other automated actions to occur.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09412073&OS=09412073&RS=09412073
owner: ROCKWELL AUTOMATION TECHNOLOGIES, INC.
number: 09412073
owner_city: Mayfield Heights
owner_country: US
publication_date: 20150407
---
This application is a continuation of and claims priority to each of U.S. patent application Ser. No. 13 593 037 now U.S. Pat. No. 9 009 084 entitled SYSTEM AND METHODOLOGY PROVIDING AUTOMATION SECURITY ANALYSIS AND NETWORK INTRUSION PROTECTION IN AN INDUSTRIAL ENVIRONMENT which was filed on Aug. 23 2012 which is a continuation in part of and claims priority to U.S. patent application Ser. No. 10 661 696 now U.S. Pat. No. 8 909 926 entitled SYSTEM AND METHODOLOGY PROVIDING AUTOMATION SECURITY ANALYSIS VALIDATION AND LEARNING IN AN INDUSTRIAL CONTROLLER ENVIRONMENT which was filed on Sep. 12 2003 and which claims priority to U.S. Provisional Patent Application Ser. No. 60 420 006 entitled SYSTEM AND METHODOLOGY PROVIDING AUTOMATION SECURITY IN AN INDUSTRIAL CONTROLLER ENVIRONMENT which was filed on Oct. 21 2002 the entireties of these related applications are incorporated herein by reference. This application is also related to application Ser. No. 14 535 291 entitled SYSTEM AND METHODOLOGY PROVIDING AUTOMATION SECURITY ANALYSIS VALIDATION AND LEARNING IN AN INDUSTRIAL CONTROLLER ENVIRONMENT which was filed on Nov. 6 2014.

The disclosed subject matter relates generally to industrial control systems e.g. to a system and methodology to facilitate electronic and network security in an industrial automation system.

Industrial controllers are special purpose computers utilized for controlling industrial processes manufacturing equipment and other factory automation such as data collection or networked systems. In accordance with a control program the industrial controller having an associated processor or processors measures one or more process variables or inputs reflecting the status of a controlled system and changes outputs effecting control of such system. The inputs and outputs may be binary e.g. on or off as well as analog inputs and outputs assuming a continuous range of values.

Measured inputs received from such systems and the outputs transmitted by the systems generally pass through one or more input output I O modules. These I O modules serve as an electrical interface to the controller and may be located proximate or remote from the controller including remote network interfaces to associated systems. Inputs and outputs may be recorded in an I O table in processor memory wherein input values may be asynchronously read from one or more input modules and output values written to the I O table for subsequent communication to the control system by specialized communications circuitry e.g. back plane interface communications module . Output modules may interface directly with one or more control elements by receiving an output from the I O table to control a device such as a motor valve solenoid amplifier and the like.

At the core of the industrial control system is an industrial controller such as a Programmable Logic Controller PLC a Programmable Automation Controller PAC or PC based controller. Such controllers are programmed by systems designers to operate manufacturing processes via user designed logic programs sequential function charts function block diagrams structured text or other user programs. The user programs are stored in memory and generally executed by the controller in a sequential manner although instruction jumping looping and interrupt routines for example are also common. Associated with the user program are a plurality of memory elements or variables that provide dynamics to controller operations and programs. These variables can be user defined and can be defined as bits bytes words integers floating point numbers timers counters and or other data types to name but a few examples.

Various remote applications or systems often attempt to update and or acquire industrial controller information or related device information via a plurality of different competing and often incompatible or insecure network technologies. A major concern with this type of access to industrial controllers and control systems in general relates to the amount of security that is provided when sending or receiving data to and from the industrial controller and or associated equipment. In most factories or industrial environments complex and sometimes dangerous operations are performed in a given manufacturing setting. Thus if a network connected controller is inadvertently accessed or even worse intentional sabotage occurs by a rogue machine or individual potentially harmful results can occur.

One attempt at providing security in industrial control systems relates to simple password protection to limit access to the systems. This can take the form of a plant or controls Engineer or Administrator entering an alpha numeric string that is typed by an operator each time access is attempted wherein the controller grants access based on a successful typing of the password. These type passwords are highly prone to attack or discovery however. Often users employ passwords that are relatively easy to determine e.g. person s name or birthday . Sometimes users exchange passwords with other users the password is overheard or a user with improper authorization comes in contact with the password. Even if a somewhat higher level of security is provided parties employing sophisticated hacking techniques can often penetrate sensitive control systems. Such techniques can allow non authorized parties to change the control systems control algorithms in dangerous ways to assume control of production equipment or to alter I O streams between the control system and the controlled equipment. Accordingly access should be limited to authorized users and or systems in order to mitigate potentially harmful consequences.

The following presents a simplified summary of the disclosed subject matter in order to provide a basic understanding of some aspects of the disclosed subject matter. This summary is not an extensive overview of the disclosed subject matter. It is intended to neither identify key or critical elements of the disclosed subject matter nor delineate the scope of the disclosed subject matter. Its sole purpose is to present some concepts of the disclosed subject matter in a simplified form as a prelude to the more detailed description that is presented later.

The disclosed subject matter relates to a system and methodology to facilitate network and or automation device security in an industrial automation environment. Various systems and methodologies are provided to promote security across and or within networks and in accordance with different automation device capabilities. In one aspect of the disclosed subject matter a Security Analysis Methodology SAM and tool provides an automated process component and tool that generates a set or subset of security guidelines security data and or security components. An input to the tool can be in the form of an abstract description or model of a factory wherein the factory description identifies one or more assets to be protected and associated pathways to access the assets. Security data generated by the tool includes a set of recommended security components related interconnection topology connection configurations application procedures security policies rules user procedures and or user practices for example.

SAM can be modeled on a risk based cost based approach if desired. A suitable level of protection can be determined to facilitate integrity privacy and or availability of assets based on risk and or cost. In addition descriptions of shop floor access Intranet access Internet access and or wireless access can also be processed by the tool. Since multiparty involvement can be accommodated IT Manufacturing Engineering etc. the tool can be adapted for partitioned security specification entry and sign off. The security data of the SAM tool can be generated in a structured security data format e.g. XML SQL etc. that facilitates further validation and compliance checking of the security data if desired.

In another aspect of the disclosed subject matter a security validation methodology and associated tools can be provided. The validation tools perform initial and periodic live security assessment of a physical system. This enables security flaws or weaknesses to be identified. One aspect of the tools is to check a system prior to security modifications in order to assess current security levels. Another aspect is to check a system for conformance to recommendations of a security analysis to standards such as ISO International Organization for Standardization or other security standards. The validation tools can be executed on end devices host based and or executed as an independent device that is operatively coupled to a network network based at selected points. One function of host validation tools is to perform vulnerability scanning and or auditing on devices. This includes revision checks improper configuration check file system registry database permissions check user privilege password and or account policy checks for example.

One function of the network validation tools is to perform vulnerability scanning and auditing on the networks. This includes checking for susceptibility to common network based attacks searching for open TCP UDP ports and scanning for vulnerable network services. The tools can also attempt to gain key identity information about end devices that may enable hacker entry. Another function of the network validation tools is to perform vulnerability scanning and auditing on firewalls routers and or other network security devices. In addition a complementary tool can be provided to assess CIP based factory automation systems for security. This will typically be a network based tool since factory automation devices often are not as capable as general purpose computing devices. The tool can also be operable in an assessment mode to discover system flaws with little or no configuration and the tool can operate in a validation mode to check system security against security analysis methodology determinations described above. Still other functions can include non destructively mapping a topology of information technology IT and automation devices checking revisions and configurations checking user attributes and or checking access control lists. The validation tools described herein can also be adapted to automatically correct security problems e.g. automatically adjust security parameters rules policies install new security components remove suspicious components and so forth .

According to another aspect of the disclosed subject matter a Security Learning system is provided that can include network based aspects and or host based aspects similar to some of the security aspects described above with respect to the Validation tools. A network based security learning system also referred to as learning component is provided that monitors an automation network during a predetermined training period e.g. monitor network activities for 1 week . During the training period the learning component monitors and learns activities or patterns such as the number of network requests to and from one or more assets the type of requests e.g. read write role identity of person system requesting access time of requests status or counter data e.g. network access counters error codes which can be provided or queried from a learning or status component within the asset and or substantially any data type or pattern that may be retrieved from the network and or the asset.

After the training period the learning component monitors the automation network and or assets for detected deviations from data patterns learned during the training period. If desired a user interface can be provided that allows a user to adjust one or more pattern thresholds. The user interface can also provide options for the type of data patterns to monitor learn. For example if the number of network requests to the asset has been monitored and learned to be about 1000 requests per hour during the past month then a threshold can be set via the user interface that triggers an alarm or causes an automated event to occur if a deviation is detected outside of the threshold e.g. automatically disable all network requests from the other networks if the number of network requests to the asset exceeds 10 of the average daily network requests detected during the training period .

The following description and the annexed drawings set forth certain illustrative aspects of the disclosed subject matter. These aspects are indicative however of but a few of the various ways in which the principles of the disclosed subject matter may be employed and the disclosed subject matter is intended to include all such aspects and their equivalents. Other advantages and novel features of the disclosed subject matter will become apparent from the following detailed description of the disclosed subject matter when considered in conjunction with the drawings.

The disclosed subject matter relates to a system and methodology facilitating automation security in a networked based industrial controller environment. Various components systems and methodologies are provided to facilitate varying levels of automation security in accordance with security analysis tools security validation tools and or security learning systems. The security analysis tool receives abstract factory models or descriptions for input and generates an output that can include security guidelines components topologies procedures rules policies and the like for deployment in an automation security network. The validation tools are operative in the automation security network wherein the tools perform security checking and or auditing functions for example to determine if security components are in place and or in suitable working order. The security learning system monitors and learns network traffic patterns during a learning phase triggers alarms or events based upon detected deviations from the learned patterns and or causes other automated actions to occur. The security learning component can leverage the distinctive data traffic patterns inherent in automation networks in general as distinguished from general purpose networks such as those found in a home or office environment to identify unexpected or corrupt data traffic. Moreover the countermeasures triggered by the security learning system can be tailored to automation equipment in use or the industrial processes being regulated as will be discussed in more detail infra.

As used in this application the terms component system platform layer controller terminal station node interface are intended to refer to a computer related entity or an entity related to or that is part of an operational apparatus with one or more specific functionalities wherein such entities can be either hardware a combination of hardware and software software or software in execution. For example a component can be but is not limited to being a process running on a processor a processor a hard disk drive multiple storage drives of optical or magnetic storage medium including affixed e.g. screwed or bolted or removably affixed solid state storage drives an object an executable a thread of execution a computer executable program and or a computer. By way of illustration both an application running on a server and the server can be a component. One or more components can reside within a process and or thread of execution and a component can be localized on one computer and or distributed between two or more computers. Also components as described herein can execute from various computer readable storage media having various data structures stored thereon. The components may communicate via local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems via the signal . As another example a component can be an apparatus with specific functionality provided by mechanical parts operated by electric or electronic circuitry which is operated by a software or a firmware application executed by a processor wherein the processor can be internal or external to the apparatus and executes at least a part of the software or firmware application. As yet another example a component can be an apparatus that provides specific functionality through electronic components without mechanical parts the electronic components can include a processor therein to execute software or firmware that provides at least in part the functionality of the electronic components. As further yet another example interface s can include input output I O components as well as associated processor application or Application Programming Interface API components. While the foregoing examples are directed to aspects of a component the exemplified aspects or features also apply to a system platform interface layer controller terminal and the like.

As used herein the terms to infer and inference refer generally to the process of reasoning about or inferring states of the system environment and or user from a set of observations as captured via events and or data. Inference can be employed to identify a specific context or action or can generate a probability distribution over states for example. The inference can be probabilistic that is the computation of a probability distribution over states of interest based on a consideration of data and events. Inference can also refer to techniques employed for composing higher level events from a set of events and or data. Such inference results in the construction of new events or actions from a set of observed events and or stored event data whether or not the events are correlated in close temporal proximity and whether the events and data come from one or several event and data sources.

In addition the term or is intended to mean an inclusive or rather than an exclusive or. That is unless specified otherwise or clear from the context the phrase X employs A or B is intended to mean any of the natural inclusive permutations. That is the phrase X employs A or B is satisfied by any of the following instances X employs A X employs B or X employs both A and B. In addition the articles a and an as used in this application and the appended claims should generally be construed to mean one or more unless specified otherwise or clear from the context to be directed to a singular form.

Furthermore the term set as employed herein excludes the empty set e.g. the set with no elements therein. Thus a set in the subject disclosure includes one or more elements or entities. As an illustration a set of controllers includes one or more controllers a set of data resources includes one or more data resources etc Likewise the term group as utilized herein refers to a collection of one or more entities e.g. a group of nodes refers to one or more nodes.

Various aspects or features will be presented in terms of systems that may include a number of devices components modules and the like. It is to be understood and appreciated that the various systems may include additional devices components modules etc. and or may not include all of the devices components modules etc. discussed in connection with the figures. A combination of these approaches also can be used.

Controller can include one or more local I O modules that provide hardwired connectivity to at least a subset of the controlled equipment and telemetry devices such as controlled devices . I O modules share a chassis or rack with the controller and interface with controller over a backplane. Additionally or alternatively controller can exchange control and status data with a subset of the controlled devices such as controlled devices over a direct connection to the plant network . Plant network can comprise for example a control and information protocol CIP network such as DeviceNet or Controlnet. Other suitable networks include but are not limited to Ethernet DH DH Remote I O Fieldbus Modbus Profibus CAN wireless networks or serial protocol. Controlled devices that exchange data with controller via a direct network connection typically include an integrated network interface that places the device on the network. Data to be exchanged between the device and the controller can then be mapped within the controller and addressed within the control program therein.

Controller can also exchange data with a subset of controlled devices such as devices via remote I O modules . Remote I O modules are similar to local I O modules in that they exchange signaling with controlled devices over hardwired connections . However remote I O modules interface with the controller over the plant network rather than reside locally within the controller s chassis.

An I O table within the controller s memory can maintain present analog and digital values corresponding to the various inputs and outputs read from or written to the local and remote I O modules or the controlled devices themselves. That is input values read from controlled devices by the I O modules or e.g. analog or digital input modules can be written to the I O table. These input values can then be read by the control program executing in the controller which updates its control variables accordingly. Similarly output values generated by the control program can be written to the I O table causing corresponding output data signals to be applied to the analog or digital output modules comprising I O modules and . The control program executed by controller can comprise any conceivable type of code used to process input signals read into the controller and to control output signals from the controller including but not limited to ladder logic sequential function charts function block diagrams or structured text.

In many industrial facilities plant networks such as network that is networks dedicated to exchanging automation and control data between automation assets interface with one or more office networks such as office network . Connectivity between the plant network and the office network has become increasingly common as office side reporting tools have been developed that directly leverage production data generated by automation devices on the plant network. Moreover plant managers often wish to monitor a controlled system on the plant floor from their office computers e.g. via an HMI application running on the office computer which also necessitates a connection between the office network and plant network . Such a connection can be implemented via a gateway device e.g. a router hub or switch or through a field device having a connection to both networks e.g. an HMI workstation having two network ports allowing the workstation to be added to both the plant and office networks . Since the office network is typically connected to an external network such as the Internet e.g. via gateway the connection between the plant network and the office network exposes the plant network to possible malicious intrusions from outside the plant environment which compromises the security of the controlled system. Such malicious intrusions can for example cause the controlled devices to operate in an unsafe manner either through a deliberate outside effort or through excessive data traffic entering the plant network that can result in delayed device response times. Plant network can also be directly connected to the external network e.g. via gateway which increases the risk of undesirable data traffic from an external source.

The various security tools described herein are designed to mitigate these risks using techniques tailored to the industrial automation environment. These tools can include a security analysis tool a security validation tool and a security learning tool . In the exemplary environment depicted in security validation tool and security learning tool are deployed on a server connected to the plant network allowing these tools to verify security configurations monitor data traffic patterns on the network monitor automation device activity deploy countermeasure outputs to the devices and equipment on the plant network and perform other functions as will be described in more detail infra. Security analysis tool is depicted as residing on a workstation connected to the office network . However the functions performed by the security analysis tool which include generating security recommendations and configuration information based on user provided factory description information can be performed off line and thus do not necessarily require connection to a network.

Referring now to a system illustrates various automation security tools in accordance with an aspect of the disclosed subject matter. One or more automation assets communicate and cooperate with various network devices across a network . The automation assets include substantially any type of control device communications module computer I O device Human Machine Interface HMI etc. that communicates via the network which includes control automation and or public networks. In one example the automation assets include Programmable Logic Controllers PLC e.g. controller of that can also communicate with and control various other assets such as Input Output modules including Analog Digital Programmed Intelligent I O modules other programmable controllers communications modules and the like. Automation assets can also comprise the controlled devices and equipment being regulated by the controller and I O modules e.g. controlled devices of . The network includes public networks such as the Internet Intranets and automation networks such as Control and Information Protocol CIP networks including DeviceNet and ControlNet. Other networks include Ethernet DH DH Remote I O Fieldbus Modbus Profibus wireless networks serial protocols and so forth. In addition to the automation assets the network devices include various possibilities hardware and or software components . These include components such as switches with virtual local area network VLAN capability LANs WANs proxies gateways routers firewalls virtual private network VPN devices intrusion detection systems servers clients computers configuration tools monitoring tools and or other devices.

According to one aspect of the disclosed subject matter various security tools can be provided with the system . Although three tools are illustrated it is to be appreciated that more or less than three tools can be employed with the disclosed subject matter and in a plurality of similar or different combinations. In one aspect a security analysis tool is provided that receives factory input data describing or modeling various aspects of the automation assets network devices network and or system . The security analysis tool processes the factory input data and generates security output data which is then deployed to machines and or users in order to facilitate suitable network security measures and practices in the system . As will be described in more detail below such measures can include security recommendations configuration guidelines or adjustments procedures rules policies and security parameters for example that are utilized to mitigate unwanted intrusions or attacks from the network that may affect the automation assets and or network devices .

In another aspect of the disclosed subject matter one or more validation tools can be provided host and or networked based that perform automated security auditing and checking functions on the network the automation assets and or network devices to determine if suitable security standards have been implemented. The validation tools also perform periodic or monitored assessments within the system to determine if potential network threats or attacks are at hand. As will be described in more detail below this can include automated and or healing operations to mitigate network security threats. In another aspect of the disclosed subject matter one or more learning tools can be provided host and or networked based that learn system activities or patterns during a training or configuration period then perform automated actions in response to detected deviations from the learned activities or patterns. Such automated actions can include altering network activity e.g. tracing and blocking a source of undesirable traffic applying a rate limiting rule to undesirable traffic placing assets on a different VLAN or communication channel etc. and triggering an alarm such as an e mail or pager to notify an entity user and or machine of a potential or detected problem. It is noted that the security tools and or can share or exchange information between tools. For example the security analysis tool can receive input from the validation tool e.g. three new network devices detected in topology wherein the security analysis tool generates new or adjusted security output data in response thereto. It is further noted that one or more of the automation assets may directly access the network and or may employ the network devices to achieve network access.

Turning to a security analysis tool is illustrated in accordance with an aspect of the disclosed subject matter. The security analysis tool operates on a computer or workstation e.g. workstation of and receives one or more factory inputs that can be generated from a plurality of sources. Such sources can include user input model input e.g. asset models network models schemas formulas equations maps and codes for example. The factory inputs are then processed by the security analysis tool to generate one or more security outputs which can also be provided in various forms such as manuals documents schemas executables codes e mails and or other electronic data that is described in more detail below. As illustrated a Graphical User Interface GUI or interface application can be provided to interact with the security analysis tool factory inputs and or security outputs . This can include substantially any type of application that sends retrieves processes and or manipulates factory input data receives displays formats and or communicates security output data and or facilitates operation of the security analysis tool . For example such interfaces can also be associated with an engine editor tool or web browser although other type applications can be utilized. The GUI includes a display having one or more display objects not shown including such aspects as configurable icons buttons sliders input boxes selection options menus tabs and so forth having multiple configurable dimensions shapes colors text data and sounds to facilitate operations with the security analysis tool . In addition the GUI can also include a plurality of other inputs or controls for adjusting and configuring one or more aspects of the disclosed subject matter. This can include receiving user commands from a mouse keyboard speech input web site remote web service and or other device such as a camera or video input to affect or modify operations of the GUI .

Referring now to an example security analyzer is illustrated in accordance with an aspect of the disclosed subject matter. The security analyzer can be an automated process application component and or tool that generates a set of security guidelines or security data and executes a Security Analysis Method SAM in accordance with the disclosed subject matter. An input to the security analyzer is an abstract description of a factory depicted as factory data . The factory data can describe or model one or more automation assets to be protected and associated network pathways to access the assets. The factory data can also include risk data and cost data associated with the respective automation assets and the processes carried out by these assets. For example automation assets carrying a high risk of injury to personnel or having the potential to compromise the integrity of a manufactured product if operated abnormally as may result from a network security breach can be identified as high risk assets in the factory data. Likewise automation assets having a potentially high financial liability if operated improperly e.g. through damage to other assets or by virtue of the asset s inherent cost can be identified as such to the security analyzer using factory data . Other factory data can include security feedback from other security tools network access patterns and partitioning data for example. Security data generated by the security analyzer includes a set of recommended security components related interconnection topology connection configurations application procedures security policies rules user procedures and or user practices for example that is employed to guide users and adapt systems with various security measures. The security recommendations configurations and policies generated by the security analyzer can be tailored to the automation system or process described by the factory data by prioritizing protection of high risk or high cost automation assets e.g. expensive or dangerous machinery devices that regulate critical production operations etc. . In this regard the security analyzer can identify the automation assets requiring prioritized security and leverage knowledge of the network architecture and associated network devices in use to customize a set of security recommendations device configurations policies etc. that ensure adequate network protection of the critical assets.

The Security Analysis Method noted above and security analyzer can also be modeled on a risk based cost based approach if desired. A suitable level of protection can be determined to facilitate integrity privacy and or availability of assets based on risk and or cost. For example the strength of recommended security parameters policies and procedures can be increased if lower security risks are desired even though such measures are associated with higher implementation costs and or maintenance costs. Alternatively the strength of security measures can be decreased if higher risks associated with network attacks or intrusions are deemed acceptable or if low implementation costs are desired. In one or more embodiments the security analyzer can output multiple sets of security outputs corresponding to multiple tiers of security strength where stronger security recommendations are typically associated with greater costs in terms of capital required to implement the security recommendations impact on overall system performance etc. In such embodiments the multiple sets of security outputs can include estimates of the economic and performance costs associated with each set allowing the user to make an informed selection regarding which level of recommended security is most suitable for the needs of a given automation system.

In addition descriptions of shop floor access Intranet access Internet access wireless access and or other network access patterns can also be described as factory data and processed by the security analyzer . Since multiple party involvement can be accommodated e.g. IT Manufacturing Engineering etc. the security analyzer can be adapted for partitioned security specification entry and sign off. The security data can be generated in a structured security data format e.g. XML SQL etc. that facilitates further validation and compliance checking of the security data if desired. As illustrated a security analysis schema which is described in more detail below can be derived from the security data and can be provided to other entities such as users or machines for further security processing implementations.

Referring to an example security analysis schema is illustrated in accordance with an aspect of the disclosed subject matter. The security analysis schema includes one or more XML elements through defined by starting and ending tags with symbols arranged in substantially any order that relate to one or more security items or data and provide information to facilitate security guidelines and configurations. Although not shown the XML elements and associated tags can also include attribute information if desired wherein an attribute is a name value pair associated with an element start tag e.g. . The security analysis schema can then be deployed to various systems and or components to control adapt network access based upon the security contents specified therein.

Proceeding to a recommendations element can be provided having associated recommendations data. This can include suggestions as to how to adapt automation components and network devices for suitable security measures e.g. in view of risk and cost criteria . In one example a suggestion can be in the form of a statement All real time control devices and networks should only be connected to public networks via front end server having virus detection intrusion detection and virtual private network capabilities. In another example Remote factory network devices must be identified authorized and authenticated before achieving access to control network otherwise local factory network devices should communicate with low end encryption technologies. As can be appreciated a plurality of such recommendations can be provided. In one or more embodiments each recommendation can include an indication of a relative implementation cost associated therewith e.g. up front cost to implement the recommended countermeasure expected degree of impact on overall system performance etc. At a topologies element can be provided. This can include information on how to interconnect various devices and networks to achieve desired or recommended security goals e.g. PLC connects to router router connects to factory server and protected gateway . . . . In another aspect the topology data can be in the form of symbols or codes that are employed to construct topology or network maps displays via a visual or other type application.

At configuration data can be provided. This type of data can include settings or parameters for adapting network components with suitable security measures e.g. communications module word three should be set to value AA Hex for extended security checking set dip switch two on gateway to cause authentication and authorization procedures with outside network devices install virus detection software on network server . . . . In another aspect the configuration data can be sent or deployed to devices via the schema and loaded to cause automatic configurations. At an applications procedure element can be provided having associated procedure data. Such data can include the types of security applications to load any security adjustments or settings relating to the applications application status information to verify and procedures for correctly operating respective security applications to mitigate potential attacks or threats.

At policy data can be provided. The policy can be general and or specific applied system wide and or to a device or subset of devices. For example location based policies can be initiated e.g. all network requests from listed URLs are to be denied network requests from Pittsburgh server limited to 100 per day . Time based policies can also be defined e.g. no outside network requests allowed between 10 00 AM and 2 00 PM . Process based policies can be defined such as for example Limit outside network requests to below 50 during real time batch operations. Such recommended policies can be generated based on factory description data e.g. factory data provided to the security analyzer describing the processes performed by the industrial system for which security is being assessed as well as equipment in use to regulate the process. Using such information the security analyzer can identify for example which devices or pieces of equipment comprising the automation system pose safety risks to personnel and generate security policies directed toward minimizing the risk of improper operation of such dangerous equipment due to intrusive data traffic or network hijacks. The security analyzer can also identify critical phases of the automated process that carry a high risk of damage to the product or material being produced should a malicious intrusion cause the process phase to be executed abnormally again based on the factory description data provided to the analyzer and generate policies that increase the strength of security measures during these critical phases. These policies can also be generated by the security analyzer based on a calculated potential cost associated with a network intrusion either in terms of personnel safety or impact on production or revenue wherein the strength of a recommended process based policy accords with the calculated potential cost of intrusion. According to one or more embodiments the security analyzer can compute these costs based on a stored knowledgebase of automation equipment and configurations thereof as well automation applications and processes. This knowledgebase can include information regarding the risk levels associated with the respective items of equipment system configurations or processes. The security analyzer can parse the factory description data to identify the equipment in use the operations being performed by the automation system and any other relevant information. The analyzer can then cross reference this parsed data with the knowledgebase of risk factors in order to determine the potential costs associated with the system intrusion and generate policies commensurate with the calculated potential costs.

Other policies include load based policies whereby network requests that are responded to are regulated in accordance with a specified amount of desired network traffic e.g. regulated according to requests hour . In one or more embodiments the amount of desired network traffic can be recommended by the security analyzer based on a calculated required level of security given the factory description inputs. For example the security analyzer can determine that the factory description data suggests a low risk system that poses little danger to personnel and relatively small risk of damaged product due to equipment malfunction and accordingly can recommend a load based policy that allows a comparatively high amount of network traffic. Conversely if the factory description data suggests a plant operation carrying a potentially high cost associated with equipment intrusion either in terms of safety or impact on production or revenue the security analyzer can generate a load based policy based on a relatively low amount of desired network traffic. Other policies may be related to the type of requests e.g. all requests to write data to the PLC are to be denied outside devices cannot update analog module configuration data communications module to provide status data only etc. . In general substantially any policy that defines regulates and or limits network activities in view of security considerations can be employed with the disclosed subject matter.

At one or more security rules can be provided that have similar effects as the policies described above. For example rules can be provided in an If Then construct can include else else if Boolean expressions and the like wherein if a defined condition or conditions occur then one or more listed actions result can included nested constructs e.g. If more than 3 network access attempts are negotiated unsuccessfully then deny further communications with node or address . At user procedure data can be provided. This can include actual procedure data and or links to databases or websites to acquire the data. Such data can instruct users on suitable security procedures security precautions training configurations examples wizards manuals trouble shooting emergency contacts contact information maintenance and the like which are designed to mitigate system security problems.

The validation tools and can be executed on end devices host based and or executed as an independent device that is attached to a network network based at selected points e.g. security validation tool of which is depicted as residing on an independent networked server . One function of the host validation tool is to perform vulnerability scanning and or auditing on devices comprising the automation system. This includes revision checks improper configuration check file system registry database permissions check user privilege password and or account policy checks for example.

Another function of the network validation tool is to perform vulnerability scanning and auditing on firewalls routers and or other security devices. In addition a complementary tool can be provided to assess CIP based factory automation systems for security includes substantially any factor protocol . This will typically be a network based tool since factory automation devices often are not as capable as general purpose computing devices. The networks validation tool can also be operable in an assessment mode to discover system flaws with little or no configuration and the tool can operate in a validation mode to check system security against security analysis methodology determinations described above. Still other functions can include non destructive mapping a topology of IT and automation devices comprising the automation system checking revisions and configurations checking user attributes and or checking access control lists. The validation tools described herein can also be adapted to automatically correct security problems e.g. automatically adjust security parameters on network devices or automation equipment to conform to a recommended security standard install new security components remove suspicious components and so forth . It is to be appreciated that one or more of the functions described herein for the host validation tool may be shared interchanged with the network validation tool and vice versa.

Referring now to a validation analyzer is illustrated in accordance with one or more aspects of the disclosed subject matter. The validation analyzer can be a hardware device computer processor application and or combination thereof that process one or more security data inputs such as can be received or communicated from a network not shown . The security data inputs include current security data network data audit data device data security analysis data and or other data that can be derived from scanning or querying a network and associated devices via the validation analyzer for information regarding current network security conditions. Various components can be provided with the validation analyzer to facilitate security monitoring and processing. In one aspect an assessment component can be provided. The assessment component performs initial and or periodic security determinations on network systems to identify security deficiencies or problems therein. For example the assessment component may compare a stored security configuration with a network configuration received from the security data inputs flag such conditions and or institute further actions if differences are detected.

In another aspect a standards component can be provided to perform security compliance checking. This can include polling the plant and or office network and the devices connected thereto prior to proposed or attempted network security modifications in order to assess current security levels. Compliance checking can also include determining conformance to other automated security analysis recommendations such as those generated by the security analysis tool as described supra conformance to applicable device network security standards and or conformance with predetermined or factory specific standards for example. Such checking can be in accordance with stored standards or procedures within the validation analyzer or can include remote checking to such resources as network databases web sites web services e.g. databases linked to Internet Protocol Security Standard IEEE database to ascertain a most recent recommended standard. It is noted that the assessment component and or standards component can initiate vulnerability scanning and or auditing on devices networks systems. This can include software or firmware revision checks improper device configuration checks file system registry database permissions checks user privilege password and or account policy checks checking for susceptibility to network based attacks searching for open network ports scanning for vulnerable network services learning identity information about end devices users that may enable attack entry performing vulnerability scanning and auditing on firewalls routers and or other security devices or components non destructively mapping a topology of network devices checking revisions and configurations checking user attributes and or checking network device access control lists. As can be appreciated such checking can include comparisons to local remote databases or sites as noted above.

In yet another aspect of the disclosed subject matter a learning analyzer component can optionally be provided within the validation analyzer . This component can be adapted to learn network device and or system patterns scan current network data and process the current network data in accordance with the learned patterns to determine if automated actions are to be initiated. The learning analyzer component will be described in more detail below with respect to .

If a security issue or problem is detected by the assessment component standards component and or learning analyzer component the validation analyzer can trigger an automated action component whereby one or more automated security actions can be initiated. The automated security actions can include automatically correcting security problems at such as automatically adjusting security parameters altering network traffic patterns at e.g. increasing decreasing communications with a node installing new security components and or removing disabling suspicious components at triggering alarms and or automatically notifying entities about detected problems and or concerns at and or generating security data at such as generating an error or log file generating a schema generating data to re configure or re route network connections updating a database or remote site for example. As illustrated the validation analyzer can be configured and interacted with via a user interface having similar input and output functionality as described above with respect to the user interface depicted in .

During the training period the learning component monitors and learns activities or patterns such as 

Network activities can also include network requests that are received from outside networks that may be routed through a security gateway or server before reaching the automation network .

After the training period the learning component monitors the automation network and or assets for detected deviations from data patterns learned during the training period. If desired a user interface not shown can be provided through which one or more pattern thresholds can be adjusted. The user interface can also provide options for specifying the type of data patterns to monitor learn. For example if the number of network requests to the asset has been monitored and learned to be about 1000 requests per hour during the past month then a threshold can be set via the user interface that triggers an alarm or causes an automated event to occur if a deviation is detected outside of the threshold e.g. automatically disable all network requests from the other networks if the number of network requests to the asset exceeds a set or determined percentage of the average daily network requests detected during the training period .

In one aspect the learning component and associated detection parameters or thresholds can be provided as a network based tool or tools that can reside at various portions of the automation network . In another aspect the learning component can be provided as a host based component as illustrated at depending on the resources available for the asset .

Various learning functions and or processes can be provided to facilitate automated learning within the learning components and . This can include mathematical processes statistical processes functions and or algorithms and can include more elaborate systems such as a neural network for example. In addition artificial intelligence functions components and or processes can be provided. Such components can include automated classifiers for monitoring and learning data patterns wherein such classifiers include inference models Hidden Markov Models HMM Bayesian models Support Vector Machines SVM vector based models decision trees and the like.

During the training period the learning component can monitor both data traffic on the automation network and network related activities carried out by the automation assets themselves over time in order to create a learned data traffic profile and a learned asset activity profile. illustrates the creation of a learned data traffic profile in more detail. As discussed above the security analysis tool of the present disclosure can include a learning component that monitors data traffic on the plant network during the training period e.g. using pattern monitoring component . Advantageously pattern monitoring component can monitor the network traffic in a manner that considers the unique operations and data traffic patterns of automation systems in general. For example during the training period pattern monitoring component can monitor the periodic data traffic between a controller on the network e.g. a PLC PAC etc. and the I O modules or field devices that interface with the controller over the plant network . Aspects of the disclosed subject matter recognize that such periodic traffic is common to many automation systems by virtue of the controller s sequence of operation and is a property that distinguishes many automation networks from more common home or office networks. Accordingly one or more embodiments of the learning component described herein are configured to take advantage of this aspect of the plant network.

The periodic I O updates inherent to many automation networks are explained in more detail with reference to . Industrial controller similar to controller of executes sequence program in order to regulate the industrial process. As described above controller interfaces with one or more I O modules which include any combination of digital and analog input and output terminals for exchanging data with field devices over a hardwired connection. I O modules can comprise either local I O modules that share a rack or chassis with the controller and interface with the controller over a backplane e.g local I O modules of or remote I O modules that interface with the controller over the network e.g. remote I O modules of . Controller can also exchange data with networked field devices directly over the factory network via a network module .

As noted above in connection with an I O table in the controller s memory can maintain the values of the controller inputs and outputs. That is input values read from input modules or from the networked field devices are stored in I O table from which the input values can be read into sequence program . Likewise output values generated by the sequence program are written to I O table and subsequently or concurrently sent to the output modules to be transmitted as output signals to the field devices.

Turning briefly to a typical sequence of operations for the controller is illustrated as a timing diagram. This sequence of operations is executed continuously while the controller is in run mode in order to regulate the automation system in accordance with sequence program . From time T to T controller overhead e.g. integrity checks program verification error handling etc. is performed. From T to T input signals at the I O modules are scanned into the I O table as input values and provided to the sequence program. From T to T an execution scan is performed on the sequence program which can cause one or more output values to be updated. From T to T the output values which may have altered during the program execution scan are written to the output modules for transmission to the field devices. Upon completion of the output write the sequence returns to T and repeats.

As can be seen this sequence of operations can result in a substantially periodic exchange of data between the controller and I O modules and or networked field devices since the inputs are read and outputs written at substantially regular intervals dictated by the overall time required to complete the sequence. Returning now to the learning component can leverage this aspect of the automation data traffic during the training period by target monitoring the substantially periodic data traffic between the controller and the I O modules or field devices. Learning component can perform this monitoring by any suitable means including observing the data traffic directly monitoring values in a controller or other device representing commands to open a connection reading a controller s internal design file etc. A pattern analysis component of the learning component can then generate a learned data traffic profile based in part on this monitored data. The learned data traffic profile can encode the learned cycle of periodic traffic gleaned through the monitoring of traffic between the controller and the I O modules and or field devices. The learned data traffic profile can also encode one or more acceptable thresholds of deviation from this learned pattern based on variations in the cycle observed by the pattern analysis component during the training period. These thresholds can be generated automatically by the pattern analysis component based on the observed variations or configured manually via user interface . Calculated thresholds can also be modified or overridden manually via the user interface.

In addition to this periodic data traffic the pattern monitoring component of learning component can detect allowable non periodic data traffic placed on the network during the training period. Such non periodic data traffic can include but is not limited to communications to and from external or office networks e.g. via gateway data traffic associated with a maintenance or upgrade procedure data generated by automation or network devices that initiate communications with other devices on an as needed basis etc. The learning component can identify the sources of these allowable non periodic communications and include this information in the learned data traffic profile .

The learned data traffic profile generated by the learning component can encode any suitable information that describes the learned pattern of network traffic at a high degree of granularity including time and location based correlations. For example the pattern analysis component can observe that network transfers between two devices increases by a generally predictable amount between 10 00 and 11 00 each weekday. This observation can be recorded in the profile and subsequently used by the learning component to determine the boundaries of acceptable network activity. The pattern analysis component can also calculate a threshold to be used by the learning component when subsequently monitoring the traffic between the two devices during this time period based on the observed variations in network load during the training period. Thus the pattern analysis component can calculate variable thresholds for segments of the plant network as a function of the time of day based on the observed patterns. Such variable thresholds can be particularly applicable to industrial systems designed to place unneeded sets of devices in a sleep mode during scheduled times of day in order to conserve energy. During sleep mode most or all data traffic to the sleeping devices will halt. The pattern analysis component can observe and learn this daily decrease in network traffic to the sleeping devices and vary the threshold for that portion of the system during the sleep period accordingly. Given that any data traffic to the sleeping devices during sleep mode has a higher likelihood of originating from an unauthorized outside source reducing the threshold during this sleep mode increases the sensitivity to detected data traffic and increases the likelihood of a corrective response in response to such traffic.

Moreover the pattern analysis component can independently assess data traffic patterns for different segments of the network e.g. segments corresponding to different areas of the plant different machine cells different controlled processes etc. . In one or more embodiments the learning component can determine which portions of the plant network correspond with respective work cell areas industrial processes etc. based on the factory description information provided to the security analysis tool described above. The pattern monitoring component can then use this correlation between network segments and plant areas to determine a monitoring strategy whereby the segments are monitored and analyzed individually as well as collectively. In such scenarios the learned data traffic profile can maintain individual learned profiles and thresholds for the respective segments.

As noted above one or more embodiments of the learning component described herein can also create a learned profile based on data gathered by monitoring network related activity of the automation assets themselves during the training period. illustrates creation of such a learned asset activity profile according to one or more embodiments of the disclosed subject matter. In this example the pattern learning component of learning component can monitor one or more automation assets connected to plant network . For example the pattern monitoring component can monitor controller e.g. over network during the training period and in particular can monitor such events as the number of network connection retries performed by the controller over that period the number of network access requests received by the controller a number of unrecognized messages received by the controller or an I O module or other such statistics Likewise the pattern monitoring component can monitor traffic statistics recorded by network devices such as routers hubs switches or other network architecture devices. This can include monitoring the number of packets received or transmitted by the network devices the number of collisions the percentage of bandwidth utilized or other such statistics.

Pattern monitoring component can also monitor the controlled devices during the training period. As noted supra some automation devices can be regulated by controller through a direct network connection e.g. over plant network . Since such devices are placed on the plant network communication statistics for such devices can be monitored by the learning component and encoded within the profile. Such networked automation devices can include for example variable frequency drives VFDs for motor control industrial robots vision cameras solenoids for pneumatic control or virtually any other networked industrial device or piece of equipment.

In addition to monitoring communication related activity for the controller and devices and one or more embodiments of the learning component can also retrieve and record inherent or static information associated with the respective devices such as MAC addresses IP addresses checksums etc. For example the Security Analysis Tool can reference recorded MAC address and IP address data during subsequent security monitoring of the automation system to determine if for example an entity is attempting to hijack a device identity by asserting an identical IP address as an existing network device or controller e.g. the entity is claiming an unauthorized association between a MAC address and the IP address . The Security Analysis Tool can also reference the recorded checksums during security monitoring to determine whether an attempt has been made to alter a device s configuration.

During or after the training period the learning component s pattern analysis component can generate a learned asset activity profile that encodes the asset activity patterns described above. The learned asset activity profile can contain such information as a learned pattern of network requests or retries associated with the respective controllers and devices on the network a learned pattern of packet transfers to and from the respective devices or other such network related activity that can be collected from the devices comprising the automation system. The learned asset activity profile can also include one or more acceptable thresholds of deviation from the respective learned activity patterns. These thresholds can be calculated by the pattern analysis component based in part on the average amount of statistical variation observed by the learning component during the training period. As with the thresholds calculated for the learned data traffic profile the thresholds can also be manually configured by the user e.g. via user interface . Additionally the learned asset activity profile can encode relevant static or inherent data about the monitored assets such as IP address MAC addresses checksums etc. Although the learned asset activity profile is described herein as separate profile from the learned data traffic profile of it is to be appreciated that the data encoded in both profiles can be compiled into a single composite profile of learned activity for the automation system.

Since the learned profile s can also encode learned allowable non periodic data traffic during the training period as well as the source of such non periodic traffic the comparison analyzer can identify data traffic originating from an unauthorized source that could adversely affect the system either deliberately or unintentionally. For example if a predetermined amount of unknown data traffic from an unlearned source is detected by the comparison analyzer where the predetermined amount can be encoded in the learned profile s as a threshold defined for traffic of unknown origin the comparison analyzer can instruct response component to implement a countermeasure defined for such an event. Such countermeasures can include but are not limited to blocking the source of the unknown traffic blocking a port in a network switch implementing an access rule in a router that reduces or filters the unexpected data traffic applying a rate limiting rule to traffic originating from the unknown source increasing a priority of the learned data traffic with respect to the unexpected data traffic or other appropriate countermeasures.

Comparison analyzer can also monitor controller network devices and controlled devices directly in order to identify deviations from the learned patterns of asset activity as encoded in the learned profile s e.g. learned asset activity profile of . As with monitoring of data traffic on the network potential security issues can be identified based on a comparison of monitored activity with the learned profile s generated during the training period. This can include for example detecting when an average number of network retries initiated by the controller exceeds the learned pattern of network retries in excess of the threshold associated with that measure. The learning component can also monitor the controller and identify when a frequency of attempts to access the controller exceeds a learned frequency as encoded in the learned profile s and trigger a predefined countermeasure associated with this contingency. Other network activity that can be detected by the comparison analyzer and for which countermeasure can be triggered can include an excessive number of denial of service messages from the controller repeated forced re opening of a connection between the controller and another device a number of concurrent open communication connections in excess of a threshold occurrence of a communication connection between a controller and a device being closed and a new connection to the device being opened from a new source etc.

In order to detect attempts to hijack assets on the network one or more embodiments the comparison analyzer can also monitor for duplicate IP addresses on the network which can indicate an attempt by an entity to claim an IP address from a network device. In some cases such an entity can assert that its MAC address should be associated with the IP address being claimed. If this attempt to claim the IP address is successful the unauthorized entity can assume control of the portion of the industrial process that should be performed by the device originally associated with the hijacked IP address. The comparison analyzer can monitor for such attempts by detecting when an IP address previously associated with a first MAC address has become associated with a second MAC address.

Comparison analyzer can also detect unauthorized attempts to alter a device s configuration or software settings by periodically comparing a checksum associated with a device with the corresponding checksum recorded during the training period as discussed supra . If a difference is detected an appropriate predetermined countermeasure can be initiated as discussed in more detail below .

One or more embodiments of the comparison analyzer can also identify attempts to inject unauthorized packets onto the network . These can include improperly formatted packets addressed to a device e.g. the controller an I O device etc. in an attempt to induce excessive processing at the target device thereby slowing the responsiveness of the device and adversely affecting the controlled process. Unauthorized packets detectable by the comparison analyzer can also include properly formatted packets having valid connection identifiers and transaction identifiers recognizable by the target network device but which originate from an unlearned source and which attempt to alter an input or an output of a device.

In addition to detecting suspicious data applied to the network from an unlearned source the learning component can also detect excessive data originating from a known source. Although such data may not be malicious if directed at the controller these excessive messages may cause the controller to spend excessive time processing the messages thereby compromising control of the automation system. Accordingly the response component can respond to detection of such excessive data traffic and generate a predefined response e.g. apply a rate limiting rule to the known source of the data instruct the controller to switch to an alternate communication channel or VLAN etc. .

The countermeasures generated by the response component for a given security problem can be determined in part by a set of countermeasure rules associated with the learning component . According to one or more embodiments the learning component can allow a user to pre configure one or more selected countermeasures for each security scenario to be monitored e.g. via user interface . For example a rule can be configured instructing the learning component that in the event that excessive data traffic originating from an unknown source is detected by the comparison analyzer the response component is to apply a rate limiting rule to data originating from the unknown source. Another rule can stipulate that the controller is to be placed on a specified alternate communication channel if the periodicity of the data traffic between the controller and its associated I O modules or controlled devices deviates from the learned pattern. In one or more embodiments countermeasure rules can take the form of IF THEN statements where the IF conditions corresponding to various security concern scenarios can be matched with respective THEN instructions corresponding to a selected countermeasure as illustrated in .

Advantageously the learning component can allow multiple prioritized countermeasures to be pre configured for a given security problem. This can ensure that increasingly aggressive countermeasures are applied to the identified security problem until the detected problem has been mitigated as determined by the comparison analyzer . For example when configuring a countermeasure rule for the scenario in which the comparison analyzer identifies excessive data traffic from an unknown source a user may configure a first response countermeasure e.g. increase the communication priority of the learned network traffic with respect to the network traffic originating from the unknown source a second response countermeasure e.g. apply a rate limiting rule to the unknown source and a third response countermeasure e.g. block the unknown source . When the comparison analyzer subsequently detects that a rate of data traffic from an unknown source exceeds an acceptable threshold the response component can initiate the first response countermeasure by increasing the communication priority of the learned network traffic. The comparison analyzer continues to monitor the network to determine if the rate of traffic from the unknown source reduces to an acceptable rate e.g. below the threshold within a predetermined amount of time. If the rate of traffic from the unknown source continues to exceed the threshold after the predetermined amount of time the response component can initiate the second response countermeasure by applying a rate limiting rule to the unknown source. If rate continues to exceed the threshold a predetermined amount of time after initiating the second countermeasure the third response countermeasure blocking the unknown source can be initiated by the response component. By configuring the learning component in this way the comparison analyzer and the response component can act as a feedback system that seeks to return abnormal network activity to a learned safe pattern through increasingly strong security countermeasures.

Advantageously the countermeasures enacted by the learning component are not limited to those that alter network traffic in some way but can also include countermeasures targeting the equipment and processes comprising the automation system itself. Examples of such industry specific countermeasures are described with reference to . As in previous examples learning component comprises a comparison analyzer that monitors plant network and or one or more automation assets connected thereto in view of one or more learned profiles . When unexpected or corrupt data traffic is identified by the comparison analyzer as described above response component can generate one or more automated security responses in accordance with one or more predefined rules . Since the detected security issue has the potential to cause abnormal operation of the assets the security responses in these examples are targeted to the automation assets themselves and are intended to mitigate the risk of injury or to protect product integrity during the security alert. For example the response component can be configured to instruct a controller and its associated I O modules to alter their I O addressing e.g. the set of I O addresses used by the controller and I O modules to exchange input and output data in response to specified security issues. This countermeasure can be beneficial if a particular security issue is indicative of a deliberate attempt to remotely hijack the controller and override the controller s program to alter control of the automation system. Another countermeasure can instruct the controller to modify control of a process by switching to a subroutine corresponding to a safe operating mode that minimizes danger to personnel or damage to product. The response component can also cause the controller to be placed on an alternate VLAN.

If the automation asset is an electric motor controlled via motor drive an automated security response from the response component can for example place the motor in a low speed mode initiate an emergency stop for the motor or reconfigure one more parameters of the motor drive in accordance with predetermined settings defined in the rules . Similarly response component can be configured via rules to alter the operation of an industrial robot on the plant network. This can include placing the robot in a safe operating mode e.g. slow mode instructing the robot to return to its home position until otherwise directed or initiating an emergency stop for the robot. In general the learning component can be configured to interface remotely with virtually any networked automation asset and to issue instructions to the asset in response to possible security threats that alter the operation of the asset in a manner that reduces or eliminates the potential for hazardous operation.

It is to be appreciated that the learning component described above can also work in conjunction with the security analysis tool in order to ascertain a suitable countermeasure in response to a detected security issue. For example if the learning component detects a security issue associated with a network vulnerability that had been previously identified by the security analyzer based on the factory description data provided thereto the learning component can implement a rule or policy that had been recommended by the security analyzer as a countermeasure output.

At security output data is determined in accordance with the factory descriptions and processing described above. The security output data can include a set or subset of recommended security components codes parameters settings related inter connection topology connection configurations application procedures security policies rules user procedures and or user practices for example as noted above. At security output data is generated that can be automatically deployed to one or more entities such as users or devices in order to implement various security measures within an automation environment e.g. data file or schema generated to automatically configure devices provide user training and precautions provide security configurations and topologies . At when the security output data has been disseminated entities employ the security data to mitigate network security issues such as unwanted network access and or network attack.

At vulnerability scanning and or auditing on devices networks is performed. This includes revision checks improper configuration checks file system registry database permissions checks user privilege password and or account policy checks checking for susceptibility to common network based attacks searching for open network ports scanning for vulnerable network services learning identity information about end devices users that may enable hacker entry performing vulnerability scanning and auditing on firewalls routers and or other security devices non destructively mapping a topology of IT and automation devices checking revisions and configurations checking user attributes and or checking access control lists. At a determination is made as to whether security issues have been detected such as in accordance with the assessments compliance testing and scanning auditing described above. If no security issues are detected at the process proceeds back to . If security issues are detected at the process proceeds to . At one or more automated security actions are performed to mitigate security threats. This can include automatically correcting security problems such as automatically adjusting security parameters altering network traffic patterns installing new security components removing suspicious components triggering alarms and or automatically notifying entities about detected problems and or suspicions. After automated processing at the process proceeds back to for further security processing analysis scanning and detection.

After the training period at learned patterns are compared to current data patterns in view of predetermined threshold or range settings at . For example if the mean number of factory network packets transmitted is learned to be about 20 000 bytes per second 5000 bytes and a range is set up so that if network traffic goes above 26 000 bytes per second or below 10 000 bytes per second then system security performance is considered acceptable as long as network traffic remains in the selected range. It is noted that thresholds ranges can be set according to user preferences automated determinations and or according to the amount of risk and or costs that are deemed acceptable e.g. for lesser amount of security risk set thresholds closer to learned patterns .

At a determination is made as to whether or not deviations were detected from learned data patterns at . If no deviations are detected the process proceeds back to for further comparison processing. If deviations are detected at then one or more automated actions may be performed. Similar to the process described above this can include automatically correcting security problems such as automatically adjusting security parameters altering network traffic patterns installing new security components removing suspicious components triggering alarms and or automatically notifying entities about detected problems and or suspicions e.g. sending an e mail alerting a pager calling a phone number generating a file sounding an alarm interrupting a web session opening an instant messaging service and so forth . After automated processing at the process proceeds back to for further security processing comparison and detection.

At non periodic communication that affects data traffic on the network is identified during the training period and the origin of the non periodic traffic is noted. This non periodic communication can include for example data access requests originating from an office network communicatively coupled with the plant network e.g. a production report application that polls the controller for production data automation assets on the plant network that transmit data in response to detected events or other such types of communication. In one or more embodiments the data traffic patterns learned at steps and can be encoded in one or more learned profiles that are subsequently used to identify deviations from the learned patterns.

At data traffic between the industrial controller and the one or more I O devices is monitored subsequent to the training period. At a determination is made regarding whether the monitored data traffic deviates from the learned patterns in excess of a threshold. For example if the I O updates between the controller and the I O devices begin occurring at longer intervals than those learned during step and the amount of deviation exceeds a threshold amount e.g. a percentage of the average interval the deviation is noted. Such deviations can be indicative of suspicious network activity that could be the result of unauthorized network access. In one or more embodiments the threshold can be calculated automatically from the data collected during steps based in part on observed variations in the data traffic patterns. The threshold can also be manually configured or modified.

If no deviation is detected at the method returns to step and continues monitoring the data traffic. Alternatively if a deviation is detected an automated security action is performed at to counter the suspicious activity. According to one or more embodiments these automated security actions can be predefined by a user and can include such countermeasures as applying a rate limiting rule to data traffic on a selected portion of the network placing one or more automation assets on a different VLAN or communication channel blocking a source of suspicious data traffic instructing the controller and I O device to employ an alternate addressing scheme e.g. re addressing the I O between the controller and the I O points of the device or other such countermeasures. One or more automated countermeasures can also alter a portion of the automated process being regulated by the control system in order to minimize the risk of injury or product damage as a result of the security breach. Such process specific countermeasures can include but are not limited to instructing industrial equipment e.g. a motor an industrial robot a mixer a sheet metal stamping press etc. to operate in a safe mode until instructed otherwise stopping or disconnecting power to selected dangerous equipment instructing the controller to regulate a process according to an alternate safe routine until the security issue is resolved etc.

At a determination is made regarding whether the data traffic on the plant network has returned to its learned pattern. If the data traffic has returned to an acceptable pattern the method returns to step and continues monitoring for deviations. If the data traffic has not been restored to its learned pattern the method returns to step and the automated security action is continued or a secondary security action is performed. The security actions continue to be applied until network activity has been returned to its expected pattern.

Embodiments systems and components described herein as well as industrial control systems and industrial automation environments in which various aspects set forth in the subject specification can be carried out can include computer or network components such as servers clients programmable logic controllers PLCs communications modules mobile computers wireless components control components and so forth which are capable of interacting across a network. Computers and servers include one or more processors electronic integrated circuits that perform logic operations employing electric signals configured to execute instructions stored in media such as random access memory RAM read only memory ROM a hard drives as well as removable memory devices which can include memory sticks memory cards flash drives external hard drives and so on.

Similarly the term PLC as used herein can include functionality that can be shared across multiple components systems and or networks. As an example one or more PLCs can communicate and cooperate with various network devices across the network. This can include substantially any type of control communications module computer Input Output I O device sensor actuator and human machine interface HMI that communicate via the network which includes control automation and or public networks. The PLC can also communicate to and control various other devices such as I O modules including analog digital programmed intelligent I O modules other programmable controllers communications modules sensors actuators output devices and the like.

The network can include public networks such as the internet intranets and automation networks such as control and information protocol CIP networks including DeviceNet and ControlNet. Other networks include Ethernet DH DH Remote I O Fieldbus Modbus Profibus CAN wireless networks serial protocols and so forth. In addition the network devices can include various possibilities hardware and or software components . These include components such as switches with virtual local area network VLAN capability LANs WANs proxies gateways routers firewalls virtual private network VPN devices servers clients computers configuration tools monitoring tools and or other devices.

With reference to an example environment for implementing various aspects of the aforementioned subject matter includes a computer . The computer includes a processing unit a system memory and a system bus . The system bus couples system components including but not limited to the system memory to the processing unit . The processing unit can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit .

The system bus can be any of several types of bus structure s including the memory bus or memory controller a peripheral bus or external bus and or a local bus using any variety of available bus architectures including but not limited to 8 bit bus Industrial Standard Architecture ISA Micro Channel Architecture MSA Extended ISA EISA Intelligent Drive Electronics IDE VESA Local Bus VLB Peripheral Component Interconnect PCI Universal Serial Bus USB Advanced Graphics Port AGP Personal Computer Memory Card International Association bus PCMCIA and Small Computer Systems Interface SCSI .

The system memory includes volatile memory and nonvolatile memory . The basic input output system BIOS containing the basic routines to transfer information between elements within the computer such as during start up is stored in nonvolatile memory . By way of illustration and not limitation nonvolatile memory can include read only memory ROM programmable ROM PROM electrically programmable ROM EPROM electrically erasable PROM EEPROM or flash memory. Volatile memory includes random access memory RAM which acts as external cache memory. By way of illustration and not limitation RAM is available in many forms such as synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM and direct Rambus RAM DRRAM .

Computer also includes removable non removable volatile non volatile computer storage media. illustrates for example a disk storage . Disk storage includes but is not limited to devices like a magnetic disk drive floppy disk drive tape drive Jaz drive Zip drive LS 100 drive flash memory card or memory stick. In addition disk storage can include storage media separately or in combination with other storage media including but not limited to an optical disk drive such as a compact disk ROM device CD ROM CD recordable drive CD R Drive CD rewritable drive CD RW Drive or a digital versatile disk ROM drive DVD ROM . To facilitate connection of the disk storage devices to the system bus a removable or non removable interface is typically used such as interface .

It is to be appreciated that describes software that acts as an intermediary between users and the basic computer resources described in suitable operating environment . Such software includes an operating system . Operating system which can be stored on disk storage acts to control and allocate resources of the computer system . System applications take advantage of the management of resources by operating system through program modules and program data stored either in system memory or on disk storage . It is to be appreciated that one or more embodiments of the subject disclosure can be implemented with various operating systems or combinations of operating systems.

A user enters commands or information into the computer through input device s . Input devices include but are not limited to a pointing device such as a mouse trackball stylus touch pad keyboard microphone joystick game pad satellite dish scanner TV tuner card digital camera digital video camera web camera and the like. These and other input devices connect to the processing unit through the system bus via interface port s . Interface port s include for example a serial port a parallel port a game port and a universal serial bus USB . Output device s use some of the same type of ports as input device s . Thus for example a USB port may be used to provide input to computer and to output information from computer to an output device . Output adapter is provided to illustrate that there are some output devices like monitors speakers and printers among other output devices which require special adapters. The output adapters include by way of illustration and not limitation video and sound cards that provide a means of connection between the output device and the system bus . It should be noted that other devices and or systems of devices provide both input and output capabilities such as remote computer s .

Computer can operate in a networked environment using logical connections to one or more remote computers such as remote computer s . The remote computer s can be a personal computer a server a router a network PC a workstation a microprocessor based appliance a peer device or other common network node and the like and typically includes many or all of the elements described relative to computer . For purposes of brevity only a memory storage device is illustrated with remote computer s . Remote computer s is logically connected to computer through a network interface and then physically connected via communication connection . Network interface encompasses communication networks such as local area networks LAN and wide area networks WAN . LAN technologies include Fiber Distributed Data Interface FDDI Copper Distributed Data Interface CDDI Ethernet IEEE 802.3 Token Ring IEEE 802.5 and the like. WAN technologies include but are not limited to point to point links circuit switching networks like Integrated Services Digital Networks ISDN and variations thereon packet switching networks and Digital Subscriber Lines DSL .

Communication connection s refers to the hardware software employed to connect the network interface to the bus . While communication connection is shown for illustrative clarity inside computer it can also be external to computer . The hardware software necessary for connection to the network interface includes for exemplary purposes only internal and external technologies such as modems including regular telephone grade modems cable modems and DSL modems ISDN adapters and Ethernet cards.

What has been described above are preferred aspects of the disclosed subject matter. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the disclosed subject matter but one of ordinary skill in the art will recognize that many further combinations and permutations of the disclosed subject matter are possible. Accordingly the disclosed subject matter is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims.

