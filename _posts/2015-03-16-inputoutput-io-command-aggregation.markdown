---

title: Input/output (I/O) command aggregation
abstract: Systems and techniques relating to input/output (I/O) command aggregation include, according to at least one implementation, a method including receiving a first command from a device driver through interface hardware for accessing a storage device; identifying the received command as an aggregation command having a tag corresponding to consolidated command information; communicating a transfer ready notification to the device driver; receiving the consolidated command information from the device driver, wherein the consolidated command information includes memory addresses and data transfer counts for a defined quantity of aggregated I/O commands or for aggregated I/O commands that are received within a defined period of time; storing the consolidated command information in memory; receiving a second command including the tag corresponding to the consolidated command information; and processing the second command with respect to the storage device based on the memory addresses and the data transfer counts in the consolidated command information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09176672&OS=09176672&RS=09176672
owner: Marvell International Ltd.
number: 09176672
owner_city: Hamilton
owner_country: BM
publication_date: 20150316
---
This disclosure is a continuation of and claims the benefit of the priority of U.S. patent application Ser. No. 13 851 908 filed Mar. 27 2013 entitled SCSI I O COMMAND AGGREGATION which claims the benefits of the priority of U.S. Provisional Application Ser. No. 61 618 238 filed Mar. 30 2012 and entitled I O Aggregation for the SCSI of an SSD Device which is hereby incorporated by reference in its entirety. U.S. patent application Ser. No. 13 851 908 filed Mar. 27 2013 is also a continuation in part of and claims the benefit of the priority of U.S. patent application Ser. No. 13 645 370 filed Oct. 4 2012 and entitled Method and Apparatus for Effectively Increasing a Command Queue Length for Accessing Storage which claims the benefit of priority of U.S. Provisional Application Ser. No. 61 543 929 filed Oct. 6 2011 and entitled Use Information Command to Increase the Q Depth of SATA NCQ Command Unlimitedly the contents of each of which is hereby incorporated by reference in their entirety.

The present disclosure describes systems and techniques relating to input output I O command aggregation for Small Computer System Interface SCSI enabled devices.

A solid state disk SSD comprises an array of solid state electronic memory chips. A SSD generally includes two parts. A control unit and a storage unit e.g. Dynamic Random Access Memory DRAM FLASH memory etc. . The storage unit is responsible for storing data and the control unit is responsible for reading and writing data. SSD technology is high speed durable and shockproof noiseless and lightweight. As a result SSD drives are suited to widespread applications in fields such as the military vehicle based devices industrial control video monitoring network monitoring network terminals electrical power medical care aviation and navigational devices.

Small computer system interface SCSI is a system level interface standard for physically connecting and transferring data between computers and peripheral devices e.g. hard disk drives solid state disk drives floppy disk drives optical disk drives printers scanners etc. . The SCSI standard defines commands protocols and electrical and optical interfaces. Some characteristics associated with the SCSI standard include multi tasking large bandwidth low CPU usage and hot swapping. SCSI host adapters and peripheral devices e.g. SSD devices can employ an Advanced SCSI Programming Interface ASPI for communication between the host adapters and peripheral devices. ASPI is an application programming interface which standardizes communication on a computer bus between a SCSI host adapter and SCSI peripherals.

Serial Attached SCSI interface SAS is a newer generation SCSI technology. SAS is a point to point serial protocol that is used to move data to and from computer storage devices such as hard drives SSD drives tape drives optical drives and the like. SAS uses the standard SCSI command set.

The present disclosure describes systems and techniques relating to input output I O command aggregation for Small Computer System Interface SCSI enabled devices.

In an implementation a method includes receiving a first command for a target device where the first command includes a first memory address and a first data transfer count receiving a second command for the target device where the second command includes a second memory address and a second data transfer count and where the first and second commands are entirely read commands or entirely write commands aggregating the first and second memory addresses and the first and second data transfer counts into consolidated command information generating a packet command that includes a packet tag and a data size corresponding to the consolidated command information communicating the packet command to the target device in response to receiving a transfer ready notification from the target device communicating the consolidated command information to the target device and communicating additional information to the target device.

These and other implementations can optionally include one or more of the following features. When the first and second commands are entirely read commands communicating the additional information can comprise generating a packet read command that includes the packet tag communicating the packet read command to the target device and receiving data corresponding to the consolidated command information from the target device. When the first and second commands are entirely write commands communicating the additional information can comprise generating a packet write command that includes the packet tag communicating the packet write command to the target device and in response to receiving a transfer ready notification from the target device communicating data corresponding to the consolidated command information to the target device. A consolidated command table can be generated including the first and second memory addresses and the first and second data transfer counts and wherein the data size corresponding to the consolidated command information is a data size of the consolidated command table. The consolidated command table can include a list of sub commands having a specified command format. Communicating the consolidated command information to the target device can comprise communicating the consolidated command table to the target device. The packet command can include an operation code designating the packet command as an aggregation command. The first and second commands can be received within a defined period of time. The consolidated command information can include memory addresses and data transfer counts for a defined quantity of commands.

In an implementation a device includes a controller configured to communicate with a device driver through interface hardware using the small computer system interface SCSI standard where the controller is further configured to receive and process commands for accessing storage including performing operations comprising receiving a first command including a packet tag and a data size corresponding to consolidated command information identifying the first command as a packet command associated with the consolidated command information communicating a transfer ready notification to the device driver receiving the consolidated command information from the device driver storing the consolidated command information in memory and receiving a second command including the packet tag.

These and other implementations can optionally include one or more of the following features. When the second command is a packet read command communicating data stored in memory corresponding to the consolidated command information to the device driver. When the second command is a packet write command communicating a transfer ready notification to the device driver receiving data from the device driver and storing the received data in memory in accordance with the consolidated command information. The consolidated command information can be a command table including memory addresses and data transfer counts corresponding to a plurality of commands for accessing storage. The packet command can include an operation code designating the packet command as an aggregation command. The consolidated command information can include memory addresses and data transfer counts for a defined quantity of commands.

In an implementation a system includes a host computer a storage device including interface hardware configured to communicate with the host computer a controller configured to communicate with the host computer through the interface hardware using a small computer system interface SCSI standard and memory to store data persistently a host bus adapter communicatively coupled to the host computer the host bus adapter including a storage device driver configured to receive commands to access the memory of the storage device aggregate the received commands into consolidated command information including a memory address and a data transfer count from each of the received commands generate a packet command including a packet tag and a data size corresponding to the consolidated command information communicate the packet command to the storage device and in response to receipt of a transfer ready notification from the storage device communicate the consolidated command information to the storage device and wherein the controller included in the storage device is configured to receive and process the consolidated command information communicated by the storage device driver including performing operations comprising processing at least one of a packet read command and a packet write command including the packet tag based on the memory addresses and the data transfer counts in the consolidated command information.

These and other implementations can optionally include one or more of the following features. Processing a packet read command can include communicating data stored in the memory corresponding to the consolidated command information to the storage device driver. Processing a packet write command can include communicating a transfer ready notification to the storage device driver receiving data from the storage device driver and storing the received data in the memory in accordance with the consolidated command information. The packet command can include an operation code designating the packet command as an aggregation command. The storage device driver can be configured to aggregate the received commands based on at least one of the time when the commands are received and a defined quantity of commands.

As the processing speed of SSD devices increase so does the demand for small block data access through SCSI and higher I O per second IOPS rates for processors. A processor in a host system usually must process every I O request individually. Processing I O requests one at a time may lead to a lower IOPS rate and put more pressure on the processor. Consequently within the context of small block data access through SCSI processors may pose a bottleneck to achieving higher IOPS rates.

The described systems and techniques may result in an increased effective IOPS rate for SCSI peripherals while reducing pressure on processors. For example by consolidating I O commands that would normally be processed individually by a host processor the host processor can effectively process more I O commands thus resulting in an increased IOPS rate for the host processor and system. To achieve an increased IOPS rate a host system can aggregate multiple I O commands into a single I O command and send the single I O command to a storage device for processing. Such consolidation reduces the number of I O commands individually processed by the host system while increasing the potential IOPS rate from the host system s point of view.

The I O aggregation described herein can achieve improved IOPS rates for host systems based on software solutions without the need for hardware modifications. Such software solutions may allow for easier implementation and adoption of I O aggregation.

The described systems and techniques can be implemented in electronic circuitry computer hardware firmware software or in combinations of them such as the structural means disclosed in this specification and structural equivalents thereof. This can include at least one computer readable medium embodying a program operable to cause one or more data processing apparatus e.g. a signal processing device including a programmable processor to perform method operations. Thus program implementations can be realized from a disclosed method system or apparatus and apparatus implementations can be realized from a disclosed system computer readable medium or method. Similarly method implementations can be realized from a disclosed system computer readable medium or apparatus and system implementations can be realized from a disclosed method computer readable medium or apparatus.

Details of one or more implementations are set forth in the accompanying drawings and the description below. Other features and advantages may be apparent from the description and drawings and from the claims.

SSD includes control circuitry for communicating with integrated circuit assemblies . In some implementations control circuitry includes an embedded processor that executes firmware level code to bridge the integrated circuit assemblies with a host system not shown . For example control circuitry may include a NAND flash I O Input Output controller for communicating with a NAND memory and may allow only sequential access to data stored in the NAND flash memory.

SSD includes interface hardware for connecting SSD to a host bus adapter of a host not shown . In some implementations interface hardware includes one or more standard connectors. Examples of standard connectors may include without limitation Small Computer System Interface SCSI Serial Attached SCSI SAS Universal Flash Storage UFS Serial Advanced Technology Attachment SATA USB Universal Serial Bus PCMCIA Personal Computer Memory Card International Association IEEE 1394 Firewire Peripheral Component PCI PCI Express PCIe and interfaces for memory cards such as Multi Media Cards MMCs . In some implementations interface hardware may include multiple pins each corresponding to a specific function. For example pins for power ground send receive transfer complete communication and the like.

While NAND flash memory has been described in the examples for Solid State Drive it should be noted that other memory types also may be used such as without limitation NOR flash EEPROM AND flash EEPROM DiNOR flash EEPROM serial flash EEPROM DRAM SRAM ROM EPROM FRAM MRAM and PCRAM.

Various examples of storage device include a solid state drive e.g. solid state drive in a hard disk drive HDD an optical disk drive and the like. In some implementations storage device includes firmware . Firmware can be code executing on a controller included in storage device operable to bridge the memory components of storage device with an interface of host bus adapter .

In some implementations host bus adapter includes storage device driver for receiving and processing one or more service requests or commands e.g. input and output I O commands also known as read and write commands directed to storage device . For example storage device driver may be configured to manage and control storage and retrieval of data stored in memory of storage device in response to I O commands from host . That is storage device driver may control the flow of I O commands between host and storage device . Storage device driver can aggregate I O commands into an aggregated I O command as will be described in more detail below.

In some implementations storage device driver is a part of a microcomputer system under the control of a microprocessor not shown . For example storage device driver can include read only memory ROM random access memory RAM and other internal circuits.

At a device driver receives input output I O commands from a host system intended for a target device. For example the device driver can receive commands from application processes executing on host requesting to read data from or write data to storage device . In some implementations the device driver can receive I O commands for multiple devices and perform process with the I O commands corresponding to each individual device.

At the device driver aggregates the I O commands received at . As part of this aggregation the device driver aggregates data from the received I O commands into consolidated command information. In some implementations the consolidated command information includes a memory address e.g. logical block address and a data transfer count from each of the commands being aggregated. Generally read and write commands are aggregated separately such that the corresponding consolidated command information only includes data from read commands or data from write commands but not both. In some implementations when the device driver receives I O commands for multiple target devices the device driver aggregates data from the I O commands into consolidated read or write command information for each respective device.

In some implementations the consolidated command information can be defined in a consolidated command table. A consolidated command table may include for example memory addresses and data transfer counts corresponding to each command being aggregated as described below in Table 1 

In some implementations when aggregating received I O commands the device driver may aggregate I O commands that are received within a defined period of time or aggregate I O commands up to specified quantity. The length of the time period or the quantity of aggregated commands may depend on the processing capabilities of the device driver and or the I O processing strength of the target device for example.

At the device driver sends a packet command to the target device. The packet command conforms to the SCSI protocol and includes data necessary for I O command aggregation. For example a packet command can include an operation code op code designating the command as a packet command for I O aggregation a packet tag identifying the specific packet command and a data size value corresponding to consolidated command information i.e. consolidated command information aggregated at .

In some implementations a packet command is similar in form to a standard SCSI write command data out command and is communicated in a similar way as a standard SCSI write command. However unlike a standard SCSI write command a packet command is used to send consolidated command information to a target device.

In some implementations prior to sending the packet command to the target device the host driver can confirm whether the target device is configured to receive the commands necessary for I O command aggregation e.g. packet command packet read command and packet write command .

At the device driver receives a transfer ready notification from the target device. For example in response to receipt of the packet command sent from the device driver at the target device can reply with a transfer ready notification informing the device driver that the target device is ready to receive the data corresponding to the packet command.

At the device driver sends the consolidated command information aggregated at to the target device. In some implementations the consolidated command information is defined in a consolidated command table. The consolidated command table can include for example memory addresses and data transfer counts corresponding to received I O commands.

At in the case where the I O commands aggregated into the consolidated command information at are read commands the device driver sends a packet read command to the target device. The packet read command effectively instructs the target device to process the consolidated command information previously received by the target device as read commands. In some implementations the packet read command includes an op code designating the command as a packet read command and the packet tag used to identify the packet command at . Including the same tag from the packet command allows the target device upon receipt of the packet read command to associate the packet read command with consolidated command information and process the consolidated command information accordingly. That is use of the same packet tag in both the packet command and packet read command can trigger execution of the consolidated commands upon receipt of the packet read command by the target device.

At the device driver receives data corresponding to the consolidated command information from the target device. For example upon receipt of a packet read command including the packet tag from a previous packet command the target device can retrieve data corresponding to consolidated command information from memory and send this data to the device driver. In effect receipt of a packet read command including the packet tag triggers execution of corresponding consolidated commands.

At in the case where the I O commands aggregated into the consolidation command information at are write commands the device driver sends a packet write command to the target device. The packet write command effectively instructs the target device to process the consolidated command information previously received by the target device as write commands. In some implementations the packet write command includes an op code designating the command as a packet write command and the packet tag used to identify the packet command at . Including the same tag from the packet command allows the target device upon receipt of the packet write command to associate the packet write command with consolidated command information and process the consolidated command information accordingly. That is use of the same packet tag in both the packet command and packet write command can trigger execution of the consolidated commands upon receipt of the packet write command by the target device.

At the device driver receives a transfer ready notification from the target device. For example in response to receipt of the packet write command from the device driver the target device can communicate a transfer ready notification to the device driver indicating that the target device is ready to receive data corresponding to the packet write command.

At the device driver sends data corresponding to the consolidated command information to the target device. For example upon receipt of the transfer ready notification from the target device the device driver can send data to be written to memory of the target device in accordance with the consolidated command information.

As shown in in the 8 byte format command descriptor block the row marked is reserved and in the 16 byte format command descriptor block the three rows marked and are reserved. In the 8 byte format command descriptor block the two rows marked and represent the transfer length in number of blocks and in the 16 byte format command descriptor block the four rows marked and represent transfer length in number of blocks. In the 8 byte format command descriptor block the four rows marked and specify logical block addresses LBA and in the 16 byte format command descriptor block the eight rows marked and specify LBAs.

A main difference between the 8 byte format command descriptor block and the 16 byte format command descriptor block is the quantity of information described. In some implementations whether or not an 8 byte sub command or a 16 byte sub command is used is determined by factors such as hardware capabilities and the number of sub commands to be aggregated. For example larger capacity storage devices may have lengthy LBAs thus making use of the 16 byte sub command more practical than the 8 byte sub command.

A few embodiments have been described in detail above and various modifications are possible. The disclosed subject matter including functional operations described in this specification can be implemented in electronic circuitry computer hardware firmware software or in combinations of them such as the structural means disclosed in this specification and structural equivalents thereof including potentially a program operable to cause one or more data processing apparatus to perform the operations described such as a program encoded in a computer readable medium which can be a memory device a storage device a machine readable storage substrate or other physical machine readable medium or a combination of one or more of them .

The term data processing apparatus encompasses all apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them.

While this specification contains many specifics these should not be construed as limitations on the scope of what may be claimed but rather as descriptions of features that may be specific to particular embodiments. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments. Other embodiments fall within the scope of the following claims.

