---

title: Communication apparatus and method thereof
abstract: A first table used for compression of a message to be transmitted to another communication apparatus and decompression of a compressed message received from the other communication apparatus is generated. After the first table is generated, the first table is updated based on data contained in a message to be transmitted to the other communication apparatus. The other communication apparatus is guided to transmit a predetermined message corresponding to a specific index in the first table. Integrity of the updated first table and a second table used in the other communication apparatus by referring to the predetermined message received from the other communication apparatus. The second table is used for compression of a message to be transmitted to the communication apparatus and decompression of a compressed message received from the communication apparatus in the other communication apparatus.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09648145&OS=09648145&RS=09648145
owner: CANON KABUSHIKI KAISHA
number: 09648145
owner_city: Tokyo
owner_country: JP
publication_date: 20150731
---
HTTP HyperText Transfer Protocol is one of protocols widely used as Internet standard techniques in general. In IETF Internet Engineering Task Force a new version HTTP 2 of the HTTP standard is now being stipulated see http www.ietf.org id draft ietf httpbis http2 13.txt Jun. 17 2014 .

A new function of HTTP 2 is an HTTP header compression function. The HTTP header compression function performs data compression of HTTP header information using a kind of dictionary called a header compression table and transmits receives only a difference in HTTP header information between a server and a client see http www.ietf.org id draft ietf httpbis header compression 08.txt Jun. 6 2014 . This reduces the data size of an HTTP communication message transmitted received between a server and a client.

However in the HTTP header compression function generation of a header compression table depends on implementation of an apparatus. If the integrity of the header compression table is lost between communication apparatuses a communication error may be generated. A demand has arisen for measures for determining the integrity of a function of generating a header compression table in each apparatus.

In one aspect a communication apparatus comprising a generation unit configured to generate a first table used for compression of a message to be transmitted to another communication apparatus and decompression of a compressed message received from the other communication apparatus wherein the first table associates an index with data an update unit configured to update the first table based on data contained in a message to be transmitted to the other communication apparatus after the first table is generated by the generation unit a guide unit configured to guide the other communication apparatus to transmit a predetermined message corresponding to a specific index in the first table by the other communication apparatus and a determination unit configured to determine integrity of the first table updated by the update unit and a second table used in the other communication apparatus by referring to the predetermined message received from the other communication apparatus wherein the second table is used for compression of a message to be transmitted to the communication apparatus and decompression of a compressed message received from the communication apparatus in the other communication apparatus.

According to the aspect the integrity between generation functions for tables used for compression of a message and decompression of a compressed message can be determined.

Further features of the present invention will become apparent from the following description of exemplary embodiments with reference to the attached drawings.

An information processing apparatus and information processing method for implementing a communication apparatus according to embodiments of the present invention will be described below in detail with reference to the accompanying drawings. Note that the following embodiments are not intended to limit the claims of the present invention and not all the combinations of features described in the embodiments are necessarily essential to the solve of the present invention.

The arrangement of an information processing system according to the first embodiment is shown in the block diagram of . A communication apparatus has for example a wireless network communication function to comply with IEEE802.11. A communication apparatus which is a communication partner of the communication apparatus has the same functions and arrangement as those of the communication apparatus and is connected to the communication apparatus through a network . The communication apparatuses and connected with each other through the network form an information processing system.

The communication apparatuses and are information processing apparatuses such as a digital camera digital video camera mobile phone smartphone tablet device personal computer server apparatus and the like. Note that Wi Fi Bluetooth ZigBee RFID Radio Frequency Identifier or the like may be used as the wireless network communication function of the communication apparatuses and . The communication is not limited to a wireless network and may use wired network communication or a combination of wireless network communication and wired network communication.

An example in which the communication apparatuses and perform directly wireless network connection will be explained but connection through a wireless access point may be performed. After the wireless network connection the communication apparatuses and perform communication according to HTTP 2. Although the arrangement of the communication apparatus will be described below the communication apparatus also has the same arrangement and a description of the arrangement of the communication apparatus will be omitted. An example in which the two communication apparatuses and perform communication will be described. However it is only necessary that the number of communication apparatuses is at least two and the number of communication apparatuses that perform communication is not limited.

A microprocessor CPU executes various programs stored in a read only memory ROM and a storage unit using a random access memory RAM as a work memory and controls an arrangement to be described later through a system bus implementing a communication function to be described later . The storage unit is a recording medium such as a hard disk drive HDD solid state drive SSD or flash memory. The storage unit stores data such as image contents and video contents in addition to programs such as an operating system OS .

The CPU displays on a display unit a graphical user interface GUI for allowing the user to operate the communication apparatus . The CPU acquires a user instruction to the GUI through an operation unit . The CPU controls a communication unit to connect to the network or to perform directly wireless network connection with the communication apparatus .

The display unit is a display device such as a liquid crystal display LCD . The operation unit is a keyboard a pointing device various buttons a dial or a touch panel. When the touch panel is used as the operation unit or part of it the touch panel and the LCD of the display unit are integrally constituted.

The functional arrangement of the communication apparatus is shown in the block diagram of . shows a functional arrangement when the communication apparatus is a server apparatus. The functional arrangement of a client apparatus to be referred to as a client hereinafter such as the communication apparatus is constituted by excluding an integrity determination unit from the arrangement shown in .

A control unit controls all the function modules of the communication apparatus . A communication control unit controls the communication unit to perform for example communication control of a wireless network communication scheme between the communication apparatuses and . A display control unit controls the display unit to perform display control of the GUI in the communication apparatus .

An operation control unit controls the operation unit to perform control of an operation input from the user in the communication apparatus . A storage control unit controls the RAM or the storage unit to store or delete processing data or data such as image content or video content.

A TCP IP communication control unit performs communication control of the TCP IP Transmission Control Protocol Internet Protocol scheme between the communication apparatus and the client using the communication control unit . Note that the TCP IP communication control unit performs not only TCP IP communication but also communication control of a scheme using UDP User Datagram Protocol .

An HTTP communication control unit performs communication control of the HTTP 2 scheme between the communication apparatus and the client using the TCP IP communication control unit . The HTTP communication control unit also performs communication control of the HTTPS HTTP Security scheme using TLS Transport Layer Security between the communication apparatuses and .

A service control unit provides a service to the client using the HTTP communication control unit or controls the use of a service provided by the client. In this embodiment the service control unit uses DLNA Digital Living Network Alliance UPnP Universal Plug and Play and a web service scheme. Note that the service schemes are not limited to them and other service schemes are also available including SOAP Simple Object Access Protocol REST Representational State Transfer and AtomPub Atom Publishing protocol .

A header compression unit performs compression processing decompression processing of an HTTP header in HTTP 2 based on a header compression table. The header compression unit of the client compresses an HTTP header to be referred to as an HTTP request header hereinafter in an HTTP request message generated by the HTTP communication control unit . Also the header compression unit of the client decompresses a compressed HTTP header in an HTTP response message received by the HTTP communication control unit from the communication apparatus . Note that an HTTP request message will be sometimes called a request and an HTTP response message will be sometimes called a response .

The header compression unit of the communication apparatus serving as the server apparatus compresses an HTTP header to be referred to as an HTTP response header hereinafter in a response generated by the HTTP communication control unit . The header compression unit of the communication apparatus decompresses a compressed HTTP request header in a request received by the HTTP communication control unit from the communication apparatus .

A table generation unit generates an initial header compression table defined in HTTP 2. An example of the initial header compression table in this embodiment will be described later. A table update unit updates the header compression table based on an HTTP request header that has been compressed and transmitted by the header compression unit and the HTTP communication control unit . The table update unit updates the header compression table based on an HTTP response header that has been received and decompressed by the HTTP communication control unit and the header compression unit .

The integrity determination unit generates a dummy response to be described later and determines the integrity between the functions to be referred to as a header compression table generation function hereinafter of the header compression unit table generation unit and table update unit and the header compression table generation function of the communication apparatus .

The structure of the header compression table will be explained with reference to . A header compression table includes a request header compression table used for compression and decompression processes of an HTTP header and a response header compression table used for similar processes. In the following description the request header compression table will be referred to as a Req table and the response header compression table will be referred to as a Res table .

The Req table is constituted by an index indicating a record number in this table a request header name and a request header value . Similarly the Res table is constituted by an index indicating a record number in this table a response header name and a response header value .

An outline of a communication sequence between the communication apparatuses and will be explained with reference to the sequence chart of . shows an outline of a communication sequence from the start of communication between the communication apparatuses and after network connection to disconnection of the communication.

The communication apparatuses and perform establishment of HTTP communication connection S . After the HTTP communication connection is established the communication apparatus transmits a request. In response to this HTTP request the communication apparatus transmits a dummy response for determining the integrity of the header compression table generation function S . Note that details of the dummy response will be described later.

Then the communication apparatus issues a request by HTTP 2 based on an HTML file included in the received dummy response. The communication apparatus determines the integrity of the header compression table generation function based on the received request S . Based on the integrity determination result the communication apparatus transmits to the communication apparatus a response to the request received in step S S .

The communication apparatuses and perform HTTP communication transmission reception of a request and transmission reception of a response by HTTP 2 S . After that the communication apparatuses and disconnect the HTTP communication connection S . However the HTTP communication by HTTP 2 in step S is performed when it is determined in step S that the integrity of the header compression table generation function is maintained.

In this manner at the start of HTTP communication between the communication apparatuses and the communication apparatus determines the integrity between the header compression table generation function of the communication apparatus and that of the communication apparatus . Based on the integrity determination result the communication apparatus determines whether HTTP communication by HTTP 2 is possible. Although not shown in when it is determined that HTTP communication by HTTP 2 is impossible for example the communication apparatuses and can shift to HTTP communication by HTTP 1.1.

Establishment of HTTP communication connection S will be explained with reference to the sequence chart of . First establishment of a TCP session SA is performed between the communication apparatuses and . The communication apparatus transmits a TCP connection request SYN frame to the communication apparatus S and the communication apparatus transmits a TCP connection request response SYN ACK frame to the communication apparatus S . The communication apparatus transmits a response ACK frame to the communication apparatus S establishing the TCP session.

Then establishment of a TLS session between the communication apparatuses and SB is performed. The communication apparatus transmits a list Client Hello of usable encryption and compression algorithms to the communication apparatus S . The communication apparatus transmits information Server Hello of decided encryption and compression algorithms to the communication apparatus S .

Further the communication apparatus transmits a root certificate and a server certificate to the communication apparatus S and transmits server key information S . The communication apparatus transmits a completion message Server Hello Done of the series of processes to the communication apparatus S .

The communication apparatus transmits key information Pre Master Secret to the communication apparatus S and transmits a preparation completion message Change Cipher Spec of the encryption algorithm S . Thereafter the communication apparatus transmits a completion message Finished of key exchange and authentication processing to the communication apparatus S .

The communication apparatus transmits a preparation completion message Change Cipher Spec of the encryption algorithm to the communication apparatus S and transmits a success message Finished of key exchange and authentication processing S thereby establishing the TLS session. After the TCP session and the TLS session are established HTTP communication connection is performed.

Transmission reception of a request and dummy response S will be explained with reference to the sequence chart of . The communication apparatus generates the new header compression table S generates a request and compresses an HTTP request header using the Req table S . The communication apparatus updates the Req table based on the generated HTTP request header S .

The communication apparatus transmits the request to the communication apparatus by HTTP 2 S . The transmission of the request S is constituted by transmission of the following frames 

step S transmission of HEADERS 0 or more CONTINUATION frames representing an HTTP request line and an HTTP request header 

Upon receiving the request the communication apparatus newly generates the header compression table S and updates the Req table based on the HTTP request header of the received request S . The communication apparatus generates a dummy response to the received request and compresses an HTTP response header using the Res table S . The communication apparatus updates the Res table based on the generated HTTP response header S .

If the communication apparatus receives a request from the communication apparatus for the first time or if it detects a syntax error from the request of the communication apparatus it generates a dummy response. The dummy response for determining the integrity of the header compression table generation function includes an HTML file describing a plurality of requests to be transmitted to the communication apparatus after the communication apparatus is caused to start new HTTP communication.

This request includes information for allowing the communication apparatus to discriminate a request for determining the integrity of the header compression table generation function details of which will be described later. The request including information indicating a request for determining the integrity of the header compression table generation function is sometimes called an integrity determination request .

Then the communication apparatus transmits the dummy response to the communication apparatus by HTTP 2 S . The transmission of the dummy request S is constituted by transmission of the following frames 

Upon receiving the dummy response the communication apparatus updates the Res table based on the HTTP response header of the dummy response S .

Determination of the integrity of the header compression table generation function S will be explained with reference to the sequence charts of . The communication apparatus establishes new HTTP communication connection between the communication apparatuses and in accordance with an HTML file included in the dummy response in order to start new HTTP communication and transmit a request S . The communication apparatus generates the new header compression table S .

Then the following processing is repeated until the communication apparatus transmits all requests described in the HTML file included in the dummy response. The communication apparatus reads requests of one line that are described in the HTML file included in the dummy response S . The communication apparatus generates from the read request a request integrity determination request to be transmitted to the communication apparatus and compresses the HTTP request header using the Req table S .

The communication apparatus updates the Req table based on the generated HTTP request header S . The communication apparatus transmits the request to the communication apparatus by HTTP 2 S . The transmission of the request S is the same as the processing of step S shown in and a detailed description thereof will not be repeated.

Upon receiving the request the communication apparatus generates the new header compression table at the start of new HTTP communication in which the header compression table does not exist S . The communication apparatus updates the Req table based on the HTTP request header of the received request S .

In this case the request received by the communication apparatus is the integrity determination request. From the structure of the updated Req table the communication apparatus determines the integrity between the header compression table generation function of the communication apparatus and that of the communication apparatus S . Details of the determination of the integrity will be described later.

The communication apparatus generates a default response representing normal processing with respect to the received integrity determination request and compresses the HTTP response header using the Res table S . The communication apparatus updates the Res table based on the generated HTTP response header S . After that the communication apparatus transmits the response to the communication apparatus by HTTP 2 S . The transmission of the response S is the same as the processing of step S shown in and a detailed description thereof will not be repeated.

Upon receiving the response the communication apparatus updates the Res table based on the response header of the response S . The communication apparatus determines whether all requests described in the HTML file included in the dummy response have been transmitted S . If an untransmitted request remains the process is returned to step S. If transmission of all the requests is completed the communication apparatus disconnects the HTTP communication connection between the communication apparatuses and that has been established in step S S .

Transmission of a response based on the determination result S will be explained with reference to the sequence chart of . The communication apparatus determines the integrity between the header compression table generation function of the communication apparatus and that of the communication apparatus . If it is determined that the integrity is maintained step SA is executed. If it is determined that the integrity is lost step SB is executed.

If it is determined that the integrity is maintained SA the communication apparatus generates a response corresponding to the request received in step S and compresses the HTTP response header using the Res table S . The communication apparatus updates the Res table based on the generated HTTP response header S . The Res table used here is the Res table of the header compression table that has been generated in step S. The communication apparatus transmits the response to the communication apparatus by HTTP 2 S . The transmission of the response S is the same as the processing of step S shown in and a detailed description thereof will not be repeated.

If it is determined that the integrity is lost SB the communication apparatus notifies the communication apparatus of an error and ends the communication by HTTP 2. That is the communication apparatus transmits a RST STREAM frame in HTTP 2 to the communication apparatus S and transmits a GOAWAY frame in HTTP 2 to the communication apparatus S .

HTTP communication by HTTP 2 S will be explained with reference to the sequence chart of . The communication apparatus generates a request and compresses an HTTP request header using the Req table S . The communication apparatus updates the Req table based on the generated HTTP request header S . The Req table used here is the Req table of the header compression table that has been generated in step S. The communication apparatus transmits the request to the communication apparatus by HTTP 2 S . The transmission of the request S is the same as the processing of step S shown in and a detailed description thereof will not be repeated.

Upon receiving the request the communication apparatus generates the new header compression table at the start of new HTTP communication in which the header compression table does not exist S . The communication apparatus updates the Req table based on the HTTP request header of the received request S . The communication apparatus generates a response to the received request and compresses the HTTP response header using the Res table S . The communication apparatus updates the Res table based on the generated HTTP response header S .

The communication apparatus transmits the response to the communication apparatus by HTTP 2 S . The transmission of the response S is the same as the processing of step S shown in and a detailed description thereof will not be repeated. Upon receiving the response the communication apparatus updates the Res table based on the HTTP response header of the response S .

Disconnection of HTTP communication connection S will be explained with reference to the sequence chart of . The communication apparatus transmits a GOAWAY frame in HTTP 2 to the communication apparatus S . The communication apparatus transmits a TCP disconnection request FIN frame to the communication apparatus in order to disconnect the TCP session between the communication apparatuses and S . Upon receiving the TCP disconnection request the communication apparatus transmits a TCP disconnection request response FIN ACK frame to the communication apparatus S . The communication apparatus transmits a response ACK frame to the communication apparatus S . As a result the HTTP communication connection is disconnected.

Processing by the communication apparatus upon receiving an error notification will be explained with reference to the flowchart of . That is processing by the communication apparatus when it is determined that the integrity of the header compression table generation function is lost will be described.

As described above the HTTP communication control unit of the communication apparatus transmits all requests described in an HTML file included in a dummy response S . The HTTP communication control unit determines whether it has received a RST STREAM frame from the communication apparatus S . If the RST STREAM frame has been received the process is advanced to step S. If the RST STREAM frame has not been received the HTTP communication control unit determines that the integrity of the header compression table generation function is maintained and the request and response by HTTP 2 are normally processed and continues the HTTP communication by HTTP 2 S .

If the RST STREAM frame has been received the HTTP communication control unit determines that the integrity of the header compression table generation function is lost and determines whether there is a compatible HTTP version in addition to HTTP 2 S . Since HTTP 1.1 is generally compatible the HTTP communication control unit starts HTTP communication by HTTP 1.1 S . If there is no other version the HTTP communication control unit disconnects the HTTP communication connection S .

Processing of determining the integrity of the header compression table generation function will be explained with reference to the flowchart of . An example in which updating of the Req table uses only incremental indexing will be explained. The communication apparatus repeats processes in steps S to S by the number of requests described in the HTML file included in the dummy response.

The HTTP communication control unit receives a request from the communication apparatus by HTTP 2 S . The reception processing of the request S will be explained with reference to part of the flowchart of . The HTTP communication control unit determines whether HEADERS 0 or more CONTINUATION frames have been received S . If the frame has been received the table generation unit generates the new header compression table S .

Then the header compression unit decompresses a compressed HTTP request header included in the received HEADERS 0 or more CONTINUATION frames using the Res table S . The HTTP communication control unit determines whether the received request has a request body S .

If the request has a request body the HTTP communication control unit receives a DATA frame S . The DATA frame includes information of the request body. The HTTP communication control unit repeats the reception of the DATA frame S by the number of times corresponding to the size of the request body data.

Then the integrity determination unit determines whether the request to be referred to as a received request hereinafter received in step S uses incremental indexing for updating of the header compression table S . If incremental indexing is used the process is advanced to step S. If incremental indexing is not used the process is advanced to step S.

If incremental indexing is used the table update unit updates the Req table based on the incremental indexing instruction of the HTTP request header of the received request S . The integrity determination unit compares a pair of the request header name and request header value of the updated Req table with a pair of a request header name and request header value held for determining integrity S . In the following description the pair in the Req table will be sometimes called a table pair and the pair for determining integrity will be sometimes called a verification pair . Details of the verification pair will be described later.

The integrity determination unit determines whether the comparison result in step S represents a match between the table pair and the verification pair S . If the comparison result represents a match the process is advanced to step S. If the comparison result does not represent a match the process is advanced to step S.

If incremental indexing is not used or if the table pair and the verification pair match each other the integrity determination unit determines whether the received request uses the index to be referred to as a table index hereinafter of the header compression table S . If the table index is used the process is advanced to step S. If no table index is used the process is advanced to step S.

If the table index is used the header compression unit decompresses using the Req table a compressed HTTP request header included in the HEADERS 0 or more CONTINUATION frames of the received request S . The integrity determination unit determines whether the structure of the decompressed HTTP request header matches the request described in the HTML file included in the dummy response S . If the header structure and the request match each other the process is advanced to step S. If the header structure and the request do not match each other the process is advanced to step S.

If the table pair and the verification pair do not match each other or the header structure and the request do not match each other the integrity determination unit determines that the header compression table generation function of the communication apparatus and that of the communication apparatus do not have integrity S .

Thereafter the integrity determination unit transmits a default response to the received request S . The transmission processing of the response S will be explained with reference to part of the flowchart of . The header compression unit compresses the HTTP response header using the Res table S . The HTTP communication control unit generates a response including the compressed HTTP response header S and transmits a HEADERS frame to the communication apparatus S . The HEADERS frame includes information of the compressed HTTP response header.

The HTTP communication control unit determines whether the generated response has a response body S . If the generated response has a response body the HTTP communication control unit transmits a DATA frame to the communication apparatus S . The DATA frame includes the information of the response body generated in step S. The HTTP communication control unit repeats the transmission of the DATA frame S by the number of times corresponding to the size of the response body data and sets an END STREAM flag in a final DATA frame.

Note that a default response transmitted in step S is a default response for determining the header compression table generation function. Since the determination of the header compression table generation function is performed using the Req table the use of the Res table is arbitrary.

After that the integrity determination unit determines whether it has been detected that the header compression table generation function of the communication apparatus and that of the communication apparatus do not have integrity S . If it has been detected that the integrity is lost the process is advanced to step S. If it has been detected that the integrity is maintained the process is advanced to step S.

If the integrity is lost the integrity determination unit causes the HTTP communication control unit to notify the communication apparatus of a communication error by HTTP 2 S and disconnects the HTTP communication connection by HTTP 2 between the communication apparatuses and S .

If the integrity is maintained the integrity determination unit transmits an authentic response to the request received S by the communication apparatus from the communication apparatus upon transmitting a dummy response from the HTTP communication control unit S .

Another processing of determining the integrity of the header compression table generation function will be explained with reference to the flowcharts of . The processing in is different from that shown in in that replacement indexing is used for updating of the Req table in addition to incremental indexing. The same reference numerals as those in denote the same processes except for processing regarding this point and a description thereof will not be repeated. The communication apparatus repeats the processes in steps S to S by the number of requests described in the HTML file included in the dummy response.

The integrity determination unit determines whether the received request uses replacement indexing for updating of the header compression table S . If replacement indexing is used the process is advanced to step S. If replacement indexing is not used the process is advanced to step S.

If replacement indexing is used the table update unit updates the Req table based on the replacement indexing instruction of the HTTP request header of the received request S . The integrity determination unit compares a table pair of the request header name and request header value of the updated Req table with a verification pair of a request header name and request header value S .

The integrity determination unit determines whether the comparison result in step S represents a match between the table pair and the verification pair S . If the comparison result represents a match the process is advanced to step S. If the comparison result does not represent a match the process is advanced to step S. Subsequent processes are the same as those in .

Procedures to transmit a request and receive a response by the communication apparatus will be explained with reference to the flowchart of . The header compression unit compresses an HTTP request header using the header compression table S .

The HTTP communication control unit generates a request including the compressed HTTP request header S and transmits HEADERS 0 or more CONTINUATION frames to the communication apparatus S . This frame includes information of the HTTP request header compressed in step S.

The HTTP communication control unit determines whether the generated request includes a request body S . If the generated request includes a request body the HTTP communication control unit transmits a DATA frame to the communication apparatus S . This frame includes information of the request body generated in step S. The HTTP communication control unit repeats the transmission of the DATA frame by the number of times corresponding to the size of the request body data and sets an END STREAM flag in a final DATA frame.

The HTTP communication control unit then determines whether the transmission of the request to the communication apparatus has succeeded S . If the transmission of the request has failed the HTTP communication control unit disconnects the HTTP communication connection with the communication apparatus S and ends the process.

If the transmission of the request has succeeded the HTTP communication control unit determines whether the HEADERS frame of the response has been received from the communication apparatus S . If no HEADERS frame has been received even upon the lapse of a predetermined time the HTTP communication control unit disconnects the HTTP communication connection with the communication apparatus S and ends the process.

If the HEADERS frame has been received the header compression unit decompresses a compressed HTTP response header included in the received HEADERS frame using the header compression table S . The HTTP communication control unit determines whether the received response has a response body S . If the received response has a response body the HTTP communication control unit receives a DATA frame from the communication apparatus S . This frame includes information of the response body. The HTTP communication control unit repeats the reception of the DATA frame by the number of times corresponding to the size of the response body data.

The HTTP communication control unit determines whether the reception of the response from the communication apparatus has succeeded S . If the reception of the response has failed the HTTP communication control unit disconnects the HTTP communication connection with the communication apparatus S and ends the process.

If the reception of the response has succeeded the table update unit updates the Req table based on the HTTP request header generated in steps S and S S . Further the table update unit updates the Res table based on the HTTP response header received in step S S and ends the process.

Procedures to receive a request and transmit a response by the communication apparatus will be explained with reference to the flowchart of . The HTTP communication control unit determines whether the HEADERS 0 or more CONTINUATION frames of a request have been received S . If the HEADERS 0 or more CONTINUATION frames have not been received even upon the lapse of a predetermined time the HTTP communication control unit disconnects the HTTP communication connection with the communication apparatus S and ends the process.

If the HEADERS 0 or more CONTINUATION frames have been received the table generation unit generates a new header compression table S . The header compression unit decompresses a compressed HTTP request header included in the received HEADERS 0 or more CONTINUATION frames using the header compression table S .

Then the HTTP communication control unit determines whether the received request has a request body S . If the request has a request body the HTTP communication control unit receives a DATA frame from the communication apparatus S . This frame includes information of the request body. The HTTP communication control unit repeats the reception of the DATA frame by the number of times corresponding to the size of the request body data.

The HTTP communication control unit determines whether the reception of the request from the communication apparatus has succeeded S . If the reception of the request has failed the HTTP communication control unit disconnects the HTTP communication connection with the communication apparatus S and ends the process.

If the reception of the request has succeeded the header compression unit compresses an HTTP response header using the header compression table S . The HTTP communication control unit generates a response including the compressed HTTP response header S and transmits a HEADERS frame to the communication apparatus S . This frame includes information of the compressed HTTP response header.

The HTTP communication control unit determines whether the generated response includes a response body S . If the generated response includes a response body the HTTP communication control unit transmits a DATA frame to the communication apparatus S . This frame includes information of the response body generated in step S. The HTTP communication control unit repeats the transmission of the DATA frame by the number of times corresponding to the size of the response body data and sets an END STREAM flag in a final DATA frame.

The HTTP communication control unit determines whether the transmission of the response to the communication apparatus has succeeded S . If the transmission of the response has failed the HTTP communication control unit disconnects the HTTP communication connection with the communication apparatus S and ends the process.

If the transmission of the response has succeeded the table update unit updates the Req table based on the HTTP request header received in step S S . Further the Res table is updated based on the HTTP response header generated in steps S and S S and the process ends.

The request shown in and the request shown in have the same contents. When transmitting the request in the communication apparatus generates the header compression table and updates it by incremental indexing. When transmitting the request in the communication apparatus executes header compression using the indices of the header compression table updated at the time of transmitting the request in .

The request shown in and the request shown in have the same contents. When transmitting the request in the communication apparatus updates the header compression table by incremental indexing or replacement indexing in regard to headers and of this request. When transmitting the request in the communication apparatus executes header compression using the indices of the header compression table updated at the time of transmitting the request in .

The communication apparatus determines the integrity between the request received from the communication apparatus and the request described in the HTML file of the dummy response thereby determining the integrity of the header compression table generation function. The communication apparatus determines the following two items.

The first determination item is a combination of an HTTP request header name and HTTP request header value. It is determined whether the combination of the HTTP request header name and HTTP request header value in the header compression table generated and updated based on the request of the communication apparatus has integrity with the request described in the HTML file of the dummy response. At this time the determination is performed using a verification pair table.

The second determination item is the correspondence of an index added to a combination of an HTTP request header name and HTTP request header value. When a request using an index is received from the communication apparatus the HTTP request header is decompressed based on the header compression table that has been generated and updated by the communication apparatus based on the request of the communication apparatus . It is determined whether the combination of the decompressed HTTP request header name and HTTP request header value has integrity with the request described in the HTML file of the dummy response. That is the integrity between the index addition method of the communication apparatus and that of the communication apparatus is determined.

A Req table in is an example of a Req table updated by the communication apparatus at the time of transmitting the request shown in . In the Req table the following records are updated with respect to the Req table shown in 

In this fashion the integrity determination unit of the communication apparatus functions as a guide unit that guides the communication apparatus to transmit a predetermined message request corresponding to specific indices indices of 38 40 and 41 in the example of of the Req table updated by the communication apparatus in accordance with a request described in the HTML file of a dummy response.

The integrity determination unit determines whether the request described in the HTML file of the dummy response is restored by sequentially updating the Req table of the communication apparatus in accordance with responses sequentially received from the communication apparatus . That is the integrity determination unit functions as a determination unit that when the request is restored determines that the header compression table generation function has integrity and when the request is not restored determines that the header compression table generation function does not have integrity.

In other words the integrity determination unit serving as the guide unit refers to indices included in a predetermined message transmitted by the communication apparatus and determines the integrity between the updated header compression table and the header compression table used in the communication apparatus .

In this manner upon receiving a first request from the communication apparatus the communication apparatus transmits a dummy response determines the integrity between the header compression table generation function of the communication apparatus and that of the communication apparatus and determines the validity of header compression using the header compression table. Hence a communication error arising from a mismatch of the header compression table can be detected and highly reliable communication becomes possible.

As shown in when the communication apparatus ends the HTTP communication connection sequence with the communication apparatus and receives a request from the communication apparatus it transmits a dummy response for determining the header compression table generation function. Thus the communication apparatus transmits a request described in an HTML file included in the received dummy response as shown in . As a result the communication apparatus can determine the integrity between the header compression table generation function of the communication apparatus and that of the communication apparatus . Generation of a communication error arising from a mismatch of the header compression table can be detected before the start of actual communication.

As shown in when the communication apparatus determines that the header compression table generation function of the communication apparatus and that of the communication apparatus have integrity it transmits a normal response to the request that has transmitted the dummy response. As a result the communication apparatus can execute determination of the header compression table generation function based on the normal request from the communication apparatus before the start of actual communication. This can obviate the necessity to mount the integrity determination unit in the communication apparatus . By only mounting the integrity determination unit in the communication apparatus the header compression table generation function of the communication apparatus can be determined.

In contrast as shown in when the communication apparatus determines that the header compression table generation function of the communication apparatus and that of the communication apparatus do not have integrity it notifies the communication apparatus of an error and ends communication by the HTTP 2 scheme. Accordingly as shown in the communication apparatus can determine that communication by the HTTP 2 scheme is impossible and switch the communication scheme to another one. Generation of a communication error arising from a mismatch of the header compression table can be detected before the start of actual communication. The processing load and communication delay caused by the communication error in actual communication can be reduced and smooth switching to the communication scheme can be performed.

In other words the integrity determination unit of the communication apparatus functions as a notification unit that notifies the communication apparatus of a message corresponding to the determination result of the integrity of the header compression table generation function as represented by steps S and S of .

In the above description the integrity determination unit determines the integrity of the header compression table generation function after the end of the HTTP communication connection sequence. However the present invention is not limited to this. When an abnormality is detected in the operation of the communication apparatus for example when the communication apparatus repetitively transmits the same request the integrity determination unit may determine the integrity of the header compression table generation function. When an abnormality such as a syntax error is detected in a request of the communication apparatus using the HTTP communication control unit the integrity determination unit can also determine the header compression table generation function this example will be explained in the second embodiment .

The integrity determination unit may function as an invalidation unit that validates at least some records in the updated header compression table in accordance with the determination result of the integrity of the header compression table generation function. Some records to be invalidated are records in the updated header compression table that correspond to indices at which requests described in the HTML file of a dummy response have not been restored.

An information processing apparatus and information processing method according to the second embodiment of the present invention will be described below. In the second embodiment the same reference numerals as those in the first embodiment denote the same parts and a detailed description thereof will not be repeated.

An outline of a communication sequence between communication apparatuses and according to the second embodiment will be explained with reference to the sequence chart of . shows an outline of a communication sequence from the start of communication between the communication apparatuses and after network connection to disconnection of the communication.

In the second embodiment after establishment of HTTP communication connection S an HTTP communication control unit of the communication apparatus performs communication transmission reception of a request response with the communication apparatus S . If a request syntax error generated during communication is detected S whether the HTTP communication by the HTTP 2 scheme can be continued is determined based on determination of the integrity of the header compression table generation function S .

When sending back a response 400 Bad Request representing the request syntax error with respect to the request of the communication apparatus an integrity determination unit of the communication apparatus transmits a dummy response for determining the integrity of the header compression table generation function S . If the integrity determination unit detects a mismatch of the header compression table generation function the HTTP communication control unit of the communication apparatus determines that the syntax error of the request received from the communication apparatus arises from the mismatch of the header compression table generation function and ends the communication. To the contrary if the integrity determination unit detects no mismatch of the header compression table generation function the HTTP communication control unit of the communication apparatus determines that the syntax error of the request received from the communication apparatus arises from a cause other than the header compression table generation function and demands the communication apparatus to retransmit the request.

Procedures to when a request syntax error is detected determine that determination of the integrity of the header compression table generation function is necessary are shown in the flowchart of . Note that the same reference numerals S to S as those in denote the same processes and a detailed description thereof will not be repeated. Transmission of a dummy response and reception of a request when determining the integrity are the same as those in the first embodiment and a detailed description thereof will not be repeated.

The HTTP communication control unit determines whether reception of a request from the communication apparatus has succeeded S . If the reception of the request has failed the HTTP communication control unit determines whether the cause is a syntax error of the request S . If the syntax error is not the cause the HTTP communication control unit disconnects the HTTP communication connection with the communication apparatus S and ends the process.

If the reception failure of the request arises from a syntax error of the request the integrity determination unit uses the HTTP communication control unit to transmit to the communication apparatus a dummy response for determining the integrity of the header compression table generation function S . If a mismatch of the header compression table generation function is detected it is determined that the message abnormality arises from a header compression table generation unit or table update unit of the communication apparatus . In this case the HTTP communication control unit of the communication apparatus transmits an error message disconnects the HTTP communication connection with the communication apparatus and stops the use of HTTP 2 in communication between the communication apparatuses and .

If the integrity of the header compression table generation function is maintained it is determined that the message abnormality arises from neither the table generation unit nor table update unit of the communication apparatus . In this case the HTTP communication control unit of the communication apparatus demands retransmission of the request.

In this way when the communication apparatus detects a request syntax error in HTTP communication with the communication apparatus it determines the integrity of the header compression table generation function and determines the validity of use of header compression using the header compression table. Therefore a communication error arising from a mismatch of the header compression table can be detected and highly reliable communication becomes possible.

Embodiment s of the present invention can also be realized by a computer of a system or apparatus that reads out and executes computer executable instructions e.g. one or more programs recorded on a storage medium which may also be referred to more fully as a non transitory computer readable storage medium to perform the functions of one or more of the above described embodiment s and or that includes one or more circuits e.g. application specific integrated circuit ASIC for performing the functions of one or more of the above described embodiment s and by a method performed by the computer of the system or apparatus by for example reading out and executing the computer executable instructions from the storage medium to perform the functions of one or more of the above described embodiment s and or controlling the one or more circuits to perform the functions of one or more of the above described embodiment s . The computer may comprise one or more processors e.g. central processing unit CPU micro processing unit MPU and may include a network of separate computers or separate processors to read out and execute the computer executable instructions. The computer executable instructions may be provided to the computer for example from a network or the storage medium. The storage medium may include for example one or more of a hard disk a random access memory RAM a read only memory ROM a storage of distributed computing systems an optical disk such as a compact disc CD digital versatile disc DVD or Blu ray Disc BD a flash memory device a memory card and the like.

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of Japanese Patent Application No. 2014 161894 filed Aug. 7 2014 which is hereby incorporated by reference herein in its entirety.

