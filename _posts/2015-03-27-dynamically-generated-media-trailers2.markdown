---

title: Dynamically generated media trailers
abstract: Disclosed are various embodiments for dynamically generating media trailers for communication over a network. A request for a dynamically generated media trailer is received by a computing environment over the network. Clips are extracted from media files or previews associated with the media files according to media titles in lists and/or tags identified by a user. A customized media trailer is generated by coalescing the clips extracted from the media file or a preview associated with the media file according to a determined order. The media trailer is communicated to one or more client device over the network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09635337&OS=09635337&RS=09635337
owner: Amazon Technologies, Inc.
number: 09635337
owner_city: Seattle
owner_country: US
publication_date: 20150327
---
Typically movie studios or other media production companies create movie trailers for distribution across different communication mediums in order to build anticipation and entice potential viewers into purchasing or renting a movie. These pre generated movie trailers often include content not desirable for particular viewers including clips of the movie referred to as spoilers. 

The present disclosure relates to dynamically generating customized media trailers for communication over a network. As noted above movie studios or other media production companies create movie trailers for distribution across different communication mediums in order to build anticipation and entice potential viewers into purchasing or renting a movie. These pre generated movie trailers often include content not desirable for some viewers including clips of the movie referred to as spoilers. Customizing movie trailers for specific users remains problematic.

For example a first user may be more interested in movies having action sequences while a second user may be more interested in movies having romantic sequences. A pre generated movie trailer may be appealing to the first user while not being interesting to the second user. Moreover some users do not want to see scenes that reveal plot components of a movie referred to as spoilers. As a result it may be desirable to create custom movie trailers for particular users based on user preferences.

According to various embodiments as will be described herein a computing environment is employed to parse a media file to automatically generate tags for particular clips that occur during playback of the media file where the tags for the clips are indicative of a type of scene or are suggestive of events that occur during the clips. For example a scene of a movie referred to herein as a clip having gunshots and explosions may be tagged action and or violence. To tag particular sequences of a media file such as a movie the computing environment may analyze the audio and or video portions of the media file to detect events.

The tags for a sequence of a movie may also be crowdsourced by users of various network sites. For example users may submit their own tags for a particular sequence to describe events that occur during playback. In some embodiments the tags automatically generated by the computing environment for a sequence may be verified using crowdsourcing.

In various embodiments a trailer may be generated for one or more users based on media titles in a list such as a list of movies recommended for the user a watch list having movie titles specified by the user or a list of promoted movie titles specified by a media streaming service. Using the media titles in one or more of the lists the computing environment is employed to dynamically generate a trailer by combining various clips extracted from media files corresponding to the titles in the one or more lists. As a result a media trailer may be generated to present a preview of the titles included in a list.

Further a user desiring to view a customized trailer may use his or her client device such as a personal computer a tablet or a smartphone to create a customized request for a trailer of a particular media file or movie. In various embodiments the request may comprise tags for which the user has previously shown interest. For example if the user is interested in romantic aspects of the movie the user may select a tag for romance or love story. In various embodiments a user history may be analyzed to determine user preferences. Using the tags or other preferences associated with the user the computing environment is employed to generate a trailer by combining various clips extracted from the media file that are associated with the tags of interest to the user.

In the following discussion a general description of a system for dynamically generating and communicating media trailers over a network and its components is provided followed by a discussion of the operation of the same.

With reference to shown is a networked environment according to various embodiments of the present disclosure. The networked environment includes a computing environment and a client device which are in data communication with each other via a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks. For example such networks may comprise satellite networks cable networks Ethernet networks and other types of networks.

In the non limiting example of the computing environment is employed to dynamically generate a media trailer . . . for rendering on the client device . According to various embodiments a user may interact with a user interface rendered in a television or other display device to navigate through and select content to purchase rent download stream watch or otherwise consume. For example the user interface facilitates a selection of particular movie or television titles from content made available to users by the computing environment . To select a particular movie title the user may navigate lists . . . collectively lists in the user interface using a remote control video game controller hand gesture vocalized command or other input device. In some embodiments the lists are generated for the user for example based on a watch history or a watch list of the user. In various embodiments the lists are generated by an administrator or by the computing environment for example to promote particular movie titles television titles or other content.

The media trailer generated for display in the client device may be generated based on a list shown in the user interface . For example the media trailer may be generated using movie titles in the list entitled Best Drama Movies. Consequently the media trailer gives a user a glimpse of the titles included in the list . In various embodiments the media trailer is generated based on a list the user is currently navigating. For example when the user navigates to the list for Best Drama Movies the media trailer may be generated and or communicated to the device for rendering in a respective portion of the user interface . While playing the media trailer may show clips extracted from each of the titles in the list

In the embodiment of to generate the media trailer the trailer generation application coalesces clips of one or more media files designated in the lists and extracted by a clip extraction application based on tags associated with the clips . The clips may be mined from the media files such as a movie title a television title or from a movie trailer created by a studio or production company. Once the clips are compiled into a combined media trailer the combined media trailer is communicated to the client device over the network for rendering in the display .

In various embodiments the media trailer may be selected by the user of the client device to access the titles in the list associated with the media trailer . For example by selecting the media trailer in the user interface a subsequent user interface may be generated having the titles in the list for Best Drama Movies. Further the client device may be employed to determine which clip was playing when the user selected or otherwise manipulated the media trailer . For example if a user selected the media trailer while a clip for a movie entitled Finding Home was being shown the subsequent user interface generated by the client device may navigate a portion of the list where Finding Home is shown.

With reference to shown is a networked environment according to various embodiments of the present disclosure. The networked environment includes a computing environment and a client device which are in data communication with each other via a network . In the non limiting example of the computing environment is employed to dynamically generate a media trailer . . . for rendering on the client device . To this end a user of the client device may interact with a user interface in a display of the client device to select one or more tags . . . associated with a media file .

As may be appreciated the tags included in the user interface are indicative of genres or particular areas of interest for users. The tags selected by a user may be used to create a media trailer customized for the user. For example by selecting tags labeled violence romance and drama clips of the media file associated with the tags selected may cause a trailer generation application to dynamically generate the media trailer using one or more clips of the movie being tagged with violence romance and drama. The clips of the movie may be extracted by the clip extraction application . The clips may be mined from the media files such as a movie file or from a studio movie trailer. The clips and the tags may be stored as media file data in a data store accessible to by components of the computing environment .

A client application is executed on the client device to generate the user interface and to communicate the tags selected by the user to the computing environment . Once received by the computing environment the tags may be accessed by the clip extraction application and or the trailer generation application . Further in various embodiments the client application may facilitate playback of the media trailer generated by the trailer generation application . For example in response to a manipulation of playback components of the user interface the client application may start playback of the media trailer pause or stop playback of the media trailer adjust a volume level of the client device for playback of the media trailer etc.

Moving on to shown is another drawing of the networked environment according to various embodiments of the present disclosure. The networked environment of includes a computing environment and a client device which are in data communication with each other via a network . In addition the client device may communicate with a media device using Bluetooth ZigBee near field communication NFC or other suitable communication medium to cause presentation of a media trailer on a media device display .

The computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively the computing environment may employ a plurality of computing devices that may be arranged for example in one or more server banks or computer banks or other arrangements. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. For example the computing environment may include a plurality of computing devices that together may comprise a hosted computing resource a grid computing resource and or any other distributed computing arrangement. In some cases the computing environment may correspond to an elastic computing resource where the allotted capacity of processing network storage or other computing related resources may vary over time.

Various applications and or other functionality may be executed in the computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the computing environment . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing environment for example include a movie database application media applications and other applications services processes systems engines or functionality not discussed in detail herein. The media applications include the trailer generation application and the clip extraction application . In various embodiments the media applications include an automated tagging application .

The movie database application is executed to generate user interface data such as web pages or other types of network content that are provided to client devices for the purposes of viewing information associated with movies television shows or other similar content. The information includes production information listings of actors actresses and characters filming locations etc. In various embodiments the movie database application also performs various backend functions in order to facilitate the online purchase of media content e.g. movies music television shows .

The media applications are employed to generate a media trailer . For example the automated tagging application is executed to parse a media file such as a movie or television show to generate tags a for events occurring at various playback locations in the media file . For example the automated tagging application may identify speech segments to derive context about a scene and to generate a tag with a label suggestive of the scene or indicative of the content of the scene. In various embodiments the automated tagging application may compare audio or speech segments from the media file to digital fingerprints stored in memory. If a match is found any tags associated with the digital fingerprints are also associated with the analyzed audio or speech segment.

The clip extraction application is executed to remove audio or video segments from the media file . As a non limiting example the clip extraction application may remove one or two second segments from a media file that may be used in generating a media trailer . The trailer generation application is executed to generate a media trailer customized for a particular user list or user account. To this end the trailer generation application may identify clips having tags of potential interest to a user and may coalesce the clips into a single media trailer for transmission to the client device . In various embodiments the clip extraction application extracts clips from pseudorandom locations of the media file . Additionally the length of the clips extracted from the media file may be determined pseudo randomly.

The web service is executed to provide a medium for communication between the computing environment and or the client devices over the network . The web service may comprise a web based application programming interface API embodied in software that facilitates programmatic service calls e.g. API calls made by the client application to communicate with the movie database application the media application and or other services or applications not described herein. According to various embodiments the web based API may further comprise a representational state transfer REST API a simple object access protocol SOAP API or another suitable API.

The data stored in the data store includes for example a movie catalog media files media file data data associated with user accounts and potentially other data. The movie catalog includes movie data which may comprise a listing of movies television shows music videos or other similar content. The movie data also includes information associated with such content such as data associated with characters scenes plots synopses reviews actors actresses writers directors production information box office sales etc. Further the movie data may include movie trailers or music files for a movie soundtrack. The movie data may be parsed by the automated tagging application to generate tags for clips or segments of a media file . In various embodiments the media file data as well as other data from the data store may be accessed in a structured data format.

The media file may include a single file or a collection of files corresponding to a movie television show music video or other similar content. In various embodiments the media file is stored in one or more formats including but not limited to GIFV SWF MPEG AVI or QT. The data store includes media file data corresponding to each of the media files . The media file data includes clips removed from the media file stored independently from the media file as well as tags associated with the clips and or the media files .

The data associated with the user account includes a watch list and one or more user preferences . A watch list comprises media content consumed or desired to be consumed by a particular user. In various embodiments the watch list is analyzed to identify tags of potential interest of the user in order to facilitate generation of media trailers customized for a particular user. Similarly user preferences are analyzed to identify tags of potential interest of the user in order to facilitate generation of media trailers . The user preferences may include tags previously selected by users in generation of previously generated media trailers or other similar data. Although the tags are shown as being stored separately from the media trailer in some embodiments the tags may be stored as metadata in the clips and or the media file .

The client device is representative of a plurality of client devices that may be coupled to the network . The client device may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. The client device may include the display . The display may comprise for example one or more devices such as liquid crystal display LCD displays gas plasma based flat panel displays organic light emitting diode OLED displays electrophoretic ink E ink displays LCD projectors or other types of display devices etc.

The client device may be configured to execute various applications such as the client application and or other applications. The client application may be executed in a client device for example to access network content served up by the computing environment and or other servers thereby rendering a user interface on the display . To this end the client application may comprise for example a browser a dedicated application etc. and the user interface may comprise a network page an application screen etc. The client device may be configured to execute applications beyond the client application such as for example email applications social networking applications word processors spreadsheets and or other applications.

Next a general description of the operation of the various components of the networked environment is provided. To begin it may be assumed that the media applications are being employed to generate a media trailer for a particular user or user account. For example a first user may be more interested in movies having action sequences. A media trailer may be generated to provide clips of a media file being associated with tags labeled action or similar tags such as adventure or combat. 

The media trailer may be generated having clips from a single media file e.g. from a single movie or may be generated having clips from multiple media files e.g. from different movies . For example a single media trailer may be generated for a plurality of media files in a watch list for a user. In various embodiments only the media files in the watch list that have not been watched or purchased by the user are used in generating a media trailer .

Initially the computing environment may be employed to parse one or more media files to automatically generate tags for particular clips that occur during playback of the media files where the tags for the clips are indicative of a type of scene or are suggestive of events that occur during the clips . For example a scene of a movie may have gunshots and explosions. The automated tagging application is configured to recognize the gunshots and explosions and to tag the clip with a tag labeled action and or violence. To tag particular sequences of a media file such as a movie the automated tagging application may analyze the audio and or video portions of the media file to detect events.

In various embodiments the tags for a clip may also be crowdsourced or vetted by users of various network sites including a network site for the movie database application . For example users may submit their own tags for a particular clip to describe events that occur during playback of the clip . The tags submitted by a user may go through a vetting process to ensure accuracy. For example if a number of tags submitted for a particular clip exceed a predefined number the tags may be associated with the clip . In some embodiments the tags generated by the automated tagging application may be verified using crowdsourcing. For example the movie database application may prompt the users to verify that the tags associated with a particular clip are accurate or suggestive of events that occur during the clip . This may be accomplished using a voting component such as a downvote and or an upvote component.

Next in various embodiments a media trailer may be generated for one or more users based on media titles in a list such as the watch list having movie titles specified by the user as being of particular interest. Using the media titles in the watch list the trailer generation application is executed to generate the media trailer by combining various clips extracted from media files corresponding to the titles in the watch list . As a result the media trailer generated is able to give a user a preview of the titles included in the watch list .

In some embodiments a user desiring to view a customized media trailer for a particular media file may use his or her client device such as a personal computer a tablet or a smartphone to create a customized request for the media trailer . In various embodiments the request may be submitted as client data from the client device to the computing environment . The client data may include user preferences and or a selection of tags specified as being of particular interest to the user. For example if the user is interested in romantic aspects of a media file or a plurality of media files in a list the user may select a tag for romance or love story that may correspond to potential events identified in certain scenes. In various embodiments a user history may be analyzed to determine user preferences . Using the tags or other preferences associated with the user the trailer generating application is employed to generate a trailer on the fly by combining various clips extracted from the media file that are associated with the tags of interest to the user.

Further the tags specified by the user may be compared to tags of media files in various lists to generate a media trailer that recommends various media titles. For example if the user has selected the tag for action movie titles in a list of titles recommended for the user may be searched to see if any of the movie titles in the list also have the tag labeled action. If so one or more clips may be extracted from the one or more media files and used in generating a media trailer .

In addition to or in place of tags included in the client data other tags may be identified based on user history. In various embodiments a consumption history associated with a user account may be analyzed by the trailer generation application to identify tags that may be of particular interest to a user. The consumption history may include movies television shows music videos music files or other media content previously watched or listened to by the user as well as items consumed e.g. purchased leased or rented by the user through an electronic commerce system. Further in some embodiments a web navigation history web cookie history previously generated media trailers or other data may be used to identify tags that may be of particular interest to a user. As a non limiting example if a user has watched or purchased a notable amount of resonance movies the tag labeled romance may be identified based on a history for the user.

The trailer generation application accesses clips of the media file from the data store that are associated with the tags identified for the user. For example if tags were selected by the user having the labels romance and comedy clips associated with these tags may be identified and accessed from the data store . In some embodiments the clip extraction application is employed to generate clips for the tags . To this end the clips may be extracted from either a preview for the media file e.g. a movie trailer or from the media file itself.

Further in various embodiments the trailer generation application may determine an order of the clips for the media trailer . In one embodiment an order of the clips is pseudo randomly generated by the trailer generation application . In an alternative embodiment one or more predefined trailer templates may be employed to create a media trailer having production like quality. As a non limiting example a predefined trailer template may include rules for creating a media trailer having a beginning segment a middle segment and an end segment. Each of the segments of the media trailer includes one or more clips of the media file . The beginning segment may comprise clips selected to introduce characters actors and or a setting. A middle segment may comprise clips selected to show turmoil or obstacles that the characters must overcome. Finally the end segment may comprise clips selected that describe conflicts or create tension excitement and or humor. The clips determined for each of the segments may be determined based at least in part on their tags . For example a tag for a clip labeled Jane Smith may be indicative of a scene with the character Jane Smith. This clip may be used in the beginning segment to introduce a character according to a predefined trailer template.

In another example a predefined trailer template may include rules for creating a media trailer having an introductory segment an outro segment and other content between the introductory segment and the outro segment. The introductory segment may include clips selected to introduce a setting or tagged with introductory or a similar suitable tag . The outro segment may include clips selected to introduce to create suspense or create a cliffhanger. The clips used in between the introductory segment and the outro segment may be selected at random or may be selected to introduce characters and or actors that appear in the media file .

The trailer generation application is then executed to generate the media trailer according to the determined order. In various embodiments the media trailer is generated by coalescing independent files of the clips into a single file for the media trailer . As may be appreciated if necessary the trailer generation application may utilize a codec or other similar application to decode the clips and or encode the coalesced clips into a single file for the media trailer . Additionally one or more coding or compression formats may be employed based on a desired file type file size or other desired constraint to facilitate streaming or communication of the media trailer over the network .

In various embodiments the trailer generation application may overlay the media trailer with music or computer generated speech. In various embodiments the music may be selected from a soundtrack of the media file and accessed as movie data from the data store . Any audio e.g. speech explosions or other noises associated with the clips may be muted or removed and music from the soundtrack may be used as the only audio component. In other embodiments the music is applied at a volume level lower than a volume level of the audio of the clips . As a result any character dialog or sound effects will be more apparent than the music. However in other embodiments the music may be applied at a volume level higher than a volume level of the audio of the clips .

According to various embodiments the clips may be combined using one or more video effects such as fade ins fade outs split screens rotations delays fast motion slow motion or other effects. With respect to split screens a first clip may be shown in one window while a second clip may be shown in another window. Additionally all or a portion of the media trailer may be generated using visual filters such as color balancing black and white sepia chromium etc. The media trailer generated by the trailer generation application comprising the clips arranged in the determined order is communicated to the client device over the network . In various embodiments the media trailer is streamed to the client device . In other embodiments the media trailer is communicated to the client device in one or more files for rendering by the client application or other application.

Referring next to shown is a drawing of an example user interface rendered by the client device according to various embodiments of the present disclosure. In the non limiting example of the application is executed on the client device to facilitate customization of a media trailer for the user. The user of the client device may interact with the user interface in the display of the client device to select one or more tags . . . associated with a media file . As may be appreciated the tags included in the user interface are indicative of genres or particular areas of interest for users. In some embodiments the tags included in the user interface are determined according to the media file such that users cannot select tags that are not related to the particular media file .

The tags selected by a user may be used to create a media trailer customized for the user. For example by selecting tags labeled spoilers fast cars action and drama clips of the media file associated with the tags selected may cause the trailer generation application to dynamically generate the media trailer using one or more clips of the movie being tagged with violence romance and drama. As noted above the clips of the movie may be extracted by the clip extraction application .

The client application is configured to communicate the tags selected by the user to the computing environment as they are made or in response to a manipulation of a generated trailer component . Once received by the computing environment the tags may be accessed by the clip extraction application and or the trailer generation application . Further in various embodiments the client application may facilitate playback of the media trailer generated by the trailer generation application . For example in response to a manipulation of playback components of the user interface the client application may start playback of the media trailer pause or stop playback of the media trailer adjust a volume level of the client device for playback of the media trailer etc.

Turning now to shown is another drawing of an example user interface rendered by the client device according to various embodiments of the present disclosure. In the non limiting example of the media trailer may be viewed by a user in a full screen mode where the media trailer consumes all of the display . However by interacting with the user interface e.g. by pressing on the display the client application may present playback components or may revert the user interface to the user interface of .

In various embodiments user interfaces that display a media trailer may be configured such that a manipulation of the media trailer e.g. tapping on the display or pressing a button on a remote control may cause one or more user interfaces to be presented that facilitate a purchase and or a playback of the media file . In embodiments where a media trailer comprises clips from a plurality of media files a manipulation of the media trailer while a particular clip is being shown in the display causes a user interface to be presented comprising information associated with the corresponding media file .

Referring next to shown is a flowchart that provides one example of the operation of a portion of the automated tagging application according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the automated tagging application as described herein. As an alternative the flowchart of may be viewed as depicting an example of elements of a method implemented in the computing environment according to one or more embodiments.

Beginning with the automated tagging application access a media file . As noted above the media file may comprise a video file e.g. GIFV SWF MPEG AVI or QT an audio file e.g. MP3 WAV DSS or another similar file. In various embodiments the media file may be accessed from the data store or in alternative embodiments the media file may be accessed from an external network site or service.

Next in sequences of the media file are analyzed to detect identifiable events. To tag particular sequences of a media file such as a movie the automated tagging application may analyze the audio and or video component of the media file to detect events. In various embodiments identifiable events from the audio component include speech loud noises e.g. gunshots explosions or screeching of car tires indicative of an action scene soundtrack music e.g. classical music indicative of a romantic scene sports related noises e.g. a football tackle sneakers on a basketball floor or a batter hitting a baseball indicative of a sports scene etc. In various embodiments to detect the events the automated tagging application may compare the audio segment from the sequence of the media file to digital fingerprints stored in memory. If speech is identified the speech may be converted to use using a speech to text application or service.

Identifiable events from the video component include scenes with particular actors or actresses scene transitions movements by the characters indicative of a type of sequence e.g. a character holding a gun indicative of an action scene etc. In various embodiments to detect the events the automated tagging application may compare frames of the video component of the segment to digital fingerprints stored in memory.

In a non limiting example a frame of a sequence may be analyzed to identify the actor actress or character in the sequence as described in U.S. patent application Ser. No. 13 860 347 entitled Detection of Cast Members in Video Content filed on Apr. 10 2014 which is incorporated by reference in its entirety herein. A name of the actor actress or character may be used as a tag for the sequence.

In it is determined whether an event has been detected. If no events are detected the process reverts to to continue analyzing subsequent sequences to detect events. However if one or more events are detected in applicable tags are identified from the data store based on the event. To this end each of the events may be associated with particular tags stored in the data store . In it is determined whether an applicable tag has been identified based on the event. If no applicable tag exists the process may proceed to the end. However if a tag is identified that is associated with a particular event then in the tag is associated with the sequence. Assuming the sequence is extracted as a clip the extracted clip may also be associated with the tags to facilitate generation of media trailers .

In the tags generated by the automated tagging application may be verified using crowdsourcing. For example the movie database application may prompt users of the application to verify that the tags associated with a particular sequence or clip are accurate and are suggestive of the events that occur during the clip . This may be accomplished using a a voting component e.g. a downvote and or an upvote component for each of the tags .

Referring next to shown is a flowchart that provides one example of the operation of a portion of the trailer generation application according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the trailer generation application as described herein. As an alternative the flowchart of may be viewed as depicting an example of elements of a method implemented in the computing environment according to one or more embodiments.

As noted above it is desirable to create custom movie trailers for particular users based on user preferences. To this end the trailer generation application is employed to generate a media trailer on the fly or dynamically in response to a request made by a user or a client device. For example a user may download and execute the client application of to generate a media trailer customized for his or her particular interests. Alternatively a client device may indicate that a user has navigated to a portion of the user interface associated with a list of media titles e.g. promoted movies movies in a user s watch list or other content . The client device via the client application may generate a media trailer to recommend the titles in the list to the user.

Beginning with the trailer generation application receives a request to generate a media trailer in association with a particular media file or list of media files from the client device . The media trailer is customized for the user based on a list user input received via the client application or other user preferences.

In various embodiments the request may comprise a selection of tags provided by the user for example via the user interface of or . In some embodiments the user may select tags labeled spoilers violence action drama or other tags . The tags selected by the user may be indicative of sequences of interest for the user. For example the user may be interested in seeing sequences of a movie associated with the tags selected.

In some embodiments the request for the media trailer may not include tags selected by the user. For example the trailer generation application may be employed to dynamically generate media trailers for visitors of network sites in the form of advertisements as opposed to users of the client application . As the user has not selected tags for use in generating a media trailer other information associated with the user may be employed. As a non limiting example a user may interact with a user interface rendered in a television or other display device to select content to purchase rent download stream watch or otherwise consume. The user interface may facilitate a selection of particular media titles from lists of content made available to users by the computing environment or via a third party streaming service. The client device via the client application may generate a media trailer to recommend the titles in the list to the user.

As noted above in some embodiments the request may or may not include tags selected by the user. Accordingly in a determination is made whether the request for the media trailer comprises tags selected by the user. If no tags are included in the request the process proceeds to . However if tags are included in the request the tags selected by the user are identified in . Identifying the tags may include parsing data included in the request and comparing the data included in the request to data in the data store .

In addition to or in place of tags included in the request in other tags may be identified based on user history. In various embodiments a consumption history associated with a user account may be analyzed by the trailer generation application or separate application to find tags that may be of particular interest to a user. The consumption history may include movies or other media content previously watched or listened to by the user as well as items consumed e.g. purchased leased or rented by the user through an electronic commerce system. Further in some embodiments a web navigation history web cookie history previously generated media trailers or other data may be used to identify tags that may be of particular interest to a user. As a non limiting example if a user has watched or purchased a notable amount of action movies the tag labeled action may be identified based on a history for the user.

Next in one or more clips of the media file are accessed based on the tags identified in and or . For example if tags were selected by the user having the labels romance and comedy clips associated with these tags may be identified and accessed. In some embodiments the clip extraction application is employed to generate clips for the tags . To this end the clips may be extracted from either a preview for the media file e.g. a movie trailer or from the media file itself.

In an order of the clips for the media trailer is determined. As may be appreciated the order of the clips corresponds to the order of sequences that will be shown to a user during a playback of the media trailer . In one embodiment an order of the clips is psuedorandomly generated by the trailer generation application . In an alternative embodiment one or more predefined trailer templates may be employed to create a media trailer having production like quality. As a non limiting example a predefined trailer template may include rules for creating a media trailer having a beginning segment a middle segment and an end segment. Each of the segments of the media trailer includes one or more clips of the media file . The beginning segment may comprise clips selected to introduce characters actors and or a setting. A middle segment may comprise clips selected to show turmoil or obstacles that the characters must overcome. Finally the end segment may comprise clips selected that describe a conflict or a resolution of conflict or create tension excitement and or humor. The clips determined for each of the segments may be determined based at least in part on their tags . For example a tag for a clip labeled John Doe may be indicative of a scene with the character John Doe. This clip may be used in the beginning segment to introduce a character according to a predefined trailer template. As a result an order of the clips accessed in is created.

Next in the media trailer is generated according to the order determined in . In various embodiments the media trailer is generated by coalescing independent files of the clips into a single file for the media trailer . As may be appreciated if necessary the trailer generation application may utilize a codec or other similar applications to decode the clips and or encode the coalesced clips into a single file. In addition one or more coding or compression formats may be employed based on a desired file type file size or other desired constraint to facilitate streaming or communication of the media trailer over the network.

In various embodiments the trailer generation application may overlay music or computer generated speech. In various embodiments the music may be selected from a soundtrack of the movie. Any audio e.g. speech explosions or other noises associated with the clips may be muted or removed and music from the soundtrack may be used as the only audio component. In other embodiments the music is applied at a volume level lower than a volume level of the audio of the clips . As a result any character dialog or sound effects will be more apparent than the music. However in other embodiments the music may be applied at a volume level higher than a volume level of the audio of the clips .

In various embodiments the music may be selected based on a similarity of a genre of music and a genre of the media file . For example rock music may be selected for an action movie or classical music may be selected for a romance movie. In various embodiments a music playlist associated with a user may be used to select music based on the genre of the music items in the playlist and the genre of the media file .

According to various embodiments the clips may be combined using one or more video effects such as fade ins fade outs split screens rotations delays fast motion slow motion or other effects. Additionally all or a portion of the media trailer may be generated using visual filters such as color balancing black and white sepia chromium etc.

In the media trailer comprising the clips arranged in the order determined in is communicated to the client device . In various embodiments the media trailer is streamed to the client device . In other embodiments the media trailer is communicated to the client device in one or more files for rendering by the client application or other application.

Referring next to shown is a flowchart that provides one example of the operation of a portion of the client application according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the client application as described herein. As an alternative the flowchart of may be viewed as depicting an example of elements of a method implemented in the computing environment according to one or more embodiments.

In the client application generates a user interface for display in the client device . In various embodiments the user interface comprises user interface components that facilitate a selection of one or more tags . The tags encoded in the user interface may be determined by the computing environment the client application or predefined by an administrator. The tags shown in the user interface may be presented based on the media file e.g. movie for which a media trailer is being generated.

In it is determined whether one or more of the tags were selected in the user interface . If so the process proceeds to where the tags selected in the user interface are included in one or more requests for a media trailer to be communicated to the computing environment . If not the process proceeds to where the request for the media trailer is sent to the computing environment for access by the trailer generation application . As a result the media trailer is generated by the trailer generation application as described above with respect to .

Next in the media trailer is received by the client device from the computing environment to be accessed by the client application or other application. As noted above the media trailer may be streamed to the client device or the media trailer may be received as one or more files. In response to receipt of the media trailer the media trailer may be encoded in a user interface such as the user interfaces of . Lastly in the client application is executed to facilitate playback of the media trailer . This may include starting playback of the media trailer pausing or stopping playback of the media trailer adjusting a volume level of the client device for playback of the media trailer etc.

With reference to shown is a schematic block diagram of the computing environment according to an embodiment of the present disclosure. The computing environment includes one or more computing devices . Each computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end each computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the movie database application the media applications e.g. the automated tagging application the clip extraction application and or the trailer generation application and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in the memory and are executable by the processor as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Flash or other programming languages.

A number of software components are stored in the memory and are executable by the processor . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory and run by the processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory and executed by the processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory to be executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memory is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor may represent multiple processors and or multiple processor cores and the memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor may be of electrical or of some other available construction.

Although the movie database application the media applications e.g. the automated tagging application the clip extraction application and or the trailer generation application and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits ASICs having appropriate logic gates field programmable gate arrays FPGAs or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts of show the functionality and operation of an implementation of portions of the automated tagging application the trailer generation application and the client application . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowcharts of show a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the movie database application the media applications e.g. the automated tagging application the clip extraction application and or the trailer generation application that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system.

The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

Further any logic or application described herein including the movie database application the media applications e.g. the automated tagging application the clip extraction application and or the trailer generation application may be implemented and structured in a variety of ways. For example one or more applications described may be implemented as modules or components of a single application. Further one or more applications described herein may be executed in shared or separate computing devices or a combination thereof. For example a plurality of the applications described herein may execute in the same computing device or in multiple computing devices in the same computing environment . Additionally it is understood that terms such as application service system engine module and so on may be interchangeable and are not intended to be limiting.

Disjunctive language such as the phrase at least one of X Y or Z unless specifically stated otherwise is otherwise understood with the context as used in general to present that an item term etc. may be either X Y or Z or any combination thereof e.g. X Y and or Z . Thus such disjunctive language is not generally intended to and should not imply that certain embodiments require at least one of X at least one of Y or at least one of Z to each be present.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

