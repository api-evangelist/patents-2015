---

title: Answering machine detection
abstract: A call is placed to a communications device. A response to the call is received from a call recipient associated with the communications device. The received response is processed based on a set of parameters. Based on processing the received response, a determination is made whether the call recipient is a human or an answering machine. If the call recipient is determined to be a human, the call is handled in a first manner. If the call recipient is determined to be an answering machine, the call is handled in a second manner that is different from the first manner.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09578170&OS=09578170&RS=09578170
owner: GENESYS TELECOMMUNICATIONS LABORATORIES, INC.
number: 09578170
owner_city: Daly City
owner_country: US
publication_date: 20150803
---
This application is continuation of U.S. patent application Ser. No. 13 417 970 filed on Mar. 12 2012 which claims priority to U.S. Provisional Application No. 61 451 589 filed Mar. 10 2011 the contents of all of which are incorporated herein by reference in their entireties.

Some voice solutions service providers offer outbound calling services to their clients. In outbound calling services calls are placed connecting a client voice site to call recipients. In some cases the call recipient may be human. In other cases the call recipient may be a machine e.g. an answering machine.

The present disclosure describes systems and techniques by which a voice service may determine whether the call recipient answering an outbound call is human or an answering machine. In one implementation a voice solutions service provider manages a call center and provides a suite of services to clients of the service provider. One such service is an outbound calling service that enables the deployment of solutions using a call platform at the data center that trigger calls out to voice communications devices e.g. telephones . The call platform connects a call recipient to a voice service e.g. a voice site hosted or otherwise provided by the call center when the call recipient picks up the phone and the call is established.

The call platform includes Answering Machine Detection AMD modules that perform the initial task of determining whether a human or a machine answered the outbound call. Based on a determination by the AMD whether a human or a machine answered the outbound call the call flow may follow different paths executed by the call platform e.g. the call may be connected to a human agent at the call center if the call recipient is determined to be a human and an automated message may be played for recording by an answering machine if the call recipient is determined to be an answering machine .

In general one aspect of the subject matter described in this specification may be embodied in a method that includes placing a call to a communications device. A response to the call is received from a call recipient associated with the communications device. The received response is processed based on a set of parameters. Based on processing the received response a determination is made whether the call recipient is a human or an answering machine. If the call recipient is determined to be a human the call is handled in a first manner. If the call recipient is determined to be an answering machine the call is handled in a second manner that is different from the first manner.

Particular implementations of this aspect may optionally include one or more of the following features. The set of parameters may include a maximum time out parameter that indicates a maximum time allowed for processing the received response before a determination is made that the call recipient is an answering machine. Making the determination whether the call recipient is a human or an answering machine may comprise determining that the call recipient is an answering machine conditioned on the processing of the received response failing to result in a determination that the call recipient is a human or an answering machine prior to lapse of a time interval equal to the maximum time allowed. The set of parameters may include a touch tone parameter that indicates that detection of a dual tone multi frequency DTMF tone in the received response results in determining that the call recipient is an answering machine. Making the determination whether the call recipient is a human or an answering machine may comprise determining that the call recipient is an answering machine conditioned on detection of a DTMF tone in the received response based on the touch tone parameter being selected.

The set of parameters may include a noise parameter that indicates that a detection of background noise in the received response within a time window subsequent to call pickup and prior to initial detection of speech results in determining that the call recipient is a human. Making the determination whether the call recipient is a human or an answering machine may comprise determining that the call recipient is a human conditioned on the detection of the background noise within the time window based on the noise parameter being selected.

The set of parameters may include a silence parameter that indicates that subsequent to speech being initially detected in the received response detection of a silence in the received response having a duration longer than a predetermined threshold results in determining that the call recipient is a human. Making the determination whether the call recipient is a human or an answering machine may comprise determining that the call recipient is a human conditioned on detecting the silence in the received response subsequent to the initial detection of speech in the received response based on the silence parameter being selected.

The set of parameters may include a beep time out parameter that indicates a maximum window of time during which monitoring the received response for an audio beep sound will occur and during which time no message will be sent to the call recipient the maximum window of time beginning after detecting a last spoken word in the received response and ending a predetermined time later. Making the determination whether the call recipient is a human or an answering machine may comprise determining that the call recipient is an answering machine conditioned on detecting a an audio beep in the received response at a time subsequent to the detected last spoken word but prior to the predetermined time based on the beep time out parameter being selected.

The set of parameters may include a word count parameter that indicates that spoken words in the received response will be counted and that if a number of spoken words exceeds a predetermined threshold a determination will be made that the call recipient is an answering machine. Making the determination whether the call recipient is a human or an answering machine may comprise determining that the call recipient is an answering machine conditioned on the number of spoken words exceeding the predetermined threshold based on the word count parameter being selected.

The set of parameters may include a no speech parameter that indicates that subsequent to the call being answered detection of no speech in the received response having a duration longer than a predetermined threshold results in determining that the call recipient is an answering machine. Making the determination whether the call recipient is a human or an answering machine may comprise determining that the call recipient is an answering machine conditioned on detecting no speech in the received response subsequent to the call being picked up based on the no speech parameter being selected.

At least one parameter included in the set of parameters may be configurable by a user associated with placing the call to the communications device. The user may be enabled to configure the at least one parameter using a web enabled interface.

Other embodiments of this aspect include corresponding systems and computer program products. The system includes a call recipient associated with a communications device. In addition the system includes one or more processors and instructions embedded in non transitory machine readable media for execution by the one or more processors. The instructions are configured to cause the one or more processors to interact with the call recipient associated with the communications device for performing the above listed actions.

The computer program product is embodied in a non transitory computer readable medium storing software that comprises instructions executable by one or more computers. The instructions upon execution by the by one or more computers cause the one or more computers to perform the above listed actions.

The improved AMD techniques may provide increased accuracy and speed thereby enabling the outbound calls to be configured to be more callee friendly and providing a human call recipient with an improved calling experience. A client associated with a voice service may benefit from an easy customization of parameters for configuring the AMD module used by the voice service.

The details of one or more disclosed implementations are set forth in the accompanying drawings and the description below.

A call center may provide to one or more clients a voice service that includes outbound calling services in which a call platform implemented by the call center places outbound calls to voice communications devices such as telephones.

When an outbound call is answered it may be important to determine whether the call was picked up by a human being or an answering machine voice mail. Depending on whether a human or a machine answered the call the call flow may follow different paths. The initial task of determining whether the call recipient is a human or a machine may be performed by answering machine detection AMD modules included in the call platform. In some implementations each voice service hosted by the call center may be configured with its own AMD module. The call center may enable a client to customize the AMD module associated with the client s voice site service.

In some implementations the outbound calling services may be used by voice sites hosted by the call center and associated with the clients of the call center. In this context a voice site may be a set of scripts or more generally programming language modules corresponding to one or more linked pages that collectively interoperate to produce an automated interactive experience with a user e.g. the recipient of the outbound call. A voice site may include scripts or programming language modules corresponding to at least one voice page which is a programming segment akin to a web page in both its modularity and its interconnection to other pages but specifically directed to audio interactions.

The voice site may be configured to handle outbound voice calls made to voice communications devices. The voice site may be an automated interactive voice site that is configured to process using pre programmed scripts information received from a call recipient in answer to an outbound call and in response manage the call flow.

The interaction between the call recipient and the voice site may be done using an interactive voice response system IVR provided by the call center. In some implementations the IVR may be implemented by the call platform and may be configured to execute the AMD module created and customized for the voice site while providing support for the outbound calls.

The determination by a typical AMD module whether a person or a machine has answered an outbound call may take several seconds to complete after the phone has been picked up. Dead air is typically played during these several seconds which may present usability problems in cases where the recipient of the call is a human. For example the human call recipient may terminate the call upon hearing the several seconds of silence from the caller.

A typical AMD module also may suffer from a high error rate in determining whether an outbound call was answered by an answering machine or by a human. This incorrect determination may trigger a wrong sequence of call handling actions. For example some call handling instructions may result in the call being transferred to an agent upon determining that the call recipient is human. When the AMD module incorrectly designates a call as being answered by a human rather than an answering machine the call center agent receiving the transferred call may get connected to the answering machine resulting in the call center agent hearing either dead air or dead air followed by a beep.

Moreover even when the call handling instructions only result in the communication of a recorded voice message an incorrect determination by the AMD module may still create problems. For example a human typically greets a caller with a relatively short salutation e.g. hello while answering machines tend to have longer greetings e.g. You have reached the Smith residence. We are not able to answer the phone right now but if you leave your name and number after the beep we will get back to you as soon as we can. Due to this difference it is desirable for outbound calls that are meant to communicate a recorded message to change their message delay based on a proper determination of whether the entity that answered the call is a human or an answering machine with the message delay being longer either by a fixed amount or by actively attempting to detect a beep for an answering machine than for a human. An incorrect identification by the AMD module may result in a truncated voicemail when an answering machine is incorrectly identified as a human or may result in a lengthy and undesirable delay which can lead to the human terminating the call when a human is incorrectly identified as an answering machine.

An improved AMD module may address one or more of these various shortcomings by providing a more accurate and faster determination of the type of call recipient i.e. whether the call recipient is human or machine. The call center also may provide web enabled customization tools e.g. websites with easy to use GUIs for the purpose of configuring the parameters for the AMD module associated with the client s voice site. This may enable the client to tailor the AMD module to the specific needs of the client s voice site service.

The voice communications device is an electronic device configured with hardware and software that enables the device to interface with a user and run hardware and software applications to perform various processing tasks. The voice communications device is enabled to support voice functionality such as processing user speech and voice commands and performing text to speech conversions. For example the voice communications device may be a telephone a cell phone a voice enabled personal digital assistant PDA a voice enabled tablet computer a voice enabled notebook or laptop computer a voice enabled desktop computer or any other appropriate portable or stationary computing device. The voice communications device includes one or more processors configured to execute instructions stored by a computer readable medium for performing various client operations such as input output communication data processing and the like.

The network may include a circuit switched voice or data network a packet switched voice or data network or any other network able to carry voice and or data for example Internet Protocol IP based or asynchronous transfer mode ATM based networks including wired or wireless networks. The network may be configured to handle voice traffic for example Voice over IP VOIP network. The network also may be configured to handle web traffic such as hypertext transfer protocol HTTP traffic and hypertext markup language HTML traffic. The network may include the Internet Wide Area Networks WANs Local Area Networks LANs analog or digital wired and wireless networks e.g. IEEE 802.11 networks Public Switched Telephone Network PSTN Integrated Services Digital Network ISDN and Digital Subscriber Line xDSL Third Generation 3G or Fourth Generation 4G mobile telecommunications networks a wired Ethernet network a private network such as an intranet radio television cable satellite and or any other delivery or tunneling mechanism for carrying data or any appropriate combination of such networks.

The data center includes a network gateway that is coupled to the call platform e.g. through a VoIP network connection or a data network. The network gateway may be a server computer a desktop computer or some other suitable device that receives user calls from or places calls to communications devices e.g. voice communications device via the network and forwards the calls to the call platform . The network gateway also responds to the calls in accordance with instructions received from the call platform .

In the call platform the voice response unit VRU module is connected to an auto speech recognition ASR unit and answering machine detection AMD module . The data store is accessible by the ASR and the AMD . In some implementations the data store may be a file system while in other implementations the data store may be a database.

The VRU includes one or more processing devices e.g. servers and or computers and instructions that are executed by the processing devices for handling calls with voice communications devices e.g. voice communications device . The calls are forwarded through the network gateway between the call platform and the voice communications devices. The instructions executed by the VRU processing devices may be stored in memory local to the VRU or the instructions may be stored in the data store and accessed by the VRU

In some implementations the VRU processes calls in accordance with a voice program. The voice program may be accessed from local memory within the VRU or from the call platform . In some implementations the VRU processes voice programs that are script based voice applications. The voice program therefore may be a script written in a scripting language such as for example voice extensible markup language VoiceXML or speech application language tags SALT .

In some implementations the VRU includes a voice application server and computer systems that interface and provide data to the voice application server. The VRU may send voice application programs or scripts to the network gateway for processing and may receive user responses in return. The user responses may be analyzed by the VRU and new programs or scripts that correspond to the user responses may then be sent to the network gateway for processing.

In some implementations the VRU may initiate an outbound call to voice communications device . When the outbound call is established the VRU determines with the help of the AMD whether a call recipient answering the call is a human or an answering machine.

The ASR includes one or more processing devices e.g. servers and or computers and instructions that are executed by the processing devices for performing grammar matching for the calls that are handled by the VRU . The instructions executed by the ASR processing devices may be stored in memory local to the ASR or the instructions may be stored in the data store and accessed by the ASR

In some implementations voice data that is received as part of a call handled by the VRU is forwarded to the ASR . The voice data may be for example answers by the call recipient to questions that are asked by the VRU based on the voice program. The ASR has access to grammar for all possible answers for each question that might be asked by the VRU . The grammar may be stored in the data store or it may be stored in memory local to the ASR . The grammar also may be dynamically generated.

The ASR analyzes the voice data received from the VRU and attempts to match the voice data to the grammar that is known to the ASR and or to grammar that is dynamically generated. The ASR sends a grammar match for the voice data to the VRU with a confidence interval. The confidence interval may indicate an extent of match between the voice data and the grammar that is sent to the VRU

The AMD includes one or more processing devices e.g. servers and or computers and instructions that are executed by the processing devices for detecting whether a call recipient is a human or an answering machine. The instructions executed by the processing devices associated with the AMD may be stored in memory local to the AMD or the instructions may be stored in the data store and accessed by the AMD

In one implementation the VRU may execute a VoiceXML script to place an outbound call to the voice communications device . When the outbound call is answered the VRU receives an indication that the call has been established. Along with the indication that the call has been established the VRU receives voice data generated by the call recipient who answered the call using the voice communications device . The voice data may be received by the call platform through the network and the network gateway .

The VRU sends to the AMD the first section of the voice data received from the call recipient. In one implementation the VRU may be prompted to call the AMD based on instructions in the VoiceXML script that is running in the VRU . For example the VRU VoiceXML script may have an initial grammar tag that calls the AMD . In addition to the voice data the VRU also may provide to the AMD grammar tags with parameters. The grammar tags may be stored for example in the data store or they may be stored in the VRU

The AMD processes the voice data received from the VRU based on the grammar tags and or instructions provided by the VRU . Once the processing is complete the AMD may return a result to the VRU indicating whether the voice data is generated by a human or an answering machine. For example the output of the AMD may be a binary value with one value e.g. binary value 0 indicating that the call recipient is an answering machine and the other value e.g. binary value 1 indicating that the call recipient is human. The messages exchanged by the VRU the ASR and the AMD may be based on the Real Time Protocol RTP format. Alternatively or in addition the messages may be in Media Resource Control Protocol MRCP format.

In some implementations the functionality provided by the call platform may be configured by a user through the AMD module . For example the data center may provide outbound calling services to multiple clients. Each client may be associated with a voice site or more generally a voice service that is used to provide outbound calling services to the users associated with the client. The voice sites may be hosted by the data center and processed by the call platform . A client may configure his or her voice site to place automated outbound calls to voice communications device using the VRU . Each voice site may be associated with its own AMD module . The client may configure the AMD module and customize the AMD module tailored to the functionality provided by the client s voice site.

The GUI include a suite of options that may be selected for configuring the AMD module. In one implementation the GUI will be provided on a website belonging to e.g. hosted by or associated with the data center . Clients of the data center may have individual login accounts to access the GUI on the website belonging to the data center .

A client may log in to the client s voice site account on the website belonging to the data center and access the GUI to configure the AMD used by the client s voice site. The client will be able to configure whether to enable outbound calling for the client s voice site by checking option on the GUI . If option is checked the client may further specify how the call platform will handle a human call recipient and an answering machine call recipient . For example the client may specify that if the call recipient is human then the call recipient be connected to a human operator. On the other hand if the call is answered by an answering machine voicemail the call would be connected to voicemail.

The client also may specify in field the IP addresses of machines e.g. client computer systems owned by the client from which the representatives of the client will be allowed to access an application programming interface API for initiating the outbound calls. An Originating Phone Number option on the GUI enables the client to specify for the outbound calls that are initiated the originating phone number that will appear as caller identification information on the voice communications device belonging to the call recipient.

The client may select a Scheduling option on the GUI . If the client selects option then the outbound calls can be placed by the call platform used by the client on the time periods specified by the client using the fields through . However if the scheduling option is not selected by the client then outbound calls can be placed at any time. The latter may be the case for example when the client is a security services provider who may need to send alert messages to subscribed users at any time of the day or night.

A Device Detection option is selectable to allow the client to choose whether to use the AMD module by selecting Version 2 radio button in option or a previous version that is indicated by the Version 1 radio button. In one implementation the previous version is a version of the AMD module that uses a different answering machine detection algorithm to determine whether the call recipient for outbound calls is human or an answering machine.

When the VRU receives an indication that an outbound call has been answered the VRU may play a message to the call recipient while the AMD module is in the process of determining whether the call recipient is a human or an answering machine. The message played to the call recipient may be selected by the client using a Pick up Prompt option on the GUI . For example the client may decide to play an audio stream that is stored in an audio file in the data store . The audio file may be selected by the client using a Link Audio link associated with option .

A Call Type option on the GUI enables the client to select predetermined values for the parameters used by the AMD based on the type of outbound calls that may be placed by the client s voice site. In one implementation the predetermined values may be optimal values that have been previously determined by the data center for specific types of the outbound calls and provided to the clients as options to facilitate the clients configuration of the AMD

In one implementation the data center provides three different call types a campaign call type a notification call type and an autodialer call type. The campaign call type is used when general settings are to be applied to the client voice site for outbound calls.

The values of the parameters that may be used by the AMD for the campaign call type are shown in the GUI . The campaign call type may be used when general settings are to be applied to the client voice site for outbound calls. Accordingly the campaign call type provides predetermined values for a general setting of the AMD parameters .

 Max Time Out indicates the maximum amount of time that the AMD may listen to voice data in order to make a determination on the type of the call recipient. In one implementation the detection duration used by the AMD may not be longer than the time specified by option irrespective of the values of the other parameters. If the AMD cannot make a determination regarding the type of the call recipient after listening for a time interval equal to that specified by option then the AMD concludes that the call recipient is an answering machine. The AMD sends this determination to the VRU which may then connect the call recipient to an automated message recorded by the client.

If the client selects a Touch Tone parameter then if the AMD detects a DTMF dual tone multi frequency signal received in the voice data the AMD will determine that the call recipient is an answering machine. In such an event even if the call recipient is human if the call recipient pressed a DTMF button on the voice communications device during detection by the AMD the call recipient will be treated as an answering machine and the VRU may for example play an automated message recorded by the client.

If the Noise parameter is selected by the client then if the AMD detects noise in the first few voice frames analyzed by the AMD the AMD will determine that the call recipient is human and send this determination to the VRU. Upon receiving this determination from the AMD the VRU may for example connect the call recipient to a human agent who is employed by the client to answer human call recipients. In one implementation the first few voice frames may correspond to the sound that is generated between the initial call answer by the call recipient and if the call recipient is a human the positioning of the voice communications device in a physical configuration that enables the human to use the voice communications device to answer the call e.g. positioning the voice communications device to the human s ear . The human act of physically positioning the voice communications device to enable the human call recipient to answer the call may result in noise that can be detected and used to distinguish a human call recipient from an answering machine call recipient which may not exhibit such noise in answering the call.

The No Speech parameter may be used in parallel with the Noise parameter . If the No Speech parameter is selected the AMD starts a timer from the moment the first segments of voice data is received from the VRU. If no speech which may be human speech or noise is detected in the voice data within a predetermined time interval as counted by the timer then the AMD determines that the call recipient is an answering machine and informs the VRU accordingly. The VRU may then for example play to the call recipient an automated message recorded by the client. The predetermined time interval counted by the timer may be on the order of a few seconds. For example in one implementation the predetermined time interval may be 6 seconds.

The Silence parameter is used in conjunction with the Silence Threshold parameter . If the Silence parameter is selected by the client the AMD measures the time elapsed due to a silence from the moment the last word was spoken by the call recipient. If the time elapsed exceeds the value specified by the client in the Silence Threshold parameter the AMD determines that the call recipient is human and informs the VRU accordingly.

The Word Count parameter is used in conjunction with the Word Threshold parameter . If the Word Count parameter is selected by the client the AMD counts the number of words spoken in the voice data that is analyzed by the AMD. If the total number of words counted by the AMD reaches and or exceeds the value specified by the client in the Word Threshold parameter the AMD determines that the call recipient is an answering machine and informs the VRU accordingly.

The Beep timeout parameter may be used to improve the system behavior once the AMD has determined the type of the call recipient. In one implementation the Beep timeout parameter is used with the notification call type.

The AMD may determine based on other parameters that the call recipient is an answering machine. Upon such a determination the AMD will listen for an audio sound corresponding to an answering machine beep which is used by the answering machine to indicate the start of voice message recording for a period of time equal to the value specified by the client in the beep parameter . The AMD will inform the VRU of its determination either when it hears the beep or when the Beep timeout is reached which ever occurs earlier. The Beep timeout parameter may improve the system behavior by preventing voice messages that are recorded by the system on the answering machine from being partially not recorded as a result of the playing of the voice message by the system not being synchronized with the answering machine recording operation.

Therefore the AMD module implemented by the communications system may be configured using the GUI . The range of customization options provided by the GUI enables the communications system to implement the AMD module using state of the art techniques. This may provide high accuracy in determining the type of the call recipient.

As described previously while configuring the AMD module the client may specify or upload an audio file that is to be used as a greeting prompt when outbound calls are made to voice communications devices. When the outbound calls are answered the call recipients hear the greeting prompt. The AMD module may be configured such that the greeting prompt is stopped when the call recipient e.g. a human or an answering machine starts speaking. The AMD module may return a detection result indicating the type of the call recipient prior to contemporaneous with or subsequent to the call recipient stopping to speak. This may allow the clients to provide the call recipients with a better calling experience. For example when using the autodialer call type the call recipients may not even notice the existence of an autodialer system.

The call center may provide different parameter sets for the different call types. In one implementation the parameters are tuned carefully by training based on recorded data from real world calls. However for some voice sites the parameters may not be suitable due to the variations in the speech habits of targeted call recipients e.g. the voice frequency speed and patience of young people may differ from that of the elderly . For such voice sites the ability to configure the AMD module may provide the clients with an efficient way to customize parameters for the target call recipients and thereby provide the target call recipients with an enhanced calling experience.

The autodialer call type is associated with the autodialer service that is provided by the data center . The autodialer service is configured to dial telephone numbers automatically to communicate between any two voice communications devices through the network . Once the connection has been established between the callee device and the call platform running the autodialer service the call platform will announce the called party and connect the callee device with the caller device.

The autodialer call type may be used to enable the AMD to determine quickly whether the call recipient is human. This may be useful for example to connect a human agent quickly to the call recipient if a human answers the outbound call such that the human call recipient does not experience a prolonged silence period when he or she answers the call. The silence period may correspond to the time taken by the AMD module to determine whether the call recipient is a human or a machine.

The various fields in the GUI are similar to the fields in the GUI except as noted below. The Pick up Prompt option in GUI shows a text field that may be used by the client to enter a text message. The VRU plays the text message to the call recipient when the outbound call is answered. The Pick up Prompt option may be used as an alternative to the Pick up Prompt option in GUI . In one implementation at a given time the client is allowed to select one of the two options and but not both.

The Call Type option in GUI may be set to Autodialer while the Call Type option in GUI is set to Campaign. The predetermined values for the various parameters used to configure the AMD for the autodialer call type are similar to the predetermined values used in the campaign call type shown in GUI except as noted below.

The Touch Tone parameter is not selected in the autodialer call type but it may be selected in the campaign call type the latter as shown by option in GUI . Similar to the Silence parameter in campaign call type GUI the Silence parameter in GUI may be used in conjunction with the Silence Threshold . The predetermined value of Silence Threshold for the autodialer call type is set to 2000 while the value of Silence Threshold for the campaign call type is set to 1000. Therefore for the autodialer call type the AMD may wait for a longer time interval of silence compared to the campaign call type before determining that the call recipient is human and accordingly informing the VRU.

The Word Count parameter may be selected for the autodialer call type and used in conjunction with the Word Threshold parameter . If the Word Count parameter is selected the AMD determines whether the number of words spoken in the voice data reaches and or exceeds the value specified in the Word Threshold parameter . If a positive determination is made the AMD determines that the call recipient is an answering machine.

In one implementation the value for Word Threshold may be set to 5 for the autodialer call type. The value may be based on a determination that if a human answers a call the human typically says only a few words e.g. Hello before going silent and waiting for a response from the caller. On the other hand if an answering machine receives the outbound call the answering machine may be configured to play a recorded greeting that includes a much greater number of words. Therefore by analyzing the word count the AMD may quickly determine the type of the call recipient. However this approach may return false negatives in some cases e.g. a talkative human answering the call and speaking a number of words that exceed the threshold . Therefore for call types where an accurate determination may be important the Word Count parameter may be unselected. For example the Word Count parameter is not selected for the campaign call type.

The Beep Timeout parameter may be unselected in the autodialer call type. This may be achieved for example by setting the value of Beep Timeout parameter to . This may be the case for the autodialer call type since a low or no beep timeout value may facilitate a quicker determination of the type of the call recipient.

The notification call type is associated with the notification service that is provided by the data center . The notification service combines software and hardware to provide a means for delivering a pre recorded message to a set of recipients by way of phone email and or text messages. For example a doctor may use the notification service to send messages to patients by making phone calls. The pre recorded messages may confirm medical appointments between the patients and the doctor. As another example a voice site associated with a car manufacturer may use the notification call type to reach out to owners of a car model made by the car manufacturer. The pre recorded message or notification may inform the owners of some safety information or recall issue.

The various fields in the GUI are similar to the fields in GUI or GUI except as noted below. The Call Type option in GUI may be set to Notification so that the predetermined values for the various parameters used by the AMD are set to values that are suitable for the notification call type. For example the Beep Timeout parameter may be set to a value of 10000 milliseconds. This may provide the voice site with a sufficiently long wait interval before recording a message which may be the pre recorded notification. Therefore the beep timeout interval may help to ensure that the pre recorded notification which may include important information is properly recorded in the answering machine associated with the voice communications device .

The process starts when the VRU receives an indication of an outbound call being answered and one or more voice frames being received by the VRU . The outbound call may be placed by the call platform to a voice communications device and the call may be answered by a call recipient associated with the voice communications device .

In this context a voice frame may represent a unit of audio data. A voice frame may include a header and a payload with the latter being a voice packet. Alternatively a voice frame may be a chunk of audio data that is captured for a predetermined period of time e.g. for a certain number of milliseconds. The predetermined period of time may be the same for multiple voice frames such that the sizes of the chunks are the same. Voice frames may be sent as part of an RTP stream.

Upon receiving the first few voice frames from the call recipient the VRU may access the AMD module and send it the initial voice data that is received by the VRU

In parallel with accessing the AMD the VRU may check whether a pick up prompt is configured for the voice site . For example the VRU may check whether option in GUI specifies an audio file that is to be played. If a pick up prompt is configured the VRU starts playing the configured prompt . On the other hand if a pick up prompt is not configured the VRU does not play any prompt .

While the pick up prompt is playing the VRU checks the received voice data to determine if speech is detected which may indicate that the call recipient is speaking. If speech is detected the VRU stops playing the prompt .

While the pick up prompt is playing or by the time the pickup prompt has completed playing the AMD may return a result to the VRU with a determination of the type of the call recipient. In one implementation on receiving the determination from the AMD the VRU instructs the AMD to stop processing data . However in other implementations the VRU may let the AMD to continue running and may continue providing the AMD with voice data for processing .

Subsequent to receiving the result from the AMD the VRU checks whether the callee has hung up 518 . If the VRU determines that the callee has hung up the call is finished and VRU terminates the connection. In other implementations the VRU is periodically monitoring for whether the callee has hung up and finishes the call terminates the connection irrespective of receipt of the result from the AMD

On the other hand if the VRU determines that the callee has not hung up the VRU continues the call based on the AMD result . For example if the AMD returned a result indicating that the call recipient is an answering machine the VRU may process call handling instructions specific to communication with an answering machine. For example the VRU may play an automated message that has been recorded by the client. However if the AMD returned a result indicating that the call recipient is a human the VRU may process call handling instructions specific to communication with a human. For example the VRU may connect the call recipient to a human agent who has been employed by the client to answer calls from human recipients.

The process starts when the AMD receives a new frame from an RTP stream . For example an outbound call may be placed by the call platform to a voice communications device and the call may be answered by a call recipient associated with the voice communications device . The VRU may receive indication that the outbound call has been answered and may receive one or more voice frames as part of an RTP stream over the established voice connection. The VRU may forward one or more voice frames received in the RTP stream to the AMD

Upon receiving the one or more voice frames from the VRU AMD starts a first timer . The first timer counts to the maximum time out value that may have been configured by the client e.g. using option in GUI .

The AMD checks whether the frame is empty . If the AMD determines that the frame is empty e.g. if the frame includes no speech or other sound AMD increments the empty frame count . In one implementation the frame may be detected as empty if the VRU does not send any RTP packet to the AMD in the frame.

The AMD starts a second timer that counts from the time of call pickup to predetermined time interval for a no speech timeout. The second timer is started if no speech has been detected in the response from the time of call pickup. In one implementation the predetermined time interval for the second timer is set to 6 seconds.

The AMD checks whether time corresponding to the No Speech time out value has elapsed . If time corresponding to the No Speech time out value has not elapsed or if speech has been detected since the time of call pickup such that the No Speech time out value is no longer relevant AMD checks whether time corresponding to the maximum time out value has elapsed . For example AMD measures the time counted by the first timer. If AMD determines that the time counted by the first timer has reached the maximum time out value i.e. maximum time out has occurred then AMD concludes that the call recipient is an answering machine and returns the result to the VRU . However if maximum time out has not occurred AMD reads a new frame from the RTP stream .

On the other hand if the AMD determines that the No Speech time out has occurred the AMD checks whether the No Speech parameter is selected e.g. using option in GUI . If AMD determines that the No Speech parameter is selected then AMD concludes that the call recipient is an answering machine and returns the result to the VRU . However if No Speech parameter is not selected AMD reads a new frame from the RTP stream .

If the frame read from the RTP stream is not empty AMD decodes the frame and adds it to a ring buffer . In one implementation the ring buffer may be a temporary memory storage that is internal to the AMD module. In other implementations the ring buffer may be memory storage that is external to the AMD e.g. the data store

The AMD then checks whether the ring buffer is full . If the ring buffer is not full AMD reads a new frame from the RTP stream . However if the ring buffer is full AMD starts detection to decide whether the call recipient is an answering machine or a human.

When AMD starts the detection it first checks whether time corresponding to the maximum time out value has elapsed . For example AMD measures the time counted by the first timer. If AMD determines that the time counted by the first timer has reached the maximum time out value i.e. maximum time out has occurred then AMD then AMD concludes that the call recipient is an answering machine and returns the result to the VRU

However if maximum time out has not occurred the detection process continues and AMD detects the frame type for the frames in the ring buffer . In one implementation this is performed by the AMD by examining the type of information included in the frames retrieved from the ring buffer.

Based on detecting the frame type AMD determines whether the frame type is noisy . The determination whether the frame type is noisy may be done for example by measuring the energy level corresponding to the frames in the ring buffer. For noisy frame types the energy level will correspond to a certain range that will be different from the energy levels corresponding to frames that are not noisy.

If the AMD determines that the frame type is noisy the AMD checks whether the Noise parameter is checked . This may be the case for example if the client has selected option in GUI . If the Noise parameter is checked AMD concludes that the call recipient is a human and returns the result to the VRU . However if the Noise parameter is not checked AMD resets the ring buffer and proceeds to read a new frame from the RTP stream .

On the other hand if AMD determines that the frame type is not noisy then the AMD checks whether the frames include a DTMF signal . If the AMD determines that one or more frames include a DTMF signal then the AMD determines whether the Touch Tone parameter is checked . This may be the case for example if the client has selected option in GUI . If the Touch Tone parameter is checked the AMD concludes that the call recipient is an answering machine and returns the result to the VRU . However if the Touch Tone parameter is not checked AMD resets the ring buffer and proceeds to read a new frame from the RTP stream .

If the AMD determines that the frames do not include a DTMF signal then the AMD checks whether the frames include a beep . If the check returns a positive result then the AMD concludes that the call recipient is an answering machine and returns the result to the VRU . However if the check returns a negative result the AMD proceeds to check whether the frames include silence i.e. there is no sound content in the frames.

If the AMD determines that the frames include silence then the AMD determines whether time corresponding to the Silence Threshold value has elapsed . The Silence Threshold value may have been set for example by the client using parameter in GUI .

If time corresponding to the Silence Threshold value has not elapsed AMD resets the ring buffer and proceeds to read a new frame from the RTP stream . However if time corresponding to the Silence Threshold value has elapsed then the AMD determines whether the Silence parameter is checked . This may be the case for example if the client has selected option in GUI . If the check returns a positive result then the AMD concludes that the call recipient is a human and returns the result to the VRU . However if the check returns a negative result AMD resets the ring buffer and proceeds to read a new frame from the RTP stream .

On the other hand if AMD determines that the frames do not include silence the AMD launches an EOS end of speech timer and determines whether the Word Count parameter is checked . This may be the case for example if the client has selected option in GUI . If the Word Count parameter is not checked AMD resets the ring buffer and proceeds to read a new frame from the RTP stream .

If the Word Count parameter is checked AMD counts the number of words it detects in the frames in the ring buffer . Every time the AMD detects a word in the frames it adjusts the EOS timer and resets it to count from the start. The EOS timer is used to count time corresponding to the value specified by the Silence Threshold parameter.

Along with counting the words detected in the frames the AMD checks whether the EOS timeout has occurred . If the AMD determines that EOS timeout has occurred then the AMD checks whether to wait for Beep Timeout . This may be the case for example if the client has set a non zero value for option in GUI .

If the AMD determines that it does not have to wait for Beep Timeout AMD resets the ring buffer and proceeds to read a new frame from the RTP stream . However if the Beep Timeout value is non zero the AMD waits till a time interval corresponding to the Beep Timeout value has elapsed or till the AMD has detected a beep in the voice data included in the frames whichever is earlier. Then the AMD returns a result to the VRU indicating that the AMD has determined that the call recipient is an answering machine .

If the Word Count parameter is checked in addition to counting the number of words detected in the frames the AMD checks whether the word count is greater than the Word Threshold value . The Word Threshold value may have been set for example by the client using parameter in GUI .

If the word count does not exceed the Word Threshold value AMD resets the ring buffer and proceeds to read a new frame from the RTP stream . However if the word count exceeds the Word Threshold value then the AMD checks whether to wait for Beep Timeout . If the AMD does not have to wait for Beep Timeout AMD resets the ring buffer and proceeds to read a new frame from the RTP stream . However if the Beep Timeout value is non zero the AMD waits till a time interval corresponding to the Beep Timeout value has elapsed and then returns a result to the VRU indicating that the AMD has determined that the call recipient is an answering machine .

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a LAN a WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A number of implementations have been described. Nevertheless it will be understood that various modifications may be made. For example while many of the above implementations have focused on a call center host system that uses a voice site architecture other call center host systems that do not employ such an architecture may also leverage the above described techniques to improve answering machine detection. For example rather than being provided associated with particular voice sites clients may instead be provided associated with tailored or generic voice services that include an outbound calling component where the outbound calling component of the service may leverage the disclosed answering machine detection techniques.

In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other implementations are within the scope of the following claims.

