---

title: Information processing apparatus, method of controlling the same and non-transitory computer readable medium
abstract: An information processing apparatus capable of executing processing in a background, comprises a control unit configured to, when processing is executed in accordance with a request from an application, control execution of other processing in the background, wherein the control unit suppresses, in accordance with the request from the application, so that the other processing is not executed in the background, and releases the suppression when, in a case where a request for release of suppression is not instructed from the application, a predetermined interval elapses from when the suppression started.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09626219&OS=09626219&RS=09626219
owner: CANON KABUSHIKI KAISHA
number: 09626219
owner_city: Tokyo
owner_country: JP
publication_date: 20151104
---
The present invention relates to an information processing apparatus a method of controlling the same and a non transitory computer readable medium.

In recent years in image processing apparatuses there exist those that cause a comprised program to execute in the background. For example in Japanese Patent Laid Open No. 2013 131818 when it is determined that a long time is required for execution of instructed processing a warning to that effect and a message querying as to whether or not to execute a logout towards a user who is logged in is displayed on an image forming apparatus. When execution of the logout is selected by the user the image processing apparatus causes the user to log out and executes the instructed processing as background processing. With this even in a case where the instructed processing requires a long time the image processing apparatus can execute the processing after the user has performed the logout.

Meanwhile image processing apparatuses generally comprise an application platform that causes various functions such as those of a scanner a printer or the like to operate in units of applications. Applications that operate on an application platform and background processing that the image processing apparatus executes are multitasked and executed in parallel by the image processing apparatus. For this reason when the image processing apparatus performs processing using a CPU as background processing there is a performance degradation such as a degradation in operationally of an application that provides a UI screen displayed on an operation screen on the image processing apparatus for example.

Accordingly in Japanese Patent Laid Open No. 2011 100475 control is performed so that in a case where an application for which background processing cannot be executed is activated the background processing is suspended and in a case where applications for which background processing can be executed are activated background processing is performed.

Japanese Patent Laid Open No. 2011 100475 defines information as to whether or not background processing can be executed in advance for programs configuring applications and based on this information performs control of background processing. Meanwhile there are cases in which an image processing apparatus falls into a state in which background processing cannot be executed when background processing execution control is performed based merely on information as to whether or not the image processing apparatus can execute it and activation statuses for applications in various execution modes. For example in an application provided as a Web application as long as it is being accessed from an information processing apparatus the image processing apparatus determines the application to be activated. For this reason when the Web application declares that background processing cannot be executed the image processing apparatus cannot execute background processing as long as it is being accessed irrespective of whether or not a user is operating. Also in a case of an application that displays a UI screen on an operation screen on the image processing apparatus when processing is stopped in an activated state due to an application malfunction the image processing apparatus continues to suppress the background processing. In such a case the image processing apparatus becomes unable to execute the background processing as long as the application is not terminated forcibly.

The present invention in view of the above described problems performs more appropriate control for suppression of background processing.

According to one aspect of the present invention there is provided an information processing apparatus capable of executing processing in a background comprising a control unit configured to when processing is executed in accordance with a request from an application control execution of other processing in the background wherein the control unit suppresses in accordance with the request from the application so that the other processing is not executed in the background and releases the suppression when in a case where a request for release of suppression is not instructed from the application a predetermined interval elapses from when the suppression started.

According to another aspect of the present invention there is provided a method of controlling an information processing apparatus capable of executing processing in a background the method comprising a control step of when processing is executed in accordance with a request from an application controlling execution of other processing in the background wherein in the control step suppression is performed in accordance with the request from the application so that the other processing is not executed in the background and the suppression is released when in a case where a request for release of suppression is not instructed from the application a predetermined interval elapses from when the suppression started.

According to another aspect of the present invention there is provided a non transitory computer readable medium storing a program for causing a computer to function as a control unit configured to when processing is executed in accordance with a request from an application control execution of other processing in the background wherein the control unit suppresses in accordance with the request from the application so that the other processing is not executed in the background and releases the suppression when in a case where a request for release of suppression is not instructed from the application a predetermined interval elapses from when the suppression started.

By virtue of the present invention it becomes possible to suppress an influence of background processing and cause an application to operate stably. Also it becomes possible to avoid a state in which the execution of background processing is suppressed more than is necessary.

Further features of the present invention will become apparent from the following description of exemplary embodiments with reference to the attached drawings .

Hereinafter embodiments for working the present invention are explained using drawings. Note that in the following explanation background is recited as BG and platform is recited as PF .

Furthermore the image processing apparatus comprises a CPU for controlling the apparatus on the whole a RAM that can be used as a work space a reading apparatus for reading an image original a printing apparatus for performing print operations and a storage apparatus for storing various control programs. Each portion comprised in the image processing apparatus is connected by a main bus and mutual transmission reception of data is possible. Note that the user input apparatus and the UI display apparatus are recited as being separate apparatuses but an operation unit in which these apparatuses are in a single body may be provided.

The information processing apparatus comprises a network apparatus for performing communication with external apparatuses a CPU for controlling the apparatus on the whole a RAM that can be used as a work space and a storage apparatus for storing control programs. Also each portion comprised in the information processing apparatus is connected by a main bus and mutual transmission reception of data is possible.

Firstly explanation will be given software that the information processing apparatus is provided with. The information processing apparatus comprises a communication unit and a Web browser . The communication unit is software for performing HTTP Hyper Text Transfer Protocol communication by controlling the network apparatus . The Web browser displays operation screens not shown provided by an application such as an update management unit a life cycle management unit or the like of the image processing apparatus via the communication unit . Also the Web browser transmits to the image processing apparatus via the communication unit input information from the user which is input through a displayed operation screen. Note that in the present embodiment the Web browser is used for communication with the image processing apparatus but it is sufficient that there be a software configuration that supports a protocol for communication with applications and limitation is not made to this.

Next explanation will be given for software that the image processing apparatus is provided with. The image processing apparatus comprises an OS Operating System a Java VM a system control unit and an application PF . The OS executes management of processes memory management and input output management. The Java VM is a virtual machine for executing Java registered trademark programs and is an execution base for the application PF .

The system control unit is a program for realizing basic functions of the image processing apparatus such as copy and comprises a BG processing management unit . The BG processing management unit queries as to whether another process such as that of the application PF has set a BG processing suppression flag that is whether or not the BG processing suppression flag is true when an execution instruction of a process that is defined in advance to be for BG processing is received. Details of the BG processing control flag will be explained later. If for all of the other processes the BG processing suppression flag is not true the BG processing management unit instructs the execution of the BG processing for a corresponding process. If the BG processing suppression flag is true for even one of the other processes the BG processing management unit does not instruct the execution of the BG processing and a state of waiting for the release of the BG processing suppression flag is entered. The BG processing management unit confirms the status of the BG processing suppression flag in other processes periodically and waits to execute the BG processing until the BG processing suppression flag becomes false for all other processes. Also the BG processing management unit also confirms the state of the BG processing suppression flag of other processes periodically after the execution of the BG processing is instructed for a corresponding process. Then when it is detected that the BG processing suppression flag newly becomes true in another process during execution of the BG processing the BG processing management unit makes an instruction for the interruption of the execution of the BG processing to the corresponding process and a state of waiting for the release of the BG processing suppression flag is entered.

The application PF is an execution foundation capable of executing applications that control the image processing apparatus via control APIs Application Programming Interfaces . The application PF comprises a framework and an application storage region . The framework comprises an OSGi Open Services Gateway initiative registered trademark for performing application life cycle management dependency relationship management or the like and a class library group that constitutes a platform. For the life cycle management the dependency relationship management and the like conventional technology is used and so detailed explanation here is omitted. The application storage region stores applications that are saved in the storage apparatus and managed on the framework . The application storage region comprises a system application unit and an application unit .

The system application unit is comprised of an application group for providing functions constituting the application PF . The system application unit comprises the update management unit and the life cycle management unit . The update management unit is an application for instructing the system control unit via the framework to update firmware written to the storage apparatus . The life cycle management unit is an application for outputting an instruction to the framework and performing life cycle management of applications on the application storage region . Also the update management unit and the life cycle management unit provide an operation unit not shown for performing application operations and receive application operation instruction by HTTP communication from the information processing apparatus via the network apparatus by a communication unit and a communication unit . In the present embodiment the update management unit and the life cycle management unit are explained as Java Servlet Web applications but as long as they provide an operation unit for communication with the information processing apparatus limitation is not made to this.

The application unit is comprised by an application for controlling the image processing apparatus . In the present embodiment the application unit comprises an application A which is an application for controlling the image processing apparatus . Also the application A comprises a function for executing a BG processing suppression API provided by the application PF when control of the image processing apparatus is instructed.

Explanation is given for a method of executing the BG processing suppression instruction by the application A a configuration of the BG processing suppression API that the application PF provides and a BG processing suppression instruction method in the present embodiment using to .

In the application A illustrates an example of a program for making a control instruction including suppression of BG processing to the image processing apparatus . The application A comprises a BG processing suppression processing unit reference numeral for executing a control instruction including suppression of BG processing. The reference numeral comprises reference numerals to .

The reference numeral denotes a definition by which the application A instructs a suppression of BG processing by executing a BG processing suppression API provided from the application PF . In the present embodiment the application A executes the BG processing suppression API with the application name in a first argument 15000 in a second argument and true in a third argument. Note that a definition and processing of the API will be explained later using and .

Reference numeral is an application specific definition by which the application A instructs control of the image processing apparatus . In the present embodiment it is assumed that this is processing that is influenced by a performance degradation when the image processing apparatus executes BG processing such as when processing of a response from an operation unit that provides an operation screen to the UI display apparatus is performed for example.

The reference numeral denotes a definition by which the application A instructs a release of a suppression of BG processing by executing a BG processing suppression release API provided from the application PF . In the present embodiment the application A executes the BG processing suppression release API with an application name as the first argument. Note that a definition and processing of the API will be explained later using FIG. A and .

The reference numeral comprises reference numerals and . Reference numeral is a definition of a setBackgroundDisabled function which is a BG processing suppression API. Reference numeral receives a key an application identification object for instructing execution a disabledTime BG processing suppression interval and a disabledCancelFlag a flag for releasing the BG processing suppression as arguments. Thereafter reference numeral adds a flag true representing execution of a setBackgroundDisabled function to the received arguments as a first argument and executes a setBackgroundInhibitStatus function reference numeral as actual processing. The flag added here as the first argument will be called the BG processing suppression flag hereinafter. Note that the details of the internal processing of reference numeral will be explained later using .

Parameters designated as arguments in reference numeral are explained. The first argument key designates an object for identifying an application that executes the BG processing suppression API of reference numeral . The application PF uses this to specify an application that instructed suppression of BG processing. Any value may be used if it can identify the application that instructed the suppression of the BG processing uniquely and in the present embodiment the name of the application that executed it is set as the first argument key. The second argument disabledTime designates a predetermined interval that the application suppresses the BG processing. The application PF performs count processing in the suppression interval in the internal processing of reference numeral and makes a BG processing suppression release instruction towards the BG processing management unit when the count becomes zero. Here for the units of the value designated as the suppression interval anything may be used. The third argument disabledCancelFlag designates a flag for releasing the BG processing suppression in order to determine whether or not to execute the BG processing suppression release instruction towards the BG processing management unit upon an occurrence of a particular event in the image processing apparatus . Note that in the present embodiment the particular event is assumed to be an event upon which the system of the image processing apparatus transitions into a sleep state or a screen being displayed on the UI display apparatus transitions to a default screen.

When true is designated for the third argument the BG processing suppression release instruction is made to the BG processing management unit upon the occurrence of the particular event. That is when the particular event occurs the suppression of the BG processing is forcibly released. Here a sleep state transition event is an event upon which transition is made into a power saving mode which occurs in a situation in which the image processing apparatus is not operating for a fixed interval where there is no operation from the user input apparatus for example. Also a default screen transition event is an event upon which display of the UI display apparatus returns automatically to the default screen a home screen or the like which occurs under the same conditions as the sleep state transition event. In other words in the present embodiment a particular event is defined as something that occurs when the operation of the image processing apparatus is in a standby state and by which it can be determined that it is not necessary for the application to execute a BG processing suppression control instruction. Accordingly the occurrence of such an event is a condition of the suppression release flag. Note that the suppression release flag condition may be a state transition event by which it can be determined that the operation of the image processing apparatus is in a standby state but it is not limited to this.

Explanation now returns to the definition of the APIs in . Reference numeral is a definition of a setBackgroundDisabled function which is a BG processing suppression API similar to reference numeral . Reference numeral receives as arguments a first argument key and a second argument disabledTime. Thereafter reference numeral adds true as a value of a disabledCancelFlag which indicates a suppression release flag to the received arguments and executes the setBackgroundDisabled function reference numeral . Accordingly when an application makes an instruction to suppress the BG processing using an API provided by the BG processing suppression API unit reference numeral the application must designate an object for identifying itself such as an application name and the BG processing suppression interval at the least.

The reference numeral comprises reference numeral . Reference numeral is a definition of a setBackgroundEnabled function which is a BG processing suppression release API. Reference numeral receives as arguments key the object for identifying the execution application for the first argument. Thereafter reference numeral adds a flag false representing execution of a setBackgroundEnabled function to the received arguments as a first argument and executes the setBackgroundInhibitStatus function reference numeral as actual processing. The first argument of reference numeral designates something identical to the key which is designated upon execution of the setBackgroundDisabled functions reference numerals and and in the present embodiment the name of the execution application is designated. This is used in order for the application PF to specify that it is a suppression release instruction of the application that instructed suppression of BG processing. Also in the internal processing of reference numeral when reference numeral is executed it is not necessary to consider the suppression interval of the BG processing or the flag for releasing the BG processing suppression upon the occurrence of an event. For this reason in the execution of reference numeral the designation of disabledTime and disabledCancelFlag is not necessary as it is in reference numeral . Also in reference numeral internally appropriate values for execution of reference numeral are set for arguments. In the present embodiment the values of the arguments are in order false key the application name 0 and false .

Firstly using explanation will be given processing of the setBackgroundInhibitStatus function. When the BG processing suppression API unit reference numeral or the BG processing suppression release API unit reference numeral are executed from the application the application PF in step S performs as determination as to which API the application executed. In this determination the parameter designated as the first argument of the setBackgroundInhibitStatus function is used. If the parameter is true it is treated as a setBackgroundDisabled function reference numerals and being executed and if the parameter is false it is treated as the setBackgroundEnabled function reference numeral being executed.

If the setBackgroundDisabled function is executed YES in step S the application PF in step S determines designation of a suppression release flag of the application which executes the API hereafter the execution application . In this determination the parameter designated as the fourth argument of the setBackgroundInhibitStatus function reference numeral is used. In a case where the designation of the flag is true YES in step S and processing is performed for the first time the application PF in step S performs a registration of a listener for receiving that the predetermined event a sleep or default screen transition event occurred in the image processing apparatus . If it is not the first time the registration of a listener is not performed. The processing upon event detection is executed in parallel to processing of the setBackgroundInhibitStatus function reference numeral in the application PF .

After this the application PF in step S determines whether or not the application that instructed the execution is an application already registered in a true execution application names list. The true execution application names list is something that saves names of applications that executed the BG processing suppression API unit reference numeral and is defined by a variable length array variable or the like in a program. Note that for this determination the parameter designated as the second argument of the setBackgroundInhibitStatus function reference numeral is used.

When the application that instructed the execution is already registered in the true execution application names list YES in step S the processing proceeds to step S. When the application that instructed the execution is not already registered in the true execution application names list NO in step S the application PF in step S registers the name of the application in the true execution application names list. Thereafter the application PF in step S increments a true execution application count. The true execution application count is something that saves the number of applications that executed the BG processing suppression API unit reference numeral and is defined by an integer type variable or the like in a program. The execution application count is used for determination of an update of a state of a later explained BG processing suppression flag. In step S the application PF only in the case where a thread does not exist generates a thread for counting the elapsing of time of the interval in which the BG processing is suppressed which the application designated. This thread as is illustrated in is executed in parallel to the processing of the setBackgroundInhibitStatus function reference numeral as processing of a count thread in the application PF .

In step S the application PF performs processing for updating setting of the interval in which the BG processing is suppressed which the application designated. In the setting update here the parameter designated in the third argument of setBackgroundInhibitStatus function reference numeral is used. For the true execution application suppression interval in the count in the processing of the count thread the application PF performs updating by taking a logical OR with the suppression interval designated by the parameter designated by the application the true execution application suppression interval The updated true execution application suppression interval is referenced in the processing of the count thread illustrated in . After that the processing proceeds to step S.

Similarly in a case where the designation of the flag is false NO in step S the application PF in step S determines whether or not the application that instructed the execution is an application that is already registered in a false execution application names list. The false execution application names list is something that saves names of applications that executed the BG processing suppression API unit reference numeral and is defined by a variable length array variable or the like in a program. Note that for this determination the parameter designated as the second argument of the setBackgroundInhibitStatus function reference numeral is used.

When the application that instructed the execution is already registered in the false execution application names list YES in step S the processing proceeds to step S. When the application that instructed the execution is not already registered in the false execution application names list NO in step S the application PF in step S registers the name of the application in the false execution application names list. Thereafter the application PF in step S increments a false execution application count. The false execution application count is something that saves the number of applications that executed the BG processing suppression API unit reference numeral and is defined by an integer type variable or the like in a program. The execution application count is used for determination of an update of a state of a later explained BG processing suppression flag. In step S the application PF only in the case where a thread does not exist generates a thread for counting the elapsing of time of the interval in which the BG processing is suppressed which the application designated. This thread as is illustrated in is executed in parallel to the processing of the setBackgroundInhibitStatus function reference numeral as processing of the count thread in the application PF .

In step S the application PF performs processing for updating setting of the interval in which the BG processing is suppressed which the application designated. In the setting update here the parameter designated in the third argument of setBackgroundInhibitStatus function reference numeral is used. The application PF updates the false execution application suppression interval in the count in the processing of the count thread of performs by performing a logical OR on it with the suppression interval designated by the parameter designated by the application. The updated false execution application suppression interval is referenced in the processing of the count thread of . After that the processing proceeds to step S.

In step S the application PF takes a total of the execution application counts for both true and false .

In step S the application PF updates the state of the BG processing suppression flag from the total of the execution application counts. In a case where the total execution application count is 0 the application PF sets the BG processing suppression flag to false . In a case where the total execution application count is 1 or more the application PF sets the BG processing suppression flag to true . The BG processing suppression flag is used to determine whether or not to initiate execution of BG processing by the BG processing management unit . If the BG processing suppression flag is false the BG processing management unit can make an instruction for the execution of the BG processing to a corresponding process.

On the other hand in the case where the setBackgroundEnabled function reference numeral is executed NO in step S the application PF in step S obtains information as to whether or not the application that executes the API exists in the true or false execution application name lists. This obtaining is realized by searching each of the true and false execution application name lists using the parameter designated in the second argument of the setBackgroundInhibitStatus function reference numeral by the application PF . After obtaining the information the application PF in step S determines the designation of the suppression release flag of the execution application.

If in the determination of step S the flag is true the application PF in step S deletes the name of the application from the true execution application name list. Thereafter the application PF in step S decrements the true execution application count. Then the application PF in step S determines whether or not the true execution application count is 0 i.e. whether or not there exists an application that performed an instruction to suppress the BG processing. In a case where the true execution application count is not 0 NO in step S the processing proceeds to step S. In a case where the true execution application count is 0 YES in step S the application PF in step S updates the true execution application suppression interval to 0 . After that the processing proceeds to step S.

Similarly if in the determination of step S the flag is false the application PF in step S deletes the name of the application from the false execution application name list. Thereafter the application PF in step S decrements the false execution application count. Then the application PF in step S determines whether or not the false execution application count is 0 i.e. whether or not there exists an application that performed an instruction to suppress the BG processing. In a case where the false execution application count is not 0 NO in step S the processing proceeds to step S. In a case where the false execution application count is 0 the application PF in step S updates the false execution application suppression interval to 0 .

In step S the application PF takes a total of the execution application counts for both true and false . After that the processing proceeds to step S and the application PF updates the state of the BG processing suppression flag from the total of the execution application counts. This processing flow is then terminated.

Note that in the determination of step S when the parameter designated in the second argument does not exist in either of the true or false execution application name lists this processing flow ends without the application PF executing the processing thereafter. This corresponds to a case where prior to the application executing the setBackgroundDisabled function reference numerals and the setBackgroundEnabled function reference numeral is executed. In this case the application PF ends the processing of the setBackgroundInhibitStatus function reference numerals and .

Next using explanation will be given for event detection processing. In step S of after registering the sleep or default screen transition event detection listener the application PF in step S in a case where the occurrence of the event is detected starts the processing of an event notification function corresponding to the listener. In other words the application PF so long as a predetermined event does not occur does not execute the event detection processing illustrated in .

The application PF in step S updates the event detection flag to true . The updated event detection flag is referenced in the processing of the count thread illustrated in .

Finally using explanation will be given for BG processing suppression interval count processing. After generating the count thread in either of step S or step S of the application PF in step S sets the event detection flag to false . These steps are executed as initialization processing upon generation of the count thread by the application PF . Thereafter the application PF executes count processing based on the execution application suppression interval and the state of the event detection flag. Note that the execution application suppression interval is updated by the processing of the setBackgroundInhibitStatus function reference numerals and . Also the event detection flag is updated by the event detection processing of .

In step S the application PF determines whether or not the false execution application suppression interval has elapsed. If it is during the BG processing suppression interval for a false execution application NO in step S the application PF executes true and false execution application suppression interval count processing from step S at that point in time.

If the false execution application suppression interval has elapsed YES in step S the application PF in step S determines whether or not the true execution application suppression interval has elapsed. If the BG processing suppression interval for a true execution application has elapsed already YES in step S the application PF executes processing for releasing the BG processing suppression flag from step S at that point in time.

If the true execution application suppression interval has not elapsed NO in step S the application PF in step S confirms whether or not the event detection flag is true . If the event detection flag is true YES in step S i.e. if the sleep or default screen transition event has occurred during the BG processing suppression interval count processing the application PF executes processing from step S to release the BG processing suppression flag. If the event detection flag is false NO in step S the application PF executes the true and false execution application suppression interval count processing from step S.

In step S the application PF deletes all of the execution application names registered in the true and false execution application name lists. The application PF in step S updates the true and false execution application suppression intervals to 0 . The application PF in step S updates the BG processing suppression flag to false . This processing flow is then terminated.

The application PF in step S causes the processing of the count thread to sleep for a fixed interval. After that the application PF in step S updates the true and false execution application suppression intervals by subtracting the fixed interval amount of time that the processing of the count thread is caused to sleep. Then the application PF repeats the determination processing from step S.

Next processing for suppressing the BG processing of the image processing apparatus from an application in the present embodiment will be explained using . are sequences diagram for showing a processing procedure for a BG processing suppression instruction and a suppression release instruction by the application PF when the application A executes the BG processing suppression instruction API and the BG processing suppression release API. Also illustrate sequences of a BG processing execution procedure via the update management unit by an administrator .

Step S to step S represent processing steps of the application A and in the present embodiment processing from the BG processing suppression processing unit recited in reference numeral is executed. Step S to step S represent processing steps of BG processing suppression interval count processing and event detection processing of the application PF started in parallel upon an instruction of the BG processing suppression instruction API. Step S to step S represent steps for processing a BG processing execution instruction from the administrator which are executed independently to an instruction of the BG processing suppression instruction API.

The application A in step S makes an instruction to the application PF for suppression of the BG processing using the BG processing suppression API reference numeral . In the present embodiment the application A executes the BG processing suppression API in a state having the arguments recited in reference numeral of .

In step S the application PF as processing for updating the BG processing suppression flag based on the BG processing suppression instruction from the application A sets this flag to true . The details of the processing performed in step S correspond to step S to step S step S and step S of . The processing of step S is attached and the application PF in step S generates the count thread for counting the BG processing suppression interval designated by the application A . The details of the processing performed in step S correspond to step S to step S of .

The application A in step S performs control instruction in relation to the image processing apparatus . The processing performed in step S corresponds to reference numeral of and is for a unique function comprised in the application A . The application A in step S makes an instruction to the application PF for release of suppression of the BG processing using the BG processing suppression release API reference numeral . In the present embodiment the application A executes the BG processing suppression release API in a state having the arguments recited in reference numeral of . In step S the application PF as processing for updating the BG processing suppression flag based on the BG processing suppression release instruction from the application A sets this flag to false . The details of the processing performed in step S correspond to step S step S step S step S and step S of . The processing of step S is attached and the application PF in step S updates the count of the BG processing suppression interval designated by the application A to zero. The details of the processing performed in step S correspond to step S to step S of .

The application PF in step S via the count thread repeats the count of the BG processing suppression interval designated by the application A until the count is less than or equal to zero. The details of the processing performed in step S correspond to a processing sequence of step S to step S step S and step S of . Also as step S the details of the suppression interval count processing executed by the count thread which is performed within step S corresponds to step S and step S of .

Here in step S processing is recited for a case where the sleep or default screen transition event is detected or a case where the BG processing suppression interval count designated by the application A elapsed. Specifically this corresponds to a state in which the event detection processing in is executed and the determination of step S of is performed or a case when the determination of step S of is YES.

In a case where the condition of step S is satisfied the count thread in step S updates the BG processing suppression flag to false . The details of the processing performed in step S correspond to step S to step S of .

The administrator in step S inputs a URL Uniform Resource Locator to access the update management unit into the Web browser and requests a connection. The Web browser in step S transmits an HTTP Request to the update management unit via the communication unit . The update management unit in step S transmits HTML data not shown configuring an update management operation screen to the Web browser via the communication unit as an HTTP Response in response to the HTTP Request. The Web browser in step S analyzes the received HTML data and performs a display of the update management operation screen on the Web browser .

The administrator in step S inputs an instruction into the Web browser for updating firmware written to the storage apparatus by BG processing and a request is thereby made to the update management unit for the execution of that instruction. The Web browser in step S transmits an HTTP Request to the update management unit via the communication unit . The update management unit in step S receives the request from the Web browser and makes an instruction towards the BG processing management unit for the execution of firmware updating BG processing.

In step S and step S the BG processing management unit confirms whether or not it is a state in which the BG processing can be executed for each of the processing units that comprise the BG processing suppression flag and receives the states of each of the flags. In the present embodiment the application PF comprises the BG processing suppression flags and the BG processing management unit makes a confirmation towards the application PF as to the state of the BG processing suppression flags.

In a case where even one of the BG processing suppression flags is true the BG processing management unit enters a state of waiting for release of the BG processing suppression flag in step S. In other words in a case where BG processing suppression is instructed overlappingly by a plurality of the applications the suppression is continued until all of the flags are released. In the processing of step S the BG processing management unit in step S executes loop processing until the BG processing suppression flags are all false . Specifically the confirmation of the states of the BG processing suppression flags is performed in step S and step S and fixed interval Wait processing is performed in step S. The processing of step S and step S is the same as the processing of step S and step S.

In a case where all of the BG processing suppression flags are false the BG processing management unit enters a state of BG processing execution initiation in step S. In the state of step S in a case where the BG processing management unit receives the BG processing execution instruction as in step S an instruction for the execution of the BG processing is made to a corresponding process in step S. In the present embodiment an instruction is made to the process that performs the update of the firmware for the execution of the BG processing for updating the firmware from the update management unit .

The update management unit in step S after completion of the processing sequence transmits HTML data not shown configuring a processing completion notification screen as an HTTP Response in response to the request to the Web browser via the communication unit . The Web browser in step S analyzes the received HTML data and performs a display of the completion notification screen on the Web browser .

In the first embodiment it is possible to suppress the execution of BG processing in the image processing apparatus while an application instructs BG processing suppression. By doing this the image processing apparatus can realize causing application to operate stably.

Also by adding information for releasing the suppression of the BG processing when the application instructs a suppression of the BG processing it is possible for the image processing apparatus to actively release the suppression of the BG processing and execute the BG processing. With this it becomes possible to avoid a state in which the image processing apparatus suppresses the execution of BG processing more than is necessary.

Additionally in the present embodiment when the update management unit makes an instruction to the BG processing management unit for BG processing execution an execution instruction is performed via the Web browser from the administrator . However as long as it is possible for the BG processing management unit to receive an instruction for execution of BG processing determine the state of the BG processing suppression flag and execute the BG processing there is no limitation to this configuration. Accordingly for example the form may be such that the update management unit has an operation screen for the UI display apparatus and the update instruction is performed in the BG via the operation screen from the administrator or the form may be such that upon the passage of a particular date time the update instruction is performed automatically in the BG. Also the BG processing execution instruction may be from different processing such as execution of a log collection in the BG in a job log management unit not shown that periodically collects logs of jobs executed by the image processing apparatus .

Next explanation is given for a second embodiment of the present invention. In the configuration of the first embodiment in a case where a large number of applications that execute the BG processing suppression API exist it results in falling into a state in which the BG processing of the image processing apparatus cannot be executed over a long period of time. For example in a case of an application that provides an operation screen to the UI display apparatus of the image processing apparatus an influence of operationally degradation is felt due to execution of BG processing. For this reason the application PF permits instruction of suppression of the BG processing for the application and it is appropriate that the suppression of BG processing execution of the image processing apparatus continues for a long period as a result. Meanwhile in the case of applications whose performance is largely unaffected even when BG processing occurs such as an application that periodically collects logs of jobs executed by the image processing apparatus for example the need to execute its own processing suppressing the BG processing by the BG processing suppression API is low.

In the second embodiment the application PF adds processing for arranging a restriction for the execution of the BG processing suppression API in accordance with the type and state of the application which executes the BG processing suppression API in accordance with the above described application characteristics. Below differences from the first embodiment are explained using to .

In the second embodiment applications that are restricted upon the execution of the BG processing suppression API and applications for which is not the case are defined in advance. In the present embodiment applications that provide operation screens to the UI display apparatus hereinafter LUI applications system applications login applications and applications in the process of activation processing are classified as applications that are not restricted in relation to BG processing suppression. Such applications are applications for which performance related mainly to user operability is required and therefore these are classified as applications that are not restricted. Also even in a case where a particular event occurs during BG processing suppression the suppression is handled as something that cannot be released. Applications other than those described above are classified as applications that are restricted upon the execution of the BG processing suppression API. Applications thus classified are handled as applications for which the execution of BG processing suppression itself is restricted. Here a system application is an application that provides a function that configures the application PF existing on the system application unit . Also a login application is an application for performing processing related to a user authentication in the image processing apparatus . Furthermore an application during activation processing is an application whose state is in the middle of being changed from a suspended state during the start of activation by the framework .

Using to explanation will be given for a method of determining an application that is not restricted as illustrated above. Also using explanation will be given for internal processing of the BG processing suppression API when a restriction is arranged upon the execution of the BG processing suppression API.

The bundle is a name of an application that exists on the application storage region . In the present embodiment the framework registers the application name Bundle Name recited in the MF that the application comprises. For this reason as the name of the application that the framework registers for the bundle the life cycle management unit is registered with the application name of LifeCycleManagementService . Similarly the update management unit and the application A are registered as UpdateManagementService and AppliA respectively. Also the login application added in the present embodiment is registered as LoginApplication and an application B newly added to the configuration illustrated in the first embodiment is registered as AppliB respectively. Here the application B comprises processing that is the same as that of the processing implementation unit that makes the control instruction including the BG processing suppression in the application A . Also the application B is an application managed by the application unit and is an application that is not an LUI application. Also the application B is an application whose activation state is suspended state according to the framework . For this reason in the state illustrated in the application B is determined to be an application that is restricted upon the execution of the BG processing suppression API by the application PF .

The state illustrates an activation state of the application recited in the bundle which is managed by the framework . In the present embodiment the life cycle management unit the update management unit the application A and the login application are in the activated state ACTIVE . Also the application B is installed but not activated suspended state INSTALLED . The metadata information illustrates general metadata recited in the MF that the application possesses. In the present embodiment it is assumed to be something that recites version information of the application version for example.

The SystemApplicationType comprises a system login application setting declaration recited in the MF that the application possesses. In the present embodiment the life cycle management unit of and the update management unit comprise the system application setting declaration System Application . Also as is illustrated in the login application comprises the login application setting declaration LoginService . The MinimumConsoleSize comprises a minimum screen size declaration recited in the MF that the application possesses. In the present embodiment as is illustrated in the application A comprises the minimum screen size declaration 640 400 .

An administrator of the image processing apparatus in step S inputs a URL for accessing the life cycle management unit and makes a request for a connection to the Web browser . The Web browser transmits an HTTP Request to the life cycle management unit via the communication unit .

The life cycle management unit in step S transmits HTML data not shown configuring an operation screen for the life cycle management to the Web browser via the communication unit . The Web browser analyzes the received HTML data and performs a display of the life cycle management operation screen on the Web browser .

The administrator in step S inputs an instruction to activate the application B into the Web browser and a request is thereby made to the life cycle management unit for the execution of the instruction. The Web browser transmits an HTTP Request to the life cycle management unit via the communication unit .

The life cycle management unit in step S receives the execution instruction from the Web browser and transmits an instruction for starting the activation of the application B to the framework . At this point the framework in addition to starting the activation processing of the application B updates the state of the application B managed in the application management table to STARTING . The application management table in this state is illustrated in . The framework causes the state of the application B to change from INSTALLED to STARTING and with this it is indicated that the application B is an application that is during processing for activation. In this state the application B is determined to be an application that is not restricted upon the execution of the BG processing suppression by the application PF .

In step S the framework causes the activation processing of the application B to complete and updates the state of the application B managed in the application management table to ACTIVE . The application management table in this state is illustrated in . The framework causes the state of the application B to change from STARTING to ACTIVE and with this it is indicated that the application B is an application that is in an activated state. In this state the application B is determined to be an application that is restricted upon the execution of the BG processing suppression by the application PF .

The life cycle management unit in step S after completion of the processing sequence transmits HTML data not shown configuring a processing completion notification screen in response to the request to the Web browser via the communication unit . The Web browser analyzes the received HTML data and performs a display of the processing completion notification screen on the Web browser . This processing flow is then terminated.

Note that in the present embodiment because the framework executes the life cycle management of the application an execution instruction is made by the life cycle management unit via the Web browser from the administrator . However the configuration may be such that the administrator can make an instruction to the framework for a request for life cycle management such as inputting a request instruction command to the framework via the user input apparatus for example. For this reason the configuration is not something that is limited.

If the setBackgroundDisabled function is executed reference numerals and YES in step S the application PF in step S obtains information of the execution application from the application management table that the framework comprises. The information that the application PF obtains is the state the SystemApplicationType and the MinimumConsoleSize which correspond to the column of the bundle of the execution application.

The application PF in step S based on the obtained application information determines whether or not the execution application is an application that is restricted for BG processing suppression execution. Specifically the application PF determines whether or not the state of the execution application is STARTING . Alternatively it is determined whether or an application type discrimination the SystemApplicationType is System Application LoginService and whether or not there is a recitation in the MinimumConsoleSize . That is it is determined whether or not a predetermined condition that there is not a restriction for the execution of the BG processing suppression is satisfied.

If the execution application is an application that is not restricted for the execution of the BG processing suppression YES in step S the application PF starts the processing from step S. In a case of an application that is restricted NO in step S the application PF ends the processing of the setBackgroundInhibitStatus function reference numeral without performing the processing from step S.

In the second embodiment by arranging a restriction for an application capable of executing the BG processing suppression API it is possible to avoid falling into a state in which the BG processing of the image processing apparatus cannot be executed for a long period due to the unnecessary execution of the BG processing suppression API.

Note that in the present embodiment the application PF uses an item in the MF which is independently extended in order to specify an application that is capable of executing the BG processing suppression API. However while the applications comprise an item by which the application PF can uniquely specify the condition as to whether the BG processing suppression can be executed limitation is not made to this configuration. Also the application PF has as its target LUI applications system applications login applications and application that are in the middle of activation processing as applications capable of executing the BG processing suppression API. However these may include other types of applications if they are applications having processing for which the influence of a performance degradation when BG processing is executed by the image processing apparatus is a concern. Also in the condition as to whether or not there is a restriction for the execution of the BG processing suppression conditions other than that described above may be used in accordance with the functions of the image processing apparatus the functions of the applications or the like.

Explanation is given for a third embodiment of the present invention. In the second embodiment the applications that are capable of executing the BG processing suppression are limited to particular applications. However there is the possibility of the existence of applications that are influenced by a performance degradation due to the execution of BG processing even if the application does not satisfy these conditions. For this reason processing for when an application that does not satisfy these conditions executes the BG processing suppression API changes. Below differences from the second embodiment are explained using .

If the result of the determination of step S is that the execution application is an application that is not restricted for the execution of the BG processing suppression YES in step S the application PF starts the processing from step S. If the application is restricted NO in step S the application PF starts the processing from step S. Specifically the application PF treats the execution of the setBackgroundDisabled function of reference numeral to the BG processing suppression API that the application executed. In other words the application PF permits the application to execute the BG processing suppression API restricting to a state in which the BG processing suppression is forcibly released upon an event detection.

In the third embodiment it is possible to avoid entering a state in which BG processing of the image processing apparatus cannot be executed for a long period due to the excessive execution of the BG processing suppression from an application by changing the restrictions arranged for an application capable of executing BG processing suppression.

Additionally the present invention is not limited to the embodiments disclosed specifically and various variations and modifications are possible without deviating from the scope of the claims.

Embodiment s of the present invention can also be realized by a computer of a system or apparatus that reads out and executes computer executable instructions e.g. one or more programs recorded on a storage medium which may also be referred to more fully as a non transitory computer readable storage medium to perform the functions of one or more of the above described embodiment s and or that includes one or more circuits e.g. application specific integrated circuit ASIC for performing the functions of one or more of the above described embodiment s and by a method performed by the computer of the system or apparatus by for example reading out and executing the computer executable instructions from the storage medium to perform the functions of one or more of the above described embodiment s and or controlling the one or more circuits to perform the functions of one or more of the above described embodiment s . The computer may comprise one or more processors e.g. central processing unit CPU micro processing unit MPU and may include a network of separate computers or separate processors to read out and execute the computer executable instructions. The computer executable instructions may be provided to the computer for example from a network or the storage medium. The storage medium may include for example one or more of a hard disk a random access memory RAM a read only memory ROM a storage of distributed computing systems an optical disk such as a compact disc CD digital versatile disc DVD or Blu ray Disc BD a flash memory device a memory card and the like.

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of Japanese Patent Application No. 2014 235892 filed Nov. 20 2014 which is hereby incorporated by reference herein in its entirety.

