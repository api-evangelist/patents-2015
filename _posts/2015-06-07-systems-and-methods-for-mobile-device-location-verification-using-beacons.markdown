---

title: Systems and methods for mobile device location verification using beacons
abstract: A computer-implemented method performed in a computerized system incorporating a central processing unit, a localization signal receiver and a memory, the computer-implemented method involving: receiving at least one localization signal using the localization signal receiver; measuring a strength of the received localization signal; using the central processing unit to extract a key from the received localization signal; determining a location based at least on the measured strength of the received localization signal; and validating the determined location using the extracted key. The localization signal may be provided by one or more beacons, such as iBeacons, which may be placed at various locations within a building. The key may be randomly generated and periodically transmitted to the beacons to prevent replay attacks. A ticket issued by a near field communication (NFC) device may be used for additional location validation to prevent tunneling and collusion.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09491588&OS=09491588&RS=09491588
owner: FUJI XEROX CO., LTD.
number: 09491588
owner_city: Tokyo
owner_country: JP
publication_date: 20150607
---
The disclosed embodiments relate in general to positioning systems and more specifically to systems and methods for mobile device location verification.

A long standing problem in the art has been fast and accurate determination of indoor location. A variety of hardware and software techniques have been created and especially in recent years solutions have been proposed that are both reliable and easy to deploy. Many of these technologies enable everyday devices like smartphones and tablets to determine their indoor position. In fact technologies like Apple s iBeacon framework are beginning to see large adoption deployment and use. As a result a technology foundation is being laid for an explosion of indoor location enabled applications.

For a broad class of applications accurate location information provides context to assist or enhance the user s experience. These include points of interest applications mapping tools and social presence sharing applications. While an inaccurate or manipulated location would impact the usefulness of these applications it would not be harmful from the perspective of the service provider. However there are many other applications in which the accuracy and trustworthiness of the location is integral to the application itself. These include room access inventory control and document access solutions whose decisions to permit or deny access to physical or virtual objects have a contextual dimension that includes the user s physical location.

There has been a significant amount of past research and development that has focused on trusted localization. However much of this work has explored point solutions. For instance solutions have been developed to provide anonymous but verifiable location check ins for location based services context based proofs of co presence that piggyback on existing infrastructure and systems for creating and verifying secure proofs of coarse location in multi stakeholder WiFi or cellular environments.

As would be appreciated by those of skill in the art in addition to the aforesaid technological advances new and improved systems and methods for immediate or retroactive proofs of indoor location supporting a tunable variety of assumptions regarding client side adversarial behavior and client trust in the location based service would be desirable.

The embodiments described herein are directed to methods and systems that substantially obviate one or more of the above and other problems associated with conventional localization techniques.

In accordance with one aspect of the inventive concepts described herein there is provided a computer implemented method the method being performed in a computerized system incorporating a central processing unit a localization signal receiver and a memory the computer implemented method involving receiving at least one localization signal using the localization signal receiver measuring a strength of the received localization signal using the central processing unit to extract a key from the received localization signal determining a location based at least on the measured strength of the received localization signal and validating the determined location using the extracted key.

In one or more embodiments the received localization signal is provided by a beacon disposed in a room of a building and wherein a second randomly generated key is periodically sent to the beacon.

In one or more embodiments validating the determined location involves comparing the key extracted from the received localization signal with the second randomly generated key previously sent to the beacon wherein the determined location is invalidated if the key and the second key are not the same.

In one or more embodiments validating the determined location is performed on a server and the server is configured to randomly generate the second key and cause the second randomly generated key to be sent to the beacon.

In one or more embodiments the second randomly generated key is periodically sent to the beacon by a beacon agent the beacon agent being communicatively coupled with the server.

In one or more embodiments validating the determined location further involves validating a ticket issued by a near field communication NFC device wherein the determined location is further invalidated if the ticket is invalid.

In one or more embodiments the ticket is issued by a near field communication NFC device in response to receiving a nonce signed using a private key of the computerized system.

In one or more embodiments the nonce is randomly generated and transmitted by the near field communication NFC device and the method further involves receiving the nonce and signing the received nonce using the private key.

In one or more embodiments the received localization signal is provided by a beacon disposed in a room of a building wherein the received localization signal includes an identifier uniquely identifying the beacon.

In one or more embodiments determining and validating the location involves transmitting the beacon identifier the measured strength of the received localization signal and the extracted key to a central server and receiving the determined location from the central server.

In one or more embodiments an identity of the computerized system or a user of the computerized system is not provided to the central server.

In one or more embodiments the determined location received from the central server is signed with a private key of the central server.

In one or more embodiments the determined location is received from the central server together with a current timestamp.

In one or more embodiments the received localization signal is provided by a beacon disposed in a room of a building wherein the localization signal includes a major identifier uniquely identifying the beacon and a minor identifier the minor identifier including the key that has been randomly generated.

In one or more embodiments receiving at least one localization signal using the localization signal receiver involves receiving a plurality of localization signals provided by a plurality of beacons disposed within a building wherein the location is determined based on the received plurality of localization signals.

In accordance with another aspect of the inventive concepts described herein there is provided a non transitory computer readable medium embodying a set of computer executable instructions which when executed in connection with a computerized system incorporating a central processing unit a localization signal receiver a display and a memory cause the computerized system to perform a method involving receiving at least one localization signal using the localization signal receiver measuring a strength of the received localization signal using the central processing unit to extract a key from the received localization signal determining a location based at least on the measured strength of the received localization signal and validating the determined location using the extracted key.

In accordance with yet another aspect of the inventive concepts described herein there is provided a computerized system incorporating a central processing unit a localization signal receiver and a memory the memory storing a set of computer readable instructions causing the computerized system to perform a method involving receiving at least one localization signal using the localization signal receiver measuring a strength of the received localization signal using the central processing unit to extract a key from the received localization signal determining a location based at least on the measured strength of the received localization signal and validating the determined location using the extracted key.

Additional aspects related to the invention will be set forth in part in the description which follows and in part will be obvious from the description or may be learned by practice of the invention. Aspects of the invention may be realized and attained by means of the elements and combinations of various elements and aspects particularly pointed out in the following detailed description and the appended claims.

It is to be understood that both the foregoing and the following descriptions are exemplary and explanatory only and are not intended to limit the claimed invention or application thereof in any manner whatsoever.

In the following detailed description reference will be made to the accompanying drawing s in which identical functional elements are designated with like numerals. The aforementioned accompanying drawings show by way of illustration and not by way of limitation specific embodiments and implementations consistent with principles of the present invention. These implementations are described in sufficient detail to enable those skilled in the art to practice the invention and it is to be understood that other implementations may be utilized and that structural changes and or substitutions of various elements may be made without departing from the scope and spirit of present invention. The following detailed description is therefore not to be construed in a limited sense. Additionally the various embodiments of the invention as described may be implemented in the form of a software running on a general purpose computer in the form of a specialized hardware or combination of software and hardware.

To address the above and other problems associated with the conventional technology one or more embodiments described herein implement a system and method that provide a broad set of security and privacy affordances while still being compatible with existing off the shelf devices.

In one or more embodiments of the localization system described herein location estimates are determined through the collection of signal strength measurements from a plurality of fixed beaconing devices shown in . While measurements from a variety of radios can be used an embodiment of the described system relies on Bluetooth Low Energy devices well known to persons of ordinary skill in the art to maintain compatibility across a wide range of existing devices. It should be noted however that other types of beaconing devices may be used to facilitate location estimation and therefore the described system is not limited to any specific type or types of beaconing devices.

In one or more embodiments of the localization system described herein the cloud beacon operates in two modes beacon mode and update mode. In the beacon mode the system on a chip is placed into sleep state and the Bluetooth radio is programmed to wake every 2000 ms to transmit an iBeacon compatible advertisement. In one embodiment this advertisement contains three main segments a UUID that associates the device to specific services or capabilities major ID and minor ID. The UUID is used to identify the beacon as a beacon of the localization system . The major ID is used to uniquely identify each beacon . This ID is used by the location classification engine along with the received signal strength of the beacon to determine a device s location. Finally the minor ID is used to provide cryptographic material used by the location authority described in further detail below.

In one or more embodiments in the update mode which occurs at fixed but configurable intervals the system on a chip SoC connects to the CBA to download new beaconing assignments. In this state all the parameters of the iBeacon advertisement can be updated. When the beacon is deployed this operation normally configures a new minor ID which is a new unique key provided by the location authority.

In one or more embodiments a simple service runs on client devices that collect BLE signal measurements. The aforesaid service periodically captures and records all nearby location advertisements. These records include the aforesaid UUID major ID and minor ID along with a measurement of the received signal strength indication RSSI of the advertisement.

In one embodiment the client device service in deployed on an iOS computing platform . As would be appreciated by persons of ordinary skill in the art iOS supports a limited set of use cases where background execution of ma process is permitted. The iBeacon proximity ranging functionality is one such case. iOS 8 allows continuous monitoring for proximity to a known set of beacon regions that are defined as an individual or set of UUIDs. Once the iOS device is receiving iBeacon advertising packets over BLE an in region event is forwarded to the client device service which has previously registered for such notifications. Once the device is in range of the beacons the client device service can initiate continuous ranging to the beacons even when the application is in the background state. Ranging consists of a RSSI UUID major ID minor ID values for each visible beacon.

In another embodiment the client device service in deployed on an Android computing platform . The client device service is configured to execute in a background mode and is set to scan periodically for known UUIDs. If found the client device service records the beacon s RSSI UUID major ID and minor ID. In one or more embodiments the client device service can adjust the frequency in which it scans. This enables the described localization application to adjust how often it provides location updates.

In one or more embodiments once a set of scan records is collected the client device service provides this information to the location classification engine LCE . In various embodiments the LCE can perform classifications on the client device local or the client can send the scan information to a server based instance of the LCE deployed on the central server see . As will be discussed in detail below a client only implementation LCE provides the ability for the client s location to be determined without disclosing it to third parties maintain location privacy while using a cloud based LCE allows the computation to be offloaded and shared across multiple services.

In one or more embodiments the location classification techniques utilized by the described system are based on the ensemble learning method of boosting described for example in Freund Y. Schapire R. A decision theoretic generalization of on line learning and an application to boosting. Journal of Computer and System Sciences 55 1 119 139 1997 and 11. Hastie T. Tibshirani R. Friedman J. The Elements of Statistical Learning Springer New York 2001. In contrast to more common matching methods such as described in Bolliger P. Redpin adaptive zero configuration indoor localization through user collaboration. In Proceedings of the ACM international workshop on Mobile entity localization and tracking in GPS less environments MELT 2008 pp. 55 60 boosting provides similar classification accuracy without requiring the storage of a search data structure that grows with the training set size. Further boosting performs most of the computation in offline training allowing for classification runtime performance to be orders of magnitude faster compared to matching approaches see for example Biehl J. T. Cooper M. Filby G. Kratz S. LoCo A Ready to Deploy Framework for Efficient Room Localization using Wi Fi. In Proceedings of the ACM Conference on Ubiquitous Computing Ubicomp 2014 .

In one or more embodiments the location classification engines and or seek to provide location relative to a discrete spatial quantization or more generally rooms e.g. personal office or locations of interest e.g. near a landmark in a large space . In one or more embodiments for each discrete location a binary classifier is constructed that outputs a score representing the probability that the RSSI scan vector S was observed in that room location 

In one or more embodiments each per room classifier combines weak learners haccording to the scalar weights . The weak learners are decision stumps that compare a scalar feature to a threshold 

In training the thresholds are tuned to minimize error. The feature vector is defined to consist of elements Xand is computed from each RSSI vector S below.

In one or more embodiments given the observed RSSI vectors the set of unique pairwise differences margins between the vectors elements is computed. For an environment with B total beacons the resulting margin feature vectors have size 0.5 B B 1 . Intuitively these features express coarse order information for the pairs of beacons. The RSSI vector S is transformed into a margin feature vector with elements 

for a b 1 . . . B. Missing RSSI values for specific beacons in the training set are set to a nominal value Rto indicate they were not visible to the mobile client . Thus the fact that specific beacons are not visible at specific locations is incorporated into the features.

In one or more embodiments the margin features computed from the training scans form the input to classifier training. Each scalar margin feature corresponds to a weak learner h available for inclusion in any per room classifier F S . The training procedure identifies a location specific set of weak learners that best discriminates that location from all others. The weak learners and their relative weights ain the equation above for each per location classifier are learned in a greedy iterative procedure that optimizes error using a per sample weighting over the training data as described for example in Hastie T. Tibshirani R. Friedman J. The Elements of Statistical Learning Springer New York 2001.

In one or more embodiments for location determination a one versus all formulation is used. The estimated room is simply the maximum scoring room among the set of per room classifiers when applied to a test scan S room argmax 

In one or more embodiments only the required set of RSSI differences that were selected in classifier training are computed. These differences are compared to the thresholds and then combined linearly.

In one or more embodiments the central server is a trusted entity that is responsible for coordinating the state of the beacons performing location classification using the location classification engine when not performed on the client device using the location classification engine verifying proofs of location and providing third party applications an API to leverage location information.

In one or more embodiments each beacon s state e.g. what it advertises to clients can be changed. For each location deployment the central server makes a periodic call to the cloud beacon agent CBA to set each beacon s UUID major ID and minor ID values. The central server ensures that a unique minor ID is set for each beacon at each deployment location. As will be described in detail below in one or more embodiments a rotating minor ID is used as part of the location proof protocol. The central server generates and maintains a list of current minor major ID pairs and with a location determination compares keys as part of the proof of location when scans are submitted for location verification.

In one or more embodiments a third party API is also provided by the central server . With a unique API access key external web cloud services and applications are able to make REST style requests to the central server for a location of the client devices .

Several dimensions whose variation alters the requirements placed upon a secure localization service will now be described. To enable applications supporting many settings along these dimensions the specific threat models will be described together with protocols that have been developed to build unforgeable location proofs in these settings.

By considering the needs of common location aware applications the following four dimensions of secure localization that guided the development of the described localization system have been identified.

Contextual Benefactor. In some applications the client is the only expected benefactor of the use of location context e.g. awareness applications describing events near the user s present location . In others the service may also benefit from the use of client context e.g. physical digital access control systems .

Client Threat Model. There are several levels at which a location based service can place trust in the clients using the system. Clients may be trusted to report their location faithfully this is useful in e.g. POI applications that require client location to process requests that have no security implications. It may be the case that clients are not fully trusted and may try to replay contextual measurements to appear as if they are located in a prior location. For example a user may launch a replay attack from home to appear as if they are in their office in an attempt to access on site resources. Finally clients may be untrusted by the location based service. These clients may collude in an attempt to carry out wormhole attacks in which a device or user in one location relays contextual measurements to a device or user in another location to defeat location based protections.

Client Expectation of Privacy. In some cases clients may agree to remain identifiable to a location based service e.g. this is a common assumption in physical access control systems where user accountability is required. In other cases clients may wish to mask their identity from the service e.g. a POI service has little reason to know the identity of its requesters.

Time of Proof Disclosure. For most location based applications proofs of location will be disclosed immediately. For others however it may be the case that retroactive proofs of location are required.

In the remainder of this description an abbreviated notation to describe combinations of choices from these dimensions will be used. For example a physical access control service for personal offices would likely operate within the S R I I setting which indicates that the service is the primary contextual benefactor the client may be expected to launch replay attacks against the service the client agrees to remain identifiable to the service and the proof of location is to be disclosed immediately.

In this description several configurations of the localization system that support indoor localization applications along several of the above dimensions will be discussed. In the above Table 1 all cells in the Trusted column as well as cells in the first two rows in the Trusted Replay and Untrusted columns indicate settings of primary interest while check marks indicate settings in which the protocols described herein can be used. It should be noted that the below description focuses primarily on situations in which the client is either completely trusted by the location service T or in which the client is untrusted but identifiable S R U I as these parameterize a large number of interesting location based applications for the workplace e.g. controlling access to physical or virtual resources location based personalization etc. .

The threat model that forms the basis of the design of an embodiment of the localization system and provides details about the protocol extensions that have been developed to counter these threats.

In one or more embodiments the localization system is a distributed system consisting of five key classes of entities the central server a network of cloud connected secure beacons a cloud beacon agent that is used to control these beacons a location classification engines and that determine a device s location and client device services . Additionally there are third party location enabled applications services serviced by the application program interface API of the localization system . The behavior of the above entities will now be described in detail.

In one or more embodiments the central server communicates regularly with both client device services to collect scans and in some cases carry out client localization and the cloud beacon agent to manage the network of smart beacons . In one or more embodiments all communication with the central server takes place over TLS protected connections to ensure that traffic is protected against replay reorder modification and observation attacks. It is assumed that the central server correctly classifies client locations using the LCE described above. Clients may or may not be willing to disclose their identity to the central server .

In one or more embodiments the cloud beacon agent is responsible for asynchronously managing the network of smart beacons on behalf of the central server . Server to agent communications are TLS protected and the cloud beacon agent will only accept beacon control messages from the central server .

In one or more embodiments cloud connected secure beacons periodically establish bidirectional communication with the cloud beacon agent to update their configurations and also periodically broadcast iBeacon compatible advertisements that are observed by the client applications . All communications between the cloud beacon agent and the SoC running on each beacon are TLS protected and beacons are configured to accept control messages only from the cloud beacon agent . The beacon is trusted to adhere to any configuration changes mediated by the cloud beacon agent although incorrect behavior is easily detectable.

In one or more embodiments the client device service collects BLE advertisements in order to localize either unilaterally or with server assistance and may use the determined location either on the client device running the client applications or in conjunction with a third party location enabled application service . The degree to which the central server and location enabled applications trust a client may vary as described above. In order to enhance the security in one or more embodiments each client device has a unique public private key pair and private keys are not shared between clients .

In one or more embodiments location enabled applications make use of client device locations classified by the localization system to provide services to client applications . Clients may or may not wish to disclose their identity to these location enabled applications and the applications may have varying levels of trust in clients . The levels of trust assumed here parameterize the type of location proof that is to be produced by the client application in conjunction with the localization system s central server .

As stated above in one or more embodiments that localization within the localization system is based upon RSSI values associated with BLE advertisements transmitted by a network of beacons that are tightly coupled to the central server . To determine their room level location a client application carries out a 15 second scan that generates a report containing a set of tuples. These tuples are then fed into a classifier to determine the locations of the client .

In one or more embodiments in the event that the location classification engine is run on the client the localization system can provide location services to applications in any C setting since the client classifies their own location this suppresses the Client Threat Model and Client Expectation of Privacy dimensions and clients can use locally classified locations immediately or store them for retroactive reference.

In the event that the location classification engine is run on the central server the localization system may be configured to provide location services to applications in any of the S T M settings as illustrated in protocol of . With reference to this figure at step the client performs a scan for the beacons and subsequently sends a request containing the scan data to the central server . At step the location classification engine of the central server classifies the location of the client based on the scan data received from the client . The central server returns a timestamp and the location information back to the client see .

Because the client device is fully trusted by the central server in this setting scan reports can be disclosed either immediately or retroactively to allow the central server to classify the position of a masked client. The addition of a digital signature binding a scan report to a registered user identity as shown in allows the localization system to service applications in the S T I settings. With reference to protocol of at step the client performs a scan for the beacons and subsequently sends a request containing the digital signature of the client as well as the scan data to the central server . At step the central server validates the client s signature and at step performs the client location classification. Subsequently the client identity the timestamp and the location information are sent back to the client at step .

The relatively static nature of scan reports implies that the baseline variant of the localization system cannot provide location services to applications in the S R or S U settings as clients can easily replay old reports or collude to carry out wormhole attacks. Thus two exemplary enhancements to the localization system aimed at overcoming this limitation will now be described.

As would be appreciated by persons of ordinary skill in the art replay attacks against the localization system are made possible due to the relative stability of the BLE infrastructure visible at a given location over time. As a result the tuples comprising a location report are also relatively stable and easily replayed by miscreant users wishing to forge their current location. To combat these attacks the entropy of these reports needs to be increased in order to make replay and context guessing attacks more difficult to carry out.

To this end in one or more embodiments the localization system is configured to randomly perturb the BLE advertisements transmitted by the beacons . The iBeacon compatible advertisements transmitted by the beacons contain a fixed iBeacon prefix a 128 bit UUID a 16 bit major ID and a 16 bit minor ID. Since altering the UUID transmitted by a given beacon would have the effect of confusing mobile applications attempting to leverage iBeacon functionality and the location classification engine is already leveraging the minor ID the localization system instead is configured to perturb the 16 bit minor ID of the advertisement.

As stated in detail above in one or more embodiments the central server asynchronously updates beacons on a configurable basis typically every two minutes in one exemplary deployment . As part of this update process the localization system computes a randomized number to be placed in the minor ID field on a per beacon basis according to the following formula HMAC SHA1 1 . . . 16 

The above extracts the first 16 bits of the output of the HMAC digest of a 160 bit master key known only to the localization system the MAC address of a particular beacon and the current timestamp. Each beacon thus receives a new unique and cryptographically randomized minor ID at each update cycle. Although the strength of protection afforded by this randomized minor is dependent on the frequency of updates and the number of beacons seen in a given location report this simple exemplary mechanism is a key building block in providing unforgeable proofs of location in the S R and S U settings.

It should be noted that even with the randomized minor IDs described above it is possible for an off site entity to collude with an on site entity to create a forged location proof the on site entity can simply create a location report and forward it to the off site entity who can then forward it to the central server to forge a proof of location. To combat this the localization system must create a binding between the device requesting a proof of location and the physical space containing the target fine grained location.

In one or more embodiments the client device can send the location ticket and a location scan report to the central server see which can validate the ticket see step to ensure that the client device whose coarse presence was proved via NFC matches the client device that signed the location report that will be used to classify a fine grained location. The remaining steps in are similar to those of the previous two figures and are numbered accordingly. As will be explained in detail below the combination of this mechanism and the randomized addressing scheme described above enables the successful construction of unforgeable proofs of location in the S U I settings.

The impact of the beacon density on the entropy provided by the aforesaid randomized advertisement approach and the security guarantees of the protocols described hereinabove will now be addressed.

As detailed above the strength of protection provided by the described embodiment of the scheme depends in part on the number of beacons that are visible in a location. To better gauge this parameter in one exemplary embodiment BLE beacons have been deployed one each per location of interest in a portion of an office depicted in . In each beacon s location is indicated by a dot . It should be noted that the exemplary beacon deployment illustrated in includes sub room locations in an open space that is divided into a 3 3 grid with 2.5 m spacing. This example includes total of 23 rooms most of which are 9 msquare offices. The hallways are 1.5 m wide and the deployment also includes a conference room and kitchen upper left .

In one test several sets of statistics were collected to better ground parameters governing the strength of the security protections offered by the localization system . The dataset that was assembled was collected using an Android mobile war drive and contains 20 scans per location for a total of 695 scans. Using all of the BLE beacons for classification an accuracy of 93 has been achieved in a three fold cross validation experiment. Simply using the map of and estimating the client device s location as the location corresponding to the BLE beacon with highest RSSI in each test scan produces a classification accuracy of 59 in the described exemplary deployment.

In the described beacon configuration on average 29.81 beacons were visible in the scans taken from each location s.d. 3.17 min 23.2 . These numbers provide a reference set of parameters for security analysis.

Despite the low cost of the beacons employed another test was conducted at a lower spatial beacon density by pruning beacons from the data set and repeating the analysis. For this beacons were greedily removed based on their spatial locations so as to minimize the average distance between the centroid of each location and any remaining beacon. The simple idea is to maintain spatial coverage over a range of beacon densities. shows the 3 fold cross validation accuracy variation as the number of beacons available to the LCE is varied to illustrate this tradeoff.

Using the same simulation approach statistics were re computed for the number of visible beacons per location. Here again the number of visible beacons per scan per location have been averaged. Then the final statistics over the set of locations has been computed. The results as the number of available beacons is varied are shown in in which the minimum and mean values are depicted by bars and respectively. The standard deviation is indicated by bars .

Now the description terns to how the protocols described herein can protect against replay context guessing and wormhole attacks and to addressing the combinations of protocols that can be used to produce unforgeable proofs of indoor location in the settings parameterized by the location taxonomy outlined earlier in this description.

In one or more embodiments cryptographically varying the minor IDs advertised by the network of smart beacons provides sufficient entropy to protect against replay and context guessing attacks. In particular the collision resistance property of the underlying cryptographic hash function SHA1 used by the localization system ensures that all minor numbers will change at each update which prevents naive attacks that simply replay old scan reports.

As shown in achieving 90 accuracy in the localization system within the building shown in requires a network of at least 26 smart beacons . Under these circumstances shows that a mean of 21 beacons minimum of 15 are visible any given location. This means that a scan report will contain a mean of 336 minimum of 240 bits that randomize at each beacon update. The pre image resistance property of the underlying cryptographic hash function used by the localization system ensures that the master key used to randomize the minor numbers cannot be discovered by observing the sequences of minor numbers advertised by the beacons . Without this master key new minor numbers cannot be predicted in a systematic manner. As a result context guessing attacks will succeed with an average probability of 1 2 336 minimum of 1 2 240 .

In one or more embodiments the combination of randomized minor numbers and NFC device localization is sufficient to prevent wormhole attacks in which an individual on site colludes with an adversary off site to create a forged proof of location. Provided that client devices do not share private keys a reasonable assumption if these keys are used for purposes outside of the localization system e.g. signing purchase orders the first two messages of the protocol described in create a binding between the client device and a coarse physical space the nonce n is unpredictable and the signature generated by the client device must be returned within a time window that precludes collusion with an off site adversary. The ticket returned by the NFC station message 3 then binds the client device s identity to the NFC station s coarse location at the time ts. During the client device s request for a proof of location message 4 the central server can ensure that the client device signing the location request matches the client device s identity in the NFC ticket. If the timestamp in the ticket is recent and the scan report generated by the client device has accurate minor numbers the client device can be assured to be coarsely on site and observing recent BLE advertisements so a fine grained location can be classified and returned by the localization system message 5 .

Table 2 summarizes the exemplary scenarios in which the localization system can create unforgeable proofs of fine grained indoor location using the protocols described herein. In this table B denotes the base beaconing protocol no randomization R denotes the randomized beaconing protocol N denotes the NFC protocol and S denotes the variants of these protocols that include client device s signatures on localization requests. In the S T settings the base protocol can be used to localize client devices as client devices are trusted not to replay context guess or collude. If client device identifiablity is required client device signatures should be used as in otherwise these can be omitted to allow client devices to remain masked as in . In the S R settings the addition of randomized minors will ensure that replay and context guessing attacks can be prevented as discussed above signatures can again be used if client identifiability is required. Finally the S U I settings can be addressed by using randomized minors in conjunction with our NFC based protocol as discussed above. In all settings location proofs contain a signed timestamp indicating their time of issuance by localization system as such they can be used either immediately or retroactively.

In various embodiments as illustrated by Tables 1 and 2 many different applications may be supported by the localization system . In a workplace setting the localization system could enable many new forms of access control to virtual assets like digital documents. Document viewing applications that leverage the localization system could provide fine grain controls over not only who has access to a document but also where documents can be viewed. For instance viewing of personnel documents could be restricted to individuals in Human Resources and only when they are in their assigned offices. Access from open spaces like break rooms could be prevented. Such controls could prove valuable as more and more documents are viewed and managed on mobile phones and tablets.

In one or more embodiments beyond virtual access control the localization system could enable new applications for physical access control. For instance when coupled with a network enabled door lock the localization system could enable office owners to provide access to other colleague with the assurance that the colleague can only access the office when he or she is physically present. There are also similar applications of the localization system to asset control and inventory management.

While these applications demonstrate new opportunities enabled by the localization system it is important to point out that limitations exist. One burdensome limitation comes from the underlying location classification technique. While it is high in accuracy deployment requires that a fingerprint be collected from each room location in which the system is expected to classify. The indoor location research community has proposed several methods for reducing this burden including modeling the fingerprints as described for example in Li L. Shen G. Zhao C. Moscibroda T. Lin J. H. Zhao F. Experiencing and handling the diversity in data density and environmental locality in an indoor positioning service. In Proceedings of the 20th annual international conference on Mobile computing and networking MobiCom 2014 . pp. 459 470 and crowd sourced interactive labeling of ground truth as described for example in Bolliger P. Redpin adaptive zero configuration indoor localization through user collaboration. In Proceedings of the ACM international workshop on Mobile entity localization and tracking in GPS less environments. MELT 2008 . pp. 55 60.

In one or more embodiments fingerprinting could be avoided altogether if location precision constraints are relaxed. Specifically the location classification could simply be a function of receiving advertising packets from n required beacons. Thus if a client device is within range of the required beacons the location proof protocols above could still apply. However location would be coarse and the system could only restrict access to zones or portions of a location e.g. a particular wing or floor of a building .

The computerized system may include a data bus or other interconnect or communication mechanism for communicating information across and among various hardware components of the mobile computerized system and a central processing unit CPU or simply processor coupled with the data bus for processing information and performing other computational and control tasks. Computerized system also includes a memory such as a random access memory RAM or other dynamic storage device coupled to the data bus for storing various information as well as instructions to be executed by the processor . The memory may also include persistent storage devices such as a magnetic disk optical disk solid state flash memory device or other non volatile solid state storage devices.

In one or more embodiments the memory may also be used for storing temporary variables or other intermediate information during execution of instructions by the processor . Optionally computerized system may further include a read only memory ROM or EPROM or other static storage device coupled to the data bus for storing static information and instructions for the processor such as firmware necessary for the operation of the computerized system basic input output system BIOS as well as various configuration parameters of the computerized system .

In one or more embodiments the computerized system may incorporate a display device which may be also coupled to the data bus for displaying various information to a user of the computerized system . In an alternative embodiment the display device may be associated with a graphics controller and or graphics processor not shown . The display device may be implemented as a liquid crystal display LCD manufactured for example using a thin film transistor TFT technology or an organic light emitting diode OLED technology both of which are well known to persons of ordinary skill in the art. In various embodiments the display device may be incorporated into the same general enclosure with the remaining components of the computerized system . In an alternative embodiment the display device may be positioned outside of such enclosure.

In one or more embodiments the computerized system may further incorporate an near field communication NFC interface connected to the data bus and configured to communicate with one or more NFC devices in the building as described above.

In one or more embodiments the computerized system may incorporate one or more input devices such as a touchscreen interface for receiving tactile commands a camera for acquiring still images and video of various objects such as user s faces or room surroundings as well as a keyboard which all may be coupled to the aforesaid data bus for communicating information including without limitation images and video as well as user command selections to the processor . In an alternative embodiment input devices may include a system for tracking eye movements of the user not shown which may be used to indicate to the computerized system the command selection by the user.

In one or more embodiments the computerized system may additionally include a location signal receiver configured to perform scan for beacons and supply scan data described above to the processor via the data bus .

In one or more embodiments the computerized system may additionally include a communication interface such as a network interface coupled to the data bus . The network interface may be configured to establish a connection between the computerized system and the Internet using at least one of WIFI interface and the cellular network GSM or CDMA adaptor . The network interface may be configured to provide a two way data communication between the computerized system and the Internet . The WIFI interface may operate in compliance with 802.11a 802.11b 802.11g and or 802.11n protocols as well as Bluetooth protocol well known to persons of ordinary skill in the art. In an exemplary implementation the WIFI interface and the cellular network GSM or CDMA adaptor send and receive electrical or electromagnetic signals that carry digital data streams representing various types of information. For example the aforesaid networking components may be used to establish a network data connection between the computerized system and other components of the localization system such as the central server and third party services applications .

In one or more embodiments the Internet typically provides data communication through one or more sub networks to other network resources. Thus the computerized system is capable of accessing a variety of network resources located anywhere on the Internet such as web servers other content servers as well as other network data storage resources. In one or more embodiments the computerized system is configured send and receive messages media and other data including application program code through a variety of network s including Internet by means of the network interface . In the Internet example when the computerized system acts as a network client it may request code or data for an application program executing on the computerized system . Similarly it may send various data or computer code to other network resources.

In one or more embodiments the computerized system uses the network interface to send request s via the Internet such as HTTP requests to the central server and receive various information including without limitation the aforesaid location information and the timestamp therefrom.

In one or more embodiments the functionality described herein is implemented by computerized system in response to processor executing one or more sequences of one or more instructions contained in the memory . Such instructions may be read into the memory from another computer readable medium. Execution of the sequences of instructions contained in the memory causes the processor to perform the various process steps described herein. In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the embodiments of the invention. Thus embodiments of the invention are not limited to any specific combination of hardware circuitry and software.

The term computer readable medium as used herein refers to any medium that participates in providing instructions to processor for execution. The computer readable medium is just one example of a machine readable medium which may carry instructions for implementing any of the methods and or techniques described herein. Such a medium may take many forms including but not limited to non volatile media and volatile media.

Common forms of non transitory computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape or any other magnetic medium a CD ROM any other optical medium punchcards papertape any other physical medium with patterns of holes a RAM a PROM an EPROM a FLASH EPROM a flash drive a memory card any other memory chip or cartridge or any other medium from which a computer can read. Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to processor for execution. For example the instructions may initially be carried on a magnetic disk from a remote computer. Alternatively a remote computer can load the instructions into its dynamic memory and send the instructions over the Internet . Specifically the computer instructions may be downloaded into the memory of the computerized system from the foresaid remote computer via the Internet using a variety of network data communication protocols well known in the art.

In one or more embodiments the memory of the computerized system may store any of the following software programs applications or modules 

1. Operating system OS which may be a mobile operating system for implementing basic system services and managing various hardware components of the computerized system . Exemplary embodiments of the operating system are well known to persons of skill in the art and may include any now known or later developed mobile operating systems.

2. Mobile applications may include for example a set of software applications executed by the processor of the computerized system which cause the computerized mobile system to perform certain predetermined functions such as receive the beacon signals as described above. In one or more embodiments the mobile applications may include for example the client device service as well as one or more client applications see .

3. Data storage may be used for example for storing the bacon scan data as well as location data of the computerized mobile system .

In one or more embodiments the computerized server system may incorporate a data bus which may be substantially similar and may perform substantially similar functions as the data bus of the computerized system illustrated in . In various embodiments the data bus may use the same or different interconnect and or communication protocol as the data bus . The one or more processors CPUs the network adaptor the EPROM Firmware storage the display device and the keyboard of the computerized server system may be likewise substantially similar to the respective processor the network interface the EPROM Firmware storage the display device and the keyboard of the computerized system except that the former components are deployed in a server platform configuration. In various implementations the one or more processor may have substantially increased processing power as compared with the processor .

In addition to the input device keyboard the computerized server system may additionally include a cursor control device such as a mouse a trackball or cursor direction keys for communicating direction information and command selections to processor and for controlling cursor movement on the display device . This input device typically has two degrees of freedom in two axes a first axis e.g. x and a second axis e.g. y that allows the device to specify positions in a plane.

The LAN ISDN adaptor of the computerized server system may be implemented for example using an integrated services digital network ISDN card or a modem to provide a data communication connection to a corresponding type of telephone line which is interfaced with the Internet using Internet service provider s hardware not shown . As another example the LAN ISDN adaptor may be a local area network interface card LAN NIC to provide a data communication connection to a compatible LAN and the Internet . To store various media files the computerized server system may be provided with document storage for storing various content to be displayed to the user by means of a storage controller . The camera may be used to acquire images and or video of various objects.

In one or more embodiments the memory of the computerized server system may store any of the following software programs applications modules and or data 

1. A server operating system OS which may be an operating system for implementing basic system services and managing various hardware components of the computerized server system . Exemplary embodiments of the server operating system are all well known to persons of skill in the art and may include any now known or later developed operating systems.

2. A network communication module may incorporate for example one or more network protocol stacks which are used to establish a networking connection between the computerized server system and the various network entities of the Internet such as the computerized mobile system using the network adaptor working in conjunction with the LAN ISDN adaptor .

3. Server applications may include for example a set of software applications executed by one or more processors of the computerized server system which cause the computerized server system to perform certain predetermined functions or tasks. In one or more embodiments the server applications may include the location classification engine the key issuer as well as the key validator . Additionally provided may be a database management system for storing cryptographic keys used by the location system

4. Data storage may be used for example for storing the cryptographic keys as well as location data described above which may be stored in a form of database tables.

Finally it should be understood that processes and techniques described herein are not inherently related to any particular apparatus and may be implemented by any suitable combination of components. Further various types of general purpose devices may be used in accordance with the teachings described herein. It may also prove advantageous to construct specialized apparatus to perform the method steps described herein. The present invention has been described in relation to particular examples which are intended in all respects to be illustrative rather than restrictive. Those skilled in the art will appreciate that many different combinations of hardware software and firmware will be suitable for practicing the present invention. For example the described software may be implemented in a wide variety of programming or scripting languages such as Assembler C C Objective C perl shell PHP Java as well as any now known or later developed programming or scripting language.

Moreover other implementations of the invention will be apparent to those skilled in the art from consideration of the specification and practice of the invention disclosed herein. Various aspects and or components of the described embodiments may be used singly or in any combination in various localization systems and methods. It is intended that the specification and examples be considered as exemplary only with a true scope and spirit of the invention being indicated by the following claims.

