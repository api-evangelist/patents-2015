---

title: Peer tunneling for real-time communications
abstract: A system performs peer tunneling for real time communication (“RTC”). The system receives, by a tunneling server, a peer service request message from a first user equipment (“UE”) indicating a request for establishing a peer tunnel between the first UE and a second UE. The system determines whether tunneling service is available at the second UE. When tunneling service is available at the second UE, the system sends a first peer service response message back to the first UE including remote tunnel parameters corresponding to the second UE. When tunneling service is not available at the second UE, the system sends a second peer service response message back to the first UE indicating a failed tunnel creation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09647982&OS=09647982&RS=09647982
owner: ORACLE INTERNATIONAL CORPORATION
number: 09647982
owner_city: Redwood Shores
owner_country: US
publication_date: 20150303
---
One embodiment is directed generally to a communications network and in particular to delivering real time traffic over a communications network.

Many enterprises have moved from telephony services using the Public Switched Telephone Network PSTN provided by a traditional telephone company to telephony services using the Internet Protocol IP provided by an IP Telephony service provider . Such services are commonly known as Voice over IP VoIP or IP Telephony. IP Telephony uses an IP network e.g. the Internet as a backbone and can thus provide advanced features such as video conferencing call recording and call forwarding.

One embodiment is a system that performs peer tunneling for real time communication RTC . The system receives by a tunneling server a peer service request message from a first user equipment UE indicating a request for establishing a peer tunnel between the first UE and a second UE. The system determines whether tunneling service is available at the second UE. When tunneling service is available at the second UE the system sends a first peer service response message back to the first UE including remote tunnel parameters corresponding to the second UE. When tunneling service is not available at the second UE the system sends a second peer service response message back to the first UE indicating a failed tunnel creation.

One embodiment provides real time communications RTC services in a network environment by performing dynamic peer tunneling between end users. In one embodiment a server dynamically instructs tunnel clients to bypass the server and perform ad hoc peer tunneling for direct RTC. Accordingly by bypassing the server this embodiment results in lower degrees of impairments e.g. latency packet loss jitter etc. thus addressing RTC requirements such as call quality.

Network further includes a tunneling server that provides functionality for establishing and managing tunnels with first UE and second UE according to the Tunneled Services Control Function TSCF standard as described in for example 3generation partnership program 3GPP technical report TR 33.830 V0.5.0 incorporated herein by reference. In general using a tunnel for communication refers to using a delivery protocol to encapsulate a different payload protocol. The TSCF standard provides client side and server side network elements for establishing managed Transport Layer Security TLS tunnels for performing RTC. TLS is a cryptographic protocol configured to provide communication security over the Internet. TLS is an Internet Engineering Task Force IETF standards track protocol as provided in for example IETF request for comments RFC 2246 RFC 4346 RFC 5246 and or RFC 6176.

In one embodiment a first tunneling client included within first UE together with tunneling server establish and manage a first TSCF tunnel according to the TSCF standard. In this embodiment first UE may use first TSCF tunnel to traverse security devices e.g. firewalls proxies etc. and connect to tunneling server to reach a service provider network for performing RTC. Similarly network includes a second tunneling client included within second UE that together with tunneling server establish and manage a second TSCF tunnel according to the TSCF standard. Thus second UE may perform RTC by using second TSCF tunnel to traverse security devices and reach a service provider network through tunneling server .

System includes a bus or other communication mechanism for communicating information and a processor coupled to bus for processing information. Processor may be any type of general or specific purpose processor. System further includes a memory for storing information and instructions to be executed by processor . Memory can be comprised of any combination of random access memory RAM read only memory ROM static storage such as a magnetic or optical disk or any other type of computer readable medium. System further includes a communication device such as a network interface card to provide access to a network. Therefore a user may interface with system directly or remotely through a network or any other method.

Computer readable media may be any available media that can be accessed by processor and includes both volatile and nonvolatile media removable and non removable media and communication media. Communication media may include computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media.

Processor may further be coupled via bus to a display such as a Liquid Crystal Display LCD . A keyboard and a cursor control device such as a computer mouse may further be coupled to bus to enable a user to interface with system on an as needed basis.

In one embodiment memory stores software modules that provide functionality when executed by processor . The modules include an operating system that provides operating system functionality for system . The modules further include a tunneling module for providing tunneling and all other functionality disclosed herein. In one example embodiment tunneling module may implement tunneling server of in conjunction with one or more remaining elements of . System can be part of a larger system such as added functionality to the Acme Packet 4500 session border controller from Oracle Corp. Therefore system can include one or more additional functional modules to include the additional functionality. A database is coupled to bus to provide centralized storage for tunneling module and additional functional modules . In one embodiment tunneling module and or additional functional modules may include a receiving module that receives by a tunneling server a peer service request message from a first UE indicating a request for establishing a peer tunnel between the first UE and a second UE a determining module that determines whether tunneling service is available at the second UE and a sending module that when tunneling service is available at the second UE sends a first peer service response message back to the first UE including remote tunnel parameters corresponding to the second UE as will be described herein with reference to

Referring again to with known systems when two typically co located tunneling clients e.g. first tunneling client at first UE and second tunneling client at second UE connected to the same centralized tunneling server are sending real time media traffic to each other all media traffic generally has to traverse tunneling server for correct routing. For example when two independent TSCF tunnels i.e. first TSCF tunnel and second TSCF tunnel are used for exclusively sending and receiving traffic between first UE and second UE data frames are first received by a session director within tunneling server and then relayed to a corresponding endpoint based on for example a table lookup to determine correct routing. However having to traverse tunneling server introduces latency and packet loss and degrades the overall communications quality of RTC. In particular if first UE and second UE are co located and subject to RTC quality requirements such as minimal tolerable latency and packet loss traversing tunneling server may affect the call quality by introducing excessive network impairments. This degradation may also be aggravated if tunneling server is many hops away from first UE and second UE within an IP network.

In contrast to the known systems one embodiment of the present invention allows tunneling server to instruct first UE and second UE to implement dynamic ad hoc peer tunneling such that all media traffic goes directly from one client to the other. Accordingly embodiments bypass tunneling server and improve call quality. For example instead of using two independent TSCF tunnels i.e. first TSCF tunnel and second TSCF tunnel for exclusively sending and receiving traffic between first tunneling client at first UE and second tunneling client at second UE traffic is routed directly between first UE and second UE by implementing an endpoint detection mechanism and a subsequent peer tunnel creation to establish peer tunnel . In one example embodiment second UE includes a peer tunnel server that behaves as a tunneling server for a peer tunnel client at first UE to establish peer tunnel .

In one embodiment before sending frames first tunneling client at first UE initiates a detection procedure in which tunneling server relays a discovery message to second tunneling client at second UE i.e. the destination in order to know whether second UE belongs to a tunnel being served by tunneling server . If it is determined that second UE belongs to a tunnel being served by tunneling server second UE enters a listening mode e.g. by using corresponding parameters and waits for first UE to initiate peer tunnel for direct communication between first UE and second UE .

In one example embodiment in order to initiate peer tunnel second UE temporarily behaves as a tunnel server by executing peer tunnel server and waits for an incoming tunnel configuration request from peer tunnel client at first UE . Upon receiving the configuration request peer tunnel server responds back with a configuration response thus establishing peer tunnel . Thereafter whenever frames are sent from first UE to second UE or from second UE to first UE the frames are encapsulated and propagated via peer tunnel .

One advantage of peer tunneling is that when network conditions are such that packet loss and latency are affecting the traffic between clients and session director peer tunnel provides a better tunneling configuration. This may be even more advantageous for co located clients that can readily establish a peer tunnel with relatively better quality compared to the tunnels between the clients and tunneling server . Further peer tunneling offloads traffic management from session director to the clients themselves. Additionally peer tunneling reduces latency by bypassing the inference of session director on traffic routing.

In one embodiment in order to enable peer tunneling corresponding functionality may be enabled via TSCF configuration at session director . Further a socket of interest i.e. a socket configured for sending data between first UE and second UE is marked via a corresponding application programming interface API such as tsc setsockopt API at first tunneling client to indicate that sent received frames are candidates for peer tunneling. A network socket is an endpoint of an inter process communication flow across a computer network according to a communications protocol.

One embodiment supports both datagram and stream sockets. A datagram socket is a type of connectionless network socket which is the point for sending or receiving of packet delivery services. Each packet sent or received on a datagram socket is individually addressed and routed. A datagram is a basic transfer unit associated with a packet switched network for which the delivery arrival time and order of arrival need not be guaranteed by the network. A stream socket is a type of internet socket which provides a connection oriented and sequenced with mechanisms for creating and destroying connections and for detecting errors.

In one embodiment once peer tunneling is enabled on a socket there are no other API changes and the client applications at first UE and second UE may continue utilizing the same function calls. Accordingly peer tunneling usage is transparent to the end users at first UE and second UE .

One embodiment provides functionality for peer tunneling when network is subject to network address translation NAT . NAT provides functionality for modifying network address information in IP datagram packet headers while they are in transit across a traffic routing device and remaps one IP address space into another. In order to provide NAT support peer tunneling candidates e.g. first UE and second UE execute a NAT discovery procedure in order to acquire their IP and port address as seen by an endpoint that is not subject to NAT i.e. an endpoint whose IP address is not remapped by NAT . This information is propagated alongside other tunnel parameters from the listening client e.g. second UE to the tunnel initiating client e.g. first UE as response to the peer tunneling service request during the far end detection.

In one embodiment such tunnel parameters include the IP address port and transport type under which peer tunnel server at second UE will be expecting incoming tunnel configuration requests from peer tunnel client at first UE . This information is propagated from first UE to second UE by tunneling server which obtains this information from second UE and forwards it to first UE .

In one embodiment similar to first TSCF tunnel and second TSCF tunnel peer tunnel as well is a TSCF tunnel compliant with TSCF tunnel management e.g. tunnel initialization maintenance termination etc. as defined by e.g. 3GPP TR 33.830 V0.5.0 and TSCF tunnel transport protocols are supported for the negotiation of peer tunnel .

In one embodiment assuming that tunneling server is already configured to support peer tunneling functionality if both first UE and second UE are configured enabled as peer tunneling candidates e.g. via the tsc setsockopt API only one peer tunnel is created by whatever client is able to propagate its peer service request first and the other client reuses the same tunnel to send data in the opposite direction. Moreover if other sockets are configured with peer tunneling support while a peer tunnel already exists between the corresponding endpoints no new tunnel is negotiated and the existent tunnel is used for this additional traffic.

In one embodiment if peer tunnel negotiation between first UE and second UE fails for any reason traffic continues flowing through session director at tunneling server via first TSCF tunnel and second TSCF tunnel . In one embodiment if peer tunnel is removed by either first UE or second UE e.g. by configuration release traffic continues flowing through session director at tunneling server via first TSCF tunnel and second TSCF tunnel . In one embodiment when either or both of first TSCF tunnel and second TSCF tunnel to session director are removed the corresponding peer tunnel is also removed.

One embodiment provides a control message for exchanging configuration information between first UE and or second UE and tunneling server to indicate peer tunnel detection. According to the TSCF standard control messages between tunneling clients and a tunneling server are of a request response type and a control message response to a request includes either a corresponding reply or an error code indicating why the request could not be honored. TSCF control messages utilize a Type Length Value TLV encoding. TLV is defined as the variable length concatenation of a unique Type represented by an integer and a Value containing the actual value identified by the Type.

In one embodiment a client service request message is provided to indicate peer tunnel detection to tunneling server . In one embodiment first UE sends a request to tunneling server for detecting the outer IP address port and transport type e.g. TCP User Datagram Protocol UDP etc. of second UE so that peer tunnel can be created for direct communication between first UE and second UE . In one example embodiment second UE may be running an older version of a software development kit SDK and may not be able to comply with such request in which case tunneling server indicates to first UE that the peer tunneling candidate i.e. second UE is not available for peer tunneling.

In one example embodiment the service request type TLV configured for this client service request message is peer service including connection info TLV indicating the remote internal IP address of the requesting client. An internal IP address is the address that is assigned by a local network router and can only be seen by other computers in the local network. The response to this client service request is a client service response of the same type i.e. peer service that includes a connection info TLV indicating the remote tunnel parameters and a peer service response TLV to indicate whether tunneling service is available or not at the destination endpoint.

In one example embodiment client service request and response messages are forwarded by session director to the corresponding endpoints. If the destination address does not belong to a valid tunnel client a response indicating unavailable service is generated by session director and not by the destination endpoint. If the request is forwarded to a valid tunnel client but no response is received the initiating client assumes that no peer tunnel is possible and continues routing traffic through tunneling server . Table 1 provides example TLVs for implementing client service request response for peer tunneling.

At first UE sends a peer service request message to session director including the remote internal IP address of first UE .

At session director determines that tunneling service is available at second UE and forwards the peer service request message of first UE to second UE .

At second UE receives the peer service request message of first UE from session director and responds by sending a client service response message indicating that tunneling service is available and including remote tunnel parameters.

At upon completing the exchange of peer service client service response response messages peer tunnel client at first UE and peer tunnel server at second UE perform tunnel transport establishment.

For example if peer tunnel server is listening on TCP the TCP connection is negotiated for tunnel transport establishment. If peer tunnel server is using TLS encryption negotiation is also performed. If peer tunnel server is using Datagram Transport Layer Security DTLS only encryption negotiation is performed. If peer tunnel server is using UDP there is no negotiation needed.

At peer tunnel client sends a configuration request message to peer tunnel server and at peer tunnel server responds to the configuration request message of peer tunnel client by a configuration response message. Configuration request and response messages allow for peer tunnel client to obtain configuration information for peer tunnel as described in for example 3GPP TR 33.830 V0.5.0. Upon completing the exchange of configuration request response messages peer tunnel client and peer tunnel server may use peer tunnel for performing RTC.

At first UE sends a peer service request message to session director including the remote internal IP address of first UE .

At session director determines that tunneling service is not available at second UE . For example session director may determine that second UE does not belong to a TSCF tunnel. Accordingly session director sends a peer service respond message back to first UE indicating a failed tunnel creation i.e. second UE is not available .

One embodiment provides a SDK to enable peer tunneling on a per socket basis at first UE and or second UE . In one example embodiment a function tsc setsockopt is used at the SDK to configure a socket and an option for a SOL SOCKET parameter in function tsc setsockopt is provided to enable or disable peer tunneling. One example configuration of this function is 

At tunneling server receives a peer service request message from first UE via first TSCF tunnel indicating a request for establishing peer tunnel between first UE and second UE . In one embodiment the peer service request message includes a remote internal IP address corresponding to first UE .

At tunneling server determines whether tunneling service is available at second UE . For example tunneling server may forward the peer service request message of first UE to second UE via second TSCF tunnel and subsequently receive a corresponding peer service response message from second UE . Alternatively tunneling client may determine that second UE does not belong to a TSCF tunnel and subsequently generate a peer service response message indicating that tunneling service is not available at second UE .

At when it is determined that tunneling service is not available at second UE tunneling server sends a corresponding peer service response message back to first UE indicating a failed tunnel creation.

Alternatively at when it is determined that tunneling service is available at second UE tunneling server sends a corresponding peer service response message back to first UE including remote tunnel parameters corresponding to second UE . Upon reception of the client service response message first UE and second UE perform tunnel transport establishment for peer tunnel which is a TSCF tunnel. Subsequently peer tunnel client and peer tunnel server exchange configuration request response messages corresponding to configuration information of peer tunnel .

As disclosed embodiments allow for dynamic creation of a peer tunnel between tunneling clients to bypass a tunneling server and route RTC traffic through the peer tunnel to reduce latency and packet loss. Further the load and complexity of the tunneling server is reduced by dynamically offloading tunneling functionality to the tunneling clients themselves. Creation and management of such peer tunnel is implemented by tunneling clients and assisted by a tunneling server. Accordingly embodiments give the end user the possibility of uninterrupted RTC in a cost effective and secure way while also meeting real time application quality requirements.

Several embodiments are specifically illustrated and or described herein. However it will be appreciated that modifications and variations of the disclosed embodiments are covered by the above teachings and within the purview of the appended claims without departing from the spirit and intended scope of the invention.

