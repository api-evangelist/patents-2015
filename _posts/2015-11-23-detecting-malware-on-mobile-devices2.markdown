---

title: Detecting malware on mobile devices
abstract: In one example, a mobile device includes a network interface configured to receive data for an application including a set of application permissions describing elements of the mobile device to which the application will have access upon installation of the application, and a processing unit configured to determine a type for the application and, based on an analysis of the set of application permissions and the type for the application, determine whether the application includes malware.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09576130&OS=09576130&RS=09576130
owner: Pulse Secure, LLC
number: 09576130
owner_city: San Jose
owner_country: US
publication_date: 20151123
---
This application is a continuation of U.S. application Ser. No. 13 164 627 filed Jun. 20 2011 which claims the benefit of U.S. Provisional Application No. 61 357 054 filed Jun. 21 2010 each of which is hereby incorporated by reference.

This disclosure relates to computer networks and more particularly to detection of malicious data transferred via computer networks.

A computer network typically includes a collection of interconnected computing devices that exchange data and share resources. The devices typically include for example web servers database servers file servers routers printers end user computers and other devices. The variety of devices may execute a myriad of different services and communication protocols. Each of the different services and communication protocols exposes the network to different security vulnerabilities.

Conventional techniques for detecting malicious data use pattern matching. In particular an intrusion detection system IDS applies regular expressions or sub string matches to detect defined patterns within a data stream. Similarly virus detection applications executed by an endpoint computing device such as a personal computer detects defined patterns in files retrieved by the endpoint computer device where the files can be stored within an operating system of the endpoint computing device.

Use of cellular mobile devices for accessing computer data networks has recently increased dramatically. These mobile devices often referred to as smart phones provide a platform for both cellular phone calls and cellular based access to computer data services. For example a typical cellular radio access network is a collection of cells that each include base stations capable of transmitting and relaying radio signals to subscribers mobile devices. A cell generally denotes a distinct area of a cellular network that utilizes a particular frequency or range of frequencies for transmission of data. A typical base station is a tower to which are affixed a number of antennas that transmit and receive the data over the particular frequency. Mobile devices may transmit radio signals at the designated frequency to the base stations to initiate cellular telephone calls or packet based data services.

With respect to data services cellular service providers convert the cellular signals e.g. Time Division Multiple Access TDMA signals Orthogonal Frequency Division Multiplexing OFDM signals or Code Division Multiple Access CDMA signals received from mobile devices at the base stations into Internet protocol IP packets for transmission within packet based networks.

The ubiquitous use of cellular mobile devices and the ever increasing desire by users for fast secure network access from around the world has presented many challenges for enterprises. Enabling even basic connectivity across all desired cellular mobile device platforms can be a huge challenge. Enabling secure connectivity with an easy end user experience can be even more challenging. For example the dramatic increase in use of cellular mobile devices for computer data services has exposed service providers and enterprise networks to increased security risks presented by misconfigured devices.

Because users often lack technical experience endpoint devices including cellular mobile devices often become misconfigured. That is users may accidentally install viruses spyware or other software that can potentially damage the functionality of the endpoint device or compromise the security of the computer network to which the endpoint is coupled. Once affected endpoint devices can inadvertently spread malicious software to the servers and possibly to other endpoint devices. As numerous different endpoint security and connectivity software applications are added to each end user mobile device the potential for problems and network conflicts increases. It is currently very difficult for information technology IT staff to enable network connectivity for users from any device at any time from virtually anywhere without requiring significant end user interaction with complex technologies.

Conventionally software on a mobile device attempts to detect malware such as spyware on the mobile device in a manner similar to that of endpoint computing devices. However mobile devices are typically configured to prevent inspection by an executed malware application to certain portions of the mobile devices. Unfortunately malicious data tends to be stored in the very regions to which malware detection applications do not have access.

In general this disclosure describes techniques for detecting malware such as spyware on mobile devices such as cellular telephones. When a mobile device requests to retrieve an application from an application marketplace the marketplace typically provides metadata associated with the application that indicates the type of application to be retrieved and permissions associated with the application. The permissions generally describe services features data or other elements to which the application will have access upon retrieval and installation. In accordance with the techniques of this disclosure a malware detection process executed by a mobile device generally inspects permissions associated with a target application based on the application s type to determine whether the target application represents malware. A separate system in some examples determines sets of permissions for various types of applications that are normal and one or more permissions for various types of applications that are suspect that is that indicate that the application is or may be malware.

In one example a method includes receiving by a mobile device data for an application including a set of application permissions describing elements of the mobile device to which the application will have access upon installation of the application determining a type for the application and based on an analysis of the set of application permissions and the type for the application determining whether the application includes malware.

In another example a device includes a network interface configured to receive data for an application including a set of application permissions describing elements of the mobile device to which the application will have access upon installation of the application and a processing unit configured to determine a type for the application and based on an analysis of the set of application permissions and the type for the application determine whether the application includes malware.

In another example a system includes a plurality of mobile devices and a threat management center. The threat management center is configured to determine sets of permissions associated with various types of applications and to distribute the determined sets of permissions to the plurality of mobile devices. Each of the plurality of mobile devices is configured to receive data for an application including a set of application permissions describing elements of the mobile device to which the application will have access upon installation of the application to determine a type for the application and based on an analysis of the set of application permissions the type for the application and the sets of permissions received from the threat management center determine whether the application includes malware.

In another example a computer readable storage medium includes instructions that when executed cause a processor to receive data for an application including a set of application permissions describing elements of the mobile device to which the application will have access upon installation of the application determine a type for the application and based on an analysis of the set of application permissions and the type for the application determine whether the application includes malware.

The techniques of this disclosure may provide one or more advantages. For example using these techniques mobile devices may be equipped to detect applications that may include malware based on an analysis of only permissions of the applications. In many cases malware detection applications are downloaded from an application marketplace and are not provided within a core of a mobile device operating system. Therefore the malware detection applications may not have access to underlying instructions for other applications to determine if these other applications include malware using conventional techniques such as pattern matching. However permissions for applications are typically available to all other applications. Therefore the techniques of this disclosure may be implemented by a security application downloaded from an application market and used to determine whether other applications potentially include malware based on analysis of the permissions of the other applications and without accessing underlying instructions for the other applications.

The details of one or more examples are set forth in the accompanying drawings and the description below. Other features objects and advantages will be apparent from the description and drawings and from the claims.

In this example system includes packet data network and service provider network . Packet data network may represent the Internet. In general service provider network provides access to resources of packet data network for mobile devices and endpoint computing devices A M ECDs . In some examples mobile devices and endpoint computing devices correspond to devices of an enterprise network that are managed by management console . That is in some examples management console sets policies for one or more of mobile devices and or endpoint computing devices . As discussed in greater detail below in such examples a user such as an enterprise administrator sets policies for devices of the enterprise such as permitted or unpermitted types of applications. In accordance with the techniques of this disclosure mobile devices may be configured to detect not only applications that potentially include malware based on permissions of the applications but also unpermitted applications based on permissions of the applications.

In the example of endpoint computing devices may be personal computers laptop computers or other type of computing device associated with individual employees or other authorized users. In contrast mobile devices provide a platform for both cellular phone calls and cellular based access to computer data services. That is each of mobile devices is a wireless communication device capable of cellular communications. Mobile devices may comprise for example a mobile telephone a laptop or desktop computer having e.g. a 3G wireless card a wireless capable netbook a tablet computer a video game device a pager a smart phone or a personal data assistant PDA . Each of mobile devices may run one or more applications such as mobile calls video games videoconferencing and email among others.

Service provider network also provides network access data transport and other services to mobile devices . Service provider network includes radio access network in which one or more base stations communicate via radio signals with mobile devices . Backhaul network BN is a transport network that enables base stations of radio access network to exchange packetized data with mobile core network of the service provider ultimately for communication with broadband network and packet data network . Backhaul network typically comprises communication nodes interconnected by communication links such as leased land lines or point to point microwave connection. The communication nodes comprise network aggregation and switching elements that execute one or more protocols to route packets between base stations and gateway device GW of mobile core network . In various aspects backhaul network may comprise a GSM radio access network GRAN or a Universal Mobile Telephony Service UMTS terrestrial radio access network UTRAN operating according to respective radio access network standards set forth by the relevant standards setting body e.g. 3GPP .

Mobile core network provides session management mobility management and transport services between backhaul network and broadband network to support access by mobile devices to packet data network and resources thereof. Mobile core network may comprise for instance a general packet radio service GPRS core packet switched network a GPRS core circuit switched network an IP based mobile multimedia core network or another type of transport network. Mobile core network may include one or more packet processing nodes to support firewall load balancing billing deep packet inspection DPI or other services for mobile traffic traversing the mobile core network.

In the example of endpoint computing devices connect to network access device via network switch . In one example network switch may comprise digital subscriber line access multiplexers DSLAMs or other switching device. Each of endpoint computing devices may utilize a Point to Point Protocol PPP such as PPP over ATM or PPP over Ethernet PPPoE to communicate with network switch . For example using PPP one of endpoint computing devices may request access to broadband network and provide login information such as a username and password for authentication by authentication device AD . PPP may be supported on lines such as digital subscriber lines DSLs that connect endpoint computing devices with network switch . In other examples endpoint computing devices may utilize a non PPP protocol to communicate with network switch . Other examples may use other lines besides DSL lines such as Ethernet over a T1 T3 or other access link.

Network switch may communicate with network access device over a physical interface supporting various protocols e.g. ATM interface supporting ATM protocols.

Network access device typically includes Broadband Remote Access Server BRAS functionality to aggregate output from switches into a higher speed uplink to broadband network . In some examples network access device may comprise a router that maintains routing information between endpoint computing devices and broadband network .

As discussed above mobile devices execute various types of applications such as applications for making telephone calls games checking news weather or traffic reports providing maps for navigation such as turn by turn navigation performing business functions such as drafting documents or spreadsheets e mailing contacts sending and receiving messages using the short message service SMS sending and receiving multimedia such as pictures recorded audio or videos using the multimedia message service MMS or other such applications. In the example of application market app market represents a repository from which mobile devices retrieve such applications via packet data network . Application market may correspond for example to the Google Android Market Apple iTunes the Blackberry App World the Amazon App Store for Android or the like. In some examples there are multiple such repositories at various locations within system e.g. communicatively coupled to broadband network and or radio access network .

In some examples applications are developed by third party developers represented in by application developers A P app developers . Application developers develop and submit developed applications to application market . While most of application developers produce benign applications unfortunately some of application developers incorporate malware in developed applications. In some examples the submitted applications are reviewed for compliance with development standards and to attempt to detect malware in the applications. However even with such review it is possible for applications stored by application market to include undetected malware.

The techniques of this disclosure are directed to detecting malware in applications based on permissions associated with the applications. In general when application developers develop an application the application will include a set of properties describing elements of a mobile device with which the application will interact regularly. These elements may include configuration data of the mobile device data stored on a storage medium of the mobile device such as for example flash memory specific hardware units and or software modules of the mobile device such as a global positioning system GPS unit an SMS or MMS unit a cellular telephone unit or the like.

More particularly the permissions may indicate whether the application will be permitted to read or write particular types of data such as to a contact list a calendar owner data audio data e.g. to record or delete audio data stored on the phone history data such as browser history or call log data bookmarks or the like. The permissions may also indicate whether the application will be permitted to place or receive calls access location data e.g. coarse location data such as that provided by distances relative to cellular towers or fine location data such as that provided by GPS access Internet data send or receive SMS or MMS data manipulate use credentials read or write to external storage e.g. via a universal serial bus USB cable or such tasks.

In accordance with the techniques of this disclosure one or more of mobile devices include security management modules configured to analyze permissions of applications to determine whether the applications include malware. In some examples mobile devices retrieve security management modules from application market or threat analysis center . Mobile devices also receive periodic updates to the security management modules from threat analysis center .

Threat analysis center generally inspects applications of application market to determine whether the applications include malware. In addition threat analysis center determines profiles of permissions for various types of applications that can be downloaded and executed by mobile devices . In general the profiles conform to normal permissions associated with particular types of applications. That is threat analysis center generally determines permissions for various types of applications that are considered non concerning. Moreover threat analysis center also determines permissions for various types of applications that are not normal. For permissions that are not normal threat analysis center may determine whether applications of a particular type associated with an unusual that is not normal permission should be categorized as notable suspicious spyware malware or some other concerning category e.g. another spyware or malware related category .

Threat analysis center monitors applications on a regular basis to determine profiles indicating whether permissions for a type of application can be considered concerning or non concerning. Accordingly threat analysis center periodically distributes updates to mobile devices including updated indications of whether particular types of applications are commonly associated with particular types of permissions. In this manner mobile devices can use the profiles received from threat analysis center to determine whether downloaded and installed applications include malware such as spyware based on the permissions of the applications.

It should be understood that the type of application may influence whether certain permissions are considered normal or not. That is the permissions that cause one type of application to be classified as concerning do not necessarily cause another type of application to be classified as concerning. For example for types of applications having to do with calendaring features such as setting appointments or reminders for appointments it would be expected that such applications may read and or write to the user s calendar. However gaming applications would typically not need access to the user s calendar. Therefore in some examples threat analysis center may determine that gaming applications that have permissions related to calendar access may represent malware such as spyware. However threat analysis center may also determine that types of applications related to appointments or schedules having permissions related to calendar access likely do not represent malware.

Management console provides enterprise administrators with the ability to set policies for mobile devices and endpoint computing devices . In some examples an enterprise administrator uses management console to establish policies that distinguish between permitted and unpermitted applications for e.g. mobile devices . The administrator further determines permissions associated with various types of applications that can be used to distinguish between permitted and unpermitted applications. In this manner the techniques of this disclosure may be used not only to detect applications that may include malware but also to detect applications that are not permitted due to corporate policy based on permissions for the application. In addition or in the alternative the administrator may use management console to define policies that indicate permitted or unpermitted applications based only on a name for the application a type for the application or other characteristics of the application. In other examples rather than being used to enforce a corporate policy management console may be used to enforce parental controls set by a parent or other guardian of a minor who possesses one of mobile devices .

In some examples mobile device includes multiple transceivers or other radio units for wireless communication each of which may conform to different communication standards e.g. 3G 4G long term evolution LTE Bluetooth and the like . Transceiver may also be generally referred to as a network interface in that transceiver can be configured to send and receive data that ultimately can traverse broadband network and packet data network .

In this example hardware includes global positioning system GPS unit . GPS unit receives signals from GPS satellites for determining a geographical position of mobile device . In some examples one or more of user applications include permissions that allow the respective applications to access fine position data from GPS unit e.g. a precise latitude and longitude for mobile device . In some examples one or more of user applications include permissions that allow the respective applications to access coarse position data which may be determined based on e.g. signal strengths from one or more cellular towers that send and receive signals to from transceiver . In this manner user applications may access either or both of coarse and fine position data based on the permissions of the applications.

Hardware also includes an input output I O interface which may include one or more user interfaces such as for example a display a touchscreen display a keyboard buttons or the like as well as interfaces for cables that can be coupled to mobile device such as for example universal serial bus USB cables micro USB cables high definition multimedia interface HDMI cables audio cables microphone cables or the like. Hardware may include additional discrete digital logic or analog circuitry.

Operating system executes on microprocessor and provides an operating environment for one or more applications commonly referred to apps such as user applications . Operating system O S interface proves an interface layer of software capable of making kernel calls into operating system . In some examples O S interface provides one or more application programming interfaces APIs that can be called by user applications . In other words O S interface provides a framework within which user applications operate and may for example allow user applications to execute within a user space of the operating environment provided by mobile device . O S interface may allow other forms of protocol handlers to be plugged in for interfacing with operating system .

In accordance with the techniques of this disclosure mobile device includes a security management module which includes malware detection module and permissions lists . In general malware detection module is configured to determine whether user applications include malware in accordance with the techniques of this disclosure. Security management module may also receive configuration data that prevents execution of certain applications that do not conform to a corporate policy or parental controls.

Memory stores instructions for user applications . In particular memory includes a region for user applications which includes instructions for malware detection module . In general user applications do not have access to data of this region of memory . That is user applications cannot access data storing instructions for other ones of user applications even in read only mode. In some examples malware detection module is a user installed application e.g. one of user applications and therefore has the same abilities and restrictions as user applications . That is in some examples malware detection module does not have access to instructions for user applications .

More particularly as discussed above O S interface provides various tools by which user applications and security management module interact with elements of mobile device such as hardware . However in general O S interface does not provide tools by which user applications and security management module are able to access the region including instructions for user applications . Processor has access to this region in order to execute the instructions for user applications and security management module but user applications and security management module are not provided with tools for reading or writing to this region of memory . O S interface may provide read and or write access to other regions of memory e.g. to store configuration data or other data e.g. recorded audio pictures or video text documents and the like but generally does not provide access to the region in which application instructions are stored to the applications.

Accordingly in some examples malware detection module is unable to detect malware in user applications using conventional methods such as performing pattern matching to determine whether instructions for user applications conform to a pattern for known malware. However in accordance with the techniques of this disclosure malware detection module is still able to detect malware based on analysis of permissions for user applications .

In the example of security management module includes permissions lists . In general data for permissions lists is stored in memory e.g. in a read write area of memory external to the region to which applications do not have access. Security management module receives data for permissions lists from threat analysis center via transceiver . Permissions lists include lists also referred to as sets of permissions for various types of applications.

In some examples permissions lists include lists of normal permissions for various types of applications. A set of normal permissions indicates those permissions for a given type of application that are conventionally associated with the type of application. For example a web browsing application would be expected to read and write bookmark data browsing history data and to send and receive data in accordance with hypertext transfer protocol HTTP . Therefore if one of user applications purporting to be a web browser includes permissions directed to reading and writing bookmark data browsing history data and sending and receiving data in accordance with HTTP such an application would not likely be determined to include malware in accordance with the techniques of this disclosure based on these assumptions.

When a particular application includes a permission that is not in the normal set of permissions for that type of application malware detection module determines whether the permission is concerning. In some examples permissions lists include one or more lists of concerning permissions which may be associated with a type of application or a general globally applicable concerning permissions list. Accordingly when an application includes a permission that is not in the normal set of permissions for that type of application malware detection module determines whether the permission is in the concerning permissions list. If so malware detection module determines that the application likely includes malware.

As an example again referring to a web browsing application a permission that would allow the application to end a call that is currently in progress would probably not be normal and in fact would probably be indicative of malware. Therefore malware detection module may determine that a web browsing application listing a permission that indicates that the application will have the ability to end a call that is currently in progress includes malware. It should be understood that this case is merely an example and that other examples are possible. Moreover in general as discussed above data of permission lists are received from threat analysis center which determines what permissions are normal for various types of applications as well as which permissions should be considered concerning.

In other examples permissions lists additionally or alternatively include lists of permissions associated with various types of applications that are considered concerning without necessarily including sets of normal permissions for the various types of applications. Accordingly in these examples malware detection module may determine that an application of a particular type with a permission in the list of permissions indicated as being concerning for that type of application likely includes malware. In this manner permissions lists may include either or both of normal permissions for various types of applications and concerning permissions for the various types of applications.

Different types of applications can have different permissions that are considered concerning or normal. In general threat analysis center determines which permissions are considered concerning or normal for various types of applications. Accordingly threat analysis center distributes lists of permissions for various types of applications to mobile device . Security management module stores these lists as permissions lists and malware detection module uses permissions lists to determine whether user applications include malware based on permissions of user applications .

When malware detection module determines that one of user applications likely includes malware based on an analysis of permissions for the application and the type for the application malware detection module may trigger a mitigation action. Mitigation actions can include any or all of deleting the application quarantining the application generating user alert requesting that the user delete or disable the application sending a message to an external entity such as threat analysis center a management console or other mobile devices that indicates that the application likely includes malware or other similar actions.

As noted above in some examples malware detection module prompts a user with an indication that an application may include malware after determining that the application may include malware based on an analysis of the permissions associated with the application. For example I O interface may include a display that presents a graphical user interface indicating that a particular application may include malware and a request that the user delete the application. From this user interface the user may elect to delete the application or the user interface may direct the user to a different interface by which the user may delete the application.

In this example application analyzing module receives a set of permissions associated with a target application. The target application may correspond to an application that mobile device is about to download and for which mobile device has received the set of permissions. In general when mobile device interacts with application market to request a new application application market provides a set of permissions for the application describing elements of mobile device to which the application will have access as discussed above. Accordingly after mobile device receives these permissions application analyzing module receives the permissions associated with the application. Alternatively the target application may correspond to a previously installed application e.g. one of user applications . Application analyzing module also determines a type for the application. Application analyzing module provides the set of permissions and the type to permissions detecting module .

Permissions detecting module determines individual permissions from the set of permissions received for the target application. In some examples permissions detecting module and application analyzing module are functionally integrated but are illustrated separately for purposes of example and explanation. In this example whereas application analyzing module generally analyzes a target application to extract the set of permissions for the application permissions detecting module extracts the individual permissions for the application. Permissions detecting module passes the individual permissions to permissions categorizing module along with the type for the application in this example. In some examples permissions categorizing module interacts with subsequent capabilities determining module to determine capabilities associated with a particular permission that is the types of actions the target application will be permitted to perform based on a particular permission.

Permissions categorizing module passes an indication of the type for the application to permissions lookup module . Permissions lookup module in turn queries permissions lists using the type for the application to retrieve a set of permissions associated with the type for the application. As discussed above the permissions associated with the type for the application may include either or both of a set of concerning permissions or a set of normal permissions. In any case permissions lookup module provides the set of permissions for the type of application to permissions categorizing module . Permissions categorizing module in turn categorizes the permissions for the target application based on the concerning and or normal permissions for the type of application as received from permissions lookup module . For example permissions categorizing module generally determine whether any of the permissions associated with the application are concerning or whether the permissions are normal for the type of application.

In the example of permissions analyzing module includes permissions query module which generally interacts with permissions lists . For example permissions lookup module queries permissions lists as discussed above to retrieve stored lists of permissions. In addition permissions query module includes permissions update module which is configured to update permissions lists . As described in greater detail with respect to malware detection module periodically receives updates to permissions lists . For example a software update to malware detection module may provide additional lists additional elements to one or more lists or removal of elements from one or more lists as updates to permissions lists . Malware detection module receives these updates from threat analysis center in some examples. Permissions update module interacts with permissions lists to update one or more permissions lists of permissions lists or to add or remove lists from permissions lists in response to such updates from threat analysis center .

In some examples permissions categorizing module receives a set of normal permissions for the type of application from permissions lookup module . In such examples permissions categorizing module determines whether the permissions detected by permissions detecting module for the target application are normal. That is for each of the permissions associated with the target application permissions categorizing module determines whether the permission is included in the set of normal permissions associated with the type for the application. If so permissions categorizing module categorizes the permission as concerning. Permissions categorizing module determines whether permissions that are not considered normal should be categorized as concerning. In some examples permissions lookup module provides a set of generally concerning permissions to permissions categorizing module . When a permission associated with the target application is not considered normal and is included in the set of generally concerning permissions permissions categorizing module determines that the permission is concerning.

In other examples permissions categorizing module receives a set of concerning permissions for the type of application from permissions lookup module . In such examples permissions categorizing module determines whether the permissions detected by permissions detecting module for the target application are concerning. That is for each of the permissions associated with the target application permissions categorizing module determines whether the permission is included in the set of concerning permissions associated with the type of application. If so permissions categorizing module categorizes the permission as concerning.

As discussed above in some examples permissions categorizing module categorizes certain permissions as concerning either globally that is regardless of the type for the application or based on the type for the application. In some examples concerning permissions may include any or all of permissions that allow the application to access a coarse location of the mobile device allow the application to access a fine location of the mobile device allow the application to disable the mobile device allow the application to initiate a phone call without presenting a dialer user interface by which the mobile device receives confirmation of the call to be placed from a user allow the application to call any phone number without presenting the dialer user interface allow interaction with or notification of user driven events such as key presses or touch screen interaction events allow the application to access a list of accounts in an accounts service allow the application to open network sockets allow the application to monitor modify or abort outgoing calls allow the application to read calendar data of the mobile device allow the application to read contacts data of the mobile device allow the application to read data associated with an owner of the mobile device allow the application to read short message service SMS messages allow the application to monitor incoming multimedia message service MMS messages allow the application to process SMS and MMS messages allow the application to record audio allow the application to send SMS messages allow the application to request authentication tokens from an account manager allow the application to write to external storage allow the application to write browsing history data for the mobile device allow the application to write bookmark data for the mobile device and allow the application to write to the data associated with the owner for the mobile device.

Permissions categorizing module provides categories for each of the permissions to application categorizing module . In general application categorizing module categorizes the target application based on whether the set of permissions for the target application include one or more concerning permissions. In some examples when at least one of the permissions is categorized as concerning applications categorizing module categorizes the application as likely including malware. In some examples application categorization module categorizes the application as one of suspicious notable or malware. In some examples application categorizing module categorizes the application based on a number of concerning permissions associated with the target application by comparing the number of concerning permissions to threshold numbers that is predetermined numbers of concerning permissions associated with the various categories. For example the suspicious category may correspond to one concerning permission the notable category may correspond to three concerning permissions and the malware category may correspond to five or more permissions. Application categorization module generally categorizes applications having no concerning permissions e.g. all normal applications as benign or some other category indicating that the application does not include malware as determined by permissions analyzing module .

When application categorizing module determines a category to the target application other than benign application categorizing module sends an indication of the category assigned to the target application to threat management module . In this example threat management module includes application removing module application quarantining module and alert generation module . In some examples threat management module includes only alert generation module or the functional equivalent thereof as discussed below.

Threat management module is configured to respond to applications determined to possibly include malware. In some examples threat management module determines how to respond to applications possibly including malware based on the category assigned by application categorizing module . Application removing module is configured to remove applications that possibly include malware as determined by permissions analyzing module . That is application removing module is configured to use tools provided by O S interface to instruct the operating system to remove the instructions for a target application determined to possibly include malware from memory .

Application quarantining module is configured to quarantine applications that possibly include malware as determined by permissions analyzing module . Quarantining generally refers to isolating the instructions for the application without actually deleting them. Threat management module may determine to quarantine an application rather than deleting the application to perform further analysis of the application. For example quarantining the application may allow another module of malware detection module not shown in to inspect the application or to submit data for the application to threat analysis center . Threat analysis center or the other module of malware detection module may perform additional testing of the application to determine whether the application includes malware and to respond to mobile device with information indicating whether the application includes malware. If the application does not include malware application quarantining module can simply remove the application from quarantine. On the other hand if the application is determined to include malware application quarantining module may cause application removing module to remove that is delete the application.

Alert generation module generates an alert indicating that permissions analyzing module has determined that an application possibly includes malware. That is in some examples alert generation module interacts with O S interface to present via I O interface a graphical user interface that presents an indication of the application that permissions analyzing module determined included malware. Furthermore in some examples the graphical user interface provides an indication of a severity of the malware and or a value indicative of confidence that the application includes malware. For example alert generation module may cause the graphical user interface to present an indication of the category assigned by application categorizing module e.g. suspicious notable or malware . Furthermore in some examples the graphical user interface provides a mechanism by which a user can remove or quarantine the application determined to possibly include malware.

In some examples in addition to permissions that indicate that a target application potentially includes malware permissions lookup module retrieves sets of permissions that are indicative of unpermitted applications. As discussed above an administrator such as a corporate administrator or a parent of a minor may determine that certain applications are not permitted. In accordance with the techniques of this disclosure application categorizing module may further determine that an application is categorized not permitted based on permissions received from permissions categorizing module based on the type for the application. Threat management module may also prevent execution of such applications and alert generation module may present a graphical user interface identifying the application and presenting a message that the application has been blocked because it is not permitted.

In this example permissions analyzing module includes application analyzing module permissions categorizing module permissions compiling module concerning permissions determining module and permissions detecting module . In general permissions analyzing module determines permissions of various types of applications to distinguish normal and concerning permissions for the various types of applications. Unlike permissions analyzing module of malware detection module in permissions analyzing module determines permissions associated with applications that are known to either include malware or not include malware.

In this example application analyzing module analyzes various applications to extract a type for each of the applications and a set of permissions associated with each of the applications. Application analyzing module provides the set of permissions to permission detecting module and the type for the application to permissions categorizing module . Permissions detecting module extracts individual permissions from the set of permissions and provides the individual permissions to concerning permissions determining module . Concerning permissions determining module generally determines whether individual permissions should be considered concerning or not. In some examples concerning permissions determining module receives an indication from a user such as an administrator as to whether a particular permission should be considered concerning.

Concerning permissions determining module provides indications of concerning permissions to permissions categorizing module . Although certain permissions may be considered concerning for some types of applications the same permissions may be considered normal or not concerning for other types of applications. In some cases a permission may be considered concerning regardless of the type of application requesting that permission. For example a permission that would allow an application to disable the mobile device on which the application is executing sometimes referred to as bricking the mobile device would likely be considered concerning for any application. Other permissions such as permissions that allow access to GPS unit data may be considered concerning for e.g. game applications but not concerning for e.g. weather or map navigation applications. Similarly some permissions may be considered benign for all types of applications.

In general concerning permissions determining module determines permissions of the application that may be considered concerning for some applications as discussed above. Permissions categorizing module determines whether the permissions for a particular application should be considered concerning. Permissions compiling module maintains records in the form of permissions lists including sets of permissions that are normally requested for various types of applications and concerning permissions for various types of applications. Permissions categorizing module requests a set of normal permissions for the type for the application from permissions compiling module in some examples. In this manner permissions categorizing module can determine whether permissions for an application are considered normal based on a comparison to the recorded permissions for the various types of applications that have been previously analyzed. Permissions categorizing module categorizes normal permissions for the target application as such and other permissions identified by concerning permissions determining module as concerning as concerning.

Moreover when permissions categorizing module receives an indication that a particular application includes malware permissions categorizing module determines a set of one or more permissions associated with the application that can be used to identify the application and or other similar types of applications as including malware. For example permissions categorizing module determines whether any of the permissions for the application are not in the set of normal permissions for that type of application and may then determine that the permissions not in the set of normal permissions are concerning.

In some examples permission categorizing module presents a list of all permissions for a particular application to a user and requests that the user indicate whether any or all of the permissions should be considered concerning. Concerning permissions determining module may also be configured to operate in this manner. Accordingly in such examples a user indicates categories for the various permissions. Permissions categorizing module provides indications of the categories to which the permissions are assigned based on the user input to permissions compiling module in these examples.

Permissions compiling module determines lists of permissions associated with various types of applications such as normal permissions and concerning permissions associated with the various types of applications. Permissions compiling module stores the lists of permissions to permissions list . In addition permissions update module determines whether any new permissions have been associated with a particular type of application e.g. whether a particular permission has been associated with a type of application and classified as concerning or normal for the type of application. When permissions list is updated permissions distribution module distributes updates to mobile devices . Similarly when permissions analyzing module categorizes a permission as globally concerning permissions distribution module sends an update indicating the permission and an indication that the permission is considered globally concerning.

Initially in this example mobile device retrieves a malware detection application . For example mobile device may retrieve instructions for malware detection module from application market threat analysis center or an Internet repository. In some examples the retrieved malware detection application causes mobile device to send information to threat analysis center that mobile device has retrieved malware detection module such as a username and password an e mail address a telephone number associated with mobile device a registration number or other information such as other credentials. In some examples mobile device also sends a request for updates of permissions lists associated with malware detection module to threat analysis center .

Threat analysis center determines various types of applications and permissions associated with the various types of applications . For example as discussed above threat analysis center analyzes applications of application market to determine types for the various applications as well as permissions that are considered normal or concerning for the various types of applications. As also discussed above threat analysis center may be configured to analyze the permissions autonomously that is to determine whether permissions are considered normal or concerning automatically or with input from a user. In any case threat management center compiles lists of permissions for various types of applications . The lists may include a list of normal permissions for a particular type of application a list of concerning permissions for a particular type of application and or a list of globally concerning permissions that is permissions that are considered concerning for any application regardless of type. Steps and can be performed at any time and are generally performed periodically or continuously and not necessarily in response to a received request from mobile device .

In response to the request from mobile device threat analysis center sends lists of permissions for various types of applications to mobile device . Generally threat analysis center sends updates to the lists of permissions to mobile device e.g. in response to a request from mobile device on a periodic basis e.g. daily weekly monthly or anytime the lists are changed. Although malware detection module retrieved by mobile device typically includes lists of permissions that can be used to determine whether an application potentially includes malware threat analysis center continuously monitors applications for mobile devices to keep the lists up to date. In some examples the lists of permissions are associated with a current list version or other tracking number which mobile device includes in a request for updates to threat analysis center . Threat analysis center uses the current list version to determine a set of information to send to mobile device to bring the lists stored by mobile device up to date with the most current compiled lists.

In accordance with the techniques of this disclosure mobile device uses the lists to determine whether an application possibly includes malware based on an analysis of the permissions of the application. Accordingly mobile device receives the lists or updates thereto from threat analysis center . At some point mobile device receives and installs a new application e.g. from application market . Because the application is newly received malware detection module treats the application as a target application for analysis. That is malware detection module determines permissions associated with the application as well as a type for the application.

When mobile device retrieves the target application the application includes a set of data e.g. metadata that describes among other things a type for the application and a set of permissions for the application. Malware detection module analyzes the metadata to extract the type for the application and the set of permissions to determine the permissions and the type for the application .

Malware detection module then determines whether the target application includes malware based on the permissions and the type for the application. In some examples malware detection module determines whether any of the permissions for the target application are not included in a list of normal permissions for the type for the target application. For each of the permissions not included in the list of normal permissions malware detection module may further determine whether the permission should be categorized as concerning e.g. when the permission is included in a global list of concerning permissions or in a list of concerning permissions for the type for the target application. In some examples any time there is a permission for the target application that is not included in the list of normal permissions malware detection module determines that the application may include malware and thus categorizes the application as suspect or notable or otherwise in a manner that indicates that the target application is not necessarily safe to execute.

In some examples malware detection module compares each of the permissions for the target application to a list of concerning permissions for the type for the target application. When at least one of the permissions for the target application is included in the list of concerning permissions malware detection module indicates that the target application may include malware. In some examples malware detection module assigns the application to a category based on the number of permissions that are considered concerning for the target application. Malware detection module further performs an action to mitigate the malware such as deleting the target application quarantining the malware or alerting a user via a graphical user interface that the application may include malware and requesting that the user either ignore the warning or delete or quarantine the application.

The techniques of are generally described with respect to determining whether permissions of a newly installed application potentially includes malware based on permissions for the application. However it should be understood that similar techniques may be applied to determine whether a previously installed application potentially includes malware. Permissions for applications may be stored with the application e.g. as metadata. Alternatively malware detection module may retrieve the set of permissions for the previously installed application from application market . In any case malware detection module may analyze permissions for a previously installed application to determine whether the previously installed application potentially includes malware using techniques similar to those described with respect to . Likewise techniques similar to the methods of described below may also be applied to determine whether a previously installed application potentially includes malware. Moreover in some examples the techniques of this disclosure may be applied to determine whether an application potentially includes malware without actually installing or downloading the application by analyzing the set of permissions for the application prior to installation or retrieval of the application.

Malware detection module then compares each of the permissions for the target application to the set of normal permissions for the type of application . In one example permissions categorizing module iterates through each of the permissions of the target application and determines whether the current permission is included in the set of normal permissions. When the current permission is not included in the set of normal permissions permissions categorizing module adds the current permission to a subset of permissions for the target application that are to be further analyzed. After iterating through the set of permissions for the target application the subset includes permissions for the target application that are not included in the set of normal permissions for the type for the target application.

Next malware detection module determines whether all permissions for the target application are considered normal . When all of the permissions for the target application are normal e.g. when the subset is empty YES branch of malware detection module allows the application to execute normally . However when there is at least one permission for the target application that is not normal e.g. when the subset includes at least one element NO branch of malware detection module determines whether any or all of the permissions that are not normal are considered concerning . In some examples any permission that is not normal is considered concerning while in other examples further analysis is performed to determine whether the permission is concerning such as determining whether the permission is included in a list of globally concerning permissions or application type specific set of concerning permissions.

When there is not at least one concerning permission among the permissions that are not considered normal for the type of application NO branch of malware detection module also allows the target application to execute normally . However if there is at least one concerning permission for the application YES branch of malware detection module mitigates malware of the application .

A determination that the application includes a concerning permission does not necessarily indicate that the application includes malware. Nevertheless malware detection module may perform a mitigating action with respect to an application suspected of including malware based on the analysis of permissions for the application. The mitigating action may include deleting the target application or quarantining the target application. Alternatively alert generation module may present a user interface indicating the name of the target application and that the target application is suspected of including malware thus allowing a user to determine how to proceed. For example the user may elect to proceed with executing the application as normal or to delete the application.

In some examples the mitigating action performed by malware detection module corresponds to a category assigned to the target application which may be based on a number of concerning permissions associated with the target application. For example malware detection module may present an alert requesting user feedback on how to proceed for a suspicious application quarantine a notable application and delete a malware application.

Permissions categorizing module then compares permissions for the application to the set of concerning permissions . That is permission categorizing module iterates through the permissions for the application and determines for each of the permissions whether the permission is included in the set of concerning permissions for the type of application. While performing this iteration malware detection module determines whether there is at least one concerning permission . When there is not at least one concerning permission among the permissions for the application NO branch of malware detection module allows the target application to execute normally . However if there is at least one concerning permission for the application YES branch of malware detection module mitigates malware of the application . The mitigation actions that malware detection module may perform are similar to those described with respect to step of .

Set of permissions represents an example of a set of permissions that can be used in accordance with the techniques of this disclosure to determine whether an application potentially includes malware. In particular set of permissions may be analyzed based on a type for the corresponding application. The type in this example corresponds to a weather application. Accordingly set of permissions may be analyzed based on lists of permissions associated with weather applications to determine whether the application potentially includes malware.

User interface also provides OK button and Cancel button . In general user interface is presented after a user has requested to download an application. Accordingly after reviewing set of permissions for the application the user may select OK button to proceed with downloading the application or Cancel button to cancel downloading the application. After downloading the application a malware detection application may analyze the permissions of the application to determine whether the application potentially includes malware. In some examples the malware detection application may immediately analyze set of permissions to determine whether the application potentially includes malware and present an indication on user interface of whether the application potentially includes malware. In this manner the user may avoid downloading the application based on the indication.

Accordingly user interface includes warning indicator that provides a warning to the user that the application potentially includes malware. User interface further includes user options including Delete Quarantine and Ignore. Each of the options is associated with a corresponding one of radio buttons A C radio buttons . This allows the user to select an action to proceed. In this example radio button A associated with Delete is selected as indicated by a dark circle within the lighter region of radio button A. After one of radio buttons is selected the user may select OK button to proceed with the selected action. In this example the ASTROIDZ application will be deleted. In other examples the application may be quarantined or the warning may be ignored by selecting the other respective radio buttons and selecting OK button . While the example of illustrates quarantine as an option in some examples user interface presents only two options delete and ignore. That is a user may either elect to delete the application entirely or proceed to install and execute the application normally and ignore the warning without the option to quarantine the application.

In this example user interface displays a listing of prohibited applications detected on the mobile device. Selection indicator is presented on Prohibited button to indicate that prohibited applications are shown in greater detail. In this example two applications are detected as prohibited BLOCK BREAKER and NET CHATTER. In accordance with the techniques of this disclosure these applications are detected based on their associated permissions. That is the security management module uses permissions associated with the applications to determine that these applications are not permitted that is prohibited e.g. in accordance with a corporate policy.

User interface presents application information area A that includes a name and icon for the BLOCK BREAKER application as well as radio button A and application information area B that includes a name and icon for the NET CHATTER application and radio button B. In general the security management module will prevent execution of these two applications because they are prohibited. Accordingly user interface provides an option to the user to uninstall the applications. The user may select radio buttons associated with applications the user wishes to uninstall delete and then select Uninstall button to remove instructions associated with the applications. After Uninstall button is selected the mobile device will remove applications for which corresponding radio buttons have been selected.

In some examples user interface presents one or more additional buttons that can be selected in addition to prohibited button malware button and suspicious button . In some examples user interface presents a virus button that when selected causes user interface to present an indication of applications including viruses. Although the term malware can refer to any malicious software e.g. any application including malicious code or instructions whether included by the original application developer or not in some instances malware is used to refer to applications that resemble other non malicious applications that have been modified to become malicious. For example a malicious user may retrieve instructions for a benign application pirate the application inject malicious code into the pirated application and then present the pirated malicious version of the application as if it were legitimate. On the other hand a virus may infect an otherwise benign application e.g. before during or after the application has been retrieved and or installed. Accordingly in some examples the separate virus button may indicate that a particular virus was found that can be removed whereas malware button may indicate that a particular application is or includes malware. In some examples viruses may be listed under the general category of malware when malware button is selected.

As in application information A presents information for a particular application ASTROIDZ in this example as well as radio button A. Application information A provides the name of the application and an icon for the application. The user may select radio button A to select the application to be removed and then select Uninstall button to remove the applications for which the corresponding radio buttons were selected. After Uninstall button is selected the mobile device will remove applications for which corresponding radio buttons were selected.

The techniques described in this disclosure may be implemented at least in part in hardware software firmware or any combination thereof. For example various aspects of the described techniques may be implemented within one or more processors including one or more microprocessors digital signal processors DSPs application specific integrated circuits ASICs field programmable gate arrays FPGAs or any other equivalent integrated or discrete logic circuitry as well as any combinations of such components. The term processor or processing circuitry may generally refer to any of the foregoing logic circuitry alone or in combination with other logic circuitry or any other equivalent circuitry. A control unit comprising hardware may also perform one or more of the techniques of this disclosure.

Such hardware software and firmware may be implemented within the same device or within separate devices to support the various operations and functions described in this disclosure. In addition any of the described units modules or components may be implemented together or separately as discrete but interoperable logic devices. Depiction of different features as modules or units is intended to highlight different functional aspects and does not necessarily imply that such modules or units must be realized by separate hardware or software components. Rather functionality associated with one or more modules or units may be performed by separate hardware or software components or integrated within common or separate hardware or software components.

The techniques described in this disclosure may also be embodied or encoded in a computer readable medium such as a computer readable storage medium containing instructions. Instructions embedded or encoded in a computer readable medium may cause a programmable processor or other processor to perform the method e.g. when the instructions are executed. Computer readable media may include non transitory computer readable storage media and transient communication media. Computer readable storage media which is tangible and non transitory may include random access memory RAM read only memory ROM programmable read only memory PROM erasable programmable read only memory EPROM electronically erasable programmable read only memory EEPROM flash memory a hard disk a CD ROM a floppy disk a cassette magnetic media optical media or other computer readable storage media. It should be understood that the term computer readable storage media refers to physical storage media and not signals carrier waves or other transient media.

Various examples have been described. These and other examples are within the scope of the following claims.

