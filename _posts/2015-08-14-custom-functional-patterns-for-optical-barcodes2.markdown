---

title: Custom functional patterns for optical barcodes
abstract: Systems and methods for custom functional patterns for optical barcodes are provided. In example embodiments, image data of an image is received from a user device. A candidate shape feature of the image is extracted from the image data. A determination is made that the shape feature satisfies a shape feature rule. In response to the candidate shape feature satisfying the shape feature rule, a custom graphic in the image is identified by comparing the candidate shape feature with a reference shape feature of the custom graphic. In response to identifying the custom graphic, data encoded in a portion of the image is decoded.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09659244&OS=09659244&RS=09659244
owner: SNAP INC.
number: 09659244
owner_city: Venice
owner_country: US
publication_date: 20150814
---
This application is a continuation of and claims the benefit of priority of U.S. patent application Ser. No. 14 612 409 filed Feb. 3 2015 which claims the benefit under 35 U.S.C. Section 119 e to U.S. Provisional Application No. 62 105 141 filed Jan. 19 2015 each of which is hereby incorporated by reference in its entirety.

Embodiments of the present disclosure relate generally to mobile computing technology and more particularly but not by way of limitation to custom functional patterns for optical barcodes.

Quick Response QR codes and other optical barcodes are a convenient way to share small pieces of information to users of mobile devices wearable devices and other smart devices. Typically an optical barcode uses a finder pattern for identification of the optical barcode. Conventional finder patterns commonly use multiple generic markings conspicuously placed within the optical barcode. Such conspicuous and generic markings can be unsightly and often serve no purpose other than to function as a finder pattern.

The description that follows includes systems methods techniques instruction sequences and computing machine program products that embody illustrative embodiments of the disclosure. In the following description for the purposes of explanation numerous specific details are set forth in order to provide an understanding of various embodiments of the inventive subject matter. It will be evident however to those skilled in the art that embodiments of the inventive subject matter may be practiced without these specific details. In general well known instruction instances protocols structures and techniques are not necessarily shown in detail.

QR codes and other optical barcodes e.g. Universal Product Code UPC barcodes Aztec code Data Matrix Dataglyph MaxiCode PDF417 Ultra Code are a convenient way to share small pieces of information with users of mobile devices wearable devices and other smart devices. For instance QR codes are two dimensional optical barcodes that encode information readable by a device e.g. a smart phone equipped with a camera sensor. Typically a QR code includes one or more functional patterns such as a finder pattern used for identification and recognition of the QR code or an alignment pattern used to facilitate decoding. Conventional finder patterns comprise multiple markings that are generic in design such as square marks placed in all corners except the bottom right corner as is the case with a QR code . These finder patterns are absent aesthetic elements such as curves non uniformities and other stylistic elements and often conform to a particular standard to promote open use of the optical barcode.

In various example embodiments an optical barcode that uses custom or non standard functional patterns provides users with an aesthetically pleasing branded barcode that allows for an exclusive experience associated with the optical barcode. For example an entity logo e.g. a logo of a company organization or individual can be used as a finder pattern and in some instances an alignment pattern to create a branded and exclusive optical barcode that is machine readable using software provided by the entity. In a specific example a snapcode is an optical barcode that uses the SNAPCHAT logo as a functional pattern.

In an example embodiment a custom pattern system receives image data representing an image from a user device. For example the custom pattern system receives the image data from an optical sensor e.g. a camera sensor of a smart phone of the user. In various embodiments the image data from the user device is received in response to a user initiated image capture a periodic monitoring of image data being detected by the optical sensor of the user device an access of stored image data or a combination thereof. A portion of the image data can include data representing an optical barcode employing a custom graphic for a particular functional pattern e.g. a finder pattern . In some scenarios the image data includes extraneous or irrelevant data along with the data pertaining to the optical barcode e.g. an image of an optical barcode includes a background that is not pertinent to decoding the optical barcode . In a specific example the optical sensor of the user device captures an image of a promotional poster that includes a particular optical barcode. The image of the promotional poster can include the particular optical barcode along with irrelevant portions of the promotional poster or background that surrounds the particular optical barcode.

After the custom pattern system receives the image data the custom pattern system searches the image data of the image for the custom graphic to determine whether the image includes the optical barcode. That is to say the custom graphic is used as a finder pattern for recognition identification or detection of the optical barcode within the image. In an example embodiment the custom pattern system searches for the custom graphic by extracting a candidate shape feature or multiple candidate shape features from the image data. For example the custom pattern system performs an edge detection technique or another image processing technique to identify the candidate shape feature such as a contour line of the image. The custom pattern system then determines whether the candidate shape feature satisfies shape feature rules or criteria. For instance if a particular candidate shape feature is a contour line the custom pattern system can determine whether the contour line is an enclosed line that encircles a portion of the image. Consistent with some embodiments the shape feature rules filter out irrelevant or extraneous candidate shape features or candidate shape features with a low probability of being the custom graphic.

In response to the candidate shape feature satisfying the shape feature rules the custom pattern system identifies the custom graphic by comparing the candidate shape feature with a reference shape feature of the custom graphic. For example the custom pattern system can compare an area or size of the candidate shape feature with a reference area or size of the reference shape feature. In this example the custom pattern system identifies the custom graphic based on a match or near match e.g. a percentage match above a threshold between the candidate shape feature and the reference shape feature. In this way the custom pattern system uses the custom graphic as a finder pattern to identify the presence of the optical barcode within a portion of the image.

In further example embodiments the custom graphic functions as an alignment pattern to facilitate the custom pattern system decoding the data encoded in the optical barcode. In an example embodiment the custom pattern system extracts spatial attributes of the custom graphic in the image from the image data. For example the custom pattern system extracts a position scale or orientation of the custom graphic from the image data. The custom pattern system decodes data encoded in the image from the image data using the spatial attributes of the custom graphic in the image. For instance the custom pattern system can perform an image transform using the spatial attributes e.g. a de skew a rotation a scale or another type of image transform to improve detectability readability of data encoded in a portion of the image. In this way the custom pattern system uses the custom graphic as an alignment pattern to facilitate decoding the optical barcode.

Accordingly the custom pattern system uses the custom graphic as a functional pattern of the optical barcode without utilizing conventional functional patterns. Using the custom graphic as a functional pattern allows for an aesthetically pleasing design and can provide exclusivity to a particular software application as the functional pattern does not necessarily conform to an open standard and thus is readable exclusively by the particular software application.

As shown in the network system includes a social messaging system . The social messaging system is generally based on a three tiered architecture consisting of an interface layer an application logic layer and a data layer . As is understood by skilled artisans in the relevant computer and Internet related arts each module or engine shown in represents a set of executable software instructions and the corresponding hardware e.g. memory and processor for executing the instructions. To avoid obscuring the inventive subject matter with unnecessary detail various functional modules and engines that are not germane to conveying an understanding of the inventive subject matter have been omitted from . Of course additional functional modules and engines may be used with a social messaging system such as that illustrated in to facilitate additional functionality that is not specifically described herein. Furthermore the various functional modules and engines depicted in may reside on a single server computer or may be distributed across several server computers in various arrangements. Moreover although the social messaging system is depicted in as a three tiered architecture the inventive subject matter is by no means limited to such an architecture.

As shown in the interface layer consists of interface modules e.g. a web server which receive requests from various client computing devices and servers such as client devices executing client applications and third party servers executing third party applications . In response to received requests the interface modules communicate appropriate responses to requesting devices via a network . For example the interface modules can receive requests such as Hypertext Transfer Protocol HTTP requests or other web based Application Programming Interface API requests.

The client devices can execute conventional web browser applications or applications also referred to as apps that have been developed for a specific platform to include any of a wide variety of mobile computing devices and mobile specific operating systems e.g. IOS ANDROID WINDOWS PHONE . In an example the client devices are executing the client applications . The client applications can provide functionality to present information to a user and communicate via the network to exchange information with the social messaging system . Each of the client devices can comprise a computing device that includes at least a display and communication capabilities with the network to access the social messaging system . The client devices comprise but are not limited to remote devices work stations computers general purpose computers Internet appliances hand held devices wireless devices portable devices wearable computers cellular or mobile phones personal digital assistants PDAs smart phones tablets ultrabooks netbooks laptops desktops multi processor systems microprocessor based or programmable consumer electronics game consoles set top boxes network PCs mini computers and the like. Users can include a person a machine or other means of interacting with the client devices . In some embodiments the users interact with the social messaging system via the client devices .

As shown in the data layer has one or more database servers that facilitate access to information storage repositories or databases . The databases are storage devices that store data such as member profile data social graph data e.g. relationships between members of the social messaging system and other user data.

An individual can register with the social messaging system to become a member of the social messaging system . Once registered a member can form social network relationships e.g. friends followers or contacts on the social messaging system and interact with a broad range of applications provided by the social messaging system .

The application logic layer includes various application logic modules which in conjunction with the interface modules generate various user interfaces with data retrieved from various data sources or data services in the data layer . Individual application logic modules may be used to implement the functionality associated with various applications services and features of the social messaging system . For instance a social messaging application can be implemented with one or more of the application logic modules . The social messaging application provides a messaging mechanism for users of the client devices to send and receive messages that include text and media content such as pictures and video. The client devices may access and view the messages from the social messaging application for a specified period of time e.g. limited or unlimited . In an example a particular message is accessible to a message recipient for a predefined duration e.g. specified by a message sender that begins when the particular message is first accessed. After the predefined duration elapses the message is deleted and is no longer accessible to the message recipient. Of course other applications and services may be separately embodied in their own application logic modules .

As illustrated in the social messaging system or the client applications includes a custom pattern system that provides functionality to identify and decode optical barcodes that employ custom functional patterns. In various embodiments the custom pattern system can be implemented as a standalone system and is not necessarily included in the social messaging system . In some embodiments the client devices include a portion of the custom pattern system e.g. a portion of the custom pattern system may be included independently or in the client applications . In embodiments where the client devices includes a portion of the custom pattern system the client devices can work alone or in conjunction with the portion of the custom pattern system included in a particular application server or included in the social messaging system .

The communication module provides various communications functionality. For example the communication module receives accesses or otherwise obtains image data of an image from a user device. In a specific example the communication module receives substantially real time image data from a camera sensor of a smart phone e.g. a single frame of image data or a continuous stream of frames captured by a camera sensor of the smart phone . The communication module exchanges network communications with the database servers the client devices and the third party servers . The information retrieved by the communication module includes data associated with the user e.g. member profile data from an online account or social network service data or other data to facilitate the functionality described herein.

The presentation module provides various presentation and user interface functionality operable to interactively present and receive information to and from the user. For instance the presentation module is utilizable to present user interfaces generated in response to decoding the optical barcode. In other instances the presentation module generates user interfaces that include optical barcode s . In various embodiments the presentation module presents or causes presentation of information e.g. visually displaying information on a screen acoustic output haptic feedback . The process of interactively presenting information is intended to include the exchange of information between a particular device and the user. The user may provide input to interact with the user interface in many possible manners such as alphanumeric point based e.g. cursor tactile or other input e.g. touch screen tactile sensor light sensor infrared sensor biometric sensor microphone gyroscope accelerometer or other sensors . The presentation module provides many other user interfaces to facilitate functionality described herein. The term presenting as used herein is intended to include communicating information or instructions to a particular device that is operable to perform presentation based on the communicated information or instructions.

The finder module provides image processing functionality to identify recognize or detect the custom graphic being employed as a finder pattern in the optical barcode. For example the finder module extracts and analyzes candidate shape features or candidate contour characteristics from image data of the image received from the user device e.g. the client devices . The finder module determines satisfaction of various rules or criteria associated with the extracted candidate shape features. The finder module compares the extracted candidate shape features with reference shape features of the custom graphic or another reference image to identify the custom graphic included in the image. The finder module can employ a wide variety of schemes and techniques to extract the candidate shape features from the image data of the image and subsequently identify the custom graphic based on an analysis of the candidate shape features. Examples of those techniques are illustrated later with respect to .

The alignment module provides image processing functionality to determine an alignment of the optical barcode using the custom graphic. The custom pattern system can use the alignment to facilitate decoding of data encoded in the optical barcode. In this way the custom graphic functions as an alignment pattern for the optical barcode. For example the alignment module extracts spatial attributes of the custom graphic in the image from the image data. In various embodiments the spatial attributes include at least one of position orientation scale or another spatial aspect of the optical barcode. The alignment module determines an alignment of the optical barcode based on the spatial attributes e.g. a particular orientation of the optical barcode . In an example the alignment module can determine an alignment including position and orientation based on the spatial attributes and generate a transformed image according to the alignment. The custom pattern system can then use the transformed image to decode data encoded in a portion of the transformed image.

The decoder module provides functionality to decode data encoded in the image using the spatial attributes or the determined alignment of the custom graphic in the image. For instance the decoder module can decode the data encoded in the image from an image transformed according to the spatial attributes of the custom graphic extracted from image data. In an embodiment the decoder module detects markings e.g. high contrast dots squares or other marks in the image representing data encoded in a portion of the image from the image data. In a specific example the decoder module employs a Reed Solomon error correction scheme to decode data encoded in the image. The Reed Solomon error correction scheme allows for a successful or valid decoding even when a certain percentage of data could not be decoded from the optical barcode e.g. damaged bits or incorrectly decoded bits . In some embodiments the user or an administrator of the custom pattern system configures a tolerance value for an amount of damaged or incorrectly decoded data acceptable when decoding the optical barcode. In some embodiments the decoder module also provides image processing functionality to improve decoding of the optical barcode. For instance the decoder module as well as the alignment module can perform image transforms of the image e.g. perform image sharpening de noise processing other digital filtering or other image processing techniques to improve decoding accuracy .

The action module provides functionality to perform a variety of actions based on decoding the data encoded in the image. For example the data encoded in a portion of the image can indicate a particular action or include information to be used in conjunction with a particular action. In a specific example the data encoded in a portion of the image can comprise a user name or other user identification of a member of a social networking service and based on decoding the user name the action module can perform an action on the social networking service corresponding to the user name e.g. sending a message to the member associated with the user name . In some embodiments the action module performs an action specific to a particular app that scans the image e.g. a function available to a user of the app but otherwise unavailable . In some instances the action module performs the action without communicating with an external server e.g. an action locally performed on the user device that scanned the snapcode .

The encoder module provides functionality to generate and encode data into an optical barcode that employs the custom graphic as one or more functional patterns e.g. generating snapcodes . As discussed above in connection with the decoder module in a specific example the encoder module can employ a technique such as Reed Solomon error correction to encode data. In an example embodiment the encoder module renders a machine readable arrangement of marks that represents the data to be encoded. The encoder module can then generate the machine readable optical barcode using the rendered arrangement of marks and the custom graphic to be used as a functional pattern.

As shown in the diagram the markings are dots that are arranged in a pattern with a particular spacing or positioning readable by a machine. Although the diagram shows the markings as dots other shapes and marks can be employed e.g. squares or asymmetric shapes of various geometries . The markings can be arranged in a uniform pattern or a non uniform pattern. In some instances the marks can be of different sizes or a uniform size. Additionally the markings can be in a predetermined arrangement or an arrangement that is dynamically determinable when decoding data from the markings. In some embodiments the custom graphic and the markings can be surrounded by a bounding shape such as an outer box . Although the outer box of the diagram is shown as a square with rounded corners the outer box can be in the form of a variety of other shapes with various geometries. Diagram in shows another example optical barcode that employs the custom graphic for a finder pattern or an alignment pattern. The diagram shows the optical barcode with markings excluded from within the custom graphic. In these and other embodiments the space internal to the custom graphic may be reserved for other uses. For example a picture graphic animation annotation or image selected by a user may be inserted.

Turning now to a diagram illustrating an example of identifying and decoding the optical barcode employing the custom graphic for a finder pattern or an alignment pattern is shown. is an overview of a particular example embodiment of identifying and decoding the optical barcode using the custom graphic. Additional details and alternative implementations are discussed in connection with the figures to follow. In the diagram a scene illustrates a poster that includes an optical barcode and a user . It will be appreciated that the optical barcode can be displayed in a variety of manners such as on a user device display a computer display woven or otherwise affixed to an article of clothing or another product or included in a variety of printed items. Callout portrays an enlarged view of a portion of the scene . The callout includes a user device of the user that includes an optical sensor e.g. a camera sensor of a smart phone operable to detect an optical signal of the optical barcode .

In an example embodiment the user device captures an image of the poster that includes the optical barcode . The custom pattern system receives the image data representing the image from the user device . In this example embodiment the custom pattern system is included in the user device e.g. an application executing on a smart phone of the user although in other example embodiments the custom pattern system can reside on a server e.g. a server of the social messaging system that is communicatively coupled with the user device . Callout portrays example image processing the finder module performs to identify the custom graphic in the image and use the custom graphic as an alignment pattern for decoding data included in the optical barcode . In the callout the finder module extracts candidate shape features from the image data of the image. Subsequently the finder module determines if the candidate features meet certain rules and criteria to filter out irrelevant shape features or shape features that have a low probability of being the custom graphic. The finder module can then compare the candidate shape features that meet the shape feature criteria or rules with reference shape features of the custom graphic. In an example the finder module identifies the custom graphic based on a match between the candidate shape features and the reference shape feature e.g. a match score that exceeds a threshold .

Subsequent to the finder module identifying the custom graphic the custom pattern system can use the custom graphic as an alignment pattern for decoding. For instance the alignment module extracts spatial attributes of the custom graphic in the image and compares the extracted spatial attributes to reference spatial attributes to determine an alignment of the custom graphic. The alignment module or the decoder module may then generate a transformed image of the image according to the alignment e.g. a rotation or de skew as shown in callout . After generating the transformed image the decoder module decodes the data encoded in a portion of the transformed image as shown in callout . In the callout the dots of the optical barcode are transformed into data shown as ones for dots and zeros for non dots although this is merely an illustrative example and other schemes can be employed. In this way the custom pattern system uses the custom graphic included in the optical barcode as one or more functional patterns such as a finder pattern or an alignment pattern.

At operation the communication module receives image data of an image from a user device. For example the communication module receives the image data from an optical sensor e.g. a camera sensor of a smart phone of the user. In various embodiments the image data from the user device is received in response to a user initiated image capture a periodic monitoring of image data being detected by the optical sensor of the user device or a combination thereof. In some embodiments the image data represents an image or video being captured by the user device in substantially real time e.g. a live image feed from a camera sensor of a smart phone . In other embodiments the image data represents an image captured by the user device or another device and stored on the user device from a time in the past e.g. a still image or video stored on the user device or downloaded from a social networking service . In embodiments where the image data comprises video image data the custom pattern system can analyze individual frames of the video or a combination of multiple frames of the video to detect and decode the optical barcode. A portion of the image data can include data representing an optical barcode employing a custom graphic custom symbol or specific graphic for a particular functional pattern e.g. a finder pattern or alignment pattern .

In some scenarios the image data includes extraneous or irrelevant data along with the data pertaining to the optical barcode e.g. an image of an optical barcode includes a background that is not pertinent to decoding the optical barcode . In a specific example the optical sensor of the user device captures an image of a movie poster that includes a particular optical barcode. The image of the movie poster can include the particular optical barcode along with irrelevant portions of the movie poster or background that surrounds the particular optical barcode.

At operation the finder module extracts a candidate shape feature or candidate characteristic of the image from the image data. The candidate shape feature can be indicative of an identification of the custom graphic e.g. include certain traits or characteristics that indicate the custom graphic . For example the finder module performs an edge detection technique or another image processing technique to identify shape features such as contour lines or localized concentrations of color or shading of the image. In some embodiments the finder module extracts multiple candidate shape features from the image data. In some embodiments the candidate shape feature includes various shape feature data such as a position of the candidate shape feature relative to a boundary of the image a brightness of the candidate shape feature relative to the image an average color of the candidate shape feature and so forth.

In further example embodiments the finder module generates a low resolution copy of the image. The finder module can perform various image processing on the low resolution copy of the image such as a blur e.g. a Gaussian blur function or another blur function and a thresholding to generate a modified low resolution image. The thresholding image process can include adjusting lighter colors e.g. as determined by a threshold or threshold range of the low resolution copy of the image to a white color and darker colors e.g. as determined by a threshold or threshold range of the low resolution copy of the image to a black color. The finder module can then extract candidate shape features from the modified low resolution image to improve detection of the custom graphic in the image and improve computational efficiency of identifying the custom graphic in the image.

In still further example embodiments the finder module generates a high resolution copy of a portion of the image. For instance the finder module can generate the high resolution copy of a particular portion of the image corresponding to the extracted candidate shape feature. The finder module the alignment module or the decoder module can use the high resolution copy for subsequent analysis as described below to improve detection alignment and decoding results.

At operation the finder module determines that the candidate shape feature satisfies one or more shape feature criteria or rules. For instance if a particular shape feature is a contour line the finder module can determine whether the contour line is an enclosed line that encircles a portion of the image. Consistent with some embodiments the shape feature rule filters out irrelevant or extraneous features. Particular shape feature rules can be directed to or purposed for various objectives. For example a particular shape feature rule can be purposed to filter out candidate shape features with a low probability of being the custom graphic. In this example the particular shape feature rule can be specific to the custom graphic. In other examples some shape feature rules can be purposed to filter out candidate shape features that are unlikely to be associated with the optical barcode. In these examples the shape feature rule is not necessarily specific to the custom graphic.

At operation in response to the candidate shape feature satisfying the shape feature rule the finder module identifies the custom graphic or custom symbol in the image by comparing the candidate shape feature with a reference shape feature of the custom graphic or custom symbol. For example the finder module can compare an area or size of the candidate shape feature with a reference area or size of the reference shape feature. In this example the finder module identifies the custom graphic based on a match or near match e.g. a percentage match above a threshold between the candidate shape feature and the reference shape feature. In this way the finder module uses the custom graphic or at least a portion of the custom graphic as a finder pattern to identify the presence of the optical barcode within a portion of the image.

In some embodiments the finder module extracts multiple candidate shape features from the image data. In these embodiments the finder module scores each candidate shape feature and ranks the multiple candidate shape features according to respective scores. For example the finder module determines a shape feature score for respective candidate shape features based on a count or weighted count of shape feature rules the respective candidate shape feature satisfies. The finder module can iterate through the ranked candidate shape features starting with the highest scoring candidate shape feature and perform further analysis e.g. comparing the candidate shape feature to a reference shape feature to determine that the candidate shape feature is the custom graphic.

In some embodiments the reference shape feature is predetermined and in other embodiments the reference shape feature is dynamically determined. For instance the finder module can dynamically determine the reference shape feature by analyzing a reference image of the custom graphic. For example the finder module can perform analysis techniques similar to those for analyzing the image data on the reference image such as calculating the reference area value for a particular feature or characteristic of the reference image. In these embodiments the finder module dynamically determining the reference shape feature allows for dynamic use of a particular custom graphic as a functional pattern in an optical barcode. For instance the custom pattern system can be provided e.g. received at the communication module data representing the reference image or data representing the reference features when the method is performed. In this way the custom functional patterns do not necessarily have to be fixed prior to performing the method .

In further example embodiments the finder module searches for multiple custom graphics in the image data of the image e.g. where multiple versions or different custom graphics are employed as functional patterns . In a specific example the custom graphic can comprise a first company logo and the company may change logos to a second company logo. The custom pattern system can be operable to use the first company logo as a finder pattern and the second company logo as a finder pattern and the custom pattern system can search for each logo when performing the method .

In further example embodiments the finder module identifies the custom graphic in the image in conjunction with other candidate shape features extracted from the image data. For example the finder module can search for both the custom graphic e.g. a logo and an outer box e.g. the outer box surrounding the custom graphic. In these embodiments the finder module identifies a combination of the custom graphic and one or more additional candidate shape features extracted from the image data.

At operation in response to identifying the custom graphic the alignment module extracts a spatial attribute geometry attribute or spatial property of the custom graphic or custom symbol in the image from the image data. For example the alignment module extracts a position scale or orientation of the custom graphic from the image data. In various example embodiments the spatial attribute is indicative of an orientation of the custom graphic in the image. The alignment module or the decoder module can use the spatial attribute to facilitate decoding the optical barcode.

In further embodiments the alignment module extracts a spatial attribute geometry attribute or spatial property of another candidate shape feature extracted from the image data of the image. For example the alignment module extracts a spatial attribute of the outer box e.g. the outer box of surrounding the custom graphic and the markings that encode data. It will be noted that throughout the discussion to follow the alignment module and the decoder module can use the spatial attribute of the outer box in a same or similar way as the spatial attribute of the custom graphic to determine an alignment of the optical barcode used to facilitate decoding. For example the alignment module or the decoder module can use the spatial attributes of the outer box to generate a transformed image of the image used to decode the data encoded in the image.

At operation the decoder module decodes data encoded in a portion of the image from the image data using the spatial attribute of the custom graphic in the image. For instance the decoder module can perform an image transform using the spatial attributes e.g. a de skew a rotation a scale or another type of image transform to improve detectability or readability of data encoded in a portion of the image. In an example embodiment the decoder module decodes the data encoded in the portion of image by detecting marking e.g. dots squares or another marking indicative of data included in the image. In this way the decoder module uses the custom graphic or at least a portion of the custom graphic as an alignment pattern to facilitate decoding the optical barcode. In various embodiments the decoder module employs a Reed Solomon error correction scheme to decode data encoded in the image. The Reed Solomon error correction scheme allows for a successful decoding of the data encoded in the image with a certain percentage of data encoded in the image being corrupt damaged or incorrectly decoded. In further embodiments the decoder module uses a small checksum to verify that the value decoded from the image data is a value that includes real data rather than just random data e.g. random bits .

In further example embodiments the decoder module rejects certain results of the decoded data e.g. results of data decoded from the image data known to be invalid as specified by an administrator of the custom pattern system . For example the decoder module can reject decoded data that includes all zeros all ones or another specified result even though the decoded data passed other data integrity tests e.g. error correction and checksumming . For example this can occur when the custom pattern system scans the custom graphic without any associated markings that indicate data e.g. where the custom graphic is a logo simply scanning the logo may yield all zeros in the decoded data and may be rejected by the decoder module . In a specific example scanning the icon associated with social messaging app shown below in would likely yield data with all zeros and the decoder module would reject the scan.

At operation the finder module determines that the candidate shape feature comprises an enclosed line from the image data. That is to say the shape feature rule comprises a path rule and the finder module determines that the candidate shape feature satisfies the path rule. The finder module can employ a variety to techniques to determine that the candidate shape feature satisfies the path rule.

At operation the finder module determines whether the candidate shape feature is an enclosed line by determining that the candidate shape feature encircles a portion of the image by having a path that starts at a particular point and returns to the same particular point. In an example embodiment if the candidate shape feature does not satisfy the path rule indicated by no in no further analysis of the candidate shape feature is performed and the finder module analyzes another candidate shape feature or performs no further operations. Alternatively at operation if the finder module determines that the candidate shape feature satisfies the path rule indicated by yes in the subsequent operations of the method are performed.

To illustrate the concepts of is a diagram illustrating an example of identifying the optical barcode using the custom functional pattern. In the diagram the image is an example image that is received or accessed from the user device. The image is an example image portraying example candidate shape features . For instance the finder module performs an edge detection image processing on the image to derive the image . From the image the finder module identifies the candidate shape features .

Callout shows a particular candidate shape feature of the candidate shape features . The callout shows a contour line illustrated as a dotted line of the particular candidate shape feature a path and a point of the particular candidate shape feature. In the callout the finder module determines that the path rule is met if the path that starts at the point can follow the contour line and return to the point . In the diagram the particular candidate shape feature shown in the callout does satisfy the path rule since the path can follow the contour line and return to the point .

At operation the finder module calculates an area value or size approximation of the candidate shape feature. For example the finder module uses a proxy shape such as a polygon e.g. a square a rectangle or a quadrilateral or a non polygonal shape e.g. an ellipse to approximate the shape of the candidate shape feature. The finder module fits or nearly fits the proxy shape to the outer edges or outer perimeter of the candidate shape feature so that the proxy shape is representative of an area of the candidate shape feature. Subsequently the finder module calculates the area value of the proxy shape to determine the area value or size approximation of the candidate shape feature. In some embodiments the finder module employs such a technique e.g. polygonal area approximation to avoid a computationally expensive area calculation of the candidate shape feature in situations where the candidate shape feature is likely to be complex in shape e.g. an area calculation for a non uniform or irregular shaped feature is typically more computationally expensive . In some embodiments other techniques such as pixel based counting can be employed to determine the area value.

At operation the finder module determines an area score or size score of the candidate shape feature. The finder module determines the area score by comparing the area value of the candidate shape feature with a reference area value. In some embodiments the reference area value comprises an area value of a corresponding proxy shape fitted to a reference image of the custom graphic e.g. the area value of a proxy shape fitted to the ghost logo from a front view perspective . In other embodiments the reference area value comprises the area value of the custom graphic e.g. the area value of the ghost logo . The finder module calculates the area score for example by determining a match percentage between the candidate shape feature area value and the reference area value. The finder module can employ a wide variety of other schemes and techniques to calculate the area score.

At operation the finder module determines whether the area score exceeds a threshold. The threshold can be predefined or dynamically determined e.g. statistically determined based on a rolling historical average of scans .

At operation based on the area score exceeding the threshold indicated by yes in the finder module determines that the candidate shape feature satisfies the area rule and proceeds to subsequent operations. In another example embodiment the finder module compares the area score to an area range to satisfy the area rule e.g. greater than a particular value and less than a particular value . If the area score does not exceed the threshold indicated by no in the finder module analyzes another candidate shape feature or no further operations are performed according to an example embodiment. In some example embodiments the finder module uses the determination of whether the candidate shape feature satisfies the shape feature rules as a filter e.g. to remove or skip candidate shape features that are unlikely to be the custom graphic to identify candidate shape features to be further analyzed in the process of identifying the custom graphic in the image.

To further illustrate the concepts of is a diagram illustrating an example of identifying the optical barcode using the custom functional pattern. In the diagram image is an example image that is received from the user device. Callout shows the spatial orientation of the image . In this example the image is portrayed and being seen from a front right perspective. The image includes optical barcode . In this example the optical barcode employs the custom graphic as a functional pattern.

Callout shows an enlarged portion of the image that includes the candidate shape feature being analyzed by the finder module to identify the custom graphic. In the callout the polygon e.g. a quadrilateral is shown fitted to a perimeter of the candidate shape feature. Area value is the area of the polygon .

Callout shows a reference image of the custom graphic. Callout shows the spatial orientation of the reference image. In this example the reference image is shown from the front view perspective. Polygon is shown fitted to a perimeter of the reference image. Reference area value is the area of the polygon . Although shows polygons and as quadrilaterals the finder module can employ other shapes such as a square or a shape that follows or traces a contour of the candidate shape feature e.g. an n sided polygon or smooth fitted shape that follows contour points of the candidate shape feature .

The finder module compares the area value with the reference area value to determine that the candidate shape feature satisfies the area rule. Another candidate shape feature of the image such as one of the musical notes of the image would not have an area value that is similar to the reference area value and therefore would not satisfy the area rule. In this way the finder module can quickly remove or skip certain candidate shape features that are unlikely to be identified as the custom graphic.

At operation the alignment module extracts a distinctive feature of the custom graphic from the image data where the distinctive feature is indicative of an alignment of the custom graphic e.g. a particular asymmetry of the custom graphic that can be used to determine an orientation of the custom graphic . For example the distinctive feature can comprise a distinctive point of the custom graphic a distinctive curve a particular asymmetry a particular non uniformity or another characteristic of the custom graphic.

At operation the alignment module determines an orientation of the custom graphic in the image by comparing the distinctive feature with a reference distinctive feature of the custom graphic. For example the alignment module maps the extracted distinctive feature of the custom graphic to a reference distinctive feature to determine spatial differences between the distinctive features. In this way the alignment module can determine an alignment of the custom graphic as compared to a reference image of the custom graphic based on the determined spatial differences.

At operation the alignment module generates a transformed image by transforming the image according to the orientation of the custom graphic. For instance the alignment module can rotate de skew scale or otherwise spatially transform the image to allow for a more accurate decoding of the data in the image.

At operation the decoder module decodes the data encoded in the image using the orientation and a position of the custom graphic in the image. For example the decoder module decodes the date encoded in the image from the transformed image. In a specific scenario the image is transformed to a front view to increase visibility and uniformity of marks in the image that represent data encoded in the image.

To assist in understanding the disclosure of is a diagram illustrating an example of decoding the optical barcode using the custom functional pattern. In the diagram similar to the described above image is an example image that is received from the user device. In this example the image is portrayed and being seen from a front right perspective. The image includes optical barcode . In this example the optical barcode employs the custom graphic as a functional pattern.

Callout shows an enlarged portion of the image that includes the candidate shape feature being analyzed by the alignment module . Callout shows an enlarged portion of the callout showing a distinctive feature of the candidate shape feature.

Callout shows a reference image of the custom graphic. Callout shows the spatial orientation of the reference image. In this example the reference image is shown from the front view perspective. Callout shows an enlarged portion of the callout showing a reference distinctive feature of the reference image.

The alignment module compares the distinctive feature and the reference distinctive feature to determine an alignment including an orientation scale or position. For example if the image that includes the custom graphic is shown from the front perspective the distinctive feature of the custom graphic in the image should match the reference distinctive feature. The alignment module can determine perspective changes based on a mismatch between the distinctive feature and the reference distinctive feature. The alignment module uses the mismatch to infer or determine a perspective of the image or other spatial attributes of the image that can be utilized by the decoder module to more accurately decode data from the image.

At operation the decoder module determines a failure to decode the data encoded in the portion of the image using the transformed image. For instance if the data decoded from the image is corrupted incomplete or garbled the decoder module determines the failure to decode the data. In another instance a portion of the data encoded in the image can be for the purposes of data validation. That is to say a known or determinable value can be encoded into the data such that the data is valid if the value is decoded from the image. The decoder module can employ a variety of other schemes and techniques to determine the failure to decode the data encoded in the portion of the image.

At operation the alignment module generates another transformed image by transforming the image according to a different orientation of the custom graphic. For example the alignment module generates a transformed image that is rotated 180 degrees and the decoder module attempts to decode the data a second time. The alignment module can perform common transforms that may resolve the failure to decode such as 90 degree rotations or another transform that has frequently resolved the failure to decode in past scans. In some embodiments the alignment module performs another analysis of the image data of the image to determine another alignment to use to use when generating another transformed image. The alignment module can perform other types of transformed image by applying different types of filters e.g. orientation color reduction brightness manipulation etc. to the custom graphic.

At operation the decoder module decodes the data encoded in the portion of the image using the another transformed image. The alignment module and the decoder module can attempt any number e.g. a set number of attempts or an unlimited number of attempts of iterations of alignments that ends when the data is successfully decoded from the image. In this way the custom pattern system can use the markings for self alignment.

To further explain the discussion in connection with is a diagram illustrating an example of decoding the optical barcode using the custom functional pattern. Example optical barcode shows positions for markings with empty circles. Each empty circle of optical barcode is a position for a marker. Example optical barcode shows a misalignment between marking positions and markings Example optical barcode shows a matching alignment between the markings and the marking positions.

Turning now to although user interfaces described herein e.g. depict specific example user interfaces and user interface elements these are merely non limiting examples and many other alternate user interfaces and user interface elements can be generated by the presentation module and presented to the user. It will be noted that alternate presentations of the displays described herein include additional information graphics options and so forth other presentations include less information or provide abridged information for easy use by the user.

In further example embodiments the action is exclusive to software that provides scanning functionality for the optical barcode that uses the custom functional pattern e.g. a snapcode . In some embodiments the software that scans the optical barcode can perform certain exclusive actions without communicating with a server. This is due to the exclusive branded nature of the custom functional pattern that is not necessarily openly decodable by other third party software applications. The snapcode can specify such actions since it is likely that the software e.g. a mobile computing software such as an app that scans the branded optical barcode is associated with the branded optical barcode.

At operation the communication module receives a request to generate a machine readable image such as an optical barcode that uses custom functional patterns. In some embodiments the request includes user specified data to encode into the image.

At operation the encoder module renders a machine readable arrangement of marks that encodes the user specified data. For instance the marks can comprise dots squares or other markings that are arranged in a predetermined pattern. In an example embodiment the presence of a mark at a particular location in the arrangement is indicative of data.

At operation the encoder module generates the machine readable image by positioning the machine readable arrangement of marks in the machine readable image with respect to a position of the custom graphic included in the machine readable image. For example the custom graphic can be centered in the optical barcode or positioned elsewhere e.g. the example optical barcodes of .

At operation the communication module stores or transmits the machine readable image. For instance the communication module can store the machine readable image on the user device a server or another storage repository either locally or remotely stored . In other instances the communication module transmits the machine readable image to the user device a server or one or more other devices.

Many varieties of applications also referred to as apps can be executed on the mobile device such as native applications e.g. applications programmed in Objective C Swift or another suitable language running on IOS or applications programmed in Java running on ANDROID mobile web applications e.g. applications written in Hypertext Markup Language 5 HTML5 or hybrid applications e.g. a native shell application that launches an HTML5 session . For example the mobile device includes a messaging app an audio recording app a camera app a book reader app a media app a fitness app a file management app a location app a browser app a settings app a contacts app a telephone call app or other apps e.g. gaming apps social networking apps biometric monitoring apps . In another example the mobile device includes a social messaging app such as SNAPCHAT that consistent with some embodiments allows users to exchange ephemeral messages that include media content. In this example the social messaging app can incorporate aspects of embodiments described herein.

Certain embodiments are described herein as including logic or a number of components modules or mechanisms. Modules can constitute either software modules e.g. code embodied on a machine readable medium or hardware modules. A hardware module is a tangible unit capable of performing certain operations and can be configured or arranged in a certain physical manner. In various example embodiments one or more computer systems e.g. a standalone computer system a client computer system or a server computer system or one or more hardware modules of a computer system e.g. a processor or a group of processors can be configured by software e.g. an application or application portion as a hardware module that operates to perform certain operations as described herein.

In some embodiments a hardware module can be implemented mechanically electronically or any suitable combination thereof. For example a hardware module can include dedicated circuitry or logic that is permanently configured to perform certain operations. For example a hardware module can be a special purpose processor such as a Field Programmable Gate Array FPGA or an Application Specific Integrated Circuit ASIC . A hardware module may also include programmable logic or circuitry that is temporarily configured by software to perform certain operations. For example a hardware module can include software executed by a general purpose processor or other programmable processor. Once configured by such software hardware modules become specific machines or specific components of a machine uniquely tailored to perform the configured functions and are no longer general purpose processors. It will be appreciated that the decision to implement a hardware module mechanically in dedicated and permanently configured circuitry or in temporarily configured circuitry e.g. configured by software can be driven by cost and time considerations.

Accordingly the phrase hardware module should be understood to encompass a tangible entity be that an entity that is physically constructed permanently configured e.g. hardwired or temporarily configured e.g. programmed to operate in a certain manner or to perform certain operations described herein. As used herein hardware implemented module refers to a hardware module. Considering embodiments in which hardware modules are temporarily configured e.g. programmed each of the hardware modules need not be configured or instantiated at any one instance in time. For example where a hardware module comprises a general purpose processor configured by software to become a special purpose processor the general purpose processor may be configured as respectively different special purpose processors e.g. comprising different hardware modules at different times. Software accordingly configures a particular processor or processors for example to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.

Hardware modules can provide information to and receive information from other hardware modules. Accordingly the described hardware modules can be regarded as being communicatively coupled. Where multiple hardware modules exist contemporaneously communications can be achieved through signal transmission e.g. over appropriate circuits and buses between or among two or more of the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times communications between such hardware modules may be achieved for example through the storage and retrieval of information in memory structures to which the multiple hardware modules have access. For example one hardware module can perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware module can then at a later time access the memory device to retrieve and process the stored output. Hardware modules can also initiate communications with input or output devices and can operate on a resource e.g. a collection of information .

The various operations of example methods described herein can be performed at least partially by one or more processors that are temporarily configured e.g. by software or permanently configured to perform the relevant operations. Whether temporarily or permanently configured such processors constitute processor implemented modules that operate to perform one or more operations or functions described herein. As used herein processor implemented module refers to a hardware module implemented using one or more processors.

Similarly the methods described herein can be at least partially processor implemented with a particular processor or processors being an example of hardware. For example at least some of the operations of a method can be performed by one or more processors or processor implemented modules. Moreover the one or more processors may also operate to support performance of the relevant operations in a cloud computing environment or as a software as a service SaaS . For example at least some of the operations may be performed by a group of computers as examples of machines including processors with these operations being accessible via a network e.g. the Internet and via one or more appropriate interfaces e.g. an Application Program Interface API .

The performance of certain of the operations may be distributed among the processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the processors or processor implemented modules can be located in a single geographic location e.g. within a home environment an office environment or a server farm . In other example embodiments the processors or processor implemented modules are distributed across a number of geographic locations.

The modules methods applications and so forth described in conjunction with the figures above are implemented in some embodiments in the context of a machine and an associated software architecture. The sections below describe representative software architecture s and machine e.g. hardware architecture that are suitable for use with the disclosed embodiments.

Software architectures are used in conjunction with hardware architectures to create devices and machines tailored to particular purposes. For example a particular hardware architecture coupled with a particular software architecture will create a mobile device such as a mobile phone tablet device or so forth. A slightly different hardware and software architecture may yield a smart device for use in the internet of things. While yet another combination produces a server computer for use within a cloud computing architecture. Not all combinations of such software and hardware architectures are presented here as those of skill in the art can readily understand how to implement the invention in different contexts from the disclosure contained herein.

In the example architecture of the software may be conceptualized as a stack of layers where each layer provides particular functionality. For example the software may include layers such as an operating system libraries frameworks middleware applications and presentation layer . Operationally the applications or other components within the layers may invoke application programming interface API calls through the software stack and receive a response returned values and so forth illustrated as messages in response to the API calls . The layers illustrated are representative in nature and not all software architectures have all layers. For example some mobile or special purpose operating systems may not provide the frameworks middleware layer while others may provide such a layer. Other software architectures may include additional or different layers.

The operating system may manage hardware resources and provide common services. The operating system may include for example a kernel services and drivers . The kernel may act as an abstraction layer between the hardware and the other software layers. For example the kernel may be responsible for memory management processor management e.g. scheduling component management networking security settings and so on. The services may provide other common services for the other software layers. The drivers may be responsible for controlling or interfacing with the underlying hardware. For instance the drivers may include display drivers camera drivers BLUETOOTH drivers flash memory drivers serial communication drivers e.g. Universal Serial Bus USB drivers WI FI drivers audio drivers power management drivers and so forth depending on the hardware configuration. In an example embodiment the operating system includes imaging service that can provide image processing services such as hardware accelerated image processing or image capture services such as low level access to optical sensors or optical sensor data.

The libraries may provide a common infrastructure that may be utilized by the applications or other components or layers. The libraries typically provide functionality that allows other software modules to perform tasks in an easier fashion than to interface directly with the underlying operating system functionality e.g. kernel services or drivers . The libraries may include system libraries e.g. C standard library that may provide functions such as memory allocation functions string manipulation functions mathematic functions and the like. In addition the libraries may include API libraries such as media libraries e.g. libraries to support presentation and manipulation of various media format such as MPREG4 H.264 MP3 AAC AMR JPG or PNG graphics libraries e.g. an OpenGL framework that may be used to render 2D and 3D in a graphic content on a display database libraries e.g. SQLite that may provide various relational database functions web libraries e.g. WebKit that may provide web browsing functionality and the like. The libraries may also include a wide variety of other libraries to provide many other APIs to the applications and other software components modules. In an example embodiment the libraries include imaging libraries that provide image processing or image capture functionality that can be utilized by the custom pattern system .

The frameworks also sometimes referred to as middleware may provide a higher level common infrastructure that may be utilized by the applications or other software components modules. For example the frameworks may provide various graphic user interface GUI functions high level resource management high level location services and so forth. The frameworks may provide a broad spectrum of other APIs that may be utilized by the applications or other software components modules some of which may be specific to a particular operating system or platform. In an example embodiment the frameworks include an image processing framework and an image capture framework . The image processing framework can provide high level support for image processing functions that can be used in aspects of the custom pattern system . Similarly the image capture framework can provide high level support for capture images and interfacing with optical sensors.

The applications include built in applications or third party applications . Examples of representative built in applications may include but are not limited to a contacts application a browser application a book reader application a location application a media application a messaging application or a game application. Third party applications may include any of the built in applications as well as a broad assortment of other applications. In a specific example the third party application e.g. an application developed using the ANDROID or IOS software development kit SDK by an entity other than the vendor of the particular platform may be mobile software running on a mobile operating system such as IOS ANDROID WINDOWS Phone or other mobile operating systems. In this example the third party application may invoke the API calls provided by the mobile operating system such as operating system to facilitate functionality described herein. In an example embodiment the applications include a messaging application that includes the custom pattern system as part of the application. In another embodiment the applications include a stand alone application that includes the custom pattern system .

The applications may utilize built in operating system functions e.g. kernel services or drivers libraries e.g. system APIs and other libraries frameworks middleware to create user interfaces to interact with users of the system. Alternatively or additionally in some systems interactions with a user may occur through a presentation layer such as presentation layer . In these systems the application module logic can be separated from the aspects of the application module that interact with a user.

Some software architectures utilize virtual machines. In the example of this is illustrated by virtual machine . A virtual machine creates a software environment where applications modules can execute as if they were executing on a hardware machine such as the machine of for example . A virtual machine is hosted by a host operating system operating system in and typically although not always has a virtual machine monitor which manages the operation of the virtual machine as well as the interface with the host operating system i.e. operating system . A software architecture executes within the virtual machine such as an operating system libraries frameworks middleware applications or presentation layer . These layers of software architecture executing within the virtual machine can be the same as corresponding layers previously described or may be different.

The machine can include processors memory storage and I O components which can be configured to communicate with each other such as via a bus . In an example embodiment the processors e.g. a Central Processing Unit CPU a Reduced Instruction Set Computing RISC processor a Complex Instruction Set Computing CISC processor a Graphics Processing Unit GPU a Digital Signal Processor DSP an Application Specific Integrated Circuit ASIC a Radio Frequency Integrated Circuit RFIC another processor or any suitable combination thereof can include for example processor and processor that may execute instructions . The term processor is intended to include multi core processor that may comprise two or more independent processors sometimes referred to as cores that can execute instructions contemporaneously. Although shows multiple processors the machine may include a single processor with a single core a single processor with multiple cores e.g. a multi core processor multiple processors with a single core multiple processors with multiples cores or any combination thereof.

The memory storage can include a memory such as a main memory or other memory storage and a storage unit both accessible to the processors such as via the bus . The storage unit and memory store the instructions embodying any one or more of the methodologies or functions described herein. The instructions can also reside completely or partially within the memory within the storage unit within at least one of the processors e.g. within the processor s cache memory or any suitable combination thereof during execution thereof by the machine . Accordingly the memory the storage unit and the memory of the processors are examples of machine readable media.

As used herein the term machine readable medium means a device able to store instructions and data temporarily or permanently and may include but is not be limited to random access memory RAM read only memory ROM buffer memory flash memory optical media magnetic media cache memory other types of storage e.g. Erasable Programmable Read Only Memory EEPROM or any suitable combination thereof. The term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database or associated caches and servers able to store instructions . The term machine readable medium shall also be taken to include any medium or combination of multiple media that is capable of storing instructions e.g. instructions for execution by a machine e.g. machine such that the instructions when executed by one or more processors of the machine e.g. processors cause the machine to perform any one or more of the methodologies described herein. Accordingly a machine readable medium refers to a single storage apparatus or device as well as cloud based storage systems or storage networks that include multiple storage apparatus or devices. The term machine readable medium excludes signals per se.

The I O components can include a wide variety of components to receive input provide output produce output transmit information exchange information capture measurements and so on. The specific I O components that are included in a particular machine will depend on the type of machine. For example portable machines such as mobile phones will likely include a touch input device or other such input mechanisms while a headless server machine will likely not include such a touch input device. It will be appreciated that the I O components can include many other components that are not shown in . The I O components are grouped according to functionality merely for simplifying the following discussion and the grouping is in no way limiting. In various example embodiments the I O components can include output components and input components . The output components can include visual components e.g. a display such as a plasma display panel PDP a light emitting diode LED display a liquid crystal display LCD a projector or a cathode ray tube CRT acoustic components e.g. speakers haptic components e.g. a vibratory motor resistance mechanisms other signal generators and so forth. The input components can include alphanumeric input components e.g. a keyboard a touch screen configured to receive alphanumeric input a photo optical keyboard or other alphanumeric input components point based input components e.g. a mouse a touchpad a trackball a joystick a motion sensor or other pointing instruments tactile input components e.g. a physical button a touch screen that provides location and force of touches or touch gestures or other tactile input components audio input components e.g. a microphone and the like.

In further example embodiments the I O components can include biometric components motion components environmental components or position components among a wide array of other components. For example the biometric components can include components to detect expressions e.g. hand expressions facial expressions vocal expressions body gestures or eye tracking measure biosignals e.g. blood pressure heart rate body temperature perspiration or brain waves identify a person e.g. voice identification retinal identification facial identification fingerprint identification or electroencephalogram based identification and the like. The motion components can include acceleration sensor components e.g. an accelerometer gravitation sensor components rotation sensor components e.g. a gyroscope and so forth. The environmental components can include for example illumination sensor components e.g. a photometer temperature sensor components e.g. one or more thermometers that detect ambient temperature humidity sensor components pressure sensor components e.g. a barometer acoustic sensor components e.g. one or more microphones that detect background noise proximity sensor components e g infrared sensors that detect nearby objects gas sensor components e.g. machine olfaction detection sensors gas detection sensors to detect concentrations of hazardous gases for safety or to measure pollutants in the atmosphere or other components that may provide indications measurements or signals corresponding to a surrounding physical environment. The position components can include location sensor components e.g. a Global Positioning System GPS receiver component altitude sensor components e.g. altimeters or barometers that detect air pressure from which altitude may be derived orientation sensor components e.g. magnetometers and the like.

Communication can be implemented using a wide variety of technologies. The I O components may include communication components operable to couple the machine to a network or devices via a coupling and a coupling respectively. For example the communication components include a network interface component or other suitable device to interface with the network . In further examples communication components include wired communication components wireless communication components cellular communication components Near Field Communication NFC components BLUETOOTH components e.g. BLUETOOTH Low Energy WI FI components and other communication components to provide communication via other modalities. The devices may be another machine or any of a wide variety of peripheral devices e.g. a peripheral device coupled via a Universal Serial Bus USB .

Moreover the communication components can detect identifiers or include components operable to detect identifiers. For example the communication components can include Radio Frequency Identification RFID tag reader components NFC smart tag detection components optical reader components e.g. an optical sensor to detect one dimensional bar codes such as a Universal Product Code UPC bar code multi dimensional bar codes such as a Quick Response QR code Aztec Code Data Matrix Dataglyph MaxiCode PDF417 Ultra Code Uniform Commercial Code Reduced Space Symbology UCC RSS 2D bar codes and other optical codes acoustic detection components e.g. microphones to identify tagged audio signals or any suitable combination thereof. In addition a variety of information can be derived via the communication components such as location via Internet Protocol IP geo location location via WI FI signal triangulation location via detecting a BLUETOOTH or NFC beacon signal that may indicate a particular location and so forth.

In various example embodiments one or more portions of the network can be an ad hoc network an intranet an extranet a virtual private network VPN a local area network LAN a wireless LAN WLAN a wide area network WAN a wireless WAN WWAN a metropolitan area network MAN the Internet a portion of the Internet a portion of the Public Switched Telephone Network PSTN a plain old telephone service POTS network a cellular telephone network a wireless network a WI FI network another type of network or a combination of two or more such networks. For example the network or a portion of the network may include a wireless or cellular network and the coupling may be a Code Division Multiple Access CDMA connection a Global System for Mobile communications GSM connection or other type of cellular or wireless coupling. In this example the coupling can implement any of a variety of types of data transfer technology such as Single Carrier Radio Transmission Technology 1 RTT Evolution Data Optimized EVDO technology General Packet Radio Service GPRS technology Enhanced Data rates for GSM Evolution EDGE technology third Generation Partnership Project 3GPP including 3G fourth generation wireless 4G networks Universal Mobile Telecommunications System UMTS High Speed Packet Access HSPA Worldwide Interoperability for Microwave Access WiMAX Long Term Evolution LTE standard others defined by various standard setting organizations other long range protocols or other data transfer technology.

The instructions can be transmitted or received over the network using a transmission medium via a network interface device e.g. a network interface component included in the communication components and utilizing any one of a number of well known transfer protocols e.g. Hypertext Transfer Protocol HTTP . Similarly the instructions can be transmitted or received using a transmission medium via the coupling e.g. a peer to peer coupling to devices . The term transmission medium shall be taken to include any intangible medium that is capable of storing encoding or carrying the instructions for execution by the machine and includes digital or analog communications signals or other intangible medium to facilitate communication of such software.

Throughout this specification plural instances may implement components operations or structures described as a single instance. Although individual operations of one or more methods are illustrated and described as separate operations one or more of the individual operations may be performed concurrently and nothing requires that the operations be performed in the order illustrated. Structures and functionality presented as separate components in example configurations may be implemented as a combined structure or component. Similarly structures and functionality presented as a single component may be implemented as separate components. These and other variations modifications additions and improvements fall within the scope of the subject matter herein.

Although an overview of the inventive subject matter has been described with reference to specific example embodiments various modifications and changes may be made to these embodiments without departing from the broader scope of embodiments of the present disclosure. Such embodiments of the inventive subject matter may be referred to herein individually or collectively by the term invention merely for convenience and without intending to voluntarily limit the scope of this application to any single disclosure or inventive concept if more than one is in fact disclosed.

The embodiments illustrated herein are described in sufficient detail to enable those skilled in the art to practice the teachings disclosed. Other embodiments may be used and derived therefrom such that structural and logical substitutions and changes may be made without departing from the scope of this disclosure. The Detailed Description therefore is not to be taken in a limiting sense and the scope of various embodiments is defined only by the appended claims along with the full range of equivalents to which such claims are entitled.

As used herein the term or may be construed in either an inclusive or exclusive sense. Moreover plural instances may be provided for resources operations or structures described herein as a single instance. Additionally boundaries between various resources operations modules engines and data stores are somewhat arbitrary and particular operations are illustrated in a context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within a scope of various embodiments of the present disclosure. In general structures and functionality presented as separate resources in the example configurations may be implemented as a combined structure or resource. Similarly structures and functionality presented as a single resource may be implemented as separate resources. These and other variations modifications additions and improvements fall within a scope of embodiments of the present disclosure as represented by the appended claims. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense.

