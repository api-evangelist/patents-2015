---

title: Brownout avoidance
abstract: Examples of the disclosure are directed to methods of managing power of various modules of an electronic device to prevent the voltage of the battery from falling to an undervoltage lockout (UVLO) threshold. In some examples, software operating on the electronic device or an associated electronic device (e.g., a paired electronic device) may assign power budgets to one or more modules, thereby preventing each module from drawing its maximum current capacity and causing the battery's voltage level to fall to the UVLO threshold. In some examples, a pre-UVLO threshold (i.e., a threshold higher than the UVLO threshold) may be used to modify the states of one or more modules to save power as the voltage of the battery approaches the UVLO threshold, but before the device must be fully powered off.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09647489&OS=09647489&RS=09647489
owner: Apple Inc.
number: 09647489
owner_city: Cupertino
owner_country: US
publication_date: 20150729
---
This application claims the benefit under 35 U.S.C. 119 e of U.S. Provisional Patent Application No. 62 042 172 filed Aug. 26 2014 the content of which is incorporated by reference herein in its entirety for all purposes.

An electronic device may require a power supply such as a battery. Further the electronic device may require that the power supply have a certain minimum voltage in order to function properly. Accordingly an electronic device may monitor the voltage of its power supply and power down the electronic device if the voltage falls to an undervoltage lockout UVLO threshold. This is known as a brownout when power is still available to the device but the voltage is too low to function properly.

An electronic device may require a power supply such as a battery. Further the electronic device may require that the power supply have a certain minimum voltage in order to function properly. Accordingly an electronic device may monitor the voltage of its power supply and power down the electronic device if the voltage falls to an undervoltage lockout UVLO threshold. This is known as a brownout when power is still available to the device but the voltage is too low to function properly. For example if the voltage is already near the UVLO threshold and multiple modules draw power at once e.g. speakers Wi Fi and Bluetooth electrical transients may cause the voltage to momentarily fall below the UVLO threshold thereby causing the device to power down.

Examples of the disclosure are directed to methods of managing the power of various modules of the electronic device to prevent the voltage of the battery from falling to the undervoltage lockout UVLO threshold. In some examples software operating on the electronic device or an associated electronic device e.g. a paired electronic device may assign power budgets to one or more modules thereby preventing each module from drawing its maximum current capacity and causing the battery s voltage level to fall to the UVLO threshold. In some examples a pre UVLO threshold i.e. a threshold higher than the UVLO threshold may be used to modify the states of one or more modules to save power as the voltage of the battery approaches the UVLO threshold but before the device must be fully powered off. An electronic device may be any electronic device such as a desktop computer portable multifunction device e.g. a smartphone wearable device tablet computer etc. In some examples methods described herein may be useful for devices that have relatively low battery capacity for a portable device. Further the methods described herein may be particularly useful in cold temperature conditions where battery impedance may be particularly problematic.

In the following description of examples reference is made to the accompanying drawings which form a part hereof and in which it is shown by way of illustration specific examples that can be practiced. It is to be understood that other examples can be used and structural changes can be made without departing from the scope of the disclosed examples.

An electronic device may require a power supply such as a battery. Further the electronic device may require that the power supply have a certain minimum voltage in order to function properly. Accordingly an electronic device may monitor the voltage of its power supply and power down the electronic device if the voltage falls to an undervoltage lockout UVLO threshold. This is known as a brownout when power is still available to the device but the voltage is too low to function properly. For example if the voltage is already near the UVLO threshold and multiple modules draw power at once e.g. speakers Wi Fi and Bluetooth electrical transients may cause the voltage to momentarily fall below the UVLO threshold thereby causing the device to power down.

Examples of the disclosure are directed to methods of managing the power of various modules of the electronic device to prevent the voltage of the battery from falling to the undervoltage lockout UVLO threshold. In some examples software operating on the electronic device or an associated electronic device e.g. a paired electronic device may assign power budgets to one or more modules thereby preventing each module from drawing its maximum current capacity and causing the battery s voltage level to fall to the UVLO threshold. In some examples a pre UVLO threshold i.e. a threshold higher than the UVLO threshold may be used to modify the states of one or more modules to save power as the voltage of the battery approaches the UVLO threshold but before the device must be fully powered off. An electronic device may be any electronic device such as a desktop computer portable multifunction device e.g. a smartphone wearable device tablet computer etc. In some examples methods described herein may be useful for devices that have relatively low battery capacity for a portable device. Further the methods described herein may be particularly useful in cold temperature conditions where battery impedance may be particularly problematic.

Although examples disclosed herein may be described and illustrated herein primarily in terms of an electronic device having a battery it should be understood that the examples are not so limited but are additionally applicable to devices including any kind of power supply such as an alternating current AC power supply. Further although examples herein may be described and illustrated primarily in terms of two or three modules it should be understood that the examples are not so limited but are additionally applicable to an arbitrary number of modules.

A first power request for a first module of the plurality of modules e.g. a request to allow the first module to draw its maximum current capacity or some percentage of its maximum current capacity may be received . The request may come from the first module itself a separate electronic device e.g. a paired device or from software requesting the use of the first module among other possibilities. Further a second power request for a second module of the plurality of modules may be received . Similarly the second power request can come from the second module the paired device or from software requesting the use of the second module among other possibilities. Power requests may be received by hardware or software components such as peak power manager in .

A first power budget may be assigned to the first module e.g. allowing the first module to draw some percentage of the first module s maximum current capacity in accordance with the first power budget or assigning a zero budget and or denying the first power request . In some examples assigning the first power budget to the first module may be based on a charge level of a battery of the electronic device e.g. the first power budget may be reduced if the charge level is below a threshold level . In some examples one or more predetermined budgets may be stored for a particular module and assigning a budget may include selecting one of the predetermined budgets. A power budget may be assigned on a scale of 0 100 e.g. as a percentage of the module s maximum current capacity . A power budget may limit how much power the module can draw at one time. That is a module can cumulatively draw more than its power budget but the module s power draw at any given moment cannot exceed the budget. Power budgets may be assigned by hardware or software components such as peak power manager in .

A second power budget may be assigned to the second module based on the first power budget e.g. so that the current drawn by the first and second modules does not peak to a level unsustainable by the battery . For example the second power budget may be assigned based on a rule that a total power budget e.g. the sum of the first and second power budgets and possibly additional power budgets cannot exceed a budget limit. In some examples the budget limit may be set at or under the total power that can be safely drawn without triggering a brownout condition and keeping the total power budget to the budget limit can thereby prevent any modules from triggering a brownout condition. In some examples a plurality of predetermined budgets may be stored for the second module and a relatively low budget may be selected for the second module based on the assigned budget for the first module.

In some examples a first priority may be assigned to the first module and a second priority may be assigned to the second module and assigning the second power budget may be further based on the first and second priorities e.g. a module with a relatively high priority such as a speaker may be assigned its requested budget whereas a module with a relatively low priority such as a GPS may be assigned less than its requested budget and or its request may be denied . In some examples the first priority may be assigned with respect to a particular functionality of the first module e.g. different functionalities of a module may have different priorities a speaker may have a relatively low priority for playing a text message notification and a relatively high priority for playing a telephone call ringtone . Priorities may be assigned by hardware or software components such as peak power manager in .

In some examples the first and or second power budgets may be assigned based on a determination of whether the device is in contact with a user e.g. in a user s pocket strapped to a user s arm in the user s hand etc. . Such a determination may be made based on light sensing heat sensing motion sensing touch sensing etc. If the device is not in contact with the user then modules such as vibration haptic feedback may be assigned a relatively low priority e.g. because vibration is of limited utility when the device is not in contact with a user .

In some examples it may be determined that the first power request is associated with a user initiated task and the first priority may be assigned based on the determination that the first power request is associated with a user initiated task e.g. a user initiated task may be given a higher priority than an automated task the speaker may be given a relatively high priority when the user requests that music be played whereas the Wi Fi controller may be given a relatively low priority when it is being used to automatically check for app updates in the background .

In some examples the first power budget may be reduced based on a determination that the second priority is higher than the first priority e.g. a module with a relatively high priority may effectively take power budget away from a module with a relatively low priority that has already been assigned a power budget . In some examples reducing the first power budget may include notifying the first module that the first power budget has been revoked and reducing power to the first module or powering off the first module wherein the second power budget may be assigned only after the power to the first module has been reduced or powered off . Power budgets may be modified reduced revoked increased etc. by hardware or software components such as peak power manager in .

Power may be drawn at the first module based on the first power budget and at the second module based on the second power budget e.g. drawing current at a level no higher than the budgeted level .

In some examples a third power request for a third module of the plurality of modules may be received. The third power request may be denied based on the first and second power budgets e.g. based on a rule that the third module cannot run while the first and second modules draw power at the first and second power budgets and or based on priorities of the first and second modules being higher than a priority of the third module .

In some examples certain combinations of modules may be excluded and budgets may be assigned accordingly. For example a power request for a GPS e.g. a relatively low priority module may be denied based on budgets being already assigned to a speaker and a Wi Fi controller e.g. relatively high priority modules . In some examples if budgets are already assigned to a Wi Fi controller and a GPS and a power request is made for a speaker the budget assigned to the GPS may be revoked and the power request to the speaker may be granted.

In some examples the electronic device may include a power supply e.g. a battery . A first characteristic of the power supply e.g. a voltage level a charge level of a battery etc. may be obtained and it may be determined that the first characteristic is lower than a first threshold e.g. a UVLO threshold or threshold higher than the UVLO threshold . The first power budget may be assigned to the first module based on the determination that the first characteristic is lower than the first threshold e.g. assigning a relatively lower power budget and or reducing a power budget because the first characteristic is lower than the first threshold a relatively low priority module may have a reduced power budget if the first characteristic is lower than the first threshold etc. . In some examples the first power budget may be assigned to the first module based on the relationship between the first characteristic and the first threshold over time e.g. assigning a relatively low power budget and or reducing a power budget if the first characteristic is frequently lower the first threshold or if the first characteristic is lower than the first threshold for at least a set duration of time .

In some examples power budgets are assigned to respective modules in response to a first module requesting power. In such a case a budget may be assigned to the first module requesting power and or a second module may have a budget assigned adjusted revoked in response to the first module requesting power e.g. if the second module s budget needs to be lowered or revoked to accommodate the first module s power draw .

In some examples power budgets may be assigned or adjusted in response to events other than power requests. For example power budgets may be adjusted in response to changes in battery level e.g. one or more budgets may be reduced in response to a battery level falling beneath a threshold level in response to changes in charging state e.g. one or more budgets may be increased when the device s battery is being charged and or in response to elapsed time e.g. budgets may be periodically adjusted or re determined every two hours .

A voltage level of the power supply may be obtained and it may be determined that the voltage level is lower than a first threshold . For example the first threshold may be a pre UVLO threshold e.g. 3.8 V higher than the UVLO threshold e.g. 3.5 V . The voltage level may be compared to the first threshold by hardware or software components such as power management unit as illustrated in .

In accordance with a determination that the voltage level is lower than the first threshold a state of the first module may be modified e.g. turning off the first module changing a mode of the first module etc. so as to prevent the module s usage from pushing the voltage level of the power supply below an undervoltage lockout UVLO threshold . In some examples modifying the state may include preventing the first module from drawing power for a predefined period of time e.g. stopping the Wi Fi radio for 20 40 ms or some other time period long enough for a peak current to cease among other possibilities . In some examples modifying the state may include changing a mode of the first module for a predefined period of time e.g. throttling the CPU clock reducing a core voltage of the CPU and disabling one or more features of a sensor among other possibilities . In some examples one or more power budgets may be assigned or modified e.g. reduced based on a determination that the voltage level is lower than the first threshold. Modifying the state of one or more components and or assigning and modifying power budgets may be performed by hardware or software components such as power management unit and or peak power manager as illustrated in .

In some examples it may be determined that the voltage level is lower than a second threshold e.g. an undervoltage lockout UVLO threshold lower than the first threshold. In accordance with a determination that the voltage level is lower than the second threshold the device may be powered off.

In some examples the state of the first module may remain modified for a predetermined period of time or until the voltage level is above a third threshold e.g. higher than the first threshold for the predetermined period of time. After the voltage level is above the third threshold for the predetermined period of time the state of the first module may be modified back e.g. turning on the first module unthrottling the CPU clock increasing the core voltage of the CPU enabling one or more features of a sensor etc. .

Peak power manager may receive power requests from one or more modules such as Wi Fi speaker sensors NFC CPU and GPU . The peak power manager may assign modify budgets for the one or more modules and accept deny or revoke the power requests received from the modules. Each module and may receive its assigned budget from the peak power manager . The peak power manager may store in a computer readable medium the budgets assigned to each module state information for each module priorities for each module etc.

In some examples a power management unit may monitor the voltage level of a power supply and compare the voltage level to a pre UVLO threshold and or a UVLO threshold. The power management unit may then modify the state of one or more modules e.g. by throttling the CPU or the GPU etc. in accordance with a determination that the voltage level has dropped below the pre UVLO threshold. In some examples the power management unit may notify the peak power manager that voltage level has dropped below the pre UVLO threshold e.g. by sending a pre UVLO signal as described with reference to and the peak power manager may assign modify one or more budgets in accordance e.g. a power budget for a low priority module may be reduced or revoked in response to a determination that voltage level has dropped below the pre UVLO threshold .

In some examples the power management unit in may have a voltage comparator detecting pre UVLO conditions e.g. based on detection of a voltage level of the power supply dropping below a pre UVLO threshold voltage . The output signal generated by the power management unit voltage comparator in may be observed as a pulsed signal and recorded by the peak power manager . In some examples the peak power manager can use hardware assistance from a pulse width modulator PWM device used as an input signal monitoring device accounting for the time the input signal is set at high or low level. For example the PWM device might increment a counter when the signal is at high level switch to another time counter when the signal switches to low level. The PWM device might also have the ability to generate interrupts to the peak power manager when the signal transitions to high or low level or when the signal is asserted at high or low level for a given time above a certain threshold.

In some examples the methods described herein may be used to enable specific use cases of an electronic device. For example it may be more important for a user to hear a telephone call ringtone than a short message service SMS notification. Accordingly the speaker module may have a higher priority for a ringtone than for an SMS notification. Further these priorities may result in a ringtone power request getting a higher budget than an SMS notification power request. As a result the ringtone may be played louder by the speaker than the SMS notification due to the ringtone having more available power in its budget.

In another example many applications stream media e.g. audio or video over Wi Fi and play back the media over a speaker. Accordingly it may be important to assign budgets in such a way that Wi Fi and media play back can happen concurrently e.g. both modules may be assigned high priorities and other modules may receive relatively low budgets as a result . Further haptic feedback when typing may be an essential part of a virtual keyboard in a media streaming application and thus budgets may need to be assigned so that all three of these functionalities haptic feedback Wi Fi speaker can be performed concurrently.

The examples discussed above can be implemented in one or more Application Programming Interfaces APIs . An API is an interface implemented by a program code component or hardware component hereinafter API implementing component that allows a different program code component or hardware component hereinafter API calling component to access and use one or more functions methods procedures data structures classes and or other services provided by the API implementing component. An API can define one or more parameters that are passed between the API calling component and the API implementing component.

The above described features can be implemented as part of an application program interface API that can allow it to be incorporated into different applications e.g. spreadsheet apps utilizing touch input as an input mechanism. An API can allow a developer of an API calling component which may be a third party developer to leverage specified features such as those described above provided by an API implementing component. There may be one API calling component or there may be more than one such component. An API can be a source code interface that a computer system or program library provides in order to support requests for services from an application. An operating system OS can have multiple APIs to allow applications running on the OS to call one or more of those APIs and a service such as a program library can have multiple APIs to allow an application that uses the service to call one or more of those APIs. An API can be specified in terms of a programming language that can be interpreted or compiled when an application is built.

In some examples the API implementing component may provide more than one API each providing a different view of the functionality implemented by the API implementing component or with different aspects that access different aspects of the functionality implemented by the API implementing component. For example one API of an API implementing component can provide a first set of functions and can be exposed to third party developers and another API of the API implementing component can be hidden not exposed and provide a subset of the first set of functions and also provide another set of functions such as testing or debugging functions which are not in the first set of functions. In other examples the API implementing component may itself call one or more other components via an underlying API and thus be both an API calling component and an API implementing component.

An API defines the language and parameters that API calling components use when accessing and using specified features of the API implementing component. For example an API calling component accesses the specified features of the API implementing component through one or more API calls or invocations embodied for example by function or method calls exposed by the API and passes data and control information using parameters via the API calls or invocations. The API implementing component may return a value through the API in response to an API call from an API calling component. While the API defines the syntax and result of an API call e.g. how to invoke the API call and what the API call does the API may not reveal how the API call accomplishes the function specified by the API call. Various API calls are transferred via the one or more application programming interfaces between the calling API calling component and an API implementing component. Transferring the API calls may include issuing initiating invoking calling receiving returning or responding to the function calls or messages in other words transferring can describe actions by either of the API calling component or the API implementing component. The function calls or other invocations of the API may send or receive one or more parameters through a parameter list or other structure. A parameter can be a constant key data structure object object class variable data type pointer array list or a pointer to a function or method or another way to reference a data or other item to be passed via the API.

Furthermore data types or classes may be provided by the API and implemented by the API implementing component. Thus the API calling component may declare variables use pointers to use or instantiate constant values of such types or classes by using definitions provided in the API.

Generally an API can be used to access a service or data provided by the API implementing component or to initiate performance of an operation or computation provided by the API implementing component. By way of example the API implementing component and the API calling component may each be any one of an operating system a library a device driver an API an application program or other module it should be understood that the API implementing component and the API calling component may be the same or different type of module from each other . API implementing components may in some cases be embodied at least in part in firmware microcode or other hardware logic. In some examples an API may allow a client program to use the services provided by a Software Development Kit SDK library. In other examples an application or other client program may use an API provided by an Application Framework. In these examples the application or client program may incorporate calls to functions or methods provided by the SDK and provided by the API or use data types or objects defined in the SDK and provided by the API. An Application Framework may in these examples provide a main event loop for a program that responds to various events defined by the Framework. The API allows the application to specify the events and the responses to the events using the Application Framework. In some implementations an API call can report to an application the capabilities or state of a hardware device including those related to aspects such as input capabilities and state output capabilities and state processing capability power state storage capacity and state communications capability etc. and the API may be implemented in part by firmware microcode or other low level logic that executes in part on the hardware component.

The API calling component may be a local component i.e. on the same data processing system as the API implementing component or a remote component i.e. on a different data processing system from the API implementing component that communicates with the API implementing component through the API over a network. It should be understood that an API implementing component may also act as an API calling component i.e. it may make API calls to an API exposed by a different API implementing component and an API calling component may also act as an API implementing component by implementing an API that is exposed to a different API calling component.

The API may allow multiple API calling components written in different programming languages to communicate with the API implementing component thus the API may include features for translating calls and returns between the API implementing component and the API calling component however the API may be implemented in terms of a specific programming language. An API calling component can in one example call APIs from different providers such as a set of APIs from an OS provider and another set of APIs from a plug in provider and another set of APIs from another provider e.g. the provider of a software library or creator of the another set of APIs.

It will be appreciated that the API implementing component may include additional functions methods classes data structures and or other features that are not specified through the API and are not available to the API calling component . It should be understood that the API calling component may be on the same system as the API implementing component or may be located remotely and accesses the API implementing component using the API over a network. While illustrates a single API calling component interacting with the API it should be understood that other API calling components which may be written in different languages or the same language than the API calling component may use the API .

The API implementing component the API and the API calling component may be stored in a non transitory machine readable storage medium which includes any mechanism for storing information in a form readable by a machine e.g. a computer or other data processing system . For example a machine readable medium includes magnetic disks optical disks random access memory read only memory flash memory devices etc.

In the exemplary software stack shown in applications can make calls to Services A or B using several Service APIs and to Operating System OS using several OS APIs. Services A and B can make calls to OS using several OS APIs.

Note that the Service has two APIs one of which Service API receives calls from and returns values to Application and the other Service API receives calls from and returns values to Application . Service which can be for example a software library makes calls to and receives returned values from OS API and Service which can be for example a software library makes calls to and receives returned values from both OS API and OS API . Application makes calls to and receives returned values from OS API .

Touch I O device may include a touch sensing panel which is wholly or partially transparent semitransparent non transparent opaque or any combination thereof. Touch I O device may be embodied as a touch screen touch pad a touch screen functioning as a touch pad e.g. a touch screen replacing the touchpad of a laptop a touch screen or touchpad combined or incorporated with any other input device e.g. a touch screen or touchpad disposed on a keyboard or any multi dimensional object having a touch sensing surface for receiving touch input.

In one example touch I O device embodied as a touch screen may include a transparent and or semitransparent touch sensing panel partially or wholly positioned over at least a portion of a display. According to this example touch I O device functions to display graphical data transmitted from computing system and or another source and also functions to receive user input. In other examples touch I O device may be embodied as an integrated touch screen where touch sensing components devices are integral with display components devices. In still other examples a touch screen may be used as a supplemental or additional display screen for displaying supplemental or the same graphical data as a primary display and to receive touch input.

Touch I O device may be configured to detect the location of one or more touches or near touches on device based on capacitive resistive optical acoustic inductive mechanical chemical measurements or any phenomena that can be measured with respect to the occurrences of the one or more touches or near touches in proximity to device . Software hardware firmware or any combination thereof may be used to process the measurements of the detected touches to identify and track one or more gestures. A gesture may correspond to stationary or non stationary single or multiple touches or near touches on touch I O device . A gesture may be performed by moving one or more fingers or other objects in a particular manner on touch I O device such as tapping pressing rocking scrubbing twisting changing orientation pressing with varying pressure and the like at essentially the same time contiguously or consecutively. A gesture may be characterized by but is not limited to a pinching sliding swiping rotating flexing dragging or tapping motion between or with any other finger or fingers. A single gesture may be performed with one or more hands by one or more users or any combination thereof.

Computing system may drive a display with graphical data to display a graphical user interface GUI . The GUI may be configured to receive touch input via touch I O device . Embodied as a touch screen touch I O device may display the GUI. Alternatively the GUI may be displayed on a display separate from touch I O device . The GUI may include graphical elements displayed at particular locations within the interface. Graphical elements may include but are not limited to a variety of displayed virtual input devices including virtual scroll wheels a virtual keyboard virtual knobs virtual buttons any virtual UI and the like. A user may perform gestures at one or more particular locations on touch I O device which may be associated with the graphical elements of the GUI. In other examples the user may perform gestures at one or more locations that are independent of the locations of graphical elements of the GUI. Gestures performed on touch I O device may directly or indirectly manipulate control modify move actuate initiate or generally affect graphical elements such as cursors icons media files lists text all or portions of images or the like within the GUI. For instance in the case of a touch screen a user may directly interact with a graphical element by performing a gesture over the graphical element on the touch screen. Alternatively a touch pad generally provides indirect interaction. Gestures may also affect non displayed GUI elements e.g. causing user interfaces to appear or may affect other actions within computing system e.g. affect a state or mode of a GUI application or operating system . Gestures may or may not be performed on touch I O device in conjunction with a displayed cursor. For instance in the case in which gestures are performed on a touchpad a cursor or pointer may be displayed on a display screen or touch screen and the cursor may be controlled via touch input on the touchpad to interact with graphical objects on the display screen. In other examples in which gestures are performed directly on a touch screen a user may interact directly with objects on the touch screen with or without a cursor or pointer being displayed on the touch screen.

Feedback may be provided to the user via communication channel in response to or based on the touch or near touches on touch I O device . Feedback may be transmitted optically mechanically electrically olfactory acoustically or the like or any combination thereof and in a variable or non variable manner.

Attention is now directed towards examples of a system architecture that may be embodied within any portable or non portable device including but not limited to a communication device e.g. mobile phone smart phone a multi media device e.g. MP3 player TV radio a portable or handheld computer e.g. tablet netbook laptop a desktop computer an All In One desktop a peripheral device or any other system or device adaptable to the inclusion of system architecture including combinations of two or more of these types of devices. is a block diagram of one example of system that generally includes one or more computer readable mediums processing system I O subsystem radio frequency RF circuitry audio circuitry and sensors circuitry . These components may be coupled by one or more communication buses or signal lines .

It should be apparent that the architecture shown in is only one example architecture of system and that system could have more or fewer components than shown or a different configuration of components. The various components shown in can be implemented in hardware software firmware or any combination thereof including one or more signal processing and or application specific integrated circuits.

RF circuitry can be used to send and receive information over a wireless link or network to one or more other devices and includes well known circuitry for performing this function. RF circuitry and audio circuitry can be coupled to processing system via peripherals interface . Interface can include various known components for establishing and maintaining communication between peripherals and processing system . Audio circuitry can be coupled to audio speaker and microphone and can include known circuitry for processing voice signals received from interface to enable a user to communicate in real time with other users. In some examples audio circuitry can include a headphone jack not shown . Sensors circuitry can be coupled to various sensors including but not limited to one or more Light Emitting Diodes LEDs or other light emitters one or more photodiodes or other light sensors one or more photothermal sensors a magnetometer an accelerometer a gyroscope a barometer a compass a proximity sensor a camera an ambient light sensor a thermometer a GPS sensor and various system sensors which can sense remaining battery life power consumption processor speed CPU load and the like.

Peripherals interface can couple the input and output peripherals of the system to processor and computer readable medium . One or more processors communicate with one or more computer readable mediums via controller . Computer readable medium can be any device or medium that can store code and or data for use by one or more processors . In some examples medium can be a non transitory computer readable storage medium. Medium can include a memory hierarchy including but not limited to cache main memory and secondary memory. The memory hierarchy can be implemented using any combination of RAM e.g. SRAM DRAM DDRAM ROM FLASH magnetic and or optical storage devices such as disk drives magnetic tape CDs compact disks and DVDs digital video discs . Medium may also include a transmission medium for carrying information bearing signals indicative of computer instructions or data with or without a carrier wave upon which the signals are modulated . For example the transmission medium may include a communications network including but not limited to the Internet also referred to as the World Wide Web intranet s Local Area Networks LANs Wide Local Area Networks WLANs Storage Area Networks SANs Metropolitan Area Networks MAN and the like.

One or more processors can run various software components stored in medium to perform various functions for system . In some examples the software components can include operating system communication module or set of instructions touch processing module or set of instructions graphics module or set of instructions and one or more applications or set of instructions . Each of these modules and above noted applications can correspond to a set of instructions for performing one or more functions described above and the methods described in this application e.g. the computer implemented methods and other information processing methods described herein . These modules i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various examples. In some examples medium may store a subset of the modules and data structures identified above. Furthermore medium may store additional modules and data structures not described above.

Operating system can include various procedures sets of instructions software components and or drivers for controlling and managing general system tasks e.g. memory management storage device control power management etc. and facilitates communication between various hardware and software components.

Communication module can facilitate communication with other devices over one or more external ports or via RF circuitry and can include various software components for handling data received from RF circuitry and or external port .

Graphics module can include various known software components for rendering animating and displaying graphical objects on a display surface. In examples in which touch I O device is a touch sensing display e.g. touch screen graphics module can include components for rendering displaying and animating objects on the touch sensing display.

One or more applications can include any applications installed on system including without limitation a browser address book contact list email instant messaging word processing keyboard emulation widgets JAVA enabled applications encryption digital rights management voice recognition voice replication location determination capability such as that provided by the global positioning system GPS a music player etc.

Touch processing module can include various software components for performing various tasks associated with touch I O device including but not limited to receiving and processing touch input received from I O device via touch I O device controller .

I O subsystem can be coupled to touch I O device and one or more other I O devices for controlling or performing various functions. Touch I O device can communicate with processing system via touch I O device controller which can include various components for processing user touch input e.g. scanning hardware . One or more other input controllers can receive send electrical signals from to other I O devices . Other I O devices may include physical buttons dials slider switches sticks keyboards touch pads additional display screens or any combination thereof.

If embodied as a touch screen touch I O device can display visual output to the user in a GUI. The visual output may include text graphics video and any combination thereof. Some or all of the visual output may correspond to user interface objects. Touch I O device can form a touch sensing surface that accepts touch input from the user. Touch I O device and touch screen controller along with any associated modules and or sets of instructions in medium can detect and track touches or near touches and any movement or release of the touch on touch I O device and can convert the detected touch input into interaction with graphical objects such as one or more user interface objects. In the case in which device is embodied as a touch screen the user can directly interact with graphical objects that are displayed on the touch screen. Alternatively in the case in which device is embodied as a touch device other than a touch screen e.g. a touch pad the user may indirectly interact with graphical objects that are displayed on a separate display screen embodied as I O device .

Touch I O device may be analogous to the multi touch sensing surface described in the following U.S. Pat. No. 6 323 846 Westerman et al. U.S. Pat. No. 6 570 557 Westerman et al. and or U.S. Pat. No. 6 677 932 Westerman and or U.S. Patent Publication 2002 0015024A1 each of which is hereby incorporated by reference.

In examples for which touch I O device is a touch screen the touch screen may use LCD liquid crystal display technology LPD light emitting polymer display technology OLED organic LED or OEL organic electro luminescence although other display technologies may be used in other examples.

Feedback may be provided by touch I O device based on the user s touch input as well as a state or states of what is being displayed and or of the computing system. Feedback may be transmitted optically e.g. light signal or displayed image mechanically e.g. haptic feedback touch feedback force feedback or the like electrically e.g. electrical stimulation olfactory acoustically e.g. beep or the like or the like or any combination thereof and in a variable or non variable manner.

System can also include power system for powering the various hardware components and may include a power management system one or more power sources a recharging system a power failure detection circuit a power converter or inverter a power status indicator and any other components typically associated with the generation management and distribution of power in portable devices.

In some examples peripherals interface one or more processors and memory controller may be implemented on a single chip such as processing system . In some other examples they may be implemented on separate chips.

Examples of the disclosure can be advantageous in preventing a device from reaching its UVLO threshold and powering off thereby allowing the device to be used for a longer period of time.

In some examples a method of an electronic device including a plurality of modules is disclosed. The method may include receiving a first power request for a first module of the plurality of modules receiving a second power request for a second module of the plurality of modules assigning a first power budget to the first module assigning a second power budget to the second module based on the first power budget and drawing power at the first module based on the first power budget and at the second module based on the second power budget. Additionally or alternatively to one or more of the above examples the method may further include assigning a first priority to the first module and a second priority to the second module wherein assigning the second power budget may be further based on the first and second priorities. Additionally or alternatively to one or more of the above examples the first power budget may be assigned before the second power budget and the method may further include reducing the first power budget based on a determination that the second priority is higher than the first priority. Additionally or alternatively to one or more of the above examples reducing the first power budget may include notifying the first module that the first power budget has been revoked and reducing power to the first module wherein the second power budget may be assigned only after the power to the first module has been reduced. Additionally or alternatively to one or more of the above examples the first priority may be assigned with respect to a particular functionality of the first module. Additionally or alternatively to one or more of the above examples the method may further include determining that the first power request is associated with a user initiated task wherein the first priority may be assigned based on the determination that the first power request is associated with a user initiated task. Additionally or alternatively to one or more of the above examples the method may further include receiving a third power request for a third module of the plurality of modules and denying the third power request based on the first and second power budgets. Additionally or alternatively to one or more of the above examples assigning the first power budget to the first module may be based on a charge level of a battery of the electronic device. Additionally or alternatively to one or more of the above examples the electronic device may include a power supply and the method may further include obtaining a first characteristic of the power supply and determining that the first characteristic is lower than a first threshold wherein the first power budget may be assigned to the first module based on the determination that the first characteristic is lower than the first threshold. Additionally or alternatively to one or more of the above examples the first power budget may be assigned to the first module based on the relationship between the first characteristic and the first threshold over time.

In some examples a method of an electronic device including a power supply and a first module is disclosed. The method may include obtaining a voltage level of the power supply determining that the voltage level is lower than a first threshold and in accordance with a determination that the voltage level is lower than the first threshold modifying a state of the first module. Additionally or alternatively to one or more of the above examples the method may further include determining that the voltage level is lower than a second threshold lower than the first threshold and in accordance with a determination that the voltage level is lower than the second threshold powering off the device. Additionally or alternatively to one or more of the above examples modifying the state may include preventing the first module from drawing power for a predefined period of time. Additionally or alternatively to one or more of the above examples modifying the state may include changing a mode of the first module for a predefined period of time.

In some examples a non transitory computer readable storage medium storing one or more programs is disclosed. The one or more programs may include instructions which when executed by an electronic device including a plurality of modules cause the electronic device to perform a method including receiving a first power request for a first module of the plurality of modules receiving a second power request for a second module of the plurality of modules assigning a first power budget to the first module assigning a second power budget to the second module based on the first power budget and drawing power at the first module based on the first power budget and at the second module based on the second power budget. Additionally or alternatively to one or more of the above examples the method may further include assigning a first priority to the first module and a second priority to the second module wherein assigning the second power budget may be further based on the first and second priorities. Additionally or alternatively to one or more of the above examples the first power budget may be assigned before the second power budget and the method may further include reducing the first power budget based on a determination that the second priority is higher than the first priority. Additionally or alternatively to one or more of the above examples reducing the first power budget may include notifying the first module that the first power budget has been revoked and reducing power to the first module wherein the second power budget may be assigned only after the power to the first module has been reduced. Additionally or alternatively to one or more of the above examples the first priority may be assigned with respect to a particular functionality of the first module. Additionally or alternatively to one or more of the above examples the method may further include determining that the first power request is associated with a user initiated task wherein the first priority may be assigned based on the determination that the first power request is associated with a user initiated task. Additionally or alternatively to one or more of the above examples the method may further include receiving a third power request for a third module of the plurality of modules and denying the third power request based on the first and second power budgets. Additionally or alternatively to one or more of the above examples assigning the first power budget to the first module may be based on a charge level of a battery of the electronic device. Additionally or alternatively to one or more of the above examples the electronic device may include a power supply and the method may further include obtaining a first characteristic of the power supply and determining that the first characteristic is lower than a first threshold wherein the first power budget may be assigned to the first module based on the determination that the first characteristic is lower than the first threshold. Additionally or alternatively to one or more of the above examples the first power budget may be assigned to the first module based on the relationship between the first characteristic and the first threshold over time.

In some examples a non transitory computer readable storage medium storing one or more programs is disclosed. The one or more programs may include instructions which when executed by an electronic device including a power supply and a first module cause the electronic device to perform a method including obtaining a voltage level of the power supply determining that the voltage level is lower than a first threshold and in accordance with a determination that the voltage level is lower than the first threshold modifying a state of the first module. Additionally or alternatively to one or more of the above examples the method may further include determining that the voltage level is lower than a second threshold lower than the first threshold and in accordance with a determination that the voltage level is lower than the second threshold powering off the device. Additionally or alternatively to one or more of the above examples modifying the state may include preventing the first module from drawing power for a predefined period of time. Additionally or alternatively to one or more of the above examples modifying the state may include changing a mode of the first module for a predefined period of time.

In some examples an electronic device is disclosed. The electronic device may include one or more processors memory a plurality of modules and one or more programs wherein the one or more programs may be stored in the memory and configured to be executed by the one or more processors which when executed by the one or more processors cause the electronic device to perform a method including receiving a first power request for a first module of the plurality of modules receiving a second power request for a second module of the plurality of modules assigning a first power budget to the first module assigning a second power budget to the second module based on the first power budget and drawing power at the first module based on the first power budget and at the second module based on the second power budget. Additionally or alternatively to one or more of the above examples the method may further include assigning a first priority to the first module and a second priority to the second module wherein assigning the second power budget may be further based on the first and second priorities. Additionally or alternatively to one or more of the above examples the first power budget may be assigned before the second power budget and the method may further include reducing the first power budget based on a determination that the second priority is higher than the first priority. Additionally or alternatively to one or more of the above examples reducing the first power budget may include notifying the first module that the first power budget has been revoked and reducing power to the first module wherein the second power budget may be assigned only after the power to the first module has been reduced. Additionally or alternatively to one or more of the above examples the first priority may be assigned with respect to a particular functionality of the first module. Additionally or alternatively to one or more of the above examples the method may further include determining that the first power request is associated with a user initiated task wherein the first priority may be assigned based on the determination that the first power request is associated with a user initiated task. Additionally or alternatively to one or more of the above examples the method may further include receiving a third power request for a third module of the plurality of modules and denying the third power request based on the first and second power budgets. Additionally or alternatively to one or more of the above examples assigning the first power budget to the first module may be based on a charge level of a battery of the electronic device. Additionally or alternatively to one or more of the above examples the electronic device may include a power supply and the method may further include obtaining a first characteristic of the power supply and determining that the first characteristic is lower than a first threshold wherein the first power budget may be assigned to the first module based on the determination that the first characteristic is lower than the first threshold. Additionally or alternatively to one or more of the above examples the first power budget may be assigned to the first module based on the relationship between the first characteristic and the first threshold over time.

In some examples an electronic device is disclosed. The electronic device may include one or more processors memory a power supply a first module and one or more programs wherein the one or more programs may be stored in the memory and configured to be executed by the one or more processors which when executed by the one or more processors cause the electronic device to perform a method including obtaining a voltage level of the power supply determining that the voltage level is lower than a first threshold and in accordance with a determination that the voltage level is lower than the first threshold modifying a state of the first module. Additionally or alternatively to one or more of the above examples the method may further include determining that the voltage level is lower than a second threshold lower than the first threshold and in accordance with a determination that the voltage level is lower than the second threshold powering off the device. Additionally or alternatively to one or more of the above examples modifying the state may include preventing the first module from drawing power for a predefined period of time. Additionally or alternatively to one or more of the above examples modifying the state may include changing a mode of the first module for a predefined period of time.

Although the disclosed examples have been fully described with reference to the accompanying drawings it is to be noted that various changes and modifications will become apparent to those skilled in the art. Such changes and modifications are to be understood as being included within the scope of the disclosed examples as defined by the appended claims.

