---

title: System and method for enforcing a policy for an authenticator device
abstract: A system and method including defining at least one device authentication policy; at a policy engine, initializing authentication policy processing for an authenticator device; collecting device status assessment; evaluating policy compliance of the device status assessment to an associated defined device authentication policy; and enforcing use of the authenticator device according to the policy compliance.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09524388&OS=09524388&RS=09524388
owner: Duo Security, Inc.
number: 09524388
owner_city: Ann Arbor
owner_country: US
publication_date: 20150106
---
This application is a continuation in part of prior U.S. application Ser. No. 14 271 258 filed on 6 May 2104 which is a continuation of prior U.S. application Ser. No. 13 647 166 filed on 8 Oct. 2012 which claims the benefit of U.S. Provisional Application Ser. No. 61 544 273 filed on 7 Oct. 2012 all of which are incorporated in their entirety by this reference.

This invention relates generally to the authentication field and more specifically to a new and useful system and method for enforcing a policy for an authenticator device in the authentication field.

Two factor authentication is commonly used to increase the confidence in a user s identity and augment existing authentication factors such as passwords. While a password or other knowledge based factor what you know can be captured phished and replayed by a malicious party an authentication factor that requires possession of a unique device what you have can provide greater security. These what you have authentication factors commonly take the form of a hardware token eg. RSA s infamous SecurID product line that generates one time passcodes. These one time passcodes are commonly 6 digit numeric passcodes generated using an algorithm and a stored secret key. While these hardware devices offer a strong second factor of authentication when deployed alongside traditional knowledge based passwords the devices are expensive difficult to manage and painful for end users having to carry around an extra device at all times. As mobile devices become increasingly ubiquitous powerful and extensible to run third party applications they present an attractive replacement for hardware tokens. Instead of carrying around an expensive hardware token to generate one time passwords a user can simply use an application on their phone to generate the same one time passwords. However this increase in usability convenience and management comes at the cost of ensuring the integrity and security of the mobile application and mobile device software. While a dedicated hardware token can be tamper resistant have a small trusted computing base and accept limited outside input a mobile device is a rich software environment that often suffers vulnerabilities and other security weaknesses that plague any non trivial software system. Therefore if a mobile device is used in place of a hardware token for authentication it is imperative that the device s storage applications and platform remain in a secure state and are not compromised by attackers or malicious applications that may reside on the same device. Unfortunately such attacks against mobile devices do take place and the threat of mobile malware and other types of mobile attacks will only increase in the future as they evolve into more attractive targets to compromise. Therefore organizations that wish to use mobile devices as a form of authentication whether OTP based or otherwise have a difficult trade off to evaluate between the increased security isolation but decreased usability of a dedicated hardware device and the increased usability but decreased security isolation of a mobile device. Thus there is a need in the authentication field to create a new and useful system and method enforcing a policy for an authenticator device. This invention provides such a new and useful system and method.

The following description of the preferred embodiments of the invention is not intended to limit the invention to these preferred embodiments but rather to enable any person skilled in the art to make and use this invention.

A system and method of preferred embodiments function to define evaluate and enforce a policy for the use of computing devices as authenticators. Modern two factor authentication approaches often include the use of a mobile device as a secondary authenticator. In one variation the secondary authenticator is distinct from a primary device where authentication is attempted. In another variation the secondary authenticator is a distinct application on the same device as the primary application where authentication is attempted. For example the primary application may be a browser on a mobile phone and the secondary authenticator can be an application distinct from the browser on the mobile phone. The system and method may alternatively be used with any suitable computing device used as an authenticator device. The system and method preferably alleviates at least some risk associated with the security threats greater attack surface and potential compromises of mobile device and its software. The system and method thus can function to potentially make a mobile device suitable for use as an authenticator. The system and method preferably allow an administrator to define and enforce policies to determine when a user is permitted or denied use of their mobile device as an authenticator by collecting and evaluating information about the software state of the mobile device and any perceived weaknesses or other attributes of the device platform or applications that may have a relevant impact on the security of the device or its authentication functionality. Such policies may be based on the software state of the mobile device and any perceived weaknesses or other information and attributes of the device platform or applications that may compromise its integrity as a strong authentication mechanism. For example a user accessing their online bank account from their PC may provide a username and password to log in and then be challenged to provide a one time password generated by their mobile device as a secondary authentication factor. After completing primary authentication with the username and password an authenticator application on the user s mobile device may collect information to provide to a policy engine of a authentication service in this case the online bank to determine whether the mobile device is suitable and trusted for use as a secondary authentication factor. Based on the evaluation of policies acting upon the collected information the authentication service would enforce whether or not the device is deemed appropriate for use as a trusted authenticator.

As shown in a system enforcing a policy for an authenticator device of a preferred embodiment can include a policy engine no a policy interface and an authenticator . The system functions to enable defined policies to regulate the use of a device as an authenticator. The policies preferably focus on the device status and more preferably on the device vulnerability status. The system is preferably used and integrated with or alongside an authentication system that uses the access to a particular computing device as part of the authentication security. The authentication system may be any suitable authentication system such as a push based two factor authentication system a one time password two factor authentication system a biometric two factor authentication system a device based authentication system or any suitable authentication system that at least in part depends on the use of a computing device of a user. The authentication system is preferably hosted in a network accessible cloud based system or distributed computing infrastructure. The authentication system typically includes a plurality of accounts. Policies may be defined and enforced individually for each account or class of accounts.

A policy engine no of a preferred embodiment functions to regulate transaction attempts according to relevant policies. The policy engine no is tasked with evaluating a transaction request in the context of a defined policy and determining whether or not the computing device is suitable for use as an authenticator based on the result of that evaluation. A transaction attempt can be an authentication attempt a registration attempt a network access attempt a file access attempt data submission edit deletion attempt or any suitable transaction request. Herein authentication attempt is used as a primary example of a transaction attempt but the system and method may be used for regulating any suitable type of transaction. The policy engine no preferably includes or has a communication channel to a policy database. The policy database can be configured with various policies. Policies may be defined for different accounts different groups of accounts different individual devices different device types or classes device models or other suitable categories. The policy engine no additionally can include a communication interface through which authentication requests are received. The policy engine no can be a standalone service used in combination with an outside authentication system but may alternatively be integrated in an authentication system. The policy engine may alternatively be integrated with the authenticator or another suitable transaction regulator and be located on the computing device used as an authenticator device. Preferably the policy engine no works in cooperation with a two factor authentication system. The particular policy evaluation procedure may consist of traditional boolean logic expressions eg. IF platform version

A policy interface of a preferred embodiment functions to define policies. The policy interface is a software component designed to allow an administrator or other appropriately designated user to define policies around the use of a user s computing device as an authenticator. Typically the policy interface would be a web application that an administrator would interact with using a web browser to create read update or delete policies for the administrator s organization s users. The policy interface may alternatively be an application programming interface API for programmatic setting of policies. Additionally the system may have policies preset or set in an alternative way and may not include a policy interface . As described above policies can be set for particular accounts particular groups of accounts individual devices device types or classes device models or other suitable categories.

Any suitable rules or restrictions may be set for allowed use of an authenticator device. Policy can be dependent on various state properties of a device. The policy can be conditional on one property or multiple properties. Some exemplary device properties can include passcode lock activation status e.g. is a passcode lock setup for the device GPS GeoIP location full disk encryption status HSM hardware security module support malicious apps installed out of date software versions apps with communication app access e.g. SMS MMS access phone access email access etc. or other suitable device state properties. For example an administrator may define a policy that disallows the use of SMS delivered passcodes if a user s mobile device is running suspicious applications that may have access to their SMS inbox. By defining such a policy an administrator may reduce the risk of the passcodes being stolen by a malicious application on the user s mobile device thereby allowing an attacker to impersonate the user by using the stolen passcodes. As another example the administrator may define a policy that requires the user s device to undergo a health check where it may be scanned for malicious applications or analyzed for weaknesses that may compromise its integrity or security. If the health check i.e. vulnerability assessment fails the user may be disallowed to use that mobile device as an authenticator as it has been deemed too risky by the administrator s policy. The resulting policies defined by the administrator are stored in the policy database.

The authenticator of a preferred embodiment functions to enforce the results of the policy engine no. The authenticator is preferably a software component that is present on the computing device i.e. an authenticator device of a user that typically provides some strong authentication functionality. The authenticator preferably facilitates the authentication process. For example basic HMAC based One time Password HOTP Time based One time Password TOTP or any suitable One time Password OTP generation can be employed for mobile app based authenticators to provide strong authentication. Additionally or alternatively the authenticator can facilitate the authentication process through notification based authentication approval. For example when a user attempts to perform authentication the authenticator can be notified such as through a push notification and then an option to approve or deny the authentication request is presented to the user. The user s response may be used to signal that the authentication request is approved or denied. When the authenticator is invoked either by the user or by the authentication service the authenticator may enforce whether or not the device is permitted for use as an authenticator device based on the results of the policy engine s output. The authenticator can also collect and transmit information from the mobile device to an authentication service that may be relevant to the evaluation of the defined policies. The authenticator may be built into the mobile software platform itself installed as a third party app by the user of the mobile device or delivered via any other mechanism available to execute software on the mobile device. The authenticator preferably includes communication channels to at least the authentication system and or policy engine.

As shown in a method for enforcing a policy for an authenticator device of a preferred embodiment can include defining at least one device authentication policy at a policy engine S at a policy engine initializing authentication policy processing for an authenticator device S collecting a device status assessment S evaluating policy compliance of the device status assessment to an associated device authentication policy S and enforcing use of the authenticator device according to the policy compliance S. The method functions to use definable policies and device specific information to determine if a device may be used for authentication. The device is preferably used in authentication by proving that the user has possession of a device associated with an account. The method is preferably employed along with a two factor authentication process where an authenticator device e.g. a mobile device is used as a secondary factor in authenticating a user. The method may alternatively be used in any suitable authentication process typically one where device possession is incorporated into the authentication process. The method may alternatively be used in any regulating any suitable transaction such as for registration a network access request a file access request data submission edit deletion attempt or any suitable transaction. The method can preferably facilitate checking if the device has been compromised in a way that would jeopardize the transaction process or system and appropriately allowing or preventing the transaction with the device.

Step S which includes defining at least one device authentication policy at a policy engine functions to determine at least one policy for evaluating the security of an authenticator device. The device authentication policy is preferably created through a user interface. An administrator or other authorized user interacting with a policy user interface can preferably create read update or delete policies governing the conditions when a mobile device is deemed suitable to be used as an authenticator most commonly using a mobile phone as a what you have second factor of authentication via OTPs phone callback SMS authentication smartphone push authentication etc . A device authentication policy may alternatively be defined through an application programming interface API . As another alternative the policy may be permanently set for the authentication through a settings file or in any suitable manner. A policy may alternatively be predefined by a third party or automatically defined by any suitable algorithm or process. Additional policies may augment existing administrator defined policies or eliminate the need for administrator defined policies.

The device authentication policy can preferably be set for any suitable categorization of authentication requests. The device authentication policy is preferably for a particular account on an authentication system. Each account of an authentication system may have a policy set. A default policy may be used if no policy for a particular account is defined. The device authentication policy may alternatively be associated with a whole authentication system a user account type label a time of day device type or be associated with any suitable property of an account authentication request and or authentication system. The device authentication policy preferably defines device parameters that an authenticator device must satisfy. In one variation the device parameters include at least one parameter for the device status assessment that may define suitable application version numbers and allowed device health status. The device parameters can additionally include conditions set based on the status of device properties such as passcode lock activation status e.g. is a passcode lock setup for the device GPS GeoIP location full disk encryption status HSM hardware security module support installed applications e.g. are malicious apps installed out of date software versions apps with communication app access e.g. SMS MMS access phone access email access etc. or other suitable device state properties. The device authentication policy is preferably stored in a policy database at the policy engine. This is preferably a resource existing in a networked computing system but may alternatively policies may be stored locally on associated authenticator devices or in any suitable location.

Step S which includes at a policy engine initializing authentication policy processing for an authenticator device functions to trigger the policy engine to check if the authenticator device complies with the policy. Initializing an authentication policy process preferably occurs as a result of a user attempting to perform a step of an authentication process using the authenticator device. The authentication process is preferably completing at least one factor of authentication for a login request such as completing a secondary factor of authentication using an OTP or app approval. An authentication process can include registration of the device to be used in subsequent authentication as an authenticator device. The authentication process may alternatively be in verifying permissions to access a network or other computing resource access a file perform data submission edit deletion attempt or any suitable action. An authenticator on the device will preferably trigger an evaluation of the administrator defined policies in order to determine whether the user should be able to use their mobile device as an authenticator. As a result the policy engine preferably receives an authentication policy request. The authentication policy request may be transmitted by the authenticator on the device or may alternatively be transmitted by an authentication system. If the policy engine requires additional information about the mobile device in order to evaluate the administrator defined policies it can query the authenticator on the device to provide a device status assessment. Alternatively the authentication policy request may include the device status assessment.

Step S which includes collecting a device status assessment functions to retrieve parameters that indicate the status of the authenticator device. An authenticator on the device preferably collects information from the device. For example the policy engine may request that the authenticator collect a list of all the installed applications on the mobile device and return them to the policy engine so that the policy engine can process the list to see if any potentially risky or malicious applications are installed on the mobile device that would compromise the integrity of the authenticator device as a strong authenticator. Other device status properties can include passcode lock activation status e.g. is a passcode lock setup for the device GPS GeoIP location full disk encryption status HSM hardware security module support malicious apps installed out of date software versions apps with communication app access e.g. SMS MMS access phone access email access etc. or other suitable device state properties. The authenticator preferably transmits the device status assessment along with any additional relevant information from the device to the policy engine to assist in the evaluation of the administrator defined device authentication policies. This transmission can occur over traditional wide area network communications mechanisms available on the mobile device such as WiFi cellular data service eg. EDGE GSM HSDPA LTE etc even local radio communications such as BlueTooth or any suitable networking protocol. Alternatively the device status assessment may be transmitted to a policy engine operating locally on the device. Additionally the method may include calculating a vulnerability assessment. The vulnerability assessment may be calculated in any suitable manner. In one variation the vulnerability assessment may be calculated by the system and or method described in U.S. patent application Ser. No. 13 601 409 titled SYSTEM AND METHOD FOR ASSESSING VULNERABILITY OF A MOBILE DEVICE filed 31 Aug. 2012 by the assignee of the present invention which is hereby incorporated in its entirety by this reference. The results of the vulnerability assessment may be transmitted to the policy engine. Alternatively the policy engine may facilitate the calculation of the vulnerability assessment. In calculating the vulnerability assessment the policy engine and or authentication system may receive at least one vulnerability assessment request that includes an object identifier for an operative object of a mobile computing device wherein the vulnerability assessment request originates from the authenticator device and a module to identify a vulnerability assessment associated with the identifier of the operative object.

In one variation device status assessments from the computing device may be delivered to the policy engine and or authentication service periodically or lazily instead of on demand at the time of authentication and stored in the policy database to develop an extended historical view of the device s perceived health. The historical status assessment may be used in evaluating policy compliance. When evaluating the policy compliance the use of the most recent device status assessment may be used. For example device status assessments may be collected every hour. When evaluating policy compliance the device status assessment from the last hour can be used such that the device status assessment is typically no older than an hour. This technique may be useful when the device status assessment requires time consuming processing.

Step S which includes evaluating policy compliance of the device status assessment to an associated device authentication policy functions to determine whether the computing device is suitable for use as an authenticator device. The policy engine preferably retrieves the necessary defined device authentication policies from the policy database storage. A single policy preferably governs the policy compliance but a plurality of policies may alternatively be used to cooperatively define a policy for an authenticator device. The particular policy evaluation procedure may consist of traditional Boolean logic expressions eg. IF platform version

Step S which includes enforcing use of the authenticator device according to the policy compliance functions to appropriately allow disallow or otherwise respond to an attempt to perform an authentication process with the authenticator device. The authentication process is preferably approving a secondary factor of authentication of a login attempt. The authentication process may alternatively include registering the authenticator device for completing two factor authentication of an account. For example if a device is not in compliant with the policy then the device may not even be permitted to register to approve complete authentication requests for an account. Enforcing may include the policy engine transmitting the policy compliance evaluation to the computing device as shown in . The authenticator on the computing device can then allow or disallow use of the device as an authenticator device. In one variation the method is used with OTP two factor authentication. The method can include initiating or establishing a passcode secondary factor authentication request in a passcode authentication application on the authenticator device. Enforcing use of the authenticator device can include allowing or preventing authentication a passcode secondary factor authentication request. The passcode is preferably a secondary factor of authentication for a login attempt. For example if the evaluation indicates the status of the device is not compliant with the policy then the OTP or other authentication process such as notification based app approval that involves the computing device is prevented from being completed. In one variation the OTP is not displayed and or generated if the device is not compliant.

In another variation the authenticator prevents communication of authentication information to the authentication system. Similarly the authenticator can transmit a message that indicates that the authentication system should not accept authentication using the device. In another variation the method can include receiving an authentication push notification at an authentication application on the authenticator device. The authentication application in this variation preferably is alerted when an authentication process is attempted and provides a user interface for approving or denying the process. For example when a user attempts to perform a login the authentication application can be notified such as through a push notification and then an option to approve or deny the authentication request is presented to the user. The user s response may be used to signal that the authentication request is approved or denied. Enforcing use of the authenticator device can include permitting or preventing authentication of a login attempt associated with the push notification as shown in .

The enforcement of the result of the policy evaluation can not only be enforced on the mobile device itself eg. disallowing the user to use or interact with the authenticator application to generate one time passcodes but also enforced by the authentication service to deny any attempts by the user to authenticate using that device if it has been deemed unsuitable for use as an authenticator as shown in . For example the user may be denied access to the authenticator functionality on the mobile device but also additionally be denied by the service if they attempt authentication anyway. In one example the authentication process on which the result is enforced may be the process of completing a one time passcode authentication. For example an authenticator device may be the recipient of SMS messages or emails that include one time passcodes which the user then enters into a form to complete authentication. In one variation the device authentication policy can define a policy that prevents completing authentication using authenticator devices that allow access to a designated communication destination such as a telephony messaging inbox e.g. SMS MMS app . The policy can verify that the authenticator device prevents access or otherwise has no applications with permissions to access the telephony messaging inbox. If access is granted then either delivered OTP may be invalidated for current authentication requests and or an OTP may be prevented from being delivered to the authenticator device. The policy engine preferably will transmit a message to the authentication system to indicate that the device is not allowed to be used as an authenticator device. Additionally enforcing use of the authenticator device may include facilitating an update to the authenticator device. Facilitating may involve communicating the issues that need to be fixed actions that can be taken to resolve the issues the code or update code to resolve the issues instructions to initialize an automatic device update and or any suitable response to aid in bringing the device into compliance with the associated policy. When the device is updated the method may repeat any of the above steps to check if the device complies with the policy and can be used as an authenticator device of an authentication system. In another variation if the evaluation indicates the status of the device is not compliant with the policy the method can include transmitting a notification a destination endpoint as shown in . Notifying a designated destination can include sending an email making an automated phone call sending text making an API call executing a webhook callback or sending any suitable outbound communication. The notification can function to alert interested parties.

In an exemplary implementation of a preferred embodiment of the method the method is used with a two factor authentication system as shown in . The authentication system will send a secondary authentication passcode to a device. An authenticator will preferably facilitate transferring the passcode back to the authentication system. This is preferably facilitated by displaying the passcode in an SMS app a push notification an application message. A user will preferably be prompted to confirm repeat or otherwise correctly acknowledge the passcode prior to the authenticator transferring the passcode to the authentication system. A policy engine of the authentication system will preferably evaluate a policy. The policy can be associated with the user account and or device in process of authentication but may alternatively be associated with any suitable aspect or be a default policy. Depending on the associated policy the policy engine may request a device status assessment. The authenticator will preferably compile and generate a device status assessment. The authenticator preferably transmits the device status assessment and it is received at the policy engine. The policy engine preferably processes the policy and the device status assessment to determine if the device should be allowed to be used as an authenticator device or not. As an additional variation the policy engine may initiate a device update to remedy issues with the current device status assessment as shown in . Upon completing the update the device can preferably be used as an authenticator device. When the device is determined to be an allowed authenticator device the passcode may be processed and used in completing authentication.

In another exemplary implementation of a preferred embodiment of the method the method is used for locally policing the use of a computing device for authentication as shown in . The authenticator application or service on the phone preferably includes the policy engine. At least one device authentication policy is received and stored locally on the device. The policy may alternatively be retrieved from a remote database or storage and temporarily stored on the device. When a user is attempting to use the device to authenticate whether that be during a two factor authentication process or other suitable authentication process the policy engine will preferably be initiated and will evaluate policy compliance of the device. Typically the evaluation will occur prior to enabling user authentication with the device. For example if a passcode is sent to the device the passcode may be readable through an application on the device. The user can be notified about the received passcode by a push notification but then upon opening the application the passcode will only be revealed if the device is in compliance with the policy. The policy engine preferably uses device status assessment and more preferably a vulnerability assessment in combination with the policy to determine the device compliance results. As discussed above enforcing the compliance results preferably includes selectively enabling one of several responses. As one response if the device is in compliance with the device authentication policy then authentication using the device is allowed. In the current example this could include displaying the passcode such that the user may enter the passcode on another device or complete an authentication action. As another response if the device is not in compliance with the device authentication policy then authentication using the device may be prevented. In the current example this could include displaying an error message and not showing the passcode or disabling completion of the authentication process. Additionally or alternatively the response may prompt updating the device. The update would preferably resolve issues preventing device compliance such as updating an application to a more secure version deleting or fixing malicious components or any suitable device update. Upon updating the device the policy engine can preferably re evaluate the policy compliance.

An alternative embodiment preferably implements the above methods in a computer readable medium storing computer readable instructions. The instructions are preferably executed by computer executable components preferably integrated with a policy engine used in cooperation with an authentication system. The computer readable medium may be stored on any suitable computer readable media such as RAMs ROMs flash memory EEPROMs optical devices CD or DVD hard drives floppy drives or any suitable device. The computer executable component is preferably a processor but the instructions may alternatively or additionally be executed by any suitable dedicated hardware device.

As a person skilled in the art will recognize from the previous detailed description and from the figures and claims modifications and changes can be made to the preferred embodiments of the invention without departing from the scope of this invention defined in the following claims.

