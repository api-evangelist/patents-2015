---

title: Method and apparatus for retransmission decision making
abstract: A method comprising: receiving a scalable video coding (SVC) encoded video data from a source of digital video data, the SVC-encoded video data carrying a video content, the SVC-encoded video data including a network abstraction layer (NAL) extension header, a first layer for the video content, and a second layer for the video content, the first layer including first video data utilized to retrieve the video content in basic quality from the SVC-encoded video data, the second layer including second video data utilized along with the first video data to retrieve the video content in enhanced quality from the SVC-encoded video data; parsing the NAL extension header to identify the first and second video data; assigning a higher priority to the first video data for retransmission relative to the second video data; caching the first and second video data with the assigned priority in a buffer memory; monitoring a digital data network to collect first network transport conditions, the digital data network being connected in signal communication with a receiver, the digital data network involving first and second data transport protocols, the first protocol being less reliable than the second protocol; receiving a retransmission request transmitted on the second protocol from the receiver, the retransmission request including data indicating second network transport conditions of the digital data network determined at the receiver, the second network transport conditions including at least one of an end-to-end packet loss rate, an available bandwidth of the digital data network, and a round-trip delay; and determining whether to recover at least one of the first and second video data from the buffer memory and transmit the recovered video data to the receiver on the second protocol via the digital data network in accordance with the assigned priority in view of the first and second network transport conditions in response to the retransmission request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09306708&OS=09306708&RS=09306708
owner: THOMSON LICENSING
number: 09306708
owner_city: Issy les Moulineaux
owner_country: FR
publication_date: 20150327
---
This application is a division of application Ser. No. 13 575 646 which is the national stage of International Application No. PCT US2010 000228 filed 28 Jan. 2010. Thus this divisional application claims the benefit under 35 U.S.C. 365 of International Application PCT US2010 000228 filed 28 Jan. 2010 which was published in accordance with PCT Article 21 2 on 4 Aug. 2011 in English.

This application is related to the following co pending commonly owned U.S. Patent Applications 1 Ser. No. 13 395 796 entitled EFFICIENT APPLICATION LAYER AUTOMATIC REPEAT REQUEST RETRANSMISSION METHOD FOR RELIABLE REAL TIME DATA STREAMING IN NETWORKS filed on Oct. 7 2009 as an international patent application Filing No. PCT US09 005499 and 2 Ser. No. 13 575 653 entitled METHOD AND APPARATUS FOR PARSING A NETWORK ABSTRACTON LAYER FOR RELIABLE DATA COMMUNICATION filed on Jan. 28 2010 as an international patent application Filing No. PCT US10 00223 Thomson Docket No. PU090157 .

The present application relates to digital data networks in general and in particular to a network monitor and data retransmission decision maker for reliable digital data transmission.

In multicast or broadcast applications data are typically transmitted from a server to multiple receivers over wired and or wireless networks. A multicast system as used herein is a system in which a server transmits the same data to multiple receivers simultaneously where the receivers form a subset of all the receivers up to and including all of the receivers. A broadcast system is a system in which a server transmits the same data to all of the receivers simultaneously. That is a multicast system by definition can include a broadcast system.

Data is usually formatted into packets and or frames for transmission. That is packets and or frames are data formatting schemes. As used herein data can be formatted into any convenient format for transmission including packets and or frames. Packet will thus be used herein to define any data formatting scheme known to one of ordinary skill in the art.

Video transmission or distribution in wireless networks is used by way of example herein of one application of a digital data network. Video transmission in a wireless data network normally involves packet loss caused by channel error conditions such as interference channel fading collision etc. When such channel error conditions occur the wireless link layer of the protocol stack may try to retransmit packets for a fixed number of times within a fixed time period. If these retransmissions are not successful the packets are dropped by the wireless link layer. Internet Protocol IP network based video transmission typically delivers video packets to the destination receiver sometimes referred to as a client herein using Real time Transport Protocol RTP protocol that in turn uses either a reliable Transmission Control Protocol TCP transport protocol or a less reliable User Datagram Protocol UDP transport protocol. When the less reliable UDP protocol is used for example the protocol does not provide a means to detect out of order packets or recover lost packets and leaves the responsibility to an application to recover packet delivery errors. In contrast when TCP protocol is used end to end acknowledgements are provided so that the protocol tries to send and or recover media audio video multimedia . . . packets data strictly in the order in which the packets are to be handled by the application. When packet errors are detected TCP provides a sliding window mechanism for data flow control and reduces the packet transmission rate. TCP keeps retransmitting the lost packets until they are recovered.

Video transmission is an example of an application which occurs in real time and has a user viewing experience associated with the receipt and rendering of the data. A latency or time constraint within which the packets have to be delivered or recovered should not impact the end user s viewing experience. Therefore packet errors ought to be recovered within a limited time otherwise the data may not be viewable. TCP does not presently provide for control of packet recovery based on a time constraint. Consequently using TCP as the transport protocol for wireless networks could lead to a poor user viewing experience. Furthermore TCP requires positive acknowledgement for all the transmitted data packets. The TCP uplink acknowledgements from data receiver to data transmitter sender compete for the wireless bandwidth with downlink data traffic from transmitter sender to receiver . If collisions occur among downlink and uplink transmissions the collisions could lead to further throughput reduction.

PCT Application US 09 005 499 filed Oct. 7 2009 discloses an efficient application layer automatic repeat request retransmission method where data to be transmitted is buffered or cached at a module for implementing a reliable media protocol to recover lost data packets and aid for example in real time streaming such as video data applications. Referring briefly to derived from FIG. 5 of PCT Application US 09 005 499 mentioned above a real time protocol packetization module is provided at a real time server for example for receiving a video digital data input . Real time protocol RTP packetization module providing a streaming application is connected via for example a socket like application programming interface API or interfaces to the reliable media protocol module . The reliable media protocol module accepts configuration data parameters such as cache or buffer size maximum time to wait for packet recovery and the like. These parameters are determined for example by the digital application for example telephony audio video or multimedia among other known applications. The local buffer or cache memory temporarily stores initially transmitted packets until it may be determined whether they need be retransmitted or discarded. Server transmits digital data by way of one of UDP IP transmitter interface or TCP IP transmitter receiver interface and a digital data network interface for example an Ethernet 802.11 interface . Initial real time transmission may occur via initial transmit to network with real time packets temporarily stored in cache buffer for example awaiting receipt of Retransmit ACK NACK control or a predetermined time out.

It would be advantageous to have an efficient method and apparatus to add further reliability to such a reliable media protocol based real time data transmission system such as the one disclosed in the foregoing PCT Application US 09 005 499. The present invention addresses these and or other issues.

In accordance with an aspect of the present invention a method is disclosed. According to an exemplary embodiment the method comprises monitoring a digital data network to collect network transport statistics and deciding whether to retransmit a digital data packet to a receiver based on the collected network transport statistics.

In accordance with another aspect of the present invention an apparatus is disclosed. According to an exemplary embodiment an apparatus such as a digital data transmitter comprises a digital data network monitor for collecting network transport statistics and a retransmission decision maker for deciding whether to retransmit a digital data packet based on an assigned digital data packet priority and the collected network transport statistics.

In accordance with another aspect of the present invention an apparatus is disclosed. According to an exemplary embodiment an apparatus such as a digital data transmitter comprises means such as a network monitor for collecting network transport statistics and means such as a retransmit decision maker for deciding whether to retransmit a digital data packet based on an assigned digital data packet priority and collected network transport statistics.

In accordance with another aspect of the present invention an apparatus is disclosed. According to an exemplary embodiment an apparatus such as a digital data receiver comprises a network monitor for collecting network statistics from the perspective of a receiver apparatus and a network interface for outputting a control channel message including said collected network statistics.

In accordance with another aspect of the present invention an apparatus is disclosed. According to an exemplary embodiment an apparatus such as a digital data receiver comprises means such as a network monitor for collecting network statistics from the perspective of a receiver apparatus and means such as a network interface for outputting a control channel message including said collected network statistics

The present invention is directed to a method and apparatus at a transmitter or sender for parsing an abstraction layer header as an input to the real time for example real time protocol or RTP packetization for a module for an improved reliable media protocol module per and to a network monitor and retransmission decision maker of the transmitter server which may utilize the parser priority output to selectively retransmit data based on monitored network conditions for example packet loss rate. According to one embodiment a network abstraction layer for example an H.264 AVC Network Abstraction Layer NAL of a real time video encoder such as an MPEG 4 scalable video encoder SVC comprises a header that provides fields that may be parsed to determine digital data priority. For example the NAL is network friendly and may represent either video telephony for example video conversational applications and non conversational applications such as storage of a down loaded movie in memory a broadcast or multicast application or streaming application or other non conversational application. The NAL for example may be defined to represent a plurality of abstraction layer units in the form of packets having one or more bytes. The first byte of each NAL unit may be a header byte indicating the type of data of the unit while remaining bytes contain payload data of a type indicated by the NAL header.

According to one embodiment an abstraction layer header parser comprises parsing a scalable video encoder abstraction layer header to obtain data from one of a plurality of fields. According to aspects of this embodiment the abstraction layer header parser may operate for example on output digital video data of an MPEG 4 file reader or accept digital data from a network as received at a de packetizer. For example the abstraction layer header parser may parse a DID field which represents an inter layer coding dependency level of layer representation. A QID field represents a quality level of medium grain scalability MGS layer representation. A TID field represents a temporal level of layer representation. One result of parsing an abstraction layer header comprising such fields is to identify the layer that the following payload data is associated with. One result of parsing an abstraction layer header comprising such fields is to identify the layer that the following payload data is associated with. Responsive to the identification of the payload data type one may assign a different priority for each identified layer. For example a base layer may receive a high priority for retransmission from buffer or cache memory since base layer is absolutely necessary for a complete decoding at a receiver. Responsive to the identification of the payload data type the parser may assign a different priority for each identified layer for the following data. For example a base layer may receive a high priority for retransmission from buffer or cache memory since base layer data is absolutely necessary for a complete decoding at a receiver. An enhancement layer may be assigned a medium priority since enhancement layer data is necessary for decoding of a higher layer. On the other hand a high enhancement layer of payload data may be assigned a low priority. Once assigned a priority for example low medium and high the priority information may be represented in a payload type PT or similar field of a real time protocol RTP header if retransmission is called for at the transport layer or in a type of service TOS field of an IP header. A type of service field may be also known in the art by way of example as a differential services DS field. The first two bits are known as explicit congestion notification ECN bits and the next six bits of a DS field byte are known as differential services code point DSCP bits. Type of service will be generally used herein to refer to these and other formats for providing type of service data. A real time packet retransmission decision made by a reliable media protocol module may be thus layer aware when modified to incorporate an abstraction layer header parser and method according to one embodiment.

In a further embodiment a network monitor is provided for monitoring data network quality via a data network interface and for example collecting current network data statistics for input to a retransmit decision maker for example packet loss rate available bandwidth and round trip delay. The retransmit decision maker in turn may provide an input to the reliable media protocol RMP module so that a decision on retransmission may be based on current network conditions according to the data network statistical data collected at the network monitor and selectively decide to retransmit a packet based on its priority and the monitored network conditions.

Accordingly a digital transmission method comprises parsing an abstraction layer header of a digital data packet to obtain layer representation data and assigning a priority to the digital data packet for the representation layer responsive to the parsing. Obtaining layer representation data may comprise one or all of determining inter layer coding dependency level determining a quality level of grain scalability and determining temporal level of the layer representation. Moreover the method may further comprise one of representing the priority level in a payload type field of a real time transport packet header or in a type of service field of an internet protocol packet header. As described above an input to the abstraction layer header parser may be received from a de packetizer for receiving network data or received from a local server memory such as one associated with an MPEG file reader.

Moreover in a further embodiment a digital data transmitter may comprise an abstraction layer header parser to obtain layer representation data from a digital data packet and assign a priority to the layer representation data a digital data monitor for collecting network transport statistics and a retransmission decision maker for deciding whether to retransmit a digital data packet based on the assigned digital data packet priority and the collected network transport statistics. As explained above such an abstraction layer header parser in a further embodiment may be a network abstraction layer header parser for digital video data packet applications.

More specifically referring to an abstraction layer header parser a data monitor and a retransmit decision maker of a server and a network monitor of a receiver provide for a highly reliable operation of RMP module in making a decision whether or not to retransmit a packet that has been reported lost over a transmit control channel as will be further described herein. Video transmission or distribution in wireless networks typically use real time transport protocol RTP motion picture expert group 2 transport stream MPEG2TS over UDP. Real time video could be distributed from a single source to a single destination unicast mode or from a single source to multiple destinations multicast mode . Since channel conditions vary in wireless networks packet transmissions when the channel conditions are not good result in dropped packets if the link layer error recovery is not successful. In these situations there is a gap in the packet sequence resulting in poor viewing quality for the end user. The present invention provides an abstraction layer header parsing functionality for an efficient application layer based retransmission scheme called reliable media protocol RMP herein to recover packet losses to aid in reliable real time streaming applications. The present invention also provides network monitoring capabilities at a transmitter and at a receiver side to improve packet retransmission decision making at server transmitter of . Consequently a network monitor is provided at a receiver client of .

Referring to in the reliable media protocol RMP method of the present invention RTP packetization and a reliable media protocol RMP module are assisted by the inclusion of NAL header parser according to the principles of the present invention. Moreover a network monitor interfacing to network interface collects current network statistics and via retransmit decision maker improves the reliability of RMP module . NAL header parser network monitor and retransmit decision maker are highlighted in to show that is different from as will be further explained below.

Initially RMP module transmits the regular unicast and multicast data or packets using UDP via network interface to transmit packets using initial transmit channel to network . Data is initially stored in local cache with a priority assigned by NAL header parser via RTP packetization . Apart from this an additional reliable TCP based control channel is established between the source transmitter sender of and the destination receiver sink client of . TCP IP requests the retransmission of and receives lost packets through network interface via retransmit ACK NACK control channel to network . For this mechanism to work properly the transmitter sender server maintains a cache of the most recent packets that were sent to its receivers clients. One or more receivers clients receive the data packets from the transmitter server and may detect sequence gaps in the received data packets using the sequence number field present in the RTP or MPEG transport stream TS header . If the receiver detects a sequence gap the receiver sends a request on the TCP based control channel for selective retransmission of the missing data packets. When the transmitter server receives a retransmission request from one or more of its receivers clients it looks in its local cache of most recent packets. If the requested packet s is are found in the local cache the sender server retransmits in unicast a copy of the packet to the receiver on the TCP based control channel via network . If the requested packet was not found in its local cache buffer the sender continues servicing the rest of the retransmission requests. The receiver client maintains a delivery queue buffer cache to hold all of the received data packets from both data and control channels. The receiver client also reorders the retransmitted packet into the correct sequence position within this queue and delivers the packets to the application in the proper order at the correct time for example a video player application for display .

The receiver client maintains a configurable time window to wait for any retransmissions rather than waiting forever so that the packet delay and delay jitter can be kept within the application bounds. Moreover receiver client is provided with a network monitor according to one embodiment for collecting network statistics from the perspective of the receiver client for transmission via control channel to transmitter server . Network monitor is shown highlighted in to show the cooperation between network monitor and network interface for collecting and providing network statistics according to the present invention to transmitter server for improved retransmission decision making as will be further described herein.

The receiver client of passes the rest of the received packets from the delivery queue to the application for example video player and display if some of the retransmission replies for the lost packets are not received in time. If some of the retransmitted packets are received beyond the acceptable recovery time window they are discarded by the receiver. It should be noted that a video application can tolerate some data packet loss using error concealment technology in video decoding.

Referring again to the reliable media protocol RMP scheme in the present invention operates via RMP module between the real time application RTP MPEG TS and UDP TCP IP through the assistance of parser for prioritization and improved retransmit decision making with the assistance of network monitors and . At server transmitter an abstraction layer header parser for example Network Abstraction Layer NAL header parser operates on locally provided or network provided digital video data . NAL header parser outputs a priority and the data for real time protocol RTP packetization . Moreover a network monitor recovers current network statistics and outputs control data to retransmit decision maker to aid RMP module . For example in furtherance to the example of an enhancement layer assigned a medium priority versus a base layer assigned a high priority RMP module will retransmit the high priority base layer data and not transmit the medium priority enhancement layer data in the face of an available bandwidth detected by network monitor below a given threshold value. For example rather than transmit all packets held in cache buffer memory a retransmission decision maker may select a portion of the packets held in memory for retransmission based on network monitor collected statistics such as packet loss rate or other network conditions and a priority assigned by NAL header parser . Thus the combination of assigning a priority to data at parser in combination with retransmit decision making according to retransmit decision maker provides for a highly reliable media protocol RMP module as will be further described in connection with a discussion of .

Referring again the a typical network interface is shown between network and RMP module at server transmitter . Examples of network interface modules are Ethernet cards IEEE 802.11 WiFi cards that connect to the computer network .

Data packets arriving after the expiration of the recovery window are discarded per . Depending on the application for example for video the streaming player application depacketizes and or decodes the data and passes the data to the display speaker . The incoming packets are stored in the RMP Buffer area and will be handed over for example to the application for rendering display whenever an application requests a packet. The box labeled Config is a Configuration Interface to the RMP module . RMP module can be configured at the time of initialization to set parameters such as cache size maximum time to wait for packet recovery etc.

At a receiver client according to a network monitor may collect current network statistics at network monitor from the perspective of receiver client via interface and output the network experience of client receiver via control channel to a server with which it is connected via digital data network . Upon receipt at transmitter server via network such collected network statistics are output via interface to network monitor to supplement statistics gathered by network monitor from the perspective of the transmitter server of network as discussed above. Digital data network may be any digital data network including but not limited to satellite networks land based wireless networks fiber optic networks coaxial cable networks twisted pair networks local area networks wide area networks and other known digital data networks. A typical network interface is shown between network and RMP module at client receiver . Examples of network interface modules include Ethernet cards IEEE 802.11 WiFi cards and the like that connect to the computer network .

Before discussing it is of import to note that similar reference numerals denote similar elements in the drawings. Moreover the first number of a reference number such the first number of reference number for network indicates the figure number where the element first appears. Consequently for example RMP module first appears in is similar to reliable media protocol RMP module of but is a different module from reliable media protocol RMP module of because of the introduction of NAL Header Parser and Network Monitor and Retransmit Decision Maker all of which are not found in . Also network monitor of client receiver of in accordance with the principles of the present invention improves the operation of RMP module and Retransmit Decision Maker of . Some of the advantages of parser network monitors and and retransmit decision maker have been described above but will be further described in connection with the discussion of below.

In each of the NAL header parser may provide a packet frame priority via packetizer to local cache . For initial transmission parser outputs parser data and priority to packetizer . Per path a copy is placed in local cache and per path the packetizer sends packet data to depacketizer of streaming receiver. Network monitor provides network transport condition data to retransmission decision maker for selectively deciding on whether or not to retransmit a packet frame stored in local cache for retransmission over path via network to de packetizer . Path is used for retransmission of selected packets according to transport conditions and parser assigned priority.

Now with reference to the functional operation of an abstraction layer header parser network monitor and retransmission decision maker according to the present invention will be further described with reference to the depicted flowchart showing both sender or transmitter server side operation and receiver client terminal side operation. At block the server transmitter of obtains data for example from a local file per file reader or receives data from a network interface for example from network and de packetizer of . The received data is provided to block which represents the abstraction layer header parser of .

Referring briefly to there is shown a typical abstraction layer header for example an SVC NAL extension header providing fields to be parsed. For example the abstraction layer header parser may parse a DID field shown appearing at positions of the second byte BYTE which represents an inter layer coding dependency of layer representation or level of spatial resolution scalability. A QID field at for example positions of the second byte BYTE may follow and represents a quality level of medium grain scalability MGS layer representation. A TID field for example at positions of the third byte BYTE represents a temporal level of layer representation. One result of parsing an abstraction layer header comprising such fields is to identify the layer that the following payload data is associated with. Responsive to the identification of the payload data type a parser at parser block of may assign a different priority for each identified layer for following data for example a low medium and high priority. More than three levels of priority may be employed in alternative embodiments. For example a base layer may receive a high priority for retransmission from buffer or cache memory since base layer is absolutely necessary for a complete decoding at a receiver. An enhancement layer may be assigned a medium priority since enhancement layer data is necessary for decoding of a higher layer. An SVC encoded stream of digital data may comprise a base layer and one enhancement layer. On the other hand a second or more enhancement layers may be provided for even greater picture quality enjoyment and so a higher enhancement layer may be assigned a low priority in cache for associated payload data.

To provide a simplified example if SVC encoded video data has a base layer of a resolution of 416 by 240 and a bit rate of 600 kbps and one enhancement layer of a higher resolution of 832 by 480 and a consequent bit rate of 1.2 megabits per second for video streaming then the parser can identify the base layer NAL units based on its DID field and assign the base layer a higher priority. On the other hand the enhancement layer may be assigned a lower priority to provide the higher resolution . The base layer is assigned the higher priority than the enhancement layer in this example. The output priority level may be indicated in a payload type PT field of an RTP header shown in at positions . Once assigned a priority for example low medium and high the priority information may also be represented in a similar field of a real time protocol RTP header if retransmission is called for at the transport layer or in a type of service TOS field of an IP header. Initially a copy is buffered at block in local cache buffer memory at as the packet is transmitted via send the packet toward a receiver via network . The packet may be lost in the network or received. The packet in local cache awaits a determination as to network conditions and whether the packet is received or not.

If the packet is received and network conditions appear to be good the packet is received and the receiver determines at whether an expected packet is lost Yes or not No . If lost Yes then at a retransmit request is sent and a recovery timer of a receiver is set via the control channel of back to the sender transmitter server . If no then at the received packet is placed in proper order in a receiving buffer for example for a display function at the receiver client .

If a retransmit request is sent via a network monitor function is actuated and the received retransmit request is then processed. As will be described further herein an end to end packet loss rate at a given time may be determined at a network monitor as a current network condition from the receiver side. The current network condition for example an end to end packet loss rate is provided with the retransmit request as an output of to retransmission decision maker .

An exemplary application of a network monitor may be where the sender server is on a wired network for example a set top box cable or satellite or home gateway and the receiver is a mobile device or personal computer that is associated with a wireless access point AP. An intermediate node wireless access point AP router may report the network and wireless channel conditions to the sender. A real time packet retransmission decision made by a reliable media protocol RMP module according to the principles of the present invention may be thus layer aware when modified to incorporate an abstraction layer header parser and method according to one embodiment.

Retransmission decision maker questions whether for example the current end to end transmit packet loss rate is high meaning whether it is above a threshold level set in memory of the RMP module . If the answer is YES then at lower priority packets are dropped and only higher priority packets are recovered from cache buffer and retransmitted. Other measures of transport conditions besides packet loss rate may be available bandwidth for example the lowest available bandwidth in an end to end path and round trip delay a longer round trip delay may require the time out of a packet held in cache buffer for retransmission . Each of these including available bandwidth may be compared with an associated threshold level set in memory for deciding on packet retransmission. One or more may be employed in making the retransmission decision as well as packet priority set by parsing . If the answer is returned NO at all requested packets are retransmitted from cache buffer via send the packet and network .

Upon receipt the retransmitted packet is received at and recognized as a retransmitted packet at . Given a real time viewing experience the time of receipt is examined at . The question is asked Retransmit late If the retransmitted packet is received too late that is the program viewing experience has already moved on to a next frame then the retransmit packet is discarded at . On the other hand if the retransmit packet is not late i.e. the answer is NO the retransmit packet is placed in order in a receiving buffer for display at .

The RMP method of the present invention may be implemented in a flexible software library hardware firmware any computer or processor an application specific integrated circuit ASIC a reduced instruction set computer RISC a field programmable gate array FPGA or an combination thereof. The RMP method of the present invention uses socket like user space APIs and underlying transport means for easy integration with streaming server and player applications. The RMP method of the present invention is transparent to the streaming applications that it supports. The UDP data channel and the TCP control channel are internally maintained. The RMP method of the present invention is extensible to support other error recovery schemes such as FEC and hybrid ARQ.

The network monitor function of the present invention will now be described further with reference to . One possible approach is shown in where the network monitor for example may detect a sequence gap from a sequence number positions of first line. Another approach is to utilize a continuity counter CC field of an MPEG 2 transport stream header of one byte as seen in .

The exemplary format of the message for sending statistics collected by a network monitor of a receiver client of to server transmitter of is shown in . The message format may be similar to an RTP Control Protocol RTCP receiver report RR message. In particular one may provide a fraction lost field for example at positions of line . Other relevant data may be provided such as a cumulative number of packets lost which may be compared with a previously received cumulative number of packets lost received on the same channel. The difference provides a number of packets lost within an interval defined by the time between successful receipt of successive messages.

In the RMP scheme of the present invention described above no alterations are made to the packets sent on the data channel . Thus backward compatibility is maintained. Also the RMP scheme of the present invention makes efficient use of the bandwidth since only the lost media packets are requested and retransmitted on the control channel with low overhead. The lost packet requests serve as NACKs Negative Acknowledgements and also provide feedback to the sender. It can provide high reliability under widely different channel conditions because a lost packet can be retransmitted multiple times within the recovery time window. Also the RMP scheme of the present invention enforces the application s latency constraint by having a maximum wait time i.e. a recovery window for retransmissions and thus operates on the best effort delivery model within the given time constraint.

Note that the above embodiment is explained using video transmission. The present invention can also be applied to transmission of audio for example telephony and other real time multimedia streaming applications.

Though the above scheme of the present invention has been described with respect to wireless networks the scheme could be used in any kind of network that involves packet losses.

It is to be understood that the present invention may be implemented in various forms of hardware software firmware special purpose processors or a combination thereof. Preferably the present invention is implemented as a combination of hardware and software. Moreover the software is preferably implemented as an application program tangibly embodied on a program storage device. The application program may be uploaded to and executed by a machine comprising any suitable architecture. Preferably the machine is implemented on a computer platform having hardware such as one or more central processing units CPU a random access memory RAM and input output I O interface s . The computer platform also includes an operating system and microinstruction code. The various processes and functions described herein may either be part of the microinstruction code or part of the application program or a combination thereof which is executed via the operating system. In addition various other peripheral devices may be connected to the computer platform such as an additional data storage device and a printing device.

It is to be further understood that because some of the constituent system components and method steps depicted in the accompanying figures are preferably implemented in software the actual connections between the system components or the process steps may differ depending upon the manner in which the present invention is programmed. Given the teachings herein one of ordinary skill in the related art will be able to contemplate these and similar implementations or configurations of the present invention.

