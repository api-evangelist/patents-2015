---

title: Maintaining a secure computing device in a test taking environment
abstract: The presently disclosed invention provides for the security of a computing device in the context of a test taking environment. By securing a computing device, an individual (or group of individuals) may more effectively proctor a large examination without worrying about a test taker illicitly accessing information on their computer or via a remote source of data. Securing a computing device includes locking out or preventing access to any application not deemed necessary or appropriate by the test administrator.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09430951&OS=09430951&RS=09430951
owner: Kryterion, Inc.
number: 09430951
owner_city: Phoenix
owner_country: US
publication_date: 20150921
---
The present application claims the priority benefit of U.S. patent application Ser. No. 12 571 666 filed Oct. 1 2009 entitled Maintaining a Secure Computing Device in a Test Taking Environment and set to issue as U.S. Pat. No. 9 141 513 on Sep. 22 2015 the disclosure of which is hereby incorporated by reference. The present application is related to U.S. patent application Ser. No. 12 913 697 filed on Oct. 27 2010 and entitled Proctored Performance Analysis and PCT application number PCT US10 51169 filed on Oct. 1 2010 entitled Maintaining a Secure Computing Device in a Test Taking Environment and published as WO 2011 041707 on Apr. 7 2011 all of the disclosures of which are hereby incorporated by reference.

The present invention generally relates to online testing. More specifically the present invention concerns maintaining the security of a computing device in an online test taking environment.

Tests are used to determine the ability of a test taker e.g. a student or prospective practitioner as it pertains to proficiency in a particular subject or skill set. For example a student might take a test to determine whether the student possesses the requisite knowledge in a particular subject that might be related to receiving a degree or certificate. A prospective practitioner in law or medicine might similarly sit for examination to determine their competence as it pertains practicing in that profession.

Every student has at some point taken a test whereby a class of approximately 30 students assembles in a classroom prior to the posted test time. Testing materials are then handed out and the test begins. During the allotted test time usually an hour to 90 minutes students read questions and provide answers on a provided answer sheet or in a blue book. As students take the test the teacher or a proctor keeps careful watch over the test takers to ensure that no instances of cheating are taking place.

While a single proctor proves useful for a small class of students such observation becomes more difficult for a larger class size. This might be true in a college environment for example where a particular degree or discipline has certain core classes taken by all students seeking a particular degree or studying within a particular college. It is not unusual for a first year mathematics or chemistry course to have upwards of 150 students sitting for a single examination. In orderly to effectively prevent instances of cheating several proctors must be utilized to keep watch over the student test takers.

This problem has become even more pronounced as an increased number of students take examinations on a laptop computer. A proctor once only needed to keep a watch for a test taker slipping out an obvious cheat sheet or looking over the shoulder of a neighboring test taker. Test takers can now store notes or other information related to an examination in a file accessible on their desktop. Test takers can easily and quietly access that illicit information during the examination. The test taker can quickly close out the file as a proctor moves about the room or even delete the file in its entirety thus eliminating any proof that cheating ever took place. Built in wireless cards and pervasive wireless networks also allow test takers with easy access to the Internet or other remote sources of information.

As the number of test takers increases so does the need for additional proctors. Tests such as college entrance examinations may be offered on a nationwide network with multiple testing sites all offering the examination on a single date. An example of a nationwide examination is the SAT Reasoning Test. In 2006 the SAT Reasoning Test was over the course of the year taken by almost 1.5 million prospective college students. Another example of a large scale examination is the Multistate Bar Examination MBE . In 2007 the MBE was taken by almost 75 000 prospective attorneys in 53 different jurisdictions.

The high stakes nature of the examination i.e. potential college admission or the ability to practice law creates a greater motivation for cheating. Due to the increased risk of cheating and the large number of students at each testing site multiple proctors must be utilized at each site. If the test happens to be a time intensive examination as is the case with both the SAT Reasoning Test and the MBE which are both approximately 3 hours in length then even more proctors are needed to relieve one another for respites. The concerns raised by the use of laptop computers and the remote or illicit access to information only scales as does the number of test takers.

Even without the complications proffered by a laptop computer proctoring an examination too is a significant logistical task in the case of a large examination. Offering an examination and proctoring the same first requires locating eligible proctors i.e. trustworthy individuals without a personal stake in the outcome of any given test taker and determining their availability i.e. can they be available to proctor the examination on a given date and time . Once eligible proctors are determined to be available those proctors must then be trained or oriented with respect to the particulars of the examination or advised as to how to properly administer the examination e.g. testing protocols observing signs of cheating confront the misbehaving test taker and addressing potential test taker questions . Proctors must then be scheduled in the appropriate number at each testing site and then properly compensated for their time and efforts. In some instances the costs involved with proctoring an examination may rival or exceed the costs related to actually preparing the examination.

Other tests are offered in the context of distance learning. Distance learning is an instructional model that delivers education material and information to students who are not physically on site at an educational facility. Distance learning creates and provides access to learning when the source of the information and the student are separated by time distance of both. Thousands of distance learners may be involved in a particular distance learning program or course at any given time.

Like any other educational program there is a need to verify the qualifications of students through testing and examination. Because distance learners are not collectively gathered at a physical learning institution such as a university the distance learning program requires that the students attend a testing center which challenges the very purpose of distance learning or administer an examination online. An online examination is difficult to proctor as a user could be taking an examination in one window of a web browser while looking up answers in another window via the Internet. A test taker could also utilize a chat or messaging application to relay questions to and receive answers from a knowledgeable third party. The value of online examinations is therefore questionable and calls into question the overall value of the corresponding class or degree program.

There is a need in the art for improved proctoring of large scale examinations such that a small number of proctors can properly secure a test taking environment notwithstanding the large number of test takers. There is a similar need for remote proctoring of examinations. Remote proctoring like on site massed proctoring would maintain the integrity of the testing environment by preventing test takers from accessing illicit information to aid in the completion of the examination.

In a first claimed embodiment a computer program is embodied on a non transitory computer readable storage medium. The program is executable by a processor to perform a method for securing a computing device during a testing event. The method includes receiving a testing protocol for the testing event. The testing protocol includes limitations to be applied to the computing device during the testing event. The testing protocol is received by the computing device over a communication network from a test server. The limitations are applied by the computing device by modifying a system registry of the computing device in accordance with the testing protocol. Execution of the testing routine corresponding to the testing event is initiated. A feed of on screen activity displayed on the screen of the computing device is transmitted in real time to a proctoring center. The transmission is automatically triggered when the computing device detects an attempt to change the system registry of the computing device that is not in accordance with the testing protocol during the testing routine.

In a second claimed embodiment a method for securing a computing device during a testing event includes receiving a testing protocol for the testing event. The testing protocol includes limitations to be applied to the computing device during the testing event. The testing protocol is received by the computing device over a communication network from a test server. The limitations are applied by the computing device by modifying a system registry of the computing device in accordance with the testing protocol. Execution of the testing routine corresponding to the testing event is initiated. A feed of on screen activity displayed on the screen of the computing device is transmitted in real time to a proctoring center. The transmission is automatically triggered when the computing device detects an attempt to change the system registry of the computing device that is not in accordance with the testing protocol during the testing routine.

In a third claimed embodiment a system for securing a computing device during a testing event includes a server communicatively coupled to a computing device. The server provides a testing protocol for a testing event. The testing protocol includes limitations to be applied to the computing device during the testing event. The computing device receives the testing protocol for the testing event from the server. The computing device also executes instructions stored in memory which cause the computing device to apply the limitations by modifying a system registry of the computing device in accordance with the testing protocol. Execution of the testing routine corresponding to the testing event is initiated. A feed of on screen activity displayed on the screen of the computing device is transmitted in real time to a proctoring center. The transmission is automatically triggered when the computing device detects an attempt to change the system registry of the computing device that is not in accordance with the testing protocol during the testing routine.

Embodiments of the presently disclosed invention provide for the security of a computing device in the context of a test taking environment. By securing a computing device an individual or group of individuals may more effectively proctor a large examination without worrying about a test taker illicitly accessing information on their computer or via a remote source of data. Securing a computing device includes locking out or preventing access to any application not deemed necessary or appropriate by the test administrator.

Securing a computing device may further include allowing the test administrator access to the computing device before or during the examination. By granting access to the computing device the test administrator may search for illicit files related to the examination or make determinations as to whether the test taker has attempted to disable or has disabled certain functionalities relates to locking out unnecessary or inappropriate applications on the computing device. Access to the computing device by a testing administrator may occur in the context of other applications being locked out for the duration of the examination.

A computing device includes any number of hardware components such as a central processor memory wireless chipset and network interface. The computing device further includes a variety of software applications such as a web browser word processor and electronic mail or chat clients. The operating system serves as an interface between the hardware components and software applications .

At the core of the operating system is the kernel . The kernel is the lowest level abstraction layer for computing device resources such as memory processors and input output components. The kernel makes these resources available to software applications by setting up address space loading the file containing the application code into memory and setting up an execution stack to allow for execution of the application and implementation of its corresponding functionality.

A system registry is a database that stores settings and options for a particular operating system installed on the computing device. The system registry includes information and settings for the computing device hardware the operating system software and application software . The registry may be manually edited in real time through user interaction or in response to execution of a particular software application .

Computing device may be any sort of computing device as is known in the art and generally include a system architecture like that described in . Computing device includes memory for storage of data and software applications a processor for accessing data and executing applications input and output devices that allow for user interaction with the computing device . Computing device further includes components that facilitate communication over communications network such as an RJ 45 connection for use in twisted pair based 10 baseT networks or a wireless network interface card allowing for connection to a radio based communication network e.g. an 802.11 wireless network .

Computing device may be a general purpose computing device such as a desktop or laptop computer. Computing device may be made secure through the implementation of for example the methodology described with respect to . The general computing device may belong to a particular test taker rather than being a computing device dedicated to test taking and as might otherwise be found in a testing center. Thin client or netbook client devices may be implemented in the context of computing device as might mobile computing devices such as smart phones.

The computing device may include any number of software applications including those described in the context of . In addition to software applications the computing device may especially in the case of a personal computing device include any number files or other types of data such as notes outlines and test preparation material. Possession of this data as well as having access to certain applications that themselves allow for access to data e.g. through a web browser during the course of a test or examination would prove highly advantageous to the test taker but detrimental as to the accuracy or relevance of any resulting test data. Similar issues would exist with respect to a test center computer that has access to the Internet or that might allow for the introduction of data through a portable storage device.

Testing server is a computing device tasked with the delivery of testing data including questions and other related application packages to the computing device by means of communications network . Like computing device testing server includes memory a processor for accessing data and executing applications and components to facilitate communication over communications network including communications with computing device .

Proctoring center is an operations center staffed by one or more persons observing various testing behaviors for one or more testing sites. Testing sites can be testing centers dedicated to the offering of tests and examination traditional classroom settings as well as personal space such as a home or office workspace. Proctoring center may observe and analyze a variety of different types of information to help ensure the integrity and security of a test and or testing environment. The observation and analysis of information is described in further detail below with respect to assessment module and camera device .

Communication network may be a local proprietary network e.g. an intranet and or may be a part of a larger wide area network. The communications network may be a local area network LAN which may be communicatively coupled to a wide area network WAN such as the Internet. The Internet is a broad network of interconnected computers and servers allowing for the transmission and exchange of Internet Protocol IP data between users connected through a network service provider. Examples of network service providers are the public switched telephone network a cable service provider a provider of digital subscriber line DSL services or a satellite service provider. Communications network allows for communication between the various components of test taking system environment .

In order to prevent access to files or other types of data such as notes outlines and test preparation material during an examination as well as applications that themselves allow for access to data it is necessary to secure computing device . Computing device may be secured through the download and subsequent installation of secure testing application . Secure testing application may be downloaded from testing server or another computing device coupled to communications network such as testing registration server . Secure testing application may also be installed from a computer readable storage device such as a CD ROM. The testing security application may then be stored in memory at the computing device and executed by a processor to invoke its corresponding functionality.

Secure testing application is a security software application that prevents computing device from accessing certain data or applications that might otherwise be in violation of testing regulations or protocols as identified by testing server . Secure testing application causes the computing device to operate in a secure mode by introducing certain changes to the system registry such that only those applications or files deemed necessary or appropriate by the test administrator and as embodied in a corresponding testing protocol may be allocated address space loaded into memory and ultimately executed by the computing device .

For example a testing protocol for a particular examination may deny access to a web browser e mail client and chat applications such that a test taker may not electronically communicate with other individuals during the examination. This particular protocol may be downloaded to the client computing device from the testing server along with testing data. The secure testing application then operates in accordance with the downloaded testing protocol such that the aforementioned applications are not allowed to be loaded and executed. Because the applications that may be installed on a computing device are all but infinite the testing protocol may identify those applications that a user is allowed to access rather than those applications to which access is prohibited.

Similar prohibitions or permissions may apply to hardware components of the computing device as well as any number of hardware peripherals that might be introduced to the computing device . Examples of such peripherals include a second computer monitor docking stations and a traditional full sized keyboard as might be used with a laptop computer. Other peripherals might include thumb drives time shift recording devices that offer TiVo like functionality as well as any number of other plug and play peripherals.

A particularly apt example with respect to hardware at the computing device concerns network connectivity. Network connectivity may be allowed prior to commencing an examination such that certain data may be downloaded. This data may include the actual test e.g. prompts and questions or other data concerning a test. Once the certain data is downloaded however network connectivity may be deactivated through locking out a network card until the test is completed and the network card is released.

In other instances however network connectivity may be maintained throughout the course of the examination. This may be particularly relevant to a scenario where testing data is maintained at the testing server and only displayed at the computing device . In such an instance the test data itself may never be stored or downloaded at the computing device. In these and similar scenarios it may be necessary to allow only certain data to be exchanged over the network connection. This would include both incoming and outgoing data.

In those instances where the secure testing application allows access to certain applications on computing device the functionalities of those applications may be limited. For example a testing protocol may allow for activation of a web browser and network connectivity but only to a single secure site providing testing data. The protocol may further or alternatively allow for exchanges of only certain types of data or data that has been certified for exchange. Such certifications may include the presence of certain headers in the data or the data having been encrypted in a particular fashion. Similarly the print function of a particular application may be disabled. The testing protocol may include instructions on how certain application programming interfaces APIs for certain commercially available software applications are to be implemented or disabled by the secure testing application . Drivers may be managed in a similar fashion e.g. a printer driver .

Access to certain applications hardware or functionality may be disabled or limited for a particular portion of an examination. As noted above a network interface card may be temporarily disabled after an initial download of data. Once the test is complete however the network card may be re enabled to allow for transmission of data or to allow for the free and general exchange of data rather than a more limited set under the control of the secure testing application .

The occurrence of certain milestones or events during a testing event may correspond to the enablement or disabling of hardware software or specific application functionality. For example print functionality may be disabled during an examination to prevent a test taker from printing a copy of the examination and then delivering the copy to a friend so that they may review the questions before they take the examination. That functionality may be enabled however to allow the user to keep a copy of their answers sans the questions. The functionality may be re enabled once a user clicks on a Test Complete button or icon that locks in the test taker s answers and prevents them from being further manipulated once certain computing device hardware software or functionality has been re enabled that was otherwise disabled during the examination.

Because APIs vary in each application and even between versions of the same application the secure testing application per the testing protocol may only allow for the use of certain versions or types of software applications e.g. only version 3.0.13 of the Firefox web browser . If a user attempts to use a different version or type of application the secure testing application will prevent execution of that application or specific version thereof. The secure testing application may further inform the user that an upgrade or different type of browser is required. As such a test taker may be informed of certain system requirements in advance of an examination.

In some instances it may be worthwhile to provide a native application in conjunction with or as a part of the secure testing application . Native application may encompass an application created by the testing administrator or otherwise developed specifically for administration of online examinations. Native application may offer the general functionality of certain commercially available software applications but without the functionality that offers possibility for engaging in illicit behavior during an examination. For example a word processing application offers the ability for a user to produce the text for a document according to instructions. That same application however also allows the user the ability to access other notes created using the word processor.

In order to prevent illicit testing behavior the word processor must allow for the generation of information through the usual input of data but prohibit access to preexisting data. The word processor must also be prevented from pasting data that might have been copied from study notes immediately prior to the examination commencing. Notwithstanding the test taker must still be allowed for a user to cut and paste from originally generated answers during the course of the examination.

To implement these specific degrees of control those specific limitations must first be identified and then conceived as to particular limitations i.e. what is allowed and what is prohibited . A testing protocol must then be crafted that embodies these permission and prohibitions. To implement the protocol then requires interacting with various APIs which is dependent upon a user having a particular type of software application and version thereof installed. A natively derived word processing application may simply offer requisite functionality rather than cobble together a series of permitted functions in a commercially available word processing application.

In other instances a commercial application such as Word for Windows may be hosted at the testing server or some ancillary server in the testing environment and allow for user access to the same during the examination. By maintaining centralized hosting of a requisite application users are prohibited from exceeding the permitted use of that same application on their own computer . In such an instance the computing device utilized by the user as well as that of the testing server may require hardware or software to allow for such multiplexed access and interaction. In some instances this software may be an integrated part of secure testing application . In other instances however a user may be required to install this software from a third party which may be certified by the entity offering the test or examination.

A natively derived application prepared for use in the testing taking system environment may be provided with respect to a web browser. This native browser may allow access to only those web sites directly related to the test e.g. providing examination questions or that provide pre approved test materials such as manuals regulations or rules that might be referenced and cited by an applicant during an open book type examination. A native application might also encompass a uniquely generated offering of questions in the context of a multiple choice type examination. Such an application may be akin to a survey that a user might otherwise take on any number of websites on the Internet. In such an application the user is allowed to select a predetermined slate of options and only those options access to any other applications on the computing device becomes irrelevant and unnecessary.

A native application may also operate in conjunction with a commercial application during testing. For example a testing protocol may indicate that all chat or electronic mail applications are to be disabled by the secure testing application but that the test taker may use a commercially available word processing application with limited functionality. The test administrator may wish to offer technical assistance to the test taker during the course of the examination in case some aspect of the test becomes corrupted with respect to the delivery of data. A native application dedicated to instant messaging or chatting with an approved technical support agent may be provided for use during the examination.

Secure testing application may include an assessment module . The assessment module observes activity on the computing device during administration of an examination. If a user attempts to make changes to the system registry that were implemented by the secure testing application the assessment module may identify and report these attempts to the proctoring center . The assessment module may also check an output file for metadata or a keystroke log that might indicate an attempt to switch between accounts if a particular operating system allows for multiple users each of which would have their own unique system registry or operating system environments in the case of a computing device operating with the user of a virtual machine. The assessment module may further allow the proctoring center a real time look into modifications or activity occurring at the computing device including changes at the registry level or activity occurring on screen.

Secure testing application may further include an assessment module which operates in conjunction with a peripheral device such as camera device . The assessment module operates in conjunction with the secure testing application to deliver data to the proctoring center for review and analysis to ensure testing integrity. For example the camera device which may be a commercially available web camera or other image acquisition device may generate data of the test taking area and the test taker. If the test taker leaves their seat or another individual enters the testing area during the course of the examination the camera device will capture this visual information and provide that data to the assessment module . The assessment module in turn delivers the data to the proctoring center for analysis.

The proctoring center requires remote delivery of data. As such a network connection is required to allow for delivery of that data from the computing device to the proctoring center . The testing protocols as delivered by the testing server may instruct the secure testing application to allow the network card to remain enabled but to limit network connectivity to certain ports. For example with respect to electronic mail an SMTP service operates on port while a POPS service operates with respect to port . The secure testing application would prohibit access to ports and but would allow the use of port with respect to accessing Microsoft Media Services to the extent those services were used by the proctoring center to observe video of the test taker at the computing device . The operability of a universal serial bus USB port to provide for connection of the camera device to the assessment module would likewise be required with respect to the testing protocols.

The proctoring center may then determine if any visual activity constitutes activity not in accordance with the testing protocol. The proctoring center may then log the information for further assessment by the actual test administrator e.g. the professor or professional association administering the examination or make a direct inquiry of the test taker as to the nature of the observed behavior and or provide a warning as to terminate that behavior. Other external devices may be used to gather environmental data that can be reported to the proctoring center in association with the assessment module such as a microphone or other testing environment capture device .

The assessment module may be used to collect registration information such as a name or testing identification number as well as a password. Other registration information might include biometric information such as a visual image of the user that is compared against a previously stored and known good image of the user. A similar comparison may be made with respect to a voice print. Retinal scans and finger prints subject to the presence of the appropriate peripheral device may also be used for verifying test taker identity. These peripheral devices may be implemented in the context of a testing environment capture device .

A further registration technique may include the user typing in a previously typed in phrase. The nuances of the user having entered the sentence previously and during the actual testing event as they pertain to the natural speed and pauses and so forth may be observed and compared. As a result the likelihood that the test taker is the purported test taker may be determined. All of the aforementioned information may be maintained in storage at a testing registration server . The testing registration server may be maintained by the proctoring center in a secure database of information at a site designated by the actual test administrator or that of a third party commercial vendor.

The assessment module may also operate in conjunction with a testing protocol to properly execute a testing routine for the given testing event. For example the testing routine may allow for the user to have access to all questions at any given time such that the user may answer and not answer questions at their leisure and subsequently return to any questions at a later time for further review. The testing routine may alternatively require the user to lock in an answer or set of answers and have the same reported to the testing server prior to receiving a subsequent question. The routine may alternatively require that a question be locked in but the actual answers are not delivered to the testing server until conclusion of the examination a portion of the examination or as part of a regular batch transmission. Answer delivery may also occur in real time. As such the assessment module and the testing server may operate in a binary fashion with certain data being reported to the proctoring center in conjunction with each answer. Other testing routine parameters might include time number of questions answered or number of questions answered correctly or incorrectly. Data exchanged between the testing server and the assessment module of the secure testing application may be encrypted.

With respect to method if a secure testing application is not yet installed on a computing device to be used during a testing event the secure testing application is downloaded and installed in step . The need to acquire the secure testing application may be previously communicated to the test taker or may be indicated when the user attempts to access a testing server but lacks the proper credentials to do so as the test taker has not been authenticated by means of the assessment module in the secure testing application .

Following installation of the secure testing application testing protocols are received at the computing device in step . These protocols are related to security of a particular testing event. The protocols are delivered to the computing device by the testing server . Some protocols may be universal and pre implemented in the secure testing application such as requiring authentication of a user prior to commencing an examination.

At step the testing protocols are implemented with respect to various hardware software and functional aspects of the computing device . Implementing the testing protocols may include modifying the system registry of the computing device to prevent certain hardware software or other functionality from being implemented. These changes to the system registry may be undone once the secure testing application completes is execution i.e. the test is complete . As such the secure testing application may maintain a record of changes it makes to the system registry to allow for proper editing back to an original setting. These records may also be maintained in order to allow the assessment module to make a determination whether any attempted to circumvent the secure testing application have been made.

In step the testing routine is implemented in accordance with various testing protocols. The testing routine includes acquisition and delivery of test data to the computing device which may occur during registration and verification of the test taker at registration server prior to commencing the examination. The testing routine may further include delivery of test answers back to the testing server . A proctoring center may receive copies of test answers for the purpose of ensuring test integrity but such receipt is not necessarily required in implementation of system .

In step violations of testing protocols are reported to the proctoring center . Violations may also be reported to the testing server . Data related to violations may be captured by camera device and or testing environment capture device which may include a microphone. This data is reported to the assessment module which then reports the data to the aforementioned proctoring center for analysis. Data related to attempts to circumvent registry changes related to maintaining the security of the computing device during the testing event may likewise be reported. Violations may be reported as they occur in real time on demand in response to a proctor query or as part of a regular batch of data.

Computer readable storage media refer to any medium or media that participate in providing instructions to a central processing unit CPU for execution. Such media can take many forms including but not limited to non volatile and volatile media such as optical or magnetic disks and dynamic memory respectively. Common forms of computer readable media include for example a floppy disk a flexible disk a hard disk magnetic tape any other magnetic medium a CD ROM disk digital video disk DVD any other optical medium RAM PROM EPROM a FLASHEPROM or any other memory chip or cartridge.

Various forms of transmission media may be involved in carrying one or more sequences of one or more instructions to a CPU for execution. A bus carries the data to system RAM from which a CPU retrieves and executes the instructions. The instructions received by system RAM can optionally be stored on a fixed disk either before or after execution by a CPU. Various forms of storage may likewise be implemented as well as the necessary network interfaces and network topologies to implement the same.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. The descriptions are not intended to limit the scope of the invention to the particular forms set forth herein. To the contrary the present descriptions are intended to cover such alternatives modifications and equivalents as may be included within the spirit and scope of the invention as defined by the appended claims and otherwise.

