---

title: Image upgrade for devices in a telephony system
abstract: A system for image upgrade, according to one embodiment of the present invention comprises an upgrade director and a target device comprising a manager module. The upgrade director sends a first command to the manager module initiating an upgrade event. The manager module receives the first command. The manager module calculates a delay parameter. The manager module downloads an upgrade image after the delay parameter has ended. The upgrade director sends a second command to the manager module indicating that the upgrade event is to conclude. The manager module receives the second command from the upgrade director. The manager module reboots using the upgrade image responsive to the second command.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09600268&OS=09600268&RS=09600268
owner: Shoretel, Inc.
number: 09600268
owner_city: Sunnyvale
owner_country: US
publication_date: 20150917
---
This application is a continuation of and claims priority to U.S. application Ser. No. 12 897 573 filed Oct. 4 2010 titled Image Upgrade Now U.S. Pat. No. 9 158 525 which is incorporated by reference in its entirety.

The present invention relates to telephony systems such as those using Voice over Internet Protocol VoIP . In particular the present invention relates to upgrading telephony devices.

Large Internet Protocol IP based telephony systems involve numerous telephony devices connected across a network. As improvements are made the software operable on the telephony devices needs to be upgraded i.e. these telephony devices need an image upgrade . Upgrading the image of the various telephony devices that comprise the telephony system is difficult for numerous reasons.

First upgrading the entire system over skinny Wide Area Network WAN pipes is typically time consuming since the image upgrade typically has a large file size. For example it can take anywhere between hours to days to fully upgrade a large system due to the file size of the upgrade. Since the upgrade requires a relatively large window of time during which upgrading devices will be nonoperational the upgrade event needs to be scheduled during business off hours. However for systems spanning multiple time zones there is no off hours time window when the telephony devices are not used in which to perform the image upgrade.

Second extended service outages occur due to the time required to perform the image upgrade. For some customers e.g. hospitals utilities etc. the phone system is so critical that there is simply no off hour window that is acceptable. As a result image upgrades are not feasible and do not occur.

Third since the upgrade image needs to be transported from its source to the telephony switches using a push or a pull mechanism upgrading the entire system over a WAN can result in a large volume of network traffic relative to normal network traffic network flood . Network floods can have a snow balling effect causing stability issues that interfere with the update process and the regular operation of the telephone system.

Fourth power failure during the update process can cause inadvertent partial upgrade of the telephony switches and phones causing system stability issues.

The present invention overcomes the deficiencies and shortcomings of the prior art by providing system and method for image upgrade. The system of the present invention is particularly advantageous because it provides a two step process for upgrading the image of devices in a telephony system that makes upgrading the system image more convenient. At a high level the two step process includes 1 downloading the upgrade image and 2 rebooting using the upgrade image at a time specified by an administrator. The system also beneficially provides for batched downloading of the upgrade image to one or more target device using delay parameters so that the risk of flooding the network with administrative traffic is minimized. The system comprises an upgrade director and a target device having a manager module. The upgrade director sends a first command to the manager module initiating an upgrade event. The manager module receives the first command. The manager module calculates a delay parameter. The manager module downloads the upgrade image after the delay parameter has ended. Downloading the upgrade image after the delay parameter has ended beneficially provides among other things batched downloading of the upgrade image so as to decrease the risk of network flooding. The upgrade director sends a second command to the manager module indicating that the upgrade event is to conclude. For example a user of the upgrade director is an administrator and the second command is sent at a time determined by the administrator to be convenient for rebooting the one or more target devices in the telephony system. The manager module receives the second command from the upgrade director and responsive to the second command reboots using the upgrade image.

A system and method for image upgrade is described. An image upgrade includes upgrading the software operable on a component of an IP telephony system. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the invention. It will be apparent however to one skilled in the art that the invention can be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to avoid obscuring the invention. For example the present invention is described in one embodiment below with reference to system operation and particular hardware. However the present invention applies to any type of computing device that can receive a data and commands and any peripheral devices providing services.

Although the examples given herein describe the present invention in embodiments applicable to telephony a person having ordinary skill in the art will recognize that the present invention is applicable to other technologies.

Reference in the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the invention. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a non transitory computer readable memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a non transitory computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

Finally the algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.

Enterprises often have several offices or call centers that are located in a plurality of geographically disparate locations and spanning more than one time zone. These sites include a number of telephony devices that can be upgraded. Upgradable telephony devices include switches phones databases conference bridges etc. The present invention provides among other beneficial improvements a system and method for upgrading the software operable on these telephony devices using a two step process. Described at a high level this two step process includes 1 downloading the upgrade image to a target device and 2 transmitting an activation command to the target device that triggers a reboot using the upgrade image. For example the upgrade image is downloaded to a memory comprised within the target device so that for a period of time the target device stores both the upgrade image and the old image. The old image is referred to herein as the active image. The download of the upgrade image can be batched or staggered across multiple devices that are part of the telephony system using device specific delay parameters so that network bandwidth is optimized thereby minimizing the risk of network flooding. The download is also optimized so that an available image server nearest to the target device is used for downloading the image upgrade to the target device. For example the image servers and the target devices are both organized in a hierarchical structure and the server nearest the target device in the hierarchical structure is used for downloading the upgrade image to the target device.

In one embodiment the target device continues to operate using the active image for a period of time until the activation command is received. The activation command is sent at a convenient time e.g. off hours specified by an administrator. A person having ordinary skill in the art will recognize that sending the activation command at a later time is advantageous for numerous reasons including for example beneficially giving an administrator time to plan the upgrade of the system. Once the activation command is received the target device begins the process of rebooting the target device using the upgrade image. The target device sends progress reports so that the administrator can monitor the progress of the image download and or rebooting the target device using a central User Interface UI as described with reference to . In one embodiment target devices determined to have high processing capability and or high bandwidth capacity are themselves used as image servers from which other telephony devices can download the upgrade image. A person having ordinary skill in the art will recognize that using target devices having high processing capability and or high bandwidth capacity beneficially provides additional image servers and increased scalability for upgrading the system without significantly adding to the financial cost of the upgrade.

In one embodiment of the present invention the network is a partially public or a wholly public network such as the Internet. The network can also be a private network or include one or more distinct or logical private networks e.g. virtual private networks Wide Area Networks WAN and or Local Area Networks LAN . Additionally the communication links to and from the network can be wireline or wireless i.e. terrestrial or satellite based transceivers . In one embodiment of the present invention the network is an IP based wide or metropolitan area network.

The software that supports the computer integrated functionality of providing the above described telephony services is generally implemented as a client server environment in which the participants or clients distributed telephony users communicate with a server A B. Computer integrated features rely not only on a server s application platform but also on the availability of the network bandwidth that connects the switches A B C servers A B .

In the illustrated embodiment the switch A is coupled to the network . The switch A is also coupled to the server A via signal line A and to the Public Switched Telephone Network PSTN trunk via an analog or digital trunk line e.g. a T or E interface or a Session Initiation Protocol SIP trunk service provider. In the illustrated configuration the switch A provides an interface for calls originating from or terminating on the PSTN or SIP trunk . The PSTN is coupled to any number of Plain Old Telephone phone Service phone POTS phone and a mobile voice network coupled to any number of mobile phones represented by mobile phone . Thus POTS phone calls and mobile phone calls can originate on the switch A via the PSTN . The mobile phone is communicatively coupled to the mobile voice network and a mobile data network . The mobile data network is communicatively coupled to an Internet Protocol network IP network .

The mobile voice network is one or more cellular networks configured to transmit voice packets to different phones via the one or more cellular phone networks. For example the mobile voice network is one or more cellular telephone networks.

The mobile data network is one or more wireless networks configured to transmit data such to different phones and or networks. For example the mobile data network transmits text messages instant messages e mail and data associated with browsing a network such as the Internet. In one embodiment the mobile data network is a 3G network. In another embodiment the mobile data network is a 4G network.

The IP network is preferably a wide area network or a similar data network. In another embodiment the IP network is an IP based wide or metropolitan area network. The IP network can also be a private network or include one or more distinct or logical private networks e.g. virtual private networks or wide area networks . In one embodiment the IP network includes SIP signaling and Wi Fi or other wireless IP network to the mobile phone. The mobile data network is communicatively coupled to the IP network and the switch is communicatively coupled to the IP network . In one embodiment the communicative couplings to and from the network can be wire line or wireless i.e. terrestrial or satellite based transceivers .

In one embodiment there is no IP network and the mobile data network is communicatively coupled to the network either directly or indirectly . For example the network is a WAN or LAN and the mobile data network is communicatively coupled to the network . In another example the site A is a business site and the mobile phone is physically present at the site A. The business site has a Wi Fi network and the mobile phone connects to the network using the Wi Fi network.

A person having ordinary skill in the art will recognize that there are many ways for the mobile phone to connect to the network and that the examples described above are illustrative but not limiting of the scope of the present invention.

Although only a single switch A is shown in those skilled in the art will recognize that a particular site such as the first site A may include a plurality of switches . The switches A B C will be described in more detail below with reference to .

The first site A includes a server A a switch A three endpoints analog phone A IP phone A and software phone A and a storage device A. The switch A represents a Voice over Internet Protocol VoIP device to which a number of endpoints can be coupled such as one or more analog phones A IP phones A and software phones softphones A.

In one embodiment the switch A is comprised within the server A so that the server A can provide the functionality of the switch A. For example in one embodiment the sever A stores computer code and routines on a memory not pictured that is executable by a processor not pictured to provide the functionality of the switch A i.e. the sever A stores and is configured to execute a softswitch . In another embodiment electronic circuits are comprised within the server A and configured to provide the functionality of the switch A. A person having ordinary skill in the art will recognize that there are other ways for configuring the server A so that the server A provides the functionality of the switch A.

An endpoint enables a user to carry on a phone call. Although in the illustrated embodiment the first site A has three endpoints one analog phone A one IP phone A and one softphone A in other embodiments the first site A has different numbers and types of endpoints. Examples of endpoints include a video conferencing device a Multipoint Control Unit MCU a conference bridge an Analog Terminal Adapter ATA and any other device that originates and or terminates a media stream. An endpoint is coupled to the switch A the server A or both. Each of the endpoints can also include a display device not shown that is used in conjunction with the phone of the endpoint.

In one embodiment an endpoint is a conference bridge adapted to have the functionality of a switch A. For example the conference bridge includes hardware that provides the conference bridge with the functionality of a switch A. Such hardware includes for example one or more electronic circuit boards one or more processors and or a non transitory storage device e.g. flash memory hard drive etc. storing data and or software e.g. a call manager as depicted in element and these components are configured to work together with the other components of the conference bridge so that the conference bridge has the functionality of a switch A. In another embodiment the conference bridge has among other things a processor and a non transitory storage device that stores a call manager that when executed by the processor causes the conference bridge to have the functionality of a switch A. For example in one embodiment an endpoint is a conference bridge and the bandwidth manager and the settings manager are components of a call manager stored on a storage device that is comprised within the conference bridge.

In one embodiment an endpoint has a user interface to send data to and receive data from a user. The analog phone A has for example a Telephone User Interface TUI that sends data through a speaker and receives data through a microphone and a keypad. The IP phone A has for example both a TUI and a Graphical User Interface GUI that sends data through a display device associated with the IP phone A. In one embodiment the IP phone s graphical user interface also receives data from a touch screen display device associated with the IP phone A. The softphone A has for example a software application that runs on a computer and sends data through a display device and a speaker and receives data through a microphone a keyboard and a pointing device.

The server A is configured to implement features or functions of the telephony system in accordance with the present invention. The server A is coupled to the network and although not shown this way in can also be coupled to one or more endpoints such as IP phone A and softphone A. The server A implements a server architecture according to one embodiment of the present invention. The server A includes a processor not pictured . The processor can be a conventional processing device such as a general purpose microprocessor. Server A also includes a non transitory computer readable memory the memory or a memory . The memory includes program instructions or functional units that in one embodiment implement features of the present invention. Specifically in one embodiment the memory includes a Telephony Management Software TMS unit a Telephony Application Programming Interface TAPI unit and a directory unit. In one embodiment the memory also includes one or more application units that interact with the TMS unit and the TAPI unit to enable a specific computer integrated function. An application unit uses the TAPI unit to exchange data with the TMS unit. The TMS unit is able to communicate with and manage one or more switches . For example with reference to the TMS unit included in the server A can manage the switches A B C. Through the TAPI unit the TMS unit presents an application with Computer Telephony Integration CTI view of these switches A B C. This allows the application to manage the switches A B C. Such switches A B C operate without an associated TMS unit if CTI features are not being used.

The server A has a user interface to send data to and receive data from a user. The user interface interacts with TMS in order to allow a user with administrative rights to manage the switches A B C and change the configuration settings of the switches A B C. The user can access the user interface at the server . For example the server stores and executes a conventional web browser application. The server serves a web page including the user interface. The user accesses the user interface via the web browser. The user changes the configuration settings using the user interface.

In one embodiment the server A includes an application unit and or a directory unit. The application unit assists the switch A in providing one or more phones communicatively coupled to the switch A with access to conventional PBX applications e.g. among others instant messaging collaboration tools sidebar conversations between two or more users during ongoing PBX calls chat sessions between two or more users and or APIs for integrating third party applications with the standard PBX functions provided by the switch A . For example the application unit is data and routines stored on a non transitory computer readable medium comprised within the server A. In one embodiment the server A does not include the application unit and the switch can provides PBX functionality without assistance from the switch.

In general the directory unit enables a phone to access a directory and use the directory in conjunction with other phone functions. In one embodiment the directory unit is implemented as a service that interacts with TMS unit. Communication or data exchange is between the TMS unit and the directory unit. The directory unit can be distributed among computing devices as is known to one of skill in the art. For example the functionality enabled by directory unit can be implemented in a client server fashion by having the client user s local system such as a general purpose computer or endpoint perform some functions and having the server A directory unit perform others. As another example some or all of the functionality enabled by the directory unit can be implemented by having a switch A perform some or all functions.

The storage device A is a non transitory computer readable medium that stores for example directory information. The directory information includes directory entries and associations between directories and phones. In one embodiment the storage device A also includes information regarding which users have administrative rights to access the server s user interface and make changes to call failure rules that are stored for example in one or more switches e.g. A B C and or one or more servers e.g. A B . For example the storage device A includes the user name and password of users with administrative rights.

In one embodiment a user having administrative rights can access the user interface of the server A and perform functions such as 1 initiate commands sent from an upgrade director as described below 2 view progress reports describing for example the progress of the upgrade image download to one or more of the target devices 3 assign which of the image servers described with reference to will provide the upgrade image download for different target devices and 4 configure one or more of the target devices to function as an image server from which other target devices can download the upgrade image.

A target device is any upgradeable telephony device that is capable of receiving and storing the upgrade image and then rebooting using the upgrade image e.g. server IP phone switch and the mobile phone e.g. the mobile phone is a smart phone . In one embodiment the target device comprises or is communicatively coupled to a storage device e.g. flash memory hard drive etc adapted to have dual image storage. Dual image storage is described in further detail with reference to and e.g. storage and storage and upgradeable telephony devices are described in further detail with reference to e.g. element A . In one embodiment the target device comprises a manager module and a schedule module as described with reference to .

In one embodiment the target device implements the upgrade image without rebooting the entire target device. For example the target device stores and executes a shell that boots up an operating system comprised within the target device. The target device further comprises a stored active image and a stored upgrade image. The shell comprised within the target device implements the upgrade image by rebooting the upgrade image using the operating system so that the entire target device does not need to be rebooted to implement the upgrade image. A person having ordinary skill in the art will recognize that the there are other ways of implementing the upgrade image at the target device.

In another embodiment the mobile phone is the target device and the switch A acts as a gateway from which the mobile phone can download or upload the upgrade image via the mobile data network and the IP network .

In one embodiment the storage A includes data that is accessed by the switches A B C in order to operate. For example the storage A includes data described with reference to as stored in the switch storage module . In the illustrated embodiment the storage device is directly coupled to the server . In an alternate embodiment the storage device is coupled to the server via the network or via a LAN communicatively coupled to the site A . Although the storage device A is depicted in as being at the same site A as the other telephony devices in one embodiment the storage device A is located at a different geographic location and the server A is communicatively coupled to the storage device A and adapted to communicate with the storage device A via the network .

One skilled in the art will appreciate that additional networking devices not shown can be added to the first site A for example if needed to support additional endpoints servers A switches A or other systems. For example the first site A can include a second switch and an edge router to couple the first site A to the network and to provide local area connectivity for the first and second switches . One skilled in the art will also recognize that numerous configurations of switches and communication links are contemplated. For example PSTN links can be coupled to multiple switches at several points within the topology and soft switches can also be used.

As shown in the upgrade director is communicatively coupled to the network . At a high level the upgrade director 1 communicates with the image server cluster to set up servers element in to download the upgrade image and 2 transmits commands to the target devices so that the upgrade director manages the process of upgrading the target devices to the upgrade image. A person having ordinary skill in the art will recognize that the upgrade of a target device can be a push or a pull operation. For example in a push operation the server element in downloads the upgrade image to the target device whereas in a pull operation the target device downloads the upgrade image from the server element in . The upgrade director has additional functionality as described below with reference to . In one embodiment the upgrade director is a hardware device having a processor a non transitory computer readable memory and a network interface for communicating with the network . For example the upgrade director is a server similar to server that stores computer readable code comprising instructions for performing the functionality of the upgrade director .

The image server cluster is one or more image servers see also similar to server that host the upgrade image. An image server is communicatively coupled to the network and includes among other things a processor a tangible non transitory computer readable memory and a communication interface for communicating with the network . As described in further detail below one or more target devices access the image server and download the upgrade image. In one embodiment the image servers are located at geographically disparate locations relative to one another. The image server cluster is discussed in further detail with reference to .

The data cluster is a cluster of databases see also stored on storage devices similar to the storage device . The databases are each communicatively coupled to the network . The databases store the upgrade image and the active image and work with the image servers to download the upgrade image to the upgradeable telephony devices responsive to commands received from the upgrade director . In one embodiment the databases are located at geographically disparate locations relative to one another. The data cluster is discussed in further detail with reference .

Referring now back to the second site B includes endpoints analog phone B IP phone B software phone B a switch B a server B and a storage device B. The third site C includes IP phone C and a switch C. The elements of the second site B and the third site C work similar to the elements of the first site A described above and so that description will not be repeated here. Similar elements have similar reference numerals.

The third site C comprises an IP phone C and a switch C. These components are similar to those described above with reference to the first site A and the second site B so that description will not be repeated here.

A person having ordinary skill in the art will recognize that in one embodiment the system includes one or more third party servers not shown similar to server that provide third party applications to the endpoints analog phone IP phone software phone via the network and the switch .

Referring now to an embodiment of the switch according to one embodiment of the present invention is shown. The depicted switch is similar to switches A B and C described above for . In this embodiment switch is configured to implement features or functions of the present invention. In one embodiment the switch includes one or more processors not shown . The processor can be a conventional processing device such as a general purpose microprocessor. In a different embodiment the switch does not include a processor but is instead controlled by a processor comprised within a server at the same site and or a server at a different site . Switch also includes a non transitory computer readable memory. The memory stores among other things software and routines not shown conventionally used to operate a switch in a VoIP telephony system . For example the switch includes software routines for performing call monitoring transferring calls placing calls on hold establishing hunt groups automated attendant functions etc. The memory also stores program instructions or functional units that implement the features of the present invention. The switch also includes a switch storage module and a call manager .

The switch storage module is a memory for storing data and information. For example the switch storage module stores data and information utilized by the call manager to perform its functions. In one embodiment the switch storage module is a tangible non transitory computer readable memory e.g. flash memory . The switch storage module is communicatively coupled to the call manager via signal line . In one embodiment the switch storage module is a portion of the memory of the switch .

In the depicted embodiment the switch storage module comprises an active storage an upgrade storage and a manager module . The active storage is a portion of the switch storage that stores the active image utilized by the switch to perform its functions. The upgrade storage is a portion of the switch storage that stores the upgrade image that is downloaded from the image server. The switch downloads the upgrade image from the image server see and stores the upgrade image in the upgrade image storage .

The manager module is codes and routines stored on the switch storage module and executable by the processor comprised within the switch to cause the processor to schedule an upgrade event with the upgrade director receive commands from the upgrade director and initiate processes responsive to the commands received from the upgrade director . The manager module comprises a schedule module for determining a delay parameter. The manager module and the schedule module are comprised within the upgradeable telephony device. In the upgradeable telephony device is the switch . A person having ordinary skill in the art will recognize how the teachings of can be applied to other telephony devices.

In one embodiment the schedule module is a sub module of the manager module . In another embodiment the manager module is a component of switch storage and schedule module is comprised within the manager module . In one embodiment the schedule module 1 determines a delay parameter 2 receives a prepare to upgrade command from the upgrade director and then 3 waits a period of time specified by the delay parameter before causing the manager module to begin downloading the upgrade image from the image server described below with reference to . In one embodiment the manager module stores the determined delay parameter in a non transitory memory communicatively coupled to the manager module e.g. switch storage .

The schedule module communicates with the image servers and or one or more of the target devices to determine one or more delay parameters that specify the timing of an upgrade event for one or more of the devices . In one embodiment the schedule module schedules the upgrade events so as to minimize the impact on the network thereby reducing or preventing network flooding. The schedule module uses the delay parameter to schedule a download window for its upgrade image so that the possibility of a collision of its download window with that of another target device is minimized.

In one embodiment the schedule module calculates the delay parameter as a random number using for example a random number generator. For example the system is being upgraded and the length of the downtime allotted for upgraded the system is some predetermined amount of time e.g. 20 000 seconds. The schedule module comprises a random number generator that is adapted to generate random number of a certain digit length e.g. a five digit random number. The random number generator is allowed to output one or more random numbers until the generator outputs a number less than the length of downtime e.g. . The schedule module determines the delay parameter to be the number generated by the random number generator e.g. 15 595 seconds.

In another embodiment each target device has a unique identifier and the schedule module uses the unique identifier to determine a delay parameter for the target device according to a unique identifier equation. The unique identifier equation is delay parameter Window ID Time Available for Downlaod . The Time Available for Download is calculated as Time Available for Download Time for System Upgrade total number of target devices . For example if there are two hours in which to perform a system upgrade and there are 100 target devices that must be upgraded each target device gets a download window of approximately 72 seconds in which to download the upgrade image i.e. 2 hours 3600 seconds 1 hour 100 devices 72 seconds per device . Thus in this example Time Available for Download 72 seconds per device. The Window ID is calculated by the equation Window ID target unique identifier MODULUS total number of target devices . The modulus operator that returns the remainder in the integer division. For example if the unique identifier is the number 9 and the total number of devices is 100 then the Window ID is 9 i.e. Window ID 9 MODULUS 100 devices 9 Thus in this example the Window ID is 9. If there are 200 devices then the Window ID is also 9 i.e. Window ID 9 MODULUS 200 devices 9 . Similarly if there are 250 devices then the Window ID is 9 i.e. Window ID 9 MODULUS 250 devices 9 . In another example the target unique identifier is 109 and there are 100 devices so that the Window ID is 9 i.e. Window ID 109 MODULUS 100 9 . A person having ordinary skill in the art will recognize that in the above described example the equation for calculating Window ID is a modulus equation that returns the remainder of dividing two integers.

Using the above examples the delay period for the target device having the unique identifier of 9 is 648 seconds i.e. delay parameter 9 72 seconds 648 seconds . In other words the target device will not begin to download the image upgrade until 648 seconds after receiving the command to begin the download e.g. a prepare to upgrade command . Accordingly the Windows ID spreads out the devices into different download windows so that the network is not likely to experience network flood as described above due to too many devices downloading the upgrade image during the same or an overlapping time period.

In one embodiment the schedule module determines one or more delay parameters by determining 1 a number of upgrade events that will occur when upgrading the telephony system 2 the bandwidth usage for one or more upgrade events 3 other event occurring on the network cotemporaneous to the upgrade event and 4 timing for the one or more upgrade events so that impact on the network caused by the upgrade events is reduced to an acceptable level i.e. the network still has adequate bandwidth to perform other operations or the network has adequate bandwidth to perform the upgrade events in an acceptable time frame . The result of this determination is a delay parameter.

In another embodiment the schedule module is comprised within the upgrade director see and the manager module receives signals from the upgrade director including data indicating a time at which the switch should begin download of the upgrade image from an image server. The time can be a specific time e.g. Jan. 1 2011 2 00 am Coordinated Universal Time UTC or a range of times e.g. from Dec. 25 2010 2 00 am UTC to Jan. 1 2011 4 00 am UTC for the switch to begin the download of the upgrade image. The manager module stores this information in the switch storage and then at the time specified by the schedule module comprised within the upgrade director begins the download of the upgrade image.

In one embodiment the upgrade occurs without calculation of a delay parameter. For example a first manager module is comprised within a first target device and a second manager module is comprised within a second target device. The first manager module issues a command to the second manager module to start the download after the first target device is completed downloading the upgrade image. Accordingly in one embodiment the upgrade occurs for the second device without need to calculate the delay parameter.

In one embodiment the schedule module determines the delay parameter so that two or more target devices share a common window of time for downloading the upgrade image but the number of target devices that share the same download window is optimized so that the network does not experience a network flood event as described above.

The manager module receives signals from the upgrade director including data indicating which image server the switch should download the upgrade from. This is referred to herein as setting up the image servers . The process of setting up the image servers is discussed in more detail with reference to the image server module described below for . The manager module stores this data in the switch storage and then causes the switch to download the upgrade image from the specified image server at a time consistent with the delay parameter.

The switch storage is coupled by a signal line to the server . The server uses the signal line to download information to the switch storage module . The information downloaded by the server includes the information noted above to allow the call manager to perform its functions. In one embodiment the server downloads to the switch the upgrade image and the various commands relating to the upgrade process.

A device such as the processor of the switch runs the call manager software application and is coupled to and controls one or more endpoints e.g. and with which it is associated. While shown as operational and as part of the switch in those skilled in the art will recognize that in other embodiments the call manager may be operational as a separate module in a site A or as part of a server A.

Although in the illustrated embodiment each site has only one call manager comprised within the switch in other embodiments the site has a different number of call managers . Also more than one call manager can control the same endpoint. The association between a call manager and an endpoint that it controls is accessed through the server . Furthermore although not shown the second switch includes its own call manager .

In one embodiment the trunk is a SIP trunk and provides connectivity to SIP compatible devices. One having ordinary skill in the art will recognize that network also provides connectivity for SIP compatible devices.

As shown in the call manager is coupled to the PSTN or SIP trunk and the network . The call manager comprises an extension module a trunk module a location service engine and a bandwidth manager . In one embodiment the manager module described above is a module comprised within the call manager .

The extension module communicates with endpoints coupled to the call manager in order to allow a user to perform call related functions on an endpoint. In addition the extension module is used to communicate with other call managers in the telephony system .

The trunk module is coupled to and controls the interaction between the endpoints and and the PSTN or SIP trunk . In particular the call manager switch is often coupled to a trunk line. The trunk module of the call manager manages the usage of the trunk line by multiple endpoints and and optimizes the usage of the trunk line. The trunk module also manages trunk services such as caller identification direct inward dial etc.

The location service engine resolves the dialed numbers converts raw dialed digits into routable contacts and routes the call to the destination endpoint such a phone trunk hunt group auto attendant pickup group etc.

The bandwidth manager is coupled to the network and allocates bandwidth necessary to support calls handled by the call manager .

In one embodiment one or more of the above described components of the call manager i.e. the extension module trunk module location service engine bandwidth manager are codes and routines stored on a memory comprised within the switch and executable by the switch s processor to provide the functionality described above.

In another embodiment one or more of the above described components of the call manager are a specialized hardware devices configured to perform the function of the particular components. For example one or more of the manager module schedule module extension module trunk module location service engine and bandwidth manager is a combination of one or more electronic circuit boards configured to provide the above described functionality for that component. In one embodiment the one or more electronic circuit boards that comprises the component includes one or more of 1 a processor 2 a non transitory computer readable memory e.g. flash memory a hard drive a buffer a circular buffer etc. communicatively coupled to the processor and 3 processor executable firmware stored on the non transitory memory.

The sites A B and C are described above for . Here in addition to the components shown in the sites A B and C are shown as comprising upgradeable telephony devices A B C respectively. The upgradeable telephony components comprise telephony components adapted to 1 download an upgrade image from one of the servers comprising the image server cluster 2 store the upgrade image and 3 reboot using the downloaded upgrade image. For example the upgradeable telephony devices A B and C include one or more of the server IP phone the software phone the switch and the storage device . A person having ordinary skill in the art will recognize that other upgradeable telephony devices are possible.

The upgrade director comprises an image server module a command module a graphical user interface module GUI module and a progress report module . In one embodiment the upgrade director also includes a schedule module as described above with reference to . The schedule module is depicted with dashed lines to indicate that it is an optional feature of the upgrade director .

The image server module communicates with the image server cluster to set up the image servers for an upgrade event for one or more of the upgradeable telephony devices A B C. An upgrade event is the process of one or more target devices downloading an upgrade image and then at a later time rebooting using the upgrade image. The upgradeable telephony devices are telephony devices within the system that have the necessary hardware to enable them to download the upgrade image. One or more of the upgradeable telephony devices receives an initiate upgrade command from the upgrade director . The initiate upgrade command indicates which of the upgradeable telephony devices will be downloading the upgrade image. The upgradeable telephony devices that receive the initiate upgrade command from the upgrade director are referred to as target devices. In one embodiment less than all the upgradeable telephony devices in the system receive an initiate upgrade command.

The image server module is communicatively coupled to the network . In one embodiment the image server module determines which of the image servers a particular target device e.g. a switch A should communicate with when downloading the upgrade image. For example the target devices and the image servers are organized into a tree based hierarchy and the image server module 1 determines a proximity of a target device relative to one or more of the image servers 2 determines which of the image servers is has the nearest proximity to the target device in the hierarchy and 3 sends a message to the target device indicating which image server that target device should access when downloading the upgrade image so that the target devices accesses the image server having the nearest proximity to that target device.

In one embodiment the image server module sends a message to each target device e.g. the switch with instructions specifying which image server the target device should communicate with for downloading the upgrade image. The target device then stores the message and downloads the upgrade image accordingly after receiving a command from the upgrade director to begin the download.

In one embodiment the image server module determines from the upgradeable telephony devices that is suitable for use as an image server and then configures that device to function as an image server . For example the image server module determines which device has a predetermined processing power and or predetermined bandwidth and then configures that server to function as the image server . A copy of the upgrade image is downloaded to the device and so that the device can download the upgrade image to target devices.

The display device is a conventional display device e.g. a computer monitor a display on a phone etc . The input device is a conventional input peripheral e.g. a keyboard a mouse etc. . The display device and the input device are communicatively coupled to the GUI module . In one embodiment the display device and the input device are communicatively coupled to a processor based device such as a personal computer. In another embodiment the display device and the input device are components of a processor based smart device e.g. a smart phone an IP phone etc. or a processor based tablet device e.g. a tablet computer . In one embodiment the display device is a touch sensitive display and the input device is hardware comprised within the display device .

The command module sends commands to the target devices and the image servers . In one embodiment the command module is communicatively coupled to the target devices via network the graphical user interface module and the general storage . The graphical user interface module receives a signal from a user of the input device and passes the signal to the command module . The command module communicates the command specified by the signal to one or more of the target devices. Examples of commands communicated by the command module to the target devices include one or more of a prepare to upgrade command an upgrade command and a rollback command. For example a prepare to upgrade command causes a target device to calculate the delay parameter and then download the upgrade image responsive to the delay parameter. The upgrade command causes the target device to implement the downloaded upgrade image e.g. reboot using the upgrade image . The rollback command causes the target devices initiate a rollback event. A person having ordinary skill in the art will recognize that other commands are possible.

A rollback event is an event whereby a target device that has already rebooted to an upgrade image reverts from the upgrade image to the active image i.e. the image previously used by the target device and stored in the active storage referred to above as the old image . In one embodiment the GUI module receives an input from a user of the input device indicating that a rollback event is to occur. The GUI module signals to the command module that a rollback event is to occur. The command module sends a rollback command to one or more target devices and the target devices begin the rollback event responsive to receiving the rollback command. For example the target device stores both the upgrade image and the active image and the target device reboots using the active image instead of the upgrade image. In one embodiment the target device deletes the upgrade image responsive to receiving the rollback command.

The GUI module is adapted to expose a graphical user interface on the display device . The GUI module module is communicatively coupled to the general storage the display device and the input device . The general storage stores GUI data that is retrieved by the GUI module and used by the GUI module to generate and expose a GUI on the display device . Examples of GUIs are discussed with reference to .

The user of the display device provides an input using the input device responsive to a GUI exposed on the display device e.g. a mouse input indicating that prepare to upgrade command should be sent . The GUI module passes this input as a signal to the command module and the command module which in turn sends a command to a target device responsive to the input.

The progress report module tracks the progress of the upgrade event and stores progress data describing the progress in the general storage device . The GUI module retrieves the progress data. The GUI module generates graphics responsive to the progress data and causes the graphics to be displayed on the display device . For example the graphic is a graph showing one or more of 1 a percentage of the upgrade devices that have downloaded the upgrade image 2 a percentage of the upgrade devices that have downloaded the upgrade image and rebooted using the upgrade image 3 a percentage of the upgrade devices that have began the download of the upgrade image and 4 for one or more upgrade devices a percentage of the upgrade image that has been downloaded to the one or more upgrade devices. In one embodiment the progress report is generated using progress data received from the target device. The progress reports are stored by the progress report module in the general storage as progress data. In one embodiment the progress data includes codes and routines executable by a processor for causing a progress report graphic to be displayed on the display device .

In one embodiment the upgrade director comprises a schedule module as described above for and the schedule module determines a delay parameter for each target device. The schedule module is communicatively coupled to one or more target devices and transmits the delay parameters to the target devices. The schedule module is depicted with a hash line in because it is an optional feature of the upgrade director .

In one embodiment the above described modules e.g. the manager module the schedule module the image server module the command module the GUI module and the progress report module are processor executable codes and routines stored on one or more non transitory computer readable mediums e.g. flash memory hard drive switch storage general storage that when executed by a processor provide the functionality described above with respect to each module. For example the modules are processor executable code stored on a computer readable medium that when executed by a processor e.g. a processor comprised within an upgradeable telephony device upgrade director or personal computer performs steps that provide the above described functionality. In another embodiment the above described modules are hardware components configured to provide the functionality described above with respect to each module. For example the modules are specially configured circuit boards that provide the above described functionality.

The image server cluster comprises one or more image servers A B C D E. In the depicted embodiment the image server cluster comprises five image servers A E. In another embodiment the image server cluster comprises a different number of image servers A E. In one embodiment the different image servers A E that comprise the image server cluster are located at different geographic locations and or sites A B C.

The upgrade image servers are conventional servers that host the upgrade image for the different upgradeable telephony devices . The image servers download the upgrade image to the upgrade storage devices that comprise the data cluster see . The image servers downloading the upgrade image to the target devices is described in further detail with reference to .

In one embodiment the image servers A E are organized into a hierarchical structure that includes the upgradeable telephony components so that the image server module can determine proximity between a target device and an image server A E and the target devices can download their upgrade image from an image server A E that is closest in proximity within the image server hierarchy. For example the upgradeable telephony devices at the sites A B C and the image servers A E are organized into a tree based hierarchy. One of the sites A B C is a parent site i.e. root site that has any number of child sites e.g. any number of the sites A B C that are not the parent site thereby forming a hierarchy. Any number of the sites A B C has zero or more image servers and or zero or more upgradeable telephony devices. The image server module determines the proximity of a first image server relative to a target device by counting the number of steps between the first image server and the target device. The image server module determines that the nearest proximity image server for a target device is the image server that is the fewest steps away from the target device. If the first image server is at the same site A B C as the target device then the first image server is determined by the image server module to be the nearest proximity image server . If the image server module determines that there is no imager server at the same site A B C as the target device then the imager server module analyzes the hierarchy and determines that the nearest proximity imager server is the image server that is the fewest steps away from the target device. A person having ordinary skill in the art will recognize that other methods for determining proximity are possible without deviating from this embodiment of the present invention.

In one embodiment the GUI module exposes a GUI on the display device that enables the user of the display device to provide input using input device that modifies the organization of the image servers that comprise image cluster .

In one embodiment the image servers A E are File Transfer Protocol servers FTP servers and the image is pulled down by the target device using file transfer protocol. For example the image server A is an FTP server and the mobile phone is the target device. Persons having skill in the art will recognize how the mobile phone pulls down the upgrade image from the image server via the mobile data network and the IP network using the switch A as a gateway to communicate with the image server . In another example the switch A does not act as a gateway there is no IP network and the mobile data network is communicatively coupled to the network . In this example the mobile phone pulls down the upgrade image in a manner known to those having skill in the art.

In another embodiment the image servers A E run a handshake routine in which the target device handshakes with and an image server A E determines a request to download the upgrade image and then pushes the upgrade image to the target device included in the handshake. For example the image server B handshakes with the IP phone A. The IP phone A is the target device and the image server B is the image server. The image server B interprets the handshake as a request to download the upgrade image. The image server B pushes the upgrade image to the IP phone A via the network .

In another embodiment the upgrade storage A B C stores a copy of the active image data stored in the active storage A B C and the active image data stored in the upgrade storage A B C is used as the image data for the system after the upgrade event is concluded so that the upgraded target devices function correctly and settings that were effective prior to the upgrade event are preserved.

The data stored in the upgrade storage modules A C is referred to as the upgrade image data. In one embodiment the upgrade image data is in sync with the active image data until the upgrade image is activated i.e. until the target devices reboot using the upgrade image . For example the active data stored within the active storage A B C is ported to the new schema of the data stored in the upgrade storage A B C and when the active data is changed or modified the upgrade data is changed or modified so that the upgrade data is equivalent to the active data. In another example active image data stored in the upgrade storage A B C is used as the upgrade image data following the upgrade event as described above and so the upgrade image data is in sync with the active image data in this way.

In the depicted embodiment the data cluster comprises three active storage modules A B C and three upgrade storage modules A B C. In another embodiment different numbers of active storage modules and upgrade storage modules are comprised within the data cluster . The individual active storage modules and the individual upgrade storage modules are communicatively coupled to the network via one or more signal lines . In one embodiment the active storage modules and upgrade storage modules are located at different geographic locations.

In one embodiment the different active storage modules and upgrade storage modules are conventional non transitory computer readable storage devices e.g. flash memory hard drives or databases that are communicatively coupled to transmit data to the upgradeable telephony devices .

In the depicted embodiment the upgradeable telephony devices A comprise the following target devices an IP phone A a software phone A a switch A a server A and a storage device A. The individual target devices are coupled to the network via signal line A and configured to communicate with the image server cluster the data cluster and the upgrade director .

The IP phone A software phone A switch A server A and storage device A are similar to those described above for . The switch A is described above with reference to . Here the IP phone A software phone A server A and storage device A comprise an active storage and an upgrade storage similar to the active storage and the upgrade storage described above for . The active storage is a portion of a conventional non transitory computer readable memory that stores the active image for the target devices. The upgrade storage is a portion of a conventional non transitory computer readable memory that stores the upgrade image that is downloaded from the image servers .

The IP phone A software phone A switch A and server A further comprise a manager module . The manager module is similar to the manager module described above for so that description will not be repeated here. The manager module includes a schedule module not pictured . The second site B and the third site C comprise components similar to the first site A so that description will not be repeated here.

A person having ordinary skill in the art will recognize that the above described system can be used in one embodiment to upgrade files or a group of files stored on the target device. For example the image servers host an upgrade for an application that is stored on the target device. The target device sends a message to the image server indicating that the target devices will download the upgrade for the application. The target devices downloads the upgrade for the application e.g. using a push or pull methodology known to those having skill in the art and implements the upgrade application similar to the above described embodiment related to the upgrade image.

The manager module then calculates a delay parameter. The manager module then sends a download confirmation to the upgrade director to confirm that the download is presently occurring. For example the manager module sends a firmware mismatch upgrade downloading event to the upgrade director . The upgrade director receives the download confirmation. The upgrade image is stored in the upgrade storage of the target device.

The manager module calculates the progress of the download and sends a progress message to the upgrade director . The upgrade director receives the progress message. In one embodiment the progress report module uses the progress message as progress data that is used to generate progress reports as described for .

The manager module sends a message to the upgrade director confirming that the download is complete. For example the manager module sends a firmware mismatch upgrade ready message to the upgrade director . The upgrade director receives the message confirming the completed download of the upgrade image.

The upgrade director receives an upgrade conclusion input from the GUI module indicating that the upgrade event is to conclude. The upgrade conclusion input is generated by the GUI module responsive to the GUI module receiving an input from a human user of the display device indicating that the target device is going to switch to the upgrade image stored in the upgrade storage . This input can be provided at the user s convenience any time after the download of the upgrade image to the target device is complete. The command module sends an upgrade command to the target device. The target device receives the upgrade command and switches over to the upgrade image. For example the target device reboots using the upgrade image stored in the upgrade storage .

In one embodiment the upgrade conclusion input described with reference to step is automatic so that an input from a human user is not required. For example the upgrade director is configured so the upgrade director 1 receives a message confirming the completed download of the upgrade image and then automatically 2 retrieves a time delay data stored in storage device and 3 sends the upgrade conclusion input to the manager module after expiration of the predetermined period of time indicated by the time delay data.

In one embodiment the upgrade directory monitors the image upgrade download for multiple target devices and automatically sends the upgrade conclusion input response to the completion of the downloads for the monitored target devices.

The method depicted in are performed by the target device. The manager module at the target device receives the upgrade initiation signal from upgrade director . The manager module sends the upgrade confirmation signal to the upgrade director . In one embodiment the manager module determines whether dual image storage is supported by the target device. If dual image storage is not supported by the target device the method ends. For example the manager module sends an error signal to the upgrade director . The manager module determines the delay parameter. The manager module sends a confirmation signal that the download is presently occurring to the upgrade director . The target device downloads the upgrade image from the image server . If the manager module has received a message from the image server module indicating which image server that target device should access for downloading upgrade image then the target device downloads the upgrade image from the image server indicated by the message the image server message . The target device stores the upgrade image in the upgrade storage . Since the target device has duel storage capability the manager module stores the upgrade image in the upgrade storage and the active image continues to be stored in the active storage . The target device continues to operate using the active image for period of time.

The manager module calculates the progress of the download and sends the progress message to the upgrade director . The manager module determines whether the download is complete. If the download is not complete the method returns to step . If the download is complete the manager module sends a message to the upgrade director confirming that the download is complete e.g. a firmware mismatch upgrade ready event . After a lapse of time the manager module receives the upgrade command from the upgrade director . The manager module implements the upgrade image. For example the manager module causes the target device to reboot using the upgrade image instead of the active image. In one embodiment the manager module receives a rollback command sent by the command module and the manager module causes the target device to revert back to the active image. For example the manager module causes the target device to reboot using the active image instead of the upgrade image. In one embodiment following reversion to the active image the manager module causes the target device to delete the upgrade image.

As described above in one embodiment the target device implements the upgrade image without rebooting the entire target device. For example the target device stores and executes a shell that boots up an operating system comprised within the target device and implements the upgrade image using the shell as described above.

The foregoing description of the embodiments of the present invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the present invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the present invention be limited not by this detailed description but rather by the claims of this application. As will be understood by those familiar with the art the present invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise the particular naming and division of the modules routines features attributes methodologies and other aspects are not mandatory or significant and the mechanisms that implement the present invention or its features may have different names divisions and or formats. Furthermore as will be apparent to one of ordinary skill in the relevant art the modules routines features attributes methodologies and other aspects of the present invention can be implemented as software hardware firmware or any combination of the three. Also wherever a component an example of which is a module of the present invention is implemented as software the component can be implemented as a standalone program as part of a larger program as a plurality of separate programs as a statically or dynamically linked library as a kernel loadable module as a device driver and or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming Additionally the present invention is in no way limited to implementation in any specific programming language or for any specific operating system or environment. Accordingly the disclosure of the present invention is intended to be illustrative but not limiting of the scope of the present invention which is set forth in the following claims.

