---

title: Dynamically mapping users to groups
abstract: Methods and systems for authenticating users and assigning authenticated users to groups are provided. A method receives a user credential and email address. The method forwards an authentication request including the email address and credential to a remote authentication provider. Based in part on the presence of a full user name in a received response, the method determines that the user is authenticated. Another method extracts a domain name from a received email address of an authenticated user. In response to determining that the domain name is associated with a group, the method assigns the user to the group. A system includes memory with instructions for assigning an authenticated user to a group. The system receives the user's email address and extracts a domain name from the email address. In response to determining that the domain name is associated with a group, the system assigns the user to the group.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09419959&OS=09419959&RS=09419959
owner: Adobe Systems Incorporated
number: 09419959
owner_city: San Jose
owner_country: US
publication_date: 20150211
---
This application is a divisional application of U.S. patent application Ser. No. 13 949 701 filed on Jul. 24 2013 the contents of which are incorporated herein in their entirety.

This disclosure relates generally to computer implemented methods and systems for user authentication and group management and more particularly relates to authenticating users based on email addresses and credentials and dynamically mapping users to groups in a hierarchical repository.

Some prior user authentication solutions require account credentials that are combinations of a user furnished password or personal identification number PIN and a generated security token. Some existing authentication solutions rely on smart cards or hardware tokens stored on a dedicated storage device. Such solutions typically require a dedicated authentication server which must be synchronized with the hardware tokens in order to generate time synchronized one time passwords or synchronous dynamic password tokens.

Traditional approaches to authenticating users employ Single sign on SSO techniques and or directory services accessed using the Lightweight Directory Access Protocol LDAP . SSO requires centralized dedicated authentication servers that all applications and computing devices in an environment must use for authentication. Because different resources and applications require different authentication protocols and mechanisms SSO systems must internally translate and store credentials differing from credentials used for initial user authentication. Due to their complexity and requirements for dedicated servers and proprietary software directory services and SSO systems are often expensive to implement and maintain.

Group membership is typically based on a system administrator explicitly adding users to groups. Traditional group management techniques rely on manual steps and processes for adding users to groups. Such techniques require significant resources from webmasters and or other information IT technology personnel such as system database and or network administrators. Some prior group management solutions map users to groups statically through use of pre determined configuration files. Such static mappings are done a priori and cannot dynamically map users to groups at runtime based on an email address or an organization determined when users log in. Existing group management solutions create new users when users log in for the first time and then manually add new users to groups. Some of these solutions initiate a work flow every time a new user logs in. The work flow requires manual steps of checking the user s information and explicitly adding the new user to a specific group after inspecting the information. Such prior solutions do not provide automated implicit runtime assignment of a user to a group based on the user s email address and or information retrieved from a third party.

In one embodiment a method for assigning a user to a group includes receiving at a computing device an email address associated with an authenticated user. The method extracts a domain name from the email address. The embodiment involves determining whether the extracted domain name is associated with at least one group. In response to determining that the extracted domain name is associated with the at least one group the method assigns the authenticated user to the at least one group.

In another embodiment a method for authenticating a user includes receiving at a computing device a resource request including account credentials and an email address associated with a user requesting the resource. The method forwards an authentication request to an authentication provider. The forwarded authentication request includes the received email address and at least a portion of the account credentials. The embodiment involves receiving at the computing device a response to the authentication request where the response includes at least a full user name associated with an authenticated user or an indication that the user is not authenticated.

In yet another embodiment a system has an input device a display device a processor and a memory. The memory has instructions stored thereon that if executed by the processor cause the processor to perform operations for assigning an authenticated user to a group. The operations include receiving an email address associated with an authenticated user and extracting a domain name from the received email address. The system determines whether the extracted domain name is associated with one or more of a plurality of groups. In response to determining that the extracted domain name is associated with at least one of the plurality of groups the system automatically assigns the authenticated user to the at least one of the plurality of groups.

These illustrative features are mentioned not to limit or define the disclosure but to provide examples to aid understanding thereof. Additional embodiments are discussed in the Detailed Description and further description is provided there. Advantages offered by one or more of the various embodiments may be further understood by examining this specification or by practicing one or more embodiments presented.

Methods and systems are disclosed for authenticating users and assigning authenticated users to groups associated with an entity.

In the context of computing systems user accounts and groups can be employed in order to control access to computing resources such as web site content software applications databases and files. For example when a request for a resource is initiated for example as an attempt to execute an application or access electronic content user account credentials may be required. A user can be granted permissions to access computing resources based on the user s membership in a group. Users can be automatically assigned to groups based in part on a configuration file. For example users authenticated using an open standard for authorization OAuth authenticator can be placed in an administrators group and other users authenticated using a Security Assertion Markup Language SAML authenticator can be placed in an authors group.

SSO which can be provided using LDAP can be used to for user authentication and for applying an entity s login code to the entity s computing resources. With SSO one password for a user account can be shared amongst multiple services. For example if the entity is a corporation SSO can be used to apply a corporate login code to the corporation s intranet web pages so that the corporation s employees login once onto corporate computing devices and then are automatically logged into and granted access to the corporation s intranet.

Embodiments provide methods and systems for authenticating users by submitting an authentication request including an email address and a credential to an authentication provider hosting a discoverable service in order to obtain a response with an authentication status and in cases where the user is authenticated a full user name. According to an embodiment the email address and credential can be received implicitly or explicitly as part of a resource request. The resource request can be a request to access a web page a digital asset or any other electronic content item. The email address can be an email address furnished by or associated with a user requesting a resource and the credential can be a password for a user account associated with the user. Credentials can also include for example a unique user identifier ID such as a user principal name UPN a full user name or a display name and one or more of a digital signature biometric data such as fingerprint minutiae a security token and a personal identification number PIN . In certain embodiments the discoverable service is an Autodiscover service and the authentication request is formatted as an Autodiscover request. Such an Autodiscover request can be sent to specific uniform resource locators URLs that include at least a portion of the domain part of the email address. The authentication status can be inferred based on successful or failed attempts to access the URLs and the presence of a full user name in an authentication response. The Autodiscover request can also be sent to an authentication provider hosting an Autodiscover service. Upon receipt of the Autodiscover request the authentication provider attempts to access the specific URLs and generates an Autodiscover response with an authentication status based on the results of attempts to access the one or more URLs. Some of the URLs can include portions of the domain part of the email address included in the Autodiscover request. In embodiments the Autodiscover response includes a full user name for an authenticated user. In certain embodiments an Autodiscover response for an authenticated user can include other user information such as for example group membership s role s organization information office location phone number s department and or other information from a global address list GAL record corresponding to the authenticated user. The server sending the response can be a back end server such as an enterprise email server. In non limiting embodiments the server is a Microsoft Exchange server or a server configured to run an IBM Notes or Lotus Notes application from IBM.

Exemplary methods and systems disclosed herein automatically establish implicit user group associations for authenticated users thus dramatically increasing operational efficiency as compared to traditional explicit user group associations carried out by manual operations. Certain embodiments can make group assignments by retrieving a user s organization information from a third party having a profile for the user and then matching the user s organization information to an existing group in a hierarchical group repository. Additional or alternative embodiments assign an authenticated user to a group based on matching a domain subdomain or regular expression regex extracted from the user s email address to a mapping of the domain subdomain or regex to a group in a predefined mapping table. Extracted domains and subdomains can include portions or all of a domain part of a user s email address where the domain part includes all characters in the email address following the sign character. An extracted regex can comprise a sequence of characters from the domain part of the user s email address such as a substring from the domain part.

In accordance with embodiments a user s retrieved organization or affiliation information from a user profile can be used to dynamically add an authenticated user to a group. Certain embodiments can retrieve a user s organization name from a third party provider such as for example an email server and then place the user in a group if a matching organization name is found in a hierarchical group repository. Additional or alternative embodiments automatically assign a user to one or more groups based on matching a domain subdomain or regex extracted from an authenticated user s email address with a group in a predefined mapping including mappings i.e. bindings of domains subdomains and regular expressions to groups. For example an authenticated user with an email address having a domain part including adobe.com can be automatically added to an Adobe employee group provided the adobe.com domain has been bound to the Adobe employee group in a predefined domain group mapping. In additional or alternative embodiments if the domain part of the address includes a country code second level domain or regex indicative of a country or region the user can be automatically mapped to an entity s group associated with that country or region. For example if an authenticated user s email address includes the adobe.com.br or adobe.co.uk domains that user can be mapped to Adobe groups for employees in Brazil or the United Kingdom respectively. Also for example if a user s email domain part includes the subdomain sales.adobe.com that user can be added to Adobe sales staff group. In embodiments assignments based on a domain or subdomain extracted from an email address can be attempted if organization information was either not retrieved or not matched with an organization in the hierarchical group repository. According to these embodiments a group assignment based on an email address is attempted as a fall back in response to determining that a group assignment based on retrieved organization information was not performed.

The group assignments performed by the exemplary systems and methods disclosed herein are dynamic in that they are based on organization information and or an email domain of a user that is not known until a runtime user logon. The user logon can be an explicit logon whereby the user furnishes credentials including an email address via a user interface. Alternatively the user logon can be implicit as part of a resource request initiated by the user. Such implicit logons include an email address and at least one other credential but the credentials may not be explicitly entered by a user. For example the credentials may be known and sent with a resource request based on the context of the request such as a particular client computing device or application the request is submitted from. In these cases the user may have previously furnished credentials i.e. to access an entity s intranet from a particular web browser application executing on a particular client computing device .

Embodiments disclosed herein provide automated methods and systems for authenticating users and assigning authenticated users to groups associated with an entity. Permissions and privileges can be aggregated into roles or groups. Groups can have defined configurable rights permissions and privileges associated with them. Authenticated users assigned or added to groups by the methods and systems disclosed herein are granted the rights permissions and privileges afforded to members of the respective groups. In certain embodiments rights permissions and privileges can be aggregated into logical objects such as roles which can be granted to users or associated with groups. Exemplary groups and roles can include but are not limited to system administrator system support creator author account administrator user developer network administrator database administrator manager guest contractor and other. Groups can be associated with an entity or a subset of an entity. According to embodiments an entity can be for example one or more of a business an association an educational institution a government an organization or a department division agency or subset of an entity. Exemplary subsets of a business entity can include for example an information technology IT group a sales group a management group and a secretarial group. Exemplary divisions of a business entity can include manufacturing research and development R D marketing legal and regional or geographic divisions associated with the entity s office locations supplier locations markets or employee locations. In cases where an entity is an educational institution exemplary groups or roles can include but are not limited to student faculty member learner instructor mentor staff alumni prospective student admitted student guest researcher administrator observer and other.

In certain embodiments an administrator using an administrator user interface UI can establish and configure a hierarchical repository of groups for an entity as well as mappings of domains subdomains and regular expressions to groups in a mapping table. Exemplary groups can include one or more administrator groups whose members are granted read write execute and delete permissions i.e. rights for electronic resources and assets associated with the entity as well as privileges to create modify and delete directories file systems users and groups. The hierarchical repository can include author groups with respective subsets of administer resource permissions such as for example read and write permissions with limited delete permissions. The hierarchical repository can also include contractor or non employee groups with limited read and write permissions as well as guest or anonymous groups with minimal permissions and privileges. Embodiments perform user authentication using third party authentication providers and use an application programming interface API to access the hierarchical content repository storing user and group data. In one embodiment the hierarchical repository can be accessed via the Content Repository API for Java JCR specification.

As used herein the terms JCR repository and JCR are used interchangeably to refer to a content repository that is compliant with the JCR specification. In embodiments a JCR repository is compliant with a specification developed under the Java Community Process via a Java Specification Request JSR . In certain embodiments a JCR repository compliant with the JSR 170 specification can be used as a hierarchical repository for group and user data including group and user metadata. An exemplary JCR repository can be implemented as an object database including a tree of nodes having associated properties. One example of a JCR repository is the Adobe Content Repository Extreme CRX Enterprise Content Management ECM platform. The JCR repository can be implemented within a composite content applications platform configured to natively manage content in the JCR repository. The JCR repository can include a web application framework based on Representational State Transfer REST principles i.e. a RESTful web application framework . Certain embodiments of the JCR repository allow connectivity for user authentication according to one or more of the Content Management Interoperability Services CMIS standard the Web Distributed Authoring and Versioning WebDAV extension of the hypertext transfer protocol HTTP a Common Internet File System Server Message Block CIFS SMB application layer network protocol the Java Remote Method Invocation RMI API WebDAV with JCR extensions i.e. DavEx and an LDAP application protocol. Another exemplary JCR repository is the Apache Jackrabbit content repository for Java platforms. According to embodiments as users are created and authenticated they can be added to the hierarchical repository and automatically mapped to at least one group in the repository based on a domain extracted from their email address.

In embodiments a hierarchical repository of users and groups can be embodied as a globally accessible repository for managing access to electronic content i.e. digital assets and web based applications for creating managing and delivering personalized online experiences to users. Certain embodiments of the user authentication and group assignment systems described herein can be implemented as part of Adobe Experience Manager formerly Adobe CQ . Adobe Experience Manager can work with third party authentication providers as part of a content management platform for providing web content management and electronic document security. Adobe Experience Manager allows content access policy creation and group administration through the use of domain creation within an entity. Embodiments allow group management and administration via Adobe Experience Manager using domains created external to an entity. Embodiments implemented within Adobe Experience Manager are configured to work with third party authentication servers including synchronized multiserver authentication server environments. Adobe Experience Manager document security features can implement the user authentication techniques described herein by leveraging existing directory services such as LDAP Microsoft Active Directory AD and Microsoft AD Domain Services AD DS to authenticate user account credentials. Directory services can provide an organized set of records such as a pre defined hierarchical structure or arrangement of information about resources.

In yet another embodiment an automated process implements user authentication and dynamic user group assignments within a web application framework such as for example Adobe Experience Manager. In one embodiment a RESTful web application framework can leverage a JCR repository as a content storage platform and provide an extensible scriptable web application content delivery platform. The RESTful web application framework can be accessed via a RESTful web API or web service. One non limiting implementation can include a Adobe Experience Manager web application content delivery platform running inside a runtime Open Services Gateway initiative OSGi framework. As would be understood by those skilled in the relevant art s the OSGi framework from the OSGi Alliance include specifications for a modular component system and service platform for the Java programming language. In an example implementation Adobe Experience Manager can use an Apache Sling framework to authenticate Hypertext Transfer Protocol HTTP requests where a Sling authentication handler validates credentials against a third party provider or system in order to authenticate a user. As would be understood by those skilled in the relevant art s Apache Sling is an open source web framework for Java platforms. Apache Sling allows creation of content centric applications that use JCR content repositories. Once the user is authenticated by the third party provider an embodiment creates a new user in the JCR repository as necessary. The JCR repository can be a hierarchical repository for group and user data. Embodiments can authenticate a user by generating and exchanging an authentication request and response with an authentication provider. Exemplary authentication request response exchanges can use an open standard for authorization OAuth protocol or an OAuth Authorization Framework. Additional or alternative embodiments can use a Security Assertion Markup Language SAML protocol for authentication request response exchanges such that authentication requests are formatted as SAML requests and the corresponding responses are formatted as SAML responses. Embodiments can supplement Adobe Experience Manager s ability to add users to groups by allowing dynamic assignments of users to groups at runtime i.e. as users are created and authenticated where the assignments are based on mappings of domains extracted from user email addresses to one or more groups.

According to embodiments user authentication can be performed in part by leveraging discoverable services based upon providing an email address and a credential with an Autodiscover request to a Microsoft Exchange server or request to a server running an IBM Notes or Lotus Notes application from IBM.

One embodiment provides a system that automates adding authenticated users to groups. The users can be added to groups based on a defined mapping including mappings i.e. bindings of a domain name subdomain and or a regular expression regex found in the user s email address to one or more groups. In certain embodiments the system automatically adds an authenticated user to at least one group associated with an entity based in part on determining that a domain name subdomain and or regex extracted from the user s email address is associated with the entity and correlating the extracted domain name subdomain and or regex to at least one group in the defined mapping that is associated with the entity. The defined mapping can be stored for example in a database or repository accessible by the system. The repository can be in memory or on disk. The system can retrieve modify and delete records from the defined mapping using database queries and commands. The system can include a display device and bindings in the mapping can be configured by an administrator via a user interface UI rendered on the display device. In embodiments the UI can be used to create new domain to group bindings delete existing domain group bindings and modify existing domain group bindings. For example the UI can also be used to create new subdomain to group bindings delete existing subdomain group bindings and modify existing subdomain group bindings. In additional or alternative embodiments the UI can be used to create modify and delete regex to group bindings. In one embodiment the bindings can be one to one such that a given domain name e.g. adobe.com subdomain e.g. support.adobe.com or regex e.g. adobe is mapped to a single group. Alternatively the bindings can be one to many such that a given domain subdomain or regex is mapped to multiple groups. Exemplary bindings can be based on a domain name or subsets thereof such as for example subdomains and regular expressions extracted from the domain part. For example the system can be configured to receive an email address associated with an authenticated user parse the email address to identify the domain part of the email address and then extract a domain name from the domain part. In additional or alternative embodiments the system can be further configured to extract one or more subdomains or regular expressions i.e. substrings included in the domain part. The system can then lookup bindings for the domain name subdomains and or regular expressions in the mapping.

In cases where an authenticated user s domain part includes a domain name a subdomain and or regex that is associated with multiple groups in the mapping embodiments can place an authenticated user in one group according to a sequence or hierarchy of rules. In one example embodiment an authenticated user can be added to a group based on the first match found in the following sequence 1 the user s organization retrieved from the user s IP Multimedia subsystem IMS profile or GAL record and an organization in a group repository 2 the user s email domain and a domain group binding in the mapping 3 a subdomain found in the user s email domain and a subdomain group binding in the mapping 4 a regex from the user s email domain and a regex group binding in the mapping and 5 a default group if configured for new users the user is a new user and none of rules 1 4 apply . In an embodiment rule 1 can be implemented with a user s organization retrieved from an authenticated user s record in a GAL of an email server. If rules 1 and 2 do not apply or are not satisfied rule 3 can be applied based on one or more subdomains extracted from the user s email domain. If rules 1 3 do not apply or are not satisfied rule 4 can be applied based on one or more regular expressions extracted from the user s email domain. In embodiments where an authenticated user is only added to a single group the authenticated user can be assigned to the first group matching rules 1 5 with the rules being applied sequentially in the order shown above.

One embodiment provides an administrator UI that a system administrator can use to manage dynamic mapping of users to groups. In certain embodiments references to groups are provided via the administrator UI instead of actual group data. As used herein the term metadata is used to refer to information associated with and generally but not necessarily stored with electronic content items such as group records and user entries in a repository that provides information about a property of the electronic content item. Metadata may include information uniquely identifying an electronic content item. Such metadata may describe a storage location or other unique identification of the electronic content item. For example metadata for a database table mapping domain names to groups may describe storage locations of the table and individual domain group mapping records. Metadata for a group entry in a repository can include rules for assigning users to the group. For example metadata can indicate hierarchical rules for automatically adding users to groups based on user email domains or subdomains. Such metadata can be a reference to a storage location of the domain group mapping table in a server system used to assign authenticated users to groups. One example of such a reference is a Uniform Resource Locator URL identifying the storage location on a web server associated with a web site. An exemplary administrator UI is described below with reference to .

An embodiment provides a system for user authentication and group assignment that includes a repository such as a data store or database for storing a hierarchical group repository such as a JCR. The group repository can store group data group metadata user data and user metadata. An example group repository is described below with reference to . The system also includes another data store with a mapping containing bindings of domains subdomains and regular expressions to groups. An example mapping is described below with reference to . The metadata can include characteristics and properties of users and groups. The user properties can include but are not limited to group membership s role s title demographic data organization affiliation s entity affiliation s geographic location department office location i.e. within a campus or building contact information such as alternative email address es phone number s facsimile number s and other user properties. The user properties can include data available in a GAL record for an authenticated user. Group properties can include but are not limited to role s resource permissions and rights such as read write rename delete and execute system privileges such as privileges to create delete or modify file systems directories users roles and groups and other group properties. User or group metadata may describe relationships between users and groups such as when a particular user was added to a group groups that a user is currently a member of and or groups a user was formerly a member of. In additional or alternative embodiments group and user properties and metadata can be stored separately from the repository such as in a GAL record for an authenticated user.

Unless specifically stated differently a user is interchangeably used herein to identify a user account a human user or a software agent. Besides a human user who requests resources a software application or agent sometimes needs to access and update resources such as web pages or other electronic content. The systems and methods disclosed herein can authenticate user accounts associated with both human users and software agents. Similarly the systems and methods disclosed herein are capable of assigning user accounts associated with human users or software agents to groups. Accordingly unless specifically stated the term user as used herein does not necessarily pertain to a human being.

Resources can be stored in network data servers file servers database servers cloud storage application servers and web servers. Application servers can include enterprise email servers servers hosting database management systems and cloud based servers hosting applications provided via a cloud service.

As used herein the term group refers to any set of users or software agents. Users assigned or added to a group are referred to herein as members of a group. As users are assigned i.e. added to a group they are granted one or more computing system resource rights privileges and or permissions associated with the group. If a user is removed from a group rights privileges and or permissions associated with the group are revoked from the user. In certain embodiments a user can be assigned to multiple groups. For example a server system can assign a user to multiple groups. In cases where a user is a member of multiple groups the user can be granted a superset of rights privileges and or permissions associated with the multiple groups. In alternative embodiments a system can apply a sequence of hierarchical rules to assign a user to only a single group.

As used herein the term role refers to any aggregation of resource rights privileges and or permissions that can be bestowed to users or software agents. In embodiments one or more roles can be associated with a group. In additional or alternative embodiments one or more roles can be granted directly to a user such that the user is granted the rights privileges and or permissions associated with the one or more roles.

As used herein the term electronic content refers to any type of resource or media that can be rendered for display on computing devices. Electronic content can include text or multimedia files such as images video audio or any combination thereof. Electronic content can also include application software that is designed to perform one or more specific tasks at a computing system or computing device. Computing devices include client and server devices such as but not limited to servers desktop computers laptop computers smart phones video game consoles smart televisions tablet computers portable gaming devices personal digital assistants PDAs etc. Electronic content can be streamed to downloaded by and or uploaded from computing devices. Electronic content can include multimedia hosted on websites such as Internet web sites intranet web sites standard web pages or mobile web pages specifically formatted for display on mobile computing devices. Electronic content can also include application software developed for computing devices that is designed to perform one or more specific tasks at the computing device.

Electronic content can be in the form of electronic content streamed from a server system to a client computing device. Streaming electronic content can include for example audiovisual content provided using a streaming protocol such as but not limited to real time messaging protocol RTMP HTTP dynamic streaming HDS Internet Protocol television IPTV and HTTP Live Streaming HLS .

As used herein the term user group assignment is used to refer to an association between a user account and a group wherein the user is a member of the group. User group assignments for authenticated users can be automatically determined based upon matching a domain subdomain and or regex from a user s email address to a group in a predefined domain group mapping. Automatic user group assignments can also be made based on dynamically determining a user s organization affiliation s via information received from an authentication provider. In embodiments multiple user group assignments are possible such that a single authenticated user can be assigned to multiple groups. In embodiments such multiple groups can be associated with one or more entities or divisions departments or subsets of the entities.

As used herein the terms asset and digital asset are used interchangeably to refer to an item of electronic content included in a multimedia object such as text images videos or audio files. As used herein the term image asset is used to refer to a digital image included in a multimedia object. One example of an image asset is an image included in a web page requested by a user. As used herein the term video asset is used to refer to a video file included in a multimedia object. As used herein the term text asset is used to refer to text included in a multimedia object. Exemplary resources can be embodied as a text asset an image asset a video asset or a combination of text image and or video assets. For example resources requested from client devices can include a text asset an email message an image asset.

In embodiments a group assignment system for automatically assigning a user to a group can be implemented as one or more modules configured to execute on a server or other computing device. The group assignment system can add an authenticated user to one or more groups based on mappings of domains to groups i.e. bindings of domains or organizations to groups in a mapping table or whitelist and hierarchical rules. The group assignment system can determine group assignments based on a domain extracted from an email address. For example an authenticated user having an adobe.com email domain can be added to a corporate Adobe group upon determining that a mapping table includes a record binding the domain adobe.com to such a group. The group assignment system can store domain group bindings in a database and store group and user data in a hierarchical repository.

As used herein the term network connection refers to a communication channel of a data network. A communication channel can allow at least two computing systems to communicate data to one another. A communication channel can include an operating system of a first computing system using a first port or other software construct as a first endpoint and an operating system of a second computing system using a second port or other software construct as a second endpoint. Applications and modules hosted on a computing system can access data addressed to the port. For example the operating system of a first computing system can address packetized data to a specific port on a second computing system by including a port number identifying the destination port in the header of each data packet transmitted to the second computing system. When the second computing system receives the addressed data packets the operating system of the second computing system can route the data packets to the port that is the endpoint for the socket connection. An application or module can access data packets addressed to the port. Resource requests with credentials authentication requests responses to authentication requests and requested resources can be sent via network connections and communications channels.

The features discussed herein are not limited to any particular hardware architecture or configuration. A computing device can include any suitable arrangement of components that provide a result conditioned on one or more inputs. Suitable computing devices include multipurpose microprocessor based computer systems accessing stored software that programs or configures the computing system from a general purpose computing apparatus to a specialized computing apparatus implementing one or more embodiments of the present subject matter. Any suitable programming scripting or other type of language or combinations of languages may be used to implement the teachings contained herein in software to be used in programming or configuring a computing device.

Referring now to the drawings is a block diagram depicting an example architecture and system implementing certain embodiments. In particular is a block diagram illustrating components of a user authentication and group assignment system . The example system includes a server configured to perform server side processing in response to inputs resource requests credentials and authentication responses received from an authentication provider via a network .

As shown in the user authentication and group assignment system includes client devices which can each include a processor communicatively coupled to a memory . User authentication and group assignment system includes server client devices and a network . Client devices are coupled to server via a network . Processors are each configured to execute computer executable program instructions and or accesses information stored in respective ones of memories . Server includes a processor communicatively coupled to a memory . Processor is configured to execute computer executable program instructions and or accesses information stored in memory . Processors and shown in may comprise a microprocessor an application specific integrated circuit ASIC a state machine or other processor. For example processor can include any number of computer processing devices including one. Processor can include or may be in communication with a computer readable medium. The computer readable medium stores instructions that if executed by the processor cause one or more of processors and to perform the operations functions and steps described herein. When executed by processor of server the instructions can also cause processor to implement the modules shown in . When executed by one or more of processors of client devices the instructions can also cause processor to render the user interface shown in on respective ones of display devices 

A computer readable medium may comprise but is not limited to an electronic optical magnetic or other storage device capable of providing a processor with computer readable instructions. Other examples comprise but are not limited to a floppy disk a CD ROM a DVD a magnetic disk a memory chip ROM RAM an ASIC a configured processor optical storage magnetic tape or other magnetic storage or any other medium from which a processor such as processor or processors can read instructions. The instructions may comprise processor specific instructions generated by a compiler and or an interpreter from code written in any suitable computer programming language. Non limiting examples of a suitable programming language can include C C C Visual Basic Java Python Perl JavaScript and ActionScript.

Client devices may also comprise a number of external or internal devices including input devices such as a mouse keyboard stylus touch sensitive interface. Client devices can also comprise an optical drive such as a CD ROM or DVD drive a display device audio speakers one or more microphones or any other input or output devices. For example depicts the client device having a processor a memory and a display device . A display device can include but is not limited to a screen integrated with a client device such as a liquid crystal display LCD screen a touch screen or an external display device such as a monitor.

Although depicts email domain parser authentication module and group assignment module as separate modules one or more of these modules can be included as a software module of a single application. Similarly while an exemplary mapping and a group repository are shown in as being hosted locally on server in alternative embodiments one or both of mapping and group repository can be hosted on an external server not shown remote from server . For example group repository can be hosted on a dedicated database server accessible from server via network . User authentication and group assignment system stores domain to group bindings in mapping . System stores group and user information including group and user metadata in group repository . Descriptions of exemplary functionality of email domain parser authentication module and group assignment module are provided in the following paragraphs.

In an embodiment an authentication module is invoked when a user of a client device requests access to a particular resource electronic content item or asset. The request can be made for example in the user interface of an email application or Internet browser executing at client device via a touch screen display device or other user input received via an input device at client device or via input devices at a client device . The resource request is then sent with credentials from the client device to server via network . In one embodiment when the request for a resource and credentials are received at server authentication module performs user authentication as described below to determine if the user is authorized to access the requested resource electronic content item or asset.

An exemplary authentication module can be configured to generate an authentication request including credentials received by server as part of a resource request. In an embodiment authentication module is invoked after a user at a client device requests a resource such as a web page or other electronic content. According to one embodiment authentication module is responsible for generating and sending authentication requests to an authentication provider . In one embodiment authentication module can invoke email domain parser to identify the domain part of an email address received with credentials . The domain part can be used to determine a particular authentication provider to route an authentication request to.

As seen in authentication provider can be a third party authentication provider remote from server . In the exemplary implementation of authentication provider can use authentication protocols and frameworks such as but not limited to OAuth and SAML. In additional or alternative embodiments authentication provider can host a discoverable service such as for example an Autodiscover service. In each of these embodiments a user can be authenticated based upon an email address and one other credential i.e. a password included in credentials . The authentication provider can be configured to send an authentication response to server where the response includes a full user name in cases where the user is authenticated. In cases where the user is not authenticated response will indicate an authentication status. After response is received by server it can be forwarded to authentication module . If the response indicates that a user has been authenticated i.e. as evidenced by the presence of a full user name in the response an email domain parser can be invoked to parse the domain part of the email address received with credentials . In additional or alternative embodiments a response for an authenticated user can additionally include organization or entity information for the user. For example a third party authentication provider can include information from an authenticated user s GAL record indicating one or more of an entity i.e. employer department division business unit practice group location i.e. geographic office location and other organization information associated with the user.

In the exemplary embodiment shown in email domain parser consists of a sub module or component a domain extractor . Exemplary functionality of the parser and its extractor component is described below.

The email domain parser can parse an email address received as part of credentials to identify the domain part of the email address i.e. all characters in the email address following the sign character . Email domain parser can then invoke domain extractor in order to extract a domain name from the email address. In certain embodiments email domain parser can work in conjunction with domain extractor to further extract subdomains and or regular expressions from the domain part. For example a domain part can be extracted from an email address by domain extractor using the following logic which can be customized by an administrator a domain name can be extracted based on the entire domain part of the email address as e.g. adobe.com can be extracted from an email address of jdoe adobe.com one or more subdomains can be extracted based on delimited portions of the domain part e.g. sales.adobe.com and adobe.corp.com can be extracted from an email address of jdoe sales.adobe.corp.com and or one or more regular expressions can be extracted based on substrings of the domain part e.g. support adobe and corp can be extracted from an email address of jdoe support.adobe.corp.com .

In an embodiment client devices comprise one or more resource navigation devices such as but not limited to an input device configured to interact with browser based UI of a tablet client device having a touch screen display device and input devices of a smartphone client device . In an embodiment a client device such as client device may be integrated with a display device so that the two form a single integrated component. Client devices can include any suitable computing devices for communicating via network requesting a resource furnishing credentials and rendering a requested resource for display and or modification as permitted according to an authentication response and a user group assignment established for an authenticated requesting user .

As shown in each of the client devices is coupled to server through network . Although not depicted in in an alternative embodiment server can be located separately from group repository . Client devices receive operational commands from users including commands to request resources assets or electronic content items commands to provide credentials needed to access the requested content and commands to navigate to view and modify if authorized the requested resource.

In the exemplary embodiment shown in group assignment module consists of a sub module or component an organization entity matcher . Exemplary functionality of group assignment module and its matcher component is described below.

As shown in group assignment module is configured to interact with group repository and mapping to determine one or more user group assignments for an authenticated user. In the embodiment of group assignment module is invoked in response to determining that a user existing or new has been successfully authenticated by authentication module . At this point group assignment module invokes email domain parser to perform the above described parsing and extracting functionality. After domain extractor has extracted the domain and any subdomains or regular expressions from the domain part group assignment module checks to see if the extracted domain subdomain s if any and regular expression s if any are in mapping . If so the user is assigned to the corresponding group as indicated in mapping and a user group assignment is created. Otherwise the user is either assigned to a default group or not assigned to a group i.e. no user group assignment is created depending on customizable settings for group assignment module . In an embodiment the customizable settings can be established and modified by an administrator using an administrator UI such as the exemplary administrator UI described below with reference to . Group repository contains information for each group in the user authentication and group assignment system . As seen in an exemplary group repository can be implemented as a hierarchical group repository such as a JCR. Mapping can be implemented as any data store repository or database table having a record for each binding of a domain subdomain or regex to a group. Data for each group represented in a binding within mapping can be stored in group repository . In additional or alternative embodiments group membership information including identities of existing users in user group assignments can also be stored in group repository .

In additional or alternative embodiments group assignment module can invoke organization entity matcher to determine if an organization or entity indicated in an authentication response is present in mapping . For example if a user s entity and or organization information such as an employer department business unit practice group or office location is returned by authentication provider as part of an authentication response organization entity matcher can perform a lookup in mapping for that entity and or organization information. If a binding of the user s entity or organization to a group is found in mapping group assignment module can create a user group assignment pursuant to that binding.

It is to be appreciated that the server can establish user group assignments for any new authenticated user submitting credentials as part of a resource request. Resource requests may include credentials such as a unique identifier and a password. As shown in the unique identifier can be an email address. Credentials may be explicitly entered via input made using input devices or submitted implicitly based on a user associated with a particular client device . Resource requests as described herein refer to a request for any electronic content that is generally available for delivery to an individual client device with delivery initiated upon successful authentication of credentials received with an explicit request from that client device . In response to a resource request from a client device server may make a user group assignment to a group stored in group repository . The user group assignment can be based on a correlation between at least a portion of an email address included in credentials and a group in domain group binding in mapping . In embodiments the correlation can be performed by group assignment module .

According to an embodiment user authentication and group assignment system displays an administrator UI shown in on display device . In embodiments display device may be one or more of a monitor a display of a tablet device see e.g. display device the display of a laptop the display of a mobile phone see e.g. display device or the display of a personal computer see e.g. display device .

Server can receive credentials send authentication requests receive responses and provide requested resources via the network . User group assignments include a user account matched to at least one group from the group repository . User group assignments may be resident in any suitable computer readable medium group repository and or memory of server . In another embodiment the user group assignments can be accessed by the server from a remote location via network .

Server can include any suitable computing system for hosting the mapping email domain parser authentication module group assignment module and group repository . As shown in server includes a processor coupled to a memory . In one embodiment server may be a single computing system. In another embodiment server may be a virtual server implemented using multiple computing systems or servers connected in a grid or cloud computing topology. As described below with reference to processor may be a single processor in a multi core multiprocessor system. Such system can be configured to operate alone with a single server or in a cluster of computing devices operating in a cluster or server farm.

Network may be a data communications network such as the Internet. In embodiments network can be one or a combination of networks such as an entity s intranet the Internet a Wide Area Network WAN WiFi a Local Area Network LAN or any other wired or wireless network. Server may provide requested resources via network . Depending on access rights in an assigned group authenticated users may only be granted access to resources or electronic content via secure network connections or data links. Non limiting examples of such secure connections include connections made using the Secure Sockets Layer SSL protocol or the Transport Layer Security TLS protocol. As would be understood by those skilled in the relevant art s SSL and TLS connections are made via cryptographic protocols to provide communication security over data networks such as the Internet.

Client devices can establish respective network connections with server via network . One or more of an email application an Internet browser or another client application used to request a resource can be executed at a client device to establish a network connection via network . The network connection can be used to communicate packetized data representing requested resources between server and client device .

For example as permitted by an authentication response and a user group assignment server can provide a requested resource as electronic content via network . An email application or Internet browser can access the electronic content by retrieving the requested resource from server via network . Server can provide the requested content as packetized data. An email application or Internet browser can configure a processor of the client device to render a retrieved resource for display on display device .

In a display is shown with various data entry fields checkboxes and buttons that are used to initiate action invoke routines establish and modify group mappings i.e. bindings of domains subdomains and regular expressions to groups define default group assignments for new users or invoke other functionality. The initiated actions include but are not limited to establishing an authentication provider displaying and modifying URLs for user validation authentication displaying and modifying URLs for fetching additional user data i.e. user entity and organization data and configuring group assignment properties. In embodiments some or all of the URLs for user authentication and or fetching user data can be predetermined based upon the authentication provider being used. In additional or alternative embodiments URLs for user authentication and or fetching user data can be formulated by inserting a domain part of an authenticated user s email address into URLs including predefined portions.

In embodiments the display devices used to display the user interface shown in may be displayed via the display interface and the computer display described below with reference to . In certain embodiments the UI can be configured to be displayed on a touch screen display device . According to embodiments a user can interact with the UI shown in using input devices shown in . In additional or alternative embodiments input devices can also be embodied as other devices such as but not limited to a stylus a finger a mouse a keyboard a keypad a joy stick a voice activated control system or other input devices used to provide interaction between an administrator or other user and the UI. As described below with reference to such interaction can be used to indicate group assignment properties establish domain group bindings in mapping establish subdomain group bindings in mapping and establish regex group bindings in mapping .

With continued reference to administrator UI also includes group assignment properties which include an add user to group checkbox a group mapping data entry field a resolve group based on email address checkbox and a default group data entry field. By selecting using an input device add user to group checkbox an administrator can indicate that user authentication and group assignment system is to attempt to place an authenticated user in a group pursuant to group assignment properties . In the example embodiment illustrated in if the add user to group checkbox is selected a user to group assignment can be resolved by the first match found in the following sequence 1 a user s organization retrieved from the user s IMS profile 2 a user email domain if configured by selecting resolve group based on email address checkbox and 3 a default group if configured by entering a default group into the default group data entry field for new users and no match is found by applying rules 1 and 2 . In one embodiment rule 1 can be applied by attempting to match an organization retrieved from an authenticated user s IMS profile to a group in group repository . In certain embodiments if a match is not found by applying rule 1 rule 2 can be applied based on a domain one or more subdomains and or one or more regular expressions extracted from an authenticated user s email domain. In embodiments where an authenticated user is only added to a single group the user is assigned to the first group matching rules 1 3 with the rules being applied sequentially in the order shown in .

As shown in group assignment properties include a group mapping data entry field so that an administrator can define one or more domain group mappings i.e. bindings subdomain group bindings and or regex group bindings in mapping . The group mapping data entry field depicted in can be used to enter a list of domains subdomains and regular expressions to be bound to an administrator entered group. In the non limiting example provided in group mapping can be used to define multiple bindings in mapping by entering a comma separated list of regular expressions domains and or subdomains to be resolved to i.e. bound to a given group in the form . As seen in group mapping can be used to define a binding of a regex e.g. adobe to a group a binding of a domain name e.g. adobe.com to a group and or a binding of a subdomain e.g. adobe.corp.com to a group. As seen in by entering values into group mapping bindings can be created as a many to one relationship with multiple comma separated regular expressions domains or subdomains being mapped to a given group in mapping . By selecting using an input device resolve group based on email address checkbox an administrator can indicate that an authenticated user is to be assigned to a group based on the user s email address. For example if resolve group based on email address checkbox is selected group assignment module will attempt to match a domain from an email address included in credentials to a domain group binding in mapping . Group assignment properties also include a data entry field to indicate a default group an authenticated user is to be added to. In one embodiment a binding for the default group is created in mapping and an authenticated user not matching any other group assignment properties is assigned to the default group.

Administrator UI also includes context specific buttons and . For example administrator UI includes a cancel button that is selectable using an input device to undo modifications to authentication properties and or cancel saving of newly entered or edited group assignment properties including bindings entered but not yet saved via the group mapping data entry field. A reset button can be selected using an input device to reset certain authentication properties and or group assignment properties back to default values. Administrator UI also includes a delete button which depending on the context at the time it is selected can be selected to delete authentication properties and or group assignment properties . For example if delete button is selected while the active focus of administrator UI is on an existing binding in the group mapping data entry field the binding can be deleted so as to sever or remove a mapping between a group and a domain subdomain or regex. Administrator UI further includes an unbind button to unbind a previously bound configuration of authentication properties and group assignment properties . As seen in administrator UI also includes a save button to save changes to authentication properties and or group assignment properties .

The method begins in step where credentials including an email address are received. This step can comprise receiving credentials from a client device via network at server as described above with reference to . After the credentials are received control is passed to step .

In step one or more URLs for authentication are determined based upon the domain portion of the email address received in step . In embodiments at least portions of the URLs are predefined based on an authentication provider being used. Step can be performed by authentication module invoking email domain parser to extract the domain part of the received email address and then determining URLs that method will attempt to access. An embodiment of step can include determining one or more predefined URLs established as an authentication property in administrator UI . In an embodiment the URLs can include portions of the domain part of the email address. According to certain embodiments described below with reference to steps the URLs determined in step can be a set of Autodiscover endpoint URLs.

In step an authentication request is generated and sent to an authentication provider. As show in the authentication provider can be a third party provider hosting a discoverable service and the authentication request can be sent as an authentication request as described above with reference to . In embodiments described in the following paragraphs if the discoverable service is an Autodiscover service the authentication request can be formatted as an Autodiscover request to access the URLs determined in step .

As would be understood by those skilled in the relevant art s an Autodiscover service can be hosted on a back end server such as but not limited to a Microsoft Exchange server or a server configured to run an IBM Notes or Lotus Notes application from IBM. If the discoverable service is an Autodiscover service embodiments of method repurpose or leverage the Autodiscover service to find a mailbox and other associated mailbox information for an authenticated user. Discoverable services such as an Autodiscover service can provide configuration information to authentication module whether authentication module is separated from authentication provider by a firewall. The Autodiscover service can be configured as a web service that provides back end server configuration information to server . Embodiments of server can be configured to generate Autodiscover requests and process corresponding Autodiscover responses to determine an endpoint of an Autodiscover service for a specific mailbox based on an email address received with credentials in step . An Autodiscover service can provide at least three different access techniques or frameworks. Embodiments of method and authentication module can use one or all of the techniques described below. The methods used by authentication module may depend on an environment that server runs in and a particular email server that authentication module is sending an authentication request to. Three alternative potentially complementary techniques for accessing Autodiscover are described below. Any or all of these techniques or any other appropriate technique can be used to perform exemplary embodiments of steps .

The authentication request can be formatted as an Active Directory Service Connection Point SCP lookup. SCP lookup can be performed as part of steps and in embodiments where authentication module and or server has access to an entity s Microsoft Active Directory AD directory service or the entity s AD Domain Service AD DS . According to these non limiting embodiments an SCP lookup is performed as part of steps and to identify a set of Autodiscover endpoint URLs. The set of Autodiscover endpoint URLs may be configured by an administrator of the back end server i.e. an email server . If the back end server is a Microsoft Exchange server running certain versions of Exchange the authentication request can be formatted as a Simple Object Access Protocol SOAP Autodiscover request. In this exemplary embodiment user authentication is based in part on attempting to access a URL returned by a SOAP Autodiscover process. Alternatively or additionally if the back end server is a Microsoft Exchange server running other certain versions of Exchange and the discoverable service hosted by authentication provider is an Autodiscover XML service PDX authentication request can be formatted as an Extensible Markup Language XML Autodiscover request. In certain embodiments where the discoverable service is an Autodiscover service steps can be performed as follows 1. in environments that have access to an AD service or an AD DS service such as environments within an entity s intranet an AD SCP lookup can be performed in step to identify a set of Autodiscover endpoint URLs. Otherwise if 1. is not applicable such as in environments without access to an AD service or an AD DS service then 2. a set of Autodiscover endpoint URLs can be generated in step using predefined rules. Next as part of step 3. an Autodiscover request can be sent to URLs in the set of Autodiscover endpoint URLs from 1. or 2. whichever is applicable until it is determined in step that an Autodiscover request has succeeded i.e. has resulted in a status of . Then if 3. results in a successful Autodiscover request the user is determined to be successfully authenticated and step can include 4. where user information is requested from the successfully determined Autodiscover endpoint. In one embodiment such user information is additional information beyond a full user name and credentials included in authentication request . For example the user information can include the authenticated user s profile or group information returned from the successfully determined Autodiscover endpoint. This additional user information can be included in authentication response returned by step .

For each of the above described Autodiscover techniques the discoverable service is an Autodiscover service authentication request is formatted as an Autodiscover request and authentication provider is an enterprise email server. In certain embodiments authentication provider can be an enterprise email server configured as to support an ActiveSync protocol. For example an ActiveSync protocol can be used by mobile client devices such as client devices and to access a Microsoft Exchange mailbox as part of an ActiveSync Autodiscover authentication in cases where another Autodiscover service such as a Microsoft Exchange Autodiscover service is not enabled or available. In these example embodiments using Autodiscover requests user authentication is based at least in part on determining by authentication provider the URL of an ActiveSync endpoint using the email address and at least a portion of the other credentials received in step . After an authentication request is generated and sent to an authentication provider in step control is passed to step .

In step a determination is made as to whether the user authentication was successful. The determination in this step can be performed by an authentication provider and indicated in an authentication response . In some embodiments method infers that a user is authenticated if an attempt to access the URLs determined in step is successful. For example step can determine that a user is authenticated based on a Hypertext Transfer Protocol Secure HTTPS request for one of the URLs resulting in a status of i.e. successful access to the URL . If the authentication request generated and sent in step was a SOAP Autodiscover request step comprises determining an authentication status based at least in part on a SOAP Autodiscover response. If it determined that authentication was successful control is passed to step . Otherwise if it is determined that authentication was unsuccessful control is optionally passed to step to prompt the user for additional credentials or to step where method ends.

In optional step an authentication status is set according to the authentication response . As shown in a response including a status of for attempted access to the predefined URLs indicates that authentication was unsuccessful. In step a user can be prompted to reenter credentials or to provide additional credentials. If reentered and or additional credentials are received control is passed back to step .

In step an authentication response for a successfully authenticated user is received. Such an authentication response will include at least the user s full name i.e. a display name . This step can optionally comprise receiving additional user information such as for example information from a GAL record corresponding to the authenticated user. The additional information received in this step can include an authenticated user s group membership s role s organization information office location phone number s and or department. After the authentication response is received control is passed to step .

Next in step the full username received in step is mapped to at least one group associated with an entity. Step can comprise invoking group assignment module and its organization entity matcher to correlate the full username to a group based on implicit group associations. In additional or alternative embodiments step can comprise mapping the full username to an entity s group based on a predefined mapping such as mapping . After the full username is mapped to at least one group associated with an entity control is passed to step where method ends.

The method begins at step where a request for a resource and credentials of a user requesting the resource are received. This step can comprise receipt of account credentials including an email address as described above with reference to .

Next in step the credentials received in step are authenticated. In the example of the authentication is performed by a third party authentication provider. In an embodiment step can be performed by authentication provider . In certain embodiments step can comprise sending an authentication request to an authentication provider as described above with reference to .

In step a determination is made as to whether the user is authenticated. If it is determined that the user has not been authenticated an authentication error status is set e.g. a status for an attempted access to a predefined URL . The authentication status can be set in an authentication response . After the authentication status is set for an unsuccessful authentication control is passed to step where method ends. Otherwise if it is determined that the user is authenticated control is passed to step .

In step the email domain is extracted. In an embodiment this step can be performed by email domain parser in conjunction with domain extractor . In embodiments this step can comprise extracting one or more subdomains from the email domain part. After the domain part has been extracted from the email address control is passed to step . In certain embodiments steps and are optional and no organization is retrieved or used to assign a user to a group. In accordance with these embodiments the method proceeds directly from step to step .

In step an organization corresponding to the authenticated user is retrieved. In one embodiment step can comprise retrieving an organization name based on matching the domain extracted in step with a correlation of domains to organizations or entities in a repository such as for example a JCR. In alternative or additional embodiments step can comprise fetching organization information from an authenticated user s GAL record. Such fetching can be performed for example as part of authentication performed by an authentication provider and returned as part of an authentication response . After the organization for the authenticated user is retrieved control is passed to step .

Next in step a third party provider attempts to match the retrieved organization name to an existing group. Step can comprise attempting to match a user with an entity s group using a regular expression regex query to group repository . Such a query can be implemented as a query to a JCR via an API. Alternatively this step can comprise attempting to correlate an organization name retrieved in step with a regex group binding in mapping where the regex is the retrieved organization name.

In step a determination is made as to whether there was any match between an organization and a group in step . If it determined that there was no match control is passed to step . If it determined that there was a match between the organization name and a group control is passed to step .

In step a determination is made as to whether the extracted domain or subdomain from step is in a predefined mapping i.e. a whitelist . In one embodiment this step comprises querying mapping for the domain and any extracted subdomains. If it determined that the extracted domain or a subdomain is in the mapping control is passed to step . Otherwise if it determined that the domain and or any extracted subdomains are not in the mapping control is passed to step where method ends.

In step the authenticated user is assigned to at least one group matched from step or . In one embodiment step results in creation of a user group assignment and the requested resource is delivered via network to an email application or Internet browser executing on a client device . After the user is assigned to the at least one group control is passed to step where method ends.

Numerous specific details are set forth herein to provide a thorough understanding of the claimed subject matter. However those skilled in the art will understand that the claimed subject matter may be practiced without these specific details. In other instances methods apparatuses or systems that would be known by one of ordinary skill have not been described in detail so as not to obscure claimed subject matter.

Although exemplary embodiments have been described in terms of user authentication and group assignment systems and methods it is contemplated that certain functionality described herein may be implemented in software on microprocessors such as a processors and included in the client devices and server respectively shown in and computing devices such as the computer system illustrated in . In various embodiments one or more of the functions of the various components may be implemented in software that controls a computing device such as computer system which is described below with reference to .

Aspects of the present invention shown in or any part s or function s thereof may be implemented using hardware software modules firmware tangible computer readable media having logic or instructions stored thereon or a combination thereof and may be implemented in one or more computer systems or other processing systems.

If programmable logic is used such logic may execute on a commercially available processing platform or a special purpose device. One of ordinary skill in the art may appreciate that embodiments of the disclosed subject matter can be practiced with various computer system configurations including multi core multiprocessor systems minicomputers mainframe computers computers linked or clustered with distributed functions as well as pervasive or miniature computers that may be embedded into virtually any device.

For instance at least one processor device and a memory may be used to implement the above described embodiments. A processor device may be a single processor a plurality of processors or combinations thereof. Processor devices may have one or more processor cores. 

Various embodiments of the invention are described in terms of this example computer system . After reading this description it will become apparent to a person skilled in the relevant art how to implement the embodiments using other computer systems and or computer architectures. Although operations may be described as a sequential process some of the operations may in fact be performed in parallel concurrently and or in a distributed environment and with program code stored locally or remotely for access by single or multiprocessor machines. In addition in some embodiments the order of operations may be rearranged without departing from the spirit of the disclosed subject matter.

Processor device may be a special purpose or a general purpose processor device. As will be appreciated by persons skilled in the relevant art processor device may also be a single processor in a multi core multiprocessor system such system operating alone or in a cluster of computing devices operating in a cluster or server farm. Processor device is connected to a communication infrastructure for example a bus message queue network or multi core message passing scheme. In certain embodiments one or more of the processors and described above with reference to user authentication and group assignment system server and client devices of can be embodied as the processor device shown in .

Computer system also includes a main memory for example random access memory RAM and may also include a secondary memory . Secondary memory may include for example a hard disk drive removable storage drive . Removable storage drive may comprise a magnetic tape drive an optical disk drive a flash memory or the like. In non limiting embodiments one or more of the memories and described above with reference to server and client devices of can be embodied as the main memory shown in .

The removable storage drive reads from and or writes to a removable storage unit in a well known manner. Removable storage unit may comprise a magnetic tape optical disk etc. which is read by and written to by removable storage drive . As will be appreciated by persons skilled in the relevant art removable storage unit includes a non transitory computer readable storage medium having stored therein computer software and or data.

In alternative implementations secondary memory may include other similar means for allowing computer programs or other instructions to be loaded into computer system . Such means may include for example a removable storage unit and an interface . Examples of such means may include a program cartridge and cartridge interface such as that found in video game devices a removable memory chip such as an EPROM or EEPROM and associated socket and other removable storage units and interfaces which allow software and data to be transferred from the removable storage unit to computer system . In non limiting embodiments one or more of the memories and described above with reference to server and client devices of can be embodied as the main memory shown in .

Computer system may also include a communications interface . Communications interface allows software and data to be transferred between computer system and external devices. Communications interface may include a modem a network interface such as an Ethernet card a communications port a PCMCIA slot and card or the like. Software and data transferred via communications interface may be in the form of signals which may be electronic electromagnetic optical or other signals capable of being received by communications interface . These signals may be provided to communications interface via a communications path . Communications path carries signals and may be implemented using wire or cable fiber optics a phone line a cellular phone link an RF link or other communications channels.

As used herein the terms computer readable medium and non transitory computer readable medium are used to generally refer to media such as memories such as main memory and secondary memory which can be memory semiconductors e.g. DRAMs etc. . Computer readable medium and non transitory computer readable medium can also refer to removable storage unit removable storage unit and a hard disk installed in hard disk drive . Signals carried over communications path can also embody the logic described herein. These computer program products are means for providing software to computer system .

Computer programs also called computer control logic are stored in main memory and or secondary memory . Computer programs may also be received via communications interface . Such computer programs when executed enable computer system to implement the present invention as discussed herein. In particular the computer programs when executed enable processor device to implement the processes of the present invention such as the steps in the methods and illustrated by the flowcharts of discussed above. Accordingly such computer programs represent controllers of the computer system . Where an embodiment of the invention is implemented using software the software may be stored in a computer program product and loaded into computer system using removable storage drive interface and hard disk drive or communications interface .

In an embodiment the display devices used to display interfaces of an email application Internet browser and or another client application used to request and display resources may be a computer display shown in . The computer display of computer system can be implemented as a touch sensitive display i.e. a touch screen . Similarly the administrator UI shown in may be embodied as a display interface shown in .

Embodiments of the invention also may be directed to computer program products comprising software stored on any computer readable medium. Such software when executed in one or more data processing device causes a data processing device s to operate as described herein. Embodiments employ any computer readable medium. Examples of computer useable mediums include but are not limited to primary storage devices e.g. any type of random access memory secondary storage devices e.g. hard drives floppy disks CD ROMS DVDs ZIP disks tapes magnetic storage devices and optical storage devices MEMS nanotechnological storage device etc. and communication mediums e.g. wired and wireless communications networks local area networks wide area networks intranets etc. .

Numerous specific details are set forth herein to provide a thorough understanding of the claimed subject matter. However those skilled in the art will understand that the claimed subject matter may be practiced without these specific details. In other instances methods apparatuses or systems that would be known by one of ordinary skill have not been described in detail so as not to obscure claimed subject matter.

Some portions are presented in terms of algorithms or symbolic representations of operations on data bits or binary digital signals stored within a computing device memory such as a computer memory. These algorithmic descriptions or representations are examples of techniques used by those of ordinary skill in the data processing arts to convey the substance of their work to others skilled in the art. An algorithm is a self consistent sequence of operations or similar processing leading to a desired result. In this context operations or processing involves physical manipulation of physical quantities. Typically although not necessarily such quantities may take the form of electrical or magnetic signals capable of being stored transferred combined compared or otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to such signals as bits data values elements symbols characters terms numbers numerals or the like. It should be understood however that all of these and similar terms are to be associated with appropriate physical quantities and are merely convenient labels. Unless specifically stated otherwise it is appreciated that throughout this specification discussions utilizing terms such as processing computing calculating determining and identifying or the like refer to actions or processes of a computing device such as one or more computers or a similar electronic computing device or devices that manipulate or transform data represented as physical electronic or magnetic quantities within memories registers or other information storage devices transmission devices or display devices of the computing platform.

The system or systems discussed herein are not limited to any particular hardware architecture or configuration. A computing device can include any suitable arrangement of components that provide a result conditioned on one or more inputs. Suitable computing devices include multipurpose microprocessor based computer systems accessing stored software that programs or configures the computing device from a general purpose computing apparatus to a specialized computing apparatus implementing one or more embodiments of the present subject matter. Any suitable programming scripting or other type of language or combinations of languages may be used to implement the teachings contained herein in software to be used in programming or configuring a computing device.

Embodiments of the methods disclosed herein may be performed in the operation of such computing devices. The order of the steps presented in the examples above can be varied for example steps can be re ordered combined and or broken into sub steps. Certain steps or processes can be performed in parallel.

The use of adapted to or configured to herein is meant as open and inclusive language that does not foreclose devices adapted to or configured to perform additional tasks or steps. Additionally the use of based on is meant to be open and inclusive in that a process step calculation or other action based on one or more recited conditions or values may in practice be based on additional conditions or values beyond those recited. Headings lists and numbering included herein are for ease of explanation only and are not meant to be limiting.

While the present subject matter has been described in detail with respect to specific embodiments thereof it will be appreciated that those skilled in the art upon attaining an understanding of the foregoing may readily produce alterations to variations of and equivalents to such embodiments. Accordingly it should be understood that the present disclosure has been presented for purposes of example rather than limitation and does not preclude inclusion of such modifications variations and or additions to the present subject matter as would be readily apparent to one of ordinary skill in the art.

