---

title: Systems and methods for personalizing QR codes
abstract: Systems, methods, and non-transitory computer readable media configured to select a code. An image on which the code is superimposed is selected. A block of the code is associated with a corresponding part of the image. A desired value of opacity of the block of the code is determined based on the corresponding part of the image. A personalized code is generated based on the desired value of opacity of the block of the code.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09390358&OS=09390358&RS=09390358
owner: Facebook, Inc.
number: 09390358
owner_city: Menlo Park
owner_country: US
publication_date: 20150415
---
The present technology relates to the field of content provision. More particularly the present technology relates to techniques for generating codes.

Today people often utilize computing devices or systems for a wide variety of purposes. Users can use their computing devices for example to interact with one another create content and access content. In some cases a user can utilize his or her computing device to scan a machine readable code such as a Quick Response QR code. The machine readable code can provide the user with access to content such as a link or other information.

Conventional approaches to utilizing machine readable codes generally involve presenting a machine readable code in one instance and then reading scanning the machine readable code in a separate instance. However this manner of utilizing machine readable codes in accordance with conventional approaches can be suboptimal. For example machine readable codes are not fully comprehensible to persons and convey little if anything about the information that they encode. As another example the appearance of machine readable codes can appear as random patterns. As a result the presentation of machine readable codes can be dull from the perspective of their intended audiences.

Various embodiments of the present disclosure can include systems methods and non transitory computer readable media configured to select a code. An image on which the code is superimposed is selected. A block of the code is associated with a corresponding part of the image. A desired value of opacity of the block of the code is determined based on the corresponding part of the image. A personalized code is generated based on the desired value of opacity of the block of the code.

In an embodiment the determining a desired value of opacity of the block of the code is based on a value of luminance of pixels of the corresponding part of the image.

In an embodiment the determining a desired value of opacity of the block of the code is based on a variance of values of luminance of pixels of the corresponding part of the image.

In an embodiment the determining a desired value of opacity of the block of the code is based on a difference between average luminance of pixels in the corresponding part of the image and average luminance of pixels in a second part of the image adjacent to the corresponding part of the image.

In an embodiment the desired value of opacity of the block of the code is increased based on at least one of the block of the code being a more important part of the code and the corresponding part of the image being a less important part of the image.

In an embodiment the desired value of opacity of the block of the code is decreased based on at least one of the block of the code being associated with a less important part of the code and the corresponding part of the image being a more important part of the image.

In an embodiment desired values of opacity of a plurality of blocks of the code are determined based on corresponding parts of the image.

In an embodiment the desired values of opacity of the plurality of blocks of the code are adjusted so that the code can be read and the image can be viewed.

It should be appreciated that many other features applications embodiments and or variations of the disclosed technology will be apparent from the accompanying drawings and from the following detailed description. Additional and or alternative implementations of the structures systems non transitory computer readable media and methods described herein can be employed without departing from the principles of the disclosed technology.

The figures depict various embodiments of the disclosed technology for purposes of illustration only wherein the figures use like reference numerals to identify like elements. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated in the figures can be employed without departing from the principles of the disclosed technology described herein.

People use computing devices or systems for various purposes. Computing devices can provide different kinds of functionality. Users can utilize their computing devices to produce information access information and share information. In some cases users can use their computing devices to produce information which can be represented by machine readable codes such as Quick Response QR codes. In some instances users can use their computing devices to read scan machine readable codes in order to access information. Furthermore in some cases users can share information using machine readable codes which can be provided by computing devices.

Under conventional approaches QR codes can be used to encode various types of information. For example QR codes have been used for part tracking in industrial applications and for navigation based on links to sites where information can be presented. The use of QR codes while effective can be subject to many disadvantages. For example QR codes are not readable by persons. Persons who view the QR code can surmise little to nothing about the information encoded by the QR code. Therefore the QR codes can fail to convey helpful data to persons that relates to their encoded information. As another example QR codes are patterned as seemingly random patches of black and white. They do not pique the interests of persons who view them.

An improved approach to the presentation of machine readable codes such as QR codes overcomes the foregoing and other disadvantages associated with conventional approaches. In general systems and methods of the present disclosure can superimpose overlay a QR code onto an image to generate a personalized QR code. The personalized QR code can reflect both functional utility and aesthetic flair. The personalized QR code can be generated based on adjustments to the opacity of portions of the QR code in consideration of a variety of factors. Such factors can include for example luminance of groups of pixels in the image variance of luminance of groups of pixels in the image and differences in luminance between groups of pixels in the image. Further the opacity of portions of the QR code can be adjusted based on the importance of the portions of the QR code and the importance of corresponding parts of the image. The personalized QR code can be produced in such a manner that the code reflected in the personalized code still can be successfully scanned by a code reader while the image reflected in the personalized code still can be clearly viewed by persons who view the personalized code.

The code and the image can be combined to generate a personalized code. In particular the code can be superimposed i.e. overlaid on the image to produce the personalized code. The appearance of the personalized code can be based on adjustments to the opacity of portions of the code in consideration of a variety of factors. Such factors can include for example luminance of groups of pixels in the image variance of luminance of groups of pixels in the image and differences in luminance between groups of pixels in the image. Further the opacity of portions of the code can be adjusted based on the importance of the portions of the code and the importance of corresponding parts of the image. The personalized code can be generated to optimize both readability of the code and visibility of the image.

The code personalization module can include an image acquisition module a code acquisition module and a combination module . The components e.g. modules elements etc. shown in this figure and all figures herein are exemplary only and other implementations may include additional fewer integrated or different components. Some components may not be shown so as not to obscure relevant details.

In some embodiments the code personalization module can be implemented in part or in whole as software hardware or any combination thereof. In general a module as discussed herein can be associated with software hardware or any combination thereof. In some implementations one or more functions tasks and or operations of modules can be carried out or performed by software routines software processes hardware and or any combination thereof. In some cases the code personalization module can be implemented in part or in whole as software running on one or more computing devices or systems such as on a server or client computing device. For example the code personalization module can be implemented as or within an application e.g. app a program or an applet etc. running on a user computing device or client computing system. In some instances the code personalization module can in part or in whole be implemented within or configured to operate in conjunction with a social networking system or service such as the social networking system of . It should be understood that many variations are possible.

The image acquisition module can acquire an image to personalize the code. The image can be selected by a user. In some embodiments the user can select an image that is a suitable match with the code or the information associated with the code. For example if the code reflects an address or identifier of certain information the user can select an image with a nexus to the information. In this way the image can convey to a person who views the image some level of understanding about the information encoded by the code. As another example if the code reflects an address or identifier of a page of the user in a social networking system the user can select an image that is personally favored by the user an image that functions as a profile image of the user an image representative of the page of the user an image that reflects the personal interests of the user etc. Any other types of images can be used to personalize the code. In some embodiments entities other than the user such as a connection of the user or a social networking system can select the image to personalize the code.

The code acquisition module can request generation of a code. The code acquisition module can be configured to facilitate acquisition of a machine readable code that represents links to or is otherwise associated with information to which access is provided through the code. For example the user can provide an address or identifier e.g. a link to a profile page of a member of a social networking system for the information e.g. profile data about a member of a social networking system . The code acquisition module can obtain a code that is generated based on the address or the identifier associated with the information. The generation of the code can be performed by another module of the code personalization module or by another system that is not shown. After generation of the code the code can be presented to the user so that the user can provide the code to be scanned by another user. Upon scanning the machine readable code a computing device or system of the other user can provide or transmit the code for processing so that the other user can access the encoded information. In some embodiments the generated code can be provided to the combination module for personalization.

The combination module can combine the code and a selected image associated with the code to produce a personalized code. The code can be superimposed on the image so that the code still can be successfully scanned and the image still can be visually discerned by persons who view the personalized code. Blocks of the code can be matched with corresponding groups of pixels in the image on which the blocks are superimposed. The opacity of the blocks of the code can be determined and varied to optimize both the readability of the code in the personalized code and the visual distinctiveness of the underlying image. The opacity of the blocks of the code to be superimposed on a corresponding group of pixels can be determined on a block by block basis.

For example the combination module can superimpose a block of the code based on a gradient so that the opacity of a center portion of the block of the code is higher than the opacity of outer portions of the block of the code. In one instance a Gaussian blur could be used. As another example the opacity of a block of the code can be varied according to luminance of a corresponding group of pixels variance of the luminance of a corresponding group of pixels and a difference in luminance between adjacent groups of pixels. As yet another example the opacity of the blocks of the code can be reduced and the relative positions of the code and the image can be varied so that the most visually important portions of the image can be appear more prominently. After its generation the personalized code can be subjected to a readability evaluation to ensure that the code can be successfully scanned. The combination module is discussed in more detail in connection with .

The data store can be configured to store and maintain various types of data such as the data relating to the generation of personalized codes. The data can include data relating to for example links to content or other information codes encoding the links and other information images the association between codes and images selected for combination with the codes luminance related parameters associated with images desired distributions of opacity in relation to the luminance related parameters etc. The data store can also maintain other information associated with the social networking system. The information associated with the social networking system can include data about users social connections social interactions locations geo fenced areas maps places events groups posts communications content account settings privacy settings and a social graph. The social graph can reflect all entities of the social networking system and their interactions. As shown in the example system the code personalization module can be configured to communicate and or operate with the data store .

The matching module can obtain a code and an image on which the code is to be superimposed and can align the code over the image. shows an example code and an example image from which a personalized code is to be generated. The code is to be aligned with and superimposed on the image . shows alignment of the code on the image . The matching module can perform the alignment based on one or more of the centers of the image and the code corners of the image and the code boundaries of the image and the code etc.

In connection with the matching module can match elements of the code with corresponding underlying parts of the image. An element of the code can include any portion e.g. square bit etc. of the code of any size. For example an element of the code can be a block of the code. As another example an element of the code can be a portion of the code that is larger or smaller than a block of the code. Although the example of a block of code is discussed herein in connection with many embodiments of the present disclosure any element can be used instead. Based on alignment of the code superimposed on the image a block of code can correspond to a part of the image. A part of the image can include pixels of the image on which a block of code is superimposed. In some embodiments the matching module can define or apply a common coordinate system or other position determination functionality to match a block of code with a corresponding part of the image. For example the common coordinate system can identify correspondence between a particular block of code and a corresponding part of the image based on identical positions of the block of code and the part of the image.

The gradient module can alter the appearance of some or all blocks of the code. The appearance of a block of code superimposed on a corresponding part of an image can be adjusted to optimize both the ability to scan the code and the ability to view the image. In particular the gradient module can adjust the appearance of a block of code based on a gradient of opacity. When the opacity of the block of the code is adjusted by the gradient a center portion of the block of code can have a relatively high opacity and outer portions of the block of code can have relatively low opacity. The center portion of the block of code can be any shape or form such as a point a circle a square etc. The gradient of opacity can be linear or nonlinear. When the appearance of the block of code is adjusted by a gradient of opacity the center portion of the block of code can allow for the ability to successfully scan the code while the outer portion of the block of code can allow for the ability to view a substantial portion of the corresponding part of the image.

In some embodiments the parts of the code can be altered in shape. For example alignment markers of the code can be shaped as rectangles or rounded rectangles. As another example alignment markers of the code can be shaped as circles instead of rectangles or rounded rectangles. The opacity of alignment markers can be based on a gradient.

Like the gradient module the luminance module can alter the appearance of some or all blocks of the code. The opacity of a block of code superimposed on a corresponding part of an image can be adjusted to optimize both the ability to scan the code and the ability to view the image. A desired value of the opacity of a block of code can depend on many considerations. Such considerations can include for example a value of luminance of pixels in a corresponding part of the image a value of variance in luminance of pixels in a corresponding part of the image and a difference in values of luminance of pixels in adjacent parts of the image.

A desired value of the opacity of a block of code can depend on a value of luminance of pixels in a corresponding part of the image. The value of the luminance of the pixels can be represented over a luminance region or spectrum . In some embodiments the luminance region can be defined at one end by a value of black to represent a lowest value of luminance and at an opposite end by a value of white to represent a highest value of luminance. The lowest value of luminance and the highest value of luminance can be numerically represented. For example the lowest value of luminance can be assigned a value of zero and the highest value of luminance can be assigned a value of one.

The desired value of the opacity of a block of code which can be represented by a variable alpha can be a function of a value of luminance. The desired value of the opacity of a block of code can be represented over a region or spectrum . In some embodiments the region can be defined at one end by a lowest value of zero and at an opposite end by a highest value of one. When alpha is equal to a highest value of opacity e.g. one the block of code is fully opaque and the pixels in the corresponding part of the image cannot be seen. When alpha is equal to a lowest value of opacity e.g. zero the block of code is fully not opaque or transparent and the block of code cannot be seen while the pixels in the corresponding part of the image can be seen.

A desired value of the opacity of a block of code also can depend on a value of variance e.g. standard deviation of luminance of pixels in a corresponding part of the image. A value of opacity of a block of code based on an average value of luminance of the pixels in a corresponding part of the image when there is variance of luminance of the pixels may not be optimal to allow for both scanning of the code and viewing of the image. When the luminance of pixels in a corresponding part of the image varies a higher value of opacity of a block of code can be desired. For example as the variance of the luminance of pixels in a corresponding part of the image increases the desired value of opacity of a block of code can increase. In some embodiments a desired value of opacity for a block of code can be a function of the variance of luminance of pixels in a corresponding part of the image. In some instances the function can be linear or nonlinear.

A desired value of the opacity of a block of code also can depend on the difference between average luminance of pixels in adjacent parts of the image. When the average luminance of pixels in a first part of the image is a relatively high value and the average luminance of pixels in a second part of the image adjacent to the first part of the image is a relatively low value higher values of opacity for associated blocks of code can be desired. For example as the difference between the average luminance of pixels in a first part of the image and the average luminance of pixels in an adjacent second part of the image increases the desired values of opacity of the two associated blocks of code can increase. In some embodiments a desired value of opacity for a block of code can be a function of the difference in average luminance in corresponding part of the image and an adjacent part of the image. In some instances the function can be linear or nonlinear.

In some embodiments each block of code can have more than one tone. For example each block of code can have two tones in a two toned version of a personalized code. In a two toned version of a personalized code a foreground tone located in the center of the block of code can be associated with a foreground alpha value and a background tone located outside of the center of the block of code can be associated with a background alpha value. show examples of two toned versions of personalized codes and in particular personalized code in personalized code in and personalized code in . Each block of code in the personalized codes is two toned. For example a block of code in the personalized code includes a foreground tone that appears as a disc centered in the block and a background tone that appears between the boundaries of the disc and the block. In various embodiments the appearance of the foreground tone and the background tone can take any suitable shape or size.

Example alpha values can be used when black is superimposed in connection with a two toned personalized code. When luminance is equal to zero black luminance for superimposition of black a foreground alpha value can be set such that alpha0 0.4 0.2 0.08. When luminance is equal to one white luminance for superimposition of black a foreground alpha value can be set such that alpha1 0.4. When luminance is equal to zero black luminance for superimposition of black a background alpha value can be set such that alpha0 0.2 0.2 0.04. When luminance is equal to one white luminance for superimposition of black a background alpha value can be set such that alpha1 0.2. In general a value of alpha can be determined by the equation alpha luminance alpha1 1 luminance alpha0 where luminance is the mean luminance of pixels over which black is being superimposed. Other suitable foreground and background values of alph0 and alpha1 and other equations to determine the value of alpha can be used in other embodiments.

Example alpha values can be used when white is superimposed in connection with a two toned personalized code. When luminance is equal to zero black luminance for superimposition of white a foreground alpha value can be set such that alpha0 0.5. When luminance is equal to one white luminance for superimposition of white a foreground alpha value can be set such that alpha1 0.5 0.2 0.1. When luminance is equal to zero black luminance for superimposition of white a background alpha value can be set such that alpha0 0.32. When luminance is equal to one white luminance for superimposition of white a background alpha value can be set such that alpha1 0.32 0.2 0.064. In general a value of alpha can be determined by the equation alpha luminance alpha1 1 luminance alpha0 where luminance is the mean luminance of pixels over which white is being superimposed. Other suitable foreground and background values of alph0 and alpha1 and other equations to determine the value of alpha can be used in other embodiments.

In some embodiments alpha values can be further modified by a value of intensity. The intensity is calculated for each pixel region and it is the maximum absolute difference in mean luminance between its pixels and the mean luminance of the adjacent pixel regions. The standard deviation of the luminance of the pixels in a region can be rescaled to be between 0 and 1 if multiplied by 2 since the maximum standard deviation is 0.5. The final intensity value is the maximum of this rescaled standard deviation and the above intensity value. An intensity value of 0 gives the alpha values set forth above and is used over areas of uniformity where it is easier for the code to be read since the image pixels are not interfering with the code. An intensity value of 1 is an area where the underlying pixels and or adjacent pixels are varied. The intensity values only affect the foreground alpha values. This calculation of the intensity allows alteration of the alpha values of the block of code based on both the variance standard deviation of the underlying pixels and the differences in luminance between the adjacent regions.

For example to superimpose black foreground alpha values can be set such that alpha0 0.4 0.2 0.75 0.4 0.2 intensity and alpha1 0.4 0.6 intensity while background alpha values can be set such that alpha0 0.2 0.2 0.04 and alpha1 0.2. For example to superimpose white foreground alpha values can be set such that alpha0 0.5 0.5 intensity and alpha1 0.5 0.2 0.75 0.5 0.2 intensity while background alpha values can be set such that alpha0 0.32 and alpha1 0.32 0.2 0.064. Again other suitable foreground and background values of alph0 and alpha1 can be used in other embodiments.

The saliency module can selectively adjust the opacity of a block of code based on importance of parts of the code. The saliency module can identify blocks of code that are relatively more important for proper scanning of the code. Blocks of code that are relatively more important can include portions of the code that relate to for example timing alignment version information format information the quiet zone etc. For blocks of code that are relatively more important the saliency module can maintain or increase the opacity of the blocks of code to optimize the ability to scan the blocks. The saliency module also can identify blocks of code that are relatively less important for proper scanning of the code. Blocks of code that are relatively less important can include portions of the code that are associated with for example an error correction region of the code. For blocks of code that are relatively less important the saliency module can maintain or decrease the opacity of the blocks of code to optimize the ability to view the image. In some embodiments an administrator of a social networking system or a user who selected the image can determine blocks of code that are more important and blocks of code that are less important.

The saliency module can selectively adjust the opacity of a block of code based on importance of part of an image. The saliency module can identify parts of an image that are relatively more important for meaningfully viewing the image. The parts of an image that are relatively more important can include for example faces in an image primary subject matter in the image other objects in the image the center of the image etc. For blocks of code associated with the parts of an image that are relatively more important the saliency module can decrease the opacity of the blocks of code to optimize the ability of persons to view the parts of the image. Further when the blocks of code associated with parts of an image that are relatively more important are included in error correction regions of the code the saliency module can further decrease the opacity of the blocks because even if some of the blocks are not readable the code still can be readable. The saliency module can identify parts of an image that are relatively less important for meaningfully viewing the image. The parts of an image that are relatively less important can include for example objects positioned along edges of the image. For blocks of code associated with the parts of an image that are relatively less important the saliency module can increase the opacity of the blocks of code to optimize the readability of the code. In some embodiments an administrator of a social networking system or a user who selected the image can determine parts of an image that are more important and parts of an image that are less important.

The saliency module also can adjust the relative position of a code and an image on which the code is superimposed. For example the relative position of the code and the image can be adjusted so that the parts of the image that are relatively more important are positioned under blocks of the code that are relatively less important. As a result the saliency module can decrease the opacity of the blocks of the code that are relatively less important to optimize the visibility of the parts of the image. As another example the relative position of the code and the image can be adjusted so that parts of the image that are relatively less important are positioned under blocks of the code that are relatively more important. As a result the saliency module can increase the opacity of the blocks of code that are relatively more important to optimize the readability of the blocks of code.

The readability module can assess readability of generated personalized codes. The readability module can determine whether adjustments to a code in the generation of a personalized code have impacted the readability of the code. In some embodiments the readability module can qualify a generated personalized code based on a readability threshold. For example a readability threshold can be a required percentage of successful attempts to read the personalized code. A readability threshold can require that for example a certain number of attempts out of 100 attempts to read the code result in successful reading of the code. The readability threshold can be selected by an administrator of a system that implements the code personalization module such as a social networking system.

If a generated personalized code satisfies the readability threshold the personalized code can be presented to the user and to other members of the social networking system who may be prompted to read and view the personalized code. If a generated personalized code does not satisfy the readability threshold the combination module can selectively increase values of opacity of blocks of code to generate a new personalized code. The readability threshold then can be applied to the new personalized code. The process can continue until a generated personalized code satisfies the readability threshold. In some embodiments the readability module can apply minimum threshold values of opacity to blocks of code to ensure that no matter the functionality of the combination module utilized to generate the personalized code the personalized code can be successfully read.

At block the method can select a code. At block the method can select an image on which the code is superimposed. At block the method can associate a block of the code with a corresponding part of the image. At block the method can determine a desired value of opacity of the block of the code based on the corresponding part of the image. At block the method can decrease the desired value of opacity of the block of the code based on at least one of the block of the code being associated with a less important part of the code and the corresponding part of the image being a more important part of the image. At block the method can generate a personalized code based on the desired value of opacity of the block of the code. At block the method can qualify the personalized code based on a readability threshold. Other suitable techniques are possible.

The user device comprises one or more computing devices that can receive input from a user and transmit and receive data via the network . In one embodiment the user device is a conventional computer system executing for example a Microsoft Windows compatible operating system OS Apple OS X and or a Linux distribution. In another embodiment the user device can be a device having computer functionality such as a smart phone a tablet a personal digital assistant PDA a mobile telephone etc. The user device is configured to communicate via the network . The user device can execute an application for example a browser application that allows a user of the user device to interact with the social networking system . In another embodiment the user device interacts with the social networking system through an application programming interface API provided by the native operating system of the user device such as iOS and ANDROID. The user device is configured to communicate with the external system and the social networking system via the network which may comprise any combination of local area and or wide area networks using wired and or wireless communication systems.

In one embodiment the network uses standard communications technologies and protocols. Thus the network can include links using technologies such as Ethernet . worldwide interoperability for microwave access WiMAX 3G 4G CDMA GSM LTE digital subscriber line DSL etc. Similarly the networking protocols used on the network can include multiprotocol label switching MPLS transmission control protocol Internet protocol TCP IP User Datagram Protocol UDP hypertext transport protocol HTTP simple mail transfer protocol SMTP file transfer protocol FTP and the like. The data exchanged over the network can be represented using technologies and or formats including hypertext markup language HTML and extensible markup language XML . In addition all or some links can be encrypted using conventional encryption technologies such as secure sockets layer SSL transport layer security TLS and Internet Protocol security IPsec .

In one embodiment the user device may display content from the external system and or from the social networking system by processing a markup language document received from the external system and from the social networking system using a browser application . The markup language document identifies content and one or more instructions describing formatting or presentation of the content. By executing the instructions included in the markup language document the browser application displays the identified content using the format or presentation described by the markup language document . For example the markup language document includes instructions for generating and displaying a web page having multiple frames that include text and or image data retrieved from the external system and the social networking system . In various embodiments the markup language document comprises a data file including extensible markup language XML data extensible hypertext markup language XHTML data or other markup language data. Additionally the markup language document may include JavaScript Object Notation JSON data JSON with padding JSONP and JavaScript data to facilitate data interchange between the external system and the user device . The browser application on the user device may use a JavaScript compiler to decode the markup language document .

The markup language document may also include or link to applications or application frameworks such as FLASH or Unity applications the SilverLight application framework etc.

In one embodiment the user device also includes one or more cookies including data indicating whether a user of the user device is logged into the social networking system which may enable modification of the data communicated from the social networking system to the user device .

The external system includes one or more web servers that include one or more web pages which are communicated to the user device using the network . The external system is separate from the social networking system . For example the external system is associated with a first domain while the social networking system is associated with a separate social networking domain. Web pages included in the external system comprise markup language documents identifying content and including instructions specifying formatting or presentation of the identified content.

The social networking system includes one or more computing devices for a social network including a plurality of users and providing users of the social network with the ability to communicate and interact with other users of the social network. In some instances the social network can be represented by a graph i.e. a data structure including edges and nodes. Other data structures can also be used to represent the social network including but not limited to databases objects classes meta elements files or any other data structure. The social networking system may be administered managed or controlled by an operator. The operator of the social networking system may be a human being an automated application or a series of applications for managing content regulating policies and collecting usage metrics within the social networking system . Any type of operator may be used.

Users may join the social networking system and then add connections to any number of other users of the social networking system to whom they desire to be connected. As used herein the term friend refers to any other user of the social networking system to whom a user has formed a connection association or relationship via the social networking system . For example in an embodiment if users in the social networking system are represented as nodes in the social graph the term friend can refer to an edge formed between and directly connecting two user nodes.

Connections may be added explicitly by a user or may be automatically created by the social networking system based on common characteristics of the users e.g. users who are alumni of the same educational institution . For example a first user specifically selects a particular other user to be a friend. Connections in the social networking system are usually in both directions but need not be so the terms user and friend depend on the frame of reference. Connections between users of the social networking system are usually bilateral two way or mutual but connections may also be unilateral or one way. For example if Bob and Joe are both users of the social networking system and connected to each other Bob and Joe are each other s connections. If on the other hand Bob wishes to connect to Joe to view data communicated to the social networking system by Joe but Joe does not wish to form a mutual connection a unilateral connection may be established. The connection between users may be a direct connection however some embodiments of the social networking system allow the connection to be indirect via one or more levels of connections or degrees of separation.

In addition to establishing and maintaining connections between users and allowing interactions between users the social networking system provides users with the ability to take actions on various types of items supported by the social networking system . These items may include groups or networks i.e. social networks of people entities and concepts to which users of the social networking system may belong events or calendar entries in which a user might be interested computer based applications that a user may use via the social networking system transactions that allow users to buy or sell items via services provided by or through the social networking system and interactions with advertisements that a user may perform on or off the social networking system . These are just a few examples of the items upon which a user may act on the social networking system and many others are possible. A user may interact with anything that is capable of being represented in the social networking system or in the external system separate from the social networking system or coupled to the social networking system via the network .

The social networking system is also capable of linking a variety of entities. For example the social networking system enables users to interact with each other as well as external systems or other entities through an API a web service or other communication channels. The social networking system generates and maintains the social graph comprising a plurality of nodes interconnected by a plurality of edges. Each node in the social graph may represent an entity that can act on another node and or that can be acted on by another node. The social graph may include various types of nodes. Examples of types of nodes include users non person entities content items web pages groups activities messages concepts and any other things that can be represented by an object in the social networking system . An edge between two nodes in the social graph may represent a particular kind of connection or association between the two nodes which may result from node relationships or from an action that was performed by one of the nodes on the other node. In some cases the edges between nodes can be weighted. The weight of an edge can represent an attribute associated with the edge such as a strength of the connection or association between nodes. Different types of edges can be provided with different weights. For example an edge created when one user likes another user may be given one weight while an edge created when a user befriends another user may be given a different weight.

As an example when a first user identifies a second user as a friend an edge in the social graph is generated connecting a node representing the first user and a second node representing the second user. As various nodes relate or interact with each other the social networking system modifies edges connecting the various nodes to reflect the relationships and interactions.

The social networking system also includes user generated content which enhances a user s interactions with the social networking system . User generated content may include anything a user can add upload send or post to the social networking system . For example a user communicates posts to the social networking system from a user device . Posts may include data such as status updates or other textual data location information images such as photos videos links music or other similar data and or media. Content may also be added to the social networking system by a third party. Content items are represented as objects in the social networking system . In this way users of the social networking system are encouraged to communicate with each other by posting text and content items of various types of media through various communication channels. Such communication increases the interaction of users with each other and increases the frequency with which users interact with the social networking system .

The social networking system includes a web server an API request server a user profile store a connection store an action logger an activity log and an authorization server . In an embodiment of the invention the social networking system may include additional fewer or different components for various applications. Other components such as network interfaces security mechanisms load balancers failover servers management and network operations consoles and the like are not shown so as to not obscure the details of the system.

The user profile store maintains information about user accounts including biographic demographic and other types of descriptive information such as work experience educational history hobbies or preferences location and the like that has been declared by users or inferred by the social networking system . This information is stored in the user profile store such that each user is uniquely identified. The social networking system also stores data describing one or more connections between different users in the connection store . The connection information may indicate users who have similar or common work experience group memberships hobbies or educational history. Additionally the social networking system includes user defined connections between different users allowing users to specify their relationships with other users. For example user defined connections allow users to generate relationships with other users that parallel the users real life relationships such as friends co workers partners and so forth. Users may select from predefined types of connections or define their own connection types as needed. Connections with other nodes in the social networking system such as non person entities buckets cluster centers images interests pages external systems concepts and the like are also stored in the connection store .

The social networking system maintains data about objects with which a user may interact. To maintain this data the user profile store and the connection store store instances of the corresponding type of objects maintained by the social networking system . Each object type has information fields that are suitable for storing information appropriate to the type of object. For example the user profile store contains data structures with fields suitable for describing a user s account and information related to a user s account. When a new object of a particular type is created the social networking system initializes a new data structure of the corresponding type assigns a unique object identifier to it and begins to add data to the object as needed. This might occur for example when a user becomes a user of the social networking system the social networking system generates a new instance of a user profile in the user profile store assigns a unique identifier to the user account and begins to populate the fields of the user account with information provided by the user.

The connection store includes data structures suitable for describing a user s connections to other users connections to external systems or connections to other entities. The connection store may also associate a connection type with a user s connections which may be used in conjunction with the user s privacy setting to regulate access to information about the user. In an embodiment of the invention the user profile store and the connection store may be implemented as a federated database.

Data stored in the connection store the user profile store and the activity log enables the social networking system to generate the social graph that uses nodes to identify various objects and edges connecting nodes to identify relationships between different objects. For example if a first user establishes a connection with a second user in the social networking system user accounts of the first user and the second user from the user profile store may act as nodes in the social graph. The connection between the first user and the second user stored by the connection store is an edge between the nodes associated with the first user and the second user. Continuing this example the second user may then send the first user a message within the social networking system . The action of sending the message which may be stored is another edge between the two nodes in the social graph representing the first user and the second user. Additionally the message itself may be identified and included in the social graph as another node connected to the nodes representing the first user and the second user.

In another example a first user may tag a second user in an image that is maintained by the social networking system or alternatively in an image maintained by another system outside of the social networking system . The image may itself be represented as a node in the social networking system . This tagging action may create edges between the first user and the second user as well as create an edge between each of the users and the image which is also a node in the social graph. In yet another example if a user confirms attending an event the user and the event are nodes obtained from the user profile store where the attendance of the event is an edge between the nodes that may be retrieved from the activity log . By generating and maintaining the social graph the social networking system includes data describing many different types of objects and the interactions and connections among those objects providing a rich source of socially relevant information.

The web server links the social networking system to one or more user devices and or one or more external systems via the network . The web server serves web pages as well as other web related content such as Java JavaScript Flash XML and so forth. The web server may include a mail server or other messaging functionality for receiving and routing messages between the social networking system and one or more user devices . The messages can be instant messages queued messages e.g. email text and SMS messages or any other suitable messaging format.

The API request server allows one or more external systems and user devices to call access information from the social networking system by calling one or more API functions. The API request server may also allow external systems to send information to the social networking system by calling APIs. The external system in one embodiment sends an API request to the social networking system via the network and the API request server receives the API request. The API request server processes the request by calling an API associated with the API request to generate an appropriate response which the API request server communicates to the external system via the network . For example responsive to an API request the API request server collects data associated with a user such as the user s connections that have logged into the external system and communicates the collected data to the external system . In another embodiment the user device communicates with the social networking system via APIs in the same manner as external systems .

The action logger is capable of receiving communications from the web server about user actions on and or off the social networking system . The action logger populates the activity log with information about user actions enabling the social networking system to discover various actions taken by its users within the social networking system and outside of the social networking system . Any action that a particular user takes with respect to another node on the social networking system may be associated with each user s account through information maintained in the activity log or in a similar database or other data repository. Examples of actions taken by a user within the social networking system that are identified and stored may include for example adding a connection to another user sending a message to another user reading a message from another user viewing content associated with another user attending an event posted by another user posting an image attempting to post an image or other actions interacting with another user or another object. When a user takes an action within the social networking system the action is recorded in the activity log . In one embodiment the social networking system maintains the activity log as a database of entries. When an action is taken within the social networking system an entry for the action is added to the activity log . The activity log may be referred to as an action log.

Additionally user actions may be associated with concepts and actions that occur within an entity outside of the social networking system such as an external system that is separate from the social networking system . For example the action logger may receive data describing a user s interaction with an external system from the web server . In this example the external system reports a user s interaction according to structured actions and objects in the social graph.

Other examples of actions where a user interacts with an external system include a user expressing an interest in an external system or another entity a user posting a comment to the social networking system that discusses an external system or a web page within the external system a user posting to the social networking system a Uniform Resource Locator URL or other identifier associated with an external system a user attending an event associated with an external system or any other action by a user that is related to an external system . Thus the activity log may include actions describing interactions between a user of the social networking system and an external system that is separate from the social networking system .

The authorization server enforces one or more privacy settings of the users of the social networking system . A privacy setting of a user determines how particular information associated with a user can be shared. The privacy setting comprises the specification of particular information associated with a user and the specification of the entity or entities with whom the information can be shared. Examples of entities with which information can be shared may include other users applications external systems or any entity that can potentially access the information. The information that can be shared by a user comprises user account information such as profile photos phone numbers associated with the user user s connections actions taken by the user such as adding a connection changing user profile information and the like.

The privacy setting specification may be provided at different levels of granularity. For example the privacy setting may identify specific information to be shared with other users the privacy setting identifies a work phone number or a specific set of related information such as personal information including profile photo home phone number and status. Alternatively the privacy setting may apply to all the information associated with the user. The specification of the set of entities that can access particular information can also be specified at various levels of granularity. Various sets of entities with which information can be shared may include for example all friends of the user all friends of friends all applications or all external systems . One embodiment allows the specification of the set of entities to comprise an enumeration of entities. For example the user may provide a list of external systems that are allowed to access certain information. Another embodiment allows the specification to comprise a set of entities along with exceptions that are not allowed to access the information. For example a user may allow all external systems to access the user s work information but specify a list of external systems that are not allowed to access the work information. Certain embodiments call the list of exceptions that are not allowed to access certain information a block list . External systems belonging to a block list specified by a user are blocked from accessing the information specified in the privacy setting. Various combinations of granularity of specification of information and granularity of specification of entities with which information is shared are possible. For example all personal information may be shared with friends whereas all work information may be shared with friends of friends.

The authorization server contains logic to determine if certain information associated with a user can be accessed by a user s friends external systems and or other applications and entities. The external system may need authorization from the authorization server to access the user s more private and sensitive information such as the user s work phone number. Based on the user s privacy settings the authorization server determines if another user the external system an application or another entity is allowed to access information associated with the user including information about actions taken by the user.

In some embodiments the social networking system can include a code personalization module . The code personalization module can be implemented with the code personalization module .

The foregoing processes and features can be implemented by a wide variety of machine and computer system architectures and in a wide variety of network and computing environments. illustrates an example of a computer system that may be used to implement one or more of the embodiments described herein in accordance with an embodiment of the invention. The computer system includes sets of instructions for causing the computer system to perform the processes and features discussed herein. The computer system may be connected e.g. networked to other machines. In a networked deployment the computer system may operate in the capacity of a server machine or a client machine in a client server network environment or as a peer machine in a peer to peer or distributed network environment. In an embodiment of the invention the computer system may be the social networking system the user device and the external system or a component thereof. In an embodiment of the invention the computer system may be one server among many that constitutes all or part of the social networking system .

The computer system includes a processor a cache and one or more executable modules and drivers stored on a computer readable medium directed to the processes and features described herein. Additionally the computer system includes a high performance input output I O bus and a standard I O bus . A host bridge couples processor to high performance I O bus whereas I O bus bridge couples the two buses and to each other. A system memory and one or more network interfaces couple to high performance I O bus . The computer system may further include video memory and a display device coupled to the video memory not shown . Mass storage and I O ports couple to the standard I O bus . The computer system may optionally include a keyboard and pointing device a display device or other input output devices not shown coupled to the standard I O bus . Collectively these elements are intended to represent a broad category of computer hardware systems including but not limited to computer systems based on the x86 compatible processors manufactured by Intel Corporation of Santa Clara Calif. and the x86 compatible processors manufactured by Advanced Micro Devices AMD Inc. of Sunnyvale Calif. as well as any other suitable processor.

An operating system manages and controls the operation of the computer system including the input and output of data to and from software applications not shown . The operating system provides an interface between the software applications being executed on the system and the hardware components of the system. Any suitable operating system may be used such as the LINUX Operating System the Apple Macintosh Operating System available from Apple Computer Inc. of Cupertino Calif. UNIX operating systems Microsoft Windows operating systems BSD operating systems and the like. Other implementations are possible.

The elements of the computer system are described in greater detail below. In particular the network interface provides communication between the computer system and any of a wide range of networks such as an Ethernet e.g. IEEE 802.3 network a backplane etc. The mass storage provides permanent storage for the data and programming instructions to perform the above described processes and features implemented by the respective computing systems identified above whereas the system memory e.g. DRAM provides temporary storage for the data and programming instructions when executed by the processor . The I O ports may be one or more serial and or parallel communication ports that provide communication between additional peripheral devices which may be coupled to the computer system .

The computer system may include a variety of system architectures and various components of the computer system may be rearranged. For example the cache may be on chip with processor . Alternatively the cache and the processor may be packed together as a processor module with processor being referred to as the processor core . Furthermore certain embodiments of the invention may neither require nor include all of the above components. For example peripheral devices coupled to the standard I O bus may couple to the high performance I O bus . In addition in some embodiments only a single bus may exist with the components of the computer system being coupled to the single bus. Moreover the computer system may include additional components such as additional processors storage devices or memories.

In general the processes and features described herein may be implemented as part of an operating system or a specific application component program object module or series of instructions referred to as programs . For example one or more programs may be used to execute specific processes described herein. The programs typically comprise one or more instructions in various memory and storage devices in the computer system that when read and executed by one or more processors cause the computer system to perform operations to execute the processes and features described herein. The processes and features described herein may be implemented in software firmware hardware e.g. an application specific integrated circuit or any combination thereof.

In one implementation the processes and features described herein are implemented as a series of executable modules run by the computer system individually or collectively in a distributed computing environment. The foregoing modules may be realized by hardware executable modules stored on a computer readable medium or machine readable medium or a combination of both. For example the modules may comprise a plurality or series of instructions to be executed by a processor in a hardware system such as the processor . Initially the series of instructions may be stored on a storage device such as the mass storage . However the series of instructions can be stored on any suitable computer readable storage medium. Furthermore the series of instructions need not be stored locally and could be received from a remote storage device such as a server on a network via the network interface . The instructions are copied from the storage device such as the mass storage into the system memory and then accessed and executed by the processor . In various implementations a module or modules can be executed by a processor or multiple processors in one or multiple locations such as multiple servers in a parallel processing environment.

Examples of computer readable media include but are not limited to recordable type media such as volatile and non volatile memory devices solid state memories floppy and other removable disks hard disk drives magnetic media optical disks e.g. Compact Disk Read Only Memory CD ROMS Digital Versatile Disks DVDs other similar non transitory or transitory tangible or non tangible storage medium or any type of medium suitable for storing encoding or carrying a series of instructions for execution by the computer system to perform any one or more of the processes and features described herein.

For purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the description. It will be apparent however to one skilled in the art that embodiments of the disclosure can be practiced without these specific details. In some instances modules structures processes features and devices are shown in block diagram form in order to avoid obscuring the description. In other instances functional block diagrams and flow diagrams are shown to represent data and logic flows. The components of block diagrams and flow diagrams e.g. modules blocks structures devices features etc. may be variously combined separated removed reordered and replaced in a manner other than as expressly described and depicted herein.

Reference in this specification to one embodiment an embodiment other embodiments one series of embodiments some embodiments various embodiments or the like means that a particular feature design structure or characteristic described in connection with the embodiment is included in at least one embodiment of the disclosure. The appearances of for example the phrase in one embodiment or in an embodiment in various places in the specification are not necessarily all referring to the same embodiment nor are separate or alternative embodiments mutually exclusive of other embodiments. Moreover whether or not there is express reference to an embodiment or the like various features are described which may be variously combined and included in some embodiments but also variously omitted in other embodiments. Similarly various features are described that may be preferences or requirements for some embodiments but not other embodiments.

The language used herein has been principally selected for readability and instructional purposes and it may not have been selected to delineate or circumscribe the inventive subject matter. It is therefore intended that the scope of the invention be limited not by this detailed description but rather by any claims that issue on an application based hereon. Accordingly the disclosure of the embodiments of the invention is intended to be illustrative but not limiting of the scope of the invention which is set forth in the following claims.

