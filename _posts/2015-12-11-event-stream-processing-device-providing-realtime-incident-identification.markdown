---

title: Event stream processing device providing real-time incident identification
abstract: A computing device to perform incident identification on streamed event data is provided. An event block object is received. The event block object includes a measurement data value generated by a sensor. A plurality of measurement data values and associated time values are extracted for the plurality of event block objects that occur during a time window. A similarity measure is computed between the measurement data values and each of a plurality of reference incident signatures. A best matching reference incident signature is selected from the similarity measures. The similarity measure for the selected best matching reference incident signature is compared to a threshold value. When the selected similarity measure satisfies the threshold value, a type of incident for the extracted measurement data values is identified as a type of incident defined for the selected best matching reference incident signature and is output to an incident information subscribing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09432430&OS=09432430&RS=09432430
owner: SAS Institute Inc.
number: 09432430
owner_city: Cary
owner_country: US
publication_date: 20151211
---
The present application claims the benefit of 35 U.S.C. 119 e to U.S. Provisional Patent Application No. 62 142 277 filed Apr. 2 2015 and to U.S. Provisional Patent Application No. 62 200 394 filed Aug. 3 2015 the entire contents of which are hereby incorporated by reference.

An increasing number of distributed applications process continuously flowing data from geographically distributed sources perform analytics on the streamed data and provide analysis results to entities that may also be geographically distributed. The continuously flowing data may be generated from sensor measurements that capture real time data describing current operating characteristics of a remotely distributed device.

In an example embodiment a computer readable medium is provided having stored thereon computer readable instructions that when executed by a computing device cause the computing device to perform incident identification on streamed event data. An event block object is received from an event publishing device. The event block object is received as part of an event stream of a plurality of event block objects received from the event publishing device. The event block object includes a measurement data value and a time value. The measurement data value is generated by a sensor at a time indicated by the time value. A plurality of measurement data values and associated time values for the plurality of event block objects that occur during a time window are extracted. A similarity measure is computed between the extracted measurement data values and each of a plurality of reference incident signatures defined for incidents that occurred previously in time. A best matching reference incident signature is selected from the computed similarity measures. The computed similarity measure for the selected best matching reference incident signature is compared to a threshold value. When the computed similarity measure for the selected best matching reference incident signature satisfies the threshold value based on the comparison a type of incident for the extracted measurement data values is identified as a type of incident defined for the selected best matching reference incident signature and the identified type of incident and the extracted measurement data values are output to an incident information subscribing device.

In another example embodiment a system is provided. The system includes but is not limited to a processor and a computer readable medium operably coupled to the processor. The computer readable medium has instructions stored thereon that when executed by the processor cause the system to perform incident identification on streamed event data.

In yet another example embodiment a method of performing incident identification on streamed event data is provided.

Other principal features of the disclosed subject matter will become apparent to those skilled in the art upon review of the following drawings the detailed description and the appended claims.

Referring to a comparison between the incoming incident voltage measurement curve of and a line trip voltage measurement curve of

Referring to a block diagram of a stream processing system is shown in accordance with an illustrative embodiment. In an illustrative embodiment stream processing system may include a plurality of event publishing systems an event stream processing ESP device a reference incidents determination device a plurality of incident information subscribing systems and a network . Each of the plurality of event publishing systems ESP device reference incidents determination device and the plurality of incident information subscribing systems may be composed of one or more discrete devices in communication through network . ESP device and reference incidents determination device may be integrated into a single computing device.

The plurality of event publishing systems includes is integrated with and or communicates with one or more sensors that produce sensor signal values referred to as measurement data values. A sensor may measure a physical quantity in an environment to which the sensor is associated and generate a corresponding measurement datum that typically is associated with a time that the measurement datum is generated. The environment to which the sensor is associated for monitoring may include a power grid system a telecommunications system a fluid oil gas water etc. pipeline a transportation system an industrial device a medical device an appliance a vehicle a computing device etc. Example sensors include a pressure sensor a temperature sensor a position or location sensor a velocity sensor an acceleration sensor a fluid flow rate sensor a voltage sensor a current sensor a frequency sensor a phase angle sensor a data rate sensor a humidity sensor an acoustic sensor a light sensor a motion sensor an electromagnetic field sensor a force sensor a torque sensor a load sensor a strain sensor a chemical property sensor a resistance sensor a radiation sensor an irradiance sensor a proximity sensor a distance sensor a vibration sensor etc. that may be mounted to various components used as part of the system. As another example a sensor may be a computing device that receives a measurement data value generated or captured in response to occurrence of a transaction such as a purchase or sale of a commodity of any type generated by a device such as in response to an interaction by a user with the device etc.

The plurality of event publishing systems publishes the sensor measurements to ESP device . ESP device receives the sensor measurements in an event stream and identifies an incident by comparing reference signatures to the sensor measurement values included in the event stream. Reference incidents determination device may determine and or store the reference signatures. When an incident is identified ESP device may quantify the incident before sending information concerning the incident to one or more of the plurality of incident information subscribing systems . ESP device further may detect occurrence of the incident prior to identifying the incident so that not all of the sensor measurements are compared to the reference signatures. The plurality of incident information subscribing systems may include an incident database a system control operator display system an automatic control system a post incident analysis device an incident notification device etc.

Occurrence of an incident does not necessarily indicate that there is a problem or that one will develop in the system to which the sensor is associated. Occurrence of the incident may indicate an abnormal or unexpected sensor measurement. The system may be designed to perform properly despite occurrence of some types of incidents by automatically responding to or recovering from the incident without intervention or by continuing operation without change whereas other types of incidents may indicate a need to intervene either under control of an operator or by an automatic control system. Occurrence of some types of incidents may be used to predict an equipment failure in the future. Some types of incidents may be environmentally based e.g. a lightning strike a tree falling high wind a flood a fire heat humidity etc. while other types of incidents may be due to age use defect or an non environmentally based occurrence etc. Identifying the type of incident when it occurs allows non consequential incidents to be safely ignored while allowing additional response time when consequential incidents occur.

Network may include one or more networks of the same or different types. Network can be any type of wired and or wireless public or private network including a cellular network a local area network a wide area network such as the Internet or the World Wide Web etc. Network further may comprise sub networks and consist of any number of communication devices.

The one or more computing devices of the plurality of event publishing systems may include computers of any form factor such as a server computer a desktop a smart phone a laptop a personal digital assistant an integrated messaging device a tablet computer etc. Referring to the plurality of event publishing systems can include any number and any combination of form factors of computing devices that may be organized into subnets such as a first subnet and a second subnet . The computing devices of the plurality of event publishing systems send and receive signals through network to from another of the one or more computing devices of the plurality of event publishing systems and or to from ESP device . The one or more computing devices of the plurality of event publishing systems may communicate using various transmission media that may be wired and or wireless as understood by those skilled in the art.

ESP device can include any form factor of computing device. For illustration represent ESP device as a server computer. In general a server computer may include faster processors additional processors more disk memory and more random access memory RAM than a client computer and support multi threading as understood by a person of skill in the art. ESP device sends and receives signals through network to from the plurality of event publishing systems and or to from reference incidents determination device and or to from the plurality of incident information subscribing systems . ESP device may communicate using various transmission media that may be wired and or wireless as understood by those skilled in the art. ESP device may be implemented on a plurality of computing devices of the same or different type. Stream processing system further may include a plurality of ESP devices. For example ESP device may subscribe to a first event stream published by a first ESP device and publish a second event stream for example to one or more of the plurality of incident information subscribing systems . For further illustration the first ESP device may be associated with each of the plurality of event publishing systems or with each of first subnet and of second subnet .

Reference incidents determination device can include any form factor of computing device. For illustration represent reference incidents determination device as a server computer. Reference incidents determination device sends and receives signals through network to from ESP device . Reference incidents determination device may communicate using various transmission media that may be wired and or wireless as understood by those skilled in the art.

Referring to the one or more computing devices of the plurality of incident information subscribing systems may include computers of any form factor such as a smart phone a desktop a server computer a laptop a personal digital assistant an integrated messaging device a tablet computer etc. As shown referring to the plurality of incident information subscribing systems can include any number and any combination of form factors of computing devices. The computing devices of the plurality of incident information subscribing systems send and receive signals through network to from ESP device . The one or more computing devices of the plurality of incident information subscribing systems may communicate using various transmission media that may be wired and or wireless as understood by those skilled in the art.

Referring to a block diagram of an event publishing device is shown in accordance with an example embodiment. Event publishing device is an example computing device of the plurality of event publishing systems . For example each of server computer desktop smart phone and laptop is an instance of event publishing device . Event publishing device may include an input interface an output interface a communication interface a computer readable medium a processor an event publishing application and measurement database . Fewer different and additional components may be incorporated into event publishing device . The event publishing systems may be geographically dispersed from each other and or co located. Each event publishing device of the event publishing systems may include the same or different components and combinations of components.

Input interface provides an interface for receiving information for entry into event publishing device as understood by those skilled in the art. Input interface may interface with various input technologies including but not limited to a keyboard a mouse a display a track ball a keypad one or more buttons etc. to allow the user to enter information into event publishing device or to make selections presented in a user interface displayed on the display. Input interface further may interface with a sensor to receive and to store measurement data obtained by sensor in measurement database . Input interface further may interface with a plurality of sensors of the same or different type. The same interface may support both input interface and output interface . For example a display comprising a touch screen both allows user input and presents output to the user. Event publishing device may have one or more input interfaces that use the same or a different input interface technology. The input interface technology further may be accessible by event publishing device through communication interface .

Output interface provides an interface for outputting information for review by a user of event publishing device . For example output interface may interface with various output technologies including but not limited to display a speaker a printer etc. Event publishing device may have one or more output interfaces that use the same or a different interface technology. The output interface technology further may be accessible by event publishing device through communication interface .

Communication interface provides an interface for receiving and transmitting data between devices using various protocols transmission technologies and media as understood by those skilled in the art. Communication interface may support communication using various transmission media that may be wired and or wireless. Event publishing device may have one or more communication interfaces that use the same or a different communication interface technology. For example event publishing device may support communication using an Ethernet port a Bluetooth antenna a telephone jack a USB port etc. Data and messages may be transferred between event publishing device and ESP device using communication interface .

Computer readable medium is an electronic holding place or storage for information so the information can be accessed by processor as understood by those skilled in the art. Computer readable medium can include but is not limited to any type of random access memory RAM any type of read only memory ROM any type of flash memory etc. such as magnetic storage devices e.g. hard disk floppy disk magnetic strips . . . optical disks e.g. compact disc CD digital versatile disc DVD . . . smart cards flash memory devices etc. Event publishing device may have one or more computer readable media that use the same or a different memory media technology. For example computer readable medium may include different types of computer readable media that may be organized hierarchically to provide efficient access to the data stored therein as understood by a person of skill in the art. As an example a cache may be implemented in a smaller faster memory that stores copies of data from the most frequently recently accessed main memory locations to reduce an access latency. Event publishing device also may have one or more drives that support the loading of a memory media such as a CD or DVD an external hard drive etc. One or more external hard drives further may be connected to event publishing device using communication interface .

Processor executes instructions as understood by those skilled in the art. The instructions may be carried out by a special purpose computer logic circuits or hardware circuits. Processor may be implemented in hardware and or firmware. Processor executes an instruction meaning it performs controls the operations called for by that instruction. The term execution is the process of running an application or the carrying out of the operation called for by an instruction. The instructions may be written using one or more programming language scripting language assembly language etc. Processor operably couples with input interface with output interface with communication interface and with computer readable medium to receive to send and to process information. Processor may retrieve a set of instructions from a permanent memory device and copy the instructions in an executable form to a temporary memory device that is generally some form of RAM. Event publishing device may include a plurality of processors that use the same or a different processing technology.

Event publishing application performs operations associated with generating and or receiving measurement data from sensor and publishing the measurement data in an event stream to ESP device directly or indirectly through an intermediate device such as the first ESP device. The operations may be implemented using hardware firmware software or any combination of these methods. Referring to the example embodiment of event publishing application is implemented in software comprised of computer readable and or computer executable instructions stored in computer readable medium and accessible by processor for execution of the instructions that embody the operations of event publishing application . Event publishing application may be written using one or more programming languages assembly languages scripting languages etc.

Event publishing application may be implemented as a Web application. For example event publishing application may be configured to receive hypertext transport protocol HTTP responses and to send HTTP requests. The HTTP responses may include web pages such as hypertext markup language HTML documents and linked objects generated in response to the HTTP requests. Each web page may be identified by a uniform resource locator URL that includes the location or address of the computing device that contains the resource to be accessed in addition to the location of the resource on that computing device. The type of file or resource depends on the Internet application protocol such as the file transfer protocol HTTP H.323 etc. The file accessed may be a simple text file an image file an audio file a video file an executable a common gateway interface application a Java applet an extensible markup language XML file or any other type of file supported by HTTP.

As used herein measurement database may include any type of content represented in any computer readable format such as binary alphanumeric numeric string markup language etc. The content may include textual information graphical information image information audio information numeric information etc. that further may be encoded using various encoding techniques as understood by a person of skill in the art. Measurement database may be implemented using various formats as known to those skilled in the art including a file system a relational database a system of tables a structured query language database etc. For example measurement database may be stored in a cube distributed across a grid of computers as understood by a person of skill in the art. As another example measurement database may be stored in a multi node Hadoop cluster as understood by a person of skill in the art. Apache Hadoop for example is an open source software framework for distributed computing supported by the Apache Software Foundation. As another example measurement database may be stored in a cloud of computers and accessed using cloud computing technologies as understood by a person of skill in the art.

Referring to a block diagram of ESP device is shown in accordance with an illustrative embodiment. ESP device may include a second input interface a second output interface a second communication interface a second computer readable medium a second processor an ESP application and events . Fewer different or additional components may be incorporated into ESP device .

Second input interface provides the same or similar functionality as that described with reference to input interface of event publishing device though referring to ESP device . Second output interface provides the same or similar functionality as that described with reference to output interface of event publishing device though referring to ESP device . Second communication interface provides the same or similar functionality as that described with reference to communication interface of event publishing device though referring to ESP device . Data and messages may be transferred between ESP device and the plurality event publishing systems reference incidents determination device and or the plurality of incident information subscribing systems using second communication interface . Second computer readable medium provides the same or similar functionality as that described with reference to computer readable medium of event publishing device though referring to ESP device . Second processor provides the same or similar functionality as that described with reference to processor of event publishing device though referring to ESP device .

ESP device receives events that include measurement data received from the event publishing systems . Second computer readable medium may provide the electronic storage medium for events .

ESP application performs operations associated with coordinating and controlling the performance of analytics on events streamed from the plurality of event publishing systems and with sending the processed event data to the plurality of incident information subscribing systems based on a subscription request. ESP application may embed an ESP engine ESPE with its own dedicated thread pool or pools into its application space where the main application thread can do application specific work and the ESPE processes event streams at least by creating an instance of a model into processing objects. The operations may be implemented using hardware firmware software or any combination of these methods. Referring to the example embodiment of ESP application is implemented in software comprised of computer readable and or computer executable instructions stored in second computer readable medium and accessible by second processor for execution of the instructions that embody the operations of ESP application . ESP application may be written using one or more programming languages assembly languages scripting languages etc. ESP application for example may be implemented as a Web application. For illustration ESP application may be the SAS Event Stream Processing Engine developed and provided by SAS Institute Inc. of Cary N.C. USA.

Referring to example operations associated with ESP application are described. ESP application defines how incoming event streams from the event publishing systems events are transformed into meaningful outgoing event streams consumed by the plurality of incident information subscribing systems . Additional fewer or different operations may be performed depending on the embodiment. The order of presentation of the operations of is not intended to be limiting. A user can interact with one or more user interface windows presented to the user in a display under control of ESP application independently or through a browser application in an order selectable by the user. Although some of the operational flows are presented in sequence the various operations may be performed in various repetitions concurrently and or in other orders than those that are illustrated. For example a user may execute ESP application which causes presentation of a first user interface window which may include a plurality of menus and selectors such as drop down menus buttons text boxes hyperlinks etc. associated with ESP application as understood by a person of skill in the art. As further understood by a person of skill in the art various operations may be performed in parallel for example using a plurality of threads.

In an operation ESP application defines and starts an ESP engine ESPE thereby instantiating an ESPE at ESP device . For example referring to the components of an ESPE executing at ESP device are shown in accordance with an illustrative embodiment. ESPE may include one or more projects . A project may be described as a second level container in an engine model managed by ESPE where a thread pool size for the project may be defined by a user. A value of 1 for the thread pool size indicates that writes are single threaded. Each project of the one or more projects may include one or more continuous queries that contain data flows which are data transformations of incoming event streams. The one or more continuous queries may include one or more source windows and one or more derived windows .

The engine container is the top level container in a model that manages the resources of the one or more projects . In an illustrative embodiment for example there is a single ESPE for each instance of ESP application and ESPE has a unique engine name. Additionally the one or more projects may each have unique project names and each query may have a unique continuous query name and begin with a uniquely named source window of the one or more source windows . ESPE may or may not be persistent.

Continuous query modeling involves defining directed graphs of windows for event stream manipulation and transformation. A window in the context of event stream manipulation and transformation is a processing node in an event stream processing model. A window in a continuous query can perform aggregations computations pattern matching and other operations on data flowing through the window. A continuous query may be described as a directed graph of source relational pattern matching and procedural windows. The one or more source windows and the one or more derived windows represent continuously executing queries that generate updates to a query result set as new event blocks stream through ESPE . A directed graph for example is a set of nodes connected by edges where the edges have a direction associated with them.

An event object may be described as a packet of data accessible as a collection of fields with at least one of the fields defined as a key or unique identifier ID . The event object may be created using a variety of formats including binary alphanumeric XML etc. Each event object may include one or more fields designated as a primary identifier ID for the event so ESPE can support operation codes opcodes for events including insert update upsert and delete. Upsert opcodes update the event if the key field already exists otherwise the event is inserted. For illustration an event object may be a packed binary representation of one or more sensor measurements and may include both metadata and measurement data associated with a timestamp value. The metadata may include an opcode indicating if the event represents an insert update delete or upsert a set of flags indicating if the event is a normal partial update or a retention generated event from retention policy management and a set of microsecond timestamps. For example the set of microsecond timestamps may indicate a sensor data generation time a data receipt time by event publishing device a data transmit time by event publishing device a data receipt time by ESP device etc.

An event block object may be described as a grouping or package of one or more event objects. An event stream may be described as a flow of event block objects. A continuous query of the one or more continuous queries transforms the incoming event stream made up of streaming event block objects published into ESPE into one or more outgoing event streams using the one or more source windows and the one or more derived windows . A continuous query can also be thought of as data flow modeling.

The one or more source windows are at the top of the directed graph and have no windows feeding into them. Event streams are published into the one or more source windows and from there the event streams are directed to the next set of connected windows as defined by the directed graph. The one or more derived windows are all instantiated windows that are not source windows and that have other windows streaming events into them. The one or more derived windows perform computations or transformations on the incoming event streams. The one or more derived windows transform event streams based on the window type that is operators such as join filter compute aggregate copy pattern match procedural union etc. and window settings. As event streams are published into ESPE they are continuously queried and the resulting sets of derived windows in these queries are continuously updated.

ESP application may be developed for example using a modeling application programming interface API that provides a set of classes with member functions. As an example the SAS ESP Engine developed and provided by SAS Institute Inc. of Cary N.C. USA provides a modeling API that provides a set of classes with member functions. These functions enable ESP application to embed ESPE possibly with dedicated thread pools into its own process space. Alternatively ESPE can be embedded into the process space of an existing or a new application. In that case a main application thread is focused on its own chores and interacts with the embedded ESPE as needed.

Referring to in an operation the engine container is created. For illustration ESPE may be instantiated using a function call that specifies the engine container as a manager for the model. The function call may include the engine name for ESPE that is provided by a user or a developer and may be unique to ESPE .

In an operation the one or more continuous queries are instantiated by ESPE as a model. The one or more continuous queries may be instantiated with a dedicated thread pool or pools that generate updates as new event block objects stream through ESPE . For illustration the one or more continuous queries may be created to model one or more of an incident detection identification and quantification process based on sensor measurement data monitoring and management.

To create a continuous query input event structures that are schemas with keys that flow into the one or more source windows may be identified. Output event structures that are also schemas with keys generated by the one or more source windows and or the one or more derived windows may also be identified. For example the block of code below illustrates creation of a compute window that normalizes a City field that is created for events in that window 

ESPE may analyze and process events in motion or event streams. Instead of storing events and running queries against the stored events ESPE may store queries and stream events through them to allow continuous analysis of data as it is received. The one or more source windows and the one or more derived windows may be created based on the relational pattern matching and procedural algorithms that transform the input event streams into the output event streams to model simulate score test predict etc. based on the continuous query model defined and application to the streamed data.

In an operation a publish subscribe pub sub capability is initialized for ESPE . In an illustrative embodiment a pub sub capability is initialized for each project of the one or more projects . To initialize and enable pub sub capability for ESPE a port number is provided. Pub sub clients can use a host name of ESP device and the port number to establish pub sub connections to ESPE . For example a server listener socket is opened for the port number to enable the plurality of event publishing systems reference incidents determination device and the plurality of incident information subscribing systems to connect to ESPE for publish subscribe services. The host name of ESP device and the port number to establish pub sub connections to ESPE may be referred to as the host port designation of ESPE executing at ESP device .

Publish subscribe is a message oriented interaction paradigm based on indirect addressing. Processed data recipients the plurality of incident information subscribing systems specify their interest in receiving information from ESPE by subscribing to specific classes of events while information sources the plurality of event publishing systems publish events to ESPE without directly addressing the data recipients. ESPE coordinates the interactions and processes events . In some cases the data source receives confirmation that the published information has been received by a data recipient.

A publish subscribe API may be described as a library that enables an event publisher such as event publishing device to publish event streams into ESPE or an event subscriber to subscribe to event streams from ESPE . For illustration one or more publish subscribe APIs may be defined. As an example a version of the SAS ESP Engine offered by SAS Institute Inc. can provide a C publish subscribe API and a Java publish subscribe API. Using the publish subscribe API event publishing application may publish event streams into a running event stream processor project source window of ESPE and a subscribing device of the plurality of incident information subscribing systems may subscribe to a project source window of ESPE . The publish subscribe API provides cross platform connectivity and endianness compatibility between ESP application and other networked applications.

Referring again to operation initializes the publish subscribe capability of ESPE . In an operation the one or more projects are started. The one or more started projects may run in the background on ESP device . In an operation a connection request is received from a computing device of the event publishing systems for example from event publishing device for a source window to which data will be published.

In an operation an event block object is received from one or more computing devices of the event publishing systems for example from event publishing device . An event block object containing one or more event objects is injected into a source window of the one or more source windows from an instance of event publishing application . The unique ID assigned to the event block object by event publishing device is maintained as the event block object is passed between the one or more source windows and or the one or more derived windows of ESPE . A unique embedded transaction ID further may be embedded in the event block object as the event block object is processed by a continuous query. The received event block objects may be stored as events for example in a RAM or cache type of second computer readable medium .

In an operation the event block object is processed through the one or more continuous queries . For example processing details are described below with reference to . In an operation the processed event block object is output to one or more subscribing device of the plurality of incident information subscribing systems .

ESPE maintains the event block containership aspect of the received event blocks from when the event block is published into a source window and works its way through the directed graph defined by the one or more continuous queries with the various event translations before being output to subscribing devices. Subscribing devices can correlate a group of subscribed event block objects back to a group of published event block objects by comparing the unique ID of the event block object that a publisher such as event publishing device attached to the event block object with the event block ID received by the subscribing device.

In an operation a determination is made concerning whether or not processing is stopped. If processing is not stopped processing continues in operation to continue receiving the one or more event streams containing event block objects from the one or more computing devices of the event publishing systems . If processing is stopped processing continues in an operation . In operation the started projects are stopped. In operation ESPE is shutdown.

Referring to a block diagram of reference incidents determination device is shown in accordance with an example embodiment. Reference incidents determination device may include a third input interface a third output interface a third communication interface a third computer readable medium a third processor a reference incidents application a reference incidents database and a reference signatures database . Fewer different and additional components may be incorporated into reference incidents determination device .

Third input interface provides the same or similar functionality as that described with reference to input interface of event publishing device though referring to reference incidents determination device . Third output interface provides the same or similar functionality as that described with reference to output interface of event publishing device though referring to reference incidents determination device . Third communication interface provides the same or similar functionality as that described with reference to communication interface of event publishing device though referring to reference incidents determination device . Data and messages may be transferred between reference incidents determination device and ESP device using third communication interface . Third computer readable medium provides the same or similar functionality as that described with reference to computer readable medium of event publishing device though referring to reference incidents determination device . Third processor provides the same or similar functionality as that described with reference to processor of event publishing device though referring to reference incidents determination device .

Reference incidents application performs operations associated with creating reference incidents database and selecting reference signatures for inclusion in reference signatures database from incident data stored in reference incidents database . The operations may be implemented using hardware firmware software or any combination of these methods. Referring to the example embodiment of reference incidents application is implemented in software comprised of computer readable and or computer executable instructions stored in third computer readable medium and accessible by third processor for execution of the instructions that embody the operations of reference incidents application . Reference incidents application may be written using one or more programming languages assembly languages scripting languages etc. Reference incidents application for example may be implemented as a Web application. Referring to example operations associated with reference incidents application are described.

Referring to a block diagram of an incident information subscribing device is shown in accordance with an example embodiment. Incident information subscribing device is an example computing device of the plurality of incident information subscribing systems . For example each of smart phone desktop server computer and laptop is an instance of incident information subscribing device . Incident information subscribing device may include a fourth input interface a fourth output interface a fourth communication interface a fourth computer readable medium a fourth processor an incident subscription application and incident database . Fewer different and additional components may be incorporated into incident information subscribing device . The incident information subscribing systems may be geographically dispersed from each other and or co located. Each incident information subscribing device of the incident information subscribing systems may include the same or different components or combination of components.

Fourth input interface provides the same or similar functionality as that described with reference to input interface of event publishing device though referring to incident information subscribing device . Fourth output interface provides the same or similar functionality as that described with reference to output interface of event publishing device though referring to incident information subscribing device . Fourth communication interface provides the same or similar functionality as that described with reference to communication interface of event publishing device though referring to incident information subscribing device . Data and messages may be transferred between ESP device and incident information subscribing device using fourth communication interface . Fourth computer readable medium provides the same or similar functionality as that described with reference to computer readable medium of event publishing device though referring to incident information subscribing device . Fourth processor provides the same or similar functionality as that described with reference to processor of event publishing device though referring to incident information subscribing device .

Referring to example operations associated with event publishing application are described. Additional fewer or different operations may be performed depending on the embodiment. The order of presentation of the operations of is not intended to be limiting.

In an operation ESPE is queried for example to discover projects continuous queries windows window schema and window edges currently running in ESPE . The engine name and host port to ESPE may be provided as an input to the query and a list of strings may be returned with the names to the projects to the continuous queries to the windows to the window schema and or to the window edges of currently running projects on ESPE . The host is associated with a host name or Internet Protocol IP address of ESP device . The port is the port number provided when the pub sub capability is initialized by ESPE . The engine name is the name of ESPE . The engine name of ESPE and host port to ESP device may be read from a storage location on computer readable medium may be provided on a command line or otherwise input to or defined by event publishing application as understood by a person of skill in the art.

In an operation publishing services are initialized. In an operation the initialized publishing services are started which may create a publishing client for the instantiated event publishing application . The publishing client performs the various pub sub activities for the instantiated event publishing application . For example a string representation of a URL to ESPE is passed to a Start function. For example the URL may include the host port designation of ESPE executing at ESP device a project of the projects a continuous query of the continuous queries and a window of the source windows . The Start function may validate and retain the connection parameters for a specific publishing client connection and return a pointer to the publishing client. For illustration the URL may be formatted as dfESP . If event publishing application is publishing to more than one source window of ESPE the initialized publishing services may be started to each source window using the associated names project name continuous query name window name .

In an operation a connection is made between event publishing application and ESPE for each source window to which data is published. To make the connection the pointer to the created publishing client may be passed to a Connect function. If event publishing application is publishing to more than one source window of ESPE a connection may be made to each started window using the pointer returned for the respective Start function call.

In an operation a measurement data value is received from sensor for example through communication interface or input interface . In an operation an event block object is created by event publishing application that includes the received measurement data value and a time value associated with a time the measurement data value was generated by sensor . The measurement data value may be processed before inclusion in the event block object for example to change a unit of measure convert to a different reference system etc. The event block object may include a plurality of measurement data values measured at different times and or by different sensors.

In an operation the created event block object is published to ESPE using the pointer returned for the respective Start function call to the appropriate source window. Event publishing application passes the created event block object to the created publishing client where the unique ID field in the event block object has been set by event publishing application possibly after being requested from the created publishing client. In an illustrative embodiment event publishing application may wait to begin publishing until a Ready callback has been received from the created publishing client. The event block object is injected into the source window continuous query and project associated with the started publishing client.

In an operation a determination is made concerning whether or not processing is stopped. If processing is not stopped processing continues in operation to continue creating and publishing event block objects that include measurement data. If processing is stopped processing continues in an operation . In operation the connection made between event publishing application and ESPE through the created publishing client is disconnected and each started publishing client is stopped.

Referring to example operations associated with incident subscription application are described. Additional fewer or different operations may be performed depending on the embodiment. The order of presentation of the operations of is not intended to be limiting.

Similar to operation in an operation ESPE is queried for example to discover names of projects of continuous queries of windows of window schema and of window edges currently running in ESPE . The host name of ESP device the engine name of ESPE and the port number opened by ESPE are provided as an input to the query and a list of strings may be returned with the names to the projects continuous queries windows window schema and or window edges.

In an operation subscription services are initialized. In an operation the initialized subscription services are started which may create a subscribing client on behalf of incident subscription application at incident information subscribing device . The subscribing client performs the various pub sub activities for incident subscription application . For example a URL to ESPE may be passed to a Start function. The Start function may validate and retain the connection parameters for a specific subscribing client connection and return a pointer to the subscribing client. For illustration the URL may be formatted as dfESP .

In an operation a connection is made between incident subscription application and ESPE through the created subscribing client. To make the connection the pointer to the created subscribing client may be passed to a Connect function and a mostly non busy wait loop created to wait for receipt of event block objects.

In an operation an event block object is received by incident subscription application . In an operation the received event block object is processed based on the operational functionality provided by incident subscription application . For example incident subscription application may extract incident data from the received event block object and store the extracted incident data in incident database . In addition or in the alternative incident subscription application may extract incident data from the received event block object and send the extracted incident data to the system control operator display system the automatic control system and or the incident notification device to respond as needed to the incident. In addition or in the alternative incident subscription application may extract incident data from the received event block object and send the extracted incident data to the post incident analysis device to further analyze the measurement data associated with the incident.

In an operation a determination is made concerning whether or not processing is stopped. If processing is not stopped processing continues in operation to continue receiving event block objects. If processing is stopped processing continues in an operation . In operation the connection made between incident subscription application and ESPE through the subscribing client is disconnected and the subscribing client is stopped.

Referring to a block diagram illustrating the interactions between the components of stream processing system is shown in accordance with an illustrative embodiment. Events are received by ESP device from the event publishing systems . ESP application may be configured to include incident detection application incident identification application and incident quantification application . Incident detection application may be implemented by first continuous queries that connect to second continuous queries that perform incident identification application when an incident is detected. The second continuous queries that perform incident identification application connect to third continuous queries that perform incident quantification application .

In some embodiments ESP application may not be configured to include incident detection application . In these embodiments events may be input directly to the second continuous queries that perform incident identification application . Incident identification application uses reference signatures stored in reference signatures database to identify a type of incident. Incident quantification application provides the identified and quantified incidents to one or more of incident database a control system application an incident notification application a post incident analysis application a control operator display application etc.

Control system application incident notification application post incident analysis application and control operator display application may be separate or integrated applications. For example the automatic control system may be executing operations associated with control system application . The incident notification device may be executing operations associated with incident notification application . The post incident analysis device may be executing operations associated with post incident analysis application . The system control operator display system may be executing operations associated with control operator display application . The automatic control system the incident notification device the post incident analysis device and the system control operator display system may be implemented in one or more computing devices.

Referring to example operations associated with reference incidents application are described. Additional fewer or different operations may be performed depending on the embodiment. The order of presentation of the operations of is not intended to be limiting.

In an operation an indicator of reference incidents database is received. The indicator indicates one or more user selections from a user interface one or more data entries into a data field of the user interface one or more data items read from third computer readable medium or otherwise defined with one or more default values etc. that are received as an input by reference incidents application . For example the indicator indicates a location of reference incidents database . As an example the indicator may be received by reference incidents application after selection from a user interface window or after entry by a user into a user interface window such as on a command line. In an alternative embodiment reference incidents database may not be selectable. For example a most recently created data warehouse or database may be used automatically.

Reference incidents database stores data from previous incidents that may have been determined using stream processing system . The previous incidents may have been detected from the real time event stream for example using incident detection application . Reference incidents database and incident database may be the same database. Reference incidents database may include an incident signature for each of a plurality of incidents. Each incident signature may include an incident identifier a plurality of measurement data observations as a function of time where each measurement data observation may include one or more timestamps a measurement type a measurement location a measurement unit a measurement value a sensor identifier etc. for one or more sensors.

Reference incidents database may be implemented using various formats as known to those skilled in the art including a file system a relational database a system of tables a structured query language database etc. For example reference incidents database may be stored in a cube distributed across a grid of computers as understood by a person of skill in the art. As another example reference incidents database may be stored in a multi node Hadoop cluster as understood by a person of skill in the art. Apache Hadoop for example is an open source software framework for distributed computing supported by the Apache Software Foundation. As another example reference incidents database may be stored in a cloud of computers and accessed using cloud computing technologies as understood by a person of skill in the art. The SAS LASR Analytic Server for example developed and provided by SAS Institute Inc. of Cary N.C. USA may be used as an analytic platform to enable multiple users to concurrently access data stored in reference incidents database .

In an operation an optimal time window length is determined for each incident stored in reference incidents database . In alternative embodiments a subset of incidents may be selected from reference incidents database to determine the optimal time window length. The subset may be determined by the user. For example the subset of incidents may include incidents for which an incident type has been identified. The optimal time window length may be determined using post incident analysis application . Post incident analysis application may determine the optimal time window length by minimizing non incident information while capturing a sufficient amount of measurement data for the incident duration. The time window starts shortly before the incident and typically continues until the incident has finished. The window may be long enough to identify the incident but not necessarily the impact of the incident occurrence. For example post incident analysis may be performed by an engineer in the relevant domain e.g. an electrical engineer for a power grid application using post incident analysis application that may include a data visualization tool or a machine learning tool. SAS Visual Statistics developed and provided by SAS Institute Inc. Cary N.C. USA is an example data visualization tool. SAS Enterprise Miner developed and provided by SAS Institute Inc. Cary N.C. USA is an example machine learning tool.

In an operation time windowed incident signatures are extracted from reference incidents database . For example for each incident stored in reference incidents database or the selected subset of incidents a start time associated with the respective incident is used in combination with the determined optimal time window length to select the measurement data associated with the incident signature from reference incidents database . The extracted time windowed incident signatures may be stored separate from reference incidents database in third computer readable medium or on another computer readable medium accessible by reference incidents determination device .

In an operation the extracted time windowed incident signatures are aligned in time so that the start time for each incident is the same.

In an operation a second indicator of a similarity model is received. For example the second indicator indicates a name of a type of similarity model and one or more configuration parameters associated with defining the similarity model. In other embodiments the similarity model may not be selectable such that a default similarity model is used. For example the SIMILARITY procedure or the TIMEDATA procedure from SAS ETS 14.1 developed and provided by SAS Institute Inc. of Cary N.C. USA may be used to compute a similarity between two time series. For illustration the example code below uses the TIMEDATA procedure to compute a similarity between two time series.

The function TSA SIMILARITY may be defined as TSA SIMILARITY x y type scale expandpct expandabs compresspct compressabs measure with the arguments defined as 

The EXPAND options expandpct and expandabs specify a warping expansion range of the target time series with respect to the input time series. Expansion of the target time series is the same as compression of the input time series and vice versa. The expansion limits are imposed on the target time series.

The COMPRESS options compresspct and compressabs specify the warping compression range of the target time series with respect to the input time series. Compression of the target time series is the same as expansion of the input time series and vice versa. The compression limits are imposed on the target time series.

Let d d x y represent a distance metric computed by TSA SIMILARITY between an input time series value x and a target time series value y. The following examples illustrate two of many possible distance metrics Squared deviation SQRDEV Absolute deviation ABSDEV 

There are N Npossible distance metrics that can be computed between the input and target time series values Nis a number of points of the input time series and Nis a number of points of the target time series. Let D represent the N Nmatrix of possible distance metrics between the input and target time series values where drepresents the i j element of the distance matrix where j is the row index and i is the column index of the matrix.

Since the distance matrix D contains many elements similarity measures may summarize the distance matrix D into a single number as Sim X Y Norm D . For example the distance matrix D can be summarized as Norm 

These illustrative similarity measures ignore an ordering of the time series values. For example the distances dand dare treated with equal importance in these similarity measures even though they compare time series values that might be far apart with respect to their timing.

Other similarity measures can compare the various paths through the distance matrix starting with element 1 1 and ending with element N N and determine a path that minimizes a sum or average of the distances along the path or the cost of traversing the path. Paths are a way to step through the distance matrix from element to element without stepping on the same element twice and preserving the timing between the two time series. Diagonal path movements represent direct maps. Vertical path movements represent compression of the target sequence. Horizontal path movements represent expansion of the target sequence. Similarity measures that exploit the ordering of the time series can penalize distances that are far apart with respect to their timing. In computing a similarity measure a goal may be to find a path that minimizes the cost of traversing the path such as finding a path that has smaller distances between the input and target time series values.

Similarity measures can be used to compare a plurality of time series by forming a similarity matrix. For example given K time series e.g. the extracted time windowed incident signatures a K K symmetric matrix can be constructed whose ijth element contains the similarity measure between the ith and jth time series.

In an operation a third indicator of a clustering model is received. For example the third indicator indicates a name of a type of clustering model and one or more configuration parameters associated with defining the clustering model. In other embodiments the clustering model may not be selectable such that a default clustering model is used. The purpose of cluster analysis is to place objects into groups or clusters suggested by the data not defined a priori such that objects in a given cluster tend to be similar to each other in some sense and objects in different clusters tend to be dissimilar. For example disjoint clusters place each object in one and only one cluster whereas hierarchical clusters are organized so that one cluster can be entirely contained within another cluster but no other kind of overlap between clusters is allowed.

For illustration a clustering model similar to that described in U.S. patent application Ser. No. 14 482 726 filed Sep. 10 2014 and assigned to SAS Institute Inc. of Cary N.C. USA may be used. The entire contents of U.S. patent application Ser. No. 14 482 726 are hereby incorporated herein by reference. The clustering model further may be the TS Similarity Node of SAS Enterprise Miner .

As another illustration the CLUSTER Procedure from SAS STAT 9.3 developed and provided by SAS Institute Inc. of Cary N.C. USA may be used to cluster a plurality of time series such as the extracted time windowed incident signatures. The similarity matrix can be input to the CLUSTER procedure to hierarchically cluster the extracted time windowed incident signatures using various methods that may be selected by the user or by default using the configuration parameters. The clustering methods include average linkage a centroid method complete linkage density linkage including Wong s hybrid and kth nearest neighbor methods the flexible beta method McQuitty s similarity analysis the median method single linkage two stage density linkage Ward s minimum variance method etc.

Each similarity measure in the similarity matrix begins in a cluster by itself. The two closest clusters are merged to form a new cluster that replaces the two old clusters. Merging of the two closest clusters is repeated until only one cluster is left. The various clustering methods differ in how the distance between two clusters is computed. The CLUSTER procedure may determine statistics such as the cubic clustering criterion statistic the pseudo F statistic and the pseudo tstatistic that can be used to estimate a number of clusters into which the extracted time windowed incident signatures are segmented. The CLUSTER procedure may also create output data that can be used by the TREE procedure from SAS STAT 9.3 to output a cluster membership at any desired level.

In an operation the indicated similarity model is executed using the aligned time windowed incident signatures to define the similarity matrix. For example a distance matrix may be computed using the TIMEDATA procedure described above to compute a similarity measure for each pair of incident signatures.

In an operation the indicated clustering model is executed using the similarity matrix to define incident clusters. For example hierarchical clustering may be performed using the CLUSTER procedure with the distance matrix as an input to determine a cluster index indicating an assigned cluster for each incident signature based on a number of clusters determined by evaluating the cubic clustering criterion statistic the pseudo F statistic and or the pseudo tstatistic. The number of incident clusters determines the size of reference signatures database .

In an operation known incident types are assigned to the defined incident clusters where possible. For example an incident type value may be stored in reference incidents database for incidents for which a cause or a type of the incident is known or has been determined for example by post incident analysis application . For illustration examples causes or types may be lightning transformer failure etc. in a power grid system.

A cause or type of one or more incidents may be unknown which also may be indicated by the incident type value. For example the incident type value field may be empty NULL unknown etc. when the incident cause is unknown. In an alternative embodiment incidents for which a cause of the incident is known may be stored in a known incident reference database separate from reference incidents database and or incidents for which a cause of the incident is unknown may be stored in an unknown incident reference database separate from reference incidents database .

The incident type value of each of the incidents associated with each cluster is evaluated to define a cluster incident type value associated with the respective cluster of the selected incident clusters. For example unknown types may be ignored and a known type associated with the majority of the incidents assigned to each respective cluster may be used as the cluster incident type value of the respective cluster. In an illustrative embodiment incident clusters for which the cluster incident type value is unknown may not be selected as incident clusters.

In an operation the incident signatures associated with each incident cluster are stored in reference signatures database with a cluster assignment indicator and the cluster incident type value.

Reference signatures database may be implemented using various formats as known to those skilled in the art including a file system a relational database a system of tables a structured query language database etc. For example reference signatures database may be stored in a cube distributed across a grid of computers as understood by a person of skill in the art. As another example reference signatures database may be stored in a multi node Hadoop cluster as understood by a person of skill in the art. As another example reference signatures database may be stored in a cloud of computers and accessed using cloud computing technologies as understood by a person of skill in the art.

Execution of operations may be repeated at various intervals that may or may not be periodic. For example execution of operations may be triggered by a user by a timer by a number of new incidents added to reference incidents database etc. to update reference signatures database .

Referring to example operations associated with ESP application are described. Additional fewer or different operations may be performed depending on the embodiment. The order of presentation of the operations of is not intended to be limiting.

In an operation a determination is made concerning whether or not an incident is detected for example using incident detection application . When an incident is detected processing continues in an operation . When an incident is not detected processing continues in an operation to return to operation of to continue to evaluate events for an incident. As described previously operation may not be performed so that each event block object of events is processed to potentially identify an incident.

For illustration SAS ETS 14.1 developed and provided by SAS Institute Inc. of Cary N.C. USA includes time series forecasting procedures including a TIMESERIES Procedure a TIMEDATA Procedure a SIMILARITY Procedure a FORECAST Procedure an ARIMA Procedure etc. that may be used to detect occurrence of an incident. As another illustrative example a decision tree or other predictive model may be used to detect occurrence of an incident. A plurality of models may be used to detect an incident.

As an illustrative example to detect an incident using streaming data from sensors on a power transmission grid a real time forecast stream is computed and compared to the actual value from the streaming data to compute a residual value. For example a current a voltage a frequency and or a phase angle may be included in events . The residual values without the time series trends can be monitored using a control limit computed based on a moving standard deviation value. A number of standard deviations used to define the control limit may be predefined for example by a user stream processing system or a developer of ESP application and its associated continuous queries . A streaming data value that exceeds the control limit may trigger detection of an incident.

In another illustrative example a plurality of individual data streams may be monitored to see if a number of values exceed the control limit. The plurality of individual data streams may be for different sensor type measurements e.g. current versus voltage and or for different sensor locations. If a predefined number of control limit values are exceeded across the monitored individual data streams during a predefined time period an incident may be detected. The predefined number and the predefined time period may be determined by post incident analysis application using reference incidents database may be defined by a user stream processing system or by a developer of ESP application and its associated continuous queries etc.

In operation measurement data values included in the event block objects from a start time current time if incident is not detected first to the optimal time window length determined in operation are isolated and extracted as a current incident signature.

In an operation similarity measures between the current incident signature and each reference signature stored in reference signatures database are computed. Reference signatures database may be stored in second computer readable medium of ESP device or may be accessed through second communication interface of ESP device . For example reference signatures database may be stored in a RAM type or cache type memory of second computer readable medium for real time access. The adjustment value computed relative to each reference signature may be stored in a RAM type or cache type memory of second computer readable medium .

For illustration the similarity model indicated in operation such as the TIMEDATA procedure from SAS ETS 14.1 may be used to compute a similarity between the captured current incident signature and each reference signature stored in reference signatures database to form a similarity vector. For example given a single target time series the captured current incident signature a similarity vector can be constructed whose kelement contains the similarity measure between the captured current incident signature and the kreference signature stored in reference signatures database . The similarity measure may be computed by determining a minimum path through a matrix of distance values computed between each pair of data points of the captured current incident signature and the kreference signature.

In operation a best matching reference signature is selected for the current incident signature from the reference signatures stored in reference signatures database . For example a most similar or closest reference signature can be selected as the reference signature that has a minimum value of the similarity measure. In an alternative embodiment a most similar or closest reference signature can be selected as the reference signature that has a maximum value of the similarity measure.

In an operation a determination is made concerning whether or not the computed similarity measure associated with the best match satisfies a threshold value. The threshold value may be stored in second computer readable medium . The threshold value may be computed based on the results of the clustering model executed in operation by computing an average of the adjustment values required to match the reference signatures included in each incident cluster stored in reference signatures database . Other statistical values may be used to compute the threshold value.

When the computed similarity measure of the best matching reference signature satisfies the threshold value processing continues in an operation . When the computed similarity measure of the best matching reference signature does not satisfy the threshold value processing continues in an operation .

In operation the current incident signature is identified as unknown and processing continues in operation to return to operation of to continue to evaluate events for a detected incident.

In an operation the incident type associated with the incident cluster to which the best matching reference signature is assigned is selected as the incident type of the current incident signature.

In an operation a severity of the identified incident is quantified for example using incident quantification application and processing continues in operation to return to operation of to continue to evaluate events for a detected incident.

In operation of the current incident signature may be stored to reference incidents database and or incident database . For unknown incidents the current incident signature and computed adjustment values may be saved to an unknown incident database. Post incident analysis may be performed on the unknown incident database to identify previously unknown incident signatures. For example post incident analysis may be performed by an engineer in the relevant domain e.g. an electrical engineer for a power grid application using an analysis tool such as a data visualization tool or a machine learning tool.

Whether an incident type is consequential or non consequential may be stored in reference signatures database . Control system application incident notification application and or control operator display application may respond to incident types identified as consequential. For example in operation of when the current incident signature is identified as an incident type classified as consequential a notification may be sent to one or more devices of incident information subscribing systems that are associated with incident responders. As another example when the current incident signature is identified as an incident type classified as consequential a notification may be sent to and or presented on one or more devices of incident information subscribing systems that are associated with a control operator display. As yet another example when the current incident signature is identified as an incident type classified as consequential a control response may be determined by control system application and sent to one or more devices of incident information subscribing systems that are capable of responding to the control response.

Referring to a first stream processing system is shown that is an instance of stream processing system in accordance with an illustrative embodiment. First stream processing system is integrated into a power transmission grid. The power transmission grid may be a smart grid that uses digital technology to provide two way communication between the utility and its customers and an Internet of Things between devices on the grid including power sources transmission sensors substation controllers power meters etc.

The plurality of event publishing systems of first stream processing system include a plurality of phasor measurement units PMUs that are distributed geographically. Each PMU is connected to measure a voltage magnitude a current magnitude a frequency and a phase angle of electrical energy at various points in the power transmission grid. Each PMU timestamps the data for example using a global positioning system GPS clock to synchronize the measurements across locations. The measurements may be generated and collected at a fixed interval such as 30 measurements per second.

In the illustrative embodiment of the PMUs include a PMU A a PMU B a PMU C a PMU N though any number of PMUs may be included in first stream processing system . Though not shown in groups of the PMUs may be organized into subnets that send measurement data values from a group of PMUs to a data concentrator each of which may include the first ESP device that publishes the measurement data values to ESP device .

In the illustrative embodiment of reference incidents database and or incident database were initialized with historical measurement data values from 100 PMUs. Operations to of were performed on the historical measurement data values to define incident clusters and to store the reference signatures associated with defined incident clusters in reference signatures database .

For an illustrative implementation on a power grid incidents are things like lightning strikes vegetation or animal incursions line trips equipment failures etc. Data is continuously collected from sensors on the power grid. As incidents occur the data from the sensors during the event produce a unique pattern that forms a signature for that incident. These patterns are compared to known reference patterns using similarity analysis to provide the incident identification.

PMUs were installed at various points on the power grid usually at sub stations. In this example time windows of 15 seconds were analyzed because power grid incidents typically occur within that time frame. In other applications different time windows may be chosen that better fit the incidents being identified.

Referring to a comparison between lightning strike voltage measurement curve and an incoming incident voltage measurement curve is shown. The resulting graph indicates how closely the two patterns compare. The minimum measure summary score determined by incident identification application was 48.33499. The minimum measure summary score is a relative score so the units of measure are not important.

Referring to a comparison between incoming incident voltage measurement curve and line trip voltage measurement curve is shown. The resulting graph indicates that the two patterns do not match as close as those shown in . In this case the minimum measure summary score determined by incident identification application was 231.1319. This score is measurably higher than the score of 48.33499 produced by comparing the incoming incident to the known lightning strike incident. Because the minimum measure summary score for the lightning strike incident is lower than the minimum measure summary score for the line trip incident the incident can be identified as a lightning strike.

Incident information subscribing device may be a visualization system of a grid control center that receives notifications of detected identified and or quantified incidents.

The word illustrative is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as illustrative is not necessarily to be construed as preferred or advantageous over other aspects or designs. Further for the purposes of this disclosure and unless otherwise specified a or an means one or more . Still further using and or or in the detailed description is intended to include and or unless specifically indicated otherwise. The illustrative embodiments may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed embodiments.

The foregoing description of illustrative embodiments of the disclosed subject matter has been presented for purposes of illustration and of description. It is not intended to be exhaustive or to limit the disclosed subject matter to the precise form disclosed and modifications and variations are possible in light of the above teachings or may be acquired from practice of the disclosed subject matter. The embodiments were chosen and described in order to explain the principles of the disclosed subject matter and as practical applications of the disclosed subject matter to enable one skilled in the art to utilize the disclosed subject matter in various embodiments and with various modifications as suited to the particular use contemplated.

