---

title: Soft decision analyzer and method
abstract: A soft decision analyzer system is operable to interconnect soft decision communication equipment and analyze the operation thereof to detect symbol wise alignment between a test data stream and a reference data stream in a variety of operating conditions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09450747&OS=09450747&RS=09450747
owner: The United States of America as represented by the Administrator of the National Aeronautics and Space Administration
number: 09450747
owner_city: Washington
owner_country: US
publication_date: 20150922
---
The invention described herein was made in the performance of work under a contract of the National Aeronautics and Space Administration NASA and is subject to the provisions of Section 305 of the National Aeronautics and Space Act of 1958 Public Law 85 568 72 Stat. 435 now codified at 51 U.S.C. 20135 . The invention described herein was also made by employees of the United States Government and may be manufactured and used by or for the Government of the United States of America for governmental purposes without the payment of any royalties thereon or therefor.

The invention relates generally to soft decision analyzers and more particularly to a soft decision analyzer and method which in one embodiment may be utilized for analyzing performance of forward error correction FEC techniques and corresponding communication system devices in real time actual operating conditions and environments.

In accordance with one embodiment of the present invention a soft decision analyzer SDA is provided that is operable for use with 1 Radio Frequency RF communication equipment such as a data source that produces a reference data stream comprising data and clock 2 an RF transmitter that transmits the reference data stream to produce a transmitted data stream 3 an RF receiver that receives the transmitted data stream and produces a test data stream that may comprise soft decision information and clock and 4 a baseband signal processor BSP operable to detect the test data stream.

In another embodiment an apparatus may comprise a signal conditioner operable for connecting to the RF receiver the baseband signal processor and the reference data source. Furthermore the apparatus may comprise a correlator operable to detect symbol wise alignment of the test data stream and or produce a historical record relating to the symbol wise alignment and or a configuration and timing control operable to control operation of the signal conditioner and the correlator. In another embodiment the signal conditioner can be operable for bridging electrical differences between the RF receiver and the baseband signal processor when the RF receiver and the baseband signal processor are incompatible with each other.

In another embodiment the soft decision analyzer may further comprise a simulator operable to synthetically produce the test data stream and the reference data stream in a plurality of different receiver modulation formats without connection to the data source the RF transmitter and or the RF receiver. In yet another embodiment the simulator is operable to slip the simulated test data stream and the reference data stream relative to one another in both forward and reverse directions by a selectable number of symbols.

In yet another embodiment the signal conditioner is operable to format a plurality of different RF receiver outputs into an internal soft decision analyzer conditioned format which comprises the test data stream and the reference data stream. The signal conditioner may further comprise an input scaler operable to accept soft decision data expressed in a plurality of different mathematical representations for conversion to an internal soft decision analyzer mathematical representation of soft decision data.

In another embodiment the signal conditioner further comprises an output scaler operable to convert the internal soft decision analyzer mathematical representation of soft decision data to a selectable mathematical format consistent with that of different types of baseband signal processors. In yet a further embodiment the signal conditioner is under control of the configuration and timing control and is operable to remap inputs to account for cables with wiring errors. In yet a further embodiment at least a portion of the signal conditioner and the correlator are implemented in programmable hardware. A control interface is provided which can be utilized for this purpose as well as others.

In yet another possible embodiment the soft decision analyzer is operable for use with a reference data stream that is not limited to a predetermined sequence of data and wherein the test data stream is suitable for detection by the baseband signal processor when the baseband signal processor employs a forward error correction FEC technique. The invention may further comprise a simulated data source being operable to produce signals representative of a plurality of different types of RF receivers.

In another embodiment a correlator which receives a conditioned format or stream comprising the test data stream and the reference data stream is operable for detecting symbol wise alignment between the test data stream and the reference stream and for producing an output for adjusting the timing between the test data stream and the reference data stream. The correlator may comprise a bank of individual correlators that operate together. Also the correlator may compare respective outputs of the bank of correlators to produce a winning correlation result for detecting the symbol wise alignment.

In another embodiment the soft decision analyzer may comprise a slip alignment block that provides feedback for adjusting a symbol wise timing between the test data stream and the reference data stream. In one possible embodiment a statistical portion is operable to collect statistical data of slips and rotations in the test data stream.

The soft decision analyzer may further comprise a slip alignment block that produces slip statistical data and a clock phase detector that produces clock edge based slip performance data. In one embodiment a bit error detection block receives the correlated reference data and the correlated test data to produce hard decision bit error performance data.

The soft decision analyzer may comprise a test stream buffer and a reference stream buffer operable to provide a first in first out buffering action to isolate an output of the stream buffer and an output of the reference stream buffer from instantaneous data rate slipping between the test data stream and the reference data stream. In this embodiment at least one of the test stream buffer and the reference stream buffer is operable to bring the test stream and the reference stream into symbol wise alignment.

In accordance with another embodiment a method for operating a soft decision analyzer is provided. The method may comprise providing a signal conditioner operable for connecting to a RF receiver a baseband signal processor and or a data source. Furthermore the method may comprise detecting symbol wise alignment of a reference data stream and producing a historical record relating to the symbol wise alignment.

In another possible embodiment the method may comprise providing a bridge between the RF receiver and the baseband signal processor when the RF receiver and the baseband signal processor are incompatible with each other.

The method may further comprise synthetically producing the test data stream and the reference data stream in a plurality of different receiver modulation formats without connection to the data source the RF transmitter and or the RF receiver.

In one embodiment the method may comprise slipping the test data stream and the reference data stream relative to one another in both forward and reverse directions by a selectable number of symbols.

In yet another embodiment the method may comprise providing a signal conditioner that is operable to format a plurality of different RF receiver outputs into an internal soft decision analyzer conditioned format which comprises a test data stream and a reference data stream. The method may further comprise accepting soft decision data expressed in a plurality of different mathematical representations for conversion to an internal soft decision analyzer mathematical representation of the soft decision data.

In another embodiment the method may comprise converting the internal soft decision analyzer mathematical representation of soft decision data to a selectable mathematical format consistent with that of different types of the baseband signal processor. In a further embodiment the method may comprise remapping inputs to account for cables with wiring errors. In yet a further embodiment at least a portion of the signal conditioner and the correlator are implemented in programmable hardware.

In yet another embodiment a method may comprise providing a soft decision analyzer that is operable for use with a reference data stream that is not limited to a predetermined sequence of data and wherein a test data stream is suitable for detection by a baseband signal processor when the baseband signal processor employs a forward error correction technique. The method may further comprise providing a simulated data source operable to produce signals representative of a plurality of different types of RF receivers.

In another embodiment the method may comprise receiving a conditioned format or stream comprising the test data stream and the reference data stream of the correlator and detecting symbol wise alignment between the test data stream and the reference stream. Other steps comprise producing an output for adjusting the timing between the test data stream and the reference data stream. The method may comprise comparing respective outputs of a bank of correlators to produce a winning correlation result for detecting symbol wise alignment.

The method may further comprise adjusting a symbol wise timing between the test data stream and the reference data stream. In one possible embodiment the method steps include collecting statistical data of slips and rotations in the test data stream.

In another embodiment the method may comprise producing slip statistical data and or producing clock edge based slip performance data. The method may further comprise receiving the correlated reference data and the correlated test data to produce hard decision bit error performance data.

The method may further comprise providing a first in first out buffering action to isolate an output of the data stream buffer and an output of the reference stream buffer from instantaneous data rate slipping between the test data stream and the reference data stream. At least one of the test stream buffer and the reference stream buffer may be provided in which each buffer is operable to bring the test stream and the reference stream respectively into symbol wise alignment. The method may also comprise detecting channel swapped conditions for quadrature phase shift keyed QPSK systems and adjusting for the occurrence of a QPSK channel swapped condition.

The above general description and the following detailed description are merely illustrative of the generic invention and additional modes advantages and particulars of this invention will be readily suggested to those skilled in the art without departing from the spirit and scope of the invention.

Detailed descriptions of exemplary embodiments are provided herein. It is to be understood however that the present invention may be embodied in various forms. Therefore specific details disclosed herein are not to be interpreted as limiting but rather as a basis for the claims and as a representative basis for teaching one skilled in the art to employ the embodiments described herein in virtually any appropriately detailed system structure or manner.

Soft Decision Analyzer also referred to herein as SDA is a hardware firmware and software system which provides the capabilities to perform real time closed loop statistical analysis of the performance of single channel or dual channel serial digital radio frequency RF communications systems for a variety of operating conditions. In at least one embodiment described herein soft decision data is comprised of a digital sign bit and soft decision level bits that provide an indication on how confident an RF receiver categorized the digital sign bit as a 1 or a 0 .

Turning now to the drawings and more particularly a schematic diagram of a system comprising a soft decision analyzer is shown in accord with one possible embodiment of the present invention. Soft Decision Analyzer is used in testing and development of soft decision based communications systems and can be used in a variety of useful configurations. depicts a top level illustration of components of SDA in relation to exemplary external devices which SDA is intended to test. The representative external devices of a RF communications system comprise Data Source RF transmitter RF receiver and baseband signal processor BSP shown in in a general configuration as the devices under test or DUT and in its relation to components of SDA .

Alternative configurations are available depending on whether the test activities are focused solely on RF receiver focused solely on BSP or focused on the combined interaction between RF receiver and BSP . RF transmitter RF channel and RF receiver are usually a common source of signal quality issues like inter symbol interference and cross channel interference. Furthermore SDA is not limited to soft decision communication systems as there are alternative configurations wherein SDA may prove useful such as with hard decision devices under test.

As shown in data source supplies a reference data stream with content suitably composed for interpretation by BSP . Reference data stream may be hereinafter also referred to as the REF data stream REF stream REF sequence or simply REF depending on context. Reference data stream is comprised of both data and clock digital signals. Identical copies of REF Stream are routed to both RF transmitter and a signal conditioning hardware . RF transmitter transmits REF data stream to RF receiver via RF channel . RF receiver also recovers TEST data stream which is related to REF data stream but may include significant alterations in characteristics and content due to data corruption caused by characteristics of RF channel and performance of RF receiver . Test data stream may include digital soft decision data comprising a plurality of symbols including a sign bit and magnitude. Like REF data stream TEST data stream includes associated digital clock signals. Hereinafter test data stream may also be referred to as TEST data stream TEST stream . TEST sequence or simply TEST depending on the context. The data streams are not limited to any particular sequence of data such as repeating or canned data streams.

When discussing SDA one should understand TEST data stream is a degraded time delayed version of REF data stream . As discussed hereinbefore TEST stream and REF streams are typically derived from components configured as shown in . Sources that contribute to the delay between the REF and TEST streams include the processing time for RF transmitter processing time for RF receiver and time for RF channel to transmit data between transmitter and receiver. Degradation of TEST data stream is primarily related to channel conditions and the way internal electronics of receiver interact with channel conditions. Receivers can make errors when creating TEST data stream of soft decision data. Typically the errors are due to receiver coping with RF channel conditions. An error in this context is defined as when the sign bit of the soft decision TEST stream is not contextually in agreement with the associated hard decision sign bit of REF stream .

The need for electrical signal conversion between electrically incompatible receivers and baseband signal processors is driven by early investigations of communications systems. Early conceptualization and early testing can significantly assist in reduced nonrecurring costs of systems derived from pre existing equipment designs. Signal conditioning hardware provides for several aspects of interfacing such incompatible devices under test and allows for preliminary investigations of combinations of receiver and or baseband signal processor without expending the cost to develop a completed system.

The evaluation of the two streams of data against one another is meaningful when the two streams align in time and have an understood polarity relationship regarding the sign bit. Several factors affect the timing relationship between the two streams. First test data stream and reference data stream follow different physical data paths and subsequently arrive at SDA with an arbitrary timing relationship i.e. they are asynchronous. Second the timing between the two streams changes based on the motion of RF transmitter relative to receiver . Third the bit sync process of receiver can make mistakes and insert additional symbols or delete symbols in TEST data stream typically due to low signal to noise conditions at the input of receiver under test.

The insertion or deletion of symbols by receiver is known as a slip. The fourth factor that affects stream alignment is related to jitter performance of all the elements that lead up to SDA . For example the digital clocks within the transmitter are not the same as the digital clock in receiver and will drift relative to one another. Even receivers that coherently lock their internal clock to a transmitter s carrier frequency have tracking loops that will on average keep the clock rates the same. However instantaneously the phases between the transmitted and received streams can vary by significant fractions of a symbol period that can affect the timing relationship between the TEST and REF streams as seen by any equipment downstream of receiver i.e. signal conditioning hardware or BSP .

In one embodiment signal conditioning hardware is a system of one or more printed circuit boards PCBs that work together to bridge potentially incompatible digital electronic interface families between all potential devices under test to SDA . Thus signal conditioning hardware can provide for the adaptation of incompatible digital electronic formats and can provide a means to interface RF receiver with baseband signal processor even if their digital logic interfaces are incompatible. In addition signal conditioning hardware provides a single digital interface family to and from field programmable gate array FPGA input output I O pins hosted on FPGA card As discussed in more detail hereinafter the signal conditioning hardware buffers and copies input TEST data stream REF data stream and analyzed and scaled test data stream as well as miscellaneous signals used to expose internal operation of SDA firmware at test points suitable for monitoring by additional equipment often used in testing communication systems such as oscilloscopes and logic analyzers.

Complicating the determination of stream alignment between TEST data stream and reference data stream are issues related to receiver assignment of sign bit polarity to TEST data stream which is an issue for both staggered quadrature phase shift keying SQPSK and quadrature phase shift keying QPSK type receivers. When either of these receivers locks to its respective carrier receiver makes a polarity sense assignment to the soft decision sign bit. Additionally in a QPSK system receiver makes a channel assignment.

Referring now to possible outcomes for the above described sign bit polarity and channel assignments are depicted. depicts all possible test stream soft decision sign bit polarity assignments for a staggered quadrature phase shift keyed or SQPSK receiver. In Example 1 all soft decision sign bit polarity matches REF stream. Thus all soft decision sign bits in the multiplexed TEST stream are the same polarity sense as the REF stream. The second example illustrates the situation where the polarity sense of the I Channel soft decision sign bits is inverted. Therefore every other soft decision sign bit is inverted in the multiplexed TEST stream. The third example illustrates the situation where the polarity sense of the Q Channel soft decision sign bits is inverted. Thus every other soft decision sign bit opposite of Example 2 above is inverted in the multiplexed TEST stream. Finally the fourth example depicts all soft decision sign bits as inverted. Thus all polarity senses of the soft decision sign bits of the multiplexed TEST stream are inverted to that of the REF stream in Example 4 .

Turning now to a number of possible test stream soft decision sign bit polarity assignments and channel swaps for a quadrature phase shift keyed or QPSK receiver is shown. Example 1 illustrates the situation of no channel swapping or inverted polarity i.e. the soft decision sign bit polarity matches the REF stream. Thus all soft decision sign bits in the multiplexed TEST stream have the same polarity sense as that of the REF stream. The second example represents no channel swapping but the polarity sense of the I Channel soft decision sign bits is inverted. This situation means every other soft decision sign bit is inverted in the multiplexed TEST stream. The third example represents a TEST stream with no channel swapping but the polarity sense of the Q Channel soft decision sign bits is inverted. Thus every other soft decision sign bit opposite of Example 2 above is inverted in the multiplexed TEST stream. The fourth example also contains no channel swapping. However all soft decision sign bits are inverted. Therefore all polarity senses of the soft decision sign bits of the multiplexed TEST stream are inverted to that of the REF stream in Example 4 .

Still referring to Example 5 depicts the situation where the soft decision sign bit polarity matches the REF sequence but channel swapping has occurred. Thus all soft decision sign bits in the multiplexed TEST stream have the same polarity sense to that of the REF stream. The sixth example depicts inverted I channel soft decision sign bits polarity sense and channel swapping. Thus every other soft decision sign bit is inverted in the multiplexed TEST stream. Example 7 illustrates the situation where the polarity sense of the Q Channel soft decision sign bits is inverted and channel swapping has taken place. Thus every other soft decision sign bit with respect to the preceding Example 6 is inverted in the multiplexed TEST stream. The final example illustrates channel swapping as well as all soft decision sign bits being inverted. Therefore all polarity senses of the soft decision sign bits of the multiplexed TEST stream are inverted to that of the REF stream in Example 8 .

After receiver locks to the transmitted carrier frequency and makes the initial assignment of polarity sense of the soft decision sign bit data and the channel assignment perturbations to internal carrier tracking algorithms of receiver generally due to low signal to noise conditions at the input of the receiver under test can cause receiver to spontaneously alter sign bit data polarity assignment or assignment of channel data of TEST data stream such as in the case of a QPSK receiver. Such spontaneous reassignments are known as constellation rotations or simply rotations. SDA provides the capacity to adjust for these dynamic rotations and channel swap phenomenon during routine operation.

Referring again to SDA firmware represents a digital design that is hosted within a commercially available i.e. vendor provided field programmable gate array FPGA card . Data path A data path B data path C and data path D of depict the interaction and flow of data between hardware firmware and software segments of SDA system . In a Peripheral Component Interconnect PCI bus interface is depicted to show the design of SDA in this embodiment. The purpose of PCI Bus Interface is to manage the flow of information between SDA software and SDA firmware although other embodiments could use a number of differing technologies to provide an equivalent interface.

As given in the embodiment of characteristics of SDA firmware are shown implemented within the blocks depicted in and include input data stream conditioning block configuration and timing control block and correlation and measurement of statistical characteristics block . The vendor provided PCI bus interface is an optional portion of this embodiment of SDA . In an alternative embodiment functions expressed in the firmware of SDA could be performed by a specific vendor s FPGA or a specific vendor purchased FPGA card thus permitting the vendor provided PCI bus interface to be removed from SDA . The function of vendor purchased FPGA card is to host focused development of SDA firmware design and to facilitate operation with hosting workstation of . Commercially available vendor provided FPGA card facilitates exchange of data between SDA firmware and SDA software application as depicted by data path C and data path D. Drivers are also provided as indicated at block .

Data path C also represents an aggregate of statistical performance data determined by an analysis function of SDA firmware and is used to drive further software analysis provide information to software graphical displays and provide status information regarding internal operation of SDA firmware . Data path D also represents an aggregate flow of signals under control of SDA software application used to configure and control operation of SDA firmware . The configuration and control aggregate of data path D is discussed in further detail below.

Input data stream conditioning block processes the asynchronous TEST data stream and REF data stream or data path A to a digital format which includes timing characteristics. Further this digital format is compatible with the statistical analysis performed by the correlation and measurement of statistical characteristics block and to a format compatible with use of the data by data path B and data path E . In this embodiment asynchronous TEST data stream represents up to 12 bits of soft decision data that can be delivered to SDA based on a variety of different timing and signaling schemes associated with binary phase shift keying BPSK quadrature phase shift keying QPSK or staggered QPSK SQPSK modulation for both data path A and data path B .

Data path B represents processed analyzed and scaled test data stream sent to signal conditioning hardware where it is electrically converted to signals compatible with the input format of baseband signal processor . In addition data path B comprises a number of miscellaneous signals used to expose internal operation of SDA firmware to test points suitable for monitoring with oscilloscopes and logic analyzers.

Turning now to elements associated with possible embodiments of input data stream conditioning block are illustrated. Input data stream conditioning block can provide SDA with a number of well integrated capabilities when working with a soft decision data stream in a single piece of test equipment. In one embodiment input data stream conditioning block can bridge between incompatible receiver and baseband processor equipment combinations in a testing environment. In one embodiment block can apply synthetic RF channel soft decision characteristics to digital data source for evaluating performance of baseband signal processor without use of RF receiver . Input data stream conditioning block can also be used to format a multitude of different receiver output formats such as BPSK QPSK and SQPSK discussed hereinbefore into a conditioned single unified format or conditioned stream for statistical analysis by correlation and measurement of statistical characteristics block see .

Continuing with in one embodiment simulated data source or simulator is a resource internal to SDA utilized to provide a simulated TEST data stream and simulated REF data stream . Simulator can be used to supply an internally generated source of simulated TEST stream data and REF stream data that exercises a majority of SDA features without having to configure SDA with external test elements. Via configuration of data path D simulator generates many different formats of test data simulating the attachment of BPSK QPSK or SQPSK type RF receivers. Thus SDA may be operated without data source RF transmitter RF receiver or baseband signal processor as shown in . This block can be used via data path D to slip the simulated REF and TEST streams relative to one another in both forward or reverse directions a selectable or an arbitrary number of symbols and is used as one method to demonstrate and verify the ability of SDA to track receiver induced symbol slips. In conjunction with synthetic channel and scale block means are provided to develop associated SDA firmware and SDA software without SDA being configured in a complete test configuration.

Process raw input block can provide three functions for operation of the present embodiment. First block synchronizes both the real asynchronous TEST and REF data streams or data path A and the simulated asynchronous TEST and REF data streams data path B to the SDA s internal system clock. In doing so protection is provided against metastability conditions that would interfere with the remainder of SDA firmware . The second function is to provide a means via data path D to select either the simulated data streams or data streams from a device under test data path A to a multiplex AB streams block via data path . Finally process raw input block provides the ability to correct for data inversions present on any soft decision bits clocks and flags associated with TEST data streams and REF data streams at an electrical signaling level.

Multiplex AB streams block can perform two functions. Block converts both REF stream and TEST stream from specific timing formats associated with BPSK QPSK or SQPSK data sources to a format compatible with the internal timing format of SDA . This functionality makes it possible to pass TEST stream soft decision data and REF stream soft decision data to other firmware blocks that perform statistical analysis on the stream data regardless of the originating data source. Specifically this block allows SDA to accommodate RF receivers that utilize BPSK QPSK or SQPSK modulation. The second function block provides is to acquire and direct a sampled copy of the REF and TEST data streams to a clock phase detector block . Clock phase detector block provides one of the two methods SDA utilizes to track receiver symbol slip performance.

Synthetic channel and scale block can provide three functions 1 input scaling 2 output scaling and 3 synthetic channel substitution. These functions of block allow SDA to cope with dynamically changing devices under test which is typical of a prototyping environment. These functions also handle errors and incompatibilities in signaling between devices under test because all devices have some technical issues. Block also serves as a translator to allow for the interface and testing of normally incompatible combinations of RF receiver and baseband signal processor . Block primarily deals with the mathematical representation of the soft decision data and does not concern itself with external timing issues present at the inputs and outputs of SDA . Digital clock and timing issues are handled by multiplex AB streams block and scale and sync test data output block .

Input scaling by block allows for SDA to interface its internal soft decision data paths with any arbitrary mapping provided by receiver without re cabling the setup of the device s under test. Block thus allows for SDA to be flexible in its ability to cope with receivers and their associated cabling that may have wiring errors. The ability of SDA to remap soft decision digital inputs provides a means for rapidly remapping the errant soft decision bits to a useable interpretation and for immediately continuing the testing instead of waiting for a lengthy time to correct for errors of this nature. In addition the input scaling function provides a means for SDA to accept soft decision data expressed in a mathematical two s complement one s complement sign magnitude or other variations to the internal mathematical representation of SDA . Converting the TEST Stream soft decision s mathematical representation to an internally consistent mathematical representation of SDA facilitates the further analysis by other elements. Input scaling can be accomplished by configuration via data path D and is under the control of SDA software application .

Output scaling maps the internal mathematical representation of the TEST stream soft decision data performed by the SDA back to a mathematical format consistent with the logic technology of baseband signal processor . Typical mathematical representations of the soft decision data expected by baseband signal processors are as a one s complement a two s complement or a sign magnitude digital value. Thus the combined use of input scaling and output scaling within SDA allows for bringing normally incompatible combinations of RF receiver and baseband signal processor together for testing. For example RF receiver with a soft decision width of 6 bits and with soft decision values expressed in a one s complement format can be made compatible with a baseband signal processor having a soft decision width of 12 bits with soft decision values expressed in a sign magnitude. Output scaling can also be utilized to rapidly arbitrarily map soft decision digital outputs to a baseband signal processor without changing the physical test configuration. Output scaling can be accomplished by a configuration utilizing data path D under the control of SDA software application .

Synthetic channel substitution provides a way to alter TEST stream soft decision data characteristics to baseband signal processor . A primary function is to provide a way to simulate differing RF channel conditions as a soft decision symbol error generator to quickly test baseband signal processor without actually having to utilize an RF transmitter receiver pair. In addition the soft decision synthetic channel substitution provides a means to test and verify in a repeatable way internal analysis elements that are a part of SDA . In one embodiment all synthetic channel substitution can be accomplished by configuration via data path D under the control of SDA software application .

Scale and sync test data output block provides a means to convert a scaled TEST data stream with internal timing of SDA to data path B having digital timing characteristics as if it were originating from a BPSK QPSK or SQPSK receiver. Block selectively mimics the digital timing characteristics of a BPSK QPSK or SQPSK receiver as directed via SDA software through data path D . Block along with multiplex AB streams block provides a way to match the digital timing associated with TEST data streams even for a normally incompatible combination of RF receiver and BSP . For example a RF receiver that utilizes a BPSK modulation scheme can be paired with a BSP that is designed to interface to a QPSK receiver.

Referring now to firmware elements of the measurement of statistical characteristics block are depicted. Block aligns TEST stream and REF data stream through a process of soft decision correlation analysis and feedback. In addition once TEST and REF data streams are aligned block categorizes and collects statistical information regarding the behavior of the primary device under test. The resultant collection of statistical information is passed to SDA software via data path C where it is further processed and logged as published statistical results along with an accompanying historical record of detectable events as shown in .

A SLIP detection tracking and alignment feedback and control loop of block can be comprised of the following elements a TEST stream timing alignment buffer block a REF stream timing dynamic alignment buffer block a correlator bank block a correlator analysis block a slip alignment analysis block and a slip alignment feedback data path. The feedback and control loop that is formed by these elements drives symbol wise alignment of TEST stream and REF data stream by dynamically adjusting the depth of the buffering provided by the REF stream timing dynamic alignment buffer block . As used herein. symbol wise alignment refers to the measurable condition of a timing alignment between the TEST stream and the REF stream . However once such symbol wise alignment is measured the term symbol wise alignment may also be used herein to refer to the act of bringing the timing of the TEST stream and the REF stream into alignment or synchronization with one another. In one embodiment for every symbol that makes up the REF Stream slip alignment analysis block continuously monitors for an alternative depth of the REF stream timing dynamic alignment buffer block that would bring the symbols of REF Stream of into better agreement with the symbols of TEST Stream . Once TEST Stream and REF Stream are synchronized i.e. in symbol wise alignment they are designated as being correlated with one another. Details concerning elements that make up this feedback and control loop are discussed in greater detail hereinafter.

TEST stream timing alignment buffer block and REF stream timing dynamic alignment buffer block together provide an adjustable depth buffer that can be configured via data path D . The timing alignment buffer blocks perform a first in first out FIFO buffering action that can accommodate both jitter in the timing of TEST Stream due to receiver symbol synchronizer performance and data rate changes that may be due to Doppler shifts should some of the elements in the RF path be in sufficient motion to alter the average data rate of TEST Stream thereby avoiding discontinuities in data flow. Overall the TEST and REF data streams will maintain the same average data rate. However during receiver slips the instantaneous data rates between the REF and TEST stream jump. FIFO action isolates the remaining firmware from the timing inconsistencies introduced by slips of receiver .

The REF stream timing dynamic alignment buffer block works alongside TEST stream timing alignment buffer block to bring TEST and REF symbol streams into agreement and essentially functions as a dynamically adjustable depth FIFO buffer. One of the purposes of the REF stream timing dynamic alignment buffer block is to account for differences in latency between the data transmitted directly from data source to SDA versus data from data source which passes through the RF transmitter and receiver to SDA .

Once correlation has been achieved between TEST stream and the REF stream changes to the alignment due to receiver symbol slips are accounted for in REF stream timing dynamic alignment buffer block by either increasing or decreasing the depth of the FIFO of block by the number of symbols indicated by slip alignment feedback . Similar to other firmware blocks described herein the overarching behavior of REF stream timing dynamic alignment buffer block is controlled via data path D by SDA software application .

In order to understand the system of multiple correlators of correlator bank block it is first useful to understand the individual behavior of a single soft decision correlator as implemented within SDA . Thereafter the description of the system of soft decision correlators will follow with a discussion of correlator bank block . As a part of the discussion note the assumption that the data content of REF stream is sufficiently random to support operation of SDA .

As discussed herein a soft decision correlation process provides a measure of how well REF stream and TEST stream match. The process itself combines the hard decision REF stream and the soft decision TEST stream into a sequence of soft decision correlation scores. For every REF and TEST symbol pair ingested by a single soft decision correlator the soft decision correlation process generates a single soft decision correlation score. The magnitude of the score indicates how well the sequences match. High absolute values indicate a higher degree of correlation between the streams i.e. the sign bits between the streams are related to one another. Absolute values of correlation scores that are closer to zero indicate a low degree of correlation i.e. the sign bits between the streams are random in relationship to one another. When REF stream and TEST stream are correlated the sign of the correlation score indicates whether the polarity sense of REF stream matches the polarity sense of TEST stream or in the alternative whether they are exactly opposite.

To examine exactly what SDA is doing during the correlation process a review of the equations powering the process will be discussed. Equation 1 represents a probability weighted sum of products correlation technique and describes implementation of the soft decision correlation process of SDA . In Equation 1 TEST data stream is represented by a sequence t n . Similarly REF stream is represented by the sequence r n . The sequence c n represents the sequence of correlation scores generated by the correlation process. The value N is the window over which the correlation process is evaluated and is represented by the correlation depth parameter in the design of SDA . Reference is made to the following correlator equation as COR 

Given the sequence of three bit soft decision data t n shown below decisions are expressed in sign magnitude convention where the and indicates the status of the sign bit an example calculation of the soft decision correlation score is performed. For purposes of the example let the correlation depth be set to 5 N 5 . This depth is an atypically small correlation window but it will reduce the amount of math in the example for easier understanding. In the following example the TEST sequence is time aligned with the REF sequence.

For every c n that is evaluated there are N multiplicative and N additive operations. One way of stating this result is c n comprises of a sum of product terms. The 0 0 product terms get pushed out of the correlation depth window starting with the c 0 summation. It can also be seen that until the nvalue is as great as the correlation depth N the correlator produces results similar to the situation where the correlation depth is less than what is specified. Starting with c 0 the effective correlation depth is 1. For c 1 the effective correlation depth is 2. This result continues until c 4 where the effective correlation depth is finally 5 product terms as specified. Thus if one were making decisions based on the correlation results and some type of statistical average the contribution due to a specific set of product terms from the REF and TEST sequence for n

Another significant point of interest illustrated by the example above is that when the REF and TEST sequences are aligned in time each of the product terms will contribute toward a positive sum for the correlation score. Any given product term in the correlation sum is the product of the REF sign bit and the TEST sign bit weighted by the TEST s soft decision value. Thus it is possible to distinguish a situation wherein the streams are in alignment but weighted with low TEST sequence soft decision values representing a low level of confidence in the soft decision from the situation wherein the streams are in alignment and the TEST sequence soft decision values are high which represents a high level of confidence in the soft decision.

The following example below illustrates the anti correlation situation regarding data polarity. Using the same values from the first example but with opposite polarity assigned to the REF sequence sign bits each of the product terms contribute towards a negative sum for the correlation score. Notice the magnitudes for the correlation scores are the same for both the first and second examples. Thus for aligned data streams a single correlation process can detect information regarding the polarity relationship between the REF and TEST sequences based on the sign of the correlation results. In both cases the magnitude or absolute value of the correlation score provides an indication of how strongly the two sequences are in agreement.

Next the case where TEST data stream and REF data stream are not in alignment is considered. Since by definition the sequence of the reference sign bits are sufficiently random to support an RF communications system if the REF and TEST sequences are not time aligned there will be on average an equal number of product terms in the calculation of correlation score sum of products that are positive and negative. On average the number of positive product terms matches the average number of negative product terms and the overall magnitude for the correlation scores summation remains low. The following example illustrates this situation by using the same values from the original example with a modification to the REF sequence s values such that roughly on average there is an equal number of REF and TEST sequence values that agree and that disagree in sign bit polarity.

In an alternate embodiment an additional correlator configuration may be used. The configuration is a variation of the correlation process described by Equation 1 and can be used for accommodating cases where the receiver may invert the sign for every other soft decision value that is a part of the TEST stream sequence. Referring back to a situation can arise wherein a SQPSK receiver or a QPSK receiver locks to the transmitted signal in such a way as one of the two channels has different soft decision sign bit polarity assigned and the two channels provided by the SQPSK receiver are not being used independently from one another i.e. the two channels are multiplexed into a single stream. Regardless of whether TEST stream sequence contains values with all positive sign polarity sense all inverted sign sense every other soft decision sign sense inverted or alternatively the other every other sign sense inverted SDA tracks the timing alignment between REF stream and TEST stream . For the first two cases all sign bits with the positive polarity sense or all sign bits with a negative sign polarity sense are tracked by correlators described by Equation 1. These types of correlators may be termed as COR herein.

The term XCOR is used to describe the correlator described by Equation 2. For an XCOR correlator the bit sense assignments of the product terms is dithered by the 1 term and will cause the magnitude of the correlation scores to grow large and positive correlation when every other sign bit from the sequence of TEST data stream is flipped and large and negative when the other every other sign bit is flipped anti correlation . Like the COR correlator if the sign bits between TEST stream and REF stream have a random relationship the magnitude produced by the XCOR correlator remains relatively low on average as indicated by the expression 

In summary the COR and XCOR type correlators make it possible to determine if a given sequence relationship between the TEST and REF sequence are aligned or unaligned. In addition when the streams are aligned the correlators produce polarity information regarding the way the receiver has assigned the polarity of the TEST stream s soft decision sign bit in relation to the REF stream s sign bit. Given these characteristics of a single correlator a system of correlators operating concurrently can provide more insight into the alignment relationship between TEST stream and REF stream .

Correlator bank block performs a soft decision correlation operation with multiple versions of the REF Stream with each version of the REF stream being in a differing symbol alignment with TEST Stream using the COR and XCOR correlators described above . Each of these independent correlation operations by having differing symbol alignment offer the possibility of detecting a slipped symbol in TEST Stream as a result of receiver slipping during data transmission. In addition since SDA can accommodate QPSK and SQPSK receivers there is the possibility that TEST Stream will be received with every symbol oriented in a positive logic sense every symbol oriented in a negative logic sense every other symbol oriented in a negative logic sense and finally the other every other symbol oriented in a negative logic sense. In order to detect these alternating symbol logic conditions REF Stream is also correlated against a version of TEST Stream with all possible logical sense inversions. Thus one output of correlator bank block is to provide multiple correlation results one of which will be higher in magnitude than all the others signifying that it closely matches the various aligned and logic sense versions of REF stream for input to the correlator analysis block .

Individually a single COR or XCOR correlator only tells if the sequences being processed are time aligned or not time aligned. An individual correlator reveals no information regarding the amount or direction to shift the REF sequence relative to the TEST sequence if they are not time aligned. To determine the amount and direction of shift SDA employs a system of soft decision correlators running concurrently.

Results from correlator bank are used to determine when and how far to shift TEST sequence so as to bring REF stream into a time aligned relationship also referred to herein as synchronized or symbol wise alignment between TEST sequence and REF stream . depicts a system of correlators that operate concurrently to yield information regarding the timing relationship between TEST stream and REF stream . The correlator bank block is operable to detect symbol wise alignment which in at least one embodiment also refers to the measurable condition related to the degree of timing alignment between the TEST stream and the REF stream . The term symbol wise alignment may also be used to refer to the bringing of the timing of the TEST stream and the REF stream into an exact time aligned relationship i.e. an exact one to one symbol wise alignment with one another or synchronization. Accordingly the correlator bank block may be utilized for detecting and measuring near symbol wise alignment the measurement of which depends on the number of correlators utilized in the correlator bank block . For example with effectively nine correlators in the bank block of a measurement of near symbol wise alignment for asynchronous data streams might comprise a measurement of difference from exact one to one alignment of from one to eight symbols. Of course the correlator bank block is also operable to detect an exact one to one symbol wise alignment wherein each TEST stream symbol and each REF stream symbol is exactly aligned in time with each other i.e. synchronized . Ultimately results from correlator bank block are processed by modules downstream to make adjustments to the timing relationship between TEST stream and REF stream after detection of near symbol wise alignment rather than exact one to one symbol wise alignment between the two streams is detected. The focus of correlator bank block is to produce a set of raw correlation score results that can be used by downstream modules to drive timing alignment corrections between the two streams thereby tracking slips that occur during operation of SDA .

Each of the nine correlator blocks depicted in contain both a COR type correlator and a XCOR type correlator. In one embodiment 18 correlators run concurrently in SDA in different time windows. In an alternate embodiment a greater number of correlators could run and in yet another embodiment a number less than 18 correlators could run simultaneously. In the nine different correlator blocks feed different timed versions of the REF sequence and the TEST sequence has already been delayed by 4 units. The correlators along with their specific delayed version of the REF sequence are named for the timing relationship they are configured to detect. For example COR E4 is configured to detect the situation where the REF sequence is four samples ahead E for early in the sequence progression. The correlators devoted to the detection of aligned relationship are indicated by COR E0 and XCOR E0 . Any correlators configured to detect situations where the REF sequence lags the TEST sequence are signified with a L1 through L4 designation L for lagging .

The specified depth of the correlation process directly affects the amount of processing required for each of the correlators both COR and XCOR correlators and can permissibly range from 5 to 1024 by the COR DEPTH parameter for the design of SDA . Utilizing the brute force approach for when the correlation depth is set to 1024 together with equation 1 and 2 implies there are 1024 multiplications and 1024 additions required for the COR correlator and 1 536 multiplications and 1024 additions for the XCOR correlator required for every REF clock period. Granted the multiplications are fairly trivial because all the product terms involve multiplication by 1 or 1. Since Correlator Bank is made up of 9 individual COR XCOR pairs the actual requirement for Correlator Bank is 9 times that of an individual COR XCOR pair. This computation comprises 23 040 multiplications and 18 432 additions per REF stream clock period. Thus if SDA is operating at a data rate of 50 Mbps an amount of computations equivalent to a maximum of 1.152 E 12 multiplications per second combined with a maximum of 921.6 E 9 additions per second is performed in order to produce 18 twenty bit vectors in correlator bank block which are passed to the next step in the process correlator analysis block RANK .

Even though much of the processing is being performed in hardware over 1.152E 12 operations per second is a significant number of computations. The amount of operations required explains why the internal representation of the TEST sequence s soft decision values was selected to be in a sign magnitude format it is due to the sheer numbers of multiplications that involve 1 and 1 consequently sidestepping lots of two s complement operations. Attempting to make this number of two s complement conversions can be expensive and difficult to achieve efficiently.

Returning now to again changes to the data due to perturbations in the demodulation of receiver are known as constellation rotations. When receiver experiences a slip or rotation the correlator that was previously generating the highest value indicating it best matched the data content of TEST stream will diminish and a new correlator will increase to become the highest value. Correlation results is produced by each of the correlators in the bank for every symbol of REF stream and TEST stream that is evaluated. Characteristics of the correlation operation are driven by SDA Software via data path D and can be used to markedly change the data depths of the individual correlators thus allowing SDA to be tuned to a wide variety of testing objectives.

Correlator analysis block performs a rapid sort in SDA firmware of all the multiple correlator results provided by correlator bank block in order to identify a single specific winning correlator i.e. the correlator with the highest value. This sorting process occurs for each REF TEST symbol stream combination that is evaluated. The single winning correlator result is passed to slip alignment analysis block .

The process for construction of the correlation score of SDA is illustrated in more detail in . As viewed on this sheet the REF and TEST stream sequences enter on the left side of and the resultant correlation score sequence exits to the right. First the process slices the sign bit out of test stream sequence to be used in the calculation of a product term A. TEST sign bit and REF sign bit are then multiplied Label B and the results REF TEST Product used in two different places. The first use of the REF TEST Product is to slice it back together into TEST stream s magnitude sequence C. The newly formed TEST sequence with REF TEST product sign bit is stored in FIFO buffer D that has a programmable depth feature. The programmable depth essentially controls the amount of delay from when the data enters and leaves FIFO D. The second use of the REF TEST Product is to store the Product Terms Sum E similar to the calculation of the correlation score described hereinbefore.

REF TEST product determines if the new product term is added or subtracted Label F from the ongoing calculation stored in the correlation score register Label I . The adder at Label F adds or subtracts the introduction of new product terms with the Correlation Feedback sequence Label K . The correlation feedback sequence represents the previous correlation score summation minus the product terms outputs from the FIFO that are rolling out of the correlation score summation window. Inverter G ensures that when a product term is added at Step F to the correlation score after the FIFO delay that same product term is subtracted from the correlation score by Subtractor H. The net effect is the calculation of the correlation score sequence without all the redundant calculations required to implement the brute force implementation of Equations 1 and 2.

Utilizing the concepts illustrated in drops the computational requirements of SDA considerably in comparison to the brute force method. When the correlation depth is set to 1024 the design concept illustrated in implies 1 multiplication and 2 additions required for the COR correlator and 2 multiplications and 2 additions for the XCOR correlator both on a per REF clock period basis. Thus for a COR XCOR pair there are 3 multiplications and 4 additions per REF clock period basis. Because of the storage provided by the FIFO it is not necessary to recalculate all the intermediate product terms for each correlation score sequence value. Thus the actual depth of the correlation has no bearing on the number of multiplications or additions for each correlation score sequence element unlike the brute force method .

However similar to the brute force calculation there remains the need to multiply the individual COR XCOR pair combination s requirements by 9 to determine the requirements for the entire correlation bank. That computation would be 27 multiplications and 36 additions per COR XCOR pair on a REF stream clock basis. If SDA is operating at a maximum certified data rate of 50 Mbps there are an equivalent of a maximum of 1.35E9 multiplications per second and a maximum of 1.8E9 additions per second in order to produce 18 twenty bit vectors in correlator bank which are passed to the next step in the process correlator analysis block RANK .

In summary using the brute force approach to implement the correlation score sequence maximally requires roughly 2.07E 12 operations. Using the approach of SDA as outlined in maximally requires 3.15E 9 operations. Thus the process of SDA for calculating the correlation score sequence represents a savings of three orders of magnitude over the amount of effort expended for the brute force approach.

The next step in the process is to reduce the 18 concurrently generated 20 bit correlation vectors into a single winning correlation score. This step of reduction takes place in a RANKING module RANK for short of SDA . Basically SDA performs a hardware equivalent of a multistage sort to identify the single correlator that has the highest correlation magnitude score. This sorting process takes place once for every REF sequence element processed i.e. once every REF clock period . In addition to the 18 sorted correlation vectors correlator analysis block introduces a faux correlation that can be used to squelch correlator magnitude results from correlator bank block that fall below a specified threshold COR QUAL THRESHOLD . Winning correlations whose magnitude is less than the quality threshold value are suppressed from counting towards the criteria used to declare a detected slip. If one has no desire to squelch low magnitude correlation results the COR QUAL THRESHOLD parameter may be set to zero.

Even though each correlator can have up to 2possible different magnitude values there are circumstances that happen frequently enough wherein the issue of a magnitude tie between the different correlators should be taken into account. Several factors influence this tie issue. The factors include correlation depth TEST Stream soft decision width and the signal to noise ratio SNR at the input of the receiver. During development of SDA it was noticed that the occurrences of ties which initially did not seem all that relevant ended up being statistically significant. For example in situations where the receiver presents a small number of soft decision bits the correlation depth is shallow and the SNR is strong i.e. the TEST stream soft decision magnitudes tend to be similar the correlation scores exhibit less variation thus enhancing the probability of a tie. Another situation that can arise where the resolution of the tie becomes relevant is when SDA is used to evaluate a QPSK system and the receiver experiences a channel swap event. At each stage in the sort process and in the event of a correlation score magnitude tie the mechanics of the sort tend to favor the results of one correlator over another. Selecting which correlator is compared to another correlator turns out to be useful in minimizing the effects of this tie phenomenon.

The first stage comparisons evaluate the COR correlation scores against the XCOR correlation scores for a given COR XCOR pair with a tie resolving in favor of the COR results. In this initial stage SDA minimizes the effects of the tie priority bias by comparing the results from a COR XCOR pair because both the COR and XCOR in the pair experience the exact same REF and TEST data stream data. For example COR E1 is initially compared to XCOR E1. Since the COR XCOR pair are fed the same delayed version of the REF sequence and TEST sequence this step minimizes the chance for ambiguous results i.e. a correlation score magnitude tie . Half the sign bits involved in the calculation of the correlation score summation will by definition result in correlation product terms that decrease the correlation score results for either the COR or XCOR in a given COR XCOR pair. The result depends on the polarity assignment made by the receiver to the TEST stream s soft decision sign bit. More specifically if the receiver has assigned TEST stream soft decision sign bit polarity to quadrants I and III Examples 1 and 4 of or quadrants II and IV Examples 2 and 3 of . In order for a tie to result at stage 1 of the sort process where the bias would assert exactly every other TEST stream s sign bit would also have to be in error a low probability as long as the correlation depth is sufficient . Thus at this first stage it would take a strange coincidence for a COR XCOR pair to generate a tie minimizing the effect of the bias.

In this embodiment the on time correlators COR E0 and XCOR E0 have priority over all the other correlators in the resolution of a tie. The reasoning behind this approach is that if there is a chance the on time correlations are still valid it may not be desirable to signal the potential of slip to downstream SDA modules. In one embodiment a priority can be given to a correlator when there is a tie in correlation score magnitudes. Subsequent stages of the sort process favor correlators closer to the ideal alignment over correlators further from the ideal alignment E0 . For example XCOR L2 is favored in the event of a tie over COR E3 because XCOR L2 is closer to the ideal on time correlator and requires a smaller correction. In the event there is a tie for the subsequent stages SDA favors the correlators associated with the smallest correction. Favoring large slips over small slips could potentially introduce unstable response in the alignment correction process especially in the case of dealing with QPSK channel swapped conditions.

Winning results from correlator analysis block are finally passed to slip alignment analysis block that is responsible for adjusting the timing relationship between REF stream and TEST stream and for accumulating statistical information regarding slips and rotations. Correlator analysis block passes several pieces of information regarding the winning correlator to slip alignment analysis block . Block identifies which correlator produced the winning score. Then block passes the magnitude of the winning score and the sign of the winning score. A winning correlator is identified for every REF sequence value that is passed to correlator analysis block from upstream which is usually once every REF clock period.

Slip alignment analysis block performs trending analysis upon the sequence of winning correlation results in order to determine if the receiver has experienced a data slip or constellation rotation. If a change over the previous winning correlator persists for a number of symbol cycles specified by SDA software slip alignment analysis block declares a slip or rotation. Upon detection of a slip slip alignment analysis block issues feedback via block to buffer block which in turn is used to control the alignment of REF stream and TEST stream thus bringing the respective streams back into alignment. In addition block statistically tracks the magnitude and direction of slips and the number of rotations and provides this data as part of the aggregate of statistical information to SDA Software .

Slip alignment analysis block processes the output from correlator analysis block and is primarily responsible for driving the buffer depth relationship that controls the timing alignment between the TEST data stream and REF stream . In addition block is the module that begins the collection of statistical data regarding the performance of the receiver under test. Slip alignment analysis block also tracks the slips and rotations and the relationship of their feedback to the stream buffers.

Correlator analysis block only resolves correlator magnitude tie situations associated with a single REF sequence clock period resolving ties that happen within the same REF cycle clock period . A tie situation can also arise when examining consecutive REF sequence clock periods thereby requiring SDA to resolve the issue across multiple consecutive REF cycle clock periods. Generally in the event of a tie between two winning magnitudes SDA favors the correlator that was associated with the first occurrence of winning magnitude. The rationale behind this approach is that when a tie occurs there is no way to know which correlator really deserves to win because a tie is ambiguous. In one embodiment the approach is essentially to do nothing until there is clear evidence on which to base a corrective alignment action. There is an exception to this approach of preferring the first occurrence. The exception is when there is a tie between either of the on time correlators COR E0 or XCOR E0 and any of the other correlators E4 E1 and L1 L4 . In this circumstance the tie is resolved in favor of the on time correlators.

The next step taken by slip alignment analysis block is to make a determination whether there has been a real slip in between REF stream sequence and TEST stream sequence . The declaration of a slip is made when there have been a number of consecutive winning correlation magnitude scores from the same correlator that are not one of the on time correlators E0 . This contest for determining if there has been a slip is illustrated by the flow diagram of . The number of required consecutive winning correlation magnitude scores is controlled by the SLIP THRESHOLD parameter. If one of the on time correlators E0 is the winner of this consecutive count process then no action is required to realign the buffer relationship between the REF and TEST streams. However if one of the other correlators E4 E1 or L1 L4 wins this consecutive count contest a slip is declared and SDA begins its slip recovery process.

Finite state machines within slip alignment analysis block drive the buffer re alignment process after the detection of a slip. A flow diagram illustrating this process of slip recovery together with the associated delays is shown in . In one embodiment the first step that slip alignment analysis block takes after detecting a slip is the step of adjusting the depth of the buffer used to control the timing of REF stream data. The specific winning correlator that won the consecutive count contest drives the direction in which the REF buffer should be adjusted along with the magnitude of the buffer adjustment. SDA only deals with one slip at a time but the slip can range anywhere from one to four REF stream symbols in either the forward or reverse direction relative to the TEST stream. When SDA detects a slip a slip recovery process begins realigning the buffers and re initializing all the correlators. Upon exit of the slip recovery process if there has been another slip SDA will detect it as soon as the associated slipped correlator wins the consecutive count contest. During the slip recovery process other parts of SDA continue to function for example the clock phase detectors without altering their behavior.

Slip recovery is a multi step process and is illustrated by the flow diagram shown in . The first step in the slip recovery is to adjust the buffer relationship between REF stream and TEST stream . This adjustment is made during the course of four REF clock bit periods. In one embodiment four REF clock bit periods are utilized even if SDA only needs to make a one symbol correction. The second step is to initialize the chain of delayed REF values within correlator block which for this embodiment takes nine REF clock bit periods. The next step is to initialize recharge the contents of the correlators. The number of REF clock cycles necessary to initialize the correlators is specified by the SLIP RECOVERY CYCLES parameter. As previously explained herein this parameter is typically set to the same value as the correlation depth. After correlator bank is recharged with new data to the depth specified by the COR DEPTH parameter slip alignment analysis block exits the slip recovery process and resumes the search for slips.

The slip detection and recovery processes limit SDA from detecting slip events that are closely spaced in time. To calculate the minimum spacing of slip events that SDA can detect in seconds sum the SLIP THRESHOLD and SLIP RECOVERY CYCLES parameters add 13 cycles 4 cycles for buffer relationship adjustment and 9 cycles for re initialization of the REF delay chain and multiply the combined sum by the REF clock period and take the ceiling of the result. For example using a COR DEPTH 128 SLIP THRESHOLD 50 SLIP RECOVERY CYCLES 128 and a REF Clock rate of 2 Mbps the minimum spacing between slip events that SDA can detect is 96 s.

Clock phase detector block provides an alternative method to detect receiver slips over the method of correlating the data content of the REF and TEST symbol streams. It provides insight into the receiver s behavior independent of data content and instead relies on a direct comparison of clock edges present in TEST data stream against clock edges present in the REF Stream . This alternative method is useful in characterizing performance of a RF receiver s bit sync tracking circuitry and provides a means to determine if portions of the receiver are working properly regardless of whether the receiver presents TEST Stream data correctly. The direct comparison of the clock edges produces a more agile detection of slip conditions than the data correlation method used by SDA embodied by correlator bank block and associated slip alignment feedback and control loop . Such capability especially proves useful in measuring statistical performance of receiver acquisition when an RF receiver first starts the process of acquiring an RF signal. This feature is utilized in acquisition testing. Block also provides clock edge based phase slip performance information as part of the aggregate of statistical information to SDA software .

The performance of a receiver is affected by the length of consecutive symbols that are ones or zeros. Thus there exists a need to measure the run length characteristics of REF stream data provided by data source . TEST stream run length analysis block measures run lengths and publishes run length performance results to statistical histogram analysis block . Statistical histogram analysis block accumulates individual run length events into a histogram format. The individual breakdown of the run length data events as provided by TEST stream run length analysis block is suitable for interpretation in the context of BPSK QPSK and SQPSK communication systems.

In addition TEST stream run length analysis block also provides a means to trigger external test equipment upon the detection of run length events that exceed a threshold as configured by SDA software application via data path D . A run length trigger threshold signal is one of many selectable internal SDA signals that may be directed to signal conditioning hardware for buffering and potential monitoring by external test equipment such as logic analyzers or oscilloscopes.

The bit error detector block provides a hard decision bit error measurement on the correlated REF symbol stream and correlated TEST symbol stream . Block is capable of performing long bit error rate tests BERT that extend over multiple days compiling up to 10E13 symbols of data. Block automatically applies proper adjustment to symbol polarity based on the quadrant of operation as determined by SLIP alignment analysis block for BPSK QPSK and SQPSK based receivers. Block also tracks TEST stream errors for the one or zero symbols separately as well as separately tracking the number of symbols in the REF stream that are ones and zeros. Statistical imbalances for TEST stream in the frequency between symbols that are one errors and symbols that are zero errors can expose problems with receiver performance. Statistical imbalances for REF stream in the number of symbols that are ones and symbols that are zeros provide a measure of suitability of data source to provide data to a TEST configuration. If desired bit error detector block does not process symbols during the period where slip alignment analysis block is making adjustments to the alignment of TEST and REF Stream symbol alignment. Instead in one embodiment block resumes its accumulation of BERT data once the two data streams and have been brought back into alignment. During the accumulation of BERT data block tracks whether there has been a slip or rotation during a TEST interval. The bit error rate test BERT is used to control the sampling interval for the accumulation of statistical data by the historical event recorder block . Thus BERT can be correlated with slip rates and constellation rotation rates. Block supplies bit error rate analysis information as part of correlated hard decision bit error performance data and as part of the aggregate of statistical information to SDA software application .

The primary function of statistical histogram analysis block is to provide a means to statistically process millions of soft decision symbols data in a way that is useful in the analysis of communications systems. Block operates in several configurations as commanded by SDA software application via data path D . Statistical histogram analysis block is responsible for processing the synchronized and scaled but uncorrelated TEST stream soft decision data as it is supplied by the output of synthetic channel and scale block . This mode of operation for statistical histogram analysis block is known as the RAW mode. During initial setup of SDA in a test configuration with devices under test viewing the soft decision data as first interpreted by process raw input block may be of interest because there are lots of opportunities for issues when connecting the numerous digital signals between the receiver and SDA .

Selective application of functions performed by the process raw input block and the synthetic channel and scale block can be used to detect and correct issues related to the physical interface between the digital systems. The applications include detection and correction of the soft decision bits that have been mis wired detection and correction of data polarity issues for individual soft decision bits identification and mitigation of stuck soft decision bits and the mapping between different mathematical formats used to express the value of soft decision symbol data. When statistical histogram analysis block is operating in the RAW mode it publishes the resultant histogram performance data to SDA Software application as a part of the aggregate of statistical performance data .

A second mode of operation of SDA and block referred to as CORRELATED mode provides a means to sort TEST stream soft decision data and based on correlated REF Stream symbol data into different histogram categories. This mode of operation produces useful results when SDA has achieved the correlation locked condition. Correlation locked occurs when the REF stream symbols and TEST stream symbols are synchronized in time with one another and is declared by SLIP alignment analysis block . The ability of histogram analysis block to sort TEST soft decision symbols based on the correlated REF symbol values into different category histograms allows SDA to characterize performance attributes of RF receiver under test for a given RF link condition. The performance attributes include but are not limited to receiver perceived signal to noise ratio receiver perceived signal level low density parity check LDPC combining ratio transition interference inter symbol interference inter channel interference decision threshold imbalance and channel imbalance. When statistical histogram analysis block is operating in the CORRELATED mode block can be used to publish the resultant statistical histogram performance data to SDA software application as a part of the aggregate of statistical performance data .

Historical event recorder block provides a means for SDA firmware to log the occurrence of significant SDA events to SDA software application where events are documented into historical records . Individual events of interest as determined by SLIP alignment analysis block and clock phase detector block are gathered into combined event record and passed to SDA software as a part of the aggregate of statistical performance data via data path C. In addition historical event recorder block has a number of general purpose external inputs that allow historical record to make note of the occurrence of external events. This function provides a means to mark in the sequence of historical records the occurrence of any external events independent of SDA . One example of this type of occurrence is the event of performing an antenna switch. This function enables SDA to assist the filtering of historical record so as to locate relevant events of interest when developing and testing a communication system.

Acquisition test coordinator block is used when statistically determining the time required for receiver to lock to RF signal . Block automates acquisition testing by controlling various SDA firmware components via data path R. The automated control of these components by acquisition control data via data path R is somewhat redundant with the control exerted on the same firmware components by SDA software via data path D . The separate control data is exerted in a cooperative fashion with the control exerted by software because in this embodiment SDA software is not fast enough by itself to control features during acquisition testing. Control of the acquisition test coordinator block is managed by configuration control data via data path D. Acquisition test results are aggregated into the statistical performance test data communicated to SDA Software via data path C.

Sometime around sequence count 80 the receiver experiences a one bit slip. Immediately upon the slip the magnitude of the on time correlator begins to decline and the magnitude of the L1 correlator begins to increase. At approximately sequence count 140 the magnitudes for the two higher scoring correlators cross. The L1 correlator is now the winning correlator and as shown its consecutive winning streak persists. Because the streak persists for the number of REF clock cycles specified by the SLIP THRESHOLD parameter the state machines in slip alignment analysis block declare a detected slip and begin the slip recovery process at around sequence count 200 . Initially during the slip recovery process all the correlators are initialized to zero resulting in the precipitous drop for the output of the L1 correlator. However shortly after the initialization we can see the on time correlator is again gaining in strength because the correction applied to the timing relationship was correct.

During the slip tracking process slip alignment analysis block collects statistical information regarding the occurrence of slips and rotations for the system under test. The statistical information regarding the occurrence of slips and rotations is provided to SDA software for reporting performance of the device under test to the user interface and for recording to a journal file for later post test analysis. Results from slip alignment analysis block are provided to other SDA modules not shown that determine if SDA is tracking the timing alignment of the REF stream to the TEST stream i.e. the COR LOCK parameter . Additionally slip alignment analysis block provides receiver constellation assignments to the hard decision bit error detector block of SDA . Thus the hard decision bit error block can run continuously even in the event of a slip or constellation rotation. In one embodiment the constellation assignment is provided to the histogram module and allows the histogram module to categorize the receiver s TEST stream soft decision symbols into eight different histogram categories. The statistical information captured by these eight different categories provides insight into the soft decision performance of receiver .

Turning to a diagram shows the possible data polarity operating environment of a receiver. Once the receiver assigns a polarity sense to the soft decision sign bit of TEST stream it becomes possible to describe the receiver as operating in one of four quadrants. As discussed before SQPSK and QPSK systems have four quadrants of operation that fall into their constellation . Determination of whether the receiver has altered its assignment of polarity sense of the soft decision sign bit is made by categorizing whether the winning correlation results comes from the COR E4 through COR L4 group of correlators or XCOR E4 through XCOR L4 group of correlators. Similar to the detection of a slip changes to the winning group of correlators or changes to the sign of the winning score sign that persist for SLIP THRESHOLD number of REF clock periods indicate the occurrence of a constellation rotation. Note that rotations due to shifts between the COR E0 correlator and XCOR E0 correlator do not initiate the slip recovery process as depicted in but will register as a constellation rotation. Constellation changes accompanied by slips will induce the slip recovery process resulting in SDA simultaneously correcting for both the rotation and the slip. depicts the associated winning correlator groups and polarity of the correlation score with the associated constellation quadrant. The interpretation relics on an intended mapping of the receiver s I channel stream data to the physical TDI A port of SDA and the receiver s Q channel stream data to the physical TDI B port of SDA .

SDA uses a look up table technique to map the test data soft decision signals to the internal representation and to map the internal representation to the output representation. This process means that an arbitrary relationship between the input format and the output format can be constructed. But complete flexibility is also unmanageable a user cannot be expected to supply each individual entry in the table. Therefore a simple interactive control interface is needed that provides the user with flexibility for most situations. Such control interface is shown in .

The scale table generator for SDA is managed by the user from control interface . One significant advantage of interface is the ability to avoid having to prepare new cables which can be time consuming. Interface applies a sequence of transform operations which are calculated as shown left to right top to bottom. In practice the user will find it is more manageable to describe the soft decision input by working through the interface backward Representation Bit Order Data Polarity Shifting Width and then the details of flipping or reordering individual bits when necessary. The soft decision input and the soft decision output sections of interface can be utilized to connect electrically incompatible RF receivers and baseband signal processors.

The control can be adapted to any bus width but in one embodiment of implementation. SDA uses a hardware bus width of 12 bits. An external signal can be connected to any of these hardware signal input pins as indicated generally at . The first element of the input control allows any physical signal pin to be selected into any position or any pin to be overwritten with a constant 1 or constant 0 . This control enables pins to be swapped duplicated shifted or overwritten. For example during setup it is useful to verify wiring by setting all inputs to 0 and checking connections one at a time. Duplicating can be useful to create copies of a signal line to split out to test equipment. Duplicating and overwriting can be used to harden the decisions. Using this control element to change bit order or shift bits is unnecessary when other control elements are provided.

The second element allows the signal polarity at any bit position to be inverted as indicated generally at . We have seen for example a receiver that provides a number format expressed as one s complement but with an inverted most significant bit MSB . Also with differential signaling a simple wiring inconsistency that causes a signal inversion is not uncommon.

The third control element as indicated at selects the width i.e. how many bit positions are present of the externally connected signal bus. Widths of 1 3 5 6 7 8 and 12 have been seen. This control element is used with the fourth and fifth control elements as indicated at and to select the bits from either end of the bus or out of the middle.

The sixth control element as indicated at allows the entire bus signal polarity to be described as true or inverted. Some designers use inverse logic.

The seventh control element as indicated at allows the bit order to be selected left to right or right to left which means that if the busses are connected in the wrong sequential order the condition can be corrected with the click of a button.

The eighth control element selects the number representation as indicated at either sign magnitude or one s complement. Two s complement does not sometimes make sense in the context of a communication system because one of the mappings 0 has an ambiguous polarity. However two s complement can be formed using available control elements.

At this point in the translation the decisions are represented numerically. Additional control elements are used to describe the translation to make for the output. The first control element not shown allows an offset to be applied. This element is simply a floating point number that is added to the decisions. This compensation can be used for example to move the bin centers for Two s complement. It can also be used to compensate a bias in the decision threshold taken to be zero .

The second element as indicated at is also an offset but is added to the decision magnitudes without shifting the decision threshold. Thus a magnitude offset as indicated at of 2 would map a decision of 3 to 5 and 3 to 5 whereas a simple offset of 2 would map a decision of 3 to 5 and 3 to 1. The magnitude offset can be used to adjust the certainty in the decisions.

The third element is a floating point scale factor as indicated at . This element is a simple multiplier that rescales the average amplitude of all the decisions as processors often assume a particular average amplitude. The third element is also useful when connecting two busses of different widths.

The fourth control element of soft decision output as indicated at clips the decisions to a specified number of bits. This clipping could be less than the width of the bus and can be used to harden the decisions without disturbing any of the physical bus connections.

The fifth control element as indicated at selects the output number representation the sixth as indicated at the output bit order. The seventh control element indicated at selects the output signal polarity.

The next soft decision output elements select specific physical output pins. The eighth control element as indicated at selects the output bus width which again results in clipping . The outputs can also be collectively selected slid to specific positions at either end of the bus as indicated at control elements and .

Output signal lines as indicated at can be over written or re ordered temporarily or as required. Also individual output signal lines can be inverted as indicated at .

During an output stage connectivity check an example of one useful method comprises the steps of setting the output scale factor to zero resulting in an all zeros output and then toggling each of the individual output signal polarities in turn so as to verify the integrity of connections. Accordingly SDA is able to calculate and update tables in real time as the user makes changes.

The foregoing description of the embodiments of the invention has been presented for purposes of illustration and description only. It is not intended to be exhaustive or to limit the invention to the precise form disclosed and obviously many modifications and variations are possible in light of the above teaching. Such modifications and variations that may be apparent to a person skilled in the art are intended to be included within the scope of this invention as defined by the accompanying claims. In the claims means plus function and step plus function clauses are intended to cover the structures or acts described herein as performing the recited function and not only structural equivalents but also equivalent structures. Thus while a nail and a screw may not be structural equivalents in that a nail employs a cylindrical surface to secure wooden parts together whereas a screw employs a helical surface in the environment of fastening wooden parts a nail and a screw may be equivalent structures.

