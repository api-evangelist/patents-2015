---

title: SaaS platform for geo-location simulation
abstract: A Software as a Service (SaaS) platform for geo-location simulation to test a location based application is provided. The SaaS platform comprises a simulator and a client connected to a server through a network. The simulator receives location data corresponding to one or more geo-locations, and a user motion data corresponding to a user motion associated with one or more geo-locations. The simulator acquires a geo-simulation data corresponding to the geo-locations. The simulator processes the geo-simulation data, and the user motion data to simulate the geo-location for the user motion. Furthermore, the simulated geo-location is provided for testing the location based application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09436584&OS=09436584&RS=09436584
owner: 
number: 09436584
owner_city: 
owner_country: 
publication_date: 20150312
---
This application claims benefit of priority of U.S. Provisional Patent Application Ser. No. 61 952 184 filed Mar. 13 2014 entitled GEOLOCATION AND USER MOTION SIMULATION FOR LOCATION BASED APPLICATION DEVELOPMENT owned by the assignee of the present application and herein incorporated by reference in its entirety.

The present embodiments generally relate to integrated development environments IDEs and more particularly relate to IDEs for location based mobile applications.

Integrated development environments IDEs provide an interface through which developers can author modify compile and deploy software on. Among the plurality of applications developed and tested IDEs enable development and testing of location based or location enabled applications. Currently available IDEs that provide a testing platform for location based applications includes an iOS based development environment as depicted in . However the iOS based development environment provides only limited options for simulating geographical locations where a developed application application can be tested. For developers users having a location specific content for example navigational applications like Skout telenav foursquare it is quite difficult to robustly test the application for global scenarios worldwide. Further for testing the location based application for real life scenarios the testing process demands physically travelling to those locations. Another existing android based development environment used for testing location based application is depicted in . The android based development environment provides simulation of any geographical location provided by a user. The information of the geographical location can be provided in terms of latitude and longitude parameters as shown in . The android based development platform requires creation of GPS eXchange files GPX files or Keyhole Markup Language Files KML files for a geographical location entered by the user. Further the above created files need to be added to Android Dalvik Debug Monitor Server DDMS . The creation of the GPX files or the KML files requires above average coding skills for example even in the simplest formats in order to create GPX files or KML files a developer has to work with data as shown in . Alternatively the developer may also upload the GPX files and the KML files into the emulator which can be used to simulate geolocations points . However only those points that are predefined in the KML GPX files can be simulated. In other words the developer cannot test their applications on any location other than those geo locations that fall exactly on the lines defined by the GPX KML files or exactly the latitude longitude coordinates defined in the simulator. Thus the android based approach is not only cumbersome but also impose limitations.

Another existing approach for testing location based applications involves field testing. Most developers carry out field testing of their applications by employing people who use the application in neighborhoods of a geographic location where the application needs to be tested. However one may also want to test the behavior of a location based application in Paris in spite of the application written while being physically located in India. Field testing requires the developer to employ a workforce that would walk drive around various neighborhoods of different geolocations and test the applications behavior or issues with the same in those locations. This existing method does not provide a scalable model and is very labor intensive.

Thus a method that provides a robust and simple simulation process that enhances developer s capability to write scalable location aware software applications will be appreciated.

The present invention relates to a Software as a Service SaaS platform for implementing a method of geo location simulation testing of an application wherein said SaaS platform comprises a server connected to a simulator through a network the simulator is configured to i receive a plurality of input parameters from a User Interface UI through a client in said SaaS platform wherein said input parameters comprise a location data corresponding to at least one geo location and a user motion data corresponding to a user motion associated with said at least one geo location ii acquire a geo simulation data corresponding to said location data and iii process said geo simulation data and said user motion data to simulate said at least one geo location in accordance with said user motion.

In an embodiment the present invention relates to a method for geo location simulation using a Software as a Service SaaS platform the method comprising a simulator configured to perform the following steps of 

i receiving plurality of input parameters wherein said input parameters comprise a location data corresponding to at least one geo location and a user motion data corresponding to a user motion associated with said at least one geo location ii acquiring a geo simulation data corresponding to said location data and iii processing said geo simulation data and said user motion data to simulate said at least one geo location in accordance with said user motion.

In the following detailed description a reference is made to the accompanying drawings that form a part hereof and in which the specific embodiments that may be practiced is shown by way of illustration. These embodiments are described in sufficient detail to enable those skilled in the art to practice the embodiments and it is to be understood that the logical mechanical and other changes may be made without departing from the scope of the embodiments. The following detailed description is therefore not to be taken in a limiting sense.

The embodiments herein relates to a Software as a Service SaaS platform and a method implemented for geo location simulation testing of a location based application. The SaaS platform provides a simulator that receives a location data corresponding to one or more geo locations and a user motion data corresponding to a user motion through a User Interface UI in a client system. The simulator acquires a geo simulation data corresponding to one or more geo locations by communicating with a server in the SaaS platform. Further the simulator processes the acquired geo simulation data along with the user motion data and provides through the client simulation of one or more geo locations to test the location based applications. In an embodiment the server communicates with one or more third party applications to obtain the geo simulation data.

Unlike existing methods for testing geolocation based applications that either provide limited geo location simulation environment or require field testing to test real life scenarios the present method and the SaaS platform eliminates the need to deploy human resources out on the field for testing of the location based application. The simulator in the SaaS platform speeds up testing with a plurality of real time scenarios to provide more accurate picture of the application performance thus providing a scalable testing environment. Thus less manpower required for testing and availability of faster test results indirectly reduces the costs of testing.

In an embodiment the simulator the client the UI and the location based application are present within a developer machine. In an embodiment the developer machine may comprise a lap top a desktop a mobile device and the like.

Referring now to the drawings and more particularly to where similar reference characters denote corresponding features consistently throughout the figures there are shown preferred embodiments.

The input parameters may include but are not limited to a user motion data specifying the expected user motion and one or more geo location of interest for simulating a real life scenario to test the location based application for that scenario. For example the user motion may specify the speed and the type of motion such as walking driving and the like. One or more geo locations from the user may specify start and end points of the geo locations for the specified the user motion. The simulator is configured to receive the user motion data of the user motion and a location data of one or more geo locations provided by the user from the client . The UI may be a graphical UI that allows the user to point click and choose areas geo locations of interest in the client . Once the user indicates the areas of interest to the SaaS platform the simulated geo locations based on areas of interest can be generated.

The simulator upon receiving the location data is configured to acquire the corresponding geo simulation data by communicating with the server through a network . Further the server interacts with one or more third party application program interface third party API to third party API for acquiring the geo simulation data required by the simulator . The third party applications may include external geo location sources for example Google Bing and Yahoo that can provide the geo simulation data for simulating the geo location of interest. The simulator then processes the acquired geo simulation data and the user motion data to simulate the geo location. Further the simulator is configured to send the simulated geo location to the client .

In an embodiment the client is configured to request the simulated geo locations on a push pull basis. For example the user can decide to obtain simulated geo locations for turn by turn driving directions from point A to point B. In this case the SaaS platform initiates the connection push with the user and delivers simulated geo location for the user to act upon. The user can also request simulated geo locations pull on a need basis for simulation scenarios that involve geo locations from within a circle polygon arbitrary shape etc.

In an embodiment representational state transfer REST APIs may be used to allow any location based application to interact with the SaaS platform . The REST APIs expose different functionalities available in the SaaS platform for consumption via any application that needs the SaaS platform s functionality.

In an embodiment the user may also use software development kits SDKs for various mobile application platforms that allow a location based application to interact with the SaaS platform . The SDKs are to be used by any location based application and allow easy access to the entire SaaS platform s features.

Thus the proposed SaaS platform allows the user to test location based services LBS applications globally by quick scalable and robust simulation of any geo location without need to travel down to these places. The user motion data and the geo location data that can be provided to the simulator for providing corresponding simulated geo location are described further in conjunction with .

In an embodiment the simulator is configured to provide simulation of geo locations that are contained within arbitrarily shaped areas e.g. randomly defined or regular boundaries around geographical areas . For example providing simulation of geo locations that are contained exactly on a randomly shaped line. These geo locations may be simulated and obtained sequentially or randomly from this arbitrarily shaped line.

In an embodiment the simulator is configured to simulate geo locations from a collection of data points layers . For example the user may request simulated geo locations of any random store of Walmart. If the user has created a list of addresses of Walmart the SaaS platform converts this address data and provides such simulated geo locations of stores of Walmart.

For example the user motion can be simulated as a choice between driving or walking at a pre defined speed. For the user motion the user can also request for simulating a geo location in any arbitrary polygons or neighborhoods globally. For example circles or polygons are translated to arbitrarily defined neighborhoods or areas in the world. The user may request for simulating a location on any arbitrary path or streets worldwide as long as geo location coordinates are available for those locations.

For example when the client forwards the user request for simulating geo locations for driving the simulator acquires the geo simulation data from the server . The server fetches the geo simulation data for driving directions from one or more third party applications such as Google Yahoo MapQuest and the like by using their APIs. Once the simulator receives these directions the simulator calculates the number of geo locations required to satisfy the user s request.

Thus if the user has requested geo location to be simulated every 5 feet or every 5 minutes the simulator processes and determines the number of geo locations required by the user within 5 feet or 5 minutes. Then the simulator identifies the geo locations for the calculated points based on the equation y mx b by drawing the straight lines. If the required points do not fall in a straight line then the simulator calculates multiple short straight lines to determine the geo location of the final point required. After calculating the geo locations of all the points that lie on the user requested directions the simulator then saves the set of data points in a cache. The simulator then responds to the client request by providing the geo locations at a predetermined interval. If the client has requested simulated geo locations every 5 seconds the simulator calls back the client application every 5 seconds. If the client has requested simulated geo locations every 50 feet then the simulator calculates the time for call back the client back based on the speed requested by the client and the distance requested i.e. 50 ft . Further the simulator calls the client back at intervals based on the calculated time period.

At step the method includes acquiring the geo simulation data corresponding to the location data. In an embodiment the method allows the simulator to acquire the geo simulation data for the location data by communicating with the server through the network. Further the server communicates with one or more third party application to obtain the required geo simulation data.

At step the method includes processing the geo simulation data and the user motion data to simulate the geo location for the user motion. In an embodiment the method allows the simulator to process the geo simulation data and the user motion data to simulate one or more geo locations in accordance with the user motion.

At step the method includes saving the simulated geo location in a cache. Further the method includes providing the simulated geo locations to the client. At step the method includes providing the simulated one or more geo locations for testing the location based application.

In some embodiments some actions acts blocks steps of the method may be omitted added modified skipped and the like without departing from the scope of the invention.

The embodiments disclosed herein can be implemented through at least one software program running on at least one hardware device and performing network management functions to control the elements. The elements shown in and include blocks which can be at least one of a hardware device or a combination of hardware device and software module.

The embodiments herein have been described in terms of preferred embodiments those skilled in the art will recognize that the embodiments herein can be practiced with modification within the spirit and scope of the embodiments as described herein.

