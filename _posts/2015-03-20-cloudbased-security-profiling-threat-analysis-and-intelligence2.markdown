---

title: Cloud-based security profiling, threat analysis and intelligence
abstract: An automated software vulnerability scanning and notification system and method provide an automated detection and notification regarding a software vulnerability. The operation of the system and the method includes obtaining software vulnerability information, periodically scanning a web application and a corresponding web server associated with an operator, and evaluating the periodic scans relative to the software vulnerability information to detect software vulnerabilities. Upon detection of a software vulnerability, a notification message is provided automatically to the operator regarding the software vulnerability.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09619655&OS=09619655&RS=09619655
owner: SALESFORCE.COM, INC.
number: 09619655
owner_city: Portland
owner_country: US
publication_date: 20150320
---
This is a non provisional of U.S. Provisional Patent Application No. 62 049 614 filed Sep. 12 2014 which is incorporated herein by this reference.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the United States Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

This disclosure relates generally to detecting software vulnerabilities and more particularly to automated detection and notification regarding software vulnerabilities.

There are currently public systems for tracking known software vulnerabilities in certain pieces or versions of software frequently used online. For instance Mitre Corporation publicizes raw information about disclosed vulnerabilities or security weaknesses in software through a dictionary called CVE Common Vulnerabilities and Exposures system and a list called CWE Common Weakness Enumeration system.

The pace at which these vulnerabilities are publicized is often rapid and thus it can be difficult even for companies having a full time server and application administrators to keep track of required updates. As a result there may be vulnerable pieces of software installed as part of an application or as part of a server software stack despite the existence of publically available fixes for known vulnerabilities. Lack of knowledge about the need to update software used in applications or servers cause them to remain vulnerable.

The following detailed description is made with reference to the technology disclosed. Preferred implementations are described to illustrate the technology disclosed not to limit its scope which is defined by the claims. Those of ordinary skill in the art will recognize a variety of equivalent variations on the description.

Examples of systems apparatus computer readable storage media and methods according to the disclosed implementations are described in this section. These examples are being provided solely to add context and aid in the understanding of the disclosed implementations. It will thus be apparent to one skilled in the art that the disclosed implementations may be practiced without some or all of the specific details provided. In other instances certain process or method operations also referred to herein as blocks have not been described in detail in order to avoid unnecessarily obscuring the disclosed implementations. Other implementations and applications also are possible and as such the following examples should not be taken as definitive or limiting either in scope or setting.

In the following detailed description references are made to the accompanying drawings which form a part of the description and in which are shown by way of illustration specific implementations. Although these disclosed implementations are described in sufficient detail to enable one skilled in the art to practice the implementations it is to be understood that these examples are not limiting such that other implementations may be used and changes may be made to the disclosed implementations without departing from their spirit and scope. For example the blocks of the methods shown and described herein are not necessarily performed in the order indicated in some other implementations. Additionally in some other implementations the disclosed methods may include more or fewer blocks than are described. As another example some blocks described herein as separate blocks may be combined in some other implementations. Conversely what may be described herein as a single block may be implemented in multiple blocks in some other implementations. Additionally the conjunction or is intended herein in the inclusive sense where appropriate unless otherwise indicated that is the phrase A B or C is intended to include the possibilities of A B C A and B B and C A and C and A B and C. 

Some implementations described and referenced herein are directed to systems apparatus computer implemented methods and computer readable storage media for detecting flooding of message queues.

In some implementations the environment is an environment in which an on demand database service exists. An on demand database service such as that which can be implemented using the system is a service that is made available to users outside of the enterprise s that own maintain or provide access to the system . As described above such users generally do not need to be concerned with building or maintaining the system . Instead resources provided by the system may be available for such users use when the users need services provided by the system that is on the demand of the users. Some on demand database services can store information from one or more tenants into tables of a common database image to form a multi tenant database system MTS . The term multi tenant database system can refer to those systems in which various elements of hardware and software of a database system may be shared by one or more customers or tenants. For example a given application server may simultaneously process requests for a great number of customers and a given database table may store rows of data such as feed items for a potentially much greater number of customers. A database image can include one or more database objects. A relational database management system RDBMS or the equivalent can execute storage and retrieval of information against the database object s .

Application platform can be a framework that allows the applications of system to execute such as the hardware or software infrastructure of the system . In some implementations the application platform enables the creation management and execution of one or more applications. Applications may be developed by the provider of the on demand database service by users accessing the on demand database service via user systems or by third party application developers accessing the on demand database service via user systems .

In some implementations the system implements a web based customer relationship management CRM system. For example in some such implementations the system includes application servers configured to implement and execute CRM software applications as well as provide related data code forms renderable web pages and documents and other information to and from user systems and to store to and retrieve from a database system related data objects and Web page content. In some MTS implementations data for multiple tenants may be stored in the same physical database object in tenant database . In some such implementations tenant data is arranged in the storage medium s of tenant database so that data of one tenant is kept logically separate from that of other tenants so that one tenant does not have access to another tenant s data unless such data is expressly shared. The system also implements applications other than or in addition to a CRM application. For example the system can provide tenant access to multiple hosted standard and custom applications including a CRM application. User or third party developer applications which may or may not include CRM may be supported by the application platform . The application platform manages the creation and storage of the applications into one or more database objects and the execution of the applications in one or more virtual machines in the process space of the system .

According to some implementations each system may be configured to provide web pages forms applications data and media content to user client systems to support the access by user systems as tenants of system . As such system provides security mechanisms to keep each tenant s data separate unless the data is shared. If more than one MTS is used they may be located in close proximity to one another for example in a server farm located in a single building or campus or they may be distributed at locations remote from one another for example one or more servers located in city A and one or more servers located in city B . As used herein each MTS could include one or more logically or physically connected servers distributed locally or across one or more geographic locations. Additionally the term server is meant to refer to a computing device or system including processing hardware and process space s an associated storage medium such as a memory device or database and in some instances a database application for example OODBMS or RDBMS as is well known in the art. It should also be understood that server system and server are often used interchangeably herein. Similarly the database objects described herein can be implemented as part of a single database a distributed database a collection of distributed databases a database with redundant online or offline backups or other redundancies etc. and can include a distributed database or storage network and associated processing intelligence.

The network can be or include any network or combination of networks of systems or devices that communicate with one another. For example the network can be or include any one or any combination of a LAN local area network WAN wide area network telephone network wireless network cellular network point to point network star network token ring network hub network or other appropriate configuration. The network can include a TCP IP Transfer Control Protocol and Internet Protocol network such as the global internetwork of networks often referred to as the Internet with a capital I . The Internet will be used in many of the examples herein. However it should be understood that the networks that the disclosed implementations can use are not so limited although TCP IP is a frequently implemented protocol.

The user systems can communicate with system using TCP IP and at a higher network level other common Internet protocols to communicate such as HTTP FTP AFS WAP etc. In an example where HTTP is used each user system can include an HTTP client commonly referred to as a web browser or simply a browser for sending and receiving HTTP signals to and from an HTTP server of the system . Such an HTTP server can be implemented as the sole network interface between the system and the network but other techniques can be used in addition to or instead of these techniques. In some implementations the network interface between the system and the network includes load sharing functionality such as round robin HTTP request distributors to balance loads and distribute incoming HTTP requests evenly over a number of servers. In MTS implementations each of the servers can have access to the MTS data however other alternative configurations may be used instead.

The user systems can be implemented as any computing device s or other data processing apparatus or systems usable by users to access the database system . For example any of user systems can be a desktop computer a work station a laptop computer a tablet computer a handheld computing device a wearable device a mobile cellular phone for example a smartphone or any other Wi Fi enabled device wireless access protocol WAP enabled device or other computing device capable of interfacing directly or indirectly to the Internet or other network. The terms user system and computing device are used interchangeably herein with one another and with the term computer. As described above each user system typically executes an HTTP client for example a web browsing or simply browsing program such as a web browser based on the WebKit platform Microsoft s Internet Explorer browser Netscape s Navigator browser Opera s browser Mozilla s Firefox browser or a WAP enabled browser in the case of a cellular phone PDA or other wireless device or the like allowing a user for example a subscriber of on demand services provided by the system of the user system to access process and view information pages and applications available to it from the system over the network .

Each user system also typically includes one or more user input devices such as a keyboard a mouse a trackball a touch pad a touch screen a pen or stylus or the like for interacting with a graphical user interface GUI provided by the browser on a display for example a monitor screen liquid crystal display LCD light emitting diode LED display among other possibilities of the user system in conjunction with pages forms applications and other information provided by the system or other systems or servers. For example the user interface device can be used to access data and applications hosted by system and to perform searches on stored data and otherwise allow a user to interact with various GUI pages that may be presented to a user. As discussed above implementations are suitable for use with the Internet although other networks can be used instead of or in addition to the Internet such as an intranet an extranet a virtual private network VPN a non TCP IP based network any LAN or WAN or the like.

The users of user systems may differ in their respective capacities and the capacity of a particular user system can be entirely determined by permissions permission levels for the current user of such user system. For example where a salesperson is using a particular user system to interact with the system that user system can have the capacities allotted to the salesperson. However while an administrator is using that user system to interact with the system that user system can have the capacities allotted to that administrator. Where a hierarchical role model is used users at one permission level can have access to applications data and database information accessible by a lower permission level user but may not have access to certain applications database information and data accessible by a user at a higher permission level. Thus different users generally will have different capabilities with regard to accessing and modifying application and database information depending on the users respective security or permission levels also referred to as authorizations .

According to some implementations each user system and some or all of its components are operator configurable using applications such as a browser including computer code executed using a central processing unit CPU such as an Intel Pentium processor or the like. Similarly the system and additional instances of an MTS where more than one is present and all of its components can be operator configurable using application s including computer code to run using the processor system which may be implemented to include a CPU which may include an Intel Pentium processor or the like or multiple CPUs.

The system includes tangible computer readable media having non transitory instructions stored thereon in that are executable by or used to program a server or other computing system or collection of such servers or computing systems to perform some of the implementation of processes described herein. For example computer program code can implement instructions for operating and configuring the system to intercommunicate and to process web pages applications and other data and media content as described herein. In some implementations the computer code can be downloadable and stored on a hard disk but the entire program code or portions thereof also can be stored in any other volatile or non volatile memory medium or device as is well known such as a ROM or RAM or provided on any media capable of storing program code such as any type of rotating media including floppy disks optical discs digital versatile disks DVD compact disks CD microdrives and magneto optical disks and magnetic or optical cards nanosystems including molecular memory ICs or any other type of computer readable medium or device suitable for storing instructions or data. Additionally the entire program code or portions thereof may be transmitted and downloaded from a software source over a transmission medium for example over the Internet or from another server as is well known or transmitted over any other existing network connection as is well known for example extranet VPN LAN etc. using any communication medium and protocols for example TCP IP HTTP HTTPS Ethernet etc. as are well known. It will also be appreciated that computer code for the disclosed implementations can be realized in any programming language that can be executed on a server or other computing system such as for example C C HTML any other markup language Java JavaScript ActiveX any other scripting language such as VBScript and many other programming languages as are well known may be used. Java is a trademark of Sun Microsystems Inc. .

In the network interface is implemented as a set of HTTP application servers N. Each application server also referred to herein as an app server is configured to communicate with tenant database and the tenant data therein as well as system database and the system data therein to serve requests received from the user systems . The tenant data can be divided into individual tenant storage spaces which can be physically or logically arranged or divided. Within each tenant storage space user storage and application metadata can similarly be allocated for each user. For example a copy of a user s most recently used MRU items can be stored to user storage . Similarly a copy of MRU items for an entire organization that is a tenant can be stored to tenant storage space .

The process space includes system process space individual tenant process spaces and a tenant management process space . The application platform includes an application setup mechanism that supports application developers creation and management of applications. Such applications and others can be saved as metadata into tenant database by save routines for execution by subscribers as one or more tenant process spaces managed by tenant management process for example. Invocations to such applications can be coded using PL SOQL which provides a programming language style interface extension to API . A detailed description of some PL SOQL language implementations is discussed in commonly assigned U.S. Pat. No. 7 730 478 titled METHOD AND SYSTEM FOR ALLOWING ACCESS TO DEVELOPED APPLICATIONS VIA A MULTI TENANT ON DEMAND DATABASE SERVICE by Craig Weissman issued on Jun. 1 2010 and hereby incorporated by reference in its entirety and for all purposes. Invocations to applications can be detected by one or more system processes which manage retrieving application metadata for the subscriber making the invocation and executing the metadata as an application in a virtual machine.

The system of also includes a user interface UI and an application programming interface API to system resident processes to users or developers at user systems . In some other implementations the environment may not have the same elements as those listed above or may have other elements instead of or in addition to those listed above.

Each application server can be communicably coupled with tenant database and system database for example having access to tenant data and system data respectively via a different network connection. For example one application server can be coupled via the network for example the Internet another application server N can be coupled via a direct network link and another application server N can be coupled by yet a different network connection. Transfer Control Protocol and Internet Protocol TCP IP are examples of typical protocols that can be used for communicating between application servers and the system . However it will be apparent to one skilled in the art that other transport protocols can be used to optimize the system depending on the network interconnections used.

In some implementations each application server is configured to handle requests for any user associated with any organization that is a tenant of the system . Because it can be desirable to be able to add and remove application servers from the server pool at any time and for various reasons in some implementations there is no server affinity for a user or organization to a specific application server . In some such implementations an interface system implementing a load balancing function for example an F5 Big IP load balancer is communicably coupled between the application servers and the user systems to distribute requests to the application servers . In one implementation the load balancer uses a least connections algorithm to route user requests to the application servers . Other examples of load balancing algorithms such as round robin and observed response time also can be used. For example in some instances three consecutive requests from the same user could hit three different application servers and three requests from different users could hit the same application server . In this manner by way of example system can be a multi tenant system in which system handles storage of and access to different objects data and applications across disparate users and organizations.

In one example storage use case one tenant can be a company that employs a sales force where each salesperson uses system to manage aspects of their sales. A user can maintain contact data leads data customer follow up data performance data goals and progress data etc. all applicable to that user s personal sales process for example in tenant database . In an example of a MTS arrangement because all of the data and the applications to access view modify report transmit calculate etc. can be maintained and accessed by a user system having little more than network access the user can manage his or her sales efforts and cycles from any of many different user systems. For example when a salesperson is visiting a customer and the customer has Internet access in their lobby the salesperson can obtain critical updates regarding that customer while waiting for the customer to arrive in the lobby.

While each user s data can be stored separately from other users data regardless of the employers of each user some data can be organization wide data shared or accessible by several users or all of the users for a given organization that is a tenant. Thus there can be some data structures managed by system that are allocated at the tenant level while other data structures can be managed at the user level. Because an MTS can support multiple tenants including possible competitors the MTS can have security protocols that keep data applications and application use separate. Also because many tenants may opt for access to an MTS rather than maintain their own system redundancy up time and backup are additional functions that can be implemented in the MTS. In addition to user specific data and tenant specific data the system also can maintain system level data usable by multiple tenants or other data. Such system level data can include industry reports news postings and the like that are sharable among tenants.

In some implementations the user systems which also can be client systems communicate with the application servers to request and update system level and tenant level data from the system . Such requests and updates can involve sending one or more queries to tenant database or system database . The system for example an application server in the system can automatically generate one or more SQL statements for example one or more SQL queries designed to access the desired information. System database can generate query plans to access the requested data from the database. The term query plan generally refers to one or more operations used to access information in a database system.

Each database can generally be viewed as a collection of objects such as a set of logical tables containing data fitted into predefined or customizable categories. A table is one representation of a data object and may be used herein to simplify the conceptual description of objects and custom objects according to some implementations. It should be understood that table and object may be used interchangeably herein. Each table generally contains one or more data categories logically arranged as columns or fields in a viewable schema. Each row or element of a table can contain an instance of data for each category defined by the fields. For example a CRM database can include a table that describes a customer with fields for basic contact information such as name address phone number fax number etc. Another table can describe a purchase order including fields for information such as customer product sale price date etc. In some MTS implementations standard entity tables can be provided for use by all tenants. For CRM database applications such standard entities can include tables for case account contact lead and opportunity data objects each containing pre defined fields. As used herein the term entity also may be used interchangeably with object and table. 

In some MTS implementations tenants are allowed to create and store custom objects or may be allowed to customize standard entities or objects for example by creating custom fields for standard objects including custom index fields. Commonly assigned U.S. Pat. No. 7 779 039 titled CUSTOM ENTITIES AND FIELDS IN A MULTI TENANT DATABASE SYSTEM by Weissman et al. issued on Aug. 17 2010 and hereby incorporated by reference in its entirety and for all purposes teaches systems and methods for creating custom objects as well as customizing standard objects in a multi tenant database system. In some implementations for example all custom entity data rows are stored in a single multi tenant physical table which may contain multiple logical tables per organization. It is transparent to customers that their multiple tables are in fact stored in one large table or that their data may be stored in the same table as the data of other customers.

Servers and applications may be independently available on and accessible from a computer network such as the Internet or may be included in a cloud based tenant database system of a type similar to tenant database system of such as for example the Independent Software Vendors ISVs in the AppExchange program of Salesforce.com Inc. For purposes of illustration each of servers is illustrated as including one application . It will be appreciated that each server could include one or more applications .

Vulnerability scanning and notification system includes one or more network based e.g. cloud based scanners that scan servers and applications to identify software types and versions operating on servers and included in applications . For example scanners may determine any or all of 

Scanners provide the information about the software types and versions of servers and applications to a vulnerability processing system which is also in communication with vulnerability database and includes a record identifying the operators of servers and applications . For example scanners may scan servers and applications periodically e.g. weekly or monthly to identify software types and versions used on servers and in applications and vulnerability processing system may store the results of the scans over time in association with the record of the corresponding operators. In connection with the results of each scan for example vulnerability processing system compares the scan results with the records of vulnerability database to identify any vulnerabilities for the scanned server or application .

Upon identifying a vulnerability vulnerability processing system transmits a notification message to the corresponding operator . The message may be transmitted in any computer based communication format including email or a dedicated messaging system associated with vulnerability scanning and notification system . The message may include identification of the vulnerable software type and version as well as a suggested remediation such as updating the version of the vulnerable software. In one implementation the notification message may be provided on a network or web portal that is associated with cloud based tenant database system for example and may provide the operator with any or all of information about detected vulnerabilities and remediation steps viewing of vulnerability scan results launching of vulnerability scans viewing current performance or usage information about the application and tools to update the application.

In process block a source of software vulnerability information is monitored. For example the source may be a publicly available database library or other type of listing.

In process block a scan of a network based application server or both is made periodically to identify and store information regarding software types and versions associated with the application the server or both. For example the scan may determine any or all of the types of information described above with reference to the operation of scanners in any or all of the manners described with reference to scanners . In one implementation the scanning of applications and servers may be made on behalf of operators of applications and servers which operators subscribe to a service provider who operates vulnerability scanning and notification system or otherwise performs the operations of method .

In process block the information regarding software types and versions associated with the application the server or both is compared with the software vulnerability information to identify software vulnerabilities.

In process block upon identification of a software vulnerability a notification message is sent to the corresponding operator of the application or server. The notification message may identify the software vulnerability and may also include suggested steps for remediation or protection against the vulnerability.

Automated software vulnerability scanning and notification method may be implemented in accordance with instructions that are stored on or in tangible non transitory computer readable media and that are executable by or used to program one or more computing systems or devices. Moreover automated software vulnerability scanning and notification method and corresponding instructions provide improved efficiency in protecting servers and applications against vulnerabilities. As a result process relates to improving the technological operation of servers and applications .

Storing the results of the periodic scans performed by vulnerability scanning and notification system and method provides a record or history of software types and versions used in applications and servers. An aspect of software vulnerabilities is that the discovery of them occurs irregularly and episodically. As a consequence software types and versions that are deemed not vulnerable at one time might later be deemed vulnerable if a particular vulnerability is later discovered. A benefit of the record or history of software types and versions identified in applications and servers by system and method is that vulnerabilities can be identified promptly even in relation to legacy software that had previously been deemed not vulnerable.

Version V of the software as of time t has no vulnerabilities. At time t a vulnerability to version V arises VVuln but is undetected and undisclosed. It will be appreciated that software vulnerabilities generally arise in such a manner in which they are undetected and undisclosed for some amount of time. At a time t software version V replaces version V. At a time t software version V replaces version V. At a time t vulnerability to version V VVuln is detected and disclosed. At a time t a manual comparison by an operator or engineer of the V vulnerability VVuln to the current version V could suggest a conclusion that there is no vulnerability so that no remedial action is taken.

The conclusion that there is no vulnerability is not sound. The system had been vulnerable to the V vulnerability VVuln and a breach arising from the vulnerability could remain. However version upgrades between the vulnerability the detection and disclosure of the vulnerability and the check of the system obscure the vulnerability. While engineers experienced in software vulnerability analysis check upgrade histories such checks can be time consuming and inconclusive depending on version upgrade records maintained by the operator. In contrast the record or history of software types and versions in the stored results of the periodic scans performed by vulnerability scanning and notification system and method allow system and method to provide convenient identification of historic vulnerabilities promptly upon disclosure of them even for operators inexperienced with software vulnerability analysis.

A person having ordinary skill in the art will appreciate that there are many potential applications for one or more implementations of this disclosure and hence the implementations disclosed herein are not intended to limit this disclosure in any fashion.

