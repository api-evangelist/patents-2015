---

title: Data mining systems and methods for heterogeneous data sources
abstract: Systems and methods integrate disparate backup devices with a unified interface. In certain examples, a management console manages data from various backup devices, while retaining such data in its native format. The management console can display a hierarchical view of the client devices and/or their data and can further provide utilities for processing the various data formats. A data structure including fields for storing both metadata common to the client device data and value-added metadata can be used to mine or process the data of the disparate client devices. The unified single platform and interface reduces the need for multiple data management products and/or customized data utilities for each individual client device and provides a single pane of glass view into data management operations. Integrating the various types of storage formats and media allows a user to retain existing storage infrastructures and further facilitates scaling to meet long-term management needs.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09405632&OS=09405632&RS=09405632
owner: Commvault Systems, Inc.
number: 09405632
owner_city: Tinton Falls
owner_country: US
publication_date: 20150304
---
Any and all priority claims identified in the Application Data Sheet or any correction thereto are hereby incorporated by reference under 37 CFR 1.57. This application is a continuation of U.S. patent application Ser. No. 14 037 166 filed Sep. 25 2013 which is a continuation of U.S. patent application Ser. No. 13 615 357 filed Sep. 13 2012 which is a continuation of U.S. patent application Ser. No. 12 750 009 filed Mar. 30 2010 and claims the benefit of priority under 35 U.S.C. 119 e of U.S. Provisional Application No. 61 165 095 filed on Mar. 31 2009 and entitled Information Management Systems and Methods for Heterogeneous Data Sources. Each of these applications is hereby incorporated herein by reference in its entirety and to be considered part of this specification.

This application is also related to the following U.S. patent applications filed on Mar. 30 2010 each of which is hereby incorporated herein by reference in its entirety 

Embodiments of the invention relate to information management and in particular to systems and methods for managing data from heterogeneous data sources.

As the reliance on electronic information increases individuals and businesses are turning more and more to various backup data solutions. Conventional backup systems generally employ a monolithic backup and retrieval system servicing a single server with attached storage devices. These systems usually control all aspects of a data backup or retrieval and often direct only one type of backup whether it is a network backup or a single machine backup.

With the numerous available backup solutions also comes the challenge associated with accessing and utilizing the stored data especially when data is stored in different backup formats in a distributed computing environment. For instance in a business enterprise different divisions within the same company may use different vendors and or applications to back up or otherwise store data over a network having multiple interconnected computers often heterogeneous and or geographically remote.

Certain information management systems attempt to address at least some of the foregoing problems by using a common application to back up data from a variety of sources e.g. SQL server MICROSOFT EXCHANGE such that the all the data in the enterprise environment is stored in the same backup format. For example the GALAXY system commercially available through CommVault Systems Inc. Oceanport N.J. supports backup of data through a common application that allows for subsequent data retrieval reporting and information processing. However such systems still require data from the various sources to be converted from a native format to a different single backup format.

In view of the foregoing a need exists for information management systems and methods that ingest data in a variety of formats including different backup formats for access and or management through a single view. For example in certain embodiments of the invention a system is disclosed that obtains data from heterogeneous backup sources and that allows a user e.g. a system administrator to access catalog and or manipulate the data through a single interface while at the same time allowing the backup sources to retain the data in their native backup formats.

Certain systems and methods are disclosed herein for integrating a plurality of disparate backup devices with a unified graphical user interface. In certain embodiments a management console manages data from various backup devices while retaining such data in its native backup format. For example the management console can comprise a window that displays a hierarchical view of manageable client devices on a network and or data associated therewith. Moreover the console can further provide options through which the console user may navigate to process the data of one or more different devices. For instance the user may be able to drill down through the hierarchy of client devices. In certain embodiments the user interface can display various types of reporting information such as graphs alerts charts diagrams textual reports or the like based on one or more rules or policies applied to the data of the client devices.

For example certain embodiments of the invention provide a unified single platform and interface that reduces the need for multiple data management products and or customized data utilities for each individual client device and that provides a single pane of glass view into data management operations. Such embodiments can advantageously integrate various types of storage formats and media thereby allowing a user to retain existing storage infrastructures and further facilitating scaling to meet long term management needs.

In certain embodiments system and methods disclosed herein can create a unified policy management framework for multiple pre certified storage vendors or storage formats and offer access to data on various storage tiers e.g. online nearline offline . Certain embodiments further include offline mining tools for non backup data such as EXCHANGE SHAREPOINT or ACTIVE DIRECTORY data to recover granular messages and documents directly from database recovery copies.

In certain embodiments a method is disclosed for administering a storage network comprising heterogeneous client devices. The method includes displaying with a management console information regarding backup data stored in a plurality of heterogeneous client devices wherein the backup data of each client device is stored in a different backup format and wherein the management console integrates a plurality of utilities for performing a plurality of data management operations on the backup data of the heterogeneous client devices wherein the management console further provides a single interface for the plurality of utilities. In further embodiments the method also includes selecting a first data management operation of the plurality of data management operations to be performed by at least one of the plurality of utilities in response to user input and selecting backup data from at least one of the plurality of heterogeneous client devices in response to user input. Finally the method can include performing the first data management operation on the selected backup data of the at least one client device in response to said selecting the first data management operation and said selecting the backup data.

In certain embodiments a system is disclosed for administering a storage network comprising heterogeneous client devices. The system includes a plurality of data connectors and a management console. The data connectors are in communication with a plurality of heterogeneous client devices each of the plurality of data connectors being configured to obtain data from a respective one of the plurality of heterogeneous client devices. The management console executes on a computing device in network communication with the plurality of data connectors. The management console is further configured to provide a plurality of utilities for performing data management operations on the data obtained by the data connectors display via a unified interface on screen graphics indicative of each of the heterogeneous client devices and the utilities receive a selection of a first data management operation to be performed by at least one of the utilities on the data of at least one of the heterogeneous client devices and perform the first data management operation on the selected data of the at least one heterogeneous client device.

In certain further embodiments a system is disclosed for administering a storage network comprising heterogeneous client devices. The system includes means for obtaining data from a plurality of heterogeneous client devices storing data in a plurality of different data formats and means for providing a plurality of utilities for performing a plurality of data management operations on the data obtained by said obtaining means. The system further includes means for displaying via a unified interface on screen graphics indicative of each of the heterogeneous client devices and the utilities and means for receiving a selection of a first data management operation to be performed by at least one of the utilities on the data of at least one of the heterogeneous client devices. The system further includes means for performing the first data management operation on the selected data of the at least one heterogeneous client device.

In addition a method is disclosed for managing data in a computer system. The method includes obtaining first data in a first file format from first media the first data being associated with a first payload and first metadata processing the first payload to generate second metadata different than the first metadata and storing in a data structure the second metadata and at least a portion of the first metadata in a first entry associated with the first media. The method further includes obtaining second data in a second file format from second media the second data being associated with a second payload and third metadata the second file format being different than the first file format processing the second payload to generate fourth metadata different than the third metadata and storing in the data structure the fourth metadata and at least a portion of the third metadata in a second entry associated with the second media. The method can further include presenting the first and second entries in a unified view of a user interface such as in a single browser window.

In certain embodiments a system is disclosed for managing data from a plurality of heterogeneous client devices. The system comprises first and second data connectors a management module and a data structure. The first data connector obtains first data in a first file format from a first client device the first data having a first payload and first metadata associated with the first payload. The second data connector obtains second data in a second file format from a second client device the second data having a second payload and second metadata associated with the second payload the second file format being different than the first file format. The management module executes on a computing device in communication with the first and second data connectors to receive the first and second payloads and first and second metadata. The management module can further process the first payload to generate third metadata different than the first metadata and to process the second payload to generate fourth metadata different than said second metadata. A data structure such as an Extensible Markup Language XML file is configured to store the third metadata and at least a portion of the first metadata in a first entry associated with the first client device and to store the fourth metadata and at least a portion of the second metadata in a second entry associated with the second client device.

In certain embodiments a system is disclosed for managing data from a plurality of heterogeneous client devices. The system includes first means for obtaining first data in a first file format from a first client device the first data having a first payload and first metadata associated with the first payload. The system also includes second means for obtaining second data in a second file format from a second client device the second data having a second payload and second metadata associated with the second payload the second file format being different than the first file format. The system further includes means for receiving the first and second payloads and first and second metadata and for processing the first payload to generate third metadata different than the first metadata and to process the second payload to generate fourth metadata different than the second metadata. In addition the system can include means for storing the third metadata and at least a portion of the first metadata in a first entry associated with the first client device and to store the fourth metadata and at least a portion of the second metadata in a second entry associated with the second client device.

In certain embodiments a method is disclosed for processing data from a plurality of heterogeneous client devices. The method comprises providing a single interface including on screen graphics representing a plurality of heterogeneous client devices in a storage network system wherein the heterogeneous client devices comprise first client devices storing backup data in different backup formats and second client devices storing non backup data. The method further includes receiving a data operation request including i a selection of at least one second client device and ii a first data management operation to be performed on the non backup data of the at least one second client device. The method also includes copying the non backup data of the at least one second client device to a first memory location emulating on a proxy device a native application associated with the non backup data of the at least one second client device and processing with the emulated native application the first data management operation on the copied non backup data and storing the processed copied non backup data on a storage device.

In certain further embodiments a system is disclosed for administering a storage network comprising heterogeneous client devices. The system can include first and second client devices a proxy device a secondary storage device and a management console. The first client devices are configured to store backup data in different file formats and the second client devices are configured to store non backup data in different file formats. The proxy device includes at least one emulated native application executing thereon and the management console is configured provide a single interface including on screen graphics representing the first and second client devices. The management console can be further configured to receive a first data operation request with respect to the non backup data stored on at least one of the second client devices and to copy the non backup data of the at least one second client device to a staging location associated with the proxy device. The proxy device can be further configured to process the non backup data of the at least one second client device with the at least one emulated native application and to copy the processed non backup data to the secondary storage device.

In certain embodiments a system is disclosed for administering a storage network comprising heterogeneous client devices. The system includes first means for storing backup data in a plurality of first file formats and second means for storing non backup data in a plurality of different second file formats. The system also includes means for providing a single interface including on screen graphics representing said first and second storing means and for receiving a first data operation request with respect to the non backup data stored on said second storing means. The system further includes means for processing a copy of the non backup data with at least one emulated native application and third means for storing the processed copy of the non backup data.

In certain embodiments a method is disclosed for managing data in a computer system. The method comprises obtaining first data in a first file format from first media the first data being associated with a first payload and first metadata. The method further comprises processing the first payload to generate second metadata different than the first metadata and storing in a database the second metadata and at least a portion of the first metadata in a first entry associated with the first media. The method further comprises obtaining second data in a second file format from second media the second data being associated with a second payload and third metadata the second file format being different than the first file format. The method also comprises processing the second payload to generate fourth metadata different than the third metadata and storing in the database the fourth metadata and at least a portion of the third metadata in a second entry associated with the second media. Finally the method can further present the first and second entries in a unified view e.g. single browser window of a user interface.

For purposes of summarizing the disclosure certain aspects advantages and novel features of the inventions have been described herein. It is to be understood that not necessarily all such advantages may be achieved in accordance with any particular embodiment of the invention. Thus the invention may be embodied or carried out in a manner that achieves or optimizes one advantage or group of advantages as taught herein without necessarily achieving other advantages as may be taught or suggested herein.

Embodiments of the invention disclosed herein are advantageously used to manage data from heterogeneous sources and formats in a computer network environment. In certain embodiments an information management console or appliance communicates with multiple client devices such as different backup servers and or databases to present heterogeneous data to a user in a manageable format through a unified view. Thus data in the information management system can be stored in different backup formats e.g. by different backup applications and or non backup formats while also being capable of being displayed to the user in a single view for further data processing and or manipulation e.g. restoring archiving searching or the like . As a result data in stored on the client devices is not required to be converted to a different format through a common backup or archive application prior to being managed by the information management console.

In certain embodiments of the invention the information management console can utilize individual agents or data connectors that are familiar with the data characteristics and formats of different file types to obtain file data metadata and or configuration settings from the client devices. Moreover the user is able to manage all data types in the information management system through a single interface. In certain embodiments metadata associated with the data on the heterogeneous client devices is normalized for presentation to the user such as through one or more reports.

In certain embodiments the versatility of the disclosed information management systems and methods allows for flexibility in managing data in an enterprise environment. For instance disclosed systems and methods allow for the dynamic addition or removal of client devices from the system application of particular retention policies or other storage polices across select data from a plurality of heterogeneous data sources access to data of one or more databases without requiring the native database application to be online restoration of data whose backup application has been decommissioned combinations of the same or the like.

The features of the systems and methods will now be described with reference to the drawings summarized above. Throughout the drawings reference numbers are re used to indicate correspondence between referenced elements. The drawings associated descriptions and specific implementation are provided to illustrate embodiments of the invention and not to limit the scope of the disclosure.

In addition methods and functions described herein are not limited to any particular sequence and the blocks or states relating thereto can be performed in other sequences that are appropriate. For example described blocks or states may be performed in an order other than that specifically disclosed or multiple blocks or states may be combined in a single block or state.

With reference to the information management system includes an information management appliance or console that communicates with a plurality of data sources or client devices . . . hereinafter . In certain embodiments the information management console comprises one or more data agnostic server computers that can receive ingested data and or perform various data management functions or utilities disclosed herein. For instance the information management console can comprise a plurality of modules executing on the one or more server computers to ingest heterogeneous data from a variety of backup and or database sources and present the data to the user via a common format. In yet other embodiments the information management console can comprise one or more workstations personal computers laptops notebooks processors computing devices virtual machines combinations of the same or the like.

The information management console communicates with each of the plurality of client devices to obtain the data to be managed. In certain embodiments the client devices form part of a business enterprise system and or comprise heterogeneous sources of data. For instance the client devices can comprise servers from different backup vendors e.g. COMMVAULT VERITAS NETAPP EMC COMPUTER ASSOCIATES that each back up data in a different format to one or more media devices . . . hereinafter e.g. secondary storage devices . In such embodiments the information management console can communicate directly with the client device s directly with the media device s and or with the media device s through the client device s a proxy server and or other network path.

In certain embodiments one or more of the client devices can comprise a database server or other collection of non backup information accessible by the information management console . For instance the databases can be associated with a variety of database applications such as for example EXCHANGE SERVER SHAREPOINT SERVER SQL SERVER LOTUS NOTES ORACLE applications SAP applications or the like. In certain embodiments the information management console can access the databases via a database management system DBMS .

It will be appreciated that the client devices can comprise data stored on a variety of physical media and or virtual devices such as magnetic disk tape cloud storage filers combinations of the same or the like. In certain embodiments the client devices can comprise virtual machines executing on one or more host servers.

Although media devices are illustrated separate from the client devices in it should be appreciated that the media device can also be integrated with client device and or multiple client devices can share a common media device . Thus the term client device as used herein is a broad term and is used in its ordinary sense and includes without limitation any source of data database or data repository or a computing device e.g. as a stand alone complete entity and or distributed over multiple entities that can access such data.

For example in embodiments in which the client device comprises a backup server or the like it is appreciated that the client device can coordinate data retrieval from a plurality of storage or media devices to be transferred to and or managed by the information management console through the client device . Thus the information management console need not read directly from or communicate with all storage devices that contain data managed by the information management console . Moreover a single client device can comprise a server or other computing device that communicates with a plurality of additional client devices e.g. sub clients coupled thereto.

Each of the client devices is further associated with at least one of the agent or data connectors . . . hereinafter for gathering and providing relevant information from the client device to the information management console . In certain embodiments each data connector is configured to perform a discovery of the data on the client device such as data produced by one or more backup applications e.g. SIMPANA CommVault Systems Inc. NETBACKUP Symantec Corporation NETWORKER EMC Corporation . In general during this discovery process the data connector retrieves data and or metadata from the client device and molds the retrieved information into a predetermined and or normalized data format e.g. the GALAXY data format provided by CommVault Systems Inc. .

In certain embodiments each connector is specific to a particular type of data format and or client device . For instance each client device can have a plurality of application specific connectors associated therewith for handling different data types stored on the device . For example one connector can be configured to handle backup data while another connector is configured to track system configurations of the client device .

In certain embodiments when the client device is initially installed in or connected to the information management system a user can be prompted such as through a user interface for information e.g. configuration information regarding the data format s used by the client device . For example when a client device comprising an EXCHANGE SERVER is initially installed in the information management system the user can input information regarding user mailboxes snapshot information security and or authentication information combinations of the same or the like. Following the entry of the configuration information the appropriate data connector can be push installed on the client device from the information management console . In yet other embodiments the data connector can be located external to the client device installed on one or more media devices of the client device and or communicate remotely with the client device via remote procedure calls RPCs an application programming interface API a component object model COM interface combinations of the same or the like.

In yet other embodiments the data connector can be configured to scrape transaction logs execute database commands issue queries monitor filter drivers and or registry information read backup files or the like to obtain pertinent information from the client device . In yet other embodiments the data connector can function as one of the clients read third party metadata read XML files parse INI or other configuration files combinations of the same or the like to obtain information about data on the client device .

In certain embodiments the connectors provide file data to the information management console . For example the connectors can provide copies of select data from the client devices based on one or more requests from the information management console . In certain embodiments the connectors are configured to provide metadata to the information management console in addition to or in place of actual file data. For example the connectors can provide information regarding identification of media e.g. tapes magnetic disks containing the file data identification of client devices or machines associated with the data creation date modification date file type file size owner permissions native data retention polices storage locations jobs schedules existing and or scheduled snapshots protection of databases mailbox information combinations of the same or the like. In yet further embodiments the connectors can provide statistics regarding use of a particular client device or groups of devices such as for example daily data growth on machine number of users new mailboxes setup or the like.

In certain preferred embodiments the data connectors obtain the raw data and or metadata in the native format of the application s used by the particular client device and can push the information to the information management console . This advantageously allows for users to retain backup data from a plurality of vendors without requiring all the data to be copied or transformed into a different format. The obtained information is advantageously input into a normalized data model or structure that includes multiple fields that are common to a variety of data formats. In certain embodiments the data structure advantageously provides a common schema or platform with which to manage and or manipulate data from a variety of different data formats and or heterogeneous or homogeneous client devices .

For instance in certain embodiments the normalized data structure can comprise an XML file that receives ingested data from a plurality of data connectors . Simplified examples of such XML files are shown and described with reference to . In yet other embodiments each client device and or data format is associated with a single data structure .

As further illustrated in the normalized data structure is maintained by the information management console . In certain embodiments the data structure can be stored on the information management console a management database and or a secondary database . In yet other embodiments the data structure can be maintained and or stored by the individual data connectors on a central storage device or the like. In certain embodiments the data structure can comprise an index a table combinations of the same or the like.

In certain embodiments the connectors are capable of querying one or more client devices and or media devices for higher level metadata without needing to enter or touch the actual media. For example the connectors can interface with one or more APIs associated with the particular software platform executing on the client device . In yet other embodiments the connectors read directly from the media of the client device to obtain the necessary data and or metadata.

In certain embodiments the connectors are configured to persistently and or periodically monitor the client devices . Such monitoring can include for example tracking information relating to one or more jobs and or media associated with a particular client . In yet other embodiments the connectors can be configured to execute on demand such as in response to instructions from a user specified policy or rule.

In certain embodiments the client devices advantageously retain the data stored thereon in the native backup format s . That is the data connector or information management console does not substantially modify or entirely copy the data stored on the client device . In yet further embodiments foreign or native applications running on the client device are monitored by the connector to identify changes to the data. Moreover in such embodiments if backup data from the client device is to be restored for further processing the foreign application can be used to restore the data such as to a temporary staging area.

The user interface advantageously provides a unified view of the data within the information management system so as to allow a user e.g. a system administrator to manage and or view data from multiple clients . For example the user interface can provide the user with a single view and access to the data of heterogeneous source devices such as devices with backup data from different backup vendors.

The user interface can also allow the user to manage data that has been cataloged on a plurality of different source devices even if the data is stored in different backup or other file formats. In certain embodiments the user interface is populated with data acquired from or based on information stored in the normalized data structure . For instance in certain embodiments the user interface can provide the user with the option of creating copies of select portions of data from different source devices that have been cataloged or scanned by the data connector .

The ability to process and retrieve select pieces of data from multiple client devices each with data in its own native format provides significant advantages to the information management system . For example a storage administrator wanting to back up files documents and or email that contain a particular set of words or other criteria can submit his or her data request via the user interface .

In certain embodiments the user can select which of the different client devices are to be associated with the data request. The information management console can then instruct the different connectors associated with the select client devices to obtain the requested data. Because each connector is familiar with the file format of the data on the corresponding client device the connectors are able to obtain the requested data and transmit the data from the different backup sources or file formats to the information management console to be backed up. In yet other embodiments the connectors can send copies of the entire data from the selected client device to the information management console for further processing and selective backing up of data portions.

In certain embodiments the information management console stores in a management database information regarding the client devices jobs and or media associated with one or more backup files and or databases. For instance the database can maintain a map e.g. a table or other data structure of client devices to particular jobs running in the information management system based on information gathered by the connectors .

In certain embodiments the database maintains a mapping of a plurality of heterogeneous backup environments e.g. client devices from different vendors . This mapping in certain instances can be displayed through the user interface to provide a user with a single view of the backup jobs being performed and or scheduled within the information management system . In such embodiments a user can advantageously determine if the backups from different vendors all comply with applicable storage polices and or guidelines.

In yet other embodiments the database can store select portions of file data obtained by the connectors . For example as discussed above a user may be given the option through the user interface to specify which types of data should be part of a backup and or migration operation for long term storage e.g. to satisfy certain legal hold requirements storage policies user preferences or the like . These data portions can be obtained by the information management console through the connectors to be stored in the database . In yet other embodiments the management database can be configured to store pointers or other links to the pertinent file data that is stored on and or maintained by one or more of the client devices . Such embodiments are discussed in more detail below with respect to .

In further embodiments the database can store a plurality of rules and or policies for managing the data of the various client devices . For instance the database can store information regarding the frequency of scanning the client devices with the connectors . Other rules or policies can provide established plans or conditions regarding data retention security life cycle management or the like.

In certain embodiments at least a portion of the database comprises a metabase that stores metadata associated with files on the client device s . Additional details regarding metabases usable with embodiments of the invention are disclosed in U.S. patent application Ser. No. 11 563 940 filed Nov. 28 2006 now published as U.S. Patent Application Publication No. 2007 0179995 A1 which is hereby incorporated herein by reference in its entirety to be considered part of this specification.

As shown the information management system further comprises secondary storage in communication with the information management console . In certain embodiments the secondary storage serves as a repository for data processed by the information management console .

In yet other embodiments the secondary storage can serve as a staging area for data to be processed by the information management console . For example select client data needing to be temporarily restored or copied for particular data management or manipulation operations can be moved to the secondary storage .

It should also be understood from the disclosure herein that the management database and or secondary storage can each comprise a plurality of databases and or data storage structures in one or more locations or can be combined into a single storage device or database. For example a portion of the database can be configured to store actual file data e.g. archive data while another portion of the database can be configured to store metadata and or configuration settings.

One or more of the components of the information management system can advantageously communicate with each other through a network or other means for communicating. In certain embodiments the network comprises a public network such as the Internet virtual private network VPN token ring or TCP IP based network wide area network WAN local area network LAN an intranet network point to point link a wireless network cellular network wireless data transmission system two way cable system interactive kiosk network satellite network broadband network baseband network combinations of the same or the like.

As discussed above the information management system is configured to enrich the information extracted from the data on the heterogeneous client device s . For instance the information management console and or data connector s can supplement the normalized data structure with customized metadata related to the extracted information and or client device . In certain embodiments the value added information can be common to various types of data formats.

In particular illustrates an exemplary XML data structure for capturing information regarding data on one or more client devices . In certain embodiments the data structure is stored in a database accessible by the information management console and comprises multiple fields that provide for the normalization of data from multiple foreign data repositories such as both backup and non backup e.g. database server data.

As shown in the data structure comprises information regarding a client device utilizing the SNAPMANAGER FOR MICROSOFT EXCHANGE storage management program offered by NetApp Inc. For instance the data structure includes entries regarding the operating system being used by the client device passwords directory information application information and the like.

Although the data structures have been described with reference to particular embodiments it should be understood that other types of data structures and or data fields can be used to store ingested data and or metadata obtained from the client device s . For example the data structure can include fields related to encryption information compression information lifecycle management user permissions and like metadata.

For exemplary purposes the management console will be described with reference to a plurality of modules executing on one or more physical computing devices that interact with each other to ingest prepare and manipulate data with respect to the client devices . It should be understood that in other embodiments multiple modules can be combined into a single module or one module can be separated into additional modules to perform substantially the same operations. Moreover in other embodiments one or more of the below described modules can be implemented in a data connector on a separate server or the like.

As shown the information management console comprises an ingestion module that receives the data obtained from client devices by the data connectors . As discussed above in certain embodiments the ingested data is obtained from heterogeneous data sources and stored in one or more normalized data structures according to a predefined storage policy user preference and or format.

In certain further embodiments the ingestion module is configured to receive and or obtain metadata regarding the files folders on the client devices . For example the connectors can obtain various levels of metadata depending on the preferences of the user and or makeup of the information management system . In certain embodiments the ingestion module first receives higher level metadata regarding the client system data and can subsequently instruct the data connectors to obtain additional lower level metadata upon specific requests by the user. Moreover in certain embodiments the ingestion module is configured to scrub incoming data files for metadata e.g. file type user permissions security settings relevant data content combinations of the same or the like.

A conversion module in certain embodiments receives and normalizes metadata obtained by the ingestion module . For instance the conversion module can convert and or associate ingested metadata with a specific data model such as predetermined data fields of the normalized data structure . Moreover in certain embodiments the conversion module can further enrich the information stored in the data structure based on the ingested data. For instance the conversion module can based on the ingested data of a particular client device generate additional metadata value added metadata that is not produced or maintained by the native applications of the client device . The conversion module can then store this additional metadata in the normalized data structure and repeat the process for ingested data of different client devices . In this manner the normalized data structure can include additional metadata that is common for all data types of the client devices .

A configuration module in certain embodiments maintains the configuration settings for each of the plurality of client devices . For instance the configuration settings can inform the information management console of backup schedules retention policies or the like associated with backup devices in the information management system . The configuration module can also communicate with an interface module to provide a list of user utilities or data operations available with respect to certain types of data. For instance for a MICROSOFT EXCHANGE client device the user may be provided with information regarding different storage groups within the EXCHANGE server users within the EXCHANGE server or the like based on settings maintained by the configuration module .

In certain embodiments the configuration module receives settings input by the user through the user interface . In yet other embodiments the configuration module can receive such settings from the data connectors the ingestion module or from data stored in the management database .

The interface module transmits data to and receives data from the user interface . In certain embodiments the interface module formats information received from the database for graphical presentation to the user via an external display such as through a menu graph report window or the like.

The information management console further comprises one or more restore modules . In certain embodiments the restore modules are configured to restore data from one or more identified media devices without the need for the native backup application to be online. In certain embodiments each restore module is specific to a particular type of data such as a backup data format.

For instance in certain embodiments the user can select through the user interface to restore data of one or more files that are backed up in a format that corresponds to a backup application that has been decommissioned. In such embodiments the restore module which can recognize the backup format and appropriately process the data can identify and copy select portions of the backed up data. In certain embodiments the restore module can access the data directly after the media is mounted by the information management console and or the restore module can access the backed up data through a proxy server e.g. by emulating a native application or other pathway.

The information management console further comprises one or more mining modules that are configured to mine or process particular types of data. For instance the mining module s in certain embodiments can break down a database into individual elements on a granular level e.g. mailboxes email messages storage accounts user accounts etc. for additional cataloging data processing copying or the like. In certain embodiments each mining module is specific to a particular type of data e.g. EXCHANGE data SHAREPOINT data or the like .

Although the information management console has been described with reference to particular embodiments other arrangements and configurations of the information management console can be used. For instance the information management console can operate with fewer modules than those illustrated in . In yet other embodiments the information management console can comprise additional modules that perform additional data processing on client device data information stored in the normalized data structure s staged data that has been restored from a client backup file or the like. Moreover such data operations can be based on one or more user queries or commands received from the interface module storage polices rules or the like and can include for example archiving searching data conversion indexing single instancing de duplication legal discovery data classification implementing storage policies combinations of the same or the like.

As discussed disclosed embodiments of the invention allow for reporting diagnostic maintenance and or other tools to be applied to the extracted data metadata from heterogeneous data sources. Such embodiments thereby advantageously allow for such tools to be performed with fewer queries since it is not necessary to have multiple available queries that each apply to only a single data format.

For instance as illustrated in one of the client devices of the information management system is identified in the menu as GALAXY 1. This client device is further associated with three backup tapes i.e. TAPE 1 TAPE 2 and TAPE 3 . In certain further embodiments when the user selects a particular node such as an end node the user is provided with a number of options or data utilities that are available for data associated with the node. For instance the user may be provided e.g. through a pop up window a drop down list or the like with operation menus to assimilate jobs into the information management console archive search or index data of the node combinations of the same or the like.

As can be seen from the menu the user interface can include both backup and non backup client devices in a single view. Moreover although the menu provides one example of a graphical interface for a user other embodiments of the invention can use different types of user interfaces including but not limited to windows models lists tables links browsers combinations of the same or the like.

For example illustrate exemplary screen displays usable with the user interface of the information management system of . In particular shows an exemplary screen display for receiving and displaying information to a user regarding the information management system . For instance a side browser window lists a plurality of client devices that are associated with the information management system namely rajgad vexsk3 and w2k7x64. 

Each of these client devices further comprises data that is manageable by the information management console through one or more data connectors . For instance client device vex2k3 further comprises multiple types of data stored thereon including at least EXCHANGE database EXCHANGE mailbox and file system data. The browser window further illustrates that a data connector i.e. vex2k3 netapp snap exchange 1 for obtaining information regarding a NETAPP snapshot of EXCHANGE data on the vex2k3 client device.

Lower browser window further displays information regarding one or more jobs being executed with respect to data of the client devices . For instance the window illustrates details regarding a backup operation being managed by the information management console with respect to EXCHANGE data stored on the w2k7x64 client device.

The process begins with the data ingestion procedure illustrated by Blocks to during which data and or metadata is extracted from a plurality of heterogeneous client devices in the information management system . At Block configuration information is received by the information management console for one or more client devices installed or being installed in the information management system . In certain embodiments the configuration information is received from a user or system administrator through the user interface . For example the configuration information may include one or more of the following pieces of information regarding each client device to be installed instance name security information authentication information e.g. username and or password combinations of the same or the like. In yet other embodiments at least a portion of the configuration information can be automatically obtained from the client device upon installation.

Based on the obtained configuration information one or more data connectors or agents are installed on the client device s Block . As discussed above in certain embodiments each connector is customized to handle a particular data format and or device and is push installed to the specific client device based on the configuration information. For instance different data connectors can be associated with SYMANTEC NETBACKUP MICROSOFT EXCHANGE and the like.

At Block the data connector s extract actual data and or metadata from the respective client device s . For simplification purposes actual data and metadata will be referred to herein with respect to this process as data. For example the data connector s can read the client device data directly scrub log files and or communicate with one or more APIs and or native application processes to extract the data.

It will also be appreciated that although the data extraction process is illustrated in a single block the data extraction can proceed on a continuous periodic and or requested basis as data on the client device is modified. Thus Block may continue concurrently with subsequent blocks of the process . For instance upon the initial scan of the client device following installation the data extraction process may be relatively resource and time intensive but following the initial scan subsequent data extraction may be lighter or non existent e.g. for decommissioned client devices .

At Block the data connector stores the extracted data in the normalized data structure s such as an XML file managed by the information management console .

Subsequent Blocks to illustrate the preparation and management of the extracted data. At Block the process generates and stores value added data in the normalized data structure . For instance the data connector and or information management console can supplement additional metadata to the data structure regarding the extracted data wherein the additional metadata is non native to the application that originally generated the extracted data.

At Block the process presents a unified view through the user interface of the data stored on the various heterogeneous client devices . In certain embodiments the unified view is based on the normalized information stored in the data structure which includes both extracted data and value added data. In certain embodiments the normalized data in the data structure advantageously provides a means for executing a query with respect to data of multiple heterogeneous client devices rather than querying each device independently.

At Block the information management console receives input regarding a desired data management utility or processing operation. For instance the input can be indicative of one or more of the following data mining archiving stubbing data migration content indexing document level backup mining e.g. for non backup servers such as SHAREPOINT SQL EXCHANGE servers snapshots restoring data searching combinations of the same or the like. In certain embodiments the requested operation is based at least in part on one or more rules or policies such as stored in the management database .

Based on the request and the data involved the information management console prepares the data for the request operation Block . For instance in certain embodiments the data request may concern data stored in a snapshot. In such embodiments the information management console can mount the snapshot and copy the data to a storage medium e.g. tape a staging area the secondary storage or the like.

In yet other embodiments where the subject data is stored on a tape or other media the data preparation can utilize a proxy server to access the data and transfer a copy of the data to a staging area. In further embodiments the data preparation can comprise establishing a path to a particular library folder or other data repository that stores the subject data.

After the data is prepared if needed the process performs the requested data operation Block . In the case of restoring data backed up on one of the client devices the process can utilize the native backup application of the client device the corresponding data connector the information management console a customized data agent or the like to restore the data.

The process begins at Block wherein the user interface displays a unified view of a plurality of heterogeneous client devices . In certain embodiments the client devices comprise at least multiple devices that are associated with different backup applications or vendors. For instance the client devices can comprise servers that back up data to a plurality of storage media at the same or different locations. In yet further embodiments the client devices can comprise database servers and or non backup servers such as an EXCHANGE server a SHAREPOINT server SQL SERVER combinations of the same or the like.

In certain embodiments the user interface advantageously displays graphical representations such as icons of the client devices e.g. icons and or available data management operations in a unified view such as via a single window see for example menu of . In further embodiments the user interface can display information regarding the client devices and or the data stored thereon such as for example media type storage format storage costs actual and or predicted storage allocation actual and or predicted combinations of the same or the like.

At Block the user interface receives a selection of at least one of the client devices . For instance such a selection may be made by a user clicking on an icon representing the particular client device in the information management system . At Block the user interface displays the files folders databases or other data elements that are stored on the selected client device . In certain embodiments the display is in the form of a list a tree structure or the like.

At Block the process receives a request to perform a data operation on one or more data elements of the selected client device s . In certain embodiments the data request is received from a user via the user interface . In yet other embodiments the data request is automatically generated based on one or more storage policies schedules user preferences or the like. In certain embodiments the request may concern a request to restore data that has been backed up by one or more client devices . In other embodiments the request can comprise performing one or more of the following data operations archive backup copy search classify browse or the like.

It should be appreciated that although Blocks and are shown and described with reference to separate acts one or more of the aforementioned blocks can be combined into a single block or act. For instance in certain embodiments of the process a requested data operation can identify a client device and or one or more data elements on the client device that are the subject of the data operation without requiring the process to receive a separate selection of the client device Block or to display the files and or folders of the client device Block .

At Block the information management console determines if the data operation request concerns data that is on a non backup media e.g. a database . For instance in certain embodiments the information management console can access information stored in the management database to determine the format s of the subject data. In yet other embodiments the data connectors can be configured to determine what type of data in on the client devices .

If the data request concerns a backup medium the information management console accesses the device s storing the data Block . For instance the information management console can mount if needed a particular media device and read the backed up data stored thereon. In yet other embodiments the information management console can access the data on the device through a proxy server a network path or other means.

At Block the information management console performs the requested data operation. For instance in the case of a restore operation the restore module can access backed up or archived data to restore the data to a workable format. In yet other embodiments the restore module can utilize a data connector and or a native application of the client device to restore the data.

At Block the results of the request operation can be optionally stored in a memory such as in the management database for future use by the user and or the information management console . For example the cataloged information can be subsequently used to locate and archive certain data from the media devices according to one or more storage policies e.g. retention policies .

If at Block the information management console determines that the data of interest is on non backup media the process moves to Block . For instance such data can comprise databases related to applications such as EXCHANGE SHAREPOINT ACTIVE DIRECTORY or the like. In such situations the mining module of the information management console copies the data to a staging area to unravel the database down to its individual elements e.g. mailboxes email messages storage accounts user accounts etc. Block .

In certain embodiments Blocks and or comprise decrypting and or decompressing the non backup data. In yet further embodiments the process can comprise using a proxy to restore the data. For example copying and mining the data can comprise emulating the native application e.g. EXCHANGE ORACLE relating to the data of the particular files folders being copied to the staging area. In certain embodiments such emulation includes presenting a user interface and or one or more APIs to access and or manipulate the data as if the native application was installed on the proxy machine s . However instead of maintaining the data in the native format once it is processed the data can advantageously be converted into a file format that is more easily managed.

The processes described above can be especially advantageous in embodiments of the invention wherein vendors periodically change their file formats and or the file format is decommissioned. For instance by emulating the native application on a proxy machine the system is not required to maintain copies of new versions of the native application each time the application changes.

As shown an information management console communicates with a client A via a data connector and a client B via a data connector . In certain embodiments client device comprises data in a first backup format and client device comprises data in a second backup format. Moreover the first and second backup formats can comprise different properties such that a native application operating in accordance with the first backup format is not capable of working with the second backup format. For example the first backup format may comprise a NETBACKUP backup format while the second backup format may comprise a NETWORKER backup format.

According to the methods previously discussed herein the information management console can receive metadata from each of the client devices via the connectors for storage in one or more normalized data structures examples of which are illustrated in . For instance the console can populate various fields of the data structure s with metadata received from the connectors . For instance such fields may dictate the last access and or modified time of the client data.

Moreover the console can further populate the data structure s with additional value added data generated by the console . For instance information regarding the cost of a particular medium occupied by the data and or the overall storage capacity of the medium can be added to the data structure . In such embodiments the data structure storing the metadata for the data in first backup format i.e. on the client device has the same fields and or structure as the data structure storing the metadata for the data in second backup format i.e. on the client device .

The information management console can further maintain and or access one or more storage policies jobs or other scheduled operations for manipulating and or extracting data from both the client devices . In certain embodiments the console is configured according to one or more storage retention policies to migrate backup data that has not been accessed for a particular period of time. In such embodiments when the threshold time has passed the information management console can instruct the connectors to obtain and send the backup data to the console . In certain embodiments each of the connectors can access the data in the first and second backup formats respectively via one or more published APIs.

Based on the metadata available from the data structure the information management console can store the backup data acquired from the two client devices to the same secondary storage such as a tape drive. Such is especially advantageous in systems attempting to reduce the costs of primary storage e.g. on the client device s . For example a storage retention policy can be established to migrate data from more expensive storage media e.g. a NetApp filer or NAS device to a less expensive storage media e.g. tape after a predetermined period of time.

In certain further embodiments the information management console can further provide one or more reports via a user interface regarding costs of storage within the information management system . For instance the user interface can be configured to display a pie chart or other visual representation of a cost per unit of storage e.g. dollars per gigabyte for the various client devices within the system . Based on these reports the user can be informed how much storage is costing and or predicted to cost and be provided with the option of establishing storage criteria for managing the migration of data within the system . Various other reports can be provided.

Systems and modules described herein may comprise software firmware hardware or any combination s of software firmware or hardware suitable for the purposes described herein. Software and other modules may reside on servers workstations personal computers computerized tablets PDAs and other devices suitable for the purposes described herein. Software and other modules may be accessible via local memory via a network via a browser or via other means suitable for the purposes described herein. Data structures described herein may comprise computer files variables programming arrays programming structures or any electronic information storage schemes or methods or any combinations thereof suitable for the purposes described herein.

Embodiments of the invention are also described above with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams may be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to operate in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the acts specified in the flowchart and or block diagram block or blocks. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operations to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the acts specified in the flowchart and or block diagram block or blocks.

While certain embodiments of the inventions have been described these embodiments have been presented by way of example only and are not intended to limit the scope of the disclosure. Indeed the novel methods and systems described herein may be embodied in a variety of other forms furthermore various omissions substitutions and changes in the form of the methods and systems described herein may be made without departing from the spirit of the disclosure. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of the disclosure.

