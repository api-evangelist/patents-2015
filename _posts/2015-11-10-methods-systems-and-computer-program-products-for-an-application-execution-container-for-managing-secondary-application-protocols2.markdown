---

title: Methods, systems and computer program products for an application execution container for managing secondary application protocols
abstract: A virtual application container can manage a plurality of secondary applications using a graphical user interface (GUI). The secondary applications may be selectively downloadable by a user and/or provided by third-party external providers. The application execution container may include a common feature or services interface that is used by the secondary applications that are executed in the GUI, which may include user verification and/or authentication information. The application execution container may include security and control functions that may be used by external service providers to ensure that users are properly authenticated, and the ability to add and/or utilize individual secondary applications may be granted based on predetermined eligibility criteria.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09641529&OS=09641529&RS=09641529
owner: Coastal Federal Credit Union
number: 09641529
owner_city: Raleigh
owner_country: US
publication_date: 20151110
---
The present application claims priority under 35 U.S.C. 119 e to U.S. Provisional Patent Application Ser. No. 62 077 532 filed Nov. 10 2014 the content of which is incorporated herein by reference as if set forth in its entirety.

The present inventive concepts relate to methods systems and computer program products for an application container for managing application protocols and in particular to an application container for consolidating user verification information sharing and application management.

Networked software allows users to conduct certain transactions electronically. Users may access a secure server over a network or download software provided by a third party provider so that they can perform secure transactions or access other services. Some of these transactions and services may be provided on smart phones or tablet computer environments for mobile environments. While these computer environments offer convenience and mobility to users conducting secure transactions the transaction themselves require additional security to verify the identity of the user. Current software implementations however are generally limited in functionality.

Embodiments of the inventive concepts provide an application execution container which may include a common interface that is used by the secondary applications that are executed within the container. The common interface may include user verification and or authentication information. The application execution container may include security and control functions that may be used by external service providers to ensure that users are properly authenticated and the ability to add and or utilize individual secondary applications may be granted based on predetermined eligibility criteria.

In accordance with aspects of the inventive concepts a computer implemented method may include displaying on a computing device an application execution container configured to provide an execution environment to execute secondary applications within the application execution container providing by the application execution container a secure network connection over a computer network between the secondary applications and an application gateway node retrieving by the application execution container a plurality of secondary applications from the application gateway node over the secure network connection executing within the application execution container and responsive to selection by a user of the application execution container one of the plurality of retrieved secondary applications restricting by the application execution container all network communications by the executed secondary application to the secure network connection between the application execution container and the application gateway node providing by the application execution container an authentication interface to authenticate the user of the application execution container to the application gateway node over the secure network connection to allow the executed secondary application access to the application gateway node and transforming by the application execution container a request for services from the application gateway node by the executed secondary application into an authenticated request to the application gateway node by using the provided authentication interface. The authentication interface may authenticate the user of the application execution container to the application gateway node by providing secure authentication information of the user of the application execution container to the application gateway node without providing the secure authentication information of the user of the application execution container to the executed secondary application.

In some embodiments the plurality of secondary applications may be configured so as to execute only within the application execution container.

In some embodiments retrieving the plurality of secondary applications from the application gateway node may include selecting secondary applications for retrieval based on selection criteria associated with the user of the application execution container.

In some embodiments the selection criteria may include selecting secondary applications based on services provided to the user of the application execution container by an external services provider.

In some embodiments the computer implemented method may further include creating a record of authenticated transactions between respective ones of the secondary applications executing within the application execution container and the application gateway node. The record may be stored in a non transitory storage medium.

In some embodiments the application execution container may execute within an operating system of a personal computing device.

In some embodiments providing by the application execution container an authentication interface may include providing a computing interface configured to exchange data between the executed secondary application and the application gateway node over the secure network connection and configured to support two factor authentication with the application gateway node.

In some embodiments the authentication interface may require the two factor authentication responsive to selected transactions initiated by the executed secondary application.

In some embodiments the computer implemented method may further include providing by the application execution container a data exchange interface configured to exchange data between a first executed secondary application and a second executed secondary application.

In some embodiments an access to services provided by an external services provider may be restricted responsive to a level of service allowed to the user of the application execution container.

In some embodiments an access to services provided by the external services provider to the executed secondary application may be further restricted responsive to a level of service allowed to the executed secondary application.

In some embodiments the computer implemented method may further include receiving by the application gateway node an external connector module from an external services provider providing by the application gateway node a secure network connection between the application gateway node and the external services provider receiving a request at the application gateway node from the executed secondary application for the executed secondary application to communicate with the external services provider and routing the request by the application gateway node from the executed secondary application to the external services provider through the external connector module. The external connector module may be configured to communicate data between the application gateway node and the external services provider.

In some embodiments the secure authentication information of the user may be provided in the application execution container within an encrypted object. The encrypted object may be encrypted so that the executed secondary application and the application execution container cannot decrypt the secure authentication information of the user.

In some embodiments respective ones of the plurality of the secondary applications retrieved from the application gateway node may be coded in HTML and or JavaScript .

In some embodiments the retrieved plurality of secondary applications are stored and executed only from within a volatile storage medium on the computing device.

In some embodiments the authentication interface may include a common set of procedures and or objects managed by the application execution container and shared among the retrieved secondary applications.

In accordance with aspects of the inventive concepts a system may include a processor and a memory coupled to the processor. The memory may include computer readable program code embodied in the memory that when executed by the processor causes the processor to perform operations including displaying on the system an application execution container configured to provide an execution environment to execute secondary applications within the application execution container providing by the application execution container a secure network connection over a computer network between the secondary applications and an application gateway node retrieving by the application execution container a plurality of secondary applications from the application gateway node over the secure network connection executing within the application execution container and responsive to selection by a user of the application execution container one of the plurality of retrieved secondary applications restricting by the application execution container all network communications by the executed secondary application to the secure network connection between the application execution container and the application gateway node providing by the application execution container an authentication interface to authenticate the user of the application execution container to the application gateway node over the secure network connection to allow the executed secondary application access to the application gateway node and transforming by the application execution container a request for services from the application gateway node by the executed secondary application into an authenticated request to the application gateway node by using the provided authentication interface. The authentication interface may authenticate the user of the application execution container to the application gateway node by providing secure authentication information of the user of the application execution container to the application gateway node without providing the secure authentication information of the user of the application execution container to the executed secondary application.

In some embodiments the plurality of secondary applications may be configured so as to execute only within the application execution container.

In some embodiments retrieving the plurality of secondary applications from the application gateway node may include selecting secondary applications for retrieval based on selection criteria associated with the user of the application execution container.

In some embodiments the selection criteria may include selecting secondary applications based on services provided to the user of the application execution container by an external services provider.

In some embodiments providing by the application execution container an authentication interface may include providing a computing interface configured to exchange data between the executed secondary application and the external services provider over the secure network connection and configured to support two factor authentication with the external services provider.

In some embodiments the authentication interface requires the two factor authentication responsive to selected transactions initiated by the executed secondary application.

In accordance with aspects of the inventive concepts a system may include a processor and a memory coupled to the processor. The memory may include computer readable program code embodied in the memory that when executed by the processor causes the processor to perform operations including receiving on the system a request from an application execution container configured to provide a secure network connection over a computer network between the system and the application execution container receiving over the secure network connection between the system and the application execution container user authentication information associated with a user of the application execution container providing the received user authentication information to an authentication and privileges engine receiving from the authentication and privileges engine a plurality of entitlements associated with the user of the application execution container responsive to receiving the entitlements of the user associated with the application execution container determining a plurality of entitled secondary applications which the entitlements of the user indicate are available for the user receiving over the secure network connection between the system and the application execution container a first request for a user interface portion of a respective one of the plurality of entitled applications and providing responsive to the first request the user interface portion of the respective one of the plurality of the entitled secondary applications over the secure network connection to the application execution container receiving over the secure network connection between the system and the application execution container a second request for a functional portion of the respective one of the plurality of entitled applications and providing responsive to the second request the functional portion of the respective one of the plurality of the entitled secondary applications over the secure network connection to the application execution container. The authentication and privileges engine may be configured to associate the user authentication information with entitlements available to the user. Respective ones of the plurality of entitled applications may include a user interface portion and a functional portion.

In accordance with aspects of the inventive concepts a computer program product may include a non transitory computer readable storage medium having computer readable program code embodied in the medium that when executed by a processor causes the processor to perform operations which may include displaying on a computing device an application execution container configured to provide an execution environment to execute secondary applications within the application execution container providing by the application execution container a secure network connection over a computer network between the secondary applications and an application gateway node retrieving by the application execution container a plurality of secondary applications from the application gateway node over the secure network connection executing within the application execution container and responsive to selection by a user of the application execution container one of the plurality of retrieved secondary applications restricting by the application execution container all network communications by the executed secondary application to the secure network connection between the application execution container and the application gateway node providing by the application execution container an authentication interface to authenticate the user of the application execution container to the application gateway node over the secure network connection to allow the executed secondary application access to the application gateway node and transforming by the application execution container a request for services from the application gateway node by the executed secondary application into an authenticated request to the application gateway node by using the provided authentication interface. The authentication interface may authenticate the user of the application execution container to the application gateway node by providing secure authentication information of the user of the application execution container to the application gateway node without providing the secure authentication information of the user of the application execution container to the executed secondary application.

In some embodiments the plurality of secondary applications may be configured so as to execute only within the application execution container.

In some embodiments retrieving the plurality of secondary applications from the application gateway node comprises selecting secondary applications for retrieval based on selection criteria associated with the user of the application execution container.

In some embodiments providing by the application execution container an authentication interface comprises providing a computing interface configured to exchange data between the executed secondary application and the application gateway node over the secure network connection and configured to support two factor authentication with the application gateway node.

The present inventive concepts now will be described hereinafter with reference to the accompanying drawings and examples in which embodiments of the inventive concepts are shown. These inventive concepts may however be embodied in many different forms and should not be construed as limited to the embodiments set forth herein. Rather these embodiments are provided so that this disclosure will be thorough and complete and will fully convey the scope of the inventive concepts to those skilled in the art.

According to some embodiments a virtual application container is provided that manages other applications using a graphical user interface GUI . As used herein the term application execution container refers to a computer generated software application that is configured to render a GUI and manage a plurality of secondary applications within the GUI. The secondary applications may be selectively downloadable by a user and or provided by third party external providers. The application execution container may include a common feature or services interface that is used by the secondary applications that are executed in the GUI which may include user verification and or authentication information. The application execution container may include security and control functions that may be used to ensure that users are properly authenticated and the ability to add and or utilize individual secondary applications may be granted based on predetermined eligibility criteria.

The eligibility criteria may be determined based on various factors such as characteristics of the user entitlements provided by one or more external service providers to the user and or the secondary application the user is executing and or products and services being offered or subscribed to by the user among others. Accordingly it may be possible to control which secondary applications appear within the application execution container that are made available to a particular user or class of users. The application execution container may include both device resident and or server side components that support rendering and branding the user interface backend integration to the external service providers user authentication and secondary application provisioning. The application execution container may include base features for consistency in the look and feel of the secondary applications deployed in the application execution container such as standard look and feel definitions and style sheets as well as JavaScript and HTML code for rendering a specific user interface.

The present inventive concepts can support the secure delivery of a broad range of services to the user of the application execution container by application developers within a single user experience on mobile tablet desktop and or other devices. Further the present inventive concepts can support secure access mechanisms that govern access from the secondary applications to data and or external systems required to support secondary application capabilities.

The application execution container can provide a user interface for user access and can include security and control mechanisms to ensure that users are only granted the ability to utilize applications to which they are entitled. The application execution container can further restrict unauthorized access by secondary applications to data and external systems based on rules and preferences for such secondary applications. The present inventive concepts can also provide an application gateway node which can receive requests from the application execution container for access to data and external systems can merge request payloads from the application execution container with access credentials for external systems in an authentication and privileges engine and can route authorized requests from the secondary applications accordingly for fulfillment.

In addition the authentication and privileges engine mechanism can maintain static user entitlements rules for dynamic user entitlements and or application entitlements. Entitlements may be privileges provided to the user and or specific applications to perform particular tasks interact with particular systems and or interact with particular data. These entitlements can be enforced through multiple security layers throughout the system.

The present inventive concepts can mitigate risk through a coordinated approach that integrates the application execution container application gateway node and authentication and privileges engine in the support of a cohesive user experience while isolating the performance of discrete functions of secondary applications to improve the security and integrity of the overall environment.

As disclosed herein embodiments of the present inventive concepts may result in computational efficiencies and improvements that are previously unachievable using current technologies. For example common access to shared data from a user and or an external service provider of the user may result in computational efficiencies for the plurality of secondary applications managed by the application execution container. In addition functions may be more efficiently managed by the application execution container by using a shared user authentication and login protocol for all of the secondary applications managed by the application execution container.

In some embodiments the application execution container may include computer readable program code configured to display a GUI that includes a plurality of selectively downloadable secondary applications each of the selectively downloadable secondary applications having at least one function. The application execution container may include security and control mechanisms that authenticate users and grant access to the plurality of selectively downloadable secondary applications when eligibility criteria are met by the user including authentication and entitlement requirements. The application execution container provides the plurality of selectively downloadable secondary applications with common access to shared data from a user such as for services provided by external third party systems including data retrieval and caching of user permissions data retrieval and caching of user information with respect to the external third party services transaction histories and other shared data across the plurality of secondary applications and access to common services including user communications and alerting features.

In some embodiments a plurality of selectively downloadable secondary applications that may be provided in the application execution container may access common core integration modules which may include authentication entitlements provisioning instructions location data image processing messaging and alerts engines and application purchasing.

The system architecture according to some embodiments of the present inventive concepts can provide the ability to secure access to external services data and external systems within a configurable multi application framework. The system architecture can control user access to a broad range of digital capabilities provided by a plurality of application developers within a single user interface presented by an application execution container . Multiple security layers may be utilized within the system architecture to provide security requirements.

One such security requirement may be that users can only access functional secondary applications to which they are entitled based on static and dynamic entitlements configured by the authentication and privileges engine .

Another security requirement may be that functional secondary applications can only access data and external systems to which they are entitled based on predetermined rules and preferences for such secondary applications .

Yet another security requirement may be that data used within the system architecture and external systems e.g. primary service provider and or secondary service provider are protected from unauthorized access.

The application execution container can provide a run time environment for user access to a broad range of functional secondary applications provided by a plurality of application developers within a single user interface. The user interface can be presented on a computing device such as a mobile telephone a tablet computer a wearable computer a gaming console a network appliance a laptop or a desktop computer but the present inventive concepts are not limited thereto. The secondary applications can include applications which run computer instructions within the application execution container and or access data remote from the computing device e.g. via the world wide web 

The secondary applications may be configured to run within the application execution container when selected for execution by the user. In some embodiments the secondary applications may only run within the application execution container .

In some embodiments the secondary application may include at least two parts a user interface portion and a functional portion .

The user interface portion may include code which provides functionality to configure the application execution container to display an icon or tile for the secondary application within the application execution container . The tile may provide a visual indicator to the user that the secondary application is available within the application execution container .

The functional portion of the secondary application may include code which executes the functions of the secondary application as described herein. The functional portion of the secondary application may be downloaded separately from the user interface portion of the secondary application .

The separation of the functional portion and the user interface portion of the secondary application provides at least two benefits a variable user interface based on the user and or other indicators and additional security for the secondary application .

By allowing the user interface portion of the secondary application to be separated from the functional portion the user interface portion can be swapped or changed without affecting the functional portion . This allows the application gateway node described with greater detail herein to provide a varying user interface for the secondary application to the user depending on various factors. These factors can include the identity of the user the source of the secondary application entitlements available to the user from the primary service provider and or a secondary service provider and or the device displaying the application execution container but the present inventive concepts are not limited thereto.

Separating the functional portion of the secondary application also provides additional security. As will be described in more detail herein the functional portion of the secondary application can be downloaded when selected by the user for execution. By leaving the functional portion at a centralized location e.g. the application gateway node the functional portion of the secondary application is less vulnerable to attacks modifications and or degradation.

Referring again to the user interface of the application execution container may be generated dynamically based on the entitlements provided to the application execution container by an application gateway node . The application gateway node may in turn retrieve the entitlements from an authentication and privileges engine contained within a set of common services available to the application gateway node .

The entitlements provided by the application gateway node refer to permissions which control which services interfaces and functionalities will be available to the user of the application execution container . In some embodiments entitlements may be privileges provided to the user which can control functionality available to the secondary applications . Entitlements may also be available for individual ones of the secondary applications and can control which services interfaces and functionalities will be available to the secondary applications . In some embodiments the privileges of the authentication and privileges engine may include the entitlements for the secondary applications . In some embodiments the privileges of the authentication and privileges engine may include additional privileges which affect additional functionality of the application execution container .

The application execution container may generate a user interface for the user dynamically when started by the user. By generating the user interface dynamically for the user the application execution container can verify that users are not allowed to access secondary application functionality to which they are not entitled by not including unentitled secondary applications in the user interface presented to each individual user by the application execution container . In some embodiments unentitled secondary applications may be displayed by the application execution container but may be marked in some way to indicate that they are inaccessible.

The application execution container may also contain common logic which is made available to executing secondary applications . The common logic may include common objects which can be instantiated by the secondary applications to provide functionality within the application execution container . The common logic may also contain portions of a software development kit SDK which can be used to promote the development of secondary applications for developers. The SDK can contain functions header files and libraries to configure elements of the development environment to aid in the development of secondary applications . In some embodiments the SDK can provide access to local device features such as a camera file upload GPS accelerometer etc.

The application execution container may also include an application programming interface API AGW API for interaction with the application gateway node . The application gateway node API may perform an additional security layer within the system architecture which can validate that secondary applications only have access to system components to which they are entitled. The application gateway node API can control access mechanisms from secondary applications to data and external systems communicating with the local computing device and invoking other secondary applications within the application execution container . The application gateway node API can restrict secondary applications from being able to call external systems directly. In some embodiments the application gateway node API can restrict secondary applications from communication outside the application execution container . In some embodiments the application gateway node API can route all outbound traffic from the secondary applications to the application gateway node .

The application gateway node can host static world wide web content world wide web services and other logic. Portions of the functional portions and or user interface portions of the secondary applications may include web based functionality such as HTML JavaScript and stylesheets. The web based functionality can be provided by the application gateway node via a web server and web services located in the application gateway node .

The application gateway node can provide various controllers to implement services on behalf of the application execution container . In some embodiments the application gateway node can include services dedicated to third party integration which can facilitate access between the application execution container and external systems. In some embodiments the application gateway node can include logging and analytics which may record actions performed by a plurality of application execution containers .

The application gateway node can receive and route communications from the application execution container and can provide integration with common services such as the authentication and privileges engine . The authentication and privileges engine may access storage to perform services related to security and authentication. The application gateway node can also provide other common services which may be needed by the application execution container . In some embodiments the application gateway node can provide integration with external systems.

In some embodiments the application gateway node can receive requests from the application execution container for access to data and external systems. In some embodiments the application gateway node can merge request payloads from the application execution container with access credentials for external systems maintained in the authentication and privileges engine . In some embodiments the application gateway node can route authorized requests from the application execution container to external systems such as a primary service provider or secondary service providers for fulfillment.

The primary service provider may control the application gateway node . In other words the application gateway node may be provided by the primary service provider to facilitate access to the primary service provider . In some embodiments the primary service provider and the application gateway node may be co located but the present inventive concepts are not limited thereto. In some embodiments the primary service provider may be physically or logically separate from the application gateway node . In some embodiments the application gateway node the common services and the authentication and privileges engine may be deployed in a cloud environment which can be accessed by the application execution container . The primary service provider and or secondary service providers may be physically separate from the cloud environment of the application gateway node the common services and the authentication and privileges engine .

The secondary service provider may be separate from the primary service provider with which the application execution container may wish to communicate. The secondary service provider may be a system or virtual machine which is either logically or physically separate from other systems in the network containing the application gateway node . In some embodiments the secondary service provider may be part of a network which is distinct from that of the primary service provider . In some embodiments the secondary service provider may be under the control of a different entity than the primary service provider . The secondary service provider may provide additional services and or data to the application execution container . In some embodiments the methods and or data used for communicating with the secondary service provider may be different than the methods and or data used for communicating with the primary service provider .

In order to communicate with the primary service provider the application gateway node may be required to authenticate with the primary service provider . The authentication between the application gateway node and the primary service provider may be a different authentication than the authentication process between the application execution container and the application gateway node . That is to say that the application execution container may authenticate with the application gateway node using authentication credentials associated with the user executing the application execution container while the application gateway node may authenticate with the primary service provider using a separate set of credentials that may be specific to the application gateway node .

Though shows a single application execution container connected to the application gateway node it will be understood that in some embodiments the application gateway node may maintain a plurality of connections to a plurality of application execution containers authenticated to a plurality of users. The authentication maintained by the application gateway node with the plurality of users may be separate from the authentication maintained between the application gateway node and the primary service provider .

Though shows a single application gateway node between an application execution container and the primary service provider it will be understood that in some embodiments there may be a plurality of application gateway nodes connected to the application execution container . Additional application gateway nodes may provide connections to additional primary service providers and or other secondary service providers . In some embodiments the application execution container may communicate with a plurality of application gateway nodes in parallel. Such a configuration may be used for load balancing or access to additional primary service providers and or other secondary service providers . In some embodiments the application execution container may communicate with a plurality of application gateway nodes serially where a first application gateway node communicates with a second application gateway node instead of or in addition to a primary service provider and or other secondary service provider .

A request over the application gateway node API between the application execution container and application gateway node may logically and or physically separate the user access credentials maintained in the authentication and privileges engine from the request payload. In other words the application gateway node API may be configured to only send the request payload from the application execution container and require that the user access credentials be retrieved separately by the application gateway node from the authentication and privileges engine . This separation can provide an additional security layer within the system architecture by combining these elements at a later portion of the authentication process without the knowledge of the application execution container or authentication and privileges engine . In some embodiments the application execution container may provide the user access credentials with the request payload but the user access credentials may have been encrypted by the authentication and privileges engine in such a way that the application execution container cannot decrypt them and thus cannot access them.

The application gateway node may also include a logically and physically separated external connector service to verify that system logic internal to the application gateway node is not intermingled and or accessible to logic created to facilitate connectivity to external systems e.g. primary service provider and or secondary service provider . In other words the mechanisms used to create a connection to a primary service provider and or a secondary service provider may be provided in one functional module while methods used to request an external connection are maintained in another functional module. This may allow the application gateway node to facilitate connection to different service providers by using a different functional module to create the connection while maintaining a common functional module which requests the external connection. The external connector service portion of the third party integration module can support integration to secure primary service providers as well as secondary service providers including third party services. In some embodiments secure primary service providers can include banking services health services educational services and or military services. However the present inventive concepts are not limited thereto.

The authentication and privileges engine can maintain for example static user entitlements rules for dynamic user entitlements and application entitlements. These entitlements can be enforced through multiple security layers throughout the system architecture as described further herein. For user entitlements the authentication and privileges engine can allow users to be included in one or more entitlement groups through static entitlements and or through dynamic rules applied based on user data from backend systems such as the primary services provider and or the one or more secondary service providers . These entitlement groups can provide a flexible model for specifying entitlement rules and calculating entitlements in real time.

In some embodiments the authentication and privileges engine can maintain entitlements for secondary applications that govern the ability of the secondary applications to access external data and or systems through the application gateway node .

In some embodiments the authentication and privileges engine can maintain entitlements for secondary applications to access APIs for communicating with the local device and access mechanisms to invoke other secondary applications . These entitlements can combine to provide a higher level of security and eliminate or reduce the possibility of rogue secondary applications .

In some embodiments the application execution container the application gateway node the authentication and privileges engine the primary service provider and the one or more secondary service providers may be provided on separate computer servers but the present inventive concepts are not limited thereto. In some embodiments the various elements can be provided on a plurality of different computer servers. For example in some embodiments the application gateway node the common services and the authentication and privileges engine may be deployed in a cloud environment comprising multiple servers which can be accessed by the application execution container . The primary service provider and or secondary service providers may be physically separate from the cloud environment of the application gateway node the common services and the authentication and privileges engine . In some embodiments all of the components may be on a single server. In other embodiments the application gateway node the authentication and privileges engine and the primary service provider may be the same server while the application execution container may be on a separate computer server. The separate computer system upon which the application execution container executes may be controlled by a different entity and or cross networks controlled by a different entity than the entity which controls the application gateway node such that authentication and additional security may be necessary.

In some embodiments the application gateway node and the authentication and privileges engine may be provided on the same server. In other embodiments the application gateway node and the authentication and privileges engine may be provided on the different servers. Similarly though the application gateway node is illustrated with multiple components in e.g. Web Server External Connector Service etc. these components may be implemented physically all as one component or separate components. The functionality of these components may also be distributed across multiple servers as would be understood by one of ordinary skill in the art.

In some embodiments the computer implemented method may include a step which includes displaying on a computing device the application execution container configured to provide an execution environment to execute the secondary applications within the application execution container .

In some embodiments the computer implemented method may include a step providing by the application execution container a secure network connection over a computer network between the secondary applications and the application gateway node .

In some embodiments the computer implemented method may include a step retrieving by the application execution container a plurality of secondary applications from the application gateway node over the secure network connection.

In some embodiments the computer implemented method may include a step executing within the application execution container and responsive to selection by a user of the application execution container one of the plurality of retrieved secondary applications .

In some embodiments the computer implemented method may include a step restricting by the application execution container all network communications by the executed secondary application to the secure network connection between the application execution container and the application gateway node by way of the application gateway node API .

In some embodiments the computer implemented method may include a step providing by the application execution container an authentication interface to authenticate the user of the application execution container to the application gateway node over the secure network connection to allow the executed secondary application access to the application gateway node . The authentication interface may authenticate the user of the application execution container to the application gateway node by providing secure authentication information of the user of the application execution container to the application gateway node without providing the secure authentication information of the user of the application execution container to the executed secondary application .

In some embodiments the computer implemented method may include a step transforming by the application execution container a request for services from the application gateway node by the executed secondary application into an authenticated request to the application gateway node by using the provided authentication interface.

As illustrated in an application execution container may be loaded by a user at step . Loading the application may be accomplished by selecting the application execution container from a list of programs to be executed by clicking on a provided link or by other methods for initiating a computer application as understood by one of ordinary skill in the art.

After loading a first portion of the user interface may be dynamically generated at step . In some embodiments the first portion of the user interface may be dynamically generated prior to the user being authenticated in by the system architecture .

Following the pre authentication user interface generation the user of the application execution container is authenticated at step . The authentication process which will be explained in more detail herein can confirm that the user is entitled to use the application execution container and which secondary applications will be made available to the user.

After authentication a second portion of the user interface may be dynamically generated at step . In some embodiments the second portion of the user interface may be dynamically generated after the user is authenticated by the system architecture . The second portion of the user interface may reflect those features which are associated with content which the user is specifically authorized to see and or utilize.

At step the user may select a secondary application to execute. A secondary application can provide access to services and or data available from external systems such as the primary service provider or one or more secondary service providers .

Once executed at step the secondary application may make requests to the application gateway node . These requests may be for data which can be provided by the application gateway node or from external systems such as the primary service provider or one or more secondary service providers .

Depending on the type of access performed by the secondary application secure data related to the operations of the secondary application may be stored via the application execution container and the application gateway node .

As illustrated in the user may continue to execute secondary applications within the application execution container by repeating steps . Though these steps are illustrated serially within one of ordinary skill in the art will recognize that the secondary applications could operate in parallel. In some embodiments of the present inventive concepts execution of the secondary applications will be restricted to running serially such that only one secondary application is running at a time.

When the user is finished with the application execution container the user may logout of system architecture and close the application execution container at step . The user may also be permitted to log out or other methods such as an automatic timeout expiration of a session may be provided.

At step when the user loads the application execution container the application execution container can query the application gateway node via the application gateway node API AGW API . At step the application gateway node can authenticate the domain of the application execution container . In some embodiments authenticating the domain can include validating the machine and or platform which is executing the application execution container and or validating the version of the application execution container . In some embodiments authenticating the domain can include validating the access location of the secondary application and or the application execution container . To authenticate the domain the application gateway node can query the authentication and privileges engine to validate domain registration data provided by the application execution container . In some embodiments successful authentication of the domain will be required before further operations can be performed by the application execution container .

As illustrated in step to dynamically generate user interface elements prior to authentication can query the application gateway node via the application gateway node AGW API . At step the application gateway node can query the authentication and privileges engine to retrieve entitlements which are available to a public user. Entitlements which are available to a public user are those entitlements which are available without special authentication. In other words public entitlements are those entitlements which may be available to a user regardless of their authentication level within the system.

In some embodiments the user authentication step queries the application gateway node via the AGW API to exchange user credentials. The application gateway node can further query the authentication and privileges engine to authenticate the user by comparison to internal or external user credentials contained within the authentication and privileges engine . Authenticating the user can validate that the user has the appropriate permission to execute the application execution container . Authentication can also establish the entitlements available to the user to be discussed more herein. Additional details related to the user authentication step are illustrated herein with respect to .

After successful authentication additional user interface elements can be displayed by the application execution container . As illustrated in the application execution container uses the AGW API to retrieve entitlements for the now authenticated user at step . The AGW API may retrieve the known user and application entitlements for the authenticated user from the authentication and privileges engine . The entitlements control which secondary applications are available to the authenticated user as well as what functionalities those secondary applications can perform. For example once authenticated user Bob may have access to Application X which provides access to Bob s confidential data on a primary service provider . The entitlements may further provide that Bob can view the confidential data via Application X but may not delete it. Entitlements and the processes used to retrieve them are illustrated more fully in and discussed herein.

Once the complete set of entitlement is received by the application execution container at step the application execution container can complete the user interface display indicating the secondary applications that are available for execution at step .

Retrieving the entitlements may allow the application execution container to determine which secondary applications are to be made available to the user. As part of this determination the application execution container can also retrieve a user interface portion of the secondary application to display to the user with the application execution container . As described herein the secondary applications may be separated into a user interface portion and a functional portion . Once the application execution container has determined the secondary applications to which the user is entitled the application execution container may retrieve the user interface portion for respective ones of the plurality of secondary applications to display within the application execution container .

In some embodiments because the user interface portion of the secondary applications are downloaded dynamically based on the user entitlements the visual display can be altered depending on the particular user. For example if a similar external service is marketed to two different users through different entities the same secondary application may have a different user interface with a different branding for the first user than the second user. In some embodiments though the user interface portions of the secondary applications may be different the underlying functional portion of the secondary applications may be substantially the same.

At steps a user may select a secondary application for execution. When a given secondary application is selected for execution within the application execution container the application execution container accesses the application gateway node via the AGW API to retrieve the functional code e.g. the functional portion of the secondary application to execute the secondary application at step . That is to say that the code for execution the secondary application does not exist on the application execution container until the user selects the secondary application and the application execution container retrieves the functional portion of the secondary application from the application gateway node . In some embodiments the application gateway node may check permissions of the user with the authentication and privileges engine to ensure that the user has been granted access to run the selected secondary application . If the user does not have access to the secondary application the secondary application can display an error message which has been defined in the execution code for the secondary application that is displayed for those who are not authorized access to it.

For security purposes the secondary application may be run substantially from memory. In other words when secondary application is retrieved to the application execution container it may be stored in memory and the secondary application may execute from the memory in which it is stored. In some embodiments this memory from which the secondary application runs may consist solely of volatile memory. One of ordinary skill in the art will recognize that executing substantially from memory would not preclude standard memory paging to a non volatile storage device that may be performed as a generic function of the operating system.

The secondary application may be constructed so that it may be substantially only executed within the application execution container . That is to say that the application execution container has the means to operate the instructions provided with the secondary application but the secondary application may not be executed when selected outside the environment of the application execution container .

To support the development of secondary applications the system architecture may optionally provide software development kits SDK which provide application developers the capability of constructing and testing secondary applications within the application execution container . In some embodiments the SDK can provide access to local device features such as a camera file upload GPS accelerometer etc.

While executing the secondary application may only communicate with the application execution container through the AGW API . As discussed herein any accesses made by the secondary application to another external system or another secondary application must be made through the application execution container . In some embodiments the AGW API may be the only path available to the secondary application to access outside of the application execution container .

To facilitate communication with another system the secondary application may utilize the AGW API to communicate with the application gateway node . The application gateway node can funnel the request to external service controller within the application gateway node . The application gateway node may be configured to connect to a primary service provider . In some embodiments the application gateway node may be further configured to connect to one or more secondary service providers . Connector parameters that may be required to communicate with the primary service provider and or the secondary service provider may be stored in the authentication and privileges engine .

The application gateway node may be configured to communicate with the primary service provider and or a secondary service provider via functionality included in an external connector service e.g. associated external connectors described herein of the application gateway node . Within the external connector service may be stored the procedures needed to successfully initiate and complete a transaction to the primary service provider and or a secondary service provider . In some embodiments the external connector service of the application gateway node may be pre configured with functionality required to communicate with the primary service provider . In some embodiments the external connector service of the application gateway node can allow for communication to at least one secondary service provider . In some embodiments the external connector service of the application gateway node may be updated after the application gateway node has been deployed. Updates to the external connector service may allow for communication to a different primary service provider and or additional secondary service providers .

The application execution container may maintain a global session which may contain data which may be shared if entitlements allow with respective ones of the executing secondary applications . This session may allow for persistent data to be provided between secondary applications so that data persistence may be maintained for the user.

When initially executed within the application execution container the secondary application may not be required to authenticate the user. Instead upon execution the secondary application will inherit the authentication provided to the application execution container for the user. Though the secondary application will be authenticated it will be kept isolated from the underlying user authentication information.

The application execution container may isolate the user identity and authentication information from the secondary applications . In some embodiments the secondary applications are not required to know and or may be abstracted from the authentication information available to the application execution container . In other words the secondary applications executing in the application execution container may be unable to determine the identity and or authentication information of the user executing the application execution container . In some embodiments the application execution container may provide the secondary application with an encrypted object containing the embedded user identity and or authentication information. The encrypted object may be configured to contain the identifying information of the user of the application execution container . The encrypted object may be created as part of a successful user authentication with the application gateway node by the authentication and privileges engine . The encrypted object may be configured so that the authentication and privileges engine may be able to decrypt the information but the secondary application and or the application execution container cannot. The secondary application may be provided the encrypted object as part of its execution environment. The secondary application may further be able to pass the encrypted object to the application gateway node as part of calls made via the AGW API . In this way the application gateway node may be able to determine the authenticated user on whose behalf the secondary application is performing the AGW API interface call but the secondary application can still be prevented from determining the authentication information of the user.

In other embodiments the encrypted object may be maintained by the application execution container and the AGW API rather than the secondary application . That is to say that the encrypted object may not be passed to the secondary application but instead held by the application execution container . In some embodiments the secondary application may make a request to the AGW API for access to the application gateway node . The request from the secondary application to the AGW API may not include the encrypted object. The AGW API may in turn pass the request from the secondary application to the application gateway node with the encrypted object.

During some aspects of the execution of the secondary application the application gateway node may determine that additional authentication is necessary. The application gateway node may determine that a particular operation requires additional security or a verification of identity. For example the user may attempt a bank transaction through a secondary application that exceeds a predetermined transaction threshold. At such a determination the application gateway node may require the user to provide additional authentication. As discussed herein with respect to initial user authentication this additional authentication may take the form of a pre scripted question an additional code or some type of physical characteristic of the user such as voice or fingerprint though the present inventive concepts are not limited thereto. As would be understood by one of skill in the art any type of multi factor authentication may also be appropriate for the additional authentication. When a determination is made that such additional authentication is necessary the application gateway node may notify the application execution container that the pending operation cannot complete without the additional authentication being provided. The application execution container may then provide a user interface or other functionality to retrieve the requested additional authentication information from the user. Any additional authentication information provided by the user will then be provided to the application gateway node via the AGW API . Though the application execution container performs this operation on behalf of the secondary application based on a transaction initiated by the secondary application the secondary application may be unaware of the need for additional authentication the authentication method that was pursued or the authentication information that was provided by the user. In this way a heightened security environment may be maintained by the application execution container .

In some embodiments the secondary application may request the additional authentication from the application execution container . The secondary application may wish to receive additional authentication for a transaction selected by the user within the secondary application . Though this additional authentication was requested by the secondary application the additional authentication may still be performed by the application execution container via the AGW API to the application gateway node . In other words the secondary application may request the additional authentication but the actual authentication may be conducted via mechanisms outside the control of the secondary application . In such an embodiment the secondary application may receive an indication via the application execution container that the additional authentication was successful.

Once the user has completed their usage of a particular secondary application they may exit from that particular secondary application without exiting from the application execution container . The user may then execute another or the same secondary application . In some embodiments secondary applications may be executed serially and or concurrently with one another.

When the user wishes to exit from the application execution container the user may logout from the application execution container.

In some embodiments the user of the application execution container may manage the secondary applications that are presented via secondary application management capabilities made available to the user within the application execution container . These capabilities may provide the ability to show or hide secondary applications in the application execution container add secondary applications to the application execution container delete such secondary applications and modify display preferences such as which added secondary applications appear where and in what order. Similar to the secondary application user restrictions secondary application management capabilities may be tailored or customized to the user based on the user s relationship with the external service providers such as the primary service provider and or a secondary service provider . Of the secondary applications developed for use within the application execution container the primary service provider may be in control of what secondary applications are offered to which users and may not be required to offer individual secondary applications to any users. The primary service provider may restrict access to available secondary applications based on its preferences such as to those that do not apply to its provided services its market segmentation techniques and or based on which products and services the user holds with the primary service provider . In some embodiments user risk profiles may also be taken into account. The application management may control which secondary applications in their entirety are made available to users within the application execution container where application user restrictions described above apply to restricting access to features within secondary applications for which the user is granted access. Within the bounds of what the primary service provider makes available to individual users users can then tailor the user experience based on individual taste and needs. The option to pay for premium applications and enhancements may also be provided.

Enhanced authentication techniques may apply to unknown users and high risk activities where challenge questions can be asked to verify the user s identity. User authentication can be handled during multiple points of the user interaction. In some embodiments user authentication can be handled upon enrollment to use the application execution container . In some embodiments user authentication can be handled upon downloading and configuring the application execution container and subsequently accessing the application execution container . Secondary authentication may also be required upon attempting to execute high risk activities.

As illustrated in at steps and the action by the application execution container via the AGW API can provide device data and location data in addition to the user credentials. The application gateway node can be configured to approve authentication for a particular user only for certain devices or only when accessed from particular locations.

For example the application gateway node may only approve access for user Bob via a smartphone if the access is performed within the United States. Conditions such as these may be maintained within the authentication and privileges engine but may be updated. For example in some embodiments the authentication and privileges engine may be updated via communications with the primary service provider . In other embodiments portions of the authentication and privileges engine may be updated by a properly authenticated user. For example user Bob once authenticated may further authenticate a second smartphone he owns. Similarly Bob could allow access from a location outside the United States while Bob is on vacation.

At steps and the application gateway node may implement challenge questions and or other types of multi factor authentication. These additional steps may represent actions that the user must affirmatively perform or questions that the user must affirmatively answer before authentication will be successful. For example the application gateway node may require the user of the application execution container to answer a security question such as What is your mother s maiden name As another example the application gateway node could require that the user of the application execution container provide a fingerprint scan through some input option of the user device upon which the of the application execution container is executing. As another example the application gateway node could send a text message containing a code word to a known phone of the user and require the user of the application execution container to enter the correct code before authentication is successful. In yet another example the application gateway node could provide the location of the local device as an additional factor for authentication such that only accesses from certain physical locations would be authenticated. The foregoing examples are provided as examples only and are not intended to limit the present inventive concepts.

Access to the authentication functionality of the application gateway node may be provided to the application execution container via access to an authentication interface provided by the AGW API . This authentication interface can allow the application execution container to exchange data with the application gateway node to perform the various steps required for authentication.

If the application gateway node is able to successfully authenticate the user of the application execution container via the authentication and privileges engine the application gateway node returns a successful authentication result to the application execution container via the AGW API .

Determining user access to secondary applications may include determining which secondary applications will be provided to the user. This determination can include both static entitlements and dynamic entitlements . Static entitlements are those entitlements which are provided to the authenticated user of the application execution container . Dynamic entitlements are those entitlements which depend on the identity of the user of the application execution container and a relationship that user may have such as with the primary service provider and or a secondary service provider . These dynamic entitlements require that the user be successfully authenticated in order to be determined. In other words the list of secondary applications which a user can access includes the set of those applications available to authenticated users of the application execution container and the set of those applications which are available to this specific user based on the user s identity and or relationships. It will be understood that entitlements which are based on a user s identity may be based on relationships the user has with the primary service provider and or the secondary service providers .

Determining user access to functionality within secondary applications may require that the user be authenticated. As discussed herein the functionality within a particular secondary application may be limited or expanded for a particular user depending on their entitlements.

Retrieving dynamic entitlements and entitled functionality for a user within secondary applications may be accomplished by the application execution container via the AGW API . The AGW API may allow communication with the application gateway node to retrieve the entitlements from the authentication and privileges engine . In some embodiments the application gateway node may further communicate with the primary service provider to access the entitlements for the authenticated user and or retrieve primary service data which may be used to determine the entitlements. In some embodiments additional entitlements may be retrieved from other external system such as a secondary service provider .

Determining secondary application entitlements may include determining the functionality available to a particular secondary application when selected by the user. As illustrated in there may be multiple entitlements applicable to secondary applications .

For example an entitlement may determine whether a secondary application can access devices via device APIs on the machine running the application execution container . For example in some embodiments an entitlement may limit the access of a secondary application to the USB subsystem of the device running the application execution container . In some embodiments an entitlement may limit the access of a secondary application to a GPS device of the device running the application execution container . In another embodiment an entitlement may limit the access of a secondary application to the camera of a smartphone running the application execution container . In yet another embodiment an entitlement may allow the access of a secondary application to a fingerprint input circuit of the device running the application execution container . However the present inventive concepts are not limited thereto.

Another application entitlement may be access to data objects maintained by the application execution container . As will be discussed more fully herein the application execution container may maintain session and other data objects which can be shared among the secondary applications . An example embodiment may have an entitlement which restricts access to the shared session data or limits the access only to certain objects. However the present inventive concepts are not limited thereto.

In some embodiments an application entitlement may include the ability to invoke other applications . Within the application execution container the application execution container may allow a first secondary application to invoke a second secondary application . For example a secondary application to provide authenticated secure access to hospital payment records may wish to invoke another secondary application which provides authenticated secure access to an insurance provider. However the present inventive concepts are not limited thereto.

In some embodiments an application entitlement may include the ability for the secondary application to access external systems . Within the application execution container all external communication by a secondary application must pass through the application gateway node . In other words any communication by a secondary application must pass through the application execution container . In this way if permitted a first secondary application can communicate with a second secondary application running within the same application execution container . If the secondary application wishes to communicate outside of the application execution container the secondary application must communicate through the AGW API to the application gateway node . The application gateway node may further use its external connector service described herein to connect to yet another external system. To perform such communication however the secondary application must first have the appropriate application entitlement as illustrated in step of .

As illustrated in multiple security layers may combine to allow the security of the system architecture to dynamically render a cohesive multi application user experience across a variety of digital devices without compromising the security and integrity of the overall system architecture .

In some embodiments the security layers may include domain and user authentication. When the user loads the application execution container the system architecture verifies the domain being utilized and may only serve up the application execution container if the application execution container has been properly configured in the system architecture . The application execution container may also determine that secondary applications requiring user authentication are accessible only following a successful authentication attempt. User authentication may be supported via both single and multi factor authentication through internal system capabilities as well as through integration to secondary service providers systems as required by the secondary service providers .

In some embodiments the security layers may include user and application entitlements. Static user entitlements rules for dynamic user entitlements as well as application entitlements may be maintained in the authentication and privileges engine . These entitlements are presented back to the application gateway node and application execution container upon request to enable dynamic user interface generation and enforcement of entitlements through the AGW API .

In some embodiments the security layers may include dynamic user interface UI generation. The user interface may be generated dynamically for the user based on the entitlements provided by the authentication and privileges engine . By generating the UI dynamically for the user the system may provide a lower risk for backdoors that would grant access to application functionality to which the user is not entitled. The UI presented to an individual user does not simply hide unentitled secondary applications but instead may not include them in the UI presented to the user. In addition code supporting individual functional applications such as HTML JavaScript and stylesheets for which the user is entitled may only be loaded upon demand for the secondary application . Code supporting unentitled secondary applications may not be loaded and may not be accessible by the application execution container . In the context of a user session the application execution container may not be aware of unentitled secondary applications . Once use of an individual secondary application is concluded code supporting it may then be unloaded by the application execution container .

In some embodiments the security layers may include the AGW API . The AGW API inside the application execution container can enforce the application entitlements provided by the authentication and privileges engine . This may include entitlements to access data and external systems through the application gateway node as well as APIs for communicating with the local device and access mechanisms to invoke other secondary applications . The AGW API can restrict secondary applications from being able to call external systems directly. Instead the AGW API may route all outbound traffic to the application gateway node .

In some embodiments the security layers may include separation of request payload from authentication parameters. The logical and physical separation of request payload received from the application execution container from access credentials maintained in the authentication and privileges engine can provide an additional security layer within the system these elements may be combined at the last moment without the knowledge of the application execution container or authentication and privileges engine to protect against unauthorized access to data and external systems. The application execution container may not be aware of access credentials required to connect to external systems. An encrypted object may be utilized to match up the request from the application execution container with the appropriate credentials from the authentication and privileges engine . The encrypted object can only be decrypted by the authentication and privileges engine .

In some embodiments the security layers may include logical and or physical isolation of sub systems. The present inventive concepts may mitigate risk through a coordinated approach that integrates the application execution container application gateway node and authentication and privileges engine in the support of a cohesive user experience while isolating the performance of discrete functions to ensure the security and integrity of the overall system architecture . In addition to logically and or physically separating the application execution container from the application gateway node and from the authentication and privileges engine the system architecture may also logically and or physically separate the core application gateway node functionality from the external connector service to ensure that internal system logic is not intermingled and or accessible to logic created to facilitate connectivity to external systems. In some embodiments the application gateway node and the external connector service may be deployed on separate computing systems and may be interconnected. In some embodiments the interconnection between the application gateway node and the external connector service may be accomplished with web services. It will be understood that this separation is not necessarily limited to the application gateway node and the external connector service . Other components described herein may be similarly separated.

As discussed herein the present inventive concepts may isolate the performance of discrete functions to ensure the security and integrity of the overall architecture. This includes logical and physical separation of the major components of the solution the application execution container the application gateway node and authentication and privileges engine . This separation may also include the separation of the core application gateway node server side functionality from the external connector service .

A key benefit of this approach is that secondary applications may be isolated from external systems such as the primary service provider and or a secondary service provider and must communicate with these systems through the intermediary layer the application gateway node via the AGW API . This is unique from standalone systems where secondary applications are able to communicate directly with external systems. The application gateway node may therefore perform various security functions.

In some embodiments the application gateway node may perform authentication of requests from the secondary applications before they go to external systems such as the primary service provider and or a secondary service provider . In some embodiments this authentication may include user and or session authentication including limits on session duration through encrypted session tokens embedded in requests. In some embodiments this authentication may include secondary application authentication to restrict external server access only to permitted applications.

In some embodiments the application gateway node may perform separation of the secondary applications and application developers from the credentials required to access external systems such as the primary service provider and or a secondary service provider . In some embodiments this separation may provide that secondary applications do not need nor can they access credentials required for external connectivity. In some embodiments this separation may provide that application developers can write secondary applications without having to know how common data is accessed.

In some embodiments the application gateway node may perform logging and tracking of secondary application and user activities performed throughout the system and across secondary applications . This logging may include audit trails of user activities as well as trend and anomaly detection capabilities. In some embodiments this logging may be performed so as to support non repudiation of any actions taken by the user with respect to the primary service provider and or a secondary service provider via that application execution container . In some embodiments this logging may comply with NIST 800 Level 3 authentication but the present inventive concepts are not limited thereto.

The application gateway node can support external system connectivity via its external connector service . The application gateway node may combine the message payload received from the application execution container with the external connector parameters maintained in the authentication and privileges engine as required to make a connection with an external system such as the primary service provider and or the secondary service provider and call the appropriate external connector service for fulfillment as illustrated in .

In some embodiments the application gateway node may access the encrypted object illustrated in as an authentication object containing the user authentication information passed via the AGW API . The application gateway node may interact with the authentication and privileges engine to verify the user authentication information within the authentication object. This interaction may involve the decryption of the authentication object containing the user authentication information. In some embodiments the ability to decrypt the authentication object containing the user authentication information may be isolated to specification modules such as the authentication and privileges engine . It will be understood that the user authentication information identifying the user may be different than authentication or access information that may be used to make a connection with an external system such as the primary service provider and or the secondary service provider .

As illustrated in the present inventive concepts can provide for a hierarchy of external system access parameters which may be maintained in the authentication and privileges engine . These external system access parameters may be utilized to validate that in a multi tenant multiple application environment only entitled users with entitled secondary applications have access to functional capabilities data and external systems to which they are affiliated. In order to ensure the security and integrity of the overall solution the application execution container may be unaware of user access credentials used to connect to external systems such as the primary service provider and or the secondary service provider . An attack against the application execution container would not yield user credentials needed for external connectivity as such parameters are not maintained by the application execution container .

As illustrated in the secondary application in the application execution container may initiate a request to the AGW API containing a particular payload intended for an external system e.g. the primary service provider and or a secondary service provider . The request may be passed to the application gateway node and handled by the external service controller of the application gateway node . The external service controller may determine the destination of the payload from the request. In some embodiments the application gateway node may link a request from the secondary application to the primary service provider and or a secondary service provider through a set of credentials that are maintained external to the secondary application . Based on the destination of the payload the external service controller can retrieve connector parameters related to the destination from the authentication and privileges engine .

The parameters received from the authentication and privileges engine can include for example global application service provider user and method parameters though the present inventive concepts are not limited thereto. In some embodiments the parameters can include name value pairs which can include the name of the parameter followed by a value. In some embodiments the value can comprise a structure that includes both the type of the value its length and the value itself a so called TLV structure. One of skill in the art would recognize that there are multiple means of present parameters that would still be within the present inventive concepts.

Global parameters relate to parameters that must be provided related to the system upon which the application execution container and secondary applications are executing. Application parameters relate to parameters that must be provided for the particular secondary application that is attempting to access the external system. Service provider parameters relate to parameters associated with the external connector service the primary service provider and or the secondary service providers . User parameters relate to parameters that may be associated with the particular user making the request of the external system. Method parameters relate to parameters that may be associated with the particular method being used to access the service on the external system.

Once the parameters have been retrieved from the authentication and privileges engine for the AGW API request the external service controller may combine the parameters with the request payload received from the application execution container and may provide the combined packet to the external connector service . The external connector service may then determine the particular external connector needed to communicate with the external system specified. The external connector service can then use the request payload parameters and selected external connector to communicate with the external system.

External connectors can support a variety of connections to a plurality of external systems using different protocols and standards. Individual external connectors could use a smaller subset of the total hierarchical parameters available to function properly. For example some may only require system level parameters while others may require various combinations of system application service provider user and method level parameters. In some embodiments external connectors may support application developer logic to allow for proper mapping between data provided by external systems and what is expected within the secondary applications . The external connector service environment may be run separately from the other application gateway node functions from a physical deployment perspective for security purposes.

In particular the processor can be a commercially available or custom microprocessor microcontroller digital signal processor or the like. The memory can include any memory devices and or storage media containing the software and data used to implement the functionality circuits or modules used in accordance with embodiments of the present inventive concepts. The memory can include but is not limited to the following types of devices cache ROM PROM EPROM EEPROM flash memory SRAM DRAM and magnetic disk. In some embodiments of the present inventive concepts the memory can be a content addressable memory CAM . In some embodiments the memory may be volatile memory. In some embodiments the memory may include volatile and or non volatile memory portions. Volatile memory may be memory which loses its contents when a power supply to the volatile memory is removed. Non volatile memory may be memory which retains its contents when a power supply to the non volatile memory is removed.

As further illustrated in the memory and or storage media can include several categories of software and data used in the data processing system an operating system application programs input output device circuits and data .

As will be appreciated by those of skill in the art the operating system can be any operating system suitable for use with a data processing system such as IBM OS 2 AIX or zOS operating systems or Microsoft Windows operating systems Unix or Linux .

The input output device circuits typically include software routines accessed through the operating system by the application program to communicate with various devices. The application programs are illustrative of the programs that implement the various features of the circuits and modules according to some embodiments of the present inventive concepts.

Finally the data represents the static and dynamic data used by the application programs the operating system the input output device circuits and other software programs that can reside in the memory .

The data processing system can include several modules including a controller such as an application execution container rendering module that is configured to perform operations as described herein. The module can be configured as a single module or additional modules otherwise configured to implement the operations described herein for analyzing the motility profile of a sample. The data can include user data such as a user account data profile.

While the present inventive concepts are illustrated with reference to the application execution container rendering module and the user data in as will be appreciated by those of skill in the art other configurations fall within the scope of the present inventive concepts. For example rather than being an application program such as the application execution container rending module these circuits and modules can also be incorporated into the operating system or other such logical division of a data processing system. Furthermore while the application execution container rendering module in is illustrated in a single data processing system as will be appreciated by those of skill in the art such functionality can be distributed across one or more data processing systems e.g. a server a mobile platform etc. . Thus the present inventive concepts should not be construed as limited to the configurations illustrated in but can be provided by other arrangements and or divisions of functions between data processing systems. For example although is illustrated as having various circuits and modules one or more of these circuits or modules can be combined or separated further without departing from the scope of the present inventive concepts.

As noted herein the present inventive concepts may be advantageously deployed in environments in which secure transactions are required with minimal setup time but with the ability to be extended to additional secondary applications and or additional external service providers. Examples of such environments include banking transactions networked sales health medicine records educational records and or military systems but the present inventive concepts are not limited thereto.

The present inventive concepts provide multiple advantages over the prior art. A system architecture such as the one described herein should facilitate at least three of the following objectives.

First users should be restricted from accessing secondary applications to which they are entitled based on static and dynamic entitlements configured by the authentication and privileges engine . Second secondary applications should be limited to access data and external systems to which they are entitled based on system and service provider rules as well as preferences for such secondary applications . Third data and external systems within the system architecture should be protected from unauthorized access.

In some embodiments one potential advantage of the present inventive concepts may be the ability to support both static and dynamic user entitlements. This may allow an application gateway node to calculate in real time what secondary applications a user should be allowed to utilize e.g. a new wealth management customer might be dynamically granted access to special wealth management applications not available to other users . The application gateway node may also choose to explicitly specify some user entitlements to access certain secondary applications . Static and dynamic entitlements can be utilized in any combination.

In some embodiments another potential advantage of the present inventive concepts is that the system may offer secure reusable integration capabilities to external systems such as the primary service provider and or a secondary service provider . An external connector within the external connector service may be utilized by multiple secondary applications and a single secondary application may utilize multiple external connectors so long as this is permitted by configured entitlements.

In some embodiments another potential advantage of the present inventive concepts is that secondary applications may be isolated from external systems and should communicate with these external systems through an intermediary layer the application gateway node . This may allow the application gateway node to perform key security functions including authentication of requests before they go to external systems abstraction of secondary applications from the credentials required to access external systems as well as logging and tracking of secondary application and user activities.

In some embodiments another potential advantage of the present inventive concepts is that the system architecture may support data retrieval and secure storage caching of data retrieved from external systems. This can mean that objects containing information from external systems can be optionally maintained in the application execution container for the duration of the user session for use across secondary applications .

In some embodiments another potential advantage of the present inventive concepts is that the system architecture may provide the application gateway node with the ability to control which secondary applications are offered to which users and under what conditions. In addition the application gateway node may not be required to offer individual secondary applications to any of their users if this is not desirable.

In some embodiments another potential advantage of the present inventive concepts is that the system architecture may support the provisioning of standard APIs to control device functions for use across secondary applications minimizing the overall footprint of the system architecture .

In some embodiments another potential advantage of the present inventive concepts is that the functional breadth of the system architecture may support a much wider range of capabilities than provided through existing digital architecture provided today.

In the above description of various embodiments of the present inventive concepts it is to be understood that the terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the inventive concepts. Unless otherwise defined all terms including technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art to which these inventive concepts belong. It will be further understood that terms such as those defined in commonly used dictionaries should be interpreted as having a meaning that is consistent with their meaning in the context of this specification and the relevant art and will not be interpreted in an idealized or overly formal sense expressly so defined herein.

When an element is referred to as being connected coupled responsive or variants thereof to another element it can be directly connected coupled or responsive to the other element or intervening element may be present. In contrast when an element is referred to as being directly connected directly coupled directly responsive or variants thereof to another element there are no intervening elements present. Like numbers refer to like elements throughout. Furthermore coupled connected responsive or variants thereof as used herein may include wirelessly coupled connected or responsive. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. Well known functions or constructions may not be described in detail for brevity and or clarity. The term and or includes any and all combinations of one or more of the associated listed items.

As used herein the terms comprise comprising. comprises include including includes have has having or variants thereof are open ended and include one or more stated features integers nodes steps components or functions but does not preclude the presence or addition of one or more other features integers nodes steps components functions or groups thereof. Furthermore as used herein the common abbreviation e.g. which derives from the Latin phrase exempli gratia may be used to introduce or specify a general example or examples of a previously mentioned item and is not intended to be limiting of such item. The common abbreviation i.e. which derives from the Latin phrase id est may be used to specify a particular item from a more general recitation.

Example embodiments are described herein with reference to block diagrams and or flowchart illustrations of computer implemented methods apparatus systems and or devices and or computer program products. It is understood that a block of the block diagrams and or flowchart illustrations and combinations of blocks in the block diagrams and or flowchart illustrations can be implemented by computer program instructions that are performed by one or more computer circuits. These computer program instructions may be provided to a processor circuit of a general purpose computer circuit special purpose computer circuit and or other programmable data processing circuit to produce a machine such that the instructions which execute via the processor of the computer and or other programmable data processing apparatus transform and control transistors values stored in memory locations and other hardware components within such circuitry to implement the functions acts specified in the block diagrams and or flowchart block or blocks and thereby create means functionality and or structure for implementing the functions acts specified in the block diagrams and or flowchart block s .

Computer program code for carrying out operations for aspects of the present disclosure may be written in any combination of one or more programming languages including an object oriented programming language such as Java Scala Smalltalk Eiffel JADE Emerald C C VB.NET Python or the like conventional procedural programming languages such as the C programming language Visual Basic Fortran 2003 Perl COBOL 2002 PHP ABAP dynamic programming languages such as Python Ruby and Groovy or other programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider or in a cloud computer environment or offered as a service such as a Software as a Service SaaS .

These computer program instructions may also be stored in a tangible computer readable medium that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the functions acts specified in the block diagrams and or flowchart block or blocks.

A tangible non transitory computer readable medium may include an electronic magnetic optical electromagnetic or semiconductor data storage system apparatus or device. More specific examples of the computer readable medium would include the following a portable computer diskette a random access memory RAM circuit a read only memory ROM circuit an erasable programmable read only memory EPROM or Flash memory circuit a portable compact disc read only memory CD ROM and a portable digital video disc read only memory DVD BlueRay .

The computer program instructions may also be loaded onto a computer and or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer and or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions acts specified in the block diagrams and or flowchart block or blocks. Accordingly embodiments of the present inventive concepts may be embodied in hardware and or in software including firmware resident software micro code etc. that runs on a processor such as a digital signal processor which may collectively be referred to as circuitry a module or variants thereof.

It should also be noted that in some alternate implementations the functions acts noted in the blocks may occur out of the order noted in the flowcharts. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality acts involved. Moreover the functionality of a given block of the flowcharts and or block diagrams may be separated into multiple blocks and or the functionality of two or more blocks of the flowcharts and or block diagrams may be at least partially integrated. Finally other blocks may be added inserted between the blocks that are illustrated. Moreover although some of the diagrams include arrows on communication paths to show a primary direction of communication it is to be understood that communication may occur in the opposite direction to the depicted arrows.

Many different embodiments have been disclosed herein in connection with the above description and the drawings. It will be understood that it would be unduly repetitious and obfuscating to literally describe and illustrate every combination and subcombination of these embodiments. Accordingly the present specification including the drawings shall be construed to constitute a complete written description of various example combinations and subcombinations of embodiments and of the manner and process of making and using them and shall support claims to any such combination or subcombination.

Many variations and modifications can be made to the embodiments without substantially departing from the principles of the present inventive concepts. All such variations and modifications are intended to be included herein within the scope of the present inventive concepts.

In the drawings and specification there have been disclosed typical embodiments and although specific terms are employed they are used in a generic and descriptive sense only and not for purposes of limitation the scope of the disclosure being set forth in the following claims.

