---

title: Load condition based transfer of processing responsibility
abstract: According to one embodiment, a method comprises an operation of determining whether an ingress control message is locally terminated control traffic on a digital device prior to the ingress control message being forwarded to a hardware processor of the digital device for processing. A priority is assigned to the ingress control message based on information within the ingress control message, if the ingress control message is determined to be locally terminated control logic.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09450880&OS=09450880&RS=09450880
owner: Aruba Networks, Inc.
number: 09450880
owner_city: Sunnyvale
owner_country: US
publication_date: 20151013
---
This application is a divisional of co pending U.S. patent application Ser. No. 13 692 608 filed Dec. 3 2012 the entire contents of which are hereby incorporated by reference as though fully set forth herein.

Embodiments of the disclosure relate to the field of communications and in particular to a system digital device and method that is directed to the managed distribution of communications.

In recent years digital communications have become an essential function in virtually every digital device ranging from miniature hand held digital devices e.g. cameras dual mode cellular telephones etc. to networking equipment e.g. controllers routers etc. . For instance digital devices may be connected to a local area network LAN through Ethernet adapters for wired network communications or wireless adapters such as those operating according to the well known IEEE 802.11a ac b g n standards. Such connectivity enables information to be communicated with other digital devices directly or indirectly connected to the LAN.

In a centralized communication scheme information commonly in the form of packets is forwarded from a digital device connected to the network to another digital device that controls functionality of the network referred to as a controller . Packet communications may be point to point in which ingress packets are terminated at the controller or carried out in a packet switching environment in which the ingress packets in a given communication are terminated at the controller or are transient. Transient packets are packets that are received by the controller and are targeted to be forwarded to another device.

Many conventional controllers feature software based packet forwarding which poses a significant problem during oversubscription namely a condition in which the controller is unable to process all of the ingress packets received via its ports. Without undergoing additional expense and labor to upgrade the controller during oversubscription ingress packets are simply dropped as needed. This poses a problem as there is no functionality within the packet forwarding software to prioritize packets so that as an example packets terminated at the controller are given a higher processing priority than transient packets and or are buffered accordingly.

Embodiments of the disclosure relate to a system a digital device and method for classifying and prioritizing ingress messages especially locally destined terminated control messages closer to the ingress network interface and prior to providing the ingress messages to forwarding engines and or data plane processors for processing. The objective of classifying and prioritizing locally destined terminated control messages as compared to transient traffic is to segregate the allocation of resources such as packet buffers RX descriptors to locally destined terminated control messages and transient traffic. This segregation is particularly useful in the case of an oversubscription of transient messages referred to as network congestion since due to the segregation even in case of oversubscription of transient messages in the network where there are enough resources packet buffers available for processing of locally destined terminated control message. Processing of locally destined terminated control messages is extremely critical to mitigate network congestion . Thus classifying and prioritizing ingress messages especially locally destined terminated control messages allow the system to function efficiently even when the network is congested. It is contemplated that the classification and prioritization may be performed continuously in order to improve network stability.

The classification and or prioritization can be determined prior to providing the ingress message to the data plane processors based on one or more of the following a control plane destined traffic e.g. locally terminated control traffic vs. traffic forwarded back to the network that was not targeted to the control plane of the digital device e.g. transient control traffic b protocol based prioritization e.g. OSPF vs. IKE and or c DSCP IP WMM QoS based prioritization for transient control traffic.

According to one embodiment of the disclosure content addressable memory CAM is used to store Open Systems Interconnection OSI Layer 3 L3 and OSI Layer 4 L4 information for detecting locally terminated ingress messages namely messages directed to one or more processes running on the control plane of the digital device that will consume the message or cause one or more processes to return a reply e.g. an Acknowledgement ACK and transient messages to be forwarded to the network . This detection for use in classifying the message may involve a hierarchical review of the L3 information e.g. Destination IP DEST IP address and thereafter L4 information e.g. port information .

For instance in accordance with L3 information review a first portion of address information within the ingress message is compared to a partial terminating address stored in a first fast memory having a first access latency. If a partial address hit is determined a complete address review is conducted by accessing address information stored in a second slow memory having a second access latency greater than the first memory. Where the first memory is a low latency asynchronous access memory e.g. content addressable memory CAM and the second memory is static random access memory SRAM a hardware based partial address lookup is performed with a software based complete address lookup being subsequently performed outside the CAM due to size constraints of the CAM. Furthermore in accordance with L4 information review port information is compared to port information stored within the CAM.

After classification as a locally terminated message the ingress message is assigned a priority using information within the message itself. For instance the protocol may be used to prioritize the message.

Since a regular lookup algorithm in accordance with a hash or tree scheme requires multiple lookups to the shared memory multiple CAM lookups may be used to identify the prioritized traffic by programming EthernetType ETYPE DEST port and SRC ports in some scenarios like RADIUS server interactions the responses need to be prioritized which is actually in the SRC port on which the RADIUS server responds .

In addition to prioritization an embodiment of the disclosure is further related to dynamic load balancing of traffic. Across data plane processors associated with these ingress messages in order to improve overall network performance. The dynamic load balancing may be based on packet type priority or classification.

Herein certain terminology is used to describe features for embodiments of the disclosure. For example the term digital device generally refers to any hardware device that includes processing circuitry running at least one process adapted to manage the flow of control traffic into the device. Examples of digital devices include a computer a tablet a laptop a desktop a netbook a server a web server authentication server an authentication authorization accounting AAA server a Domain Name System DNS server a Dynamic Host Configuration Protocol DHCP server an Internet Protocol IP server a Virtual Private Network VPN server a network policy server a mainframe a television a content receiver a set top box a video gaming console a television peripheral such as Apple TV a printer a mobile handset a smartphone a personal digital assistant PDA a wireless receiver and or transmitter an access point a base station a communication management device a router a switch and or a controller.

One type of digital device referred to as a controller is a combination of hardware software and or firmware that is configured to process and or forward information between digital devices within a network. According to one embodiment the controller comprises a plurality of logic units that are adapted to manage ingress packets one of these logic units being the control plane that processes control information used for the creation operation and management of the network.

It is contemplated that a digital device may include hardware logic such as one or more of the following i processing circuitry ii one or more communication interfaces such as a radio e.g. component that handles the wireless data transmission reception and or a physical connector to support wired connectivity and or iii a non transitory computer readable storage medium e.g. a programmable circuit a semiconductor memory such as a volatile memory such as random access memory RAM or non volatile memory such as read only memory power backed RAM flash memory phase change memory or the like a hard disk drive an optical disc drive etc. or any connector for receiving a portable memory device such as a Universal Serial Bus USB flash drive portable hard disk drive or the like.

Herein the terms logic or logic unit and process are generally defined as hardware and or software. For example as hardware logic may include a processor e.g. a microcontroller a microprocessor a CPU core a programmable gate array an application specific integrated circuit etc. semiconductor memory combinatorial logic or the like. As software logic may be one or more software modules such as executable code in the form of an executable application an application programming interface API a subroutine a function a procedure an object method implementation an applet a servlet a routine source code object code a shared library dynamic load library or one or more instructions. These software modules may be stored in any type of a suitable non transitory storage medium or transitory computer readable transmission medium e.g. electrical optical acoustical or other form of propagated signals such as carrier waves infrared signals or digital signals .

The term interconnect is a communication path between two or more digital devices. The communication path may include wired and or wireless segments. Examples of wired and or wireless segments include electrical wiring optical fiber cable bus trace or a wireless channel using infrared radio frequency RF or any other wired wireless signaling mechanism.

The term message is a grouping of data such as a packet a frame a stream e.g. a sequence of packets or frames an Asynchronous Transfer Mode ATM cell or any other series of bits having a prescribed format. Herein a message comprises a control payload and a data payload. The control payload is adapted to include control information such as source and destination Internet Protocol IP addresses e.g. IPv4 or IPv6 addressing protocol source and destination port information and or packet type.

Lastly the terms or and and or as used herein are to be interpreted as inclusive or meaning any one or any combination. Therefore A B or C or A B and or C mean any of the following A B C A and B A and C B and C A B and C. An exception to this definition will occur only when a combination of elements functions steps or acts are in some way inherently mutually exclusive.

Certain details are set forth below in order to provide a thorough understanding of various embodiments of the disclosure albeit the invention may be practiced through many embodiments other that those illustrated. For instance illustrative embodiments describe message classification prioritization and other inventive aspects conducted for an ingress control packet such as deep packet inspection of parameters within L2 and or L3 headers of the packet. Such discussions are for illustrative purposes and do not preclude this invention from being conducted on messages having formats other than described. Also well known logic and operations may not set forth in detail in order to avoid unnecessarily obscuring this description.

Referring to an exemplary embodiment of a digital device is shown. In accordance with one embodiment of the disclosure digital device comprises an interface processing logic and storage logic in which one or more of these logic units are coupled together via an interconnect .

Herein interface enables digital device to communicate with other devices supporting wired and or wireless connectivity. For instance interface may be implemented as a wireless adapter e.g. one or more radios antenna s or the like adapted to receive ingress messages and or a wired adapter e.g. connector through which ingress messages are received over a wired interconnect.

Processing logic is adapted with logic to classify ingress packets and where appropriate assign priority to these classified ingress packets. The classification scheme may be revised through the use of one or more access control lists ALUs that enable administrator controlled modification of content addressable memory CAM which is used for message classification. Also processor load may be adjusted through recordation of message flow distribution among the processors and dynamic alternation at runtime of processor identifiers within a shared table used for load balancing.

As further shown in storage logic is volatile and or non volatile memory implemented within digital device and utilized by processing logic . According to one embodiment of the disclosure storage logic features content addressable memory CAM and or random access memory RAM accessible by processing logic .

Referring now to an exemplary embodiment of processing logic deployed within digital device of is shown. Herein processing logic comprises a network interface a network acceleration engine and data plane processing circuitry . Herein network interface comprises one or more communication ports through which messages are received and or transmitted.

Network acceleration engine is responsible for pre processing ingress messages and redirecting information associated with such messages to one or more processors namely processors N 1 being part of processing circuitry . Network accelerator engine comprises a message ingress subsystem and a descriptor buffer pool .

Message ingress subsystem analyzes the control payload of the message packet in comparison with stored information corresponding to active processes running on the control plane of the digital device to determine if the message is associated with locally terminated traffic or transient traffic. As locally terminated traffic the message is assigned a priority based on information within the message itself.

As an illustrative example message ingress subsystem analyzes the message type and based on the analysis determines whether the ingress message is to be distributed for processing without prioritization. For instance Address Resolution Protocol ARP and Neighbor Discovery messages are examples of locally terminated ingress messages that are forwarded without prioritization. Instead information within the ingress message is distributed to one of the processors in accordance with a selected distribution procedure e.g. round robin etc. .

Message ingress subsystem is further configured to inspect the control payload of an ingress control message in order to determine if the ingress message is locally terminated control traffic or transient control traffic. If the later the transient message may be assigned a default priority or assigned a priority based on its quality of service QoS setting for example. For instance four 4 buffer pools may be allocated for different QoS levels with each buffer pool corresponding to a different priority.

However if the ingress control message is locally terminated control traffic message ingress subsystem performs further processing to determine the priority assigned to the message. The priority may be based on information within the control payload of the message such as protocol information normally contained within the L3 packet header of a packet . Information within content addressable memory CAM and random access memory RAM is utilized for the inspection of the message as described below.

As shown is an exemplary embodiment of an entry within CAM that is accessible by logic within message ingress subsystem . In particular CAM entry is a multi byte memory element that comprises a first area adapted to store information to identify the type of information contained in a second area . For example first area may store a value x01 that identifies CAM entry is associated with a locally terminated IP address an IP Address type CAM entry .

As another illustrative example first area may store a different value x10 that identifies CAM entry is associated with a locally terminated message directed to an active port on the control plane. As the port may be a destination DES or source SRC port a portion of second area e.g. second byte may be used as a port type field that identifies if the stored port number is associated with a DES port or a SRC port. For this example the remaining portion 2 bytes of CAM entry is used to identify the particular port number.

Referring to an exemplary embodiment of message ingress subsystem of is shown. Packet ingress subsystem comprises an optional hardware parser a micro core engine receive RX descriptor allocation logic and descriptor storage .

Hardware parser is logic that parses an ingress control message and forwards parsed information e.g. L2 L3 and or L4 header information to micro core engine . Hardware parser further generates a packet key . The packet key is used to perform a configurable hash operation for dynamic load balancing as described in .

Micro core engine comprises a plurality of micro core logic units M 2 . For instance according to one embodiment of the disclosure micro core logic units may be programmable MIPS cores. Each micro core logic unit includes volatile memory and CAM space shared with processors of . A predetermined number of bytes e.g. first 448 bytes of ingress control message are available for inspection by micro core logic unit for message classification and prioritization.

RX descriptor allocation logic is responsible for allocating message descriptors from descriptor storage that correspond to the ingress messages. Each message descriptor enables one of the processor of to access stored information associated with ingress message .

Referring to an exemplary embodiment of a flowchart outlining general message inspection operations conducted by message ingress subsystem of for classifying and prioritizing a locally terminated ingress control message is shown. Herein the message ingress subsystem accesses one or more parameters from the ingress control message block . These parameters include one or more of the following 1 destination IP DEST IP address 2 source IP SRC IP address 3 protocol 4 destination port number DEST PORT and or 5 source port number SRC PORT .

Next the message ingress subsystem determines the message classification based one or more of these parameters block . For instance message ingress subsystem may analyze the DEST IP address and the DEST PORT to determine that the ingress message is a locally terminated message namely a message that is directed to an active process running on the control plane that will either consume the message or issue a reply. Thereafter packet priority is determined based on the protocol used in the data payload of the ingress message block .

Upon determining the classification and priority the ingress message is temporarily stored in a particular buffer pool and a message descriptor is assigned to the ingress message block . The message descriptor identifies the memory location into which the ingress message is temporarily stored and is used by the processor corresponding to that particular buffer pool.

Referring now to an exemplary embodiment of a flowchart outlining operations for classifying and prioritizing an ingress control message e.g. ingress control packet is shown. According to one embodiment of the disclosure these operations are conducted by micro core engine of .

Upon receipt of an ingress packet a determination is made as to whether the ingress packet is an L2 packet blocks and . If so the ingress packet is distributed to one of the plurality of processors without conducting further packet inspection block .

If the ingress packet is an L3 packet a first determination is made whether the DEST IP address in the ingress packet matches a locally terminated DEST IP address block . If no match is detected the ingress packet is classified as transient control traffic. According to this embodiment of the disclosure this ingress packet may be assigned a default priority or may be assigned priority based on its Differentiated Service Code Point DSCP Wireless Multimedia Extensions WMM or Quality of Service QoS settings block .

If the ingress packet matches a locally terminated DEST IP address and if the ingress packet is a first fragment a second determination is made as to whether the DEST PORT identified in the ingress packet matches a destination port number associated with an active process running on the control plane that will consume the ingress packet or cause a reply blocks and . If the DEST PORT matches the destination port number the ingress packet is classified as locally terminated control traffic and priority is assigned based information within the ingress packet itself block . For instance protocol information within the packet is used to assign priority.

However if no match is detected a third determination is made as to whether the SRC Port identified in the ingress packet matches a source port number associated with an active process running on the control plane that will consume the ingress packet or cause a reply block . If the SRC PORT matches the source port number the ingress packet is classified as locally terminated control traffic and priority is assigned based information as described in block . However if a match is not detected the ingress packet is classified as transient control traffic and may be assigned default or DSCP WMM QoS based priority block .

Referring now to an exemplary embodiment of a more detailed flowchart outlining classification and prioritization operations conducted by a micro core logic unit on an ingress control packet is shown where size constrained low latency memory CAM is used for partial address lookup with larger memory having higher latency RAM being subsequently accessed using index information from the CAM to complete the address lookup.

Initially the micro core logic unit receives an ingress control packet and accesses packet type information from its L2 header blocks and . If the micro core logic unit determines from the packet type information that the ingress control packet is merely an L2 packet information associated with the L2 packet is distributed to one of the processors blocks and .

However if the ingress control packet is an L3 packet the micro core logic unit accesses the DEST IP address from its L3 header and performs a CAM lookup for entries associated with locally terminated IP addresses hereinafter IP address type CAM entries as set forth in blocks and . Thereafter the micro core logic unit compares a first portion of the DEST IP address to a CAM stored portion of the IP address block .

If a match is not detected the micro core logic unit classifies the ingress control packet as transient control traffic block . Upon such classification the micro core logic unit may be adapted to assign a priority to the ingress control message for processing at the control plane. According to this embodiment of the disclosure the priority may be a default priority or assigned based on the DSCP WMM or QoS settings in the ingress control packet.

However if a match is detected the micro core logic unit accesses the second stored portion of the IP address stored in a secondary storage e.g. RAM and determines if a second portion of the DEST IP address matches the RAM stored portion of the IP address blocks and . This comparison is performed to ensure a complete match of the DEST IP address with a locally terminated destination IP address.

If a complete match is not determined the micro core logic unit classifies the ingress control message as transient control traffic block . With such classification the ingress control message may be assigned a default priority or DSCP WMM or QoS based priority as described above.

For instance according to the illustrative example of these operations the micro core logic unit determines which CAM entries have been configured to store locally terminated destination IP addresses. For instance type information identifies CAM entry as an IP address type CAM entry. Similarly type information identifies CAM entry as a Port type CAM entry.

According to one embodiment of the disclosure as further shown in CAM entry stores a first portion of a locally terminated destination IP address e.g. most significant bytes while a second portion of this destination IP address e.g. least significant byte for IPv4 and 13 bytes for IPv6 is stored in a separate secondary storage for subsequent comparison as described below.

The micro core logic unit accesses CAM stored portion of the destination IP address for comparison with the first portion e.g. 3 bytes of a DEST IP address within a L3 header of an ingress control packet . Upon a successful comparison the micro core logic unit accesses the RAM stored portion of the destination IP address and compares the RAM stored portion e.g. least significant byte for IPv4 and 13 bytes for IPv6 to a second portion of the DEST IP address. Upon a successful comparison the micro core logic unit determines that DEST IP address matches the locally terminated destination IP address.

Referring now to if a match of the full DEST IP address is detected the micro core logic unit accesses the DEST PORT from the L4 header of the ingress control packet and performs a CAM lookup for DEST port type entries within the CAM blocks and . Thereafter the micro core logic unit conducts a comparison of the DEST PORT with destination port numbers within DEST port type entries of the CAM block .

If a match is detected the micro core logic unit classifies the ingress control packet as locally terminated control traffic and accesses protocol information within the L3 header of the ingress control packet. Based on the protocol information the micro core logic unit assigns priority in handling the ingress control packet block .

For instance as shown in as an illustrative example packet classification mapping is a hardcoded table that provides each micro core logic unit with an ability to assign priority based on the protocol type contained with the L3 header of the ingress control packet. Herein each descriptor buffer pool is assigned a particular priority and may be configured to support one or more protocol types. For instance ingress GRE messages are assigned to a descriptor buffer pool having a first priority while ingress SNMP messages are assigned to a descriptor buffer pool having a second priority. The use of reserved buffer pools having different priority levels allows higher priority traffic to always have buffer resources to send traffic to the main processor for further processing.

Referring back to if a match is not detected the micro core logic unit accesses the SRC PORT from the L4 header in the ingress control packet and performs a CAM lookup for SRC port type entries within the CAM blocks and . Thereafter the micro core logic unit compares the SRC PORT to source port number s within one or more CAM entries block .

If a match is determined the micro core logic unit classifies the ingress control message as locally terminated control traffic to be prioritized block . As a result the micro core logic unit accesses the protocol within the L3 header and based on the protocol assigns a particular priority to information within ingress control packet. However if a match is not determined the micro core logic unit classifies the ingress control message as transient traffic. Upon such classification the ingress control message may be assigned a default priority or assigned a priority based on the QoS attributed to the ingress control message block .

For instance according to the illustrative example of these operations as shown in the micro core logic unit determines Port type CAM entries for destination port numbers associated with active processes running on the control plane that will consume the ingress control packet or cause a reply. For instance type information identifies CAM entry as a Port type CAM entry.

When conducting an analysis of DEST PORT accessed in L4 header of ingress control packet before comparing DEST PORT to port number the micro core logic unit further analyzes port field within CAM entry in order to confirm that that entry contains a destination port number. Likewise if conducting analysis of SRC PORT before comparing SRC PORT to port number the micro core logic unit further analyzes port field to confirm that that entry contains a source port number. Thereafter the DEST PORT and or the SRC PORT is are compared to the corresponding port number .

Referring now to an exemplary embodiment of the functionality deployed within one or more processors within the processing logic to dynamically re program priority for selected locally terminated control traffic is shown. Herein normally defined by network administrators one or more access control lists ACLS are used to customize prioritization of traffic over the network. Each entry in an ACL comprises 1 information to identify whether incoming ingress packets constitute locally terminated control traffic e.g. L3 L4 header parameters DEST IP address SRC IP address DEST PORT and or SRC PORT and 2 the priority associated with this locally terminated control traffic.

Herein the contents of the ACL are accessible by each processor block . Upon receiving an ingress control message the processor determines whether the contents of the ingress control message match a rule associated with an ACL block . For instance the rule may prioritize messages associated with a particular protocol. If so a determination is made by the processor if the IP DEST address for the ingress control message has already been stored within the CAM block . If so the process continues block . If not at a minimum the DEST IP address is stored within a CAM entry and a corresponding RAM memory location for subsequent use in packet prioritization block . Optionally as shown in block the EthernetType ETYPE Protocol L3 and or DEST SRC port information may be stored within one or more CAM entries as well.

As an illustrative example the ACL may be programmed to denote that SNMP messages are to be prioritized. Upon receiving the SNMP message the processor accesses the ACL and determines that the contents of the SNMP message needs to be prioritized and determines by accessing a shadow table mirroring the contents of the CAM if the access control has already been programmed in the CAM. If not the DEST IP address for the SNMP message is stored for subsequent retrieval in classifying and or prioritizing messages.

Hence constrained CAM resources can be managed automatically using the ACL hits on policy assigned to all IP addresses associated with the digital device e.g. all controller switch IP addresses . Based on ACL hits corresponding actions to prioritize the DEST IP address the SRC port and or the DEST port can be used to populate the CAM table an entry of which is shown in . Further IP addresses to which the Aps correspond can be pushed to the CAM thus managing the CAM efficiency. For example if the ACL for SNMP traffic is configured to prioritize the traffic then only when there is SNMP traffic on a specific VLAN will trigger the update of the constrained resource with the ports and IP address used for SNMP polling.

Referring to an exemplary embodiment of dynamic load balancing of traffic flow of ingress packets to processors based on monitored statistical information feedback to the micro core engine of is shown. According to this embodiment of the disclosure as illustrated in the micro core engine accesses information within L3 header e.g. DEST IP address SRC IP address and protocol for an ingress control packet see block of .

Thereafter as shown in block of and illustrated in details in the micro core engine performs a transformation e.g. one way hash operation on accessed information to produce a result . In particular as shown in block of result in whole or in part operates as an index to a processor assignment list . Sized with a number of entries substantially greater in number than the number of processors e.g. greater than 10 in order to provide a fairer distribution of traffic flow across the processors processor assignment list is a collection of processor identifiers identifying which processor is targeted to receive which ingress message. Where result is a 12 bit value processor assignment list features 4096 entries. A selected processor is assigned to each entry of processor assignment list perhaps in a round robin fashion in an initial attempt to evenly allocate processor usage.

Each processor maintains statistics in order to identify unbalanced traffic flow by monitoring traffic flow associated with each entry hash result . Based on the maintained statistics one of the processors may be adapted to alter one or more entries in the processor assignment list . For instance when the load of a first processor exceeds a first threshold the first processor may be adapted to remove its processor identifier from one or more entries within processor assignment list to reduce its load. The first processor may substitute its processor identifier for another processor identifier within the data plane processing logic.

Of course there are other alternatives for dynamically balancing processor load. For instance a second processor different than the first processor may alter one or more entries in processor assignment list to offload traffic flow to the first processor. In another alternative embodiment when a load of a processor falls below a second threshold being less than the first threshold the processor may be adapted to modify entries within processor assignment list and substitute its processor identifier for other processor identifier s .

This alteration is conducted to remove an identifier CPU associated with an overloaded processor and substitute an identifier CPU associated with a processor having a lesser load block . The selection of the particular entry or entries and for substitution with an identifier for the processor having the lesser load CPU CPU may be arbitrary provided the altered entry or entries is are associated with the overloaded processor CPU as shown in .

Referring now to an exemplary block diagram of network acceleration engine is shown. As previously shown in network acceleration engine comprises message ingress subsystem to classify and prioritize locally terminated ingress control messages. As additionally shown data plane processing circuitry operating in combination with micro core engine dynamically load balances locally terminated control traffic through controlled alteration of processor assignment list being part of shared RAM memory.

Additional advantages and modifications will readily occur to those skilled in the art. Therefore the invention in its broader aspects is not limited to the specific details and representative embodiments shown and described herein. Accordingly various modifications may be made without departing from the spirit or scope of the general inventive concept as determined by the appended claims and their equivalents. For instance the results of the DEST IP address analysis described above can be ignored in favor of using ETYPE L3 Protocol WMM QoS or DEST SRC port in the packet in order to select the descriptor buffer pools for prioritization. Also higher prioritization and different buffer pool assignment may be applied to a first fragment having an L4 header than subsequent fragments without L4 headers. The description is thus to be regarded as illustrative instead of limiting.

