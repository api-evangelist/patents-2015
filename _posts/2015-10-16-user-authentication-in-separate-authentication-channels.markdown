---

title: User authentication in separate authentication channels
abstract: Apparatuses, systems, methods, and computer program products are disclosed for user authentication in separate authentication channels. A token module is configured to create a unique token in response to receiving user credentials from an unknown user for a secure interface of a third party system. An identity module is configured to log into the secure interface using the received user credentials, and submit the unique token to a private input element located behind the secure interface. A match module is configured to receive the unique token from the private input element and a user identifier associated with the unknown user from the third party system. The match module is configured to associate the received user credentials with the user identifier based on the unique token. An access module is configured to display information associated with the user identifier to the unknown user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09363256&OS=09363256&RS=09363256
owner: MX TECHNOLOGIES, INC.
number: 09363256
owner_city: Lehi
owner_country: US
publication_date: 20151016
---
This is a continuation in part application of and claims priority to U.S. patent application Ser. No. 13 986 228 entitled SYNCING TWO SEPARATE AUTHENTICATION CHANNELS TO THE SAME ACCOUNT OR DATA USING A TOKEN OR THE LIKE and filed on Apr. 11 2013 for Ryan Caldwell which is incorporated herein by reference.

This invention relates to information security and more particularly relates to authenticating an unknown user using separate authentication channels.

Some information systems for various organizations may allow a user to log into his her user account using various devices authentication channels and or applications such as a web browser a mobile application or the like. However some devices authentication channels and or applications may not be compatible with a primary authentication protocol of an organization or may be blocked or otherwise denied access to such an authentication protocol. If a user attempts to log into a system using an incompatible device authentication channel and or application the user s authentication may fail such that the user cannot log into his her user account or the user may be provided with data that is not in sync with the system due to lack of access.

Apparatuses for user authentication in separate authentication channels are disclosed. A token module in one embodiment is configured to create a unique token in response to receiving user credentials from an unknown user for a secure interface of a third party system. An identity module in some embodiments is configured to log into the secure interface of the third party system using the received user credentials and submit the unique token to a private input element located behind the secure interface of the third party system in response to successfully logging into the secure interface of the third party system using the received user credentials. A match module in a further embodiment is configured to receive the unique token from the private input element and a user identifier associated with the unknown user from the third party system. The match module in one embodiment is configured to associate the received user credentials with the user identifier based on the unique token. An access module in various embodiments is configured to display information associated with the user identifier to the unknown user in response to the match module associating the received user credentials with the user identifier.

An apparatus in one embodiment includes a semiconductor integrated circuit device. The semiconductor integrated circuit device in some embodiments includes one or more pins configured to receive user credentials from an unknown user for a secure interface of a third party system. The semiconductor integrated circuit device in a further embodiment includes one or more hardware circuits configured to create a unique token in response to receiving the user credentials. In some embodiments the semiconductor integrated circuit device includes one or more hardware circuits configured to log into the secure interface of the third party system using the received user credentials and submit the unique token to a private input element located behind the secure interface of the third party system in response to successfully logging into the secure interface of the third party system using the received user credentials.

In one embodiment the semiconductor integrated circuit device includes one or more pins configured to receive the unique token from the private input element and receive a user identifier associated with the unknown user from the third party system. In certain embodiments the semiconductor integrated circuit device includes one or more hardware circuits configured to associate the received user credentials with the user identifier based on the unique token. In a further embodiment the semiconductor integrated circuit device includes one or more hardware circuits configured to display information associated with the user identifier to the unknown user in response to associating the received user credentials with the user identifier.

Methods for user authentication in separate authentication channels are disclosed. A method in one embodiment includes creating a unique token in response to receiving user credentials from an unknown user for a secure interface of a third party system and logging into the secure interface of the third party system using the received user credentials. In a further embodiment the method includes submitting the unique token to a private input element located behind the secure interface of the third party system in response to successfully logging into the secure interface of the third party system using the received user credentials.

In some embodiments the method includes receiving the unique token from the private input element and receiving a user identifier associated with the unknown user from the third party system. In a further embodiment the method includes associating the received user credentials with the user identifier based on the unique token. In certain embodiments the method includes displaying information associated with the user identifier to the unknown user in response to associating the received user credentials with the user identifier.

Reference throughout this specification to one embodiment an embodiment or similar language means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. Thus appearances of the phrases in one embodiment in an embodiment and similar language throughout this specification may but do not necessarily all refer to the same embodiment but mean one or more but not all embodiments unless expressly specified otherwise. The terms including comprising having and variations thereof mean including but not limited to unless expressly specified otherwise. An enumerated listing of items does not imply that any or all of the items are mutually exclusive and or mutually inclusive unless expressly specified otherwise. The terms a an and the also refer to one or more unless expressly specified otherwise.

Furthermore the described features advantages and characteristics of the embodiments may be combined in any suitable manner. One skilled in the relevant art will recognize that the embodiments may be practiced without one or more of the specific features or advantages of a particular embodiment. In other instances additional features and advantages may be recognized in certain embodiments that may not be present in all embodiments.

These features and advantages of the embodiments will become more fully apparent from the following description and appended claims or may be learned by the practice of embodiments as set forth hereinafter. As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method and or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having program code embodied thereon.

Many of the functional units described in this specification have been labeled as modules in order to more particularly emphasize their implementation independence. For example a module may be implemented as a hardware circuit comprising custom VLSI circuits or gate arrays off the shelf semiconductors such as logic chips transistors or other discrete components. A module may also be implemented in programmable hardware devices such as field programmable gate arrays programmable array logic programmable logic devices or the like.

Modules may also be implemented in software for execution by various types of processors. An identified module of program code may for instance comprise one or more physical or logical blocks of computer instructions which may for instance be organized as an object procedure or function. Nevertheless the executables of an identified module need not be physically located together but may comprise disparate instructions stored in different locations which when joined logically together comprise the module and achieve the stated purpose for the module.

Indeed a module of program code may be a single instruction or many instructions and may even be distributed over several different code segments among different programs and across several memory devices. Similarly operational data may be identified and illustrated herein within modules and may be embodied in any suitable form and organized within any suitable type of data structure. The operational data may be collected as a single data set or may be distributed over different locations including over different storage devices and may exist at least partially merely as electronic signals on a system or network. Where a module or portions of a module are implemented in software the program code may be stored and or propagated on in one or more computer readable medium s .

The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

Many of the functional units described in this specification have been labeled as modules in order to more particularly emphasize their implementation independence. For example a module may be implemented as a hardware circuit comprising custom VLSI circuits or gate arrays off the shelf semiconductors such as logic chips transistors or other discrete components. A module may also be implemented in programmable hardware devices such as field programmable gate arrays programmable array logic programmable logic devices or the like.

Modules may also be implemented in software for execution by various types of processors. An identified module of program instructions may for instance comprise one or more physical or logical blocks of computer instructions which may for instance be organized as an object procedure or function. Nevertheless the executables of an identified module need not be physically located together but may comprise disparate instructions stored in different locations which when joined logically together comprise the module and achieve the stated purpose for the module.

The schematic flowchart diagrams and or schematic block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of apparatuses systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the schematic flowchart diagrams and or schematic block diagrams may represent a module segment or portion of code which comprises one or more executable instructions of the program code for implementing the specified logical function s .

It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the Figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. Other steps and methods may be conceived that are equivalent in function logic or effect to one or more blocks or portions thereof of the illustrated Figures.

Although various arrow types and line types may be employed in the flowchart and or block diagrams they are understood not to limit the scope of the corresponding embodiments. Indeed some arrows or other connectors may be used to indicate only the logical flow of the depicted embodiment. For instance an arrow may indicate a waiting or monitoring period of unspecified duration between enumerated steps of the depicted embodiment. It will also be noted that each block of the block diagrams and or flowchart diagrams and combinations of blocks in the block diagrams and or flowchart diagrams can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and program code.

In one embodiment the system includes one or more information handling devices . The information handing devices may include one or more of a desktop computer a laptop computer a tablet computer a smart phone a set top box a gaming console a smart TV a smart watch a fitness band an optical head mounted display e.g. a virtual reality headset smart glasses or the like an HDMI or other electronic display dongle a personal digital assistant or another computing device comprising a processor e.g. a central processing unit CPU a processor core a field programmable gate array FPGA or other programmable logic an application specific integrated circuit ASIC a controller a microcontroller and or another semiconductor integrated circuit device a volatile memory and or a non volatile storage medium. In certain embodiments the information handling devices are communicatively coupled to a third party system and or a backend system via a data network described below. The information handling devices in a further embodiment are capable of executing various programs program code applications instructions functions or the like.

In one embodiment a security module is configured to create a unique token in response to receiving user credentials from an unknown user at an information handling device . A security module e.g. the same security module that received the user credentials and or a second instance or portion of the security module executing on a backend system or the like in a further embodiment is configured to log into a secure interface of a third party system described below using the received user credentials and to submit the unique token to a private input element located behind the secure interface in response to successfully logging into the secure interface. A security module in a further embodiment receives the unique token from the private input element and a user identifier associated with the unknown user from the third party system and associates the user credentials with the user identifier based on receiving and or matching the unique token. A security module in some embodiments displays information associated with the user identifier to the unknown user in response to associating the received user credentials with the user identifier.

In this manner the security module which is described in more detail below may authenticate an unknown user and match the unknown user to his her user account and or data by receiving the user s credentials via a first authentication channel e.g. via a mobile application executing on a mobile device or the like and validating the user s credentials via a second authentication channel e.g. an online authorization system of a third party where the unknown user may have a known user account and user data . For example in certain embodiments the security module may enable an application or service e.g a security module executing on a user device and or a security module executing on a backend system without access to and or an affiliation with a secure third party system to synchronize and or provide user data such as settings preferences user provided content or the like from the secure third party system to an unknown user in a secure manner providing consistency between the third party system s own user data e.g. provided in an online portal and or application from the third party system and user data provided by the security module .

In various embodiments the security module may be embodied as hardware software or some combination of hardware and software. In one embodiment the security module may comprise executable program code stored on a non transitory computer readable storage medium for execution on a processor of an information handling device a device of the third party system the backend system or the like. For example the security module may be embodied as executable program code executing on one or more of an information handling device a third party system a backend system a combination of one or more of the foregoing or the like. In such an embodiment the various modules that perform the operations of the security module as described below may be located on an information handling device a backend system a combination of the two and or the like.

In various embodiments the security module may be embodied as a hardware appliance that can be installed or deployed in a third party system a backend system on a user s information handling device or elsewhere on the data network . In certain embodiments the security module may comprise a hardware device such as a secure hardware dongle or other hardware appliance device e.g. a set top box a network appliance or the like that attaches to another information handling device such as a laptop computer a server a tablet computer a smart phone or the like either by a wired connection e.g. a USB connection or a wireless connection e.g. Bluetooth Wi Fi near field communication NFC or the like that attaches to an electronic display device e.g. a television or monitor using an HDMI port a DisplayPort port a Mini DisplayPort port VGA port DVI port or the like . A hardware appliance of the security module may comprise a power interface a wired and or wireless network interface a graphical interface that attaches to a display and or a semiconductor integrated circuit device as described below configured to perform the functions described herein with regard to the security module .

The security module in such an embodiment may comprise a semiconductor integrated circuit device e.g. one or more chips die or other discrete logic hardware or the like such as a field programmable gate array FPGA or other programmable logic firmware for an FPGA or other programmable logic microcode for execution on a microcontroller an application specific integrated circuit ASIC a processor a processor core or the like. In one embodiment the security module may be mounted on a printed circuit board with one or more electrical lines or connections e.g. to volatile memory a non volatile storage medium a network interface a peripheral device a graphical display interface. The hardware appliance may include one or more pins pads or other electrical connections configured to send and receive data e.g. in communication with one or more electrical lines of a printed circuit board or the like and one or more hardware circuits and or other electrical circuits configured to perform various functions of the security module .

The semiconductor integrated circuit device or other hardware appliance of the security module in certain embodiments comprises and or is communicatively coupled to one or more volatile memory media which may include but is not limited to random access memory RAM dynamic RAM DRAM cache or the like. In one embodiment the semiconductor integrated circuit device or other hardware appliance of the security module comprises and or is communicatively coupled to one or more non volatile memory media which may include but is not limited to NAND flash memory NOR flash memory nano random access memory nano RAM or NRAM nanocrystal wire based memory silicon oxide based sub 10 nanometer process memory graphene memory Silicon Oxide Nitride Oxide Silicon SONOS resistive RAM RRAM programmable metallization cell PMC conductive bridging RAM CBRAM magneto resistive RAM MRAM dynamic RAM DRAM phase change RAM PRAM or PCM magnetic storage media e.g. hard disk tape optical storage media or the like.

The data network in one embodiment includes a digital communication network that transmits digital communications. The data network may include a wireless network such as a wireless cellular network a local wireless network such as a Wi Fi network a Bluetooth network a near field communication NFC network an ad hoc network and or the like. The data network may include a wide area network WAN a storage area network SAN a local area network LAN an optical fiber network the internet or other digital communication network. The data network may include two or more networks. The data network may include one or more servers routers switches and or other networking equipment. The data network may also include one or more computer readable storage media such as a hard disk drive an optical drive non volatile memory RAM or the like.

The third party system in one embodiment includes a network accessible computing system such as one or more web servers hosting one or more web sites an enterprise intranet system an application server an application programming interface API server an authentication server or the like. The third party system may include systems related to various institutions or organizations. For example the third party system may include a system providing electronic access to a financial institution a university a government agency a utility company an email provider or the like. A third party system may allow users to create user accounts to view create and or modify data related to the user s account e.g. settings preferences user provided uploaded data a transaction history account information customized data or the like . Accordingly a third party system may include an authorization channel such as a login element or page of a web site application or similar front end where a user can provide credentials such as a username password combination to view his her user account data.

In one embodiment the backend system facilitates the authorization of an unknown user using a first authentication channel via a second authentication channel e.g. an authentication channel of a third party system . The backend system may include one or more servers located remotely to the information handling devices and the third party systems . The backend system may include at least a portion of the modules of the security module may comprise hardware of the security module may store executable program code of the security module in one or more non transitory computer readable storage media and or may otherwise perform one or more of the various operations of the security module described herein in order to authenticate and match an unknown user to his her user data via a secure third party system .

The token module in one embodiment creates a unique token or identifier in response to receiving user credentials from an unknown user for a secure interface of a third party system . In one embodiment the token module receives the user credentials from an information handling device associated with the user. In certain embodiments the token module receives the user credentials from an application executing on the information handling device . For example the token module may receive a username and password combination entered by a user into an application executing on the user s smart phone e.g. a banking application a personal financial management or budgeting application a shopping application an educational or e learning application an entertainment application a gaming application or other application secured by a username and password or other secure credentials . In addition to a username and password combination other credentials may include a personal identification number a passphrase a code biometric data e.g. fingerprint data voice data retinal data or the like data associated with a trusted or authenticated device e.g. an IP address a MAC address a device identifier or the like associated with an information handling device that the token module knows and trusts .

In certain embodiments the user credentials are intended for and or associated with a secure interface of a third party system . For example at least a portion of the security module may comprise a user application and or website allowing a user to access data and or services of the third party system . As described above the third party system may include enterprise systems database systems or the like for various institutions companies universities organizations or the like. For example the user may enter his her credentials in a mobile application associated with their insurance company to view or edit his her insurance account information may enter his her credentials in a mobile application associated with a bank or other financial institution to view or edit his her transaction information or budgets or the like. The user credentials in such an embodiment may be the same for the mobile application as for a different authentication channel for the insurance company bank or other entity such as a web site interface of the third party system .

The token module in some embodiments generates a unique token in response to receiving the user credentials. The unique token in certain embodiments includes a random string of characters of various lengths an image a sound an event trigger or a series of event triggers e.g. a mouse click event a key press event a hover event or the like a code snippet a script e.g. a set of JavaScript instructions selecting a predefined input element of a web page e.g. a button or link selecting or hovering over a predefined section of a web page e.g. one or more predefined areas elements or pixels with a cursor or the like. For example the unique token may comprise a predefined sequence of event triggers like a left button click a z key press and a right button click which may be performed e.g. generated within code by the identity module below on a predefined web page to submit the token.

In one embodiment the token module creates the unique token based on the received credentials. For instance the token module may use at least a portion of the user credentials to seed a random number generator as input into a hash function to generate a hash value or the like to generate the unique token. For example the token module may receive fingerprint data entered by the user to seed a random number generator. Alternatively the token module may generate a random string of characters numbers symbols or the like for the unique token. The unique token may be globally unique e.g. a globally unique identifier GUID may be unique among active or in use tokens e.g. the token module may reuse a token after it has been used to match a user s credentials or the like. One of skill in the art will recognize in light of this disclosure the various methods for creating a unique token.

An unknown user as used herein may be a user that has an account or is otherwise associated with the institution associated with the third party system but for which the security module does not recognize the associated username or other credentials e.g. has not previously received and or matched the credentials for the unknown user . The user may be able to log in to the third party system using a first authentication channel such as a web site interface or application of the third party system to view their account information including but not limited to preferences settings reports personal information contact information account status and or the like. However when an unknown user attempts to log in via a second authentication channel e.g. the security module such as a mobile application executing on a mobile device the user may be unknown in the sense that the mobile application or other security module or portion thereof may not initially recognize the user and may first determine whether the user who provided the credentials to the second authentication channel is the same user who previously logged in to the third party system via the first authentication channel.

The identity module in one embodiment logs into a secure interface of a third party system using the received credentials from an unknown user. In certain embodiments the identity module by logging into the third party system using the received credentials verifies that a user account associated with the user credentials exists. For instance the identity module may provide a username and password to the third party system and the third party system may respond with a confirmation that a user account exists for the provided credentials or a message that the log in failed.

In one example the user may provide a username and password to a banking mobile application executing on an information handling device e.g. a frontend security module . The identity module e.g. from the backend system or other backend security module may take the received username and password and provide them to a login page for the third party system e.g. a bank or other entity to attempt to log the user into their account associated with the third party system . If the login is successful the identity module can confirm that the user is a registered or valid user otherwise if the login fails the identity module determines that the credentials are bad that the user is not a registered user or the like. The identity module may use a command line interface such as wget or the like to retrieve and use a login page of the third party system may use a graphical user interface GUI such as a web browser to retrieve and use a login page of the third party system or the like in an automated fashion from a backend server of the backend system or the like with little or no interaction with the user.

Thus the identity module may verify the account status of a user using a different authentication channel than where the user entered his her credentials without requiring the user to input his her credentials into the secure interface of the third party system . In other words the identity module attempts to log the user into the third party system via a secure interface of the third party system without displaying graphically or otherwise the secure interface to the user.

If the identity module successfully logs into the secure interface of the third party system using the received user credentials the identity module in a further embodiment submits the unique token to a private input element located behind the secure interface of the third party system . The private input element in certain embodiment may be part of the security module may be owned by and or associated with the backend system or the like. For example the third party system may comprise an embedded widget page iframe code block or other element from the backend system or an associated entity e.g. a third party system of a bank or financial institution may embed a personal financial management or budgeting widget from a vendor associated with the backend system in its online banking platform to display budget visualizations goals or the like . The private input element may comprise an input element that is graphically hidden from a user accessing an associated page or view but that is accessible to the identity module . For example the private input element may comprise an input text box and or button for a form on a web page but instead of the input text box and or button being visible to a user the input text box and or button is hidden so that it is not visible and or noticeable on the web page e.g. the input text box and or button may be behind another element such as an image may be the same color as the background may be very small such as one or a few pixels may not be displayed at all but may be present only in code of the web page or the like .

As described in more detail below the private input element may be identified by an indicator or a beacon such as a flag a specific string of characters a specific tag a comment or the like within the code of the web page. For example the private input element may be identified by the tag or the like which may indicate that the input element associated with the tag is the private input element where the identity module should submit the unique token. In another example the private input element may include a predefined area of a web page such that the identity module submits the unique token when the identity module moves a cursor to and or clicks on that area of the web page e.g. creates a cursor move event within the web page to the predefined area which may be indicated by a flag or beacon within the code of the web page or the like. In such an embodiment submission of the unique token may include submitting the coordinates of the predefined area of the web page or the like. In other embodiments the identity module may submit the unique token by providing a unique key combination playing a unique sound providing a unique geographical location e.g. a spoofed longitude and a latitude or the like in a remote location which is not likely to be associated with an actual user providing unique sensor data e.g. spoofed biometric data such as a fingerprint heartbeat or retina scan spoofed accelerometer gyroscope data or the like and or providing another unique or unusual data pattern not likely to be provided by a user.

A match module in one embodiment receives the unique token from the private input element as submitted by the identity module e.g. the private input element may be configured to submit the received unique token or an identifier thereof to the match module . The match module in certain embodiments may also receive a user identifier e.g. a user key associated with the unknown user from the third party system . In some embodiments the user identifier is different than the unique token and or the user credentials e.g. may be generated and or provided by the third party system . The user identifier may comprise an identifier that uniquely identifies a user and or the user s data within the third party system . For example the user identifier may be a unique number that is assigned to the user s data such as account information preferences settings reports budgets and or the like. The user identifier may be used in some embodiments as a key or index into a database or other data store that comprises the user s data. For example in embodiments where the third party system embeds data from the backend system the third party system may provide a unique user key for a user to the backend system in response to valid user credentials being provided to the secure interface of the third party system in order to retrieve and display the embedded data associated with the user.

In one embodiment the match module receives the user identifier from the third party system where the identity module submitted the user credentials. For example if the identity module submits the user credentials on a login page for a university to verify a student s identity the match module may receive a user identifier associated with the student from the university s authorization system if the identity module was able to successfully login using the student s credentials. In some embodiments the identity module receives the user identifier and sends it to the match module .

In certain embodiments the user identifier associated with the unknown user is generated and used by a single sign on service associated with the third party system to identify a user of the third party system . For example the website behind the secure interface may include a plurality of widgets described below that connect to one or more web servers e.g. to one or more servers of the backend system . The web servers for different widgets may request user credentials to receive information for the widgets. Instead of requiring the user to sign into different widgets separately a single sign on system may be used to allow the user to log into the secure interface of the third party system one time which also logs the user into one or more web servers associated with an embedded widget or other embedded data e.g. the backend system . Accordingly instead of sending the user credentials to each web server for each widget the single sign on service may generate a user identifier or user key that may be used to identify the user at different locations web servers databases or the like e.g. the backend system .

The match module in one embodiment associates the received user credentials with the user identifier based on receiving the unique token from the private input element embedded behind the secure interface of the third party system and matching the received unique token with a copy of the unique token previously generated for and associated with the received user credentials. In certain embodiments the match module compares the received unique token to records of tokens generated by the token module to determine whether the received token is the same as one of the generated tokens e.g. to determine which user credentials match the received user identifier . If the match module determines that one of the generated unique tokens and the received unique token are the same then the match module may confirm that the unknown user who entered the user credentials is the user associated with the user identifier. In other words if a generated unique token and a received unique token match or are the same the match module associates the received user identifier with the user credentials.

In one embodiment the token module may store the unique token with the user identifier for the user e.g. the unique token may be globally unique and may continue to be associated with the user . For example the token module may generate the unique token by generating a hash value using the user s credentials so that the token module may consistently generate the same hash value for the same credentials. In a further embodiment the unique token may be a temporary and or reusable token and the match module may discard and or reuse the unique token received from the private input element in response to associating the received user credentials with the user identifier.

The access module in one embodiment displays information associated with the user identifier to the unknown user in response to the match module associating the received user credentials with the user identifier. The information may include user data such as settings preferences budgets reports transactions logs data previously provided by the user through the secure interface of the third party system e.g. through an embedded widget or other element or the like. In certain embodiments the user information may be indexed referenced or otherwise accessible by the user identifier. Accordingly after the match module associates the user identifier with the user credentials the access module may retrieve the user s information from a data store and send and or display the information to the information handling device associated with the unknown user each time the user provides the user credentials.

For example an unknown user may log into a mobile application associated with an organization that hosts an email system where the user has an email account. The user may provide his her credentials a username and password for instance to the mobile application to log in to his email account. The provided username and password may be the same credentials the user uses to log into a secure web interface to the email system. In the online or web email system after the user is authenticated by providing his her username and password to the secure web interface the email system may look up the user s user identifier which is subsequently used to find the user s information instead of sending the user s credentials. Once the match module has associated the user identifier with the user s credentials in certain embodiments the association is stored in a non volatile storage medium of the backend system or the like so that the matching process is not repeated the next time that the user provides the user s credentials.

Authenticating a user and providing the user access to the email system via the mobile application may not be possible in situations where the mobile application cannot determine the user identifier that is used to index the user s information due to inconsistent authentication protocols different security infrastructures lack of access to an API or the like. Accordingly the security module may be utilized to overcome this obstacle. Continuing with the current example the token module may receive the username and password from the mobile application and generate a unique token. The identity module may provide the username and password to the secure web interface to log into the email system. In response to successfully logging into the email system the identity module may submit the unique token to a private input element located behind the secure web interface e.g. a hidden input element on a subsequent web page such as an element of an embedded plugin or widget in a page of the third party system an inbox page or the like in the email example .

The match module may receive the unique token from the private input element and a user identifier associated with the username and password used to log into the email system. The match module may associate the user identifier with the user credentials used to login to the email system from the mobile application in response to the received unique token and the generated unique token being the same. The access module may present information associated with the user s email account on the mobile application in response to the match module matching associating the user identifier with the user credentials.

In certain embodiments the input module scrapes checks or otherwise searches a website or web page e.g. the source code of the website or web page of the secure interface of a third party system to locate one or more input elements into which the identity module submits the received credentials to log into the secure interface of the third party system . For example the input module may scrape e.g. search within the code of a website a login page of a website to find input elements that correspond to a username input element and a password input element. The website may be written using one of or a combination of various programming languages such as JavaScript HTML PHP Perl or the like. The input module may parse the source code of the website to determine where various input elements are located on the website such as input elements for the user credentials.

The input module in a further embodiment enters the credentials into the input elements and triggers authorization of the user based on the credentials. For example the input module may search for an action element within the web page such as a button or link that sends the credentials to an authorization back end service that verifies whether the user has an existing account or not.

In a further embodiment the input module further searches a website behind the secure interface of a third party system to locate the private input element into which the identity module submits the unique token. In certain embodiments the input module searches the website behind the secure interface of the third party system for a private input element in response to the identity module successfully logging into the secure interface of the third party system using the received user credentials. In some embodiments the private input element is not visible or accessible in a graphical display of the website. Thus even if users view the website within a web browser for example the users may not be able to see or access the private input element.

For example if the identity module successfully logs into the third party system with the received user credentials the input module may search the source code of the website or web page loaded after the user has been authenticated for a flag beacon or other indicator for the private input element. For example the input module may be configured to search for an tag within the markup language of the website which indicates the private input element for the unique token. In this manner the private input element comprises a hidden flag beacon indictor or the like that is accessible to the input module within the source code of the website but is graphically hidden and inaccessible in a graphical display of the website.

In a further embodiment the hidden flag beacon indicator or the like comprises a portion of a widget displayed on the website behind the secure interface of the third party system . In certain embodiments a widget also known as a web widget or a software widget is an application with limited functionality that can be installed and executed within a web page. For example a web page may include a weather widget that connects to a weather service or website and displays weather information a news widget that connects to a news service or website and displays news and so on. Thus the input module may search one or more widgets installed on the website behind the secure interface of the third party system for a private input element where the identity module can submit the unique token.

In one embodiment the account module is configured to access create modify delete or the like accounts records or the like for a user. In one embodiment the account module creates a new record for the unknown user in response to the access module failing to find information associated with the user and associates the received user identifier with the new record. For example the user may have registered or otherwise created a new account in the third party system but may not have created any data such as reports preferences settings budgets or the like. In such an embodiment the account module may create a new record comprising default data predefined data or the like which the access module may display on the user s information handling device .

In a further embodiment the account module may modify the user s records in response to a user editing their data. For example if the user changed his her preferences or created a new custom report the account module may update the user s information to reflect the changes. Similarly the account module may delete a user s records or create new user records in response to the user or the third party system issuing a delete or create command.

The token module may receive the username and password line from the mobile application and generate a unique token. The identity module may receive the username and password and the unique token line and attempt to log into an authentication website for the bank line without graphically presenting the authentication website to a user and or in certain embodiments at all. In response to the identity module determining that the login was successful line the identity module may determine line a private input element for the unique token on a website that sits behind the authentication website for the bank . In certain embodiments the website may include one or more widgets or like elements that contain a private input element for the unique token. As explained above the private input element in one embodiment is an element of the website or widget that the identity module can access but is not visible or accessible to any users.

The match module in one embodiment receives the unique token line in response to the identity module submitting the unique token line to the private input element. The match module may also receive a user identifier line from the website or widget . The match module may match the received unique token from the website or widget line to the unique token that the token module generated. If the match module determines that the received unique token and the generated unique token are the same the match module associates the received user identifier with the credentials that the user line and the access module may retrieve line the user s information from a database or similar data store. The access module in one embodiment sends and or displays line the user s information on the smart phone. In the embodiment illustrated in the operations performed by the security module to authenticate and retrieve the user s information happens in real time e.g. within seconds milliseconds microseconds or the like without presenting any web pages of the third party system to the user and or without requiring the user to provide any information in addition to their user credentials.

In certain embodiments the token module creates a unique token using a random number string generator where the user credentials are used to seed the random number string generator. In some embodiments the token module creates a unique token by generating a hash value using a hash function or the like. In various embodiments the token module creates a unique token embodied as a random string of characters of various lengths an image a sound an event trigger or a series of event triggers e.g. a mouse click event a key press event a hover event or the like a code snippet a script e.g. a set of JavaScript instructions selecting a predefined input element of a web page e.g. a button or link selecting or hovering over a predefined section of a web page e.g. predefined areas elements or pixels with a cursor or the like.

In a further embodiment the identity module logs into the secure interface of the third party system using the received user credentials. For example the identity module may log into an authentication website for a bank a university an online store an email system or the like by inputting the user credentials into one or more input elements on the authentication website without graphically displaying the authentication website to the user.

In certain embodiments the identity module submits the unique token to a private input element located behind the secure interface of the third party system in response to successfully logging into the secure interface of the third party system using the received user credentials. The identity module may submit the unique token to the private input element without graphically displaying the private input element to the user. For example the identity module and or the input module may locate the private input element by parsing the source code for the website or widget where the private input element is located for a particular flag beacon or other indicator.

In various embodiments the match module receives the unique token from the private input element and receives a user identifier associated with the unknown user from the third party system . In some embodiments the match module associates the received user credentials with the user identifier based on the unique token. For example the match module may associate the received user credentials with the user identifier in response to the received unique token matching the generated unique token. In a further embodiment the access module displays information associated with the user identifier to the unknown user in response to the match module associating the received user credentials with the user identifier and the method ends.

In a further embodiment the input module searches a web site behind the secure interface of the third party system to locate the private input element into which the identity module submits the unique token in response to the identity module successfully logging into the secure interface of the third party system using the received user credentials. In one embodiment the identity module submits the unique token to a private input element located behind the secure interface of the third party system in response to successfully logging into the secure interface of the third party system using the received user credentials.

In some embodiments the match module receives the unique token from the private input element and receives a user identifier associated with the unknown user from the third party system . In a further embodiment the match module associates the received user credentials with the user identifier based on the unique token. In one embodiment the account module determines whether a record exists for the user based on the provided user identifier. If the account module determines that a record for the user does exist the access module displays the user s information within the record and the method ends. If the account module determines that a record for the user does not exist the account module creates a new record for the user the access module displays the user s information within the record and the method ends.

The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is therefore indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.

