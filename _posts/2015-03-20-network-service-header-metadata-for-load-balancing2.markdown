---

title: Network service header metadata for load balancing
abstract: A method for load balancing based on metadata in a network service header. The method includes receiving a packet or frame of a traffic flow, wherein the packet or frame has a payload and the network service header including metadata and service path information for the traffic flow identifying the service path, and the metadata comprises classification information of the packet or frame, extracting, by a service header processor of the load balancer, the classification information of the metadata from the packet or frame, and applying, by a load balancing function of the load balancer, a load balancing policy on the packet or frame based on the classification information of the metadata.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09660909&OS=09660909&RS=09660909
owner: CISCO TECHNOLOGY, INC.
number: 09660909
owner_city: San Jose
owner_country: US
publication_date: 20150320
---
This application claims the benefit of priority under 35 U.S.C. 119 e to U.S. Provisional Application Ser. No. 62 090 821 entitled METADATA AUGMENTATION IN A SERVICE FUNCTION CHAIN AND NETWORK SERVICE HEADER NSH METADATA BASED LOAD BALANCING filed Dec. 11 2014 which is hereby incorporated by reference in its entirety.

This disclosure relates in general to the field of communications and more particularly to using metadata in a network service header for load balancing.

In computer networking network administrators are often concerned with how to best route traffic flows from one end point to another end point across a network. When provisioning a route for a traffic flow administrators may implement policies to ensure that certain service functions are applied to the packet or the traffic flow as it traverses across the network. Service functions can provide security wide area network WAN acceleration and load balancing. These service functions can be implemented at various points in the network infrastructure such as the wide area network data center campus etc. Network elements providing these service functions are generally referred to as service nodes. 

Traditionally service node deployment is dictated by the network topology. For instance firewalls are usually deployed at the edge of an administrative zone for filtering traffic leaving or entering the particular zone according to a policy for that zone. With the rise of virtual platforms and more agile networks service node deployment can no longer be bound by the network topology. To enable service nodes to be deployed anywhere on a network a solution called Service Function Chaining SFC Architecture IETF draft ietf sfc architecture 04 Sep. 20 2014 and Network Service Header NSH IETF draft quinn sfc nsh 03 Jul. 3 2014 have been provided to encapsulated packets or frames to prescribe service paths for traffic flows through the appropriate service nodes. Specifically Network Service Headers provide data plane encapsulation that utilizes the network overlay topology used to deliver packets to the requisite services.

This present disclosure describes a method for load balancing based on metadata in a network service header. The method includes 1 receiving at a load balancer in a service path a packet or frame of a traffic flow wherein the packet or frame has a payload and the network service header including metadata and service path information for the traffic flow identifying the service path and the metadata comprises classification information of the packet or frame 2 extracting by a service header processor of the load balancer the classification information of the metadata from the packet or frame and 3 applying by a load balancing function of the load balancer a load balancing policy on the packet or frame based on the classification information of the metadata.

In some embodiments the network service header that includes the metadata and the service path information is a result of an initial classification of the packet or frame performed by an initial service classifier. In some embodiments the classification information of the packet or frame of the metadata originates from an orchestrator system external to a service path prescribed by the service path information. In some embodiments the classification information of the packet or frame of the metadata is a result of metadata augmentation by a service node upstream of the load balancer in the service. In some embodiments the metadata in the network service header comprises application information associated with the traffic flow.

In some embodiments the load balancer is not capable of deducing the classification information of the packet or frame based on the packet or frame. In some embodiments wherein applying the load balancing policy on the packet or frame does not include processing the payload of the packet or frame. In some embodiments applying the load balancing policy on the packet or frame does not include processing the layer 7 Hypertext Transfer Protocol header of the packet or frame.

To accommodate agile networking and flexible provisioning of network nodes in the network Service Function Chains SFC can be used to ensure an ordered set of Service Functions SF to be applied to packets and or frames of a traffic flow. SFCs provides a method for deploying SFs in a way that enables dynamic ordering and topological independence of those SFs. A service function chain can define an ordered set of service functions that is applied to packets and or frames of a traffic flow where the ordered set of service functions are selected as a result of classification. The implied order may not be a linear progression as the architecture allows for nodes that copy to more than one branch. The term service chain is often used as shorthand for service function chain.

A service function can be responsible for specific treatment of received packets. A service function can act at the network layer or other OSI layers e.g. application layer presentation layer session layer transport layer data link layer and physical link layer . A service function can be a virtual instance or be embedded in a physical network element such as a service node. When a service function or other modules of a service node is executed by the at least one processors of the service node the service function or other modules can be configured to implement any one of the methods described herein. Multiple service functions can be embedded in the same network element. Multiple instances of the service function can be enabled in the same administrative SFC enabled domain. A non exhaustive list of SFs includes firewalls WAN and application acceleration Deep Packet Inspection DPI server load balancers SLBs NAT44 NAT64 HOST ID injection HTTP Header Enrichment functions TCP optimizer application delivery controllers ADCs etc. An SF may be SFC encapsulation aware that is it receives and acts on information in the SFC encapsulation or unaware in which case data forwarded to the service does not contain the SFC encapsulation.

A Service Node SN can be a physical network element or a virtual element embedded on a physical network element that hosts one or more service functions SFs and has one or more network locators associated with it for reachability and service delivery. In many standardization documents service functions can refer to the service nodes described herein as having one or more service functions hosted thereon. Service Function Path SFP or sometimes referred simply as service path relates to the instantiation of a SFC in the network. Packets follow a service path from a classifier through the requisite service functions.

Generally speaking an NSH includes service path information which can identify or prescribe a particular service path an instance of a service function chain and NSH is added to a packet or frame. For instance an NSH can include a data plane header added to packets or frames. Effectively the NSH creates a service plane. The NSH includes information for service chaining and in some cases the NSH can include metadata added and or consumed by service nodes or service functions. The packets and NSH are encapsulated in an outer header for transport. To implement a service path a network element such as a service classifier SCL or some other suitable SFC aware network element can process packets or frames of a traffic flow and performs NSH encapsulation according to a desired policy for the traffic flow.

The service classification function can process a packet of a traffic flow and determine whether the packet requires servicing and correspondingly which service path to follow to apply the appropriate service. The determination can be performed based on business policies and or rules stored in memory . Once the determination of the service path is made service header encapsulator generates an appropriate NSH having identification information for the service path service path information and adds the NSH to the packet. The service header encapsulator provides an outer encapsulation to forward the packet to the start of the service path. Other SFC aware network elements are thus able to process the NSH while other non SFC aware network elements would simply forward the encapsulated packets as is. Besides inserting an NSH network element can also remove the NSH if the service classification function determines the packet does not require servicing.

A network service header NSH can include a e.g. 64 bit base header and one or more context headers. Generally speaking the base header provides information about the service header and service path identification e.g. a service path identifier and context headers can carry opaque metadata such as the metadata described herein reflecting the result of classification . For instance an NSH can include a 4 byte base header a 4 byte service path header and optional context headers. The base header can provide information about the service header and the payload protocol. The service path header can provide path identification and location within a path. The variable length context headers can carry opaque metadata and variable length encoded information. The one or more optional context headers make up a context header section in the NSH. For instance the context header section can include one or more context header fields having pieces of information therein describing the packet frame.

The context header fields are particularly suitable for sharing context information about a packet or frame as the packet or frame traverses the service path. Based on the information in the base header a service function of a service node can derive policy selection from the NSH. Context headers shared in the NSH can provide a range of service relevant information such as traffic classification. Service functions can use NSH to select local service policy. A common usage is for service functions to deny or permit certain types of traffic based on the traffic classification in the context headers of the NSH.

A server load balancer SLB or Application Delivery Controller ADC is a network device that distributes traffic across a number of servers using load balancing algorithms ranging from simple round robin to more sophisticated methods based on e.g. L3 Network layer e.g. Internet Protocol IP L4 Transport layer e.g. Transmission Control Protocol TCP User Datagram Protocol UDP L5 Session layer L6 Presentation layer and or L7 Application layer information in the packets. For instance a load balancer may extract TCP IP information from the packet to decide how to load balance the traffic flow across multiple servers. These devices generally referred herein as load balancers are used to increase capacity and reliability of applications increase scalability and improve the overall performance by decreasing the burden on servers associated with the management of application sessions. Such load balancers rely heavily upon inspection of incoming packet flows such as L4 and or L7 information to determine which classification rules to apply or how to apply load balancing policies. Thus the outcome of the load balancing decision for a given traffic flow depends on the load balancer s classification of the packet or frame.

Some load balancers have sophisticated packet inspection capabilities in many cases load balancers extract the required information for load balancing decisions by e.g. processing the L3 L4 L5 L6 and or L7 headers from the packet and or processing the payload of the packet. This results in heavy processing loads on load balancers which may have to process a high volume of traffic flows. More significantly classification information that is not conveyed within the packet e.g. in the packet header and or in the payload such as classification information available via an external source s is generally not available to load balancers even though said information could be utilized to greatly enhance their load balancing capabilities. The present disclosure describes the use of metadata carried in Network Service Header NSH s context headers section for load balancing decisions in addition to or in lieu of payload i.e. original packet information.

A load balancer can apply one or more load balancing policies based on a variety of classification information of a packet frame of a traffic flow. One example includes application based load balancing where a load balancing policy can load balance to different servers depending on the application with which a traffic flow is associated. To facilitate load balancing the metadata in the network service header can include application information associated with the traffic flow e.g. encoded value which identifies an application which with the traffic flow is associated . Information conveyed in the metadata of the network service header can include one or more of the following information identifying the application type e.g. Hypertext Transfer Protocol HTTP versus Simple Mail Transfer Protocol SMTP etc. application data e.g. a Uniform Resource Locator URL etc. subscriber information e.g. subscriber identifier subscriber class access level etc. service level information e.g. gold service versus bronze service etc. Virtual Private Networks VPN Virtual Routing and Forwarding VRF membership information etc.

Within the context of the application metadata refers to one or more pieces of information e.g. bits of data encoded values in a context header section of a network service header. For instance the metadata can include information used by a load balancer when applying a load balancing policy on a packet or frame. In some cases the metadata can include encoded information which classifies of the packet or frame e.g. a value which indicates the type of packet or frame .

Metadata can refer to contents of the entire context header section which can include the contents of one or more context header fields describing various attributes of the packet frame. Metadata can also refer to contents of one individual context header field or a subset of context header fields in the context header section. The context header section may have a plurality of fields in which metadata can be provided. Exemplary kinds of metadata can include 

Exemplary Load Balancer and Method for Load Balancing Based on Metadata in the Network Service Header

Once properly encapsulated the packet having the NSH is then forwarded to one or more service nodes in the service path where service s can be applied to the packet frame. One of such service node in the service path is a load balancer configured for load balancing based on metadata in the network service header.

Load balancer generally a network element can include processor computer readable non transitory memory for storing data and instructions. The memory can store one or more load balancing policies that the load balancer can apply to packets or frames of traffic flows. Furthermore load balancer includes load balancing function s e.g. for applying one or more load balancing policies to the packet frame and service header processor . The load balancing function s and service header processor can be provided by processor when processor executes the instructions stored in memory . Service header processor can extract the NSH and in some cases update the NSH as needed. For instance the service header processor can decrement the service index if a service index 0 is used to indicate that a packet is to be dropped by a service node downstream from the load balancer in the service path. Furthermore the service header processor and or the load balancing function s can extract metadata in the network service header for load balancing decisions. In another instance the service header processor or some other suitable module provide by the service node can update context header fields if new updated context is available.

The load balancer can implement a method for load balancing based on metadata in a network service header. shows a flow diagram illustrating such method for load balancing based on metadata in a network service header NSH according to some embodiments of the disclosure. The method includes receiving at a load balancer in a service path a packet or frame of a traffic flow box . The packet or frame has a payload and the network service header. The network service header has metadata and service path information for the traffic flow identifying the service path. The metadata comprises classification information of the packet or frame. Advantageously the metadata in the NSH allows load balancing decisions to be made by the load balancer. The method further includes extracting by a service header processor of the load balancer the classification information of the metadata from the packet or frame box . For instance the service header processor may process the packet to pass the metadata and or a derivation thereof to a load balancing function in the load balancer. The method further includes applying by the load balancing function of the load balancer a load balancing policy on the packet or frame based on the classification information of the metadata. For instance a load balancing policy may include one or more rules which takes the classification information as input and provide one or more load balancing decisions as output. The load balancing decision s based on the one or more load balancing policies may include forwarding the packet or frame to one of a plurality of servers being load balanced by the load balancer.

If an encoding scheme is used for encoding classification information in the metadata e.g. if encoded values are being conveyed in context header fields as metadata in the network service header the encoding scheme or semantics of the metadata can be received by the load balancer via a control plane of the service path or service function chain.

As described previously a network service header provides the mechanisms for the construction of service chains in a network and the forwarding of traffic through those service chains using network service headers carried within the data plane. In addition to path information NSH carries so called metadata information about the packet chain. This metadata is carried in NSH itself either as fixed size words or via variable TLVs. Typically this metadata reflects the result of antecedent classification. For example application type and subscriber information are two commonly used metadata values. The metadata is carried along the service path and used per service for policy enforcement. Using the metadata examples above a firewall would for instance be able to permit or deny a certain application or subscriber without having to classify the packets to determine the application or subscriber information. More importantly in accordance with the embodiments described herein load balancers can load balance traffic flows based on the metadata in the network service header.

In one example the metadata in the network service header that includes the metadata and the service path information is a result of an initial classification of the packet or frame performed by an initial service classifier. Phrased differently the metadata originates from a classification of the packet performed by the initial service classifier which prescribed the particular service path identified by the service path information of the network service header. The initial service classifier could generate such classification information in the metadata through packet flow inspection.

In some cases the classification information carried in NSH metadata is not something that can be derived via packet flow inspection rather it conveys information from an external source i.e. a source external to the service path . For instance the classification information of the packet or frame of the metadata can originate from an orchestrator system external to a service path prescribed by the service path information. Phrased differently the classification information of the metadata is supplied by an orchestration system which is responsible for assigning workloads. An orchestration system places application workloads and therefore knows what application is running. The orchestration system via a metadata application programming interface API informs the service chaining infrastructure about the application types i.e. classification information and that classification information is then carried in the network service header as metadata.

In some cases the classification information of the packet or frame of the metadata is a result of metadata augmentation by a service node upstream of the load balancer in the service. Metadata augmentation is a mechanism described by a related co pending application Ser. No. 14 631 595 entitled METADATA AUGMENTATION IN A SERVICE FUNCTION CHAIN which is incorporated by reference in its entirety herein. Service nodes upstream can provide additional functionality by augmenting the metadata being used by the load balancer e.g. by adding precision to the metadata and virtualizing the classification function over the service path. At the initial classifier a packet or frame can be classified where a first metadata in the NSH would reflect the classification. For example the initial classifier can classify that the packet frame of a traffic flow is associated with e.g. an employee or guest . With augmentation the first service node can also further classify the packet or frame as being associated with e.g. application X and accordingly generate a second metadata. The first service node can use this new information i.e. the second metadata to augment the first metadata. The NSH for the packet frame can carry the second metadata which augments the first metadata as the packet frame traverses to the subsequent service node s in the service path. When a load balancer receives the packet frame with the second metadata that second metadata can be used for load balancing where the new information provided by the second metadata can affect how the load balancer processes the packet or frame. For instance the second service node may decide to load balance the packet frame differently based on the second metadata as opposed to load balancing solely based on the first metadata without augmentation . The context being shared among service nodes is improved as the metadata is augmented when the packet frame travels over the service path. The service nodes can optionally serve as a supplemental additional classifier in the service path by classifying the packet frame using their own capabilities. Through augmentation a service node in the service path can contribute to the information being shared over the service function chain. The semantics e.g. meaning encoding scheme can be conveyed in line in the service plane or in the control plane with the load balancer.

Metadata augmentation together with load balancing i.e. load balancing based on augmented metadata can be advantageous if the load balancer or the initial classifier does not have a particular classification functionality or cannot conveniently or efficiently provide such functionality or might not have information needed to know more about the packet. Common example is that the initial classifier is a hardware device that cannot look deep into the packet to get application information about the packet. The first service node e.g. a firewall a deep packet inspection engine etc. may have greater classification capabilities. For instance the initial classifier may provide first metadata which specifies the packet frame as being associated with a guest e.g. as opposed to an employee . A first service node a deep packet inspection engine may find out that the packet frame is associated with email e.g. as opposed to streaming video content . The first service node can augment the first metadata by adding additional information e.g. using second metadata which specifies the traffic is associated with email. A second service node e.g. a load balancer can process the packet frame based on the second metadata accordingly. For instance the load balancer can apply a policy based on the second metadata wherein the policy may decide to load balance email traffic of guests differently from email traffic of employees or load balance email traffic of guests differently from voice traffic of guests.

Load balancers e.g. SLB ADC devices often constitute part of an NSH service chain and as such they can take advantage of the metadata for local policy application in this case load balancing decisions. In many cases load balancing based on metadata in the NSH is advantageous when the load balancer is not capable of deducing the classification information of the packet or frame of the metadata based on the packet or frame itself i.e. the payload or L4 L7 header information .

In some other cases even if the load balancer can deduce the classification information from the packet or frame the metadata having the classification information makes it easier for the load balancer to simply load balance based on the metadata without excessive processing of the packet frame. Phrased differently applying the load balancing policy on the packet or frame does not include processing the payload of the packet or frame to obtain classification information of the packet frame . Consider an SLB ADC that front ends a set of web servers accessed by application Universal Resource Locator URL . The SLB ADC thus load balances traffic flows across the web servers based on the application URL i.e. the classification information . In the conventional technique the SLB ADC must examine the L7 HTTP headers to determine the URL being accessed and then use this information to determine based on a load balancing policy which web server to use to service a particular packet flow. Using the NSH metadata as described in this present disclosure the SLB ADC can extract the URL information and apply the load balancing policy without needing to parse through the entire L7 HTTP header. Phrased differently applying the load balancing policy on the packet or frame does not include processing the layer 7 Hypertext Transfer Protocol header of the packet or frame. Effectively the classification information e.g. the application information is inserted and conveyed as NSH metadata which a load balancer can use for load balancing purposes and in lieu of having the load balancer to parse for URL or other packet information. Advantageously the SLB ADC s load balancing function can apply the load balancing policy simply based on the application information in NSH to make its policy decision and even leverage the metadata to make policy decisions based on information that a SLB cannot derive absent of the classification information conveyed as NSH metadata. Such metadata being used for load balancing can include one or more of the following packet centric information the use of metadata derived from external sources as described above and augmented metadata.

By adding this type of information to the NSH metadata the LB algorithms may be greatly enhanced leading to simpler and more sophisticated LB functionality. Advantages of such use of metadata include but are not limited to 1 SLB ADC does not have to parse through packets looking for information to load balance upon 2 Load balancing decisions may be performed based on information that cannot be deduced by a load balancer e.g. application end point group externally derived information from Openstack etc. 3 Simpler SLB ADC implementation and 4 no need to couple SLB and IP management systems.

Overall the SFC Security framework can help provide security for metadata that is being used for load balancing. Metadata used by load balancers can be protected from a security perspective as part of the overall SFC security framework. SFC metadata being used for load balancing does not in itself make security weaker and SFC can work with crypto and security mechanisms. In one example SFC can be used in a trusted environment e.g. a secure data center . In this case if the middle box or classifier is hacked NSH might not be the biggest problem. All DC tagging schemes VXLAN for example even VLANs to some extent have similar issues . In another example SFC can be used in existing safe transports e.g. IPsec MACSEC SSL to carry NSH. In yet a further example SFC can be used with NSH specific authenticity and confidentially mechanisms. In these cases NSH itself can carry the crypto data as metadata. These SFC security approaches can effectively address security concerns over using the sensitive metadata being carried in NSH for load balancing

Within the context of the disclosure a network used herein represents a series of points nodes or network elements of interconnected communication paths for receiving and transmitting packets of information that propagate through a communication system. A network offers communicative interface between sources and or hosts and may be any local area network LAN wireless local area network WLAN metropolitan area network MAN Intranet Extranet Internet WAN virtual private network VPN or any other appropriate architecture or system that facilitates communications in a network environment depending on the network topology. A network can comprise any number of hardware or software elements coupled to and in communication with each other through a communications medium.

In one particular instance the architecture of the present disclosure can be associated with a service provider deployment. In other examples the architecture of the present disclosure would be equally applicable to other communication environments such as an enterprise wide area network WAN deployment The architecture of the present disclosure may include a configuration capable of transmission control protocol internet protocol TCP IP communications for the transmission and or reception of packets in a network.

As used herein in this Specification the term network element is meant to encompass any of the aforementioned elements as well as servers physical or virtually implemented on physical hardware machines physical or virtually implemented on physical hardware end user devices routers switches cable boxes gateways bridges load balancers firewalls inline service nodes proxies processors modules or any other suitable device component element proprietary appliance or object operable to exchange receive and transmit information in a network environment. These network elements may include any suitable hardware software components modules interfaces or objects that facilitate the network service header features operations thereof. This may be inclusive of appropriate algorithms and communication protocols that allow for the effective exchange of data or information.

In one implementation nodes with NSH capabilities may include software to achieve or to foster the functions discussed herein for providing the NSH related and load balancing related features functions where the software is executed on one or more processors to carry out the functions. This could include the implementation of instances of load balancing functions service header processors and or any other suitable element that would foster the activities discussed herein. Additionally each of these elements can have an internal structure e.g. a processor a memory element etc. to facilitate some of the operations described herein. In other embodiments these functions may be executed externally to these elements or included in some other network element to achieve the intended functionality. Alternatively these nodes may include software or reciprocating software that can coordinate with other network elements in order to achieve the functions described herein. In still other embodiments one or several devices may include any suitable algorithms hardware software components modules interfaces or objects that facilitate the operations thereof.

In certain example implementations the NSH related and load balancing related functions outlined herein may be implemented by logic encoded in one or more non transitory tangible media e.g. embedded logic provided in an application specific integrated circuit ASIC digital signal processor DSP instructions software potentially inclusive of object code and source code to be executed by one or more processors or other similar machine etc. . In some of these instances one or more memory elements can store data used for the operations described herein. This includes the memory element being able to store instructions e.g. software code etc. that are executed to carry out the activities described in this Specification. The memory element is further configured to store databases or metadata disclosed herein. The processor can execute any type of instructions associated with the data to achieve the operations detailed herein in this Specification. In one example the processor could transform an element or an article e.g. data from one state or thing to another state or thing. In another example the activities outlined herein may be implemented with fixed logic or programmable logic e.g. software computer instructions executed by the processor and the elements identified herein could be some type of a programmable processor programmable digital logic e.g. a field programmable gate array FPGA an erasable programmable read only memory EPROM an electrically erasable programmable ROM EEPROM or an ASIC that includes digital logic software code electronic instructions or any suitable combination thereof.

Any of these elements e.g. the network elements service nodes etc. can include memory elements for storing information to be used in achieving the NSH related and load balancing related features as outlined herein. Additionally each of these devices may include a processor that can execute software or an algorithm to perform the NSH related and load balancing related features as discussed in this Specification. These devices may further keep information in any suitable memory element random access memory RAM ROM EPROM EEPROM ASIC etc. software hardware or in any other suitable component device element or object where appropriate and based on particular needs. Any of the memory items discussed herein should be construed as being encompassed within the broad term memory element. Similarly any of the potential processing elements modules and machines described in this Specification should be construed as being encompassed within the broad term processor. Each of the network elements can also include suitable interfaces for receiving transmitting and or otherwise communicating data or information in a network environment.

Additionally it should be noted that with the examples provided above interaction may be described in terms of two three or four network elements. However this has been done for purposes of clarity and example only. In certain cases it may be easier to describe one or more of the functionalities of a given set of flows by only referencing a limited number of network elements. It should be appreciated that the systems described herein are readily scalable and further can accommodate a large number of components as well as more complicated sophisticated arrangements and configurations. Accordingly the examples provided should not limit the scope or inhibit the broad techniques of load balancing based on NSH metadata as potentially applied to a myriad of other architectures.

It is also important to note that the various steps described herein illustrate only some of the possible scenarios that may be executed by or within the nodes with NSH capabilities described herein e.g. load balancer of . Some of these steps may be deleted or removed where appropriate or these steps may be modified or changed considerably without departing from the scope of the present disclosure. In addition a number of these operations have been described as being executed concurrently with or in parallel to one or more additional operations. However the timing of these operations may be altered considerably. The preceding operational flows have been offered for purposes of example and discussion. Substantial flexibility is provided by nodes with NSH capabilities in that any suitable arrangements chronologies configurations and timing mechanisms may be provided without departing from the teachings of the present disclosure.

It should also be noted that many of the previous discussions may imply a single client server relationship. In reality there is a multitude of servers in the delivery tier in certain implementations of the present disclosure. Moreover the present disclosure can readily be extended to apply to intervening servers further upstream in the architecture though this is not necessarily correlated to the m clients that are passing through the n servers. Any such permutations scaling and configurations are clearly within the broad scope of the present disclosure.

Numerous other changes substitutions variations alterations and modifications may be ascertained to one skilled in the art and it is intended that the present disclosure encompass all such changes substitutions variations alterations and modifications as falling within the scope of the appended claims. In order to assist the United States Patent and Trademark Office USPTO and additionally any readers of any patent issued on this application in interpreting the claims appended hereto Applicant wishes to note that the Applicant a does not intend any of the appended claims to invoke paragraph six 6 of 35 U.S.C. section 112 as it exists on the date of the filing hereof unless the words means for or step for are specifically used in the particular claims and b does not intend by any statement in the specification to limit this disclosure in any way that is not otherwise reflected in the appended claims.

