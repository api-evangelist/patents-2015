---

title: Method for controlling access to electronic documents using locks
abstract: The present disclosure relates to a telecommunication method for controlling data access to a telecommunication server, the telecommunication server being connected to at least one first client terminal via at least a digital cellular telecommunication network, wherein the telecommunication server and the first client terminal communicate via a stateless protocol within at least a first communication session, the first client terminal being a battery powered device, the telecommunication server comprising an electronic document, the electronic document having a plurality of input fields for entry of electronic data, wherein a first lock and a session ID are assigned to the electronic document, the session ID being indicative of the first communication session, wherein the first lock is released by the telecommunication server upon ending the first communication session, the telecommunication server comprising multiple applications for accessing the electronic document, the telecommunication server further comprising a session control unit, wherein in a first access mode the session control unit is adapted to control access by the multiple applications to the electronic document using the first lock and the session ID, the method comprising receiving by the telecommunication server a first request from a first user of the first client terminal for accessing the electronic document, the first request being indicative of a first user ID of the first user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09600681&OS=09600681&RS=09600681
owner: SAP SE
number: 09600681
owner_city: Walldorf
owner_country: DE
publication_date: 20150304
---
The invention relates to computing systems and more particularly to a method for controlling data access in a telecommunication server.

The Representational state transfer REST architectural systems require that all knowledge about prior communication between a client and a server is kept on the server and the client or contained within the messages they exchange. Traditional data entry and data modification applications work on a temporary in memory version of an electronic document which is persisted on the server once it is sufficiently complete and consistent. However the life time of this temporary version is tied to a communication session between the client and the server which also controls pessimistic locks and reservations.

Various embodiments provide a method for controlling data access in a telecommunication server a telecommunication system a telecommunication server a mobile telecommunication device and a computer program product as described by the subject matter of the independent claims. Advantageous embodiments are described in the dependent claims.

In a first aspect the invention relates to a telecommunication method for controlling data access to a telecommunication server the telecommunication server being connected to at least one first client terminal via at least a digital cellular telecommunication network the telecommunication network wherein the telecommunication server and the first client terminal communicate via a stateless protocol within at least a first communication session the first client terminal being a battery powered device the telecommunication server comprising an electronic document the electronic document having a plurality of input fields for entry of electronic data wherein a first lock and a session ID are assigned to the electronic document the session ID being indicative of the first communication session wherein the first lock is released by the telecommunication server upon ending the first communication session the telecommunication server comprising multiple applications for accessing the electronic document the telecommunication server further comprising a session control unit wherein in a first access mode the session control unit is adapted to control access by the multiple applications to the electronic document using the first lock and the session ID. The method comprises 

In another aspect the invention relates to a telecommunication system comprising a telecommunication server and a client terminal the telecommunication server being connected to the client terminal via at least a first digital cellular telecommunication network wherein the telecommunication server and the client terminal communicate via a stateless protocol within at least a first communication session the client terminal being a battery powered device the telecommunication server comprising an electronic document the electronic document having a plurality of input fields for entry of electronic data wherein a first lock and a session ID are assigned to the electronic document the session ID being indicative of the first communication session wherein the first lock is released by the telecommunication server upon ending the first communication session the telecommunication server comprising multiple applications for accessing the electronic document the telecommunication server further comprising a session control unit wherein in a first access mode the session control unit is adapted to control access by the multiple applications to the electronic document using the first lock and the session ID wherein the telecommunication system is operable to execute the method as disclosed in one of the preceding embodiments.

In another aspect the invention relates to a computer program product comprising computer executable instructions to perform the method steps of the method of any one of the preceding embodiments.

In another aspect the invention relates to a mobile telecommunication device in communication with a telecommunication server via at least a digital cellular telecommunication network wherein the mobile telecommunication device is in communication with the telecommunication server via a stateless protocol the mobile telecommunication device being a battery powered device. The mobile telecommunication device is configured for 

In another aspect the invention relates to a telecommunication server in communication with at least one first client terminal the telecommunication server being connected to the first client terminal via at least a digital cellular telecommunication network wherein the telecommunication server and the first client terminal communicate via a stateless protocol within at least a first communication session the telecommunication server comprising an electronic document the electronic document having a plurality of input fields for entry of electronic data wherein a first lock and a session ID are assigned to the electronic document the session ID being indicative of the first communication session wherein the first lock is released by the telecommunication server upon ending the first communication session the telecommunication server comprising multiple applications for accessing the electronic document the telecommunication server further comprising a session control unit wherein in a first access mode the session control unit is adapted to control access by the multiple applications to the electronic document using the first lock and the session ID. The telecommunication server is configured for 

In another aspect the invention relates to a telecommunication method for controlling data access to a telecommunication server the telecommunication server being connected to at least one client terminal via at least a first digital cellular telecommunication network the first telecommunication network wherein the telecommunication server and the client terminal communicate via a stateless protocol the client terminal being a battery powered device. The method comprises 

In the following like numbered elements in the figures either designate similar elements or designate elements that perform an equivalent function. Elements which have been discussed previously will not necessarily be discussed in later figures if the function is equivalent.

The above features may have the advantage of centrally controlling and securing access to electronic documents. This is due to the fact that the locks are assigned at once to the data and not to applications. This may avoid repeating the present method for every application of the multiple applications. This may increase the performance access to the electronic documents and may save resources in the telecommunication system that would otherwise be required for repeating the locking approach for every application of the multiple applications.

The term telecommunication server as used herein refers to a computer server that is connected to a digital cellular telecommunication network.

Another advantage may be that the present method may be seamlessly integrated in existing systems. The introduction of durable locks is transparent to the user since the user has durable access to the same functionalities as with existing systems e.g. same document structure the way a document is displayed etc.

According to one embodiment the method further comprises concurrently receiving a second request for accessing the electronic document and the first request wherein the second request is received by the telecommunication server from a second user of a second client terminal of the at least one client terminal the second request being indicative of a second user ID of the second user wherein the set of locks further comprise a third lock in association with the second user ID for enabling the second user to access the form document and the data using the second user ID displaying by the second client terminal the electronic document entering second user data in at least part of the input fields of the displayed electronic document sending at least part of the second user data by the second client terminal during the first communication session using the second user ID and the identification address as a communication address concurrently receiving the at least part of the second user data and the at least part of the first user data concurrently performing steps k and l for the at least part of the first and second user data.

This embodiment may be advantageous as it may further increase the performance access to the electronic document by enabling concurrent and secure access to the electronic document using locks. This embodiment may further speed up the access processes to the electronic document compared to a sequential access to the electronic document. Also the network bandwidth of the telecommunication system may be saved in the telecommunication system as the transmission of data for each of the requester may be avoided. For example the electronic document to be displayed may be sent at once to all requesters instead of sending it separately for every requester. This may also reduce the data traffic in the telecommunication system.

According to one embodiment the method further comprises concurrently receiving a second request for accessing the electronic document and the first request wherein the second request is received by the telecommunication server from a second user of a second client terminal of the at least one client terminal the second request being indicative of a second user ID of the second user wherein the set of locks further comprise a third lock in association with the second user ID for enabling the second user to access the form document and the data using the second user ID displaying by the second client terminal the electronic document entering second user data in at least part of the input fields of the displayed electronic document sending at least part of the second user data by the second client terminal during the first communication session using the second user ID and the identification address as a communication address concurrently receiving the at least part of the second user data and the at least part of the first user data performing steps k and l for the at least part of the first and second user data in a first and second atomic operation respectively.

The term atomic operation refers to an operation which is allowed to start and finish without being interrupted.

This embodiment may further increase the secure aspect of the present method in that it may provide a controlled access at the level of each operation. For example the method may further comprise in response to determining that the first atomic operation is unsuccessfully completed preventing execution of the second atomic operation and releasing locks of the set of locks. This may for example stop suspicious access to the electronic document in subsequent atomic operations.

According to one embodiment the first lock is shared between the multiple applications wherein the first request is received via a first application of the multiple applications the method further comprising 

According to one embodiment the method further comprises repeating determining step i. and step ii. in a periodic basis.

These embodiments may further increase the access performance to the electronic document. For example they may speed up the process to access the electronic document by regularly canceling pending applications.

According to one embodiment the method further comprises rolling back changes caused by processing steps performed by the second application before the first lock becomes pending.

According to one embodiment the method further comprises receiving a second request for accessing the electronic document using the session lock in case the session control unit is in the second access mode rejecting the second request.

According to one embodiment the receiving by the telecommunication server of the user data comprises downloading the initial draft document at the client terminal in response to determining that the client terminal is not connected to a network using a first portion of the first identification address for receiving at least part of the user data at the client terminal forwarding the at least part of the user data to the telecommunication server via the first telecommunication network using a second portion of the first identification address wherein the second portion comprises a net work address generated in accordance with a communication protocol of the first telecommunication network.

This embodiment may be advantageous as it may further increase the performance access to the electronic document by for example avoiding multiple attempts to recreate and or refill the electronic document after each disconnection of the net work. This may result in saving of resources in the whole telecommunication system including the client terminal as well as the telecommunication server. For example this may save resources in the client terminal as this may avoid multiple attempts to access the initial draft document and refill the initial draft document in case of a disconnection of the client terminal from the network. Also the network bandwidth of the telecommunication system may be saved in the telecommunication system as the transmission of the data that may be caused by the refilling process may be avoided this may also reduce the data traffic in the system .

According to one embodiment the receiving by the telecommunication server of the user data is performed using the first identification address wherein the first identification address comprises at least one of an address determined in accordance with a communication protocol of a second telecommunication network to which the client terminal and the telecommunication server are connected a database entry associated with the initial draft document on the telecommunication server.

This may further increase the performance access to the electronic document in that alternative access methods are provided. For example an offline direct access to the telecommunication server without need of a network connection may be provided using e.g. an interactive direct without network access session to the telecommunication server and using the database entry associated with the initial draft document in order to fill input data in the initial draft document .

According to one embodiment the first telecommunication network is a public net work and wherein the second telecommunication network is a private intranet net work.

This embodiment may further increase the performance access to the initial draft document as it may provide different technical alternative access methods such that the probability to lose access to the initial draft document is mitigated. This is in contrast to the case where the first and second telecommunication networks are both of the same technical nature e.g. public networks.

According to one embodiment the receiving of the at least part of the user data at the client terminal is performed in multiple login sessions to the client terminal from a user of the client terminal.

A login session is the period of activity between a user logging in and logging out of the client terminal. This embodiment may further increase the performance access to the initial draft document.

According to one embodiment the user data and or the modifications to the set of user data are received concurrently from multiple client terminals. For example the at least one client terminal may comprise multiple client terminals wherein each client terminal of the client terminals is assigned a corresponding portion of the initial draft document to be filled by data received from that client terminal. Filling the initial draft document or the edit draft copy concurrently by the multiple client terminals may speed up the process of filling such documents.

According to one embodiment determining by the telecommunication server that the set of user data is completely received is performed automatically or upon receiving a completion notification from the client terminal.

According to one embodiment the second identification address comprises an URL for accessing the electronic document using the first telecommunication network. This may provide a seamless integration of the present method in existing systems.

According to one embodiment the receiving by the telecommunication server of the modifications to the set of user data comprises downloading the edit draft copy at the client terminal in response to determining that the client terminal is not connected to a network using a first portion of the third identification address for receiving at least part of the modifications at the client terminal forwarding the at least part of the modifications to the telecommunication server via the first telecommunication network using a second portion of the third identification address wherein the second portion comprises a network address generated in accordance with a communication protocol of the first telecommunication network.

According to one embodiment the method further comprises determining by the client terminal that the first telecommunication network is an untrusted network and sending by the client terminal the modifications and or the user data using the third and or first identification address respectively wherein the first and third identification addresses comprise addresses determined in accordance with a communication protocol of a second telecommunication network to which the client terminal and the telecommunication server are connected wherein the second telecommunication network is a private network. The second telecommunication network is a private trusted network. This may further increase the secure aspect of the present invention by switching between networks to have access to the trusted one.

The client terminals A N are connected to at least one telecommunication server via one or more networks A C. The networks A C may include similar or dissimilar networks mixed in any combination. For example client terminal A is connected to the telecommunication server via the network A while the client terminal B is connected to the telecommunication server via two networks A and B. In another example the client terminal A N may be connected directly e.g. via Ethernet link D to the telecommunication server .

A client terminal of the one or more client terminals A N may include multiple physical interfaces including at least one or more physical interface for each different network to which the client terminal is connected. And the telecommunication server may have one or more physical interfaces for connecting to networks A C.

Networks A C may be different or same types of networks such as for example an Ethernet network a Multimedia over Coax Alliance MoCA network a HomePNA Home Phoneline Networking Alliance network an Ethernet over powerline network HomePlug a wireless network 3G EDGE UMTS LTE or any other type of network enabling a client terminal A of the client terminals A N to connect to the telecommunication server .

For example the one or more client terminals A N may form a front end of the telecommunication system wherein the front end may function as a portal in which front end users may access and edit back end data on the telecommunication server .

The telecommunication server and client terminals A N may communicate via a stateless protocol such as the Open Data Protocol OData using HTTP or HTTPS. The stateless protocol is a communications protocol that treats each request e.g. received via a client terminal A as an independent transaction that is unrelated to any previous request so that the communication consists of independent pairs of request and one or more responses of the request e.g. for one response for one request . A stateless protocol does not require the stateless client terminal A to retain session information or status about each communications partner for the duration of multiple requests in particular no session information of the telecommunication server .

In one example the telecommunication system may further include a middleware not shown that may function as a gateway and or interface between the client terminals A N and the telecommunication server . The middleware may for example be used for converting data requests from the client terminals A N into requests recognized by the telecommunication server . The middleware function may be an intrinsic function of the telecommunication server to convert or interpret the requests from the client terminals.

The processor may be a microprocessor a single core processor a multicore processor or the like. The processor may control the operation of the mobile telecommunication device . The transceiver can be implemented as a transmitting and receiving component of the mobile telecommunication device . The mobile telecommunication device may further comprise a display device which displays characters and images and the like. For example the display device may be a touch sensitive display screen.

Using the transceiver the mobile telecommunication device may exchange data with the telecommunication server via one of the networks A C.

Memory is configured to store at least one application that is executable on the processor . For example the application may comprise a web browser. When the application is executed on the processor the application causes the processor to display on the display device a graphical user interface e.g. a web browser interface. Memory may also temporarily store data entered by user in the mobile telecommunication device in offline mode when the mobile telecommunication device is not connected to any network A D .

For example the mobile telecommunication device may be operable to receive a request or input data from a user e.g. via the graphical user interface in order to request data of an electronic document from the telecommunication server . In response to the receiving of the request the mobile telecommunication device may send a request e.g. HTTP request to the telecommunication server for requesting the data of the electronic document. The request may be performed in accordance with at least one API defined in the telecommunication server . The request may comprise an unique identification address of said electronic document.

The identification address may be defined or generated in accordance with a communication protocol of the network A C that is used by the mobile telecommunication device to send the request to the telecommunication server . For example the identification address may comprise an IP address media access control MAC address a URL a database entry an Ethernet address etc.

Telecommunication server typically includes a variety of computer system readable media. Such media may be any available media that is accessible by telecommunication server and it includes both volatile and non volatile media removable and non removable media.

Telecommunication server may also communicate with one or more external devices such as a keyboard a pointing device a display etc. one or more devices that enable a user to interact with telecommunication server and or any devices e.g. network card modem etc. that enable telecommunication server to communicate with one or more other computing devices. Such communication can occur via I O interface s . Still yet telecommunication server may communicate with one or more networks A C such as a local area network LAN a general wide area network WAN and or a public network e.g. the Internet via network adapter that may comprise a Wireless and or mobile network adapter. As depicted network adapter communicates with the other components of telecommunication server via bus .

Memory system is configured to store a plurality of applications A N that are executable on the processor . For example the memory system may comprise an operating system as well as application programs. Memory system or storage system may further store an electronic document . The plurality of applications may be adapted to access or control access or provide access to the electronic document .

The term electronic document or initial draft document or edit draft copy as used herein refers to electronic data for use and or to be entered in an electronic form that represents the electronic document. The electronic form may or may not be part of the electronic document. The electronic form may comprise for example a web form or HTML form that may be displayed a web page for enabling a user to enter at least part of the electronic data that is received by a server e.g. the telecommunication server for processing. The input fields may comprise checkboxes radio buttons or text fields that may be fill out by a user. For example the electronic form when displayed on the client terminal A N may be used to enter data to configure an engine or a machine connected and or controlled by the telecommunication server.

When initially stored in memory the electronic document may comprise only the electronic form that represents the electronic document as the electronic data may be subsequently received from a user of the electronic document e.g. by entering data in input fields of the electronic form. For example memory stores the electronic document means that the electronic form that represents the electronic document as well as the electronic data are stored in the memory . In another example the electronic form may be stored in the memory while the electronic data may be stored in a database of the telecommunication server . In a further example the storage of the electronic document comprises storing the electronic data only.

For example the telecommunication server may comprise a web server. The web server may accept HTTP requests from client terminal A N e.g. to access the electronic document and provide them with the HTTP responses together with electronic data of the electronic document which are usually web pages or web forms. For example the electronic data is transferred separate from the electronic form e.g. web pages by distinct HTTP re quest response pairs. In another example the electronic data and the electronic form are sent together in a response.

The electronic document may be represented by an entity graph that comprises a hierarchical tree structure of multiple entities with a root entity and subtrees of children represented as a set of linked entities or nodes . Each entity of the multiple entities may correspond to one or more input fields of the electronic document. The hierarchical structure may for example depend on the time at which a given input field of the electronic document is to be filled. For example if a first input field has to be filled before a second input field then the entity of the second input field may be classified as children of the entity of the first input field. In another example the hierarchical tree structure may be defined and received from a user of the electronic document. The root entity may for example define the service that is associated with the electronic document e.g. data control service.

The electronic document may be assigned or used for a given service such as a data control service for controlling the function of a given engine by the telecommunication server or a telecommunication service for recording user data on the telecommunication server . As soon as requested an instance of the electronic document may be assigned by an application A of the multiple applications A N to the requester of the electronic document .

For example the electronic document or the instance of the electronic document may be accessed by a client terminal A N via a network B of the one or more networks e.g. using an identification address as described above with reference to . This network B may for example be a public network such as internet.

The telecommunication server may further store e.g. using application A a status parameter in association with the electronic document . The status parameter may have a first second or third value. The first value indicates a first state of the electronic document in which the electronic document is not filled e.g. no data of the electronic document . The second value indicates a second state of the electronic document in which the electronic document is completely filled. The third value indicates a third state of the electronic document in which the electronic document is being requested for modifying at least part of the data filled in the electronic document .

For example the status parameter may be defined as an indicator or variable e.g. called EditState. EditState may have the following values.

Electronic Document is not filled EditState 0 first value which corresponds to an initial draft document as described below 

Electronic Document is completely filled EditState 1 second value Electronic Document being edited or requested for changing its content EditState 1 third value which corresponds to an edit draft copy as described below .

The plurality of applications A N may comprise a lock application B that administers or manages adding and or removing . . . locks in a lock table stored in the memory . The plurality of applications A N comprises a session application C or session control unit that controls or manages for example data requests or responses e.g. for the electronic document during a given communication session e.g. first communication session described below with reference to between the client terminal A N and the telecommunication server . For example the session application C may assign a session lock in association with a session ID to the electronic document in order to access at least part of the electronic document using the session lock during that communication session only. The session ID is indicative of the communication session. That is as soon as that communication session is ended the session lock is released. The usage of the session lock may restrict access to the electronic document for one or more holders of the session lock. A corresponding lock entry of the session lock is stored e.g. in association with a holder ID of the session lock in the lock table by the lock application B.

Once the electronic document is locked with a given one or more locks the electronic document is protected against access by other users processes or sessions different from the owner or holder of that given lock. A session may be owner of a lock in that the session application C uses the session lock for that session in order to access a document e.g. the electronic document to which the session lock is assigned.

In a first access mode the session application C also referred to as session control unit is adapted to control access by at least part of the applications A N to the electronic document using the session lock and the session ID.

The term lock as used herein refers to a data structure that indicates that a particular application or user owner has been granted certain rights with respect to a resource e.g. an electronic document or data entries e.g. IDs from number ranges contained in the electronic document to which the lock is assigned.

For example a first user of client terminal A may log into the client terminal A any may initiate a first communication session between the client terminal A and the telecommunication server . For that the first user may have to authenticate only once at the initiation stage e.g. when sending an initiation request with the telecommunication server and in all subsequent requests to the telecommunication server during the same first communication session there is no need for authenticating again. The first communication session may for example be ended in response to logout from the client terminal A by the first user .

A communication session refers to information interchange between the client terminal and the telecommunication server with the information interchange having a defined start and end. The start may be defined for example by a request for authentication with the telecommunication server. For example the first request from the client terminal A to access the electronic document of step may be used for authentication with the telecommunication server. A series of requests to the telecommunication server originating from the same user e.g. at the same browser may be part of the same communication session. The end may be defined by e.g. closing a browser used to perform the request or a logout from the client terminal A or a session timeout.

In step the telecommunication server may receive a first request from the first user of the first client terminal A for accessing the electronic document e.g. after authentication with the telecommunication server . The first request is indicative of a first user ID of the first user . For example the first user ID may comprise a login name used by the first user in order to log into the client terminal A. In another example the first user ID may comprise an indication of the first user in combination with an indication of the client terminal A e.g. IP address of the client terminal A .

For example the first user A may request a service that is provided by the telecommunication server such as the data control service that is associated with the electronic document . The first request may be performed in accordance with a communication protocol that is supported by e.g. network B that is used to access the electronic document . For example the first request may be a HTTP request generated via a web browser of the client terminal A e.g. the first user may use a HTTP link for requesting indirectly the electronic document . The first request may be generated or created at the client terminal A using for example HTTP methods such as GET POST PUT PATCH and DELETE. Such HTTP methods may be used as REST service communications by the OData protocol.

In step and in response to receiving the first request the telecommunication server may create and assign e.g. using the application A a set of locks or enqueue context to the electronic document . For example as soon as requested an instance of the electronic document may be created and assigned by application A to the first user of the electronic document hereinafter refers to the instance of the electronic document . For example the electronic document may be assigned to the first user taking into account user settings of the first user such as the language used by the first user such that the electronic form of or that represents the electronic document may contain information in the language of the first user . In another example the electronic form may be adapted to contain more or less input fields dependent on the location of the first user . If for example the first user is located in Europe a field concerning the country ID or country name may not be added to the electronic form. In another example the electronic document may be usable or used by any of the users e.g. no need of an instantiation of the electronic document .

For example step of creation and assignment of the set of locks may be performed if the received first request is an initial request to access the electronic document for the first time. That is if the first request is a subsequent request that is received from the same user to modify the electronic document e.g. modify what has been input in an initial access to the electronic document by the same user the set of locks would have been already created and assigned to the electronic document and no need to repeat it again.

The set of locks comprises at least a second lock that may only be released by the telecommunication server e.g. using application A upon deleting the electronic document . That is the second lock may be more durable than the session lock e.g. first lock which is tied to the first communication session lifetime. However the session lock is released as soon as the first communication session is ended.

The set of locks may be assigned a context state which may have two values. A first value of the state indicates that the set of locks is used to access the electronic documents e.g. second operation mode and a second value of the state indicates that set of locks is not used to access the electronic document e.g. first operation mode . For example each user of a set or list of users that are allowed to access the electronic document may access the electronic document e.g. during the second operation mode using the second lock.

In step the telecommunication server may save e.g. using the lock application B the second lock in association with at least the first user ID e.g. in the lock table for enabling the first user to access the electronic document i.e. the electronic form and the electronic data using the first user ID the first user may be the owner of the second lock .

In step the session application C may be configured by the telecommunication server to switch from the first access mode to a second access mode. In the second access mode the session application C is configured to access the electronic document using the second lock and the first user ID instead of using the session lock as described above.

In step the telecommunication server may generate e.g. using application A an identification address of the electronic document in accordance with a communication protocol of the network B that is used for communication between the client terminal A and the telecommunication server .

In step the telecommunication server may send the identification address and or the electronic document to the first client terminal A as a response to request of step . Sending the electronic document comprises sending the electronic form and the electronic data in a same response or in respective responses.

In response to receiving the identification address and or the electronic document the first client terminal A may display in step the electronic document e.g. displaying the electronic form that contains the electronic data . For example the electronic form may be received as part of the electronic document and or may be stored locally in the first client terminal A such that only electronic data may be transmitted and received.

In step first user data may be entered and received by the first client terminal A in at least part of the input fields of the displayed electronic document.

In step the first client terminal A may send at least part of the first user data during the first communication session. The submission may indicate or may be performed using the first user ID and the generated identification address as a communication address.

Upon receiving in step by the telecommunication server the at least part of the first user data from the first client terminal the session application C may be configured to save the at least part of the first user data in the electronic document using the first user ID and the second lock. That is the first user is allowed to store or to modify electronic data of the electronic document . The received at least part of the first user data may be stored as at least part of the electronic data. In this step the at least part of the first user data may be prepared to be written on the database insert update delete database statements .

In step the session application C may be configured to switch back to the first access mode in order to commit the at least part of the first user data using the first access mode. The commit comprises releasing the session lock. In the first access mode the commit may be performed using the session lock. For example step may be performed in response to receiving a commit request from the first user . In another example step may be automatically performed once the first communication session is ended. Switching back to the first operation mode in order to perform the commit may preserve a regular behavior and release the session locks upon commit or perform the standard error handling.

For example a second user may also be owner of the second lock such that the second user may have access to the electronic document . In this case the second lock is stored in association with the first user ID and the second user ID such that both the first and second users are allowed to access the electronic document.

Owners of a lock of the set of locks may also comprise one or more applications of the multiple applications A N. For example a same user of a client terminal e.g. A may use two different applications of the multiple applications A N for performing different accesses to the electronic document . These two different applications may for example be owners of the second lock. And what is described herein for different users first and second user being owners of the second locks may hold true for the two different applications.

In step which may be step the telecommunication server may concurrently receive a second request for accessing the electronic document and the first request. The second request is received by the telecommunication server from the second user of a second client terminal B. The second request is indicative of a second user ID of the second user. In another example the second request may be received while the session control unit is operating in the second access mode e.g. after switching step . For example the electronic document may be accessed using the second lock and the second user ID in the second access mode.

In step upon receiving the electronic document e.g. in step the telecommunication server sends the identification address and or the electronic document to both the first and second client terminals A B the second client terminal B displays the electronic document e.g. in parallel to the displaying of the electronic document in the first client terminal A.

In step second user data may be entered in at least part of the input fields of the displayed electronic document and second user data is received at the second client terminal B.

In step the second client terminal may send at least part of the second user data e.g. during the first communication session or another communication session using the second user ID and the identification address as a communication address.

In step the telecommunication server may concurrently receive the at least part of the second user data and the at least part of the first user data. And may concurrently perform steps and for the at least part of the first and second user data. In another example steps and may be performed for the at least part of the first and second user data in a first and second atomic operation respectively.

As described above regular enqueue locks or locks shall be decoupled from a given communication session e.g. ABAP session lifecycle resulting in Durable Enqueue Locks or durable locks . In this context Durable shall express the capability to preserve an enqueue lock even after ending the communication session or when committing data as an intermediate step to persist the state of an electronic document e.g. . Thus Durable Enqueue Locks may be kept across multiple OData requests of a client e.g. each processed in its own session.

Regular enqueue locks may become durable if they are associated with a lock owner different from the ABAP session s lock owner the Enqueue Context above set of locks which may comprise a pair of one dialog and one update lock owner . Once an enqueue context is attached to the communication session processing an OData request all subsequent lock modules enqueue or dequeue their locks with that context. The locks may be restricted to the update owner the one used in a commit phase since the communication session and its dialog owner ends with request processing.

For example durable enqueue locks may not be retained in fatal error situations enqueue server e.g. lock application B crash or restart. In these cases the electronic document is accessed using the basic optimistic locking model e.g. based on eTags. The same behavior occurs once a lifecycle service releases all expired durable enqueue locks associated with the lock context of the electronic document. For that an enqueue context state may be used to enable a processing logic e.g. application A recovering formerly set locks and reservations in the event durable enqueue locks vanished. Enqueue contexts are reset to initial state after restarting the enqueue server e.g. lock application B or when dequeuing all associated locks by intent or due to error situations .

Expiration logic like treated by the ABAP session in a stateful approach may be provided independently. For example lifecycle services e.g. of the telecommunication server that may manage services of the telecommunication server . The lifecycle service may maintain information associated with an application e.g. synchronizes data between multiple different data sources and applications may be used with handlers being triggered in short periodic intervals e.g. once per minute to avoid pending locks. For using durable enqueue locks the infrastructure e.g. telecommunication system may provide means to implement and register such handlers as well as to start them by a time based trigger mechanism.

Basic operations shall be provided as an ABAP fa ade to kernel functions to enable these enqueue contexts and their durable locks e.g. as described in . The method steps described above describe at least part of these operations.

The method and embodiments described above for the electronic document may be applied to initial draft document and edit draft copy as obtained from the electronic document as described below.

During stage the telecommunication server may still function in accordance with the first operation mode e.g. where the session lock is used to access the electronic document and the initial draft document if it is already created .

For example draft application E may receive a request to create the initial draft document out of the electronic document as described below. In the case where the initial draft document already created the request may for example be a request to modify or to further complete filling of the initial draft document.

The request may comprise details as described above such as the GUID of the electronic document or of the initial draft document if it is already created . During the stage the enqueue context may be created and assigned to the initial draft document if it is not already created . This may be done by performing operation by draft application E that controls the session application C accordingly . Upon creating the enqueue context e.g. set of locks for the initial draft document the draft application E may control the session application in order to perform the AttachEnqContext operation using an index ID of the enqueue context that is created in stage as described above. This operation may switch the stage to stage e.g. second operation mode of the telecommunication server . At this stage the initial draft document may be created or modified if created before as described below with reference to Also at this stage locks of the enqueue context may be used to access the initial draft document and the electronic document instead of e.g. the session lock. At stage draft application E and application A may communicate as described below in order to handle the initial draft document. For example the draft application E may be an owner of a lock second lock of the electronic document in order to use the electronic document to create the initial draft document. In another example the draft application E may control the application A that is already owner of lock of the electronic document in order to use the electronic document to create the initial draft document. The steps performed at the stage may be the method as described with reference to the initial draft document below. In this case it is shown more details about the usage of the locks for performing similar method described below.

Operation may be performed as described above for switching to the stage first operation mode . This may be done by the draft application E that controls the session application C to perform the switch. Operation may be further executed during stage using session lock of the initial draft document in order to commit data that have been for example entered for filling input fields of the initial draft document.

In step the telecommunication server may receive a request from the client terminal A to access the electronic document .

For example a user A may request a service that is provided by the telecommunication server such as the data control service that is associated with the electronic document . The request may be performed in accordance with a communication protocol that is supported by e.g. network B that is used to access the electronic document . For example the request may be a HTTP request generated via a web browser of the client terminal A e.g. the user may use a HTTP link for requesting indirectly the electronic document . The request may be generated or created at the client terminal A using for example HTTP methods such as GET POST PUT PATCH and DELETE. Such HTTP methods may be used as REST service communications by the OData protocol. In another example the request may be generated using WebSockets and or generated in accordance with an intranet protocol such as RFC for OData protocol.

In step the telecommunication server may determine if the received request is a first request to access the electronic document or not. If the received request is a first request for accessing the electronic document the telecommunication server may set e.g. using application A in step the status parameter to the first value.

For example an instance of the electronic document may optionally be created and tagged as being assigned to the user who requested the electronic document in the following the electronic document is also referred to as the instance of the electronic document . For example the electronic document may be assigned to the user taking into account user settings of the user such as the language used by the user such that the electronic form of or that represents the electronic document may contain information in the language of the first user . In another example the electronic form may be adapted to contain more or less input fields dependent on the location of the user . If for example the user is located in Europe a field concerning the country ID or name may not be added to the electronic form. In another example the electronic document may be usable or used by any of the users e.g. no need of an instantiation of the electronic document .

In step the telecommunication server may determine whether the status parameter has the first value or not. If the status parameter has the first value steps may be performed otherwise steps may be performed.

The telecommunication server may determine in step whether an initial draft document that comprises content of the electronic document is previously created or not. In step the telecommunication server may create the initial draft document having at least the content the electronic document if the initial draft document is not created. The initial draft document may for example be an empty copy of the electronic document i.e. has no data filled in the fields of the electronic document e.g. no electronic data. In another example the initial draft document may have additional default data that is usually filled in some default fields of electronic documents such as electronic document .

In step the telecommunication server may determine whether an identification address is assigned to the initial draft document or not such that a client terminal A N may access the initial draft document using the identification address. In step the telecommunication server may assign a first identification address to the initial draft document for accessing the initial draft document if the first identification address is not assigned to the initial draft document or if the initial draft document is not assigned an identification address e.g. in accordance with the present method . The first identification address may be generated in accordance with a communication protocol of a network C that is different from the network B that is used to request or access the electronic document . In another example the first identification address may be generated in accordance with a communication protocol of network B that is the same as the one used to request the electronic document .

In step at least the client terminal A may display the initial draft document e.g. the client terminal A may display the electronic form of the initial draft document and electronic data in fields of the electronic form that have been e.g. previously filled on the client terminal A. For example the client terminal A may receive a response to the request from the telecommunication server . The response may comprise the initial draft document and or an indication of the first identification address e.g. for a subsequent use . The initial draft document may be displayed on the graphical user interface of the client terminal A e.g. with an indication of the first identification address.

For example other client terminals e.g. B and C may display the initial draft document such that entries of data may be filled and received at the telecommunication server concurrently from the client terminals A C. For example the initial draft document may be split into portions corresponding to respective client terminals A C wherein each portion of the initial draft document may be editable on the corresponding client terminal A C and may be read only on the other non corresponding client terminals.

The client terminal A may receive user data e.g. as entries into input fields of the initial draft document and may send the user data to the telecommunication server . The user data may be received during one or more login sessions to the client terminal A. That is a user of client terminal A may login for a first time period enter a portion of data in the initial draft document and log out then login again for a second time period enter another portion of data and so forth. The one or more logins sessions may belong to one or more communication sessions between the client terminal A and the telecommunication server .

In step the telecommunication server may receive from the client terminal A user data and may save the received user data in the initial draft document that is stored in the telecommunication server . This step may be repeated as soon as user data are received or entered by the user in the initial draft document at the client terminal A. For example the client terminal A may be configured to send the user data in a regular time interval e.g. every minute the client terminal may check if new user data are entered may then send them to the telecommunication server .

In step the telecommunication server may determine whether all data required to completely fill the initial draft document is received or not. For example in order to be complete it may be required that the initial draft document may comprise a given set of user data e.g. that fills all or part of the input fields of the initial draft document. For example the telecommunication server may check that the whole set of user data is in the initial draft document e.g. that all the input fields or the part of input fields are filled . In addition the telecommunication server may optionally check for consistency between data of different fields of the initial draft document.

If the set of user data is completely received in that it is saved in the initial draft document and optionally an activation has been requested by the client terminal A or by each of the client terminals A C that jointly share different portions of the initial draft document the telecommunication server may in step set the status parameter to the second value copy the initial draft document into the electronic document assign a second identification address to the electronic document for access via a network e.g. B to the electronic document and delete the initial draft document. The second identification address may be different from the first identification address in that it may be generated in accordance with a communication protocol of the network B that is different from the network associated with the first identification address. In another example the second identification address may be the same as the first identification address. The telecommunication server may for example sends a message to the client terminal indicating the second identification address and that the initial draft document is completed. In another example the client terminal A may determine automatically whether the initial draft document is completed.

In step the telecommunication server may determine if the status parameter has the second value or the third value or not. If the status parameter has the second value or the third value steps may be performed. The status parameter having the second value means that the received request in step is for modifying or updating the existing content of the electronic document . In this case the request indicates the second identification address and or first identification address. In case the first identification address is indicated the request may be redirected to the second identification address since the initial draft document is deleted.

The telecommunication server may determine in step whether an edit draft copy of the electronic document is previously created or not. In step the telecommunication server may create the edit draft copy of the electronic document if the edit draft copy is not created.

In step the telecommunication server may determine whether an identification address is assigned to the edit draft copy or not. In step the telecommunication server may assign a third identification address to the edit draft copy for accessing the edit draft copy if the third identification address is not assigned to the edit draft copy or if the edit draft copy is not assigned an identification address e.g. in accordance with the present method and may set the status parameter to the third value if the status parameter has the second value. The third identification address may be generated in accordance with a communication protocol of a network A that is different from the networks B and C that are used to request or access the electronic document and the initial draft document. In another example the third identification address may be generated in accordance with a communication protocol of network B that is the same as the one used to request the electronic document . In another example the third identification address may be generated in accordance with a communication protocol of network C that is the same as the one used to request the initial draft document.

In step at least the client terminal A may display the edit draft copy on the client terminal A. For example the client terminal A may receive a response to the request from the telecommunication server . The response may comprise the edit draft copy and or an indication of the third identification address e.g. for a subsequent use . The edit draft copy may be displayed on the graphical user interface of the client terminal A e.g. with an indication of the third identification address.

The client terminal A may receive modifications to the set of user data e.g. in input fields of the edit draft copy and may send the modifications to the telecommunication server . The modifications may be received during one or more login sessions to the client terminal A. That is a user of client terminal A may login for a first time period enter first modifications in the edit draft copy and log out then login again for a second time period enter other modifications and so forth. The one or more logins sessions may belong to one or more communication sessions between the client terminal A and the telecommunication server .

In step the telecommunication server may receive the modifications to the set of user data from the client terminal A and modify the edit draft document using the received modifications. This step may be repeated as soon as modifications are received or entered by the user in the edit draft copy at the client terminal A. For example the client terminal A may be configured to send the modifications in a regular time interval e.g. every minute the client terminal A may check if new modifications are entered may then send them to the telecommunication server .

In step and in response to receiving a save or an activate modification request from the client terminal A the telecommunication server may set the status parameter to the second value copy the edit draft copy into the electronic document and delete the edit draft copy.

For example an application E of the plurality of applications A N may be used by the telecommunication server to access or control access or provide access to the initial draft document and the edit draft copy.

Steps to may be repeated in one or more consecutive communication sessions between the client terminal A and the telecommunication server using at least one of the first second and third identification addresses. For example the client terminal A may establish a first communication session with the telecommunication server and steps may be performed and the first communication session may be closed. After that the user may establish a second communication session with the telecommunication server and steps may be performed again and so forth. For example within a same session e.g. the first communication session the user may have one or more login sessions into the client terminal A. For example for the request of step the user may use one of the identification addresses that are available at the client terminal A if a document e.g. edit draft copy to which the identification address is assigned is not existing the request may be redirected using an address of the electronic document or the one of the initial or edit draft copy if it exists.

A communication session refers to information interchange between the client terminal and the telecommunication server with the information interchange having a defined start and end. The start may be defined for example by a request for authentication with the telecommunication server. For example the request from the client terminal A to access the electronic document of step may be used for authentication with the telecommunication server. A series of requests to the telecommunication server originating from the same user e.g. at the same browser may be part of the same communication session. The end may be defined by e.g. closing a browser used to perform the request.

The client terminal may comprise a user interface e.g. of applications in S 4HANA that may be generated by an application of the client terminal . The user interface may be browser based and available in a responsive design on multiple devices. The browser may enable access to multiple applications which are managed by a shell . Within the browser shell the Fiori Launchpad is run to start the application and enable cross application services like search navigation application favorites and document bookmarks notifications and tasks or user profile related functions. The role based shell content is based on application catalogs of the multiple applications whose entries are associated with user roles that refer to required authorizations in the draft logic . For certain mobile devices a player like the Fiori Client is provided which encapsulates the browser s behavior in order to e.g. optimize the cache strategy in mobile networks or to enable native device capabilities.

Beyond application specific UI artifacts the client terminal may enable reuse for efficient and consistent development using component . Reuse can be differentiated in simple and complex cases. For the simple reuse case development artifacts are contained in reuse library referenced from it and instantiated within the application. In contrast complex reuse establishes autonomous components that potentially interact with their own OData service.

For any of these artifacts it is beneficial to exploit information anyway consistently defined in the backend e.g. in Core Data Services CDS the global term catalog or the data dictionary. Thus such information and content has to be transferred with the backend service as annotations or special entities. UI5 controls generically render and behave with respect to annotated service metadata and data to introduce e.g. translated UI texts value helps or field control. The communication over HTTP s Web Socket is stateless following REST paradigms by focusing on the OData protocol as described in more details below.

The gateway enables a decoupled access to the backend server s logic and data shell content and layered UI configurations or application metadata. The gateway targets at harmonized access by introducing most if not all of the communication using the OData protocol in a stateless REST based manner. OData services are exposed on a web tier either using HTTPS short term as technical protocol or considering WebSockets as a mid term option for highly interactive and collaborative scenarios.

The gateway comprises a controller that relates to OData services implemented by model and data providers. For Fiori applications and its data service model is typically tailored to a certain application design. However it may be reused in a family of similar applications or for application variants that e.g. address different device channels. The model is a projection of the underlying electronic document the actual data persistence or the temporary data in the draft persistence.

However the data persistence is not directly mapped to service model . It is first modeled in CDS interface views in particular basic views of normalized core or draft entities. These CDS views are the source for creating SADL based OData Services supporting a de normalized projection to OData entities. The SADL based OData service is used for complex transactions to access data by SQL derived from the views in pure read only scenarios. In transactional write scenarios the service calls draft infrastructure of the draft logic to accomplish intermediate draft documents or copies and thereby stateless interactions. In addition it is possible to directly call the underlying application logic e.g. A e.g. for simple task enabling applications.

A separate set of UI configuration controllers of the gateway control access to metadata like layered UI configurations and personalization application catalogs and descriptions BOM bill of material or semantic objects and navigation targets.

The draft logic may comprise an application logic such as application A . An implementation of the application logic may exist based on a stateful programming model. While calling this stateful logic directly used for single requests in task enabling application but not for the series of requests required in complex transactions. Instead a stateless processing of a draft document is introduced. However even the draft may incorporate parts of the application logic e.g. for incremental creation of documents or in general for an acceptable usability for end users editing a draft.

The application logic is emphasized as Stateless Enablement which refers to application coding disassembled from the stateful chunk to be called in small units from the draft infrastructure . The stateless enablement targets at extracting side effect free functionality for validations and preparations . Preparations are meant to initialize draft entity data in the course of gradually entering data in the application UI. The purpose of validations is to increase the user comfort and return warning messages specific to already entered data.

With this approach a stateless enablement as the interface with the draft document or copy can be accomplished in an evolutionary approach adding more preparations and validations over time. Though preparations that are mandatory for the interaction flow and gradual document creation must be tackled with highest priority there is still a chance to mitigate their transition by using the soft state.

The third important function in the relation between draft and application logic is the activation logic . The activation logic may be a broad API that receives and processes a finalized draft document or copy at once. The draft copy or document is activated to become an active electronic document e.g. copying the content of the draft copy into the electronic document in the actual data persistence and deleted thereafter.

In traditional data entry applications the life time of a modified electronic document is tied to a session lifecycle which also controls pessimistic locks and reservations.

With the present exemplary method draft documents are stored in the database. Where required the draft document receives the logical ownership of pessimistic locks and reservations. The draft copies enable stateless interactions.

The draft state is an integral part of the electronic document s life cycle. The draft infrastructure allows to add an initial draft document as well as an edit draft copy state to existing electronic documents. At its core draft logic such as draft application E provides the OData functions derived from a draft state model. The draft logic stores the initial draft document or edit draft copy with each modifying request in order to enable the above formulated stateless communication paradigm. The draft logic and its core choreography shall be generated in a consistent way. It establishes the handling of transactions and lock contexts as well as offers callbacks to the stateless enabled application logic for validations and preparations as well as the application logic upon draft activation. The draft logic may use a Business Object Processing Framework BOPF introducing an observer pattern to react to user entries with specific preparations and validations.

Since drafts initial draft document and edit draft copy and locks of the drafts are decoupled from the Advanced Business Application Programming ABAP communication session in that the drafts and locks are independent of whether the communication session is ended or not and memory the draft infrastructure may comprise lifecycle services that handle expirations and notification events. Upon expiration the associated drafts or locks are removed.

The draft model shall be generated with respect to normalized core entity views. Modeling the draft close to the application not only enables various projections for application UIs and eases the activation logic and interface. Such a draft can also be used in extended scenarios like forward error handling staging of master data import of data from external formats or offline support.

The backend server may further comprise an interface for accessing drafts initial draft document and or edit draft copy persisted or stored in database and for accessing electronic documents persisted or stored in database .

Additionally it can be created based on another referenced electronic document of the same or a different type as the electronic document by calling the action identified in property NewAction of the annotation Common.DraftEnabled on the entity container.

The initial draft document may be empty or may be pre filled with default values derived from system preferences user preferences or from related documents e.g. create an order for a product selected from a catalog .

The draft logic e.g. draft application E may request from the application logic such as application A default values that exist for defining the initial draft document and receive default values. Using the defaults values the draft logic may create the initial draft document comprising the content of the electronic document prefilled with the default values and may send a response to the gateway indicating that the initial draft document is created and stored for subsequent stateless operations.

The gateway responds to the client terminal with 200 OK and the new after image which is an entity graph of the initial draft document or the initial draft document with updated data that may contain default values calculated values or field control information the client can specify the desired expansion level via expand.

Steps may be repeated for example to check or validate the data entered in the initial draft document or edit draft copy and transmitted with steps . In addition a validation may be performed between the draft logic and the application logic . And a response e.g. 200 OK may be sent as response to the client terminal indicative of the result of the validation.

The initial draft document or edit draft copy may be enriched at any time by calling a Prepare action on the root entity of the initial draft document or edit draft copy. The Prepare action may have side effects and modify the initial draft document or edit draft copy. In addition it may return messages as a result of consistency checks or other processing logic triggered by it.

User input to the edit draft copy is transported to the draft logic via PATCH requests similar to editing the initial draft document as already described above. PATCH requests can result in warning messages and recalculation of properties in the entity graph.

The edit draft copy may be validated at any time by calling the Validate function on the root entity of the edit draft copy. Other entities of the edit draft copy may offer localized overloads of the Validate function. The Validate function on an edit draft copy returns a list of warning messages for the draft entity graph. The Prepare action on an edit draft copy may create change or release locks or reservations bound to the edit draft. It may also create and initialize contained drafts. The edit draft copy may be converted into a new version of the electronic document by invoking the Activate action on the root entity of the edit draft copy. If the user cancels data modification and no one else works on the same edit draft copy the edit draft copy may be deleted with a DELETE request to the root entity of the edit draft copy together with all bound reservations and locks.

All requests described above with reference to may return error warning and success messages in the response header SAP Message e.g. messages.

In the following is an example method to adapt the OData model referred hereinafter as original ore draft less OData model to the present method to provide a new OData model referred to as draft enabled OData model . The present method as described above involves drafts such as the initial draft document and the edit draft copy in order to fill data in an electronic document e.g. .

As described above the at least one telecommunication server may support or provide services wherein each service may be associated with at least one electronic document and associated entity graph. This may result in one or more entity graphs. An entity set may be built from entities of the one or more entity graphs e.g. the entity set may comprise an entity of each of the one or more entity graphs that perform the same task . For example an entity set may be marked as a draft rootset that contains root entities of the one or more entity graphs.

A draft scope may be defined for the new OData model. The draft scope consists of all entity sets that allow editing in the context of this service e.g. it involves all electronic documents that are associated with that service e.g. the data control service i.e. it is the maximum structure of initial draft document or edit draft copies for this service. Entity sets outside of the draft scope are read only their entities can only be referenced by draft entities e.g. referenced master data or value lists. At least one entity set of the draft scope must be marked as a draft rootset that contains root entities of active or draft copies active document refers to an electronic document such as . The Edit and Activate actions are only available on the root entities.

The entity types of all entity sets outside of the draft scope are identical in the original OData model and in the draft enabled OData model. All other entity types are transformed from the original OData model to the new OData model by adding a key property ID of type EDM.String to the entity type. All key properties of a draft less entity type i.e. entity type of the original OData model are part of the draft enabled entity type i.e. entity type of the new OData model as non key properties and they are tagged with the term SemanticKey. All non key properties and navigation properties of a draft less entity type are part of the draft enabled entity type without any change. As a next step the property EditState may be added and the navigation property TwinEntity in rare cases this navigation property could be omitted for non root entities if the correlation between active entity of the active document and draft entity of the initial or edit draft copy cannot be established .

Finally a User entity type and following additional administrative data at least on the draft enabled root entity type are added 

To avoid relying on naming conventions and be open for future extensions it is annotated with the term Communication.Contact.

The following table describes correspondence between the original OData model OData v2 and the new adapted to the present method OData model OData v4 .

The draft enabled OData model may be be annotated so that generic client components can interact with the draft initial draft document ore edit draft copy without having to rely on out of band knowledge or naming conventions. OData 4.0 specifies how to define custom annotations and this mechanism is used to describe SAP specific annotations for draft document handling. The first annotation is for entity sets that contain root entities of draft enabled documents 

This is a structured annotation listing at least the activation action that converts a draft into an active document e.g. converting the edit draft copy to electronic document as described above . All other actions are optional preparation validation edit and initial draft documents from existing electronic document 

This is a structured annotation listing the node specific preparation action and validation function 

The third annotation is for entity sets whose draft entities will implicitly be activated together with draft entities in the referenced entity sets

The fourth annotation lists all the properties of an entity type which form the key of the corresponding draft less entity type

