---

title: Anomaly detection in network-site metrics using predictive modeling
abstract: Methods and apparatus for anomaly detection in network-site metrics using predictive modeling are described. A method comprises obtaining time-series data for a given time range, wherein the time-series data comprises values for a network-site analytics metric for each of a plurality of sequential time steps across the given time range. The method includes generating a predictive model for the network-site analytics metric based on at least a segment of the time-series data. The method includes using the predictive model to predict an expected value range for the network-site analytics metric for a next time step after the segment and, based on the expected value range, determining whether an actual value for the network-site analytics metric for the next time step is an anomalous value.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09407651&OS=09407651&RS=09407651
owner: Adobe Systems Incorporated
number: 09407651
owner_city: San Jose
owner_country: US
publication_date: 20150910
---
This application is a Continuation of U.S. patent application Ser. No. 13 651 176 filed Oct. 12 2012 and entitled ANOMALY DETECTION IN NETWORK SITE METRICS USING PREDICTIVE MODELING the entirety of which is incorporated herein by refernce.

Modem data analytics creates vast volumes of data. In the past analysis tools have performed poorly at identifying anomalies in these vast pools of data. Such anomaly identification is sometimes performed in part with moving average analysis. However even with moving average analysis the process has still been man hour intensive and because of the large volumes of data it has been easy to get lost down a path of data that may lead to nowhere or is ultimately not interesting. Thus due in part to the large amounts of data and the large number of associated metrics data analysts may not even know where to begin their analysis. As such some analysts become tied to a particular familiar metric simply because they have been otherwise unable to narrow the field of data to what is interesting for the particular set of data or because the industry has chosen a few select metrics by default.

Furthermore some web analytics data may have a cyclical nature that is poorly suited to moving average analysis. Cyclical behavior may exist for any number of reasons for example but not limited to seasonality periods of time holidays etc. Using a running average based upon high volume week day traffic to search for anomalies in low volume weekend traffic may obtain poor results because an expected range determined by high volume traffic may fail to detect anomalies when applied to actual low volume traffic values for example.

Various embodiments of methods and apparatus for anomaly detection in time series data using predictive modeling are disclosed. The method includes performing by one or more computing devices obtainment of time series data for a given time range. The time series data includes values for a network site analytics metric over time. The method includes generating a predictive model for the metric based on a segment of the time series data and using the predictive model to predict an expected value range for the network site analytics metric for a future time. Then determining whether an actual value for the network site analytics metric for the next time step is an anomalous value based on the expected value range.

In the following detailed description numerous specific details are set forth to provide a thorough understanding of claimed subject matter. However it will be understood by those skilled in the art that claimed subject matter may be practiced without these specific details. In other instances methods apparatuses or systems are not described in detail below in order to not obscure claimed subject matter. Such methods apparatuses or systems are not described because they are well known by one of ordinary skill in the art.

Various embodiments of methods and apparatus for anomaly detection in network site metrics including predictive modeling are disclosed. A metric is a measure of activities or performance. Network site metrics measure the activities and or performance of a computer network site for example a web content site. Time series network metrics measure the activities and or performance of a computer network site over time. Although there are numerous network site analytics that may be analyzed by the disclosed system and methods some exemplary non exhaustive examples include revenue file download views successful sign ins returning customer count product registrations possibly broken down by region etc. click throughs impressions visitors visits page views conversions etc. as used in the examples herein.

In the disclosed embodiments time series data e.g. data for a given metric over a given time range may be obtained. A model may be selected that best fits e.g. represents the time series data. A number of models may be tried and selection of a best fitting model may be performed by an iterative process. A portion of the time series data may be used as training data to generate a predictive model that predicts a value or value range for a next time step. Subsequently an actual measured value for the next time step may be compared to the predicted value range and if the actual value exceeds the value range it may be identified as an anomalous value. In some embodiments the value range and thus determination of an anomaly depends upon a confidence level of the prediction. The system may then step ahead one time step e.g. one day using the actual value to update the model and again predict the next value and so on.

In some embodiments a notification may be sent in response to determining that the actual value for the next time step is an anomalous value. For example a proactive alert may be sent to a user and in another example a notification may indicate the actual value as an anomalous value in a report display for the metric. In some examples a user e.g. an advertiser may be automatically notified of an anomaly in the data near to or in real time.

The disclosed systems and methods describe an anomaly detector for network site metrics. The anomaly detector may be part of analytics system . The analytics system captures and analyzes data for use by the anomaly detector. In various embodiments analytics system retrieves network site analytics metrics e.g. revenue file download views successful sign in count returning user count product registration count impressions click throughs visitors visits page views conversions etc. . Generally an anomaly detector analyzes data to find anomalies in data. For example anomaly detector may analyze data such as network site metrics to find anomalies in the data. Anomaly detector detects anomalies in the data by using the data to construct predictive models embodiments of which are discussed in more detail below.

Publisher systems may include computers or similar devices used to publish content from content web sites to audience systems sometimes along with advertisements. Publishing systems may include content servers for providing web content such as html files that are loaded by audience systems for viewing webpages of publisher systems .

Audience systems may include a computer or similar device used to interact with publisher systems and content sites thereof. In some embodiments audience systems include a wireless device used to access content e.g. web pages of a web site from publisher systems via network . For example audience systems may include a personal computer a cellular phone a personal digital assistant PDA or the like.

In some embodiments audience systems may include an application e.g. internet web browser application that may be used to generate a request for content to render content and or to communicate a request to various devices on the network. For example upon selection of a website link on a webpage displayed to the user by browser application the browser application may submit a request for the corresponding webpage content to publisher systems and the publisher systems may provide corresponding content including an HTML file that is executed by a browser application to render the requested website for display to the user. In some instances execution of the HTML file may cause browser application to generate an additional request for additional content e.g. an image referenced in the HTML file as discussed below from a remote location such as advertiser systems and or analytics systems . The resulting webpage may be viewed by a user via a video monitor or similar graphical presentation device of audience system . While a webpage is discussed as an example of the network content available for use with the embodiments described herein one of skill in the art will readily realize that other forms of content such as audio or moving image video files may be used without departing from the scope and content herein disclosed. Likewise while references herein to HTML and the HTTP protocol are discussed as an example of the languages and protocols available for use with the embodiments described herein one of skill in the art will readily realize that other forms of languages and protocols such as XML or FTP may be used without departing from the scope and content herein disclosed.

In various embodiments analytics systems includes a system for the tracking and collection and processing of network site data and the generation of corresponding network site metrics. Network site metrics may include information relating to the activity and interactions of one or more users with a given website or webpage. For example network site metrics may include historic and or current website browsing information for one or more website visitors including but not limited to identification of links selected identification of web pages or advertisements viewed identification of conversions e.g. desired actions taken such as the purchase of an item number of purchases value of purchases and other data that may help gauge user interactions with webpages websites advertisements. In some embodiments network site metric data may be accumulated over time to generate a set of analytics data e.g. an analytics dataset that may be representative of activity and interactions of one or more users with a given website webpage advertisement or creative. Analytics data may be processed to generate metric values that are indicative of a particular trait or characteristic of the data e.g. a number of website visits a number of items purchased value of items purchased a conversion rate a promotion effectiveness index etc. .

A non exhaustive exemplary list of network site metrics includes click through rate CTR conversion rate revenue per click RPC revenue per impression RPM cost per click CPC cost per action CPA and cost per impression CPM etc. Collected data may also include analytics reports including various metrics of the analytics data e.g. a promotion effectiveness index and or a promotion effectiveness ranking .

Analytics systems may include a network site traffic data collection and analysis service. In the illustrated embodiment for example analytics system is communicatively coupled to audience systems via network . Analytics system may receive analytics data collected from server logs web bugs and the like. Accordingly in one embodiment analytics system may perform trend ascertainment and predictive functions described herein. Analytics system collects data via various methods. For example analytics system may service requests from one or more audience systems . For example upon loading rendering of a webpage from publisher systems by browser of audience systems browser may generate a request to analytics systems via network . Analytics system may process the request and return appropriate content e.g. an image to browser of audience systems . In some embodiments the request includes a request for an image and analytics system simply return a single transparent pixel for display by browser of audience systems thereby fulfilling the request. The request itself may also include web analytics data embedded therein. Some embodiments may include publisher systems embedding or otherwise providing a pointer to a resource known as a web bug within the HTML code of the webpage provided to audience systems . The resource may be invisible to a user such as a transparent one pixel image for display in a web page. The pointer may direct browser of audience systems to request the resource from analytics system . Analytics system may record the request and any additional information associated with the request e.g. the date and time and or identifying information that may be encoded in the resource request . Analytics system may parse the request to extract the data contained within the request. Analytics system may process the data to generate one or more reports including graphical displays and trend and prediction analysis. For example analytics system may filter the raw performance data to be used by anomaly detector in generating models and predictions. Reports for example may include overviews and statistical analyses describing the rate of converting a website visit to a purchase e.g. conversion an effectiveness of various promotions and so forth and identifying trends in and making predictions from the data as requested.

In some embodiments the network site metric data may be manipulated e.g. by either analytics systems or data collection module of the anomaly detector in pre processing to make the data more suitable for analysis. The collected data may be used to create a predictive model.

In some embodiments model selection module selects from a group of possible models a model particularly suited to the data of interest and generates a predictive model based on at least a segment of the data for use by forecasting module . In one embodiment the model selection module uses a segment of the time series data as training data to generate multiple different predictive models according to multiple different time series forecasting techniques and selects one of the predictive models based on a data fitting measure. More details of the model selection process are discussed below in regard to .

The forecasting module uses the predictive model to forecast an expected value range for the network site analytics metric for the time step after the segment as illustrated and describe in more detail in . The predicted expected range may be used by the anomaly detection module for analyzing an actual value. Details of the prediction process are discussed in more detail below in regard to .

Anomaly detection module detects when the actual value is outside the expected value range. For example an anomalous value may be determined by whether the actual value exceeds the expected value range by a threshold amount. Note that some embodiments determine the expected value range according to a configured confidence level of the expected values for the predictive model. In another example an anomalous value may be determined by whether the actual value is one of a plurality of actual values for the network site analytics metric that exceed respective expected value ranges for consecutive time steps. More details of anomaly detection are described below in regard to .

Notification module may send a notice of the anomaly. For example notification module may send a real time alert to a user e.g. via user interface or via API of the system or to a client. In another example the anomaly may be reported or displayed visually as depicted herein or in other contemplated reports.

Note that charts display actual data up to Thu 08 and that forecasted values and confidence levels are projected over a number of future days beyond. Some embodiments forecast for one time step forward while other embodiments forecast for a plurality of forward time steps as illustrated. Also note that the width of the shaded range grows wider indicating less accuracy in the predicted values that are further in the future for a given confidence level.

In one embodiment the process illustrated in may be performed by anomaly detector . For any given time segment e.g. 1 week 2 weeks 3 days etc. the time step totals of time series metric data may be extracted or otherwise obtained for each metric on a given report suite along with some predetermined amount e.g. 4 weeks of previous data for use as training data as indicated at . For example the method may gather data by appending a number of previous days e.g. 28 to act as the historical or training data for each of the metrics events configured on a report suite. The time series data may be obtained by data collection module in some embodiments. In one example an API may be used to extract the historical or training data.

The data may be stored locally in data store s for example. Based on the obtained data a predictive model may be generated as indicated at . For example the predictive model may be generated by model selection module . In some embodiments to generate the predictive model multiple candidate models may be considered via a model selection process as described below for . By applying the generated model to the historical data a predicted value range may be determined for a next time step as indicated at . For example for a specified segment of the time series data where the model was generated on a portion of the time series data immediately preceding the segment a value range may be predicted for the first time step of the segment using the model. The expected upper and lower bounds may be calculated using the method that goes along with the selected algorithm. The calculated upper and lower bounds may form an expected range. Such analysis may involve the forecasted value standard error and a confidence. As explained below further iterations of the process of may predict an expected value range for subsequent time steps of the segment. In some embodiments the predicted value range may be determined by forecasting module . The actual measured value for the metric may be obtained as indicated at . In some embodiments the actual value is used both to compare to the expected value range predicted for the time step as well as to update the data that the model is built from. In one example for the next time step the forecasting module will update a rolling standard error and recalculate the expected upper and lower bound. The rolling error may be slightly different based on each algorithm but is generally the square difference between the forecasted and actual value.

A determination is made if the actual value is outside the expected range to determine whether the actual value is an anomalous value as indicated at . If not the actual value may be added to the data in in preparation for forecasting the next value at the next time e.g. next day as indicated at No . To avoid issues where an outlier anomaly could affect the model or algorithm going forward if the actual value is outside the expected range the data may be updated with the upper or lower bound rather than the actual outlier value. In one example the forecasting module may perform the operation of updating the model.

Various embodiments use a time window to determine a period of time over which predictions are made. For example when the actual value is received as indicated at anomaly detection may be performed using the upper and lower bound for the entire time step e.g. time window in question. In some embodiments anomaly detection as indicated at may be performed by anomaly detection module . In some embodiments only a portion of the time window or a single time period may be used for anomaly detection. In some embodiments the actual value is receive real time while in other embodiments the actual value is a historic value but not as historic as the data used to generate the predictive model . For example an advertiser may use the disclosed systems and methods to review historical data and find anomalies therein.

Also various types of data call for various types of anomaly detection. As illustrated in described below some time series data may exhibit peaky characteristics while other time series data may exhibit more smooth characteristics. Other characteristics of the data are contemplated as well. Some time series data may test a new high or low for several days in a row with or without exceeding the range. Also sometimes it is preferable to send a notification more often or less often for certain metrics. Disclosed are configurable systems and methods that may be adjusted or configured to suit the desired outcome. For example confidence levels may be adjusted multiple confidence levels may be used and sliding windows may consider additional time steps. Thus in some embodiments the time window may be a single time period but in other embodiments the time window may be a number of time periods. For example in one embodiment anomaly detection module applies a multiple time value e.g. 3 day moving window to the actual data values and determines instances where multiple surrounding points e.g. consecutive points are outside the expected range. In some embodiments a time window with multiple time periods is combined with the use of multiple ranges e.g. multiple ranges may be constructed from multiple confidence levels . For example a system may be configured to detect an anomaly if a single point exceeds the range determined by a 99 confidence level. In another example the same system may be configured to detect an anomaly when two consecutive values exceed a range determined by a slightly lower e.g. 95 confidence level. Such methods help avoid cases where a single point just barely goes outside the expected range. Note that the moving window may not be necessary in some embodiments.

If an anomaly is determined as indicated at block Yes then a notification may be sent as indicated at . For example notification module may send a notification to a user. In some embodiments notification may be via email to the advertiser or publisher for example or an indication on a display screen used to monitor the data e.g. user interface . In some embodiments notification may be sent to storage or appear in a report. If no anomaly is determined as indicated at No or after a notification is sent as indicated at the model may be updated as indicated at . The process may return to where for the next time step a new value range is predicted and a new actual value received and so on. In some embodiments a new model may be selected. For example because characteristics of the data have changed and a new model may better represent the data or because a new set of data has been selected for analysis. In some embodiments the same model may be used in the next iteration.

Generally is an illustration of an embodiment of the Generate a model block in . Model generation may be performed to produce a model that can predict the next value for the next time step. In some embodiments a model may be selected from a plurality of possible models based upon how well the model represents the data. Also the data may have changing characteristics over time such that the model representing the data should be updated to reflect the changing characteristics. For example the system may alter the type of model and or model coefficients to better reflect the data as new values are added to the data or as other segments of the data are considered. Although certain types of models are discussed herein other types of models and algorithms are contemplated without departing from the scope of the invention as determined by the claims.

In a model algorithm or model type is selected as indicated at and an attempt to fit the algorithm to a portion of time series data is made. Fitting is performed by iterating through alternative values for coefficients of the algorithm as indicated at while applying a portion of the data to the variables. In one example model selection module selects an algorithm and then applies the various values for the coefficients which act as weights for the different inputs in the modeling equations.

The algorithm may be selected from among multiple different statistical models. Some embodiments may employ a moving average analysis. Some embodiments perform time series analysis. In some embodiments time series analysis is better suited than moving average analysis because automated time series analysis takes cycles into consideration by applying a mathematical model that represents such cycles. For example such analysis may identify when weekend volume is abnormally high or low compared to most other weekends while ignoring weekend volume changes that are more closely tied to regular cyclical changes. Also in some embodiments time series analysis may be better suited to cyclical data analysis than moving average because a moving average usually sets an upper and lower bound that is not adjusted for cycles while the time series analysis adjusts the upper and lower bounds according to recognized cyclical behavior. Although in some embodiments moving average analysis may be better suited for various other reasons.

Note that it is anticipated that algorithms will be developed and improved and integrated into the disclosed process without departing from the scope of this disclosure. Models in the following non exhaustive exemplary list may be tried in some embodiments 

A model may include at least a combination of an algorithm and associated coefficients. A preferred algorithm and preferred coefficients for the preferred algorithm may produce the smallest Sum of Squared Errors SSE . The SSE may be determined by testing the algorithms e.g. by varying the coefficients of the algorithms. In some embodiments finding the preferred coefficients values is a process of iterating each value between 0.1 and 0.9 incrementing by 0.1. The process may iterate though the algorithms and various respective alternatives for the coefficients as indicated by No until all of the algorithms and respective variable alternatives have been tested as indicated in Yes . If multiple models or multiple coefficients have met the criteria so far a preferred algorithm and preferred values for the coefficients for the predictive model may be selected as the preferred model. In an exemplary embodiment and for the smallest SSE the Mean Absolute Percent Error MAPE will be calculated e.g. 75 accuracy and current standard error on the training data. Also in some embodiments when the model is updated for the next time step a rolling standard error may be updated.

Once the preferred algorithm and coefficients have been selected as indicated in validation is performed as indicated at . Validation may be performed by checking to see if the MAPE is less than some threshold e.g. 25 error. If so as indicated at Yes the process moves onto block . If the MAPE is not less than some threshold as indicated at No the algorithm model may be marked as invalid time series for that metric may be ignored and no anomalies are detected. For example the process will return as indicated at No and obtain the next set of data. This may happen if the training data has a lot of variation and or the current algorithms are not sufficient to model the data for example. In some embodiments the operations of selecting an algorithm iterating through the alternative coefficient values for all the algorithms selecting a preferred algorithm and coefficient values and validating the model that includes the preferred algorithm and coefficient values are all performed by the model selection module .

In various embodiments rather than requesting historical data and rebuilding the model for each request the current model will be cached and the coefficient values maintained. In some embodiments the model and coefficients are updated as needed. This may help to avoid the request for historical data if the call was recently made for example .

In another example illustrates depending on the confidence level applied a potential anomaly detected at 12 25 11 of the Product Registration metric. In one embodiment the expected range illustrated as the shaded region between upper bound and lower bound and extending from time step 12 14 11 to 1 3 12 may represent a range determined by a first e.g. 95 confidence level. In another embodiment the range is determined by a second e.g. 99 confidence level that includes all of the first confidence level area plus some more area both above and below the shaded portion for each time step as illustrated between upper bound and lower bound and extending from time step 12 14 11 to 1 3 12. In the example actual value would be an anomaly if the range determined by the first confidence level was used but would not be an anomaly if the range determined by the second confidence level was used. In some embodiments the first confidence level may be lower than the second confidence level.

Various modifications additions and alterations may be made to the invention by one skilled in the art without departing from the spirit and scope of the invention as defined in the appended claims. For example the metric data may come from commercial services such as a data warehouse and possibly a Hadoop environment. In some embodiments automation of the disclosed operations may be facilitated by an API acting as an interface between the various software components. In various embodiments the disclosed systems and methods may leverage the features of another software system. For example an analytics application e.g. Site Catalyst may provide an API for the application s report suite and display window that may facilitate notification of anomalies as described herein. The disclosed methodology may be implemented as a web service where it may be exposed as a RESTful API e.g. with JSON objects. The disclosed methodology may also be built on top of an HTTP service or other technologies such as Thrift Ice SOAP etc. One of ordinary skill will recognize that this system would continue to grow over time and much of its feature set will be extended as resources and research are provided.

Various components of embodiments of anomaly detection in network site metrics using predictive modeling may be executed on one or more computer systems which may interact with various other devices. One such computer system is illustrated by . In the illustrated embodiment computer system includes one or more processors coupled to a system memory via an input output I O interface . Computer system further includes a network interface coupled to I O interface and one or more input output devices such as cursor control device keyboard audio device and display s . In some embodiments it is contemplated that embodiments may be implemented using a single instance of computer system while in other embodiments multiple such systems or multiple nodes making up computer system may be configured to host different portions or instances of embodiments. For example in one embodiment some elements may be implemented via one or more nodes of computer system that are distinct from those nodes implementing other elements.

In various embodiments computer system may be a uniprocessor system including one processor or a multiprocessor system including several processors e.g. two four eight or another suitable number . Processors may be any suitable processor capable of executing instructions. For example in various embodiments processors may be general purpose or embedded processors implementing any of a variety of instruction set architectures ISAs such as the x86 PowerPC SPARC or MIPS ISAs or any other suitable ISA. In multiprocessor systems each of processors may commonly but not necessarily implement the same ISA.

In some embodiments at least one processor may be a graphics processing unit. A graphics processing unit or GPU may be considered a dedicated graphics rendering device for a personal computer workstation game console or other computer system. Modern GPUs may be very efficient at manipulating and displaying computer graphics and their highly parallel structure may make them more effective than typical CPUs for a range of complex graphical algorithms. For example a graphics processor may implement a number of graphics primitive operations in a way that makes executing them much faster than drawing directly to the screen with a host central processing unit CPU . In various embodiments the methods disclosed herein for anomaly detection in network site metrics using predictive modeling may be implemented by program instructions configured for execution on one of or parallel execution on two or more of such GPUs. The GPU s may implement one or more application programmer interfaces APIs that permit programmers to invoke the functionality of the GPU s . Suitable GPUs may be commercially available from vendors such as NVIDIA Corporation ATI Technologies and others.

System memory may be configured to store program instructions and or data accessible by processor . In various embodiments system memory may be implemented using any suitable memory technology such as static random access memory SRAM synchronous dynamic RAM SDRAM nonvolatile Flash type memory or any other type of memory. In the illustrated embodiment program instructions and data implementing desired functions such as those described above for anomaly detection in network site metrics using predictive modeling are shown stored within system memory as program instructions and data storage respectively. In other embodiments program instructions and or data may be received sent or stored upon different types of computer accessible media or on similar media separate from system memory or computer system . Generally speaking a computer accessible medium may include storage media or memory media such as magnetic or optical media e.g. disk or CD DVD ROM coupled to computer system via I O interface . Program instructions and data stored via a computer accessible medium may be transmitted by transmission media or signals such as electrical electromagnetic or digital signals which may be conveyed via a communication medium such as a network and or a wireless link such as may be implemented via network interface .

In one embodiment I O interface may be configured to coordinate I O traffic between processor system memory and any peripheral devices in the device including network interface or other peripheral interfaces such as input output devices . In some embodiments I O interface may perform any necessary protocol timing or other data transformations to convert data signals from one component e.g. system memory into a format suitable for use by another component e.g. processor . In some embodiments I O interface may include support for devices attached through various types of peripheral buses such as a variant of the Peripheral Component Interconnect PCI bus standard or the Universal Serial Bus USB standard for example. In some embodiments the function of I O interface may be split into two or more separate components such as a north bridge and a south bridge for example. In addition in some embodiments some or all of the functionality of I O interface such as an interface to system memory may be incorporated directly into processor .

Network interface may be configured to allow data to be exchanged between computer system and other devices attached to a network such as other computer systems or between nodes of computer system . In various embodiments network interface may support communication via wired or wireless general data networks such as any suitable type of Ethernet network for example via telecommunications telephony networks such as analog voice networks or digital fiber communications networks via storage area networks such as Fibre Channel SANs or via any other suitable type of network and or protocol.

Input output devices may in some embodiments include one or more display terminals keyboards keypads touchpads scanning devices voice or optical recognition devices or any other devices suitable for entering or retrieving data by one or more computer system . Multiple input output devices may be present in computer system or may be distributed on various nodes of computer system . In some embodiments similar input output devices may be separate from computer system and may interact with one or more nodes of computer system through a wired or wireless connection such as over network interface .

As shown in memory may include program instructions configured to implement embodiments anomaly detection in network site metrics using predictive modeling and data storage comprising various data accessible by program instructions for example anomaly detection in network site metrics using predictive modeling. In one embodiment program instructions may include software elements of anomaly detection in network site metrics using predictive modeling as illustrated in the above figures. Data storage may include data that may be used in embodiments. For example one or more files containing programming instructions for anomaly detection in network site metrics using predictive modeling as described herein. In other embodiments other or different software elements and or data may be included.

Those skilled in the art will appreciate that computer system is merely illustrative and is not intended to limit the scope of anomaly detection in network site metrics using predictive modeling as described herein. In particular the computer system and devices may include any combination of hardware or software that can perform the indicated functions including computers network devices internet appliances PDAs wireless phones pagers etc. Computer system may also be connected to other devices that are not illustrated or instead may operate as a stand alone system. In addition the functionality provided by the illustrated components may in some embodiments be combined in fewer components or distributed in additional components. Similarly in some embodiments the functionality of some of the illustrated components may not be provided and or other additional functionality may be available.

Those skilled in the art will also appreciate that while various items are illustrated as being stored in memory or on storage while being used these items or portions of them may be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software components may execute in memory on another device and communicate with the illustrated computer system via inter computer communication. Some or all of the system components or data structures may also be stored e.g. as instructions or structured data on a computer accessible medium or a portable article to be read by an appropriate drive various examples of which are described above. In some embodiments instructions stored on a computer accessible medium separate from computer system may be transmitted to computer system via transmission media or signals such as electrical electromagnetic or digital signals conveyed via a communication medium such as a network and or a wireless link. Various embodiments may further include receiving sending or storing instructions and or data implemented in accordance with the foregoing description upon a computer accessible medium. Accordingly the present invention may be practiced with other computer system configurations.

Various embodiments may further include receiving sending or storing instructions and or data implemented in accordance with the foregoing description upon a computer accessible medium. Generally speaking a computer accessible medium may include storage media or memory media such as magnetic or optical media e.g. disk or DVD CD ROM volatile or non volatile media such as RAM e.g. SDRAM DDR RDRAM SRAM etc. ROM etc. as well as transmission media or signals such as electrical electromagnetic or digital signals conveyed via a communication medium such as network and or a wireless link.

The various methods as illustrated in the figures and described herein represent examples of embodiments of methods. The methods may be implemented in software hardware or a combination thereof. The order of method may be changed and various elements may be added reordered combined omitted modified etc.

Various modifications and changes may be made as would be obvious to a person skilled in the art having the benefit of this disclosure. It is intended that the invention embrace all such modifications and changes and accordingly the above description to be regarded in an illustrative rather than a restrictive sense.

