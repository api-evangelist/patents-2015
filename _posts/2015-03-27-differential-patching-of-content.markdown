---

title: Differential patching of content
abstract: Devices and techniques to incrementally update content associated with an electronic publication are described. A patch generation module may be configured to generate patch data files comprising incremental changes associated with the electronic publication. A differential patch module located on a client device may be configured to obtain the patch data files. The differential patch module may also be configured to compare the patch data files and the electronic publication and identify the differences between the files. Additionally, the differential patch module may be configured to update the changes in the patch data files with the content of the electronic publication. Accordingly, the electronic publication may be updated to include the changes in the patch data files.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09529586&OS=09529586&RS=09529586
owner: Amazon Technologies, Inc.
number: 09529586
owner_city: Reno
owner_country: US
publication_date: 20150327
---
This application is a continuation of and claims priority to pending U.S. patent application Ser. No. 13 943 678 filed on Jul. 16 2013 entitled Differential Patch of Content. The entirety of this previously filed application is hereby incorporated by reference.

Consumption of electronic books eBooks audio books and other content continues to grow. The content may be accessed by a variety of client devices such as smartphones tablet computers personal computers wearable computers and so forth.

Certain implementations and embodiments will now be described more fully below with reference to the accompanying figures in which various aspects are shown. However various aspects may be implemented in many different forms and should not be construed as limited to the implementations set forth herein. Like numbers refer to like elements throughout.

A vast collection of content including electronic books eBooks audio books magazines periodicals software applications video games encyclopedias dictionaries and so forth are available for access using client devices. The content may include one or more files such as a data file a metadata file image file font data and so forth. The data file may include text recorded audio and so forth. The metadata file may include descriptive information about a particular data set object or resource. The metadata file may include formatting data purpose of the data time and date of creation of the data creator or author of the data location on a computer network where the data was created and so forth. For example a digital image file may include metadata that describes how large the picture is the color depth the image resolution when the image was created and other data. The client devices may include smartphones tablet computers personal computers wearable computers laptop computers desktop computers in vehicle entertainment systems and so forth.

After distribution it may be desirable to make changes to the content as distributed. These changes may range from addressing errata in the form of typos in the original content correcting formatting of style so that the content renders in a particular way on a device to inserting new content removing content customizing content and so forth.

Changing content once it has been delivered may be challenging due to how the content is distributed and stored. For example eBooks may be distributed on the Internet as downloadable files that can be stored on a client device and read offline. Historically changing content has involved re delivering a new version of the entire content to all devices which have previously stored the content. For example changing a single word in an eBook would call for retransmission of the entire eBook. This includes re delivering data files metadata files and other information associated with the content. Transmission of this data may incur operational and financial costs.

This disclosure describes techniques and systems to change content that has been distributed to one or more client devices without re delivery of the entire content to those one or more client devices. A patch generation module uses content and content updates to generate one or more patch data files. The patch generation module processes the content updates by comparing the content updates to the content as previously delivered to the client device to generate one or more of the patch data files. The patch data files contain data representative of changes associated with the content. For example content updates which include a change to the text may result in a patch data file for the data files storing the body of the eBook. Similarly a change in formatting may result in a patch data file for the metadata file. The patch data files may be configured to add content change presentation correct errors insert personalized content redact content and so forth.

A differential patch module is operable on the client device. The differential patch module accepts one or more patch data files from a computing device such as server and modifies the content stored on the client device based on the one or more patch data files. As a result the user of the client device now has access to the updated version of the content.

In one implementation a user may download content such as an eBook an audio book and so forth onto the client device. At a later time one or more patch data files comprising one or more revisions to the data file may be generated on the server. For example the patch generation module may receive content updates from an author or publisher of the content correcting various errata adding some additional material and so forth. The patch generation module processes the content updates and generates one or more patch data files. The one or more patch data files are sent to the client device. The differential patch module of the client device accepts the patch data files and updates the content stored on the client device accordingly. This process allows for the content to be changed without retransmitting the entire content to the client device again.

In another implementation the patch generation module may be configured to send a notification to the user that one or more patch data files associated with the content is available. The differential patch module stored on a client device may be configured to generate a user interface to facilitate receipt of a user input in response to the notification. For example the user may be able to specify with the user interface whether to receive the patch data files comprising the revisions associated with the content automatically or provide the user input to manually request the patch data files.

The differential patch module may be configured to update the content when the size of the patch data file is smaller than the size of the content. Accordingly the entire content would be replaced only when the size of the one or more patch data files for that content is greater than or equal to the size of the content. Because the patch data files may be smaller than the size of the entire piece of content the amount of data transferred may be significantly reduced resulting in a corresponding reduction in costs and so forth.

A user may interact with a client device . A single user and client device are depicted here for ease of illustration and not by way of limitation. In other implementations a plurality of client devices may be present. The client devices may include desktop computers a laptop computers tablet computers smartphones wearable computers set top box media players in vehicle systems and so forth. The client device is coupled to a network .

The client device may connect to one or more networks that provide access to one or more servers or other devices. The networks may include public networks such as the Internet private networks such as an institutional and or personal intranet or some combination of private and public networks. The networks may also include any type of wired and or wireless network including but not limited to local area networks LANs wireless local area networks WLANs such as Wi Fi wide area networks WANs wireless wide area networks WWANs such as 3G 4G LTE and so forth. The networks may utilize communications protocols such as internet protocol IP transmission control protocol TCP user datagram protocol UDP or other types of protocols.

Each of the servers may comprise a patch generation module configured to generate and send patch data files comprising incremental changes associated with content to the client device . The content may include one or more files such as a data file a metadata file image file font data audio file and so forth. The data file may include text recorded audio and so forth. The metadata file may include descriptive information about a particular data set object or resource. The image file may include data which is configured to be rendered as a picture. In most implementations a total file size of the one or more patch data files as delivered to the client device is less than a total file size of the content previously stored on the client device .

The patch generation module accesses information such as one or more of the following content updates version data a client device type or user account data . User account data may also include customization data .

The content updates comprise information associated with the one or more changes to the content . The content updates may be associated with a particular version or revision of the content . For example the content updates may include changes for the 2edition of an eBook. The content updates may include a markup language or other data which indicates particular changes to be made in the content . In some implementations the content updates may include an entire piece of content . For example a publisher may send a complete version of the eBook as the content update rather than a file describing only the changes.

The version data indicates a particular version edition revision or other designation of the content . For example the version data may indicate the content distributed to the client device was version 1.2 as distinct from version 1.3 which may have different end papers.

The client device type provides information about the client device such as a particular make model chassis capability and so forth. For example the client device type may indicate that a particular client device has a color display rather than a black and white display. The patch generation module may provide patch data files specific to a particular type of device. Continuing the example the client device with only a black and white display may receive images which are monochrome and not color.

The user account data provides information about the one or more users . For example the user account data may include information registering a particular client device to a user account of the user payment information for the account and so forth.

The customization data provides information associated with a particular user or group of users U . For example the customization data may include access codes or other credentials for a particular user which allow for access of additional content. The customization data may include one or more of access codes usernames passwords and so forth. In some implementations the patch generation module may provide patch data files based on the customization data . For example a particular group of users U may use an access code to enroll in the same anatomy class. However each user of the group may have a different version of the textbook associated with the anatomy class downloaded on their respective client device . For example the content associated with the textbook may be translated into different languages. Additionally each user of the group may have downloaded the content on different types of client devices . Accordingly the patch generation module may generate and distribute the patch data files across the various types of client devices . Additionally the patch data files may be associated with multiple versions of content . Therefore the scope of the revisions provided by the patch generation module may be independent of the type of client device and independent of the version of content .

The patch generation module is configured to generate one or more patch data files . The patch data files may comprise incremental changes or updates associated with the content based on one or more of the content updates version data the client device type user account data or other data. For example the patch generation module may receive version data associated with the content .

Based on the version data the patch generation module may generate one or more patch data files comprising incremental changes to the content . For example the changes may correct typos in the original content correct formatting of style so that the content renders in a particular way on the client device insert new content remove content customize content and so forth. The patch data file may include one or more of an image file a text file a metadata file a hypertext markup language HTML file an audio file and so forth. The content updates and the corresponding patch data file may be configured to remove information from the content during the modification. For example an erroneous word or paragraph may be deleted.

The patch generation module may generate the patch data files using one or more techniques. These techniques may include a byte level comparison of one version of the content with another. For example the previously distributed version of the content may be compared with a new version received in the content update . Based on the differences between these versions one or more patch data files may be generated. Another technique may be comparison of metadata internal item object versioning or reference numbers. For example metadata associated with image files may indicate that one image file has a greater version number and may thus be deemed to be included in the patch data file . Another technique may be simple replacement such that any data included in the content update supersedes or replaces elements that have the same or similar identifiers within the content . Another technique may involve generating patch data files based on the capabilities of the client device . For example the patch generation module may determine that the client device does not have audio capability. Accordingly the patch generation module may not provide patch data files that include an audio file for that particular client device . Another technique may involve configuring the client device to generate and send patch data files to another client device using peer to peer technology. For example the user may make annotations to the content . The client device may generate and send the patch data files that include the annotations to another client device . To this end patch data files may be generated in order to keep documents notes highlights bookmarks and so forth up to date across multiple client devices . These techniques or others may be used individually or in combination with one another to generate the patch data files .

Additionally the patch generation module may transmit the patch data files over one or more networks . Traditionally costs associated with delivering data using Wi Fi are nominal. Conversely transferring data over a wireless broadband network may accrue costs on a per megabyte basis. Because there are costs associated with transmitting the patch data files over a particular network the patch generation module may be configured to determine which network to use to deliver the patch data files . This determination may be based on a variety of factors such as whether the patch data files contain time sensitive data the speed of the network the latency of the network transmission costs associated with the network and so forth. For example based at least in part on a subset of the aforementioned factors the patch generation module may make a determination to send the patch data files over a network that uses Wi Fi technology instead of a 3G broadband network connection.

The content may be customized using the patch generation module . The patch generation module may be configured to access the customization data and generate patch data files associated with a particular user or client device . The customized patch data files may be delivered to the particular client device registered or associated with the user . The user may access the content which has been updated based on the patch data files and see content tailored specifically for them. For example where the user is a medical student hyperlinks within an eBook may be customized to allow for access within the eBook using the student s account login information.

The patch generation module may be configured to send a notification to the user that one or more patch data files associated with the content is available. The notification may include details associated with additional content in the patch data files the type of content in the patch data files the size of the patch data files the rationale for providing the patch data files and so forth. For example the notification may include information describing the differences between the version of the content available on the client device and the patch data files generated by the patch generation module . Alternatively the differential patch module may be configured to automatically obtain one or more patch data files from the server without any notification.

Upon receiving the notification the differential patch module stored on the client device may be configured to generate a user interface to facilitate receipt of a user input in response to the notification. For example using the user interface the user may be able to specify whether to receive the patch data files comprising the revisions associated with the content automatically or provide the user input to send a request to the server for the patch data files . For example the user may send the request to the server requesting the patch data files are sent to the client device automatically whenever new patch data files are available for download. In response to the request the server may be configured to send the patch data files to the differential patch module . The differential patch module may be configured to download the patch data files onto the client device . The differential patch module may also compare the content and the patch data files and identify the differences between the files. The differential patch module may then update the content based on the patch data files . Once the content is updated the content may include the revisions associated with the patch data files . Therefore the content may be changed incrementally instead of replacing the entire content . Accordingly the costs associated with distributing changes to the user that had previously downloaded the content associated with an eBook an audio file and so forth may be reduced.

As described above the user may download content such as an eBook onto the client device . As illustrated here the content as downloaded and before the update may include metadata an image file a first version of a text file another image file and another text file .

In this illustration the author of the content or another party has updated the text file to create a second version. This second version may correct various typos include additional text remove some text and so forth relative to the first version. The author may also have added a new picture to be included in the eBook. The author may have provided a content update which indicates the changes to be made or the author may have re sent the entire piece of content including the updates to the patch generation module . For example the patch generation module may receive a second version of the text file and an image file of the new image.

Based at least in part on the content update the patch generation module generates the patch data file . In this example the patch data file includes the second version of the text file and the image file for the new image. The patch data file is provided to the client device . The differential patch module executing at least in part on the client device uses the patch data file to replace the first version of the text file with the second version and insert the image file into the content forming the content after update . As a result the user may now use the client device to access the updated version of the content with the errors corrected and the new image added. As described above the patch data files may be obtained automatically or manually in response to the request from the client device . Using these techniques it becomes unnecessary in many instances to resend the entire piece of content that would otherwise incur fiscal and bandwidth costs.

At the content associated with a user account for a user is identified. For example the content may be an eBook Vertebrate Anatomy which has been associated with the user account for the user of Alice . This eBook may include hyperlinks to additional content such as videos or interactive lessons which are available behind a paywall.

At an access code associated with the user account is determined. The access code may comprise a username a password authentication credentials hash combination of characters or digits and so forth. The determination may include requesting the information from the user through a user interface retrieving the information as previously stored and so forth.

The access code may enable access to the additional content or features associated with the content . In some implementations the access code may be included as part of the metadata in the patch data files . The metadata may include caching parameters permissions associated with various pieces of the content and so forth. The patch generation module may be configured to use the caching parameters to pre fetch content before the user has requested the content . The patch generation module may be configured to select and download content to the user s client device based on the user s prior interests generally popular items and so forth. For example the patch generation module may determine that the user preferences for eBook content included works created by the author John Grisham. The patch generation module may send the content associated with the latest John Grisham novel to the user s client device prior to the user requesting the content . Continuing with this example when the user requests access to the content the patch data files may be provided that include an access code enabling access to the content .

The permissions may include time based permissions temporary access permissions full access permissions and so forth. To this end the differential patch module may be configured to store encrypted data alongside non encrypted data. For example the user Alice may have download the content Vertebrate Anatomy but at the time of download did not have access to the additional content behind the paywall. Continuing with this example when the user Alice has acquired sufficient rights such as by enrolling in a class or paying a fee an access code enabling access to the additional content may be provided.

At one or more patch data files are generated using the access code or other customization data . For example the patch data files may include the access code associated with the user of Alice .

At the one or more patch data files are sent to the client device associated with the user . For example the server may use the network to send the one or more patch data files to the eBook reader client device .

At the content is updated with the one or more patch data files . For example the differential patch module may apply the patch data files to the content such that the copy of Vertebrate Anatomy for the user Alice now includes Alice s login information. As Alice reads the eBook Vertebrate Anatomy and selects various hyperlinks she is provided with the content behind the paywall as enabled by the access code. Accordingly after the content is updated the user may access the additional content or features associated with the patch data files .

The patch data files may comprise customized data associated with the user and based on the customization data . The customization data may include a variety of other types of data which may be used to modify the content . The customization data may include video files audio files image files text files markup language files digital autographs digital signature a recordable message or other personalized data such as the access code mentioned above. The patch data files containing the customized data may be sent to the client device and the content may be updated such that the content includes the customized data associated with the patch data files .

The server may also include one or more communication interfaces to enable communications between the server and other networked devices. Such communication interface s may include one or more network interface controllers NICs or other types of transceiver devices configured to send and receive communications over the network s . The server may also include one or more busses or other internal communications hardware or software that allow for the transfer of data between the various modules and components of the server .

The server may include one or more input output I O interface s to allow the server to communicate with other devices. These I O interfaces may include an inter integrated circuit I2C serial peripheral interface bus SPI Universal Serial Bus USB as promulgated by the USB Implementers Forum RS 232 and so forth. The I O interface s may couple to one or more I O devices . The I O devices may include keyboards displays printers and so forth. In some embodiments the I O device s may be physically incorporated with the server or be externally placed.

The server includes one or more memories . The memory comprises one or more computer readable storage media CRSM . The CRSM may be any one or more of an electronic storage medium a magnetic storage medium an optical storage medium a quantum storage medium a mechanical computer storage medium and so forth. The memory provides storage of computer readable instructions data structures program modules and other data for the operation of the server .

The memory may include at least one operating system OS module . The OS module is configured to manage hardware resources such as the I O interface s and communication interface s and to provide various services to applications or modules executing on the processor s . Also stored in the memory may be one or more of the following modules. These modules may be executed as foreground applications background tasks daemons and so forth.

The memory may include a communication module a patch generation module a user interface module an application module or other module s . The communication module is configured to maintain communication with other devices such as the client device another server and so forth using one or more of the communication interfaces .

As described above the patch generation module may be configured to generate and send one or more patch data files comprising incremental changes associated with the content to the client device . The patch data files may include an audio file a video file an image file a text file a HTML file and so forth. In one implementation the patch generation module may be configured to generate one or more patch data files comprising incremental changes or updates associated with the content based on one or more of the content updates the version data the client device type user account data or other data. For example the patch generation module may identify the client device type that has downloaded and stored the content . Based on the client device type the patch generation module may generate one or more patch data files comprising incremental changes to the content .

Additionally the patch data files or portions thereof may be personalized using the customization data . For example the customization data may contain information that associates the content with a particular user a particular entity and so forth. Based on the particular user or particular entity the patch generation module may be configured to generate a digital autograph a digital signature a recordable message or other personalized message. For example an author of an eBook may be able to create a dedicated signature with a personalized message for each respective user that has downloaded the content . The patch generation module may be configured to generate one or more patch data files that include the dedicated signature and transmit the patch data files to the client device .

The patch generation module may also be configured to generate patch data files that include an access code or other credentials that enable access to additional content . For example some educational institutions may require an access code such as a username a password and so forth in order for the user to be able to access additional content associated with an electronic textbook such Web resources test materials supplemental reading materials and so forth.

The memory may also comprise a user interface module . The user interface module may be configured to provide a user interface such as an application programming interface web page or other interface to the user the client devices other devices and so forth.

The memory may store one or more application modules . The application modules may provide various functionalities such as handling initial distribution of the content to the client devices account management billing and so forth.

Other modules may also be present such as a version update module. The version update module may be configured to update the version number of the content upon a determination that the number of updates included in the patch data files has exceeded a threshold number of updates. For example the version update module may be configured to maintain a history of the updates included in the patch data files associated with a respective version of the content . Upon a determination that the number of updates has exceeded a threshold amount the version number associated with the content may be increased modified or otherwise changed.

The modules in this disclosure are described as separate modules for convenience and not by way of limitation. In some implementations at least a portion of the functionality of these modules may be combined into a single module incorporated into another module and so forth. In some implementations the functionality of the server may exist across one or more devices.

The memory may also include a datastore to store information for operations of the server . The datastore may comprise a database array structured list tree or other data structure. In some implementations the datastore may store at least a portion of the content content updates the version data the client device type the user account data the customization data and so forth. As described above the content may include audio data video data an eBook or other data T . The datastore may store other data not depicted such as user preferences user interface elements and so forth.

The client device may also include one or more communication interfaces configured to send and receive communications over the network s .

Similar to the server s the client device may include one or more I O interfaces to allow the client device to communicate with other devices such as those shown in . In some embodiments the I O interface s may be configured to provide a USB connection. The client device may also include one or more busses or other internal communications hardware or software that allow for the transfer of data between the various modules and components of the client device .

The I O interface s may couple to one or more I O devices . The I O device s may include user input devices such as one or more of a keyboard a mouse a pen a game controller microphone a touch input device a gestural input device one or more accelerometers one or more gyroscopes the server s and so forth. The I O device s may include output devices such as one or more of a display a printer audio speakers haptic output device and so forth. In some embodiments the I O device s may be physically incorporated with the client device or be externally placed.

As shown in the client device includes one or more memories . The memory comprises one or more CRSM as described above in . The memory may include at least one OS module . The OS module is configured to manage hardware resources such as the I O interface s and communication interface s and to provide various services to applications or modules executing on the processor s . The OS module may comprise one or more mobile operating systems configured for execution on mobile computing devices. The memory may include the communication module the differential patch module an application module or other module s .

The communication module is configured to maintain communication with other devices. The communication module may be configured to send receive or send and receive data with another client device another server and so forth using one or more of the communication interfaces .

As described above the differential patch module may be configured to accept one or more patch data files and update the content stored in the memory from the server . The differential patch module may be configured to maintain or transfer user annotations including highlights bookmarks notes and so forth such that these annotations remain accessible to the user after the update of the content .

The user may perform various customizations to the content stored on the client device by creating annotations such as highlights bookmarks notes and so forth. The differential patch module may be configured to process the patch data files such that annotations are retained and accessible in conjunction with the content .

In other implementations the patch generation module may be configured to generate patch data files which include the annotations as customization data . Therefore when the content is updated with the patch data files the user s annotations remain available in the content .

The differential patch module may be configured to determine the user s position last accessed within the content such as the reading position and maintain that position information following application of the patch data files . For example the user s reading position in the eBook may be stored and updated once the content has been updated. The differential patch module may also be configured to determine whether the content is currently being accessed by the client device . In some implementations the differential patch module may disallow an update of a portion of the content associated with the patch data file at the location currently being accessed by the user s client device . For example the differential patch module may determine a portion of the content is currently being accessed by the client device and presented on the display. Based on the determination modification of the content by the one or more patch data files for other portions of the content may be permitted. In other implementations the differential patch module may be configured to determine the user s current reading location and allow an update of a portion of the content associated with the patch data file at the location currently being accessed by the user s client device .

The application module may include one or more of a web browser eBook reader application media player application and so forth. For example the application module may comprise a plurality of libraries or executable modules which may provide functionality to present the content on a display.

The memory may also include other modules . The other modules may include a digital rights management module configured to support one or more digital rights schemes associated with access to the content .

The memory also includes a datastore to store information associated with operation of the client device . The datastore may comprise a database array structured list tree or other data structure. The datastore may store the content the patch data files and so forth. Other data may also be stored in the datastore such as user preferences device settings and so forth.

The modules of the client device the server and so forth are described in this disclosure as separate modules. In some implementations at least a portion of the functionality of these modules may be combined into a single module or incorporated into another module. Furthermore in some implementations the client device and the server may be operated within an organization particular network and so forth.

At block the patch generation module identifies content based at least in part on a set of user preferences associated with one or more client devices . For example the user account data may include a user preference for books about the history of music. The patch generation module may identify content associated with music history such as Biography of Elvis Presley. 

At block the patch generation module is configured to send the content identified as corresponding to the user preferences to a cache associated with the client device . For example the book Biography of Elvis Presley may be sent to the client device and stored in the cache. In some implementations the content may be sent to the cache associated with the client device prior to the client device requesting the content . The content as sent may be configured to be inaccessible to the user the client device or both. For example the content may be encrypted locked have permissions set which prevent presentation on the display and so forth.

At the patch generation module may receive a request for the client device to access the content . For example a user may use the client device to submit a request to purchase or otherwise acquire access to the content .

At when the user requests access to the content using the client device the patch data files may be provided that include an access code enabling access to the content previously stored in the cache. For example once the user has acquired sufficient rights one or more patch data files configured to enable access to the pre loaded content may be provided.

The patch data files may also include other information such content updates that have been released since the sending of the content to the cache. The one or more patch data files may have a total file size in aggregate which is less than that of the content file size. In other words the one or more patch data files may be smaller than the content .

At the one or more patch data files are sent to the client device or other device. For example the server may use the network to send the patch data files to the client device . As described above the differential patch module accepts the patch data files and permits access to the content accordingly. Continuing the example the content may be rendered accessible by decrypting the encrypted content .

At block one or more patch data files may be accessed. For example the patch data files generated as described above with regard to may be retrieved from memory of the client device the server or another device.

As described above in some implementations a notification may be sent indicating updates to the content are available. At block the patch generation module sends a notification to the client device that one or more patch data files associated with the content is available. For example the notification may include information describing what the differences are between the content and the patch data files . In one implementation the patch generation module may be configured to determine whether the patch data files include a threshold number of updates and based on the determination send the notification to the client device .

At block the patch generation module determines a user identification corresponding to the user . For example the user identification may include associating a particular user with corresponding user account data .

At block the patch generation module accesses customization data based on the user identification. For example the customization data may comprise an image file an audio file a video file a text file a HTML file or other file associated with a particular user a particular entity and so forth as specified in the customization data .

At block the patch generation module may configured to determine a set of device capabilities associated with the type of client device . For example the patch generation module may determine that the client device does not have audio capability.

At block the patch generation module may be configured to generate or update the patch data file based at least in part on the customization data the type of client device the set of device capabilities associated with the client device or a combination of these factors. For example the customization data may include video files audio files image files text files markup language files digital autographs digital signatures recordable messages or other data such as the access code mentioned above. The patch data files may be updated to include the customization data . For example the patch data file may include the dedicated signature from the author.

As described in some implementations delivery of the patch data files may be based upon the client device sending the request to the server . At block the patch generation module receives the request to send the patch data file to a client device associated with the user identification. For example a differential patch module stored on a client device may be configured to generate the request in response to the notification. In other implementations one or more patch data files may be sent to the client device without any user notification.

At block the patch generation module sends the patch data files to the client device . For example the patch generation module may be configured to deliver patch data files to the client devices on a predetermined schedule upon user request when communication is established and available and so forth. The patch generation module or another module may be configured to verify that the client device is associated with the user identification used to customize the content . For example the user account data may be checked to confirm that the client device is registered to that user .

The client device may receive the patch data files and update the content using the patch data files . Because the size of the patch data files may be smaller than the size of the content the content may be changed incrementally instead of replacing the entire content . For example the differential patch module may be configured to update the content when the size of the patch data file is smaller than the size of the content . Accordingly the entire content would be replaced only when the size of the patch data file is greater than or equal to the size of the content .

At block one or more patch data files are received. The one or more patch data files are associated with the content . For example the client device may receive the one or more patch data files from the server by way of the network .

At block the content associated with the one or more patch data files is accessed. For example the patch data files involving changes to the eBook Vertebrate Anatomy may result in the differential patch module opening the files for that piece of content stored in the memory .

At block the content is modified based at least in part on the one or more patch data files . For example as depicted in the text file may be replaced with a newer version and additional image file may be inserted and so forth. In another example the metadata of the content may be updated. These updates to metadata may add remove or modify access privileges to a portion of the content . The modified content may be stored for later use such as presentation on one or more of the I O devices of the client device .

At block the now modified content which includes the changes expressed in the patch data file may be provided to the user . For example the client device may present on a display the updated text file play through a speaker an updated audio file and so forth.

The modification to the content by the differential patch module may be done with or without user intervention. In one implementation a user interface may be used to present an indication that the one or more patch data files are available. For example a dialog box may be presented on the display or an audio prompt played from the speaker. In this implementation the modifying may be based at least in part on receipt of user input indicative of acceptance to apply the patch data files . For example the user selecting yes responsive to the dialog box may result in the patch data files being processed into the content using the differential patch module .

The sending of the one or more patch data files may be based at least in part on an update threshold. The update threshold sets a limit at which point the patch data files may be sent to the client device . The update threshold may be expressed as one or more of bytes transferred date elapsed time count of changes portion of the content affected by the updates and so forth. For example the update threshold may be configured to send the one or more patch data files so long as the patch data files do not exceed a certain maximum size. In one implementation the patch generation module may determine the one or more patch data files have a total byte size during transfer which is less than the update threshold. Because the one or more patch data files are below the threshold the patch data files may be sent to the client device .

In another example the update threshold may be set to only send updates every calendar month. The process may involve determination that the one or more patch data files meet or exceed the update threshold. Based at least in part on meeting or exceeding the update threshold the one or more patch data files may then be sent to the client device .

Using these techniques updates to the content may be made quickly and efficiently. Instead of re delivering the entire content selected portions of the content are sent and changed.

At block the patch generation module may be configured to identify a version corresponding to the content to be updated on the client device . For example the version data associated with the content on the client device may be retrieved.

At block the patch generation module may be configured to generate a plurality of patch data files associated with the version of the content . For example for each version of content patch data files may be generated that include corrections to formatting errors changes to the associated metadata such as description price author name and so forth. As content updates are received the corresponding patch data files may be stored in memory.

At block a subset of the plurality of patch data files are determined for sending to the client device . This subset may be based on the version of the content or other data. For example the subset may include all patch data files associated with bringing version 1.1 of the eBook Vertebrate Anatomy up to version 1.2 .

In one implementation the subset may be based on file transfer size constraints such as a minimum file transfer size a maximum file transfer size or both. For example the subset may accumulate changes until reaching a particular size is reached at which time the subset is distributed to the client devices . In another implementation the subset may be based on a time since last update. For example the patch data files may be generated monthly for distribution.

At block the patch generation module sends the subset of patch data files to the client device . For example the server may use the network to transfer the subset of patch data files to the client device .

As described above upon receipt the differential patch module of the client device may be configured to update the content based on the subset of the patch data files . For example the eBook may be updated to the version 1.2 .

The examples in this disclosure refer to the differential patch module executing and making changes to the content as stored on the client device . However it is understood that in other implementations the differential patch module and the associated functions may be implemented on other devices. For example the differential patch module may execute on a content caching server such that cached piece of the content is updated using the patch data files .

Those having ordinary skill in the art will readily recognize that certain steps or operations illustrated in the figures above can be eliminated or taken in an alternate order. Moreover the methods described above may be implemented as one or more software programs for a computer system and are encoded in a computer readable storage medium as instructions executable on one or more processors.

The computer readable storage medium can be any one of an electronic storage medium a magnetic storage medium an optical storage medium a quantum storage medium and so forth. Separate instances of these programs can be executed on or distributed across separate computer systems. Thus although certain steps have been described as being performed by certain devices software programs processes or entities this need not be the case and a variety of alternative implementations will be understood by those having ordinary skill in the art.

Additionally those having ordinary skill in the art readily recognize that the techniques described above can be utilized in a variety of devices environments and situations. Although the present disclosure is written with respect to specific embodiments and implementations various changes and modifications may be suggested to one skilled in the art and it is intended that the present disclosure encompass such changes and modifications that fall within the scope of the appended claims.

