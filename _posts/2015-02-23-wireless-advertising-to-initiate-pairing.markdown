---

title: Wireless advertising to initiate pairing
abstract: Embodiments relate to configuring a wireless device. The wireless device has a first module implementing a first wireless protocol and a second module implementing a second wireless protocol. After the wireless device identifies a need to configure a second wireless protocol, the wireless device begins periodically wirelessly broadcasting advertisement packets by the first module. Each advertisement packet has a payload storing a configuration request indicator. A host receives one of the advertisement packets, optionally establishes, with the first protocol, a channel with the wireless device. The host transmits a reply packet of the first protocol that contains configuration data for the second wireless protocol. The wireless device uses the reply packet to configure itself for connectivity using the second wireless protocol.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09351154&OS=09351154&RS=09351154
owner: Microsoft Technology Licensing, LLC
number: 09351154
owner_city: Redmond
owner_country: US
publication_date: 20150223
---
Computing devices often lack configuration parameters necessary for establishing wireless connections. Newly issued reset or reconfigured wireless capable devices hereafter devices may lack configuration settings needed for use of a wireless protocol such as an IEEE 802.11 protocol. Configuration settings for a wireless protocol are sometimes absent or are inapplicable to any nearby wireless access points. In this common case a user must manually configure the device. Manual configuration usually requires a user to input to the wireless device information about a wireless network or access point with which wireless connectivity is desired. However manually configuring a device for establishing a wireless connection can have disadvantages and limits. Some unconfigured devices such as sensors embedded in a structure are difficult to physically access. Some devices have unwieldy and unintuitive input means. In addition errors can occur during manual entry of configuration parameters incorrect or mis entered configuration parameters are common and can be difficult to identify when wireless connectivity is not established.

Techniques discussed below may help to address some of these configuration issues by using secondary wireless protocols to configure devices to connect to networks or access points using primary wireless protocols.

The following summary is included only to introduce some concepts discussed in the Detailed Description below. This summary is not comprehensive and is not intended to delineate the scope of the claimed subject matter which is set forth by the claims presented at the end.

Embodiments relate to configuring a wireless device. The wireless device has a first module implementing a first wireless protocol and a second module implementing a second wireless protocol. After the wireless device identifies a need to configure a second wireless protocol the wireless device begins periodically wirelessly broadcasting advertisement packets by the first module. Each advertisement packet has a payload storing a configuration request indicator. A host receives one of the advertisement packets optionally establishes with the first protocol a channel with the wireless device. The host transmits a reply packet of the first protocol that contains configuration data for the second wireless protocol. The wireless device uses the reply packet to configure itself for connectivity using the second wireless protocol.

Many of the attendant features will be explained below with reference to the following detailed description considered in connection with the accompanying drawings.

Embodiments discussed below relate to automatic configuration of a device by the device using a first wireless protocol to broadcast packets advertising the device s unconfigured state which initiates use of the first wireless protocol to provision configuration parameters for a second wireless protocol. Discussion will begin with a general scenario of an unconfigured device and an overview of how a first wireless protocol is used to configure the device. This is followed by discussion of features of relevant protocols and the information exchanged therewith between an unconfigured device and a host are then described. Implementation details and variations are then explained.

The communication stacks of the wireless device and the host include implementations of a first protocol and a second protocol . The term implementation refers to any modules processes programs or the like that when executed by processing hardware function in a way that satisfies the requirements or specifications of a corresponding protocol for instance by maintaining and transitioning between communication states parsing incoming packets forming outgoing packets etc. An implementation can also be a dedicated protocol chip with a coin cell battery an antenna etc. This description occasionally omits the term implementation . As used herein whether the term protocol refers to a protocol per se or to an implementation of a protocol will be apparent from context.

At an initial stage A a beaconing program checks for the presence or content of local configuration settings for the second protocol . This can be performed in numerous ways. For example the beaconing program can check the contents of a configuration file managed by a file system query a configuration data store invoke an network application programming interface API of the operating system to determining the current configuration state of the implementation of the second protocol check a flag indicating whether a configuration process has been performed for the wireless device or for its implementation of the second protocol has e.g. whether the wireless device has been reset or is in a factory default state and so forth. In one embodiment if the same radio can be used for both the first protocol and the second protocol or if a radio for the second protocol can be used with minimal power consumption the wireless device can use its radio to detect the presence of signals of the second wireless protocol and condition beaconing on the presence of those signals. In other words the wireless device can avoid beaconing until another node appears to be available for communication via the second protocol . It is also possible to use a notification system provided by an operating system to avoid notification overload when the host has received multiple beacon packets perhaps from different wireless devices. For example a notification can be displayed to indicate that one or more devices have been detected with a user interface element to allow a user to initiate a connection for all some or none of the detected devices.

The use of a distinct beaconing program is only a convenience. The configuration related logic of the beaconing program can also be performed by the implementations of either the first or second protocols by an element of the network stack a configuration daemon server executing on the wireless device etc.

Regardless of how it is determined that the wireless device has an unconfigured status when the wireless device determines that there is a need to configure the second protocol the beaconing program employs the first protocol to advertise its unconfigured state. To this end any of a variety of protocols for the physical medium link layers can be used. For example the first and or second protocols may be variants of the Bluetooth Low Energy i.e. Bluetooth LE Bluetooth 4.0 or Bluetooth Smart protocol ZigBee Thread IEEE 802.15 802.11 WiFi etc. Preferably the first protocol includes features for low power connectionless broadcasting of packets for advertising device presence as well as features for listening for those advertisement packets. For example the Bluetooth LE protocol specifies an advertisement packet format that has a customizable payload. That payload can be used to carry information signaling the configuration status of the wireless device . Similar beacon or advertisement packets of other protocols may be used instead. In other embodiments unused or insignificant standard packet header fields may be used.

The beaconing program instructs the implementation of the first protocol to begin broadcasting advertisement packets . shows an example of an example of an advertisement packet . The beaconing program may pass values to the first protocol for encapsulation in the advertisement packets of the first protocol. The first protocol builds the protocol compliant advertisement packet by placing the values in standard packet header fields and or custom fields within a protocol defined payload field . Without limit or requirement the values provided by the beaconing program may correspond to fields such as a configuration identifier or packet type field a device name field a device or vendor identifier field a key information field or other information. A packet type value provided by the beaconing program for the packet type field indicates that the advertisement packet is advertising the configuration status e.g. unconfigured of the wireless device . Different values may by convention indicate different configuration states and or different protocols to be configured. For example the packet type value may be an alphanumeric character string or a numeric code that identifies the second protocol. The device name value may be a string of text describing the wireless device for instance Pat s Phone . The advertisement packets are broadcast without requirement of any prior pairing or connection establishment with any potential recipient. That is the advertisement packets need not be addressed to any particular device and any device in range of the wireless device may receive the packets and decided whether to service them.

Next at step B the host receives one of the advertisement packets . The implementation of the first protocol on the host provides the packet to a listener program . As with the beaconing program the listener program is only a convenience. The functionality of the beaconing program may be performed by the first protocol for example. The listener program analyzes the content of the received packet. In particular the listener program tests for the presence of values in one or more fields of the packet that indicate that the packet is advertising a configuration solicitation. For example the presence of a packet type value may indicate the nature of the packet and trigger configuring service by the host . Other features of the packet may signal the nature of the packet. For example the format of the content of the payload field the data types and locations of values in the payload field a combination of values in fields e.g. a vendor ID and a device type or other information can be built into the packet to indicate a configuration request. The listener program may have a white list of identifiers e.g. device identifiers vendor identifiers device type identifiers that are pre defined for configuration processing. The listener program may also determine which protocol of the wireless device is to be configured which might be discerned from a particular field of the advertisement packet or from which protocol configuration parameters are available on the host and so forth. In one embodiment the listener program may send configuration data for multiple protocols. After some optional security steps discussed further below the host obtains configuration settings for the request from storage encapsulates them in a reply packet compliant with the first protocol and transmits the reply packet to the host .

As with the beaconing program the listener program can be implemented by a component of a network protocol stack a server program a wireless network interface a dedicated hardware device etc. In addition the host may or may not have an implementation of the target second protocol for which configuration is being requested. If the host does have an implementation the configuration settings may be obtained directly from the same storage that configures the implementation of the second protocol for example from a configuration file associated with an implementation of the second protocol if assumed to be up to date and functioning . In practical applications the host will also be using the second protocol and will have network layer connectivity through the wireless access point .

At step C the host receives the reply packet via the first protocol . The values in the fields of the reply packet are extracted and stored as local configuration settings for the second protocol . The beaconing program may extract and store the configuration values or an augmentation of the implementation of the first protocol which presumably has access to a networking API of the operating system handles the storing and extraction. After the local configuration settings are stored if necessary the second protocol is activated and a connection or pairing process for the second protocol is automatically initiated. Specifically the local configuration settings are used to contact the wireless access point and establish network connectivity for the wireless device . A connection pairing packet compliant with the second protocol and containing one or more values obtained from the host is transmitted to the wireless access point . In one embodiment configuration parameters in the reply packet are directly used to form the connection pairing packet and then the local configuration settings are updated as a side effect of the process of establishing the connection pairing with the wireless access point . If a connection using the obtained configuration settings is determined to be unsuccessful an appropriate message may be displayed and the configuration process may optionally be repeated.

At step the host which is actively listening for beacon advertisement packets of the first protocol receives one of the configuration initiating packets. In one embodiment the host may provide configuration parameters for the first protocol without any security or verification steps. In another embodiment security steps may be performed before the host transmits connection enabling parameters for the second protocol. At step the wireless device receives the packet containing the connection parameters for the second protocol. At step the wireless device configures itself for the second protocol and proceeds to connect to a wireless network or access point using the second protocol and the configuration parameters received from the host . The host may ignore advertisements from a same wireless device after providing configuration parameters some threshold number of times.

If the RSSI of the host indicates that the transmitter is sufficiently close then the host may initiate a security exchange with the wireless device to further assure that the wireless device is not an unauthorized device. For example the host may display a message noting that the wireless device was detected possibly showing a name or other information about the wireless device per the payload of the request packet see . The host code a picture a sequence of color patches etc. The host sends a packet of the first protocol that informs the wireless device that security information is being displayed. The wireless device responds by prompting the user of the wireless device to provide input to the wireless device . The input is transmitted to the host via the first protocol. The host compares the input with the displayed security information and if it matches then at step the configuration settings are obtained from storage and at step the host transmits the configuration settings . Step may involve establishing according to the first protocol a formal pairing connection channel etc. to convey the configuration settings . In another embodiment connectionless exchanges for instance requests for more advertisement information additional beacon broadcasts etc. may be used to pass the configuration settings to the wireless device .

In one embodiment the beaconing and configuration process may be performed without full operation of the wireless device . For example if the first protocol is implemented by a battery powered self contained communication interface a protocol on a chip the interface can issue advertisements and acquire configuration parameters even when the rest of the wireless device is inactive or unpowered. The hardware implementing the first protocol will autonomously advertise collect configuration parameters for the second protocol store them and make them available to the wireless device when the wireless device boots up.

