---

title: Virtual data storage service with sparse provisioning
abstract: Virtual data stores may be sparsely provisioned by virtual data storage services in a manner that controls risk of implementation resource shortages. Relationships between requested data storage space size, data storage server capacity, allocated data storage space size and/or allocated data storage space utilization may be tracked on a per data store, per customer, per data storage server, and/or a per virtual data storage service basis. For each such basis, a set of constraints may be specified to control the relationships. The set of constraints may be enforced during implementation resource allocation, and by migration of data storage space portions to different implementation resources as part of a sparse provisioning load balancing. Sparse provisioning details may be made explicit to virtual data storage service customers to varying degrees including explicit, aggregate on a per customer basis, and aggregate on a per virtual data storage service basis.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09304687&OS=09304687&RS=09304687
owner: Amazon Technologies, Inc.
number: 09304687
owner_city: Reno
owner_country: US
publication_date: 20150506
---
This application is a continuation of U.S. patent application Ser. No. 14 507 752 entitled VIRTUAL DATA STORAGE SERVICE WITH SPARSE PROVISIONING filed Oct. 6 2014 which is a divisional of U.S. patent application Ser. No. 12 886 738 entitled VIRTUAL DATA STORAGE SERVICE WITH SPARSE PROVISIONING filed Sep. 21 2010 and issued as U.S. Pat. No. 8 856 483 on Oct. 7 2014 both of which are incorporated herein by reference for all purposes.

Virtual data storage services have become available that enable customers of the services to provision virtual data stores of various kinds without concern for the hardware that implements and maintains the virtual data stores. The implementation hardware and suitable associated facilities such as network connectivity are financed and maintained by the virtual data storage service operators. In return the operators charge customers according to various cost plans typically including at some costs that are based on virtual data store size e.g. as measured in gigabytes .

It is common for customers of such virtual data storage services to over provision with respect to current data storage needs in anticipation of increased future data storage needs. Since modern virtual data storage services can rapidly provision additional data storage space e.g. on the order of minutes seconds or less this is an inefficiency that can result in significant additional cost to virtual data storage service operators and or their customers. However not all customers over provision and customers that do over provision do so to different extents. Accordingly poor assumptions about customer over provisioning can be problematic.

Same numbers are used throughout the disclosure and figures to reference like components and features but such repetition of number is for purposes of simplicity of explanation and understanding and should not be viewed as a limitation on the various embodiments.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

Virtual data stores may be sparsely provisioned by virtual data storage services in a manner that controls risk of implementation resource shortages for example due to sudden spikes in demand. Customers of a virtual data storage service in accordance with at least one embodiment may request that the virtual data storage service provision data stores of various sizes. The virtual data storage service may assess the requests with respect to various utilization metrics and for at least some of the requests may determine that the associated data store may be allocated initial implementation resources e.g. hard drive disk space that maintain a data storage space of a size less than the requested size.

Relationships e.g. ratios between requested data storage space size data storage server capacity allocated data storage space size and or allocated data storage space utilization may be tracked on a per data store per customer per data storage server and or a per virtual data storage service basis. For each such basis a set of constraints sparse provisioning constraints may be specified to control the relationships. Such control may reduce a risk that a sudden spike in activity e.g. writes of data to previously unwritten portions of a data storage space results in a performance degradation while additional implementation resources are made available. The set of constraints may be enforced during implementation resource allocation and or re allocation collectively allocation and by migration of data storage space portions to different implementation resources as part of a sparse provisioning load balancing.

Various activity e.g. rates of data consumption rates of data change with respect to data storage spaces may be monitored and implementation resource allocations adjusted in accordance. As well as distinctions between active and inactive portions of a data storage space i.e. between portions of the data storage space written at least once and not written since provisioning respectively access and or update frequencies of data in active portions of the data storage space the active storage space may be tracked. Hot and cold regions of the active storage space i.e. frequently and infrequently accessed and or updated regions respectively may be identified and cold regions may be transferred to lower performance and or lower cost implementation resources.

Sparse provisioning details may be made explicit to virtual data storage service customers to varying degrees including explicit aggregate on a per customer basis and aggregate on a per virtual data storage service basis. A customer may be presented with an explicit inventory of portions of a provisioned virtual data store that are unallocated inactive active hot and or cold and the customer s cost plan may specify different costs associated with each status. Alternatively the customer may be presented with various representative sparse provisioning metrics for one or more sets of virtual data store provisioned by the customer such as percent active and the customer s cost plan may apply various sparse provisioning discounts e.g. corresponding to sparse provisioning metric thresholds when sparse provisioning is authorized by the customer. As a further alternative the virtual data storage service operator may incorporate sparse provisioning cost efficiencies into pricing of the service as a whole.

Various approaches may be implemented in various environments for various applications. For example illustrates aspects of an example environment for implementing aspects in accordance with various embodiments. As will be appreciated although a Web based environment may be utilized for purposes of explanation different environments may be utilized as appropriate to implement various embodiments. The environment shown includes both a testing or a development portion or side and a production portion. The production portion includes an electronic client device which may include any appropriate device operable to send and receive requests messages or information over an appropriate network and convey information back to a user of the device . Examples of such client devices include personal computers cell phones handheld messaging devices laptop computers tablet computers set top boxes personal data assistants electronic book readers and the like.

The network may include any appropriate network including an intranet the Internet a cellular network a local area network a wide area network a wireless data network or any other such network or combination thereof. Components utilized for such a system may depend at least in part upon the type of network and or environment selected. Protocols and components for communicating via such a network are well known and will not be discussed herein in detail. Communication over the network may be enabled by wired or wireless connections and combinations thereof. In this example the network includes the Internet as the environment includes a Web server for receiving requests and serving content in response thereto although for other networks an alternative device serving a similar purpose could be utilized as would be apparent to one of ordinary skill in the art.

The illustrative environment includes at least one application server and a data store . It should be understood that there may be several application servers layers or other elements processes or components which may be chained or otherwise configured which may interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term data store refers to any device or combination of devices capable of storing accessing and or retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment.

The application server may include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device and may even handle a majority of the data access and business logic for an application. The application server provides access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the Web server in the form of HTML XML or another appropriate structured language in this example.

The handling of all requests and responses as well as the delivery of content between the client device and the application server may be handled by the Web server . It should be understood that the Web and application servers are not required and are merely example components as structured code discussed herein may be executed on any appropriate device or host machine as discussed elsewhere herein. Further the environment may be architected in such a way that a test automation framework may be provided as a service to which a user or application may subscribe. A test automation framework may be provided as an implementation of any of the various testing patterns discussed herein although various other implementations may be utilized as well as discussed or suggested herein.

The environment may also include a development and or testing side which includes a user device allowing a user such as a developer data administrator or tester to access the system. The user device may be any appropriate device or machine such as is described above with respect to the client device . The environment may also include a development server which functions similar to the application server but typically runs code during development and testing before the code is deployed and executed on the production side and becomes accessible to outside users for example. In some embodiments an application server may function as a development server and separate production and testing storage may not be utilized.

The data store may include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect. For example the data store illustrated includes mechanisms for storing production data and user information which may be utilized to serve content for the production side. The data store also is shown to include a mechanism for storing testing data which may be utilized with the user information for the testing side. It should be understood that there may be many other aspects that are stored in the data store such as for page image information and access right information which may be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store .

The data store is operable through logic associated therewith to receive instructions from the application server or development server and obtain update or otherwise process data in response thereto. In one example a user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and may access the catalog detail information to obtain information about items of that type. The information then may be returned to the user such as in a results listing on a Web page that the user is able to view via a browser on the user device . Information for a particular item of interest may be viewed in a dedicated page or window of the browser.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable medium storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

In at least one embodiment one or more aspects of the environment may incorporate and or be incorporated into a virtual data store service architecture. depicts aspects of an example virtual data store service architecture in accordance with at least one embodiment. The example virtual data store service architecture includes multiple clients communicatively connected to a virtual data store service over a network . For example the clients may corresponding to computing devices such as the computing device of and or client programs incorporated into such computing devices. The ellipsis between the client and the client indicates that the virtual data store service architecture may include any suitable number of clients e.g. thousands millions and more although for clarity only two are shown in .

One or more of the clients may be utilized by one or more customers of the virtual data store service to interact with a control plane of the virtual data store service and thereby provision one or more virtual data stores . Alternatively or in addition one or more of the clients may be utilized not necessarily by virtual data store service customers to interact with provisioned virtual data stores . The provisioned virtual data stores may include any suitable type of virtual data store. Examples of suitable types of virtual data store include virtual data stores that emulate block devices including virtual file systems and or virtual volumes thereof virtual data stores having Web service type interfaces virtual data stores having database type interfaces such as relational database RDBMS type interfaces virtual data stores having custom interfaces and suitable combinations thereof. depicts multiple virtual data store sets . For example each set of virtual data stores may correspond to a different type of virtual data store. The ellipsis between the virtual data store set and the virtual data store set indicates that the virtual data stores may include any suitable number of sets and or types of virtual data store although for clarity only two are shown in .

The virtual data store service may include any suitable implementation resources . Each of the virtual data stores may be implemented by a set of the implementation resources . For example the implementation resources may include multiple sets of data storage server computers . Each set of data storage servers may be dedicated to implementing a particular type of virtual data store. Alternatively or in addition different sets of data storage servers may have different performance and or cost characteristics. For example the data storage server set may include high performance and or cost data storage servers relative to data storage servers in the data storage server set . The control plane may process virtual data store provisioning requests manage allocation of virtual data stores to implementation resources and or manage allocation of implementation resources to virtual data stores as well as provide for associated cost accounting services.

Provisioning configuration re configuration and or de provisioning collectively provisioning of virtual data stores may be controlled by the control plane of the virtual data store service . depicts aspects of an example control plane in accordance with at least one embodiment. The control plane of is an example of the control plane of . The control plane may include a provisioning interface configured at least to receive virtual data store provisioning requests from one or more of the clients a workflow component configured at least to guide responses to provisioning requests in accordance with one or more provisioning workflows a data storage space allocation component configured at least to manage allocation of implementation resources to virtual data stores and a cost tracking component configured at least to track and present costs associated with the virtual data stores and or the implementation resources .

The provisioning interface may include any suitable provisioning interface elements. Examples of suitable provisioning interface elements include interface elements that correspond to requests to provision configure reconfigured and or de provision the virtual data stores as well as interface elements that provide access to virtual data store configuration information and one or more interface elements enabling authentication to establish authority for such provisioning related operations. The provisioning interface may incorporate and or be incorporated in a user interface UI such as a graphical user interface GUI a Web based interface a programmatic interface such as an application programming interface API and or a set of remote procedure calls RPCs corresponding to provisioning interface elements a messaging interface such as a messaging interface in which the interface elements of the provisioning interface correspond to messages of a communication protocol and or any suitable combination thereof.

In at least one embodiment the provisioning interface the data storage space allocation component and the cost tracking component may create and or cause the workflow component to create one or more workflows that are then maintained by the workflow component . Workflows such as provisioning workflows and constraint enforcement workflows may include one or more sequences of tasks to be executed to perform a job such as provisioning or constraint enforcement. A workflow as the term is used herein is not the tasks themselves but a task control structure that may control flow of information to and from tasks as well as the order of execution of the tasks it controls. For example a workflow may be considered a state machine that can manage and return the state of a process at any time during execution. Workflows may be created from workflow templates. For example a provisioning workflow may be created from a provisioning workflow template configured with parameters by the data storage space allocation component . As another example a constraint enforcement workflow may be created from a constraint enforcement workflow template configured with parameters by the data storage space allocation component .

The workflow component may modify further specify and or further configure established workflows. For example the workflow component may select particular implementation resources of the virtual data store service to execute and or be assigned to particular tasks. Such selection may be based at least in part on the computing resource needs of the particular task as assessed by the workflow component . As another example the workflow component may add additional and or duplicate tasks to an established workflow and or reconfigure information flow between tasks in the established workflow. Such modification of established workflows may be based at least in part on an execution efficiency analysis by the workflow component . For example some tasks may be efficiently performed in parallel while other tasks depend on the successful completion of previous tasks.

As part of provisioning a virtual data store the provisioning interface and or the workflow component may request that the data storage space allocation component determine the appropriate set of the implementation resources required to implement the virtual data store determine whether the required implementation resources are available and or satisfy an associated set of sparse provisioning constraints and or allocate the required implementation resources. The data storage space allocation component may incorporate any suitable data storage space allocation and or resource scheduling algorithm. Such algorithms are well known to those of skill in art and need not be described here in detail.

The sparse provisioning constraints may include any suitable sparse provisioning constraint. Examples of suitable sparse provisioning constraints include constraints with respect to data store utilization metrics including metrics aggregated with respect to customer customer type virtual data store type implementation resource type and or the virtual data storage service constraints based at least in part on virtual data store type and or implementation resource type constraints with respect to requested data storage space size data store server capacity allocated data storage space size and suitable ratios and or combinations thereof. Sparse provisioning constraints may include any suitable conditions such as compound conditions specified with Boolean operators and conditions specifying that particular numbers levels ratios and or proportions are above a minimum value below a maximum value and or within a specified range of values.

The data store utilization metrics may include any suitable utilization metrics for the virtual data stores and or their associated data storage spaces allocated at the sets of data storage servers . Examples of suitable utilization metrics include amounts of active inactive hot and or cold data storage space and or rates of change thereof. Such amounts may be proportions and or ratios relative to one another and or to requested virtual data store size. A rate of consumption of a particular virtual data store may correspond to a rate of decrease in an amount of inactive data storage space in the virtual data store. Virtual data stores may be implemented by multiple data storage servers . Particular data storage servers may participate in the implementation of multiple virtual data stores . Further examples of suitable utilization metrics include virtual data store and or allocated data storage space metrics aggregated with respect to particular data storage servers. In at least one embodiment the data store utilization metrics include ratios of requested storage space i.e. for one or more of the virtual data stores to allocated storage space i.e. at one or more of the data storage servers for each of the virtual data stores the data storage servers associated data storage spaces and or sets including all thereof. Alternatively or in addition the data store utilization metrics may include ratios of available storage space e.g. maximum available storage space at a particular data storage server and or a capacity of the data storage server allocated storage space and or active storage space to requested storage space allocated storage space and or active storage space. When the data store utilization metrics correspond to sets and or aggregates they may be statistical representations such as averages.

The data storage space allocation component may include an activity monitor configured at least to monitor the virtual data stores the implementation resources and or allocated data storage spaces to collect information sufficient to determine the data store utilization metrics . The data storage space allocation component may further include an activity classification component configured at least to analyze the information collected by the activity monitor to detect virtual data store implementation resource and or allocated data storage space utilization patterns correlated with types of activity class e.g. customer activity class data storage server activity class . For example particular utilization patterns may correspond to low standard or high activity and the sparse provisioning constraints may include constraints referencing such activity classes.

The cost tracking component may maintain a cost tracking account for each customer of the virtual data store service . Utilization and or costs associated with virtual data stores provisioned by a customer and or associated implementation resources may be recorded in the customer s account. The cost tracking component may maintain one or more cost plans specifying how the costs are allocated to the customer s account. The cost tracking component may include an account user interface UI component configured at least to provide the customer with one or more presentations of the utilization and or costs recorded in the customer s account and when one or more of the costs correspond to a financial balance owed to the virtual data store service one or more mechanisms for settling the account balance e.g. payment instrument processing . The account UI may further provide for account creation account configuration and reconfiguration account details viewing and updating as well as account deletion. Account re configuration may include selection from a qualified list of cost plans when multiple such cost plans are available.

The description now turns to example steps and or procedures that may be performed in accordance with at least one embodiment. depicts example steps for sparse provisioning in accordance with at least one embodiment. At step a provisioning request may be received from a customer of the virtual data storage service . For example a request for a 2 Terabyte volume of a specific type of file system may be received at the provisioning interface of . At step a utilization ratio may be determined. For example the data storage space allocation component may determine a data store utilization ratio corresponding to the customer that sent the provisioning request of step . The data store utilization ratio may be a fixed ratio specified for customers of the virtual data storage service . Alternatively the customer data store utilization ratio may be a utilization ratio determined for the requesting customer based on data store utilization metrics associated with provisioned virtual data stores of the customer and or a subset of the customers of the virtual data storage service . For example the data storage space allocation component may determine that the requesting customer has an historical volume utilization ratio of 40 . As another alternative the data store utilization ratio may be a fixed ratio specified for a type of customer including the customer for example as determined by the activity classification component . The utilization ratio determined at step may correspond to a sparseness prediction with respect to utilization of the requested data storage space.

At step a portion of the requested size to allocate may be determined. The data storage space allocation component may determine the portion of the request size to allocate based at least in part on the utilization ratio determined at step . For example the data storage space allocation component may determine that 40 2 Terabytes 800 Gigabytes should be initially allocated in response to the request of step . At step a set of data storage servers may be selected. For example the data storage space allocation component may select a subset of a pool of available data storage servers such as the data storage server set to maintain a data storage space having the size determined at step . In addition the data storage space allocation component may select the set of data storage servers so as to satisfy the sparse provisioning constraints or customer associated subset thereof .

For example the sparse provisioning constraints may specify that data storage servers in the data storage server set are each to have an aggregate with respect to maintained virtual data stores requested storage space to active storage space ratio of no more than 60 . If each data storage server has a data storage capacity of 12 Terabytes then in this example the sparse provisioning constraints specify that virtual data stores maintained by each data storage server are to have an aggregate requested storage space of no greater than 12 Terabytes 60 20 Terabytes to ensure that the data storage server set as a whole has the capacity to accommodate activity surges and longer term changes in utilization ratios.

At step the data storage space having the size determined at step may be allocated at or charged to the set of data storage servers selected at step . For example the data storage space allocation component may cause the allocation. At step the virtual data store requested at step may be provisioned. When queried the provisioned virtual data store may report a size corresponding to the requested size. Alternatively or in addition the provisioned virtual data store may report the allocated size and indicate that the balance of the request is requested pending and or reserved.

In at least one embodiment the selection of the set of data storage servers of step may occur subsequent to the virtual data store provisioning of step . Furthermore the portion determination of step and or the allocation of step may be incorporated into the selection of the data storage servers in accordance with the sparse provisioning constraints . For example the sparse provisioning constraints may include for each of the pool of available data storage servers a constraint corresponding to

At step a portion of a requested size associated with a previously allocated data storage space may be re determined. For example the data storage space allocation component may re determined the portion of the requested size to allocate based at least in part on the activity metric s determined at step and or the classification determined at step . The activity metric s and or the classification may indicate that the initial data storage space allocation is too small e.g. is being consumed at an above average rate or too large e.g. is being consumed at a below average rate . At step the set of data storage servers maintaining the data storage space may be updated accordingly. For example the data storage space allocation component may add or delete data storage servers from the set. As described above for step of the data storage space allocation component may update and or re select the set of data storage servers in accordance with the sparse provisioning constraints or customer associated subset thereof including migrating one or more data storage spaces or portions thereof from one or more of the set of data storage servers at step .

At step the set of low activity regions identified at step may be transferred from the data storage space. For example the data storage space allocation component may cause the set of low activity regions to be transferred from a high performance and or high cost virtual data store in the set of virtual data stores to a relatively low performance and or low cost virtual data store in the set of virtual data stores. At step a size of the allocated data storage space may be reduced. For example the size of the allocated data storage space may be reduced by the amount of data transferred at step . At step the set of data storage servers maintaining the allocated data storage space may be updated as described above for step of .

As described above with reference to the control plane may be facilitated by one or more workflows maintained by the workflow component . depicts example steps for workflow in accordance with at least one embodiment. At step a request may be received by an interface of the control plane . For example the provisioning interface and or the account UI of the control plane may receive the request from a customer and or administrator of the virtual data store service . The request may be a call to a programmatic interface such as an application programming interface API or a Web services interface e.g. utilizing a Simple Object Access Protocol SOAP call. Alternatively or in addition the request may be received through a graphical user interface GUI such as a Web based GUI. At step the request may be analyzed to determine one or more actions required to successfully complete the request. For example the provisioning interface may analyze the request and determine a set of actions required to provision a set of virtual data stores. When an interface element receiving the request corresponds to a specific action to be performed the interface may extract information from the request to be utilized in determining aspects and or parameters of the action to be performed.

At step a request may be sent to create a workflow based at least in part on the one or more actions determined at step . For example the provisioning interface may send the request to the workflow component . The request to create the workflow may include the action s action metadata such as type of action and or action parameters. In at least one embodiment the control plane and or the workflow component maintains a job queue for such requests and workflows are created responsive to new additions to the job queue. At step a workflow and one or more component tasks may be created. For example the workflow component may analyze the request of step to determine the appropriate workflow and component tasks to create.

At step execution of the component task s may be guided in accordance with the workflow. For example the workflow component may activate elements of interfaces of the implementation resources to provision the set of virtual data stores. Alternatively or in addition the workflow component may manage bids for execution of the component task s by components of the virtual data store service . At step it may be determined whether the workflow has finished. For example the workflow component may determine whether a final task in a sequence of tasks managed by the workflow has completed. If so a procedure incorporating step may progress to step . Otherwise the procedure may return to step for a next task and or task sequence. Workflows may guide multiple task sequences executing in parallel. In this case it may be that the workflow is not finished until each of the multiple task sequences completes and or an explicit workflow finished flag is set by one of the component tasks. At step the sender of the request of step may be informed of the result s of the action s .

The various embodiments described herein may be implemented in a wide variety of operating environments which in some cases may include one or more user computers computing devices or processing devices which may be utilized to operate any of a number of applications. User or client devices may include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also may include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also may include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. Such a network may include for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof. The network may furthermore incorporate any suitable network topology. Examples of suitable network topologies include but are not limited to simple point to point star topology self organizing peer to peer topologies and combinations thereof.

In embodiments utilizing a Web server the Web server may run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment may include a variety of data stores and other memory and storage media as discussed above. These may reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device may include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also may include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader may be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules including program modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be utilized and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code may include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which may be utilized to store the desired information and which may be accessed by the a system device. Program modules program components and or programmatic objects may include computer readable and or computer executable instructions of and or corresponding to any suitable computer programming language. In at least one embodiment each computer readable medium may be tangible. In at least one embodiment each computer readable medium may be non transitory in time. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

The use of the terms a and an and the and similar referents in the context of describing embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments and does not pose a limitation on the scope unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of at least one embodiment.

Preferred embodiments are described herein including the best mode known to the inventors. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for embodiments to be constructed otherwise than as specifically described herein. Accordingly suitable embodiments include all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is contemplated as being incorporated into some suitable embodiment unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

