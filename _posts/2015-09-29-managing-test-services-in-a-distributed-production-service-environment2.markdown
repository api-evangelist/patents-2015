---

title: Managing test services in a distributed production service environment
abstract: Systems and methods are described for a storage processing service that processes multiple storage commands. The storage processing service uses tags from test storage commands to determine whether a test storage service is to be instantiated that reflects a corresponding production service. Test storage commands with the same tag are tested on that test service. Additionally, the storage processing service determines a strategy for testing processes on production services when the storage system is overloaded. In one embodiment, the test service manager can determine to stop testing processes for a period of time, and issue a shed command that queues or sheds test storage commands. Advantageously, a shed command, while active at a storage processing service, may alleviate the overload on production services. The test service manager can continue to monitor the storage system to determine whether the overload continues to exist.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09588799&OS=09588799&RS=09588799
owner: Amazon Technologies, Inc.
number: 09588799
owner_city: Seattle
owner_country: US
publication_date: 20150929
---
Generally described computing devices can utilize a communication network or a series of communication networks to exchange data. Companies and organizations operate computer networks that interconnect a number of computing devices to support operations or provide services to third parties. The computing systems can be located in a single geographic location or located in multiple distinct geographic locations e.g. interconnected via private or public communication networks . Specifically data centers or data processing centers herein generally referred to as data centers may include a number of interconnected computing systems to provide computing resources to users of the data center. The data centers may be private data centers operated on behalf of an organization.

To facilitate increased utilization of data center resources individual computing devices within a data center may be configured to provide specific functionality according to the requirements of the data center. Moreover virtualization technologies may allow a single physical computing device to host one or more instances of a virtual machine e.g. a virtual machine device where the virtual machine device instance appears to a user of a data center as an independent computing device. With virtualization the host computing device can create maintain delete or otherwise manage virtual machine device instances in a dynamic manner. In turn users can request computing resources e.g. storage resources from the data center including single computing devices or a configuration of networked computing devices and be provided with virtual machine device instances that provide the requested computing resources. Thus some hosted environments include virtual machine instances that act as computing resources for computing devices e.g. clients . These virtual machine instances can then use storage resources in the data center.

Such virtual machine instances may also use production services to determine interactions of the storage resources. For example a virtual machine instance can use a production storage placement service to determine where storage volumes are to be placed in a network for the user of that virtual machine instance for a certain use case of storage resources.

To access these storage resources the virtual machine instances can send storage commands e.g. a production service placement command request that allow the virtual machine instances to configure access and communicate with the storage resources. Clients can send storage requests to the virtual machine instances over the communications network. The virtual machine instances in turn can also send storage command requests to the storage resources.

Generally described the present application relates to production services that are configured to implement various production service commands. More specifically aspects of the present application relate to production storage services that are configured to implement various storage commands transmitted by a plurality of clients such as instantiated virtual machine instances. Illustratively the commands transmitted to the production storage service can correspond to production storage commands transmitted to the production storage service. Additionally according to the present application the commands transmitted to the production storage service can also include test service commands that are configured to modify one or more aspects of the services making up the production storage service. A network based storage service may be hosted in a production service environment and involve a number of different systems parts and sub systems each of which may include code and processes that may undergo updating changing or modifying. For example updating one part of the network based storage service may allow for more efficiently handling of storage requests.

In accordance with an aspect of the present application a production service receives various commands from one or more clients such as virtual machine instances. The production service analyzes the received commands to determine whether the received commands correspond to production storage commands or test storage commands. For example a test service manager can facilitate the analysis of the received commands by collecting monitoring information regarding the processing results of the storage commands once processed. As described herein test storage commands can be routed through a production service environment without interrupting or impacting the processing of production storage commands executing on those production services. With the system described herein the execution of test storage commands can be monitored so that production storage command processing remains uninterrupted or unimpacted in a substantial way. In this way for example changes to parts of the service such as changes to a configuration or algorithm can be tested with test service commands in the actual production environment without adversely impacting actual production load. As used herein production storage commands and test storage commands can be viewed as a subset of production service commands and test service commands respectively. That is a production service can process the production service command or a production storage command. Similarly a test service can process a test service command or a test storage command. As will be described illustratively herein production storage commands and test storage commands can process on production services within the production service environment. In addition test storage commands may process on test services within the production service environment. Generally described production service commands and test service commands can process on production services within the production service environment.

In various embodiments of the present disclosure a production service can use the techniques disclosed herein to process test storage commands in the context of the production storage service. As previously described when a production service receives a test storage command including an associated test identifier the production service can determine whether a production storage volume designated or configured to process test storage commands is available to handle the test storage command. If a storage volume is available the production service can route the test storage command to process via a test storage service associated with the test identifier. The storage volume can then be associated with that test storage command and test identifier to process further or subsequent test commands. In various embodiments the test identifier can be used to identify that a service being tested or a part of a service being tested for example a change to a configuration should be used to handle the command rather than the production service. In such a case a test service can be instantiated in a production service.

More specifically storage requests that may include production storage commands and test storage commands can indicate that a test service which includes a variation in processing of a storage commands compared to the production service should be used to process the storage command. Except for the difference such as the changed configuration reflected by the test service the other parts of handling the storage command are accomplished by production services in the production service environment. For example an Application Programming Interface API can be used by a data center operator to call test storage commands for processing on production services or test services. Continuing in this example the data center operator can transmit requests using the test service manager at the API level e.g. an API level request . A production service determines that a certain test storage command is associated with a test identifier of an API level request and subsequently determines that the test storage command is to be routed to a test service associated with the production service. In another embodiment the test service is configured in part by the API level request. For example a storage request may be transmitted at the API level with metadata such as a test identifier indicating that a test service should be instantiated for processing of certain test storage commands.

In accordance with another aspect a test service manager monitors network based storage commands to evaluate the performance of production storage commands and test service commands. For example a data center operator using a storage network that hosts storage volumes receiving the production and test storage commands can use a test service manager to determine whether to shed test storage commands. If the test service manager determines that an overload exists on production services test storage commands can be shed to assist in reducing the overload on production services. As used herein production services can be a service that uses storage volumes to produce storage processing results for some aspect of production in a data center network for example provisioning certain storage volumes for use by a customer of the data center.

Further generally described the present disclosure relates to a test service manager that can use monitoring information e.g. a storage command metric to monitor the impact of the test services commands for example associated with changes to parts of the service as well as to identify overloads on production services. Illustratively a storage command metric such as the number of input output I O operations per second can indicate how fast data is accessed from a storage volume. If data is no longer being accessed at an appropriate rate threshold for production services the test service manager can determine that a shed command should be issued to the storage processing service. The test service manager can issue the shed command so that any additional test storage commands are shed or queued. Such a shed command can be useful for a storage processing service that experiences peak usage times on production services. For example at certain times production storage commands can increase beyond the available capacity of the storage volumes provisioned for both production services and test services. At those times processing test storage commands may be a lower priority for the data center operator. For example processing further test storage commands could add a significant overhead possibly degrading performance by the storage system for production services. In contrast because production services can reflect actual customer demand for the storage volumes it may be desirable to shed test storage commands associated with ongoing tests e.g. tests on storage volumes provisioned for production services .

More specifically an active shed command issued by the test service manager will result in further test storage commands being shed or queued by the storage processing service. However production storage commands can still process as usual and further the overload on production services may decrease as a result of only production storage commands being processed. While the shed command is active the test service manager can continue to receive further monitoring information collected by the storage processing service and further analyze that monitoring information to determine whether an overload continues to exist on production services.

The foregoing aspects and many of the attendant advantages will become more readily appreciated as the same become better understood by reference to the following description of illustrative embodiments when taken in conjunction with the accompanying drawings depicting the illustrative embodiments. The illustrative embodiments described below do not necessarily imply that any combination of features is required. Additionally in some embodiments the features of the illustrative embodiments can be combined.

Client computing devices may generally include any computing device receiving the storage networks provisioned through virtual machines to the storage network . While the term client is used in reference to client computing devices client computing devices should not be construed as limited to end user computing devices. Rather client computing devices may include end user devices devices owned or operated by other service providers or devices owned or operated by an administrator of host computing devices e.g. a data center operator . Examples of client computing devices include but are not limited to laptops personal computers tablet computers personal digital assistants PDAs hybrid PDA mobile phones mobile phones electronic book readers digital media players wearable computing devices integrated components for inclusion in computing devices appliances electronic devices for inclusion in vehicles or machinery gaming devices set top boxes electronic devices for inclusion in televisions and the like.

The network is operable to enable communication generally between the client layer and the storage layer . The network can also enable communication between various components of the network topology such as communication between the host computing devices storage network storage volumes client computing devices and the test service manager A B. The network may be for instance a wide area network WAN a local area network LAN or a global communications network. Network can enable communication between any component depicted in network topology whether that component is part of a storage layer or a client layer .

The illustrated network topology further includes a number of storage volumes in a storage network within storage layer . Generally a storage volume may correspond to a hard disk drive network accessible storage or any other type of perpetual or substantially perpetual storage. For example the storage volumes of may correspond to network accessible storage devices. Though depicted as external to client computing devices in some embodiments storage volumes may be internal to a specific client computing device . Storage volumes can be used for production services such as production storage placement service and the production replication service .

For purposes of illustration the storage network also contains a production volume that has been configured at least temporarily as a test storage volume . Test storage volume is stored in the storage network with storage volumes . Test storage volume is accessible by production services for testing of test storage commands. As previously described the test storage volume corresponds to a production volume that has been instantiated for purposes of implementing one or more test storage commands. Illustratively the test storage volume may be configured solely to implement test storage commands. Test storage volume can be associated with a test identifier that identifies test storage volume as a storage volume configured for tests associated with that test identifier. For example a test identifier can be stored in the metadata associated with test storage volume . In various embodiments identifying a storage volume as a test storage volume can be referred to as tagging a storage volume with a test identifier. As used herein a test identifier can indicate that a certain test is to be performed with the storage commands if the test storage command is associated with that test identifier or that the test is to be performed on test storage volumes if the test storage volume is associated with that test identifier. Test identifiers can also indicate a test associated with a certain customer or user of the storage network or the storage layer . For example a client computing device can initiate requests for a test that host computing device sends to storage layer as test storage commands. Illustratively a customer operating a client computing device can use an Application Programming Interface API to initiate or call test storage commands for processing on storage layer and the components therein for example the test storage placement service. In this example the test service manager A can associate such test storage commands with a specific test identifier. For example a specific API may be associated with the test identifier. As will be described below test service manager A B can associate or tag storage volumes in storage network with certain test identifiers.

Storage volumes also contain agents A C that can be configured to collect storage command metrics regarding storage commands e.g. a production storage command process the storage command and subsequently send the storage command metrics to the test service manager A B. Agents A C can collect and aggregate storage command metrics sent to storage network by virtual machines or processed on storage network . The agent can aggregate storage command metrics from the various storage commands processed on the storage volumes . Because an agent A C can aggregate metrics where the storage command requests are being processed real time storage command metrics can be provided to the test service manager A B.

More specifically agent A or agents B C processes storage command and collects storage command metrics regarding storage command from the virtual machines accessing storage volumes . Collected storage command metrics can be referred to as monitoring information. Storage command metrics can various metrics that measure the performance of performing certain storage commands or measure the performance of a certain storage volume . As one example a storage command metric can be a rate of processing production storage commands on production storage volumes. Agents A C can collect such a metric by a rate of I O write requests I O read request or any other request that can indicate a rate of processing on a production storage volume. As another example a storage command metric can be an indication of an idle state of a storage volume or the absence of processing storage commands on storage volume .

Various metrics can be collected by agents A C including but not limited to the number of read I O operations per second the number of write I O operations per second the server service time read latency write latency the number of errors or flags for storage volumes that indicate errors during processing the number of storage volumes in use by count the number of storage volumes in use by memory the number of active storage volumes the number of storage servers in use the amount of memory read e.g. size of I O reads for a particular storage volume or several storage volumes the amount of memory written to a storage volume e.g. size of I O writes for a particular storage volume or several storage volumes the queue length of a storage volume the hardware diagnostics e.g. disk usage CPU memory utilization for a particular storage volume the network diagnostics e.g. number of hops latency for a particular storage volume the percentage of use for I O operations at a particular storage volume and the percentage of time that a particular partition on a particular storage volume is used. As can be seen from this description various storage command metrics are possible.

Further in other embodiments that are not illustratively depicted in agents A C may reside on one of the host computing devices or across several hosts of host computing devices . As an example in one embodiment agents A C can be instantiated as part of a virtual machine . In such an embodiment virtual machine can receive storage command metrics for storage commands sent by virtual machine . In some embodiments the storage command metrics can be sent with storage command processing results that storage volume processes in response to the storage command requests sent by virtual machine . Virtual machine can provide the storage command metrics as monitoring information to test service manager A B. As one skilled in the art may recognize agents A C can be configured to operate on any network entity associated with network . For example agents A C may be configured to operate on a single computing device e.g. a storage server or several multiple computing devices in communication with one another.

Storage network can provide storage command metrics as monitoring information in some embodiments stored within storage network to the test service manager A B for further analysis e.g. analyzing the monitoring information to identify an overload on production services . Test storage volume also contains agent that can be configured to collect test storage command metrics regarding test storage commands process the test storage commands and subsequently send the test storage command metrics to the test service manager A B. Test storage volume can be configured to operate substantially like storage volume . Agent can be configured to operate substantially like an agent A C. In one embodiment a host computing device may include a single computing device e.g. a server . Similarly storage network may include a single computing device e.g. a storage server .

In various embodiments a host computing device may include multiple computing devices in communication with one another collectively providing a production service to the client computing devices . And again similarly the storage network contains several storage volumes existing as physical devices and communicating over a network to each other. A hosted computing environment of host computing devices may also be referred to as a cloud computing environment. In embodiments not depicted production services such as production storage placement service can reside on a host computing device of the hosted computing environment .

Storage layer also includes various production services such as production storage placement service and production replication service . Various other storage production services can be included in storage layer as indicated in with ellipsis indications between production storage placement service and production replication service . With the production services storage network and test service manager A B storage layer can also be referred to as a storage processing service. In various embodiments not depicted in production services can be located on a host computing device .

Generally described production services can correspond to a service that uses storage volumes for production of storage processing results for some aspect of production in a data center network. For example a production service can be a production storage volume metadata service that specifies what metadata may be transmitted to a storage volume in a storage command or what metadata may be transmitted by a storage volume in a storage command processing result. Generally a production service can be any storage service that uses a storage volume for processing of a storage command. A production service can be configured to route storage command through other production storage services for further processing of the storage command. As one example a storage command can first be processed by a production storage placement service that allocates a portion of a storage volume for processing of that storage command and subsequently the storage command can be routed to a production storage replication service that replicates the allocated portion at another storage volume for redundancy of storage command processing. In this example when the storage command is processed at the originally allocated volume a storage command processing result can be routed to the production storage replication service to replicate that storage command processing result at the replicated allocated portion.

Each production service can have a corresponding test service that is instantiated based on a test storage command or instantiated based on a test identifier indicating that such a corresponding test service should be instantiated for processing of test storage commands with that same identifier. As one example a test service can be instantiated for a particular customer having a particular test identifier. In various embodiments multiple test services can be instantiated for a particular customer having a certain test identifier. That is the test identifier can be associated with processing on a specific production services. Accordingly corresponding test services can be instantiated associated with that test identifier for test storage commands to be executed on those test services.

As will be described with reference to production services can process production storage commands and in some cases can process test storage commands. Production services can interact with test service manager A B via network . Or in other embodiments production services can interact with test service manager A B via a local storage network. For example as depicted test service manager A may reside on the production storage placement service and test service manager B may reside on the production storage replication service . In various embodiments each production service may include a test service manager. Additionally the test service manager may operate as a standalone component as the depicted test service manager within the storage layer . In other embodiments the test service manager A B may operate collectively communicating via network .

The test service manager A B receives monitoring information from storage network . For example agents A C collects monitoring information from the storage commands processed by storage network and can transmit that collected monitoring information to test service manager A B. In other embodiments test service manager A B can receive monitoring information from another storage center network a database an archive or any other network entity capable of providing storage command metrics. Generally test service manager A B is used to run tests on storage network .

Generally the test service manager A B can correspond to a hard disk drive network accessible storage or any other type of perpetual or substantially perpetual storage accessible by one of the virtual machines . For example the test service manager A B of in some embodiments corresponds to a network accessible storage server. Further in other embodiments that are not illustratively depicted in test service manager A B may reside on one of the host computing devices or across several hosts of host computing devices . As one skilled in the art may recognize test service manager A B can be configured to operate on any network entity associated with network . For example test service manager A B may be configured to operate on a single computing device e.g. a storage server or several multiple computing devices in communication with one another. As another example the test service manager A B can be configured to operate and be considered at least logically to be part of storage network . Components and attributes of the test service manager A B are further described below with respect to .

The test volume data store can include data about tests and or storage volumes including but not limited to an ID for a storage volume a partition ID s for a storage volume an account for a storage volume e.g. a customer account associated with the storage volume a type of storage volume test identifiers metadata associated with test identifiers e.g. metadata associated with a test storage command . As an example test volume data store can include a look up table that associates a test identifier with certain storage volumes. If a storage volume in storage network has such an association with a test identifier it can be referred to as a test storage volume . Control module can modify and or update test volume data store in response to monitoring information received from monitoring module . For example the control module may receive an indication from monitoring module that a traffic storage overload exists and in response modify the look up table by removing storage volumes from that look up table. Continuing in this example control module can indicate in a shed command that the storage volumes removed from the look up table are now available to be used in storage network as production storage volumes. As will be described and illustrated in e.g. with the removal of the shaded portion from storage volume a test storage volume can be used a production storage volume.

Illustratively the control module and the monitoring module may include a number of hardware and software components. More specifically the control module and the monitoring module may include hardware software configuration data data structures computer readable code or any type of information that can be loaded into memory and processed or published by the control module and the monitoring module respectively. Aspects of the control module and the monitoring module will be described in further detail below with respect to that illustrate test service manager among other actions analyzing monitoring information to identify a storage traffic overload and transmitting a command to shed any test storage commands. In various embodiments reference to the test service manager within the present disclosure may include multiple computing devices working in conjunction to facilitate the processing of test storage commands on a storage processing service. For example in various embodiments the test service manager may be distributed through a network or implemented by one or more virtual machine device instances.

The production service interface may refer to a physical communication interface on a physical computing device. The production service interface may be an electrical communication interface an optical communication interface or other type of interconnect interface known in the art. The production service interface may be configured to provide communications between units within the test service manager e.g. the metric processing component and the virtual machine instances hosted on host computing devices . Illustratively the configuration of the production service interface may be optimized based on specific criteria such as low latency high speed and high bandwidth among others. In some embodiments the interconnect interface may correspond to a high speed serial computer expansion bus such as a Peripheral Component Interconnect Express PCIe bus. One skilled in the relevant art will appreciate that the production service interface may incorporate alternative or additional standard interconnect interfaces well known to those skilled in the art.

With reference now to the interaction between various components of the network topology of will be illustrated. As illustrated in an embodiment is depicted where the test service manager is implemented as a centralized stand alone component of the storage layer . For purposes of the example however the illustration has been simplified such that many of the components utilized to facilitate communications are not shown. Additionally the implementation of a stand alone component may include implementation on multiple computing devices. For example in this embodiment test service managers A B are not necessary for the interaction to occur. One skilled in the relevant art will appreciate that such components can be utilized and that additional interactions would accordingly occur without departing from the spirit and scope of the present disclosure.

The test storage command is sent to production replication service in storage layer via network . Production replication service can determine that a routing table for a test storage command does not exist at production replication service . In such a case at production replication service transmits a request for routing information to test service manager . Test service manager can retrieve such routing information from test volume data store for example in a look up table indicating a test service associated with the same test identifier as the test storage command.

In various embodiments test service manager can employ routing rules to determine the routing information for the test storage command. From one perspective when test service manager receives a test storage command a routing rule can exist that indicates an override to a normal route for a storage command. In such a case the test service manager can determine that a test service is to be used for processing the test storage command and indicate an appropriate route to a test service. Such an indication can be included in the routing information.

At test service manager can transmit the obtained routing information to the product replication service . With this routing information product replication service can route test storage command at to a test service. As depicted the test storage command is routed to a test storage placement service . In various embodiments test service manager can instantiate a test storage service that reflects the functionality of a substantially similar production service. The test service manager may instantiate such a test service specifically for ongoing tests by users or customers of the storage layer . In this example test storage placement service reflects a test service that is substantially similar to production storage placement service . For the test storage placement service to process the test storage command test storage placement service can determine that a route to test storage volume is via production volume metadata service . Because test storage placement service is a reflection of production storage placement service test storage placement service can determine the route to production volume metadata service without requesting information from test service manager . Accordingly at the test storage placement service transmits the test storage command to production volume metadata service . Thereafter at production volume metadata service transmits the test storage command to test storage volume for processing of the test storage command. While this embodiment depicts test storage command being routed through production volume metadata service it can be appreciated that various other routes to process test storage command on test storage volume are possible. For example the test storage placement service can transmit the test storage command directly to test storage volume if such a routing information exists at test storage placement service .

As depicted in as an example of routing the test storage command a test storage command may only be routed through one test storage service as depicted test storage placement service . Generally speaking a test storage command can be routed through a production storage environment as depicted in storage layer without interrupting or causing substantial delay to the processing of production storage commands. For example production storage commands can also be processed simultaneously at production replication service while the production replication service determines at that the test storage command is to be routed to the test storage placement service based on the routing information from the test service manager . Continuing in this example while the production replication service is awaiting the routing information from the test service manager a production storage command can be propagated through the production replication service to be further processed on additional production services within the storage layer . In various embodiments the test storage command can be also processed on the other production services within storage layer . For example the test storage command may indicate via a test identifier that testing is only for a specific test service as depicted test storage placement service .

As another example of variations in routing the test storage command the test storage placement service may include a variation in the placement service algorithm as compared to the production storage placement service . The test storage command may be routed to the test storage placement service to test specifically that variation in the placement service algorithm. For example an API level request having a test identifier can indicate that a customer has varied the placement service algorithm with the test service manager or production storage placement service determining that a test storage placement service is to be instantiated based on the test identifier. In such a case the test storage command can also be processed by the production replication service and the production volume metadata service as those production services currently exist while processing the test storage command on the test storage placement service to determine what effect the variation in the placement algorithm has on processing the test storage command. As can be seen from this example the test storage command may also be processed by additional production services rather than test services alone. Accordingly a test storage command can be routed through the storage layer concurrently with processing of various production or test services without impacting or interrupting the processing of production storage commands on the respective production services.

Not depicted in the test service manager can also assist in routing asynchronous test storage commands. For example the test service manager can monitor the context of the storage layer to determine where test storage commands should be routed to accomplish a test. As one example the test service manager can determine that a set of test storage commands should be routed to a different production service because the normal routing for those test storage commands is unnecessary for the test associated with those test storage commands e.g. as indicated by the test identifier . In such a case the test service manager can determine that the test storage commands should be routed to a different test service and provide that routing information to the production service requesting that routing information. In some cases the routing information can be provided proactively to a production service if the context indicates that asynchronous processing of test storage commands is occurring more quickly than routing requests can be handled by the test service manager .

With reference now to the interaction between various components of the network topology of will be illustrated. For purposes of the example however the illustration has been simplified such that many of the components utilized to facilitate communications are not shown. One skilled in the relevant art will appreciate that such components can be utilized and that additional interactions would accordingly occur without departing from the spirit and scope of the present disclosure.

Additionally various embodiments of the test service manager A B will be disclosed. One skilled in the relevant art will appreciate that will reference may be made to a specific embodiment of the test service manager for example as test service manager or test service manager A any test service manager as described herein can be configured to operate as illustratively depicted. Accordingly while may refer to test service manager A test service manager or test service manager B may also perform similar operations and have substantially the same functionalities.

Storage commands can be both production storage commands and test storage commands. Generally speaking a storage command may be any command or request for a storage volume that uses the storage volume in some way. For example in one embodiment the storage command request corresponds to a data backup request. Or as another example a storage command can be an I O replication request that includes a read to a master storage volume and a write to slave storage volume. As another example a write I O storage command request can include two portions a local write to a storage volume and a remote write to another storage volume . Various storage commands are possible.

At production storage placement service transmits the production storage command to a production storage volume in storage network . Production storage placement service can use the production storage volume for a production purpose e.g. portioning of storage volumes . At storage network processes the production storage command. A production storage command may require processing on multiple storage volumes or a single volume . In some cases the storage network can determine the storage volume to process the production storage command. In other cases the production storage command can include header information indicating the storage volume to process the storage command. However because test service manager A has not designated production storage command with a test identifier storage network may not use test storage volume to process production storage command.

Next at storage network collects monitoring information based on the storage commands processed. For example storage command metrics can be used to obtain monitoring information. As one example of monitoring information collected a storage command metric can be collected that reflects the number of I O read operations performed can be counted whether successful aborted or failed. In some embodiments storage network uses the storage command processing results to collect monitoring information e.g. counting the number of successful I O read operations at a particular storage volume . As described above with reference to agents A C can be used to collect storage command metrics to be used as monitoring information. As one example a storage command metric can be a rate of processing production storage commands on production storage volumes.

At storage network transmits the production storage command processing result to the host computing device . In some embodiments this can be viewed as a response to the storage command sent at step by the host computing device . Accordingly the production storage command processing result can be directed to that virtual machine that originally sent the storage command. As but one example if an I O read storage command was originally sent by virtual machine the production storage command processing result can be the data that was read from storage volume or in another embodiment the production storage command processing result can be an acknowledgement that the I O read storage command was performed.

At storage network transmits the monitoring information to test service manager A. This can also be referred to as test service manager A obtaining the monitoring information. In other embodiments not depicted test service manager A can obtain monitoring information from test volume data store or any other network entity within network . Test service manager A obtains the monitoring information necessary to process the storage command metrics which will be used to analyzing monitoring information to identify a storage traffic overload on storage production services such as production storage placement service . In some embodiments test service manager A can obtain monitoring information independent of any storage command processing result. For example even though no I O process is being executed on a storage volume in response to a storage command request agents A C can collect monitoring information regarding other aspects of a storage volume . As but one example monitoring information can be obtained from storage network indicating an idle state of a storage volume . In such a case a storage command is not necessary to collect monitoring information regarding the idle state of a storage volume .

At production storage placement service routes the test command to a test storage placement service . As described above with respect to the production storage placement service may route the test storage command to a test service in accordance with routing information from the test service manager A. As but one example of this routing process not depicted in test service manager A can receive a routing request for a test storage command from the production storage placement service or more generally speaking the storage layer . The test service manager A can determine that the test storage command is associated with a test identifier. With the test identifier test service manager A can further determine that the test storage command is to be routed to a test service associated with the production service. As described above a test service can have functionality substantially similar to a similar production service. Continuing in this example test service manager A can transmit routing information for the test storage command to be processed by the test service. For example the routing information can indicate that a test storage volume is to process the test storage command. Or in other embodiments the test service manager A can determine that the storage processing service does not include any test storage volume that is associated with the test identifier. In such a case the routing information can indicate that a production storage volume is to process the test storage command on a production storage volume. In various embodiments test storage placement service can use the routing information to appropriately process the test storage command for transmission to a test storage volume . Accordingly as depicted in this illustrated embodiment at test storage placement service transmits the test storage command to a test storage volume . Test storage placement service can use the test storage volume for a test purpose e.g. test portioning . The example illustrated here is not intended to limit the test storage command to processing only on a test storage placement service .

At storage network processes the test storage command. A test storage command may require processing on a test storage volume or multiple test storage volumes not depicted in . In some cases the storage network can determine the storage volume to process the test storage command. In other cases the test storage command can include header information indicating the storage volume to process the storage command. In some cases this header information can correspond to the routing information provided by test service manager A. Accordingly the routing information can indicate that the test storage command may process on a production storage volume rather than a test storage volume . As described above at the determination by the test storage manager A may depend on a test identifier associated with the test storage command.

Next at storage network collects monitoring information based on the test command processed. For example storage command metrics can be used to obtain monitoring information. As described above with reference to agents can be used to collect storage command metrics to be used as monitoring information. Or in other embodiments if test storage commands are executing on production storage volumes agents A C can be used to collect monitoring information regarding the processing of a test storage command on production storage volumes . As one example of monitoring information collected a storage command metric can be collected that reflects a rate of processing production storage commands on production storage volumes relative to the rate of processing test storage commands on production storage volumes. Or another storage command metric can be a rate of processing production storage commands and test storage commands on all available volumes.

At storage network transmits the test storage command processing result to the host computing device . In some embodiments this can be viewed as a response to the storage command sent at step by the host computing device . Accordingly storage command processing result can be directed to that virtual machine that originally sent the storage command. As but one example if an I O read storage command was originally sent by virtual machine the storage command processing result can be the data that was read from storage volume or in another embodiment the storage command processing result can be an acknowledgement that the I O read storage command was performed.

At storage network transmits the monitoring information to test service manager A. As described above with reference to at monitoring information can be obtained by test service manager A in a variety of ways. Monitoring information that includes information regarding test storage commands can be identified with a corresponding test identifier for the test storage volume that processed a test storage command or the result of processing a test storage command. In various embodiments the monitoring information regarding test storage commands can be stored in test volume data store .

As yet another example of analyzing the monitoring information using a threshold a threshold can correspond to an upper band and a lower band. The upper band and lower bands can be computed based on the performance of the storage network generally with the bands defining unusual or statistical outlier performance. In other cases the upper band and lower bands can be computed based on the performance of a single production storage volume or a set of production storage volumes . A threshold breach is indicated when a metric falls outside of those bands. In one embodiment an outlier is identified because it falls below a performance threshold computed using various statistical processing techniques and the storage command metrics. In another embodiment an operator of the storage system can define the threshold e.g. a user defined threshold so that the operator is notified if a certain storage command metric breaches the threshold. As can be seen from this description various thresholds can be employed to allow test service manager A to identify an overload allowing a storage system to better indicate overloads on production services. In some cases analyzing the monitoring information and identifying an overload on production services can make a storage system more efficient because it uses less processing time or processing power resulting in a cost savings by hardware and or power.

At the test service manager A determines a strategy for test storage commands and test storage volumes. For example the test service manager A can determine that a strategy for any test storage commands is to shed the test storage commands if the monitoring information indicates that an overload exists on production storage volumes. Such a strategy can also be referred to as alternatively processing the test storage commands. In various embodiments test storage commands can be alternatively processed instead of being queued or shed. For example the test storage commands can be sent to another test storage system separate from storage layer to be tested independently of production services. As another example the test service manager A can determine that a strategy for some test storage volumes is to remove a test identifier associated with the storage volumes if the monitoring indication indicates that an overload exists on production storage volumes. In this way a test storage volume can be reclassified as a production storage volume to alleviate the overload existing on the other production storage volumes. As yet another example the test service manager can determine that test storage commands should be queued at production services to which they are routed until the test manager A has determined that an overload does not continue to exist. Aspects of this determination will be described with respect to .

Continuing with reference to at test service manager A can issue the shed command so that any additional test storage commands are shed or queued. Test manager A can issue such a shed command when an overload has been identified on production services. Such a shed command can be useful for a storage processing service that experiences peak usage times on production services. For example at certain times production storage commands can increase beyond the available capacity of the storage volumes provisioned for both production services and test services. At those times processing test storage commands may be a lower priority for the data center operator. For example processing further test storage commands could add a significant overhead possibly degrading performance by the storage system for production services. In contrast because production services can reflect actual customer demand for the storage volumes it may be desirable to shed test storage commands associated with ongoing tests e.g. tests on storage volumes provisioned for production services . In other embodiments not depicted in the test service manager can issue a command to alternatively process the test storage commands. As described above this can be a command to process any test storage commands in storage layer at a separate testing storage system. For example the test service manager A can route the test storage commands via network to a separate testing storage system.

At storage network can shed any test storage commands as indicated by the shed command. Shedding a test storage command can correspond to dropping the test storage command from the storage network . For example a test storage command can be in the processing queue of the test service or the corresponding test storage volume that test service is executing the test storage command on. The test storage command can be dropped or shed from the processing queue of the test service. In other embodiments if the test storage command is being processed on a production service the test storage command can be dropped from a processing queue of the production service. The shed command can also indicate that test storage volumes are to be shed. This can correspond to removing a test identifier associated with the test storage volume . In such a case the test identifier associated with test storage volume may be removed. Accordingly test storage volume can now be used a production storage volume to alleviate the overload on production services to which the shed command has been made active by test manager A.

Next at storage network collects monitoring information based on the production storage commands processed. Taken together with the illustrations described in this can be viewed as collecting additional monitoring information while the shed command issued by a test storage manager A is active. As an example a storage command metric included in the additional monitoring information can be a rate of processing production storage commands on all available storage volumes at storage network .

At storage network transmits the production storage command processing result to the host computing device . In some embodiments this can be viewed as a response to the production storage command sent at step by the host computing device . At storage network transmits the additional monitoring information to test service manager A. As described above with reference to monitoring information can be obtained by the test service manager A from a variety of sources within the storage layer or within the client layer .

Continuing with reference to at the test service manager A determines whether the overload continues to exist on production services using the additional monitoring information. In the illustrative example a test service manager A can determine that the storage traffic overload continues to exist on the storage processing service. Accordingly test service manager A can allow the shed command to continue being active at storage network . Or in other embodiments not depicted if the initial shed command has a timer test service manager A can transmit another shed command to queue or any test storage commands.

At storage network collects additional monitoring information Taken together with the illustrations described in this can be viewed as collecting additional monitoring information while the shed command issued by a test storage manager A is active. At storage network transmits the additional monitoring information to test service manager A. As described above with reference to monitoring information can be obtained by the test service manager A from a variety of sources within the storage layer or within the client layer .

Continuing with reference to at the test service manager A determines that the overload does not continues to exist on production services using the additional monitoring information. For example the test service manager A can analyze the additional monitoring information to identify that the storage traffic overload on the storage processing service does not continue to exist. In such a case the test service manager A can determine that testing of storage commands can resume. In some cases the test service manager A can determine that testing should only resume for a certain period of time. In which case a subsequent shed command can be issued by the test service manager A. For example peak periods of storage layer usage can be used to determine when shed commands can be issued or when testing can resume. Accordingly test service manager A can send an indication that testing should resume. Testing can resume as depicted in . In various embodiments the production storage placement service may route any test storage commands in a queue of the production storage placement service to the test storage placement service . After processing of the test storage commands that had been queued during a queue command test storage placement service can resume testing of additional test storage commands received.

In embodiments not depicted the test service manager A can transmit a command to tag a storage volume in storage network as a test storage volume. In this way the test service manager A can associate an available storage volume with a test identifier. Accordingly storage volume tagged as a test storage volume can be used for processing of test storage commands associated with the test identifier.

Next at block the test service manager A B can analyze the monitoring information using the traffic criteria. For example a traffic criterion can be comparing a rate of production storage traffic for a customer to a rate of test storage traffic for a customer. If the rate of production storage traffic is greater than a threshold amount of traffic for that customer the traffic criteria can indicate that a traffic overload exists on production services. In various embodiments analyzing the monitoring information can be accomplished as discussed above with reference to at .

At block the test service manager A B can determine a strategy for the test storage commands. In various embodiments determining a strategy for the test storage commands and the test storage volumes can be accomplished as discussed above with reference to at . At block the test storage manager A B can shed test storage commands. In various embodiments shedding the test storage commands for the test storage volumes can be accomplished as discussed above with reference to at . At block the test service manager A B receives additional monitoring information. In various embodiments receiving additional monitoring information can be accomplished as discussed above with reference to at or at .

Thereafter at decision block the test service manager A B can determine whether a set of completion criteria are satisfied. Completion criteria may be determined by the test service manager A B or may be manually specified. For example completion criteria may allow a routine to complete where a rate threshold indicates that an overload does not continue to exist on production services. For example the rate threshold can be a rate of processing production storage commands on production storage volumes. Completion criteria may be a timer associated with the shed command that indicates that the shed command should no longer be active. If the set of completion criteria are satisfied the routine ends at block .

If however the completion criteria are not satisfied at block the flow proceeds to block . At block the test service manager A B can determine whether additional test storage commands should be shed to alleviate the overload on production services. The flow proceeds back to block where the test service manager A B can determine a strategy for the test storage commands and the test storage volumes. For example the test service manager A B can determine that a test identifier associated with a test storage volume should be removed from the look up table stored in test volume data store . Routine proceeds through the flow as described above until the completion criteria are satisfied at decision block . Thereafter the routine ends at block .

In various embodiments routine may be performed by a test service manager A B of a storage system. In other embodiments a physical computing device with computer executable instructions may cause the computing device to perform routine . In some embodiments of the routine elements may occur in sequences other than as described above. In such embodiments the routine may for example omit block . Accordingly monitoring information can be dynamically provided to a test service manager A B. One skilled in the art will appreciate that additional variations are possible and within the scope of the present disclosure.

At decision block the storage processing service determines whether a storage volume is available to process the test storage command. For example the production storage placement service can query the storage network to determine whether a test storage volume is available for processing of a test storage command. If a test storage volume is available the flow proceeds to block . At block the test storage command is processed on the test storage volume via a test storage service. For example the production storage placement service can route the test storage command to a test storage placement service which will process the test storage command on the test storage volume . Thereafter the flow ends at block .

If however at block a test storage volume is not available the flow proceeds to decision block where a storage processing service determines whether a shed command is active. A shed command can indicate that an overload exists on production services. Accordingly if a shed command is active the flow proceeds to block where the test storage command is queued or shed. In various embodiments shedding the test storage commands for the test storage volumes can be accomplished as discussed above with reference to at . Thereafter the flow ends at block .

If however at block a shed command is not active the flow proceeds to block . At block the storage processing service can transmit a request to test service manager to provision an available storage volume and subsequently process the test storage command. For example the test storage command may be processed on production or test services using the provisioned storage volume. In such a case the test service manager A B can associate a test identifier with an available storage volume to tag it as a test storage volume . Thereafter the flow ends at block .

In various embodiments routine may be performed by a test service manager A B of a storage system. In other embodiments a physical computing device with computer executable instructions may cause the computing device to perform routine . In some embodiments of the routine elements may occur in sequences other than as described above. In such embodiments the routine may for example omit block . Accordingly testing can resume without tagging an available storage volume for example if a test storage volume is associated with the test identifier of the test storage command is already available. One skilled in the art will appreciate that additional variations are possible and within the scope of the present disclosure.

Depending on the embodiment certain acts events or functions of any of the methods described herein can be performed in a different sequence can be added merged or left out altogether e.g. not all described acts or events are necessary for the practice of the algorithm . Moreover in certain embodiments acts or events can be performed concurrently e.g. through multi threaded processing interrupt processing or multiple processors or processor cores or on other parallel architectures rather than sequentially.

The various illustrative logical blocks modules and method elements described in connection with the embodiments disclosed herein can be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. The described functionality can be implemented in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the disclosure.

The various illustrative logical blocks and modules described in connection with the embodiments disclosed herein can be implemented or performed by a machine such as a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor can be a microprocessor but in the alternative the processor can be a controller microcontroller or state machine combinations of the same or the like. A processor can also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration.

The elements of a method process or algorithm described in connection with the embodiments disclosed herein can be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module can reside in RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of computer readable storage medium known in the art. A storage medium can be coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium can be integral to the processor. The processor and the storage medium can reside in an ASIC. The ASIC can reside in a user terminal. In the alternative the processor and the storage medium can reside as discrete components in a user terminal.

All of the processes described herein may be embodied in and fully automated via software code modules executed by one or more computers or processors. The code modules may be stored in any type of computer readable medium or other computer storage device. Some or all the methods may alternatively be embodied in specialized computer hardware. In addition the components referred to herein may be implemented in hardware software firmware or a combination thereof.

Conditional language such as among others can could might or may unless specifically stated otherwise are otherwise understood within the context as used in general to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without user input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment.

Disjunctive language such as the phrase at least one of X Y or Z unless specifically stated otherwise is otherwise understood with the context as used in general to present that an item term etc. may be either X Y or Z or any combination thereof e.g. X Y and or Z . Thus such disjunctive language is not generally intended to and should not imply that certain embodiments require at least one of X at least one of Y or at least one of Z to each be present.

Any process descriptions elements or blocks in the flow diagrams described herein and or depicted in the attached figures should be understood as potentially representing modules segments or portions of code which include one or more executable instructions for implementing specific logical functions or elements in the process. Alternate implementations are included within the scope of the embodiments described herein in which elements or functions may be deleted executed out of order from that shown or discussed including substantially concurrently or in reverse order depending on the functionality involved as would be understood by those skilled in the art.

Unless otherwise explicitly stated articles such as a or an should generally be interpreted to include one or more described items. Accordingly phrases such as a device configured to are intended to include one or more recited devices. Such one or more recited devices can also be collectively configured to carry out the stated recitations. For example a processor configured to carry out recitations A B and C can include a first processor configured to carry out recitation A working in conjunction with a second processor configured to carry out recitations B and C.

While the above detailed description has shown described and pointed out novel features as applied to various embodiments it will be understood that various omissions substitutions and changes in the form and details of the devices or algorithms illustrated can be made without departing from the spirit of the disclosure. As will be recognized certain embodiments described herein can be embodied within a form that does not provide all of the features and benefits set forth herein as some features can be used or practiced separately from others. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.

