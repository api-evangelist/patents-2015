---

title: Image denoising system and method
abstract: A method, computer program product, and computer system for identifying a first portion of a facial image in a first image, wherein the first portion includes noise. A corresponding portion of the facial image is identified in a second image, wherein the corresponding portion includes less noise than the first portion. One or more filter parameters of the first portion are determined based upon, at least in part, the first portion and the corresponding portion. At least a portion of the noise from the first portion is smoothed based upon, at least in part, the one or more filter parameters. At least a portion of face specific details from the corresponding portion is added to the first portion.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09659352&OS=09659352&RS=09659352
owner: Google Inc.
number: 09659352
owner_city: Mountain View
owner_country: US
publication_date: 20150205
---
This application is a continuation of U.S. application Ser. No. 13 665 449 filed Oct. 31 2012 the disclosure of which is expressly incorporated herein by reference in its entirety.

Video images and still picture images may be taken at e.g. social events and other functions. Depending on the quality of the device capturing the video as well as other environmental conditions such as low light conditions the image quality may be degraded by the presence of noise. Noise e.g. image noise may broadly be described to include but not limited to e.g. random variations of brightness or color information in the image that is not present in the actual object captured in the image. Noise may be particularly evident on the facial regions of those in the images. While some denoising techniques e.g. neighborhood filtering may be used to reduce the presence of image noise the end result may be facial images that are too flat and may not look realistic.

In one implementation a method performed by one or more computing devices comprises identifying by a computing device a first portion of a facial image in a first image wherein the first portion includes noise. A corresponding portion of the facial image is identified in a second image wherein the corresponding portion includes less noise than the first portion. A noise level across the first portion and the corresponding portion is determined. At least a portion of the noise from the first portion is smoothed based upon at least in part the noise level. At least a portion of face specific details from the corresponding portion is added to the first portion.

In one implementation a method performed by one or more computing devices comprises identifying by a computing device a first portion of a facial image in a first image wherein the first portion includes noise. A corresponding portion of the facial image is identified in a second image wherein the corresponding portion includes less noise than the first portion. One or more filter parameters of the first portion are determined based upon at least in part the first portion and the corresponding portion. At least a portion of the noise from the first portion is smoothed based upon at least in part the one or more filter parameters. At least a portion of face specific details from the corresponding portion is added to the first portion.

One or more of the following features may be included. Smoothing may include a bilateral filter. The one or more filter parameters may include a noise level associated at least in part with the first portion and the corresponding portion. One or more faces in a plurality of images may be detected wherein the plurality of images may include at least one of the first image and the second image. The one or more faces may be clustered. At least a portion of the one or more faces in the plurality of images may be aligned using one or more facial landmarks. Adding at least the portion of face specific details from the corresponding portion to the first portion may include decomposing at least the corresponding portion to a base layer and a detail layer. A detail patch of at least one of the first portion and the corresponding portion may be modeled with a non parametric Markov random field. The non parametric Markov random field may be solved with a texture optimization framework.

In another implementation a computing system includes a processor and a memory configured to perform operations comprising identifying a first portion of a facial image in a first image wherein the first portion includes noise. A corresponding portion of the facial image is identified in a second image wherein the corresponding portion includes less noise than the first portion. One or more filter parameters of the first portion are determined based upon at least in part the first portion and the corresponding portion. At least a portion of the noise from the first portion is smoothed based upon at least in part the one or more filter parameters. At least a portion of face specific details from the corresponding portion is added to the first portion.

One or more of the following features may be included. Smoothing may include a bilateral filter. The one or more filter parameters may include a noise level associated at least in part with the first portion and the corresponding portion. One or more faces in a plurality of images may be detected wherein the plurality of images may include at least one of the first image and the second image. The one or more faces may be clustered. At least a portion of the one or more faces in the plurality of images may be aligned using one or more facial landmarks. Adding at least the portion of face specific details from the corresponding portion to the first portion may include decomposing at least the corresponding portion to a base layer and a detail layer. A detail patch of at least one of the first portion and the corresponding portion may be modeled with a non parametric Markov random field. The non parametric Markov random field may be solved with a texture optimization framework.

In another implementation a computer program product resides on a computer readable storage medium that has a plurality of instructions stored on it. When executed by a processor the instructions cause the processor to perform operations comprising identifying a first portion of a facial image in a first image wherein the first portion includes noise. A corresponding portion of the facial image is identified in a second image wherein the corresponding portion includes less noise than the first portion. One or more filter parameters of the first portion are determined based upon at least in part the first portion and the corresponding portion. At least a portion of the noise from the first portion is smoothed based upon at least in part the one or more filter parameters. At least a portion of face specific details from the corresponding portion is added to the first portion.

One or more of the following features may be included. Smoothing may include a bilateral filter. The one or more filter parameters may include a noise level associated at least in part with the first portion and the corresponding portion. One or more faces in a plurality of images may be detected wherein the plurality of images may include at least one of the first image and the second image. The one or more faces may be clustered. At least a portion of the one or more faces in the plurality of images may be aligned using one or more facial landmarks. Adding at least the portion of face specific details from the corresponding portion to the first portion may include decomposing at least the corresponding portion to a base layer and a detail layer. A detail patch of at least one of the first portion and the corresponding portion may be modeled with a non parametric Markov random field. The non parametric Markov random field may be solved with a texture optimization framework.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features and advantages will become apparent from the description the drawings and the claims.

According to some embodiments previously captured images e.g. photos may contain noise that degrades the quality of the image. In particular the facial attributes of the image that contain noise may be more noticeable. Thus according to some embodiments denoising process may identify a user s facial portions in an image that includes the noise and further identify a user s corresponding facial portion in another previously captured image that may include less noise. Using the techniques described in greater detail below the cleaner corresponding facial portions from the other image may be used by denoising process to denoise the user s facial portions in the noisy image thereby creating a more realistic image.

Referring to there is shown denoising process that may reside on and may be executed by a computer e.g. computer which may be connected to a network e.g. network e.g. the internet or a local area network . Examples of computer may include but are not limited to a personal computer s a laptop computer s mobile computing device s a server computer a series of server computers a mainframe computer s or a computing cloud s . Computer may execute an operating system for example but not limited to Microsoft Windows Mac OS X Red Hat Linux or a custom operating system for example. Microsoft and Windows are registered trademarks of Microsoft Corporation in the United States other countries or both Mac and OS X registered trademarks of Apple Inc. in the United States other countries or both Red Hat is a registered trademark of Red Hat Corporation in the United States other countries or both and Linux is a registered trademark of Linus Torvalds in the United States other countries or both .

As will be discussed below in greater detail denoising process may identify by a computing device a first portion of a facial image in a first image wherein the first portion includes noise. A corresponding portion of the facial image may be identified in a second image wherein the corresponding portion includes less noise than the first portion. One or more filter parameters of the first portion may be determined based upon at least in part the first portion and the corresponding portion. At least a portion of the noise from the first portion may be smoothed based upon at least in part the one or more filter parameters. At least a portion of face specific details from the corresponding portion may be added to the first portion.

The instruction sets and subroutines of denoising process which may be stored on storage device coupled to computer may be executed by one or more processors not shown and one or more memory architectures not shown included within computer . Storage device may include but is not limited to a hard disk drive a flash drive a tape drive an optical drive a RAID array a random access memory RAM and a read only memory ROM .

Network may be connected to one or more secondary networks e.g. network examples of which may include but are not limited to a local area network a wide area network or an intranet for example.

Computer may include a data store such as a database e.g. relational database object oriented database etc. and may be located within any suitable memory location such as storage device coupled to computer . In some embodiments computer may utilize a database management system such as but not limited to My Structured Query Language MySQL in order to provide multi user access to one or more databases such as the above noted relational database. The data store may also be a custom database such as for example a flat file database or an XML database. Any other form s of a data storage structure and or organization may also be used. Denoising process may be a component of the data store a stand alone application that interfaces with the above noted data store and or an applet application that is accessed via client applications . The above noted data store may be in whole or in part distributed in a cloud computing topology. In this way computer and storage device may refer to multiple devices which may also be distributed throughout the network.

Computer may execute a web server application e.g. social network application examples of which may include but are not limited to e.g. a video photo management tool application a media e.g. video photo etc. capturing application a photo sharing application a denoising application or other application that allows for the improvement of video image quality. Denoising process and or social network application may be accessed via client applications . Denoising process may be a stand alone application or may be an applet application script that may interact with and or be executed within social network application . Examples of client applications may include but are not limited to a video photo management tool application a media e.g. video photo etc. capturing application a photo sharing application a denoising application or other application that allows for the improvement of video image quality a standard and or mobile web browser an email client application a textual and or a graphical user interface a customized web browser a plugin or a custom application. The instruction sets and subroutines of client applications which may be stored on storage devices coupled to client electronic devices may be executed by one or more processors not shown and one or more memory architectures not shown incorporated into client electronic devices .

Storage devices may include but are not limited to hard disk drives flash drives tape drives optical drives RAID arrays random access memories RAM and read only memories ROM . Examples of client electronic devices may include but are not limited to a personal computer e.g. client electronic device a laptop computer e.g. client electronic device a smart phone e.g. client electronic device a notebook computer e.g. client electronic device a tablet not shown a server not shown a data enabled cellular telephone not shown a television not shown a smart television not shown a media e.g. video photo etc. capturing device not shown and a dedicated network device not shown . Client electronic devices may each execute an operating system examples of which may include but are not limited to Android Apple iOS Mac OS X Red Hat Linux or a custom operating system.

One or more of client applications may be configured to effectuate some or all of the functionality of denoising process and vice versa . Accordingly denoising process may be a purely server side application a purely client side application or a hybrid server side client side application that is cooperatively executed by one or more of client applications and denoising process .

One or more of client applications may be configured to effectuate some or all of the functionality of social network application and vice versa . Accordingly social network application may be a purely server side application a purely client side application or a hybrid server side client side application that is cooperatively executed by one or more of client applications and social network application .

Users may access computer and denoising process directly through network or through secondary network . Further computer may be connected to network through secondary network as illustrated with phantom link line . Denoising process may include one or more user interfaces such as browsers and textual or graphical user interfaces through which users may access denoising process .

The various client electronic devices may be directly or indirectly coupled to network or network . For example client electronic device is shown directly coupled to network via a hardwired network connection. Further client electronic device is shown directly coupled to network via a hardwired network connection. Client electronic device is shown wirelessly coupled to network via wireless communication channel established between client electronic device and wireless access point i.e. WAP which is shown directly coupled to network . WAP may be for example an IEEE 802.11a 802.11b 802.11g Wi Fi and or Bluetooth device that is capable of establishing wireless communication channel between client electronic device and WAP . Client electronic device is shown wirelessly coupled to network via wireless communication channel established between client electronic device and cellular network bridge which is shown directly coupled to network . As is known in the art all of the IEEE 802.11x specifications may use Ethernet protocol and carrier sense multiple access with collision avoidance i.e. CSMA CA for path sharing. The various 802.11x specifications may use phase shift keying i.e. PSK modulation or complementary code keying i.e. CCK modulation for example. As is known in the art Bluetooth is a telecommunications industry specification that allows e.g. mobile phones computers smart phones and other electronic devices to be interconnected using a short range wireless connection.

Referring also to there is shown a diagrammatic view of computer . While computer is shown in this figure this is for illustrative purposes only and is not intended to be a limitation of this disclosure as other configuration are possible. For example any computing device capable of executing in whole or in part denoising process may be substituted for computer within examples of which may include but are not limited to client electronic devices .

Computer may include a processor and or microprocessor e.g. microprocessor configured to e.g. process data and execute the above noted code instruction sets and subroutines of denoising process . Microprocessor may be coupled via a storage adaptor not shown to the above noted storage device . An I O controller e.g. I O controller may be configured to couple microprocessor with various devices such as keyboard pointing selecting device e.g. mouse USB ports not shown and printer ports not shown . A display adaptor e.g. display adaptor may be configured to couple display e.g. CRT or LCD monitor s with microprocessor while network controller adaptor e.g. an Ethernet adaptor may be configured to couple microprocessor to the above noted network e.g. the Internet or a local area network .

As discussed above and referring also to denoising process may identify by a computing device a first portion of a facial image in a first image wherein the first portion includes noise. A corresponding portion of the facial image may be identified in a second image wherein the corresponding portion includes less noise than the first portion. One or more filter parameters of the first portion may be determined based upon at least in part the first portion and the corresponding portion. At least a portion of the noise from the first portion may be smoothed based upon at least in part the one or more filter parameters. At least a portion of face specific details from the corresponding portion may be added to the first portion.

For instance assume for example purposes only that a user e.g. user has taken multiple images of other people including user using e.g. a built in camera of client electronic device . In some embodiments the images may be stored internally via storage device and or may be uploaded e.g. automatically and or manually from client electronic device to be stored remotely at the above noted data store at storage device using known techniques. The images may be organized and or shared on a social network website via social network application . As will be appreciated one or more of the images e.g. image that include user may have been taken under adequate environmental conditions such that the face of user in the images are considered to have little or no noise i.e. the facial portion of the images is considered clean and natural looking . One or more of the images e.g. image that include user may have been taken under less adequate environmental conditions e.g. low light such that the face of user in these images are considered to have more noise and appear less natural.

In some embodiments to help denoise or clean up image to appear more natural like image denoise process may detect one or more faces in a plurality of images wherein the plurality of images may include at least one of the first image e.g. and the second image e.g. . According to some embodiments denoising process may detect images and or from storage device e.g. organized in an album of a social network account associated with user via social network application . Additionally alternatively denoising process may detect images and or from storage device directly from client electronic device e.g. via client application .

Denoise process may include a face detection Application Programming Interface API known to those skilled in the art to detect some or all of the images of various users that may be included in the album and or storage device . In some embodiments denoise process may cluster one or more faces using the face detection API. For example denoise process may cluster all the faces detected to be user and may cluster all the faces detected to be another user in the album and or storage device . An example of the clustering of a user is illustrated in .

In some embodiments denoise process may assume the largest face cluster is the album owner s face e.g. user and may discard any other face clusters from other users. In some embodiments e.g. where there is not at least a second image that includes user or an insufficient number of images that include user one or more images that include a user other than user e.g. users with similar facial features may also be used in the clustering process. Denoise process may segment the face region by e.g. a Grabcut algorithm or other appropriate algorithm. In some embodiments denoise process may use the respective bounding box es as an initial foreground and iteratively segment the face region. As will be discussed in greater detail below at least a portion of the one or more faces in the plurality of images may be aligned by denoise process using one or more facial landmarks. For example denoise process may align all faces to a single randomly choose template by e.g. using an affine transform and using respective facial landmarks between the image and the template as an alignment correspondence.

As will be discussed in greater detail below denoising process may identify a first portion e.g. patch pixel etc. of a facial image in a first image e.g. image wherein the first portion may include noise as discussed above. As will also be discussed in greater detail below denoising process may identify a corresponding portion e.g. patch pixel etc. of the facial image in a second image e.g. image wherein the corresponding portion includes less noise than the first portion e.g. in image .

One or more filter parameters of the first portion may be determined by denoising process based upon at least in part the first portion and the corresponding portion. The one or more filter parameters may include for example a noise level associated at least in part with the first portion and the corresponding portion.

In some embodiments denoising process may determine the noise level for some or every face image G. For example denoising process may model the noise by 1 

where n is a noise layer and Gis the clean image. In some embodiments the noise level may be defined as e.g. Var n and assume n is zero mean and Var n is constant within a single face image. In the example the independency between noise and image content may be assumed and so Var G Var n Var G .

Generally directly computing the noise level for general cases may be difficult since distinguish noise from the image content may be difficult. In the example since the above described images may be restricted to user s faces which should share relatively the same image content i.e. the user s face may be assumed to be relatively unchanged between images denoising process may determine the noise e.g. relative noise level between each image pair. For instance denoising process may determine the relative noise levels between all image pairs and form an example fully connected graph where each node may represent an image Gand each edge may represent the relative noise Rbetween Gand G. Denoising process may determine the absolute noise level Nusing e.g. least squares optimization.

To determine R denoising process may find the top k corresponding patches pon Gfor each patch pon Gand determine the relative noise level of this patch by e.g. 

where p is e.g. 16 by 16. An example as to how to find the top k corresponding patches and their weights wwill be discussed further below as the same or similar framework may be used by denoising process for facial detail synthesis. Continuing with the example denoising process may set k 3. In some embodiments denoising process may determine the relative noise level by e.g. averaging across all patches in the above noted face region face 3 

Continuing with the above example denoising process may determine the absolute noise level Nby minimizing the following example cost function 

where wis the weight of edge R. wmay be used to model the confidence of relative noise level Restimation. In some embodiments denoising process may use a least squares norm between the images to model the confidence and w 1 G G . In some embodiments denoising process may set 0.05. Eq. 4 may be under determined. In some embodiments denoising process may prompt user to annotate one or more images as clean images and force those image Gto be zero noise. Eq. 4 may become a constraint problem 

In some embodiments denoising process may operate under the example assumption that Var G is the same across all faces but this may or may not hold assuming different lighting conditions or different cameras are used between images. Hence denoising process may normalize the lighting by e.g. randomly selecting a reference image as the above noted template and then for each image G denoising process may compute normalized image Gby row col row col 10 

where Aand bis the color transfer matrix and vector between Gand the template. In some embodiments denoising process may compute the noise level using Ginstead of G. For example suppose the noise term for Gis a random variable n n n n . Then the normalization may change the sum of the R G and B noise variances of n from nn to nAAn where n is the original noise in Eq. 1. In some embodiments denoising process may assume that the noise of the three channels are independent and have the same variance then the gain g is the average of the Eigen values of AA. Hence denoising process may divide the result of the least squares optimization from gto determine the final noise level.

At least a portion of the noise from the first portion may be smoothed based upon at least in part the one or more filter parameters noted above. For example in some embodiments denoising process may declare those images with N 0 to be noisy and N 0 to be clean. Based on the estimated noise level denoising process may adaptively smooth or filter Gif it is noisy. Smoothing may include the use of e.g. a bilateral filter with example empirical formula space sigma as 2 Nand range sigma 8 N.

As can be appreciated by those skilled in the art bilateral filtering e.g. smoothing may remove the noise from the noisy target face but may also remove important face specific details and may produce unrealistic over flat faces. The smoothed image may be referred to as a target image. To enrich the visual appearance denoising process may add at least a portion of face specific details from the above noted corresponding portion to the first portion e.g. of the target image . For example denoising process may synthesize the face specific detail from the clean face images and add it to the filtered target.

Adding at least the portion of face specific details from the corresponding portion to the first portion e.g. of the target image may include decomposing at least the corresponding portion to a base layer and a detail layer. For example denoising process may decompose some or all clean images e.g. in the above noted album to one or more base layers and one or more detail layers using the above noted bilateral filter with an example fixed 14 and 38. The base layer s may be the output of the bilateral filter and the detail layer s may be the difference between original input. In some embodiments denoising process may collect some or all clean details as one or more inputs for the detail synthesis.

In some embodiments e.g. for a patch at location i on the target image denoted as t denoising process may synthesize the associated detail patch t. A detail patch es of at least one of the first portion and the corresponding portion may be modeled with a non parametric Markov random field as below 

where tmay be sampled by denoising process from input details and uis the base patch e.g. smoothed patch associated with tin clean inputs pand pare patch i and patch j and the second cost term in some embodiments only considers the overlapping region between patch i and j.

Denoising process may solve the non parametric Markov random field e.g. with a texture optimization framework. For example tmay be initialized by denoising process minimizing the least squares norm between tand u. Denoising process may merge the patches to generate a new detail layer as a current detail layer. In some embodiments denoising process may look for a new detail patch tfrom clean details by e.g. minimizing the following example energy function 12 

In some embodiments denoising process may merge the new detail patches to form one or more new detail layers. In some embodiments denoising process may iterate the above procedure multiple times to obtain one or more final detail layers.

In the above example s assume that the faces are roughly aligned. In some embodiments this may allow denoising process to restrict the searching space within a local window not shown centered at i on each input image. In the example the patch size may be 16 by 16 the distance between each patch may be e.g. 4 pixels the searching window size may be e.g. 31 by 31 and denoising process may iterate the above procedure e.g. 5 times. Those skilled in the art will appreciate that the patch sizes distance search window size number of iterations as well as other variables may vary without departing from the scope of the disclosure.

In some embodiments the output pixel of the detail layer at x denoted by pmay be determined by denoising process by merging some or all patches that overlaps x 

where wis the weight of patch t. Denoising process may set the weight to be a function of energy E in Eq. 12 e.g. w exp E exp E . In some embodiments for example there may be artifacts due to the misalignment between the above noted detail layer and the above noted target layer. If it is assumed for example purposes only that human eyes may be more sensitive to artifacts in flat regions such as the cheek rather than texture regions denoising process may set the weighting to be e.g. 

where gis the local gradient at x and k is an example constant chosen to be e.g. 0.1. gmay be determined by denoising process by local variance of the target image within a window not shown centered at x. In some embodiments a lower local gradient which may represent flat regions may result into weighting function w E of narrow bandwidth and so denoising process may reject patches of higher energy. Thus in some embodiments denoising process may only merge flat regions with patches of higher confidence which may result in less artifacts. In the example denoising process may set the window size to be 16 by 16.

Referring again to the above discussed noise level determination denoising process may pick up the top k corresponding patches to estimate the relative noise level. In some embodiments denoising process may iterate the above procedure e.g. 3 times within the above noted image pair and pick up the patches of the k least energy. Denoising process may use Eq. 14 to determine the weight for each patch and may set the search window not shown size to be e.g. 22 by 22 throughout.

In some embodiments denoising process may involve multi level details. For example for noise level determination denoising process may use the algorithm as described for solving Eq. 12. For texture synthesis denoising process may derive e.g. 3 base detail image pairs from each input image where each pair may be created using one or more different filtering parameters. For instance an album with L input images may have e.g. 3L base detail pairs. In some embodiments denoising process may treat each base detail pair independently. In particular the base layer at ilevel Bmay be 2 2 15 

where BF is bilateral filter and B G the original image. The corresponding idetail layer is D G B. In the example denoising process may use 3 levels and set 14 and 38.

To improve the patch search and identification denoising process may apply a domain adaptation between the input base images and the target image. For example denoising process may use the target image G as the reference and do histogram matching on input base images B. In Eq. 12 the umay come from the 3 base images Band the tmay come from the three detail images D. In noise level determination denoising process may use a linear transform for domain adaptation and may use histogram matching in texture synthesis since e.g. linear transforms may help denoising process to estimate noise gain for the noise level determination.

Those skilled in the art will appreciate that any of the above described processes may take place at any time. For example in response to client electronic device capturing an image denoising process via client application executing on client electronic device may e.g. automatically upload the image to computer where denoising process may identify the first portion of the facial image in the image identify the corresponding portion of the facial image in one or more other images e.g. in one or more online albums determine one or more filter parameters of the first portion smooth at least a portion of the noise from the first portion and add at least a portion of face specific details from the corresponding portion to the first portion. Additionally alternatively denoising process may e.g. automatically perform the processes in response to uploading the image to e.g. client computer . Additionally alternatively denoising process may perform the processes in response to denoising process receiving a user input via a user interface not shown of client application executing on client electronic device . The user interface may also enable user to select which images e.g. in an album that denoising process may use in the above described processes. As such the action that causes denoising process to perform the processes should be taken as an example only and not to limit the scope of the disclosure. In some embodiments after the image has been denoised denoising process may e.g. via social network application share the resulting picture with user and or other users.

While above examples are used for denoising facial portions of an image those skilled in the art will appreciate that other portions may be denoised such as landmarks background etc. without departing from the scope of the disclosure. As such the use of denoising facial portions of an image should be taken as an example only and not to other wise limit the scope of the disclosure.

As will be appreciated by one skilled in the art the present disclosure may be embodied as a method system or computer program product. Accordingly the present disclosure may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore the present disclosure may take the form of a computer program product on a computer usable storage medium having computer usable program code embodied in the medium.

Any suitable computer usable or computer readable medium may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. The computer usable or computer readable storage medium including a storage device associated with a computing device or client electronic device may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable medium may include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a media such as those supporting the internet or an intranet or a magnetic storage device. Note that the computer usable or computer readable medium could even be a suitable medium upon which the program is stored scanned compiled interpreted or otherwise processed in a suitable manner if necessary and then stored in a computer memory. In the context of this document a computer usable or computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with the instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. The computer readable program code may be transmitted using any appropriate medium including but not limited to the internet wireline optical fiber cable RF etc. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Computer program code for carrying out operations of the present disclosure may be written in an object oriented programming language such as Java Smalltalk C or the like. Java and all Java based trademarks and logos are trademarks or registered trademarks of Oracle and or its affiliates. However the computer program code for carrying out operations of the present disclosure may also be written in conventional procedural programming languages such as the C programming language PASCAL or similar programming languages as well as in scripting languages such as Javascript or PERL. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the internet using an Internet Service Provider .

The flowchart and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of apparatus systems methods and computer program products according to various embodiments of the present disclosure. It will be understood that each block in the flowchart and or block diagrams and combinations of blocks in the flowchart and or block diagrams may represent a module segment or portion of code which comprises one or more executable computer program instructions for implementing the specified logical function s act s . These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the computer program instructions which may execute via the processor of the computer or other programmable data processing apparatus create the ability to implement one or more of the functions acts specified in the flowchart and or block diagram block or blocks or combinations thereof. It should be noted that in some alternative implementations the functions noted in the block s may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved.

These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks or combinations thereof.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed not necessarily in a particular order on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions acts not necessarily in a particular order specified in the flowchart and or block diagram block or blocks or combinations thereof.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the disclosure. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps not necessarily in a particular order operations elements and or components but do not preclude the presence or addition of one or more other features integers steps not necessarily in a particular order operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present disclosure has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the disclosure in the form disclosed. Many modifications variations and any combinations thereof will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the disclosure. The embodiment s were chosen and described in order to best explain the principles of the disclosure and the practical application and to enable others of ordinary skill in the art to understand the disclosure for various embodiment s with various modifications and or any combinations of embodiment s as are suited to the particular use contemplated.

Having thus described the disclosure of the present application in detail and by reference to embodiment s thereof it will be apparent that modifications variations and any combinations of embodiment s including any modifications variations and combinations thereof are possible without departing from the scope of the disclosure defined in the appended claims.

