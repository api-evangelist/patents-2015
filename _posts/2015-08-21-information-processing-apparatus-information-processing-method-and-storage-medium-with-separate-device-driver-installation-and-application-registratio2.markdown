---

title: Information processing apparatus, information processing method and storage medium with separate device driver installation and application registration processing
abstract: There is provided an information processing apparatus that can reliably associate a device driver with an application even without updating the device driver itself. To achieve this, the information processing apparatus is provided with a registration unit capable of registering and updating association information between information for managing a device and a predetermined application regardless of whether a device driver is installed. This allows management by separating installation of a device driver from registration processing of an application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09661172&OS=09661172&RS=09661172
owner: Canon Kabushiki Kaisha
number: 09661172
owner_city: Tokyo
owner_country: JP
publication_date: 20150821
---
The present invention relates to an information processing apparatus and an information processing method for associating an event generated in an externally connected device with an application program in a circumstance in which the application program is operated according to the event.

In an information processing system consisting of an information processing apparatus such as a PC and a device such as an image reading device connected to the apparatus it is necessary to associate a device driver for operating a device with an application program for processing information obtained from the device. More specifically there is so called pseudo push scanning in which an appropriate application is activated according to an event transmitted by an operation button of the image reading device to acquire image data. If the push scanning is performed an application used for the push scanning may be registered as application information in a device management registry on an operating system.

Japanese Patent Laid Open No. 2011 13809 discloses that when installing a device driver an application is registered based on driver information on the device driver.

Unfortunately in the configuration in which an application is registered based on device driver information when installing a device driver as disclosed in Japanese Patent Laid Open No. 2011 13809 an application may be uniquely determined with respect to a device driver. Accordingly if an application of a new version is released the old device driver and the new application may not be associated with each other. In this case a device driver also needs to be newly released. At this time even if the above mentioned device driver for example is a common device driver for devices of a plurality of models including a future model a new device driver may need to be released to associate the device driver with a new application. Accordingly even if the device driver is produced in consideration of a future model the advantage of the device driver cannot be offered.

The present invention has been made to solve the above problems. Accordingly an object of the present invention is to provide an information processing apparatus capable of easily registering an application for operating a device.

In a first aspect of the present invention there is provided an information processing apparatus capable of operating an externally connected device by using an application the apparatus comprising a registration unit configured to register an application corresponding to a type of device connected to the information processing apparatus in association information between information related to a type of device and an application as an application for operating the device and an updating unit configured to update the association information wherein the updating unit can update the association information irrespective of a device driver corresponding to the device.

In a second aspect of the present invention there is provided an information processing method for an information processing apparatus capable of operating an externally connected device by using an application the method comprising the steps of registering an application corresponding to a type of device connected to the information processing apparatus in association information between information related to a type of device and an application as an application for operating the device and updating the association information wherein in the updating step the association information can be updated irrespective of a device driver corresponding to the device.

In a third aspect of the present invention there is provided a non transitory storage medium for storing a program for causing a computer to execute an information processing method the method comprising the steps of registering an application corresponding to a type of device connected to the information processing apparatus in association information between information related to a type of device and an application as an application for operating the device and updating the association information wherein in the updating step the association information can be updated irrespective of a device driver corresponding to the device.

Further features of the present invention will become apparent from the following description of exemplary embodiments with reference to the attached drawings .

Embodiments of the present invention will now be described with reference to the attached drawings. It should be noted that the following embodiments will not limit the present invention according to the scope of the claims. Further all of the combinations of the features described in the present embodiments are not always essential for a solving method of the present invention.

A printer unit achieves a printer function in the image reading device and prints print data or the like received from the outside on a print sheet by an ink jet system an electrophotography system and the like. A scanner unit achieves a scanner function in the image reading device optically reads a document set on a document platen converts the read image into electronic data converts it into a designated file format and transmits it to an external device via a network.

A central processing unit CPU has control over the image reading device . The central processing unit reads programs stored in a program memory such as a ROM and executes various kinds of processing according to the read programs. At this time a work memory such as a RAM is used as a working area for buffering and the like.

An operation unit is a user interface for providing information to a user or receiving instructions from the user. In a case where pseudo push scanning is performed the user inputs an instruction in the operation unit .

A network communication unit performs network communications via a network connection unit under instructions from the central processing unit . The network communication unit corresponds to at least either a wired LAN or a wireless LAN. In the case of the wired LAN the network connection unit serves as a connector for connecting a wired LAN cable with the image reading device . In the case of the wireless LAN the network connection unit serves as an antenna. A flash memory stores therein source information on a packet received by the network communication unit . The above described function units are connected to each other by a signal line .

A CPU has control over the information processing apparatus . An application program an operating system OS and the like are installed in a disk device . The CPU reads the application and OS installed in the disk device to execute various kinds of processing. An external disk reading device reads contents of an externally connected storage medium such as a CD ROM and provides them to the CPU . A memory consists of a RAM and the like. The CPU uses the memory for temporarily storing data as necessary and buffering. The flow charts described later with reference to are executed by the CPU while using the memory in the OS environment installed in the disk device . It should be noted that the disk device also stores various kinds of files or the like.

Furthermore the CPU provides information to a user via a display unit such as an LCD and receives an instruction from the user via an operation unit such as a keyboard or a mouse.

A network communication unit performs network communications via a network connection unit under instructions of the CPU . Like the image reading device as illustrated in the network communication unit corresponds to at least either a wired LAN or a wireless LAN. A USB communication unit performs USB communications via a USB connection unit such as a connector under instructions of the CPU . The above described function units are connected to each other by a signal line .

The driver software activates a device driver based on the instructions and settings received from the application software and provides an image acquired from the image reading device to the application software . The driver software has a unique graphical user interface GUI and the user can perform various settings via the GUI. More specifically for example the user can specify a crop area with respect to a preview image set a resolution set a reading mode binary 8 bit multivalued 24 bit multivalued etc. set color adjustment such as gamma correction and the like.

The device driver sends a control command for controlling firmware installed in the image reading device to the image reading device to acquire an image. In the case of the image reading device without firmware the device driver accesses a control register of each module in the image reading device . Then shading control setting of a motor speed according to a resolution and a crop range providing of gamma correction data received from the driver software and the like are performed whereby flow control is performed in the reading operation of the image reading device .

A port driver performs communication control with the image reading device depending on interfaces such as a parallel interface USB IEEE 1394 SCSI LAN and wireless LAN.

An operating system is an operating system OS of the information processing apparatus and can be Windows registered trademark for example. An event detection service is software operating in the background of the OS to provide a specific service without interaction with a user. Details of the event detection service will be described later. A button monitor is a program for receiving event information generated in the image reading device in pseudo push scanning for example and transmitting a device ID of the image reading device and the event information to an appropriate application.

A PnP detection program registration area is an area storing therein a program executed when Plug and Play PnP is generated. Basically a driver installer which the OS possesses is stored and the driver installer is activated when the PnP is generated. The driver installer searches one adaptive device driver from a plurality of device drivers stored in the driver store based on the device ID of the image reading device in which the PnP is generated and installs the device driver.

In the PnP detection program registration area another application can be registered by using an API RegisterDeviceNotification prepared by the OS. In the present embodiment PnP such as a USB is described as an example but any system can be employed as long as the OS detects connection of the device. Furthermore a system by universal Plug and Play UPnP generated in network connection or a pairing operation using near field communication NFC can similarly be implemented.

A device management registry is an area storing information for managing a device image reading device in which a device driver is installed. Once the device driver is installed information necessary for operating the device driver and information necessary when the application uses the device driver are stored in the device management registry.

If a user issues a pseudo push scanning command via the operation unit of the image reading device the present processing is started. Once the present processing is started the central processing unit of the image reading device sends the instructed information and the device ID of the image reading device to the connected information processing apparatus as event information S .

The CPU of the information processing apparatus that has received the event information causes the button monitor to search applications registered in the device management registry for an application corresponding to the received device ID S . Then in S it is determined whether the application corresponding to the device ID has been found. If it is determined that the application corresponding to the device ID cannot be found the present processing is finished.

Meanwhile if it is determined that the application corresponding to the device ID has been found the process proceeds to S and the device ID and the event information are added to an argument of the application to activate the application. Then in S the image reading device is caused to execute the reading operation according to the received event information and device ID. The present processing is finished.

As described above in the pseudo push scanning an application associated with the image reading device and installed in the information processing apparatus is activated in response to a user input from the operation unit of the image reading device to perform predetermined reading processing. After the reading operation is finished the application not only stores the received image but also can perform processing on the stored image or sends the stored image. More specifically the application can perform OCR processing on the acquired image and upload an image in an external Web service such as a social networking service SNS or a cloud storage service.

Once the present processing is started in S the CPU stores a device driver in a driver store. Then in S the CPU installs application software.

In S the CPU determines whether an event detection service is installed. If it is determined that the event detection service is installed the process jumps to S. Meanwhile if it is determined that the event detection service is not installed the process proceeds to S to install the event detection service.

Next in S the CPU registers the event detection service in the OS so that the event detection service installed in S when a PnP event is generated is invoked. Such registration can be achieved by using an API called Register Device Notification for example. By installing the event detection service and registering it in the OS the event detection service is activated along with the startup of the OS . Further if a PnP event is generated while the OS is running the event detection service is notified of the message that the PnP event has been generated.

In S the CPU registers in the event detection service installed in S information associating the device ID for identifying the type of the image reading device with an application.

Accordingly updating the application in the table shown in can update an application registered in the device management registry when PnP is generated. That is updating the table of can register a new application as an application activated in the pseudo push scanning.

It should be noted that shows a state in which a pair of a model of device and an application is registered. In a case where there are a plurality of applications satisfying requirements compatible with the device association may also be performed based on the requirements. In this case in S the requirements of the application compatible with the device may be described in the device driver side. In a case where an application will be registered in the device management registry later the association can be confirmed by inquiring of the device driver.

If the registration of the event detection service is completed in S the present processing is finished. While the present processing is performed the image reading device and the information processing apparatus do not need to be connected. In the case of shipping an information processing apparatus in which a device driver is preinstalled the information processing apparatus is shipped as it is.

Once the present processing is started first in S the central processing unit of the image reading device sends PnP event information as well as the device ID of the image reading device .

The CPU of the information processing apparatus that has received the PnP event information performs the following processing in the OS environment. First in S a program to be notified if a PnP event is generated is searched and the message that the PnP event has been generated is notified. In the case of the present embodiment the event detection service has been registered so the message is notified to the event detection service.

Next in S it is determined whether a device driver of a target image reading device has already been installed from the device ID included in the PnP event information. If the device driver has been installed further installation is not needed so the process jumps to S. Meanwhile if it is determined that the device driver has not been installed the process proceeds to S and a corresponding device driver is selected from the driver store and installation is performed. After the installation is completed the process proceeds to S and the information on the image reading device device information is registered in the device management registry .

After the registration of the device information is completed the process proceeds to S. In S the CPU causes the event detection service to determine whether the application program corresponding to the above mentioned device ID is registered in the device management registry in the table shown in . If the application program is registered the present processing is finished.

Meanwhile if it is determined that the application program is not registered the process proceeds to S and it is determined whether the application program has already been installed. If it is determined that the application program has not been installed the process proceeds to S and the installation of the application is performed. For example if there is a corresponding application program in a plurality of applications provided by an application store the corresponding application program may be installed. Further if there is a download site for the application prepared by a vendor a corresponding application may be downloaded from the site. In addition installation may be performed by a user by displaying a message prompting for installation.

Next in S the CPU causes the event detection service to register application information in the device management registry based on the registered device ID and application information. For example referring back to in a case where the device ID of the image reading device is MX0000 series the registered information is searched for an application corresponding to the device ID in and the corresponding application is registered in the device management registry . FIG. is a view showing a state in which application information is registered in the device management registry illustrated in . An application is additionally registered in an area associated with an individual button in the address 0000 . Such registration can be achieved by using an API called Register Event Call back Program for example. The present processing is finished.

According to the above described present embodiment installing the event detection service program prior to shipment of the information processing apparatus allows management by separating the installation of the device driver from the registration of the application. More specifically regardless of whether the device driver is installed association of the device management information with the application can be registered or updated in the device management registry.

As shown in an application program corresponding to the device ID of the device in which the PnP event has been generated is specified as an application program activated in the pseudo push scanning. Therefore in a case where a new application is released for example updating the application specified in the table shown in can automatically register the new application in the device management registry by PnP.

In the flow chart of a step of installing an application is provided in S. However this step is not always needed. If an application is not installed the step may be finished with an error. In this case after the corresponding application is installed separately by a user and at a timing at which PnP is newly generated the above flow chart may be performed. Alternatively along with the installation of the application PnP may be generated in a pseudo manner or a notification may be sent to the event detection service so as to perform the present processing.

In the first embodiment the event detection service is prepared by the installer prior to shipment of the OS. Meanwhile in the present embodiment a description will be given of the processing in a case where an event detection service is incorporated into an OS as one of the functions of the OS. Also in the present embodiment the image reading device illustrated in and the information processing apparatus illustrated in are used.

Once the present processing is started the CPU stores a device driver in a driver store in S. Then in S the CPU installs application software.

Then in S the CPU registers in an OS information associating a device ID for identifying the image reading device with an application for example the table shown in .

The present processing is finished. While the present processing is performed the image reading device and the information processing apparatus do not need to be connected. In the case of shipping an information processing apparatus in which a device driver is preinstalled the information processing apparatus is shipped as it is.

In the present embodiment an event detection service is incorporated into the OS and therefore the installer does not need to particularly install the event detection service. The event detection service of the present embodiment is performed as a service included with the OS.

Once the present processing is started first in S the central processing unit of the image reading device sends PnP event information as well as the device ID of the image reading device .

The CPU of the information processing apparatus that has received the PnP event information performs the following processing in the OS environment. First in S it is determined whether a device driver of a target image reading device has already been installed from the device ID included in the PnP event information. If the device driver has been installed installation is not needed so the process jumps to S. Meanwhile if it is determined that the device driver has not been installed the process proceeds to S and a corresponding device driver is selected from a driver store and installation is performed. If the installation is completed the process proceeds to S and the information on the image reading device device information is registered in a device management registry .

If registration of the device information is completed the process proceeds to S. The CPU causes the event detection service to determine whether an application program is registered in the device management registry. If the application program is registered the present processing is finished.

Meanwhile if it is determined that the application program is not registered the process proceeds to S and the CPU causes the event detection service to register application information in the device management registry based on the registered device ID and application information. For example referring back to in a case where the device ID of the image reading device is MX0000 series registration information is searched for an application corresponding to the device ID in and the corresponding application is registered in the device management registry . The present processing is finished.

According to the above described present embodiment incorporating the service program into the OS prior to shipment of the information processing apparatus allows subsequent management by separating the installation of the device driver from the registration processing of the application. More specifically regardless of whether the device driver is installed association of the device management information with the application can be registered or updated in the device management registry.

According to the above two embodiments by completing preinstallation processing of the device driver for the information processing apparatus subsequent application registration processing can be completed at a timing at which PnP is generated.

In such a mode even after installation processing is completed an installer of another application can renew association of the device ID with application information in the event detection service. More specifically it is possible to overwrite the device management registry in which the old application information is registered with newly released application information.

Further even in a case where a class driver that is a common driver among models is preinstalled prior to shipment it is not needed to perform application registration in association with all models of devices as in a conventional system. The latest application information at that time may be associated with a device ID of a target model and registered in the OS via the event detection service.

Furthermore according to the above embodiments since no additional processing is performed on the existing device driver even in a case where the OS standard device driver is used the same application registration as the processing described above can be completed.

It should be noted that a description has been given of the assumption of the pseudo push scanning of the image reading apparatus but the present invention is not limited to such a configuration. Examples of the device connected to the information processing apparatus include a digital camera a camera phone and the like. A similar effect can be obtained in a mode in which images captured by these devices are transmitted to the information processing apparatus. Also when an event generated in a digital camera or a camera phone is received by the information processing apparatus and transferred by activating an application registration processing of the application is needed. Even in such a case registration processing can be performed in the same manner as the above described pseudo push scanning.

The object of the present invention can also be achieved by providing for a system or an apparatus a storage medium in which a program code of software that achieves the functions of the above embodiments is stored and by reading and executing the program code by the system or a computer in the apparatus. In this case the program code itself read from the storage medium achieves the functions of the above described embodiments and the storage medium in which the program code is stored constitutes the present invention. Examples of the storage medium for providing a program code include a flexible disk a hard disk an optical disk a magneto optical disk a CD ROM a CD R a magnetic tape a non volatile memory card a ROM and a DVD.

The present invention also includes the case where based on the instructions of the program code read by the computer part or all of the actual processing is performed by an OS running on the computer and the functions of the above described embodiments are achieved through the processing.

Furthermore the present invention also includes the case where the series of the above processing is performed by writing the program code read from the storage medium in memory provided for a function extension board inserted into the computer or a function extension unit connected to the computer. In this case based on the instructions of the written program part or all of the actual processing is performed by a CPU or the like provided for a function extension board or a function extension unit and the functions of the above described embodiments are achieved through the processing.

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of Japanese Patent Application No. 2014 175931 filed Aug. 29 2014 which is hereby incorporated by reference wherein in its entirety.

