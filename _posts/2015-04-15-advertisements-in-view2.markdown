---

title: Advertisements in view
abstract: A technique is provided to determine whether a region within a web page is viewable to a user through a browser window. Often, browsers will only show part of a web page at given time, creating a difficulty in establishing whether a region of the web page, which may be an advertisement for example, is in view. This is addressed by providing one or more test features within the region, rendering the web page, monitoring a behavioral characteristic of the test features and determining whether the region is in view based on the monitored behavioral characteristic, wherein the behavioral characteristic varies according to whether the test feature is currently being displayed. One example of a behavioral characteristic is a frame progression rate. Browsers will typically redraw elements of a web page at a higher rate if they are currently in view through the browser window, and this characteristic can therefore be used to determine whether the test feature, and thus the region, is in view. The present invention finds particular utility where the region contains an advertisement, as it allows an advertiser to discover whether the advertisement has been seen by users.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09595045&OS=09595045&RS=09595045
owner: Google Inc.
number: 09595045
owner_city: Mountain View
owner_country: US
publication_date: 20150415
---
This application is a Continuation of U.S. patent application Ser. No. 14 531 532 filed on Nov. 3 2014 which is a Continuation of U.S. patent application Ser. No. 13 163 154 filed on Jun. 17 2011 the contents of both applications are incorporated herein by reference in their entirety.

The present invention relates to the delivery of content over a network and to the analysis of whether that content is viewable by a user. In particular but not exclusively the present invention relates to the assessment of whether an advertisement in a web page is viewable by a user.

Increasingly online publication is replacing conventional physical means for distributing content. For example newspaper publishers are receiving increasing volumes of traffic at their websites while selling fewer hard copies of the newspapers themselves. This presents a challenge for the publishers in terms of monetising the content they produce. While some publishers have instigated a pay per view or subscription service to access their online content most have attempted to keep their online offerings free at the point of use. To support this model publishers rely on advertising.

Indeed advertising based revenue models are not limited to publishers of content but have been adopted by a large number of internet services. In selling advertisement space on a website a decision has to be made as to the price that that space will cost. Today advertising space is predominantly sold on either a pay per impression or a pay per click basis.

In a pay per impression model a charge is levied each time the web page containing the advertisement is viewed. Records are kept each time a web page containing the advertisement is downloaded to a user and a charge is levied to the advertiser according to the volume of downloads that have occurred.

A problem with current pay per impression techniques is that they do not accurately reflect whether the user engaged with the advertisement itself. Indeed there is no indication as to whether the advertisement was even viewed by the user. For example the advertisement may be on a part of the web page that was not viewable in the user s browser window or may even have failed to load. This creates uncertainty as to the value of the advertisement to the advertiser and thereby suppresses demand for internet advertising.

The pay per click model addresses some of these concerns. In this model payment is made for each occasion on which the user clicks on a link within the advertisement. However while this does ensure in the absence of fraud that payment is only made in the case where a user engages with the advertisement it is not appropriate for all circumstances. For example many advertisements are intended to increase brand awareness passively and would not wish to interfere with the user s experience. In general the number of clicks on an advertisement will not be simply a function of the number of views it receives but will be affected by the success of that advertisement in enticing a click. Pay per click models are unable to distinguish between these factors.

Accordingly it would be desirable to develop an approach which accurately reflects the number of times a particular advertisement has been viewed. Since the visibility of the advertisement is not ensured simply because the host web page has been downloaded a greater degree of accuracy is required.

One proposed solution is to monitor the area of the web page which is shown by a particular user s browser at a given moment. For example knowing the dimensions of the browser s viewport and the position of the advertisement in the web page it can be established whether the advertisement is in view that is within the browser s viewport by observing the scroll position of the browser window i.e. its vertical and horizontal position on the web page . Another solution alternatively or additionally senses the position of the mouse cursor on the web page.

While these solutions can provide accurate data in the right circumstances they are in practice of limited use. This is due to restrictions on the information that parties within the process are able to derive.

In particular advertisements are often contained within nested iframes in a host web page. An iframe provides a region within a web page in which other web content may appear.

One important benefit of iframes for the publisher is that content within the iframe is unable to affect content in the host web page or even discover information regarding that page as long as the iframe and the host web page are served from different domains. This means that the publisher can be secure in the fact that the advertisement will not corrupt the main content of the host web page.

However since content within the iframe is not able to interact with the host web page it is not possible for any client side code served with the advertisement to discover for example the dimensions height and width of the host web page or where the browser viewport is in relation to the host web page. Accordingly it is not possible for any such client side code to be used to discover whether the advertisement is in view. As such when an iframe is used to serve an advertisement techniques which attempt to infer whether an advertisement is in view from the location of the browser viewport relative to the host web page do not function. c.f. http www.realvu.net iframes 

Accordingly it would be desirable to provide a technique for establishing whether an advertisement has been viewed even when the advertisement is served within an iframe or some other such restricted or sandboxed environment.

According to a first aspect of the present invention there is provided a computer implemented method for determining whether a region within a web page is in view comprising 

So the present invention is able to assist in providing information as to whether a region within a web page is in view without requiring knowledge of the characteristics of the host web page. During rendering of the web page behavioural characteristics that vary according to whether a test feature in the region is currently being displayed can be monitored to establish whether the region is in view or not in view. In this context in view indicates that the region is within the browser s viewport i.e. within a viewable portion of a web page that is shown by the browser. However while the presence of the region within the browser s viewport is a necessary requirement it may not be sufficient. For example although in the browser s viewport a region may be obscured from the user as a result of being in a background tab or for another reason. Thus in general a region is in view if it is viewable by a user and not in view if it is not viewable by a user for whatever reason. In particular preferred embodiments the region contains an advertisement and in this way information as to whether an advertisement is in view can be derived.

The present invention can take advantage of the fact that web browsers and web browser plugins make particular provisions whereby for example elements of a web page that are viewable within the browser viewport may be redrawn more frequently than elements that are on the web page but in an area not currently contained within the browser s viewport. This behavioural difference together with others like the clock rate or the number of local connections that can be made is the result of efforts to reduce unnecessary processing of elements of web pages that are not currently in view. The present invention can make use of this behavioural difference to infer information regarding whether test features are in view and from this whether advertisements are in view

Accordingly behavioural characteristics may relate to the manner in which the one or more test features are handled during rendering of the web page. For example in preferred embodiments the step of monitoring a behavioural characteristic comprises monitoring behaviour of an application programming interface API such as a browser API or a plugin API as it relates to the at least one test feature. The behaviour of an API may be monitored directly or indirectly. For example a plugin might receive a clipping rectangle from the browser through the NPP SetWindow call in the Netscape Plug in Application Programming Interface NPAPI detailing which portion of a drawable feature is currently in view. Using this information the plugin may vary the frame progression rate of a test feature it is generating. In certain embodiments client side code associated with a test feature could be provided to monitor the browser NPAPI to determine whether part of or the whole of the test feature is in view. In other embodiments client side code could be used to monitor the frame progression rate of the plugin associated with the test feature. In some preferred embodiments the plugin API is a Flash API.

In preferred embodiments the step of monitoring the behavioural characteristic is carried out by code operating in a restricted environment such that it is prevented from discovering features of the host web page. In preferred embodiments the restricted or sandboxed environment in which the code operates is an iframe potentially nested within other iframes within the host web page. The present invention finds particular utility in the context of iframes since it does not require knowledge of the host web page instead monitoring a behavioural characteristic of the test feature itself which varies according to whether that feature is being displayed. This is especially valuable when the content of the iframe and the host web page are served from different domains since in these circumstances it is not possible for elements served within the iframe to interact with or discover information about the host web page.

Examples of restricted environments that may be used as an alternative or in addition to an iframe in the context of the present invention include a frame a Microsoft Web Sandbox a dojox.secure.sandbox from the Dojo Toolkit a Scalable Vector Graphics SVG document or Cajoled script generated by Caja. Restricted environments may prevent the code carrying out the monitoring of the behavioural characteristic from having access to some or all of the position of the region relative to the host web page the vertical and horizontal scroll positions of the viewport of the host page and the dimensions of the viewport of the host web page.

In preferred embodiments the behavioural characteristic comprises a frame progression rate of the test feature. For example the behavioural characteristic may be the rate at which frames within a Small Web Format SWF applet progress. Alternatively or additionally the behavioural characteristic may comprise a timer clock rate and or the rate at which local connections can be made. In other examples the behavioural characteristic may be animation timing of the at least one test feature or the rate at which a browser calls a browser plugin to repaint itself. In particular animation timing may be monitored through a WindowAnimationTiming API.

In preferred embodiments the step of monitoring the behavioural characteristic occurs at a client device and the method further comprises transmitting information relating to the behavioural characteristic from the client device to a server. Monitoring the behavioural characteristic at client devices is an efficient way to obtain information as to the activity of that client device while recording information at a central server allows results to be collated from a number of sources. As such this aspect of preferred embodiments makes optimal use of the architecture of a client server network.

Preferably the at least one test feature is any of an element a document a plugin or an applet. In preferred embodiments the at least one test feature is an applet such as an Adobe Flash Java or Silverlight applet. In one particular preferred embodiment the at least one test feature is an Adobe Flash SWF applet and the step of monitoring a behavioural characteristic comprises monitoring an Adobe Flash API.

In preferred embodiments the step of monitoring the behavioural characteristic is carried out by client side code. Client side code is code which operates on a client device. The client device in this context is the device which displays the host web page to the user. The client side code may take the form of for example client side script an applet or a plugin. In particular client side script may be implemented in at least one of ECMAScript JavaScript Jscript VBScript ActionScript or GLSL.

In preferred embodiments the step of determining whether the region is in view or not in view comprises determining one or more of the proportion of the at least one test feature that is in view the height and width of the at least one test feature that is in view whether any part of the at least test feature is in view and whether all of the at least one test feature is in view. By analysing these details of whether the test feature is in view a more detailed picture can be established regarding which parts of the region are in view.

Preferably the step of determining whether the region is in view comprises comparing the monitored behavioural characteristic with one or more control values. For example the control values may be used as threshold values whereby if the behavioural characteristic exceeds a certain value the region is determined to be in view or not in view as appropriate . This is an efficient method of judging whether a frame progression rate indicates that the region is in view or not. For example the test features can be determined as in view if the frame progression rate exceeds a threshold value.

In some preferred embodiments the method further comprises generating a control feature which is not viewable monitoring a behavioural characteristic of the control feature and determining the at least one comparison value in dependence on the monitored behavioural characteristic of the control feature. A control feature that is not viewable is one that will not be displayed to a user in any circumstances. This aspect of the present invention makes use of the fact that a browser or plugin will render features of the web page at a nominal rate even if those features are located such that they will never be shown. For example should the test feature be delivered in an iframe and the control feature also be delivered in the iframe the control feature may be located outside the visible dimensions of the iframe meaning that it is never shown to the user since any aspect of the iframe is unable to influence the host web page . Accordingly the behavioural characteristic of the control feature can give an impression of the likely behavioural characteristic of the test feature when it is not in view. For example the frame progression rate of the test feature can be compared with the frame progression rate of the control feature and the test feature can be considered in view if its frame progression rate exceeds that of the control feature.

In some circumstances the control value with which the behavioural characteristic of the test feature is compared is chosen in dependence on a previously determined state of the test feature. In particular the control value may be chosen in dependence on whether the test feature was previously considered to be in view or not in view. For example the control value for a test feature to be determined as in view when the test feature has previously been determined as not in view may be greater than the control value if the test feature has previously been determined as in view. This may help account for changes in the conditions in which the browser or plugin operates and limits the chance that minor fluctuations due to external factors will be interpreted as a change of state of the test features from in view to not in view or vice versa.

Alternatively or additionally the set of comparison values may be determined using heuristic or empirical methods. These methods may take account of the circumstances in which the web page is rendered such as the browser used to render the web page or the operating system environment. As such allowances can be made for other reasons for variation in the redraw rate which do not depend on whether the feature is in view or not in view.

Preferably the at least one test feature is located at an edge of the region in which the advertisement is found. This means that values retrieved from the test feature can clearly establish whether that edge of the region is in view or not. In preferred embodiments a plurality of test features are located at edges of the region. In this manner the invention can assist in determining whether the whole of the advertisement or a particular proportion of the advertisement is in view or not in view. In particular embodiments at least some of the test features are located at corners of the region.

In preferred embodiments the at least one test feature is transparent and or a test pixel. These aspects limit the impact of the at least one test feature on the region in which the advertisement is found allowing it to serve its primary purpose.

In preferred embodiments an advertisement is provided in the region. This is particularly valuable context in which to discover whether the region is in view and may provide significant commercial advantages. In some preferred embodiments the at least one test feature may form part of or the whole of the advertisement itself.

It can also be appreciated that the invention can be implemented using computer program code. Indeed according to a further aspect of the present invention there is therefore provided a computer program product comprising computer executable instructions for carrying out the method of the first aspect. The computer program product may be a physical storage medium such as a Read Only Memory ROM chip. Alternatively it may be a disk such as a Digital Versatile Disk DVD ROM or Compact Disk CD ROM . It could also be a signal such as an electronic signal over wires an optical signal or a radio signal such as to a satellite or the like. The invention also extends to a processor running the software or code e.g. a computer configured to carry out the method described above.

According to a further aspect of the present invention there is provided a device for determining whether a region within a web page is in view comprising 

Referring to a web page is shown. The web page comprises a main area in which content is displayed. The web page further comprises an advertisement . In this example the advertisement is contained within an iframe.

It is known that a user accessing the web page will be able to move the browser window around the web page to view different elements of the page . The position of the browser window is indicated by the scroll bars . The user may also be able to zoom in or zoom out of the host web page a process which effectively changes the size of the browser window relative to the host web page . As a result of this certain elements of the web page will be in view at some times and not in view at others.

As explained in the background above this creates a difficulty in establishing whether the advertisement is in view which will of course be of interest to the advertiser producing the advertisement when deciding its value. One prior art solution relies on knowledge of the position of the scroll bars . However this information cannot be discovered by elements provided with the advertisement since this is contained within an iframe on an external domain. This is because iframes are specified to isolate the host web page from content contained within the iframe.

In alternative embodiments other restricted or sandboxed environments than iframes could be used for example a frame Microsoft Web Sandbox dojox.secure.sandbox from the Dojo Toolkit an SVG document or Cajoled script generated by Caja. Alternatively or in addition to sandboxing the client side monitoring code could be restricted to a limited subset of available features for example ADsafe ECMAScript 5 strict mode or Cajita.

Instead the control feature is used to understand the browser s response to elements of the page which are not in view as will be described in greater detail below. Additionally to remove all intrusion the test feature is placed behind the advertisement .

The test feature and the control feature may be implemented as test and control pixels respectively. For example the test feature may be a single transparent test pixel overlaid on the advertisement . In this way the test feature provides minimal intrusion into the functionality of the advertisement .

The research server the advertiser the ad server and the publisher may be implemented using conventional computer server systems. Each of these participants in the system may represent a single computer server or may represent a collection of computer servers as appropriate. The skilled person will also recognise that various participants may share computer hardware or be hosted on the same machines if convenient.

The client device may be implemented as any network enabled device. For example the client device may be implemented as a personal computer laptop computer tablet computer smartphone or the like. In preferred embodiments the client device is an internet enabled device but the skilled person will appreciate that alternative methods for delivering content to the client device may be employed.

The operation of this embodiment of the present invention will now be described with reference to which shows the activities of each of the participants illustrated in during the delivery of a web page to a client device .

At step s the advertiser generates an advertisement . The advertisement may provide information about a product sold by the advertiser for example and may include elements such as text images moving images sound or a combination of these. The advertisement may also include one or more hyperlinks so that when the advertisement is rendered by the client device it is possible to select these hyperlinks in order to be redirected to further content provided by the advertiser . The advertisement may be encoded by the advertiser as a HyperText Mark up Language HTML file.

At step s the research server sends client side code to the advertiser for incorporation in the advertisement . In one example the client side code is JavaScript. The client side code is designed to allow the research server to retrieve information as to whether the advertisement is in view when served with the web page as will be explained in greater detail below.

The client side code is incorporated into the advertisement at step s and is then sent by the advertiser to the ad server at step s. In this example the advertiser can be understood as an organisation which wishes to promote a product while the ad server is operated by an organisation which offers to find advertising space for the advertiser .

Accordingly the ad server has a relationship with multiple advertisers and multiple publishers and acts as an intermediary to assist in the placement advertisements with suitable publishers.

So the advertisement including the client side code provided by the research server is now hosted by the ad server . The ad server has a relationship with the publisher by which advertisements are provided in the publisher s content. This is effected by the publisher incorporating links to the ad server in web pages it provides to users. These links are delivered within iframes. This is beneficial to the publisher as content delivered in the iframe is isolated from affecting the host web page and therefore the publisher can be certain that the advertisements provided by the ad server will not adversely affect the content it is publishing in the host web page.

Accordingly a client device may request a web page from the publisher at step s. The web page is then returned to the client device at step s. The client device then renders this web page at step s. The rendering process is typically undertaken by a browser operating on the client device .

As explained above the web page contains an iframe. The iframe is linked to an address at the ad server . Thus when the browser operating at the client device attempts to render the web page it will be instructed by the iframe to call further information from the ad server to populate the iframe. This request is transmitted from the client device to the ad server at step s.

On receiving the request the ad server decides what content to return to the client device . In this example the ad server returns the advertisement provided by the advertiser in which the client side code provided by the research server has been incorporated as described above. At step s the advertisement is returned to the client device .

As mentioned above the advertisement contains the client side code provided by the research server . The client side code is executed by the client device at step s as part of the process of rendering the web page . When the client side code is executed by the client device it is effective to request two identical applets one for the test feature and one for the control feature from the research server at step s. At step s the applets are returned to the client device . In practice the web browser may employ its cache to reduce these two requests for an identical resource into a single request. The applets may be for example Adobe Flash applets although the skilled person will recognise that other types of applet or resource may be used. In the preferred embodiment Adobe Flash applets are provided and executed within the Flash environment. The Flash environment by proxy provides access to the browser API.

At step s the client side code requested by the research server embeds the applets. The applets are embedded to form the test feature and the control feature . Since the control feature is located in an area of the web page outside of the visible boundaries of the iframe the browser will never show the control feature and will always treat it as if it is not in view. On the other hand the browser will treat the test feature as in view when it falls within the browser window and not in view when it is outside the browser window .

As the browser renders the web page to handle the Flash applets it will make calls to the Flash plugin API which allows Flash to determine whether a feature is in view or not in view for instance Safari on Mac OS X supplies Flash with details of the clipping rectangle whenever the window geometry changes. This increases efficiency of the browser by allowing the plugin to redraw elements that are known to be out of view at a lower rate than those elements which are known to be in view. Thus the rate at which the plugin will progress the animation frames of the test feature will depend on whether it is in view or not in view. Accordingly the rate at which the animation frames progress or the frame progression rate is a behavioural characteristic relating to the test feature which varies according to whether the test feature is being displayed i.e. whether the test feature is in view or not in view. In this embodiment the frame progression rate is used as a behavioural characteristic but it is recognised that other characteristics may alternatively or additionally be used. For example characteristics such as a timer clock rate and or the rate at which local connections can be made may vary according to whether a test feature is currently being displayed. In some other examples the behavioural characteristic may be a report from the browser API which directly indicates whether the test feature is or is not being displayed.

At step s the client side code records the rate at which the test feature s and the control feature s frames are progressed and uses these frame progression rates to determine whether the advertisement is in view.

The frame progression rate of the test feature can be compared with one or more control values. In this embodiment at least one control value acts as a threshold value and is determined from the frame progression rates of the control feature . Typically direct comparison with the frame progression rates of the control feature is insufficient because of measurement error and also because of fluctuating frame progression rates of the control feature during scrolling i.e. as the viewport is moved relative to the host web page . The process of comparison also typically requires the application of some smoothing model because for example the recorded frame progression rates during state transition i.e. during transitions from being in view to not in view and vice versa are noisy. Given that the control feature is always treated by the browser as not in view and the threshold is dependent on the frame progression rate of the control feature if the frame progression rate of the test feature is when compared the same as or less than the threshold it can be deduced that the test feature is not in view. Alternatively if the frame progression rate of the test feature is when compared greater than the threshold then the test feature can be determined to be in view.

Since the test feature is located within the same region of the web page as the advertisement determining whether the test feature is in view provides an indication of whether the advertisement is in view. As such the client side code acts to analyse whether or not the advertisement is in view by generating the test feature and observing the rate at which its frames progress.

The client side code causes the client device to return the results of this analysis to the research server at step s. The research server stores these results at step s. The research server may thus collate results of this kind each time an advertisement within a web page is in view and not in view at client device . Thus the research server is able to provide information at step s to the advertiser indicating the exposure that was provided to the advertisement by the arrangement with the ad server . Accordingly the advertiser is able to make informed commercial decisions as to the value of advertising in this way.

In the embodiment described above a single test feature is provided in the region in which the advertisement is found. However in other embodiments multiple test features may be used. Examples of arrays of test features that may be used are shown in . Using an array of test features can assist in determining whether the whole of the advertisement is in view or even which particular parts of an advertisement are in view.

In the embodiment shown in a test feature is provided at each of the four corners of the advertisement . In the given example it is known that the advertisement and the browser window are rectangular and have aligned axes it can therefore be determined with confidence that if all the test features are in view then the entire advertisement is in view. In fact in these circumstances such confidence may be achieved by a single pair of test features placed at diagonally opposite corners of the advertisement .

In a repeating array of test features is provided across the full extent of the advertisement . In this embodiment when only a portion of the advertisement is in view this can be established by observing the differential frame progression rates for individual test features .

As described above the threshold value against which the frame progression rate of the test feature is compared to determine whether the test feature is in view can be established using a control feature . However alternative methods can be used to establish the threshold. For example the threshold may take a predetermined value which may have been established from empirical experiments or using heuristic analysis. In an alternative embodiment the threshold value may be chosen in dependence on analysed attributes of the client device such as the browser rendering the web page the hardware specifications of the client device or the bandwidth of the client device s network connection.

In some preferred embodiments the threshold value depends on the previous state of the test feature . That is to say the threshold value may vary according to whether the test feature was previously determined to be in view or not in view. For example the threshold value for judging a test feature to be in view when it was previously not in view may be higher than the threshold value for judging the test feature to be not in view when it was previously in view. This approach can be understood as providing a hysteresis curve as illustrated in .

In the x axis represents an inferred probability that the test feature is in view while the y axis represents the frame progression rate. The test feature is determined to be in view when the probability exceeds 50 . illustrates that two threshold values may be appropriate in some circumstances a lower threshold value and a higher threshold value . The lower threshold value applies when the test feature was previously considered to be in view while the higher threshold value applies when the test feature was previously considered to be not in view. In this way variations in the redraw rate that might arise due to the performance of the client device are inhibited from causing changes in the determined state of the test feature .

In some preferred embodiments the lower threshold value is established using a control feature i.e. the lower threshold value is or is determined in dependence on the frame progression rate of the control feature while the upper threshold value is established empirically.

In the embodiments described above the test features are provided separately from the advertisement itself meaning that the client side code provided by the research server may be independent of the advertisement . In these cases the test features are preferably transparent and relatively small for example each test feature may be a single pixel in order to avoid interfering with the content of the advertisement . This aspect may also limit the number of test features that are desirable in an array since even if they are transparent the test features may interfere with hyperlinks provided in the advertisement . However in other embodiments the test features may be aspects of the advertisement itself which must be redrawn and these can be monitored during the rendering of the web page to determine whether they are in view or not. When the test features are part of the advertisement itself it may be possible for the majority or the entirety of the advertisement to be formed of test features without compromising the functionality of the advertisement .

As described above client side code is used to embed the test feature or test features and monitor the frame progression rates. In alternative embodiments the test feature or test features may be served along with the advertisement and the test feature or test features may monitor and transfer the frame progression rates to the research server . In a further alternative embodiment the test feature or test features may be part of or the whole of the creative of the advertisement itself. In other embodiments the test feature or test features could be inbuilt into the container or player of the advertisement.

In the preferred embodiments the client side code may be an applet and may obtain information regarding the frame progression rates directly or indirectly via an external browser application programming interface API such as the Netscape Plug in Application Programming Interface NPAPI the Pepper Plug in Application Programming Interface PPAPI LiveConnect XPConnect the npruntime API or ActiveX. In other examples an internal browser API as made accessible to the restricted or sandboxed client side code may be used to obtain indications as to whether the feature is in view.

As described above one or more control values with which the behavioural characteristic of the test feature is compared may be established empirically by observing a behavioural characteristic of the control feature . However control values may also be established using heuristic methods. These heuristic methods may be developed using some or all of the client device s User Agent for example the browser operating on the client device the client device s operating system or the client device s geographical location.

In addition to identifying whether the region is in view or not in view the present invention may additionally identify other details regarding the region or parts of the region. In particular in some preferred embodiments a determination can be made as to whether the web page is scrolling. In particular it is noted that a behavioural characteristic such as the frame progression rate or the test and or control feature may vary according to whether the web page is scrolling. This variation can be used to establish whether the web page is scrolling. In one embodiment it can be determined that the region is in view and the page is scrolling when the frame progression rate of the control feature changes from a low state to a high state. This is illustrated in .

By making additional determinations the classifications in view and not in view may be divided into sub classifications such as in view and scrolling in view and not scrolling not in view and out of viewport and not in view and occluded .

Other variations and modifications will be apparent to the skilled person. Such variations and modifications may involve equivalent and other features which are already known and which may be used instead of or in addition to features described herein. Features that are described in the context of separate embodiments may be provided in combination in a single embodiment. Conversely features which are described in the context of a single embodiment may also be provided separately or in any suitable sub combination.

It should be noted that the term comprising does not exclude other elements or steps the term a or an does not exclude a plurality a single feature may fulfill the functions of several features recited in the claims and reference signs in the claims shall not be construed as limiting the scope of the claims. It should also be noted that the Figures are not necessarily to scale emphasis instead generally being placed upon illustrating the principles of the present invention.

