---

title: Network file transfer
abstract: A technology is described for transferring a file from an unsecure network to a secure network. An example method may include identifying an unsecure account profile and determining that a file is to be transmitted from an unsecure network to a secure network using a one-way transfer device. In response, the file may be obtained from a file storage location and an unsecure account profile name for the unsecure account profile may be identified. A request may be made that the one-way transfer device to transmit the file and the unsecure account profile name to the secure network. The file and the unsecure account profile name may then be transmitted to the secure network, where a secure account profile corresponding to the unsecure account profile may be identified in the secure network and the file may be placed in a folder associated with the secure account profile.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09560010&OS=09560010&RS=09560010
owner: Amazon Technologies, Inc.
number: 09560010
owner_city: Seattle
owner_country: US
publication_date: 20150330
---
Unidirectional computer networks may be used by organizations to isolate a secure computer network from separate unsecure computer networks. For example an organization may wish to isolate a secure network so that data cannot be transmitted outside of the secure network e.g. via the Internet or another network yet still provide a system to transfer data from an unsecure network to the secure network. A unidirectional computer network may include a one way transfer device which may be a network hardware appliance that transmits data in one direction using limited data formats.

In one example a one way transfer device may essentially have a low sending side e.g. a low side server connected to a high receiving side e.g. high side server by a one way wire e.g. a circuit diode or fiber optic cable . Data from a low side network e.g. an unsecure network may be transmitted to the one way transfer device and the data may then be transmitted to a high side network e.g. a secure network via the one way wire. A one way transfer device may further include data inspection utilities that for example analyze data for allowable file types and or perform data checking e.g. virus scanning .

A technology is described for a scalable one way data transfer system that utilizes an account profile located on an unsecure network and an account profile located on a secure network to link the transfer of a file from the unsecure network e.g. a low side network to the secure network e.g. a high side network . The terms unsecure network and low side network and the terms secure network and high side network are used interchangeably in this disclosure. In one example configuration files stored in a data storage system located within an unsecure network may be transferred to a data storage system located within a secure network using one or more one way transfer devices. A data storage system may include an data storage service object storage service a key value data store NoSQL JSON file or XML file a relational data store as well as other types of data stores. An unsecure network may be for example a network that may be accessible to a public network such as the Internet whereas a secure network may be isolated from public networks. A file may be a digital file or digital object containing data and may be of any file type or file format. A one way transfer device may be configured to unidirectionally transmit files from a first network to a second network such that files cannot be transmitted in a reverse direction.

In one example a low side file transfer service executing in an unsecure network may be configured to monitor a transfer folder associated with low side account profile for files that have been placed in the transfer folder. The transfer folder may be located in the data storage system on the unsecure network. In the event that the transfer folder contains a file the low side file transfer service may be configured to retrieve the file from the file folder and place the file in a staging storage location accessible to the low side file transfer service.

A low side account profile may be identified that may be associated with a user of the unsecure network and the file and an account profile name may be retrieved from the low side account profile. The account profile name may correspond to an account profile name for a high side account profile. After the file has been transferred to the secure network the account profile name may be used to identify the high side account profile and to associate the file with the high side account profile. The low side file transfer service may be configured to send a transfer request to a one way transfer device whereupon the one way transfer device may initiate a transfer of the file from the staging location to the one way transfer device. The file may then be transmitted to the secure network by the one way transfer device where a high side account profile corresponding to the low side account profile may be identified and the file may be placed in an account folder associated with the high side account profile.

Existing unidirectional computer networks may support basic protocols for transferring data and may not be scalable according to file transfer demand. The present technology extends the use of unidirectional computer networks to computing service environments e.g. cloud networks that may be logically or physically partitioned allowing for data transfers from unsecure to secure cloud network partitions. Servers used to provide a file transfer service for a unidirectional computer network may be located in multiple geographic regions thereby providing fault tolerance in the event that a server in a particular geographic region fails. In addition the present technology allows for scaling of a unidirectional network by scaling the number of servers that execute a file transfer service and the number of one way transfer devices included in the unidirectional network according to file transfer demand.

The unsecure network may include a low side file transfer service and a low side object storage service . The secure network may include a high side file transfer service and a high side object storage service . Corresponding account profiles may be established on the unsecure network and the secure network . For instance an unsecure account profile may be set up on the unsecure network and a corresponding secure account profile may be set up on the secure network . Account profile names and may link the unsecure account profile with the secure account profile such that a file associated with an unsecure account profile transferred from the unsecure network to the secure network may be associated with a secure account profile using the account profile names and . As an illustration an account profile name account1234 used to identify an unsecure account profile may be the same as an account profile name account1234 used to identify a secure account profile . As a result when a file is received at the secure network a secure account profile may be identified for the file using the account profile name account1234 . Illustratively an account profile name used to link an unsecure account profile with a secure account profile may also be something other than plain text such as a hash value a private or public key a randomly generated value shared between the unsecure account profile and the secure account profile or other account identifier.

The low side object storage service located in the unsecure network may be used to store files as objects within object stores e.g. buckets or folders . For example files may be stored within object stores by assigning a file name e.g. a unique file name to a file that includes an identity of an object store followed by the name of the file e.g. object store name filename . In one example configuration a transfer folder e.g. an object store that has been designated as a transfer folder may be created in the object storage service . The transfer folder may then be associated with an unsecure account profile so that users associated with the unsecure account profile may access the transfer folder . Users may place files that are to be transferred to the secure network in the transfer folder via a client device from which the files may be retrieved using a low side file transfer service and provided to the one way transfer device . The low side file transfer service may be configured to monitor the transfer folder for files that have been placed in the transfer folder . When one or more files are detected in the transfer folder the file may be moved to a staging location where the file may be prepared for transfer to the secure network .

In another example configuration a file transfer may be initiated using an API request. For example by way of a user interface a user associated with an unsecure account profile may execute an Application Programming Interface API request that instructs the low side transfer service to transfer a file to the secure network . In executing the API request the user may provide a file location by way of the user interface for the file to be transmitted. For example the file location may be included as a parameter in the API request.

In another example configuration a file transfer may be initiated using a message queue service in computing service environment e.g. a distributed queue messaging service in a centralized cloud environment used to send messages via web service applications as a way to communicate with server computers over a network . For example a message delivered using the message queue service may be received at the low side file transfer service . The receipt of the message may act as a request to transfer a file to the secure network . In one example the message may include a file and information obtained from an unsecure account profile e.g. an account profile name associated with the file. In another example the message may specify a file location in the low side object storage service where the file may be stored and information obtained from an unsecure account profile associated with the file.

In yet another example configuration an object storage service may be configured to send a notification to a low side file transfer service when a file has been placed in a transfer folder where the notification acts as a request to transfer the file to a secure network . For example a push notification may be sent from the object storage service using a push notification service. Notifications received at a low side file transfer service may be placed in a notification queue and the low side file transfer service may retrieve the notifications from the queue and then retrieve a file from a respective transfer folder in preparation for transfer.

Returning to the example illustrated a file copied from an object store to the transfer folder may be detected by the low side file transfer service and the file may be moved from the transfer folder to a staging location where the file may be prepared for transfer to the secure network . In some examples where the size of the file may exceed a certain file size the low side file transfer service may be configured to prepare the file for transfer by dividing the file into a plurality of file parts and optionally compressing the file parts using a file compression technique.

An unsecure account profile associated with the file may be identified and an account profile name may be retrieved from the unsecure account profile . In one example the account profile name may be included in the name of the file . As such when the file is received at a secure network the account profile name may be retrieved from the file name. As an illustration the account profile name account1234 may be appended to the file name documentxyz resulting in the file name documentxyz account1234 . When the file is received at a secure network the account profile name may be extracted from the file name for the file . In another example the account profile name may be included in a manifest file or a separate file transmitted with a file to a secure network . Other methods used to transmit an account profile name with a file to a secure network are within the scope of this disclosure.

A manifest file may be created for the file . In one example the manifest file may include the account profile name and an itemization of the file s and or of file parts that comprise the file in instances where the file has been divided into multiple file parts. Illustratively the manifest file may be created within the staging location that contains the file and a file naming convention may be used to link the manifest file to the file .

After the file has been prepared for transfer to the secure network and a manifest file has been created for the file the low side file transfer service may be configured to execute an API call that instructs the one way transfer device to download the file and the manifest file to the one way transfer device . Namely in response to the API call the one way transfer device may execute instructions that cause the file and the manifest file to be transmitted from the staging location to computer memory included in the one way transfer device .

In one example a single one way transfer device may be assigned to the low side file transfer service . As a result API calls requesting the transfer of files to the secure network may be routed to the specific one way transfer device assigned to the low side file transfer service . In another example one way transfer devices may not be assigned to a low side file transfer service . Instead a low side file transfer service may be configured to identify a one way transfer device that may be available to transmit files to the secure network e.g. via polling voting or load balancing and then may send the one way transfer device an API request.

Having obtained the file and the manifest file the one way transfer device may be configured to transmit the file and the manifest file to the secure network . As described earlier the transmission of data from the unsecure network to the secure network is unidirectional. Therefore no acknowledgement that a network packet was successfully transmitted to the secure network may be given. Therefore a user associated with the transfer of the file may not have any assurances that the file was successfully transmitted to the secure network . However in one example limited transfer diagnostics may be provided to a user on the unsecure network that informs the user of the status of a file transfer. Illustratively a user interface may display a transfer folder showing a graphical representation of files awaiting transfer and an in progress folder showing a graphical representation of the file during preparation of the file for transfer to the secure network and during transmission of the file to the secure network . After transmission of the file to the secure network has completed the user interface may be updated to show a completed folder containing a graphical representation of the file . A failed folder may show a graphical representation of files that failed to be transferred to the secure network .

Alternatively a data store table may be used in providing transfer diagnostics to users of the unsecure network . The data store table may include fields associated with different states of a file transfer. The fields may be updated during the transfer process and then transfer diagnostic applications or users may query the fields to obtain information about the state of a file transfer. For example a data store table can include a transfer field an in progress field a completed field and a failed field. Each of the fields may be updated to indicate the state of a file transfer.

In another example after the file has been transmitted to the secure network a message may be sent to a user associated with the unsecure account profile using a secure push messaging service. The message may indicate that the file has been transferred to the secure network . Likewise when the file is received at the secure network a message indicating that the file has been transferred to the secure network may be sent to a user associated a secure account profile in the secure network using the push messaging service.

The secure network may include a high side file transfer service that may be configured to receive a file transmitted to the secure network by a one way transfer device . Upon receiving a file the file may be decompressed using the compression technique used to compress the file . Also if the file was divided into multiple file parts due to the size of the file the file may be reconstructed from the multiple file parts.

A secure account profile associated with the file may then be identified using the account profile name included in the manifest file received with the file . For example the account profile name may be obtained from the manifest file when the file is received and a secure account profile having an account profile name that matches the account profile name included in the manifest file may be identified. The secure account profile may then be used to identify an account folder located on a high side object storage service that may be associated with the secure account profile . The file may then be moved to the account folder . Thereafter a user associated with the secure account profile may be notified that the file has been placed in the user s account folder . In one example the account folder may be a root folder for an account associated with the secure account profile .

In some example configurations a file transfer system may include a reverse facing one way transfer device as illustrated in . In such a system a confirmation message that conforms to a pre defined message format may be sent from a secure network to an unsecure network using the reverse facing one way transfer device . The message may confirm that a file was successfully transferred to the secure network . Illustratively the confirmation message may include a success confirmation and a time stamp for when the file was received. The message may then be provided to a user on the unsecure network that initiated the transfer of the file . For example a push message may be sent to the user by way of a push messaging service.

Although the examples illustrated above describe transferring files from an unsecure network to a secure network it is understood that the system can be configured to transfer files from a secure network to an unsecure network using a reverse facing one way transfer device as illustrated in

A computing service environment may be capable of delivering computing storage and networking capacity as a software service to a community of end recipients. A computing service environment may offer a private cloud environment. For example a computing service environment may support a multi tenant environment wherein a plurality of customers may operate independently i.e. a public cloud environment . Generally speaking a computing service environment may provide the following models Infrastructure as a Service IaaS Platform as a Service PaaS and or Software as a Service SaaS . Other models may be provided. For the IaaS model a computing service environment may offer computers as physical or virtual machines and other resources. The virtual machines may be run as guests by a hypervisor. The PaaS model may deliver a computing platform that may include an operating system programming language execution environment database and web server.

Services included in the computing service environment the unsecure network may be hosted by a plurality of servers and that host a low side object storage service a data store service storing unsecure account profiles and a low side file transfer service . The various services may be implemented using computing instances that execute the services. Likewise services included in the computing service environment the secure network may be hosted by servers and that host a high side object storage service a data store service storing secure account profiles and a high side file transfer service wherein computing instances may be used to execute the services.

As described earlier a low side object storage service may store files as objects within object stores or buckets. As illustrated the low side object storage service may include a transfer folder . Copying a file to the transfer folder may subsequently result in the transfer of the file from the unsecure network of the first computing service environment to a secure network of the second computing service environment . For example the transfer folder may be monitored by the low side file transfer service and when one or more files are copied to the transfer folder the files may be transferred to the secure network. In addition to copying files to the transfer folder folders containing files and subfolders containing files may be copied to the transfer folder and the folders and subfolders may then be transmitted to the secure network.

To illustrate folders e.g. buckets may be created within an object storage service using a file naming convention that assigns a file identifier e.g. a unique file identification number or code to files. For example a file assigned the file identifier first folder file1.txt may result in creating a directory structure having a folder named first folder that contains a file named file1.txt . Additional files may be added to the folder by assigning the files an identifier e.g. a unique file identification number or code that includes the folder name. For example a file identifier first folder file2.txt would add the file file2.txt to the folder first folder . Subfolders may be created using the same method above. Consequently files and folders may be copied to a transfer folder by prefixing a file identifier with a transfer folder name e.g. prefixing transfer folder to the file identifier first folder file1.txt resulting in transfer folder first folder file1.txt .

A transfer folder may be established for individual unsecure account profiles existing within the unsecure network. Namely each unsecure account profile may be assigned a transfer folder used to transfer files to a secure network. Security roles specifying access permissions may be established for a transfer folder thereby associating the transfer folder with an individual unsecure account profile . For example a security role may include user information for users included in the security role transfer folder access permissions and the like. Users belonging to an unsecure account profile may access the transfer folder associated with the unsecure account profile according to the security role assigned and may copy files that are to be transferred to a secure network to the transfer folder .

In one example files copied to a transfer folder may be encrypted using an encryption key . The encryption key may be owned by an unsecure account profile and a copy of the encryption key may be included in a secure account profile that corresponds with the unsecure account profile . For example a file may be encrypted using the encryption key and transferred to the secure network where the file may be decrypted using a copy of the encryption key retrieved from the secure account profile . In cases where a transfer policy may specify that files copied to a transfer folder be encrypted yet a one way transfer device may be configured to transmit unencrypted files an encrypted file may be decrypted prior to transmitting the file to a secure network using an encryption key obtained from an unsecure account profile . When received at a high side file transfer service the file may again be encrypted using an encryption key obtained from a secure account profile .

In some examples a number of files transferred to a secure network during a particular period of time may be regulated. For example the file transfer service may be configured to check transfer folders for files according to a time interval that may be increased or decreased according to various network parameters. For instance network bandwidth available to transmit files from an unsecure network to a secure network may be limited to a number of one way transfer devices available to transmit the files . In the event that the network bandwidth of the one way transfer devices becomes overloaded the time interval may be increased thereby throttling the number of files that are transferred to the secure network. Alternatively a number of bytes transferred to a secure network may be regulated. For example an unsecure account profile may be limited to a particular number of bytes that can be transferred over a period of time e.g. seconds hours day etc. .

A low side file transfer service executing within the unsecure network may execute on a plurality of servers located within a number of geographical regions as described in relation to . In one example configuration the file transfer service may include a transfer folder module a file preparation module a manifest module and a transfer module . In one example the transfer folder module may be configured to monitor transfer folders e.g. periodically query or check the transfer folders for the existence of files that have been copied to the transfer folders . In the event that one or more files are detected in a transfer folder the files may be moved i.e. transmitted over a network to a file staging storage . In another example the transfer folder module may be configured to monitor transfer folders for files that contain a file reference e.g. a file path to a file that is to be transferred to a secure network. The file reference may then be used to locate and copy the file to the file staging storage . The transfer folder module may be further configured to identify an unsecure account profile associated with the file and retrieve profile information e.g. an account profile name and account details from the unsecure account profile which may be used to prepare and transfer the file to a secure network.

The file preparation module may be configured to prepare a file stored in the file staging storage for transmittal to a secure network. Files may be compressed using a file compression technique e.g. a lossless file compression method such as Lempel Ziv LZ Tar tape archive format or the like prior to transmitting the file to a secure network and the files may be decompressed when received at the secure network. In one example large files may be split into multiple file parts as a result of the file size of the file exceeding a one way transfer device size specification. In cases where the file may have been encrypted prior to storing the file on the file staging storage an encryption key obtained from an unsecure account profile associated with the file may be used to decrypt the file prior to compressing the file and if needed dividing the file into multiple file parts.

The manifest module may be configured to generate a manifest file for a file or for a batch of files included in a batch file transfer . In one example the manifest file may include an account profile name associated with the file and an itemization of the file or files included in a file transfer. In cases where a file has been divided into multiple file parts in preparation to transmit the file to the secure network the manifest file may itemize the files parts that are included in the file . Itemizations included in a manifest file in one example may be hash values generated using the file s as input to a hash function. For example the content of a file may be hashed using a cryptographic hash function e.g. MD5 SHA1 SHA2 or the like and the resulting hash value may be included in the manifest file. Likewise for files that have been divided into multiple file parts each file part may be hashed and the resulting hash value may be included in the manifest file.

Hash values included in a manifest file may be used at a high side file transfer service to validate that a file transferred to a secure network was transmitted without any errors. More specifically upon arriving at the secure network a second hash value may be generated using the file i.e. the file contents received at the secure network and the hash function used to create the hash value i.e. a first hash value included in the manifest file. The second hash value may then be compared to the first hash value included in the manifest file and if the hash values match then the file was transmitted without any errors or other problems i.e. the file transmitted from the unsecure network is identical to or linked to the file received at the secure network .

In one example the manifest module may be further configured to generate a Keyed hash Message Authentication Code HMAC using a manifest file as input to a hash function. The HMAC may then be appended to the manifest file prior to transmitting the manifest file to a secure network. When the manifest file is received at the secure network the HMAC may be used to validate the contents of the manifest file e.g. that the contents of the manifest file have not been altered or tampered with . A cryptographic key used to generate the HMAC may be shared between an unsecure network and a secure network thereby enabling validation of the HMAC at the secure network.

After a file has been prepared for transfer to a secure network and a manifest file has been generated for the file the transfer module may be configured to transfer the file and the manifest file to one way transfer device. In one example the transfer module may be configured to execute an API call made to a one way transfer device requesting that the file and the manifest file be transmitted to a secure network. For example a Representational State Transfer RESTful API call may be executed that may be received by the one way transfer device whereupon the one way transfer device may be configured to establish a Secure File Transfer Protocol SFTP or a Secure Copy Protocol SCP connection between the server containing the file and the manifest file in the file staging storage and the one way transfer device . In one example the file or the file parts if the file has been divided and the manifest file may then be transferred to computer memory contained on the one way transfer device . In another example rather than transferring the file and the manifest file to computer memory included in the one way transfer device the one way transfer device may be configured to transmit the file and the manifest file directly from the file staging storage to a secure network.

In one example configuration a server that may be configured to initiate a transfer of a file from an unsecure network that includes the server to a secure network may be assigned a particular a one way transfer device thereby establishing a one to one correspondence between a server and a one way transfer device . In another example a pool of one way transfer devices may be accessible to servers to transmit files from an unsecure network to a secure network. As file transfer demand fluctuates one way transfer devices may be added or removed from the pool of one way transfer devices .

A file received at a secure network after having been transmitted by a one way transfer device may be provided to a server that hosts a high side file transfer service and stored in file staging storage . The high side file transfer service may include a transfer receiving module a file restoration module a manifest validation module a file placement module and a notification module . The transfer receiving module may be configured to receive a file and a manifest file transmitted to the secure network and identify a secure account profile associated with the file . In one example upon receiving a file and a manifest file the transfer receiving module may be configured to provide the manifest file to the manifest validation module which may be used to validate the manifest module via an HMAC included in the manifest file and validate the successful transmission of the file s to the secure network by verifying an itemization listing in the manifest file as described earlier.

After verifying that a file was successfully transmitted to the secure network the file may be provided to the file restoration module which may be configured to restore the file to a pre transfer state. For example the file may be decompressed using a file compression technique that was used to compress the file prior to being transferred to the secure network. Also if the file was divided into multiple file parts prior to being transferred to the secure network the file may be reconstructed using the file parts.

Having validated the file and restored the file to a pre transfer state an account profile name may be obtained from the manifest file associated with the file i.e. the manifest file that was transmitted to the secure network with the file . The account profile name may be used to identify a secure account profile having an account profile name that matches the account profile name included in the manifest file. Once a secure account profile has been identified for the file the secure account profile may be referenced to obtain account details that identify an account folder e.g. a root folder in a high side object storage service that may be associated with the secure account profile . A file placement module may be configured to move the file from the file staging storage to the account folder . In addition folders and any subfolders that may have been included in a batch transfer of files may be moved from the file staging storage to the account folder . The various processes and or other functionality contained within the system may be executed on one or more processors that are in communication with one or more memory modules included in a server. The system may include a number of servers that are arranged for example in one or more server banks or computer banks or other arrangements. The servers may support a computing service environment using hypervisors virtual machine monitors VMMs and other virtualization software. The term data store may refer to any device or combination of devices capable of storing accessing organizing and or retrieving data which may include any combination and number of data servers relational databases object oriented databases cluster storage systems data storage devices data warehouses flat files and data storage configuration in any centralized distributed or clustered environment. The storage system components of the data store may include storage systems such as a SAN Storage Area Network cloud storage network volatile or non volatile RAM optical media or hard drive type media. The data store may be representative of a plurality of data stores as can be appreciated.

The servers and one way transfer devices illustrated in may be in communication by way of a network that may include any useful computing network including an intranet the Internet a local area network a wide area network a wireless data network or any other such network or combination thereof. Components utilized for such a system may depend at least in part upon the type of network and or environment selected. Communication over the network may be enabled by wired or wireless connections and combinations thereof.

Files copied to a transfer folder may be transmitted to a high side transfer service located in a secure network via a one way transfer device . After receiving a file at a high side transfer service the file may be moved to an account folder associated with a secure account as described earlier.

In one example low side transfer services may be configured to monitor transfer folders such that a many to many relationship is established and multiple low side transfer services monitor multiple transfer folders. In the event that a low side transfer service determines that a transfer folder contains a file the other low side transfer services are put on notice that the low side transfer service is handling the transfer of the file.

In the event that part of the system should fail e.g. a server computer located in a particular geographic region goes down other portions of the system that are functioning may pick up a workload for that part of the system that failed. As an illustration should a first server computer located in a first geographic region fail where the first server computer executes a low side transfer service that monitors transfer folders for files a second server computer located in a second geographic region may assume the first server computer s workload by monitoring the transfer folders for files.

Moving now to a system flow diagram illustrates an example method for transferring files from a low side network e.g. an unsecure network to a high side network e.g. secure network using a one way transfer device. As illustrated a low side transfer service may be configured to monitor a low side file folder for files that may have been copied to the low side file folder . The low side file folder may be a directory in a hierarchical file system in which users associated with a low side unsecure account profile may place files that the users want to be transferred to a high side file folder . The low side transfer service may be configured to periodically query the low side file folder to determine whether the low side file folder contains one or more files.

Alternatively a database table having a file transfer flag field and a file location field may be used to initiate a transfer of one or more files. The low side transfer service may periodically query the table to determine whether the file transfer flag has been set and retrieve one or more files from a storage location specified in the file location field as a result of the file transfer flag being set.

In the case that the low side file folder contains a file the file may be transferred to a staging location where as in block the file may be prepared for transmittal to the high side network. A low side account profile may be identified for the file for example by identifying a low side account profile associated with the low side file folder and associating the low side account profile with the file. In one example the file may be prepared for transmittal to the high side network by compressing the file using a data compression technique. In another example large files that may be larger than an acceptable file size as specified by a one way transfer device may be split into a plurality of smaller file parts.

As in block a manifest file may be generated for files that are to be transmitted to the high side network. The manifest file may contain an itemization of files and or file parts that are to be transmitted to the high side network as well as an account profile name that may be obtained from the low side account profile associated with the file. As described earlier hash values generated by hashing the content of a file or file part may be included in the manifest file and may be used to validate that the file or the file part were received at the high side network without error. In addition an HMAC may be generated using the manifest file and the HMAC may be appended to the manifest file and used to validate the contents of the manifest file when received at the high side network.

Having prepared the file for transmittal to the high side network the low side transfer service may be configured to send a request to a one way transfer device requesting that the one way transfer device transmit the file and the manifest file to the high side network. In one example in response to the request the one way transfer device may be configured to transfer the file and the manifest file from the staging location to memory of the one way transfer device whereupon the one way transfer device may cause the file and the manifest file to be transmitted to the high side network where the file and the manifest file may be received at a high side transfer service . In another example in response to the request the one way transfer device may be configured to transmit the file and the manifest file directly from the staging location to the high side network.

Upon receiving the file and the manifest file at the high side transfer service as in block transmission of the file from the low side network to the high side network may be validated. For example the manifest file may be validated using the HMAC and the itemization of files in the manifest file may be compared with the file s and or file parts received at the high side network e.g. using the hash values included in the manifest file .

As in block high side account profile information may be obtained for the file using the account profile name included in the manifest file. The high side account profile information may specify a high side file folder for the high side account. The file may then be transferred to the high side file folder for the high side account thereby making the file accessible to users of the high side account.

Illustratively an unsecure network user may set up an unsecure account profile by providing user information and an account profile name that may be used to link the unsecure account profile with a secure account profile . A user security role may be assigned to the unsecure account profile for example by a network administrator. Also a transfer folder located in the unsecure network may be created for the unsecure account profile and the user security role may be assigned to the transfer folder thereby associating the transfer folder with the unsecure account profile and providing access to the transfer folder to the unsecure network user .

Similarly a secure network user may set up a secure account profile that corresponds with the unsecure account profile by providing an account profile name that may be identical to or linked to e.g. associated using a set and subset relationship where the secure account name is a subset of the unsecure account name or vice versa the account profile name thereby linking the unsecure account profile to the secure account profile . A secure network user may provide user information and a user security role may be assigned to the secure account profile . A transfer folder located in the secure network may be created for the secure account profile and the user security role may be assigned to the transfer folder providing access to the transfer folder to the secure network user .

In one example after an account profile e.g. an unsecure account profile and a secure account profile has been set up by a user the account profile may be approved by an account administrator. User groups e.g. POSIX groups may be created that include an account profile and allow access to a transfer folder by members of a user group. Also account tracking may be enabled that tracks the actions of users belonging to a profile account. The account profile configuration described above results in isolating account profile information to the network where the account profile resides. More specifically information included in an unsecure account profile and information included in a corresponding secure account profile may not be shared between the unsecure network and the secure network .

As in block the file may be obtained from the file storage location. As in block a request may be sent to the one way transfer device that the one way transfer device transmit the file and the unsecure account profile name to the secure network. The one way transfer device may then obtain the file and the unsecure account profile name from the storage location and transmit the file to the secure network. When received at the secure network a secure account profile corresponding to the unsecure account profile may be identified in the secure network and the file may be placed in a folder associated with the secure account profile.

The memory device may contain modules that are executable by the processor s and data for the modules . In one example the memory device may contain a transfer folder module file preparation module manifest module transfer module transfer receiving module file restoration module manifest validation module as well as other modules. The modules may execute the functions described earlier. A data store may also be located in the memory device for storing data related to the modules and other applications along with an operating system that is executable by the processor s .

Other applications may also be stored in the memory device and may be executable by the processor s . Components or modules discussed in this description that may be implemented in the form of software using high programming level languages that are compiled interpreted or executed using a hybrid of the methods.

The computing device may also have access to I O input output devices that are usable by the computing devices. Networking devices and similar communication devices may be included in the computing device. The networking devices may be wired or wireless networking devices that connect to the internet a LAN WAN or other computing network.

The components or modules that are shown as being stored in the memory device may be executed by the processor s . The term executable may mean a program file that is in a form that may be executed by a processor . For example a program in a higher level language may be compiled into machine code in a format that may be loaded into a random access portion of the memory device and executed by the processor or source code may be loaded by another executable program and interpreted to generate instructions in a random access portion of the memory to be executed by a processor. The executable program may be stored in any portion or component of the memory device . For example the memory device may be random access memory RAM read only memory ROM flash memory a solid state drive memory card a hard drive optical disk floppy disk magnetic tape or any other memory components.

The processor may represent multiple processors and the memory may represent multiple memory units that operate in parallel to the processing circuits. This may provide parallel processing channels for the processes and data in the system. The local interface may be used as a network to facilitate communication between any of the multiple processors and multiple memories. The local interface may use additional systems designed for coordinating communication such as load balancing bulk data transfer and similar systems.

While the flowcharts presented for this technology may imply a specific order of execution the order of execution may differ from what is illustrated. For example the order of two more blocks may be rearranged relative to the order shown. Further two or more blocks shown in succession may be executed in parallel or with partial parallelization. In some configurations one or more blocks shown in the flow chart may be omitted or skipped. Any number of counters state variables warning semaphores or messages might be added to the logical flow for purposes of enhanced utility accounting performance measurement troubleshooting or for similar reasons.

Some of the functional units described in this specification have been labeled as modules in order to more particularly emphasize their implementation independence. For example a module may be implemented as a hardware circuit comprising custom VLSI circuits or gate arrays off the shelf semiconductors such as logic chips transistors or other discrete components. A module may also be implemented in programmable hardware devices such as field programmable gate arrays programmable array logic programmable logic devices or the like.

Modules may also be implemented in software for execution by various types of processors. An identified module of executable code may for instance comprise one or more blocks of computer instructions which may be organized as an object procedure or function. Nevertheless the executables of an identified module need not be physically located together but may comprise disparate instructions stored in different locations which comprise the module and achieve the stated purpose for the module when joined logically together.

Indeed a module of executable code may be a single instruction or many instructions and may even be distributed over several different code segments among different programs and across several memory devices. Similarly operational data may be identified and illustrated herein within modules and may be embodied in any suitable form and organized within any suitable type of data structure. The operational data may be collected as a single data set or may be distributed over different locations including over different storage devices. The modules may be passive or active including agents operable to perform desired functions.

The technology described here may also be stored on a computer readable storage medium that includes volatile and non volatile removable and non removable media implemented with any technology for the storage of information such as computer readable instructions data structures program modules or other data. Computer readable storage media include but is not limited to non transitory media such as RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tapes magnetic disk storage or other magnetic storage devices or any other computer storage medium which may be used to store the desired information and described technology.

The devices described herein may also contain communication connections or networking apparatus and networking connections that allow the devices to communicate with other devices. Communication connections are an example of communication media. Communication media typically embodies computer readable instructions data structures program modules and other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. A modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency infrared and other wireless media. The term computer readable media as used herein includes communication media.

Reference was made to the examples illustrated in the drawings and specific language was used herein to describe the same. It will nevertheless be understood that no limitation of the scope of the technology is thereby intended. Alterations and further modifications of the features illustrated herein and additional applications of the examples as illustrated herein are to be considered within the scope of the description.

Furthermore the described features structures or characteristics may be combined in any suitable manner in one or more examples. In the preceding description numerous specific details were provided such as examples of various configurations to provide a thorough understanding of examples of the described technology. It will be recognized however that the technology may be practiced without one or more of the specific details or with other methods components devices etc. In other instances well known structures or operations are not shown or described in detail to avoid obscuring aspects of the technology.

Although the subject matter has been described in language specific to structural features and or operations it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features and operations described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims. Numerous modifications and alternative arrangements may be devised without departing from the spirit and scope of the described technology.

