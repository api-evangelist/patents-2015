---

title: Method and system for forensic data tracking
abstract: The present invention relates to a method and system for tracking the movement of data elements as they are shared and moved between authorized and unauthorized devices and among authorized and unauthorized users.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09565200&OS=09565200&RS=09565200
owner: Quick Vault, Inc.
number: 09565200
owner_city: Cumming
owner_country: US
publication_date: 20150914
---
The present application claims priority to U.S. Provisional Patent Application No. 62 049 514 titled Method and System for Forensic Data Element Tracking filed on Sep. 12 2014 U.S. Provisional Patent Application No. 62 082 258 titled Method and System for Forensic Data Element Tracking filed on Nov. 20 2014 and U.S. Provisional Patent Application No. 62 186 530 titled Method and System for Forensic Data Element Tracking filed on Jun. 30 2015. The entire content of the foregoing applications are hereby incorporated herein by reference.

A portion of the disclosure of this patent document may contain material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or patent disclosure as it appears in the U.S. Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The present invention relates to a method and system for protecting data and tracking the movement of data as it is shared and moved between authorized and unauthorized devices and among authorized and unauthorized users using a Forensic Computing Platform.

Enterprises are required to protect data according to regulatory requirements such as HIPAA PCI and Safe Harbor laws. For example PCI requires cardholder data to be encrypted at all times HIPAA requires data breaches to be reported and Safe Harbor prohibits the transmission of personally identifiable data PII without the approval of the data s owner. Furthermore HIPAA Omnibus requires protected health information PHI data to be protected throughout the entire chain of trust in the healthcare industry. Despite the existence of these regulations enterprises struggle to comply with the laws due to the lack of a comprehensive method and system for data protection.

Healthcare organizations are now realizing that securing sensitive patient information is critical to the broader mission of providing comprehensive patient safety. Existing security measures which involve network infrastructure firewalls VPNs encryption or which limit access to systems and applications passwords biometrics two factor authentication often fail to prevent breaches of sensitive data. The present invention augments these existing measures by focusing on the actual data the rising need to understand the context and origin of it where it has been and who has seen it. These growing demands also referred to as Data Provenance are cornerstones of OCR s Office of Civil Rights enforcement of HIPAA Privacy and Security Rules as well as ONC s The Office of the National Coordinator for Health Information Technology Meaningful Use and Interoperability standards.

The HIPAA Omnibus 2013 Final Rule requires covered entities such as hospitals and insurance companies to now be operationally and financially responsible for tracking and protecting all patient information throughout their service provider networks including partners and affiliates where up to 70 of all breaches occur.

In recent years there have been many innovations designed to protect data at rest and while in transmission. Encryption for example is commonly used for this purpose. Encryption may be useful to protect data at rest including individual files entire data bases specific data base fields and even specific fields within documents. Encryption is also commonly used to protect data in transmission. Common methods for protecting data in transmission include Secure Socket Layer SSL encryption which creates an encrypted tunnel between the sender and receiver of data. Another method of protecting data in transmission is through the use of a data transmission encryption key. This data transmission encryption key is used to encrypt the data before transmission. Taken together the above uses of encryption can be effective to protect sensitive data when the data is stored on an authorized system or when the data is transferred between two or more authorized systems.

However data can occasionally leak outside of the boundaries of the authorized e.g. protected environment. For example employees may copy an unencrypted version of a sensitive file onto a USB flash drive. Or for example an unencrypted version of a file may be attached to an email and sent to an unauthorized user or device. Or for example sensitive data can be stored on a public cloud storage system such as the service provided by Box and Dropbox and later downloaded to an authorized user onto an unsecure computer or endpoint. There may be no record of this act of downloading the document to an unsecure computer.

In order to address the above and other common causes of data leakage some companies have implemented tools to prevent the data leakage. These Data Loss Prevention DLP tools can be effective in preventing the leakage of much data much of the time. However DLP tools cannot prevent the leakage of all sensitive data all of the time. Therefore there are occasions when sensitive data escapes from the most sophisticated environments resulting in the data being stored within an unprotected environment. At this point it is very problematic to either control or track the movement or use of the data.

Therefore a need exists for a method and system that addresses these shortcomings in the prior art by tracking the movement of data files and data elements as they are shared and moved between authorized and unauthorized devices within various cloud storage systems and among authorized and unauthorized users based on the classification of the data.

The present invention answers these needs by providing a method and system for tracking files and data elements as they are shared and moved between authorized and unauthorized devices between and among cloud storage systems and among authorized and unauthorized users. Capabilities described herein provide complete visibility auditability and management of sensitive information even when it moves outside the direct possession of the responsible organization and into business associate domains and across and beyond their respective chains of trust.

According to the present invention data files are scanned and automatically classified at the time of detection according to a data classification policy. The data classification is determined based on matches of one or more of the pre defined text strings comprised within the file. For example an ICD 9 CM code consists of three to five digits wherein the first digit is an alpha E or V or numeric digits two through five are numeric and a decimal appears after the third digit. Therefore an organization wishing to identify files that potentially contain PHI data can scan files for the existence of text strings that match the pattern of an ICD9 code or other similar codes. A positive hit would reflect the fact that a match was found resulting in a classification of the file as containing PHI. After the data classification is completed the file is tagged with the classification and a meta log is sent to a cloud control server with details about the file such as file name data classification date created or modified user name and endpoint ID. End point ID may include unique information that describes the computing environment used to create or modify the file such as MAC address IP address unique serial number unique software license key or another unique identifier related to the end point.

In another embodiment during the scanning process or prior to sharing files outside of the organization files are encoded so that they can be tracked. Numerous encoding methods are disclosed herein.

In other embodiments the system can be configured to perform one or more of the functions of detect catalog secure deliver control and monitor the movement of sensitive information. A passive configuration of the system will enable selected or limited functions to be operable while an active configuration of the system will enable the full spectrum of functions to be operable.

In another exemplary embodiment where the system is configured in active mode an endpoint is scanned and as a result of the scan a file or files are judged to be inappropriate for the endpoint. Upon determining that the file or files are inappropriate for the endpoint the file or files can be moved to and protected on the remote cloud control server and subsequently deleted from the endpoint. The user can use a portal of the cloud control server to access the protected files in accordance with the user s entitlements. If supported by the entitlements of the user the protected file or files can be shared with a second user. Prior to sharing the files with the second user the file or files can be encoded so that they can be tracked. If the second user subsequently shares the encoded files with one or a plurality of other users who are unauthorized to receive the file or files the forensic computing environment is operable to track the movement of the encoded data as it is opened on the one or a plurality of end points which may be registered or unregistered.

Embodiments of the present invention are described below by way of illustration. Other approaches to implementing the present invention and variations of the described embodiments may be constructed by a skilled practitioner and are considered within the scope of the present invention.

The Registered Internal User is an employee or full time contractor of the enterprise that owns the data and establishes the data classification policy. This Registered Internal User has specific entitlements for using and sharing data according to the data classification policy. Each Registered Internal User has a corresponding row in the User Database Table .

The Authorized System Administrator is a super user of the system. The Authorized System Administrator has the credentials to modify system settings adjust the data classification policy receive alerts and receive forensic reports .

The Registered External User is not an employee or full time contractor of the enterprise. However like the Registered Internal User the Registered External User has specific entitlements for using and sharing data according to the data classification policy. Each Registered External User has a corresponding row in the User Database Table .

The Un Registered External User is not an employee or full time contractor of the enterprise. Furthermore unlike the Registered External User the Un Registered External User has no specific entitlements for using and sharing data according to the data classification policy. Un Registered Internal Users have no corresponding row in the User Database Table .

The Registered Internal Endpoint is characterized by and comprised of a software agent a local database and at least one encryption key. End points may include but are not limited to PCs MACs mobile phones smart phones tablet computing devices servers computing appliances medical devices cameras programmed logic controllers and any other end point with the minimum memory persistent non volatile storage CPU and communication capabilities required by the deployed software agents. End points also include any locally attached peripherals or peripherals that are accessible through a network or through wireless methods. Such peripherals may include but are not limited to DropBox folders attached storage devices shared drives printers scanners and other attached or accessible peripherals. The at least one encryption key can be a unique key derived specifically for each Registered Internal Endpoint. The unique key may be derived using a Master Encryption Key MEK and two or more unique key components derived from the Registered Internal Endpoint such as the Mac address serial number International Mobile Station Equipment Identity IMEI other unique hardware identifier software license key or other unique information. At the time an internal endpoint is registered a row is added to the Cloud Control Server Endpoint Table . Unique information such as the endpoint name serial number MAC address IP address and other unique information is captured and stored in the Cloud Control Server Endpoint Table . A data transport key DTK can be used to safely transmit registration information. The software agent comprised on the Registered Internal Endpoint is operable to scan every new and modified file on the deployed endpoint to determine the proper data classification of the file according to the data classification policy stored in the Cloud Control Server Data Classification Policy Database . This software agent may be a C or other type program supported by the operating system and memory of the deployed endpoint. After each file is scanned a meta data record is sent to the Cloud Control Server with details about the scanned file including for example a file name data classification data element tags access rights date created or modified user name and unique endpoint ID. Data element tags are indictors that specific fields or types of data are included within the file. Examples can include a person s name a specific phone number a number that represent a credit card number a patient record id a diagnosis code and other data elements which the enterprise considers private classified or otherwise regulated. The meta data record for each scanned file is stored within the Cloud Control Server Meta Database . The local database stored on the Registered Internal Endpoint is necessary for the software agent to perform its function. As such the local database stores persistent information that can be accessed even after the software or computer is restarted. For example the local database can include a history of each local file stored on the endpoint the date and time of the last scan and if the file has been transmitted to the Encrypted Archive Storage . The local encryption keys are used to encrypt the archives before they are sent to the Encrypted Archive Storage . Local encryption keys can also be used to encrypt meta data records before transmission.

The Registered External Endpoint does not require a software agent a local database or encryption key. However the external endpoint must be registered before the first file is transferred. The Registered Internal Endpoint can be a PC MAC server smart phone tablet medical device program logic controller PLC camera watch or other wearable device. End points also include any locally attached peripherals or peripherals that are accessible through a network or through wireless methods. Such peripherals may include but are not limited to DropBox folders attached storage devices shared drives printers scanners and other attached or accessible peripherals. At the time an external endpoint is registered a row is added to the Cloud Control Server Endpoint Table . Unique information such as the endpoint name serial number MAC address IP address and other unique information is captured and stored in the Cloud Control Server Endpoint Table .

The Un Registered External Endpoint does not require a software agent a local database or encryption key. The un registered external endpoint is not officially known by the system however an un registered end point can be discovered through one or more forensic data tracking mechanisms. The Un Registered External Endpoint can be a PC MAC server smart phone tablet medical device program logic controller PLC camera watch or other wearable device. End points also include any locally attached peripherals or peripherals that are accessible through a network or through wireless methods. Such peripherals may include but are not limited to DropBox folders attached storage devices shared drives printers scanners and other attached or accessible peripherals. At the time an un registered external endpoint is discovered a row is added to the Cloud Control Server Endpoint Table . Unique information such as the endpoint name serial number MAC address and other unique information is captured and stored in the Cloud Control Server Endpoint Table . Although a record can be created representing this endpoint it is considered un registered because there is no associated registered user.

The Cloud Control Server of the Forensic Computing Platform consists of a series of components including servers firewalls load balancers and storage devices. The storage devices may be dedicated servers with dedicated storage disks or the storage devices may be an attached storage area network SAN . The servers may be dedicated physical servers such as an HP ProLiant ML350p Gen8 Xeon E5 2670V2 2.5 GHz 32 GB or the servers may be virtualized servers. The server operating system may be one of a Unix Lenox Windows or another operating system. The database may be one of MySQL Oracle Database2 MS SQL server or another appropriate database to comprise the tables and transactions of the Forensic Computing Platform. A web services layer is typically used to enable the graphical user interface or presentation layer. The presentation layer may be created with one of pHp html .net or other appropriate languages and approaches. The web services layer also is operable to handle data sent from end points using application programming interfaces APIs . The Cloud Control Server is comprised of several software components operable for specific functions. These include Business Logic Component Analytics Component Alerts Component and Reporting Component .

The Business Logic Component of the Forensic Computing Platform is operable to store and execute all of the programmed instructions associated with the system. Programmed instructions may be coded in one of numerous languages such as pHp .Net Java or other similar languages. The business logic component may also include logic for processing requests received from the web services layer.

The Analytics Component of the Forensic Computing Platform is operable to read meta data logs and produce summarized analysis of data movement. Using available meta data logs the Analytics Component can answer the following types of questions What confidential data is currently stored on Authorized Internal Endpoints Is any Private data currently stored on Box or DropBox Is any PCI classified data stored on an Authorized External Endpoint Has any PII data related to end users in the United Kingdom UK been sent to an endpoint outside of the UK Is any data which is classified as Private or Confidential detected from an IP addresses registered in Russia What is the velocity of the movement of Private or Confidential data onto new IP addresses Have any Authorized Internal Users recorded a spike in data transmission or storage of data of any kind compared to their prior behavior or the average user behavior What activities are considered to be high risk What activities are considered to be suspicious What activities appear to violate company policy The previous list of questions are exemplary of the types of questions that can be answered by the Analytics Component and not intended to be a complete or exhaustive list. The Analytics Component is further operable to categorize data movement as one of low risk suspicious high risk and a policy violation as further described in .

The Alerts Component of the Forensic Computing Platform is operable to send alerts to the Authorized System Administrator and other recipients based on the results of the Analytics Component .

The Reporting Component of the Forensic Computing Platform is operable to produce human readable output that reflects the results of processing. Reports may be standard or customized reports in detailed or summary format. Reports may also be reflected in online output or dashboards.

The Users Database Table of the Forensic Computing Platform contains a record for each registered internal and external user. Information such as the user name phone number email address company department project title position and other similar information may be stored for each registered user.

The Meta Database Table of the Forensic Computing Platform contains the meta logs that are received from end points and stored by the system. A meta log is created following each scan of a new or modified file and may include specific information about the file such as file name endpoint ID date and time data classification and meta data tags. Meta logs are also created whenever files are uploaded to the Archive Repository or downloaded to registered internal and external endpoints. Meta logs are also created by various forensic mechanisms which allow additional information to be recorded about the movement of files.

The Policy Table of the Forensic Computing Platform is comprised of the organization s data classification policy. The table includes both standard and customized policies. Based on the industry a standard policy may be selected by the Authorized System Administrator . For example if the company is involved in the health care industry a standard HIPAA data classification policy may be selected. However if the company is primarily involved in payment processing a PCI data classification policy may be selected. Policy components are also available for various foreign jurisdictions such as the European Union which may have its own data protection policy. The Policy table may also include custom fields that are unique to a specific enterprise such as the CEO s name a board member s phone number a chemical formula internal code names or other sensitive confidential private or regulated information.

The Settings Table of the Forensic Computing Platform includes options selected by the Authorized System Administrator to control key aspects of processing. For example alert thresholds can be configured in the Settings Table. The Settings Table can also determine the default value for how many end points each user can register and the default values which determine if a user is authorized to download or share data. These default values may be overridden for any specific user base on the user s specific entitlements.

The Endpoint Table of the Forensic Computing Platform includes a row for each endpoint whether registered or not. Registered Internal end points are recorded when the software agent is installed and configured the first time. Registered External end points are recorded the first time a shared file is downloaded to the end point. Unregistered endpoints are those endpoints that become known based on various forensic mechanisms and include a minimum amount of information such as IP address.

The Encrypted Archive Cloud Storage of the Forensic Computing Platform contains the encrypted files that have previously been scanned and uploaded to the Cloud Control Server by the agent software on the Registered Internal Endpoint . Prior to upload files can be classified by the deployed agent software and the details of the classification of the file can be logged as meta data logs on the Cloud Control Server. Prior to upload a files can also be encoded with forensic information that will allow the file to be traced in the future. The details of the encoding are separately written to the Cloud Control Server as meta data logs. The archives are encrypted before being uploaded to the Encrypted Archive Cloud Storage using one of the available local encryption keys. The Encrypted Archive Cloud Storage may be a structured or unstructured data storage device. It can be located in the same physical infrastructure that houses the Cloud Control Server or separate infrastructure. For example a first enterprise may prefer to maintain a private archive server while another enterprise may prefer a public archive server. It is thus an advantage of the deployment architecture to support both public and private cloud storage. The organization of the archive storage may be simple folder based storage as would be satisfactory for common file storage such as SFTP or a proprietary storage device such as Microsoft Azure storage or Google Drive for example may be used.

The Portal of the Forensic Computing Platform is an access method that allows registered internal and external users to interact with files that have been uploaded to the Encrypted Archive Cloud Storage . Registered Internal Users may access search download and share stored archives based on their entitlements. Registered External Users may only download stored archives based on their entitlements relative to the classification of the data. For example as an internal user a computer programmer may only be entitled to download data created or shared by other computer programmers. By contrast a sales executive may be entitled to share a specific classification of data with external recipients.

Reports of the Forensic Computing Platform represent the results of system operations and may include a list of all scanned records stored archives archives that have been shared or downloaded etc. Reports may also include exceptions such as the conditions that would trigger an alert. For example if a scanned end point was found to contain a significant number of new files from the previous scan this could represent a spike in activity related the historical behavior of this end point. Or if the same end point was found to contain a significantly lower number of files from the previous scan this could represent an unusual activity compared with the average user. Or if a number of end points are scanned and each found to contain the same new files this might be a pattern of activity that falls outside of normal history.

The Unencrypted Archive represents an archive that has been downloaded by an Authorized External User decrypted and stored onto an Authorized External Endpoint. The Unencrypted Archive may include one of various forensic encoded data elements that will enable the ability to track the movement of this archive. One exemplary forensic encoding method is a transparent GIF for example. The transparent GIF can be added to the archive at the time it is scanned or uploaded to the Encrypted Archive Cloud Storage . Or the transparent GIF may be inserted into the archive at the time it is downloaded to the Registered External Endpoint. The transparent GIF includes a URL and other information that become activated when the file is opened. Other encoding methods are also described herein.

The Unencrypted Archive represents an archive that has been transmitted to an Un Authorized External User and is comprised on an Un Authorized External Endpoint. The Unencrypted Archive may have been encoded by embodiments of the Forensic Computing Platform with one of various forensic encoding mechanisms that will enable the ability to track the movement of this archive when it is opened or forwarded again to a plurality of authorized and unauthorized endpoints.

Encoding may be an invisible graphic element such as a transparent Gif Tgif may be inserted into the file. The Tgif can include an embedded URL which includes the location of the cloud control server and one or more parameters including a unique token that explicitly identifies the file. Each time the file is subsequently opened on the same or a different end point the Tgif attempts to connect to the cloud control server by using the embedded URL. Upon each successful connection to the cloud control server the cloud control server logs the date time file name IP address of the end point and other designated parameters sent in the http or https header or decoded from the token. The Tgif may be encrypted to prevent a user from viewing its contents. The cloud control server can be comprised of a reporting component an analytic component an alert component and a business logic layer. These components can be configured to track the movement of data elements and determine the velocity and path as files are subsequently transferred and transferred again. The alerts component can be configured to send a notification to the authorized system administrator based on policy and settings.

Another exemplary encoding method would during the scanning process or prior to downloading a file from the cloud server insert an executable component into files of types that support scripting languages such as Microsoft Office files that when opened report back to the cloud control server with as much identifying information as can be garnered from the local system and a unique token that explicitly identifies the file. Upon successful connection the server would log this information. Further if the information identifies a violation of company policy the component may be configured to deny access to the file by encrypting it deleting the contents or removing the file from the operating system registry. As described with the Tgif process above analytics alerts and reporting can be utilized to track and notify based on policy and settings.

Another exemplary encoding method implemented during the scanning process or prior to downloading a file from the cloud server would be to encrypt the file. An agent or component would be required on the receiving end point to decrypt and open the file. Upon opening the file the downloaded component would report back to the cloud control server with as much identifying information as can be garnered from the local system and a unique key to explicitly identify the file. Depending on company policies the cloud control server after logging the action would send back the key that the component would then use to decrypt the file. Upon saving the file the downloaded component would re encrypt the contents. As with the processes above analytics alerts and reports can be utilized to track and notify based on policy and settings.

Another exemplary encoding method allows a file to be tracked after it is printed. Prior to download one or more printable and scanable codes or watermarks are included on one or more pages of the document. These printable and scanable codes may be visible codes such as Bar codes or QR codes. Or the codes may be of a custom format which may either be visible to the human eye or invisible to the human eye. The codes and combinations of codes that are added to the document are stored in a database of the Cloud Control Server of the Forensic Computing Platform and associated with the file that can be printed. If a file is printed and later shared in an unauthorized manner because each document is encoded with unique codes and combinations of codes it will be traceable back to the point of time that the file was downloaded or shared from the Forensic Computing Platform. To the extent that a file is printed and then later rescanned into electronic form the deployed agent of the Forensic Computing Platform can detect the codes and combination of codes within the document and report the detection of these codes in the meta logs.

Referring now to the labeled lines in . Line . shows the connection between the Registered Internal Endpoint and the Cloud Control Server . This connection is used to send the meta data from the Registered Internal Endpoint to the Cloud Control Server . The connection can be established using an internet protocol such as HTTP or HTTPS. The data can be formatted in one of several formats such as HTTP PUT or POST XML or using a Restful API such as JSON. Or a web service based on SOAP or other protocol can be used to facilitate data transmission. Data sent over this connection may be encrypted using a data transport key.

Line . facilitates the transmission of the encrypted archives from the Registered Internal Endpoint to the Encrypted Archive Cloud Storage . Like Line . the connection can be established using an internet protocol such as HTTP or HTTPS. The data can be formatted in one of several formats such as HTTP PUT or POST XML or using a Restful API such as Json. Or a web service based on SOAP or other protocol can be used to facilitate data transmission. However some implementations may use the FTP or SFTP protocols for this purpose. Data sent over this connection may be encrypted using a data transport key.

Line . illustrates a message that is sent from the Cloud Control Server to a Registered External Endpoint based on a data sharing request initiated by a Registered Internal User. The message can be one of an email message sms message or a push message and can include one or more of maximum downloads and expiration dates associated with each shared file or files. The push message can be used if the Registered External Endpoint is a smart phone or tablet or similar end point operable to receive push notifications. The message contains a link to the encrypted archive s being sent to the Registered External User . When the link is clicked the archive is automatically downloaded shown using Line . .

Line . shows a communication message between a Registered External Endpoint and an Un registered External Endpoint . The implication here is that an unencrypted artifact is being sent by a Registered External User to an Un registered External User constituting a leak of the information from the end point associated with the Registered External User to that of the Unregistered External User. Depending on the classification of the data elements included within the document this transfer could represent a violation of law and or company policy.

Line . shows the transmission of forensic information gathered from the Un registered External Endpoint and sent to the Cloud Control Server . Information sent on this line can be the file name IP address MAC address serial number and other information as available and depending on the forensic technique used. For example as discussed above a hidden file may be embedded into a file which is leaked from an internal or external user. When this file is opened the hidden file is operable to transmit information about the file and the endpoint back to the Cloud Control Server .

Line . shows the distribution of Reports to the Authorized System Administrator and other authorized recipients. This distribution can be in the form of an email with attached reports or it can be an online presentation of the reporting data. Line . shows the communication comprised of a distribution of Alerts to the Authorized System Administrator . This communication can be an email sms message push message phone call or other appropriate message suitable to deliver the Alert. Line . shows the connection between the Registered Internal User and the online Portal . The Registered External User may also use the Portal although this interaction is not shown to simplify the figure.

Now referring to . illustrates the product framework . of the Forensic Computing Platform described in . The six key areas of functionality are detect .. catalog .. secure .. deliver .. control .. and monitor .. . In accordance with this framework the Forensic Computing Platform is operable to detect sensitive data on end points and servers catalog and classify that data according to the data classification policy secure the data according to policy deliver data to authorized users and end points control data movement and monitor of sensitive data. The Forensic Computing Platform may be configured to perform one or more of the functions of detect catalog secure deliver control and monitor the movement of sensitive information. A passive configuration of the system will enable selected or limited functions to be operable while an active configuration of the system will enable the full spectrum of functions to be operable. In order to accomplish this capability the Forensic Computing Platform is further comprised of twelve functions Scout Spy Prospectus Judge Shield Sentinel Enclave Guardian Chaperone Sniper Prophet and Trumpet that are further described in and can be implemented as software modules running on one or more servers and a plurality of endpoints.

Continuing now with a description of which is a functional description of the Forensic Computing Platform. Each of the twelve functions are further described as regards to their primary responsibility within the Forensic Computing Platform. The functional model is comprised of a Registered End Point . a Cloud Control Server . and APIs . . The registered endpoint may be any computing endpoint with the capability to store and execute the deployed agents of the Forensic Computing Platform. End points may include but are not limited to PCs mobile phones smart phones tablet computing devices servers computing appliances medical devices cameras programmed logic controllers and any other end point with the minimum memory persistent non volatile storage CPU and communication capabilities required by the deployed software agents.

Now referring to in Step Sentinel . rotates e.g. changes the encryption key used by Shield . . In Step Scout . as deployed on and comprised within an endpoint retrieves instructions from the local data storage Data .L comprised on the same endpoint that comprises Scout . . An instruction may be a one time or recurring instruction to scan the end point. The scan of the endpoint may be a full scan of the entire endpoint or it may be a limited scan as determined by the retrieved instruction. The scanning process is comprised of the file traversal process which is described in . In Step contemporaneously with the scan or after the scan Scout . meta logs the results of the scan to LData .L . In Step contemporaneously with the scan or after the scan Scout . sends the meta logs comprising the results of the scan to Spy . which is the API layer that connects the endpoint with the cloud control server. see for a description of the Cloud Control Server In Step Spy . is operable to receive and store the meta logs into the remote data storage of the cloud control server designated as RData .R . In Step as meta logs are written to RData .R they are fed into the reporting component of the cloud control server which is designated as Prospectus . . In another preferred embodiment the meta logs may be read by Prospectus . . In Step as files are received by Prospectus . analytics are applied to the data by Prophet . in order to determine patterns of data use that constitute rule violations or deviations from normal behavior. In another embodiment Prophet . is operable to read the meta logs directly from RData .R . An example of a rule violation is the discovery by Scout . that a scanned file contained confidential data as determined by its file type .rx or .AO8 for example . An example of a deviation from normal behavior is the discovery that a given endpoint has increased or decreased the total number of files by a percentage that exceeds 100 of the average increase or decrease of the total number of files for this user or the average user. In Step as unusual behavior or rule violations are detected constituting anomalies the anomalies are sent to Trumpet . . Trumpet . is the alerting component of the Forensic Computing Platform. In Step Trumpet . creates an alert in accordance with the configuration of the Forensic Computing Platform. Anomalies may also be sent back to Prospectus . to be included in the activity reporting. Continuing now with Step Scout . is operable to invoke Judge . to inspect the contents of the scanned file or files that correspond with the instructions received by Scout . . Details of this process are described in greater detail in . An example of an instruction would be to open and search any new or changed word PDF Excel documents for patterns of data that match a pattern that would possibly constitute PHI data or PCI data. Another example of an instruction received by Scout . and invoked using Judge . would be to open any new or changed file with an extension of 837 or 835 which are standard EDI payment file formats. In Step Judge which is comprised on the same endpoint with Scout . is operable to store the results of its processing into LData .L . In Step either contemporaneously with its operation or after completion Judge . sends the meta logs comprising the results of its operation to Spy . which is the API layer that connects the endpoint with the cloud control server. In Step Spy . is operable to receive and store the meta logs into the remote data storage of the cloud control server designated as RData .R . In Step as meta logs are written to RData .R they are fed into the reporting component of the cloud control server which is designated as Prospectus . . In another preferred embodiment the meta logs may be read directly by Prospectus . . In Step as files are received by Prospectus . analytics are applied to the data by Prophet . in order to determine patterns of data use that constitute rule violations or deviations from normal behavior. In another embodiment Prophet . is operable to read the meta logs directly from RData .R . In Step as unusual behavior or rule violations are detected constituting anomalies the anomalies are sent to Trumpet . . Anomalies may also be sent back to Prospectus . to be included in the activity reporting. In Step Trumpet . creates an alert in accordance with the configuration of the Forensic Computing Platform. Alerts may be sent to different recipients depending on system configuration. For example in a violation of policy a first alert based on the discovery of PCI data comprised within a file or files may be configured to be sent to the Chief Compliance Officer employed by the entity utilizing the Forensic Computing Platform. In another example which is a suspicious activity but not a policy violation a second alert based on a deviation from normal file download behavior may be sent to the system administrator of the Forensic Computing Platform. Continuing now with Step Scout . is operable to read the results of the completed operation of Judge . . In a second exemplary deployed configuration Scout . is operable to read the results of the operation of Judge . contemporaneously with Steps through . It is an advantage of the second configuration to protect data concurrently with the operations of Judge . . In either configuration Scout . is operable to protect data in accordance with its retrieved instructions. Files flagged for protection are moved from the scanned endpoint to Enclave . comprised within the cloud control server. Refer to for additional details. In Step files are immediately encrypted by Shield . upon receipt. For enhanced security in a typical and preferred deployment of the Forensic Computing Platform data may also be encrypted by Scout . before transmission to Enclave . using a data transmission key. Referring now to in Step following or contemporaneously with Step and Scout . meta logs the results of the data protection to LData .L . In Step contemporaneously or immediately following Step Scout . sends the meta logs comprising the results of the data protection to Spy . which is the API layer that connects the endpoint with the cloud control server. In Step Spy . is operable to receive and store the meta logs into the remote data storage of the cloud control server designated as RData .R . In Step as meta logs are written to RData .R they are fed into the reporting component of the cloud control server which is designated as Prospectus . . In another preferred embodiment the meta logs may be read directly by Prospectus . . In Step as files are received by Prospectus . analytics are applied to the data by Prophet . in order to determine patterns of data use that constitute rule violations or deviations from normal behavior. In another embodiment Prophet . is operable to read the meta logs directly from RData .R . In Step as unusual behavior or rule violations are detected constituting anomalies the anomalies are sent to Trumpet . . Anomalies may also be sent back to Prospectus . to be included in the activity reporting. In Step Trumpet . creates an alert in accordance with the configuration of the Forensic Computing Platform.

Continuing now with Step Scout . having now meta logged the results of the completed data protection operation and based on its configuration and in accordance with the received instructions Scout . is operable to invoke functionality comprised within Sniper . . Sniper . is comprised on the same endpoint with Scout . and may be deployed as a separate agent or comprised as a sub routine within Scout . . In Step Sniper . is operable to delete files from the endpoint. Sniper . is also operable to delete or redact specific data elements within a scanned file. refer to for more details. In the present example files are deleted immediately after they are first protected referring to Step . However in other exemplary embodiments a file or files may be deleted by Sniper . irrespective of the prior result of data protection. For example a file may be deleted as a result of a scan by Scout . that determined that the file is of a type e.g. rx A08 HL7 837 that is not authorized for this endpoint. In yet another embodiment a file or files may be deleted following the results of Judge . and wherein the file is determined to contain inappropriate data for this endpoint e.g. PCI PII PHI and in this case the files can be deleted by Sniper . without a prerequisite to first protect the file or files. In Step Sniper . deletes the identified file or files from the endpoint. In Step Sniper . meta logs the results of the file deletion to the LData .L . In Step Sniper . sends the meta logs comprising the results of the data protection to Spy . which is the API layer that connects the endpoint with the cloud control server. In Step Spy . is operable to receive and store the meta logs into the remote data storage of the cloud control server designated as RData .R .

In Step as meta logs are written to RData .R they are fed into the reporting component of the cloud control server which is designated as Prospectus . . In another preferred embodiment the meta logs may be read directly by Prospectus . . In Step as files are received by Prospectus . analytics are applied to the data by Prophet . in order to determine patterns of data use that constitute rule violations or deviations from normal behavior. In another embodiment Prophet . is operable to read the meta logs directly from RData .R . In Step as unusual behavior or rule violations are detected constituting anomalies the anomalies are sent to Trumpet . . Anomalies may also be sent back to Prospectus . to be included in the activity reporting. In Step Trumpet . creates an alert in accordance with the configuration of the Forensic Computing Platform. Continuing now with . In Step Internal User .A a Registered Internal User of the Forensic Computing Platform logs into the Portal B of the Forensic Computing Platform using unique credentials associated with Internal User .A . In Step the unique credentials of Internal User .A are passed to Guardian . . In Step Guardian . is operable to retrieve the entitlements associated with Internal User .A from PData .P . Having retrieved the entitlements associated with Internal User .A Guardian is further operable to enable authorized functions on the Portal .B of the forensic computing environment.

As shown in Step and in accordance with this specific use case Guardian . is operable to enable the file share functions of the Portal .B . However it should be noted in another exemplary embodiment Guardian is also equally operable to disable the same file share options based on the entitlements for a given user or users. In Step Internal User .A invokes a data sharing request using Portal .B . The received data sharing request is passed to Guardian . in Step . Guardian . comprised of business logic is operable to orchestrate steps and . In Step the data sharing request is sent to Enclave . data sharing request is comprised of the specific file or files to be shared one or more of maximum downloads and expiration date and the intended external user or users targeted to receive the file or files. In Step Shield . is operable to decrypt the file or files. In Step Chaperone . is operable to encode the file or files with tracking embodiments as previously discussed in . Having now identified the file or files to be shared and decrypted and encoded those files in Step Guardian . is operable to initiate a message to External User .C with a secure link to the shared files. In another preferred embodiment the shared files may be re encrypted using an additional transport key thus providing an additional layer of security for the files while in transmission. In this embodiment the transport key is obtained from Shield . and applied to the shared files after they are encoded by Chaperone . in Step . In Step the message comprised with the secure link is sent to the External Endpoint .D the endpoint associated with External User .C .

In Step the message is opened and the External User .C clicks on the link comprised within the message. If the External User .C is already registered on the Forensic Computing Platform the External User .C is one of a Registered External User as previously described in . In Step External User .C logs in to the Portal B using the unique credentials associated with this external user. In Step the unique credentials of External User .C are passed to Guardian . . In Step Guardian . is operable to retrieve the entitlements associated with External User .C from PData .P . Having retrieved the entitlements associated with External User .C Guardian is further operable to enable authorized functions on the Portal .B of the forensic computing environment. As shown in Step and in accordance with this specific use case Guardian . is operable to enable the file download functions of the Portal .B . In Step having enabled the download functions as the process orchestrator of the Forensic Computing Platform Guardian . sends a message to Enclave . to initiate the download.

In Step the file or files are downloaded to the External Endpoint .D . In Step Guardian . is operable to store the meta logs comprising the results of the completed file share into the remote data storage of the cloud control server designated as RData .R . In Step as meta logs are written to RData .R they are fed into the reporting component of the cloud control server which is designated as Prospectus . . In another preferred embodiment the meta logs may be read directly by Prospectus . . In Step as files are received by Prospectus . analytics are applied to the data by Prophet . in order to determine patterns of data use that constitute rule violations or deviations from normal behavior. In another embodiment Prophet . is operable to read the meta logs directly from RData .R . In Step as unusual behavior or rule violations are detected constituting anomalies the anomalies are sent to Trumpet . . Anomalies may also be sent back to Prospectus . to be included in the activity reporting. In Step Trumpet . creates an alert in accordance with the configuration of the Forensic Computing Platform. In this exemplary embodiment an alert may be generated based on an anomaly wherein the External User .C has received files from multiple internal users that exceeds the average number of files received or exceeds a pre established threshold of total files. This alert is necessary because Guardian . may not be aware of the total number of files already received by External User .C particularly if those files were sent by a plurality of internal users. In this case the analytics capability of Prophet . is operable to see this pattern of activity and generate the corresponding anomaly in Step . Continuing now with in Step previously downloaded files comprised with encoded data are forwarded to an Unauthorized Device .E .

In Step at least one encoded file is opened on Unauthorized Device .E . In Step a tracking message is sent to the Chaperone . function of the Forensic Computing Platform. Depending on the encoding method the tracking message may be comprised of one or more of the following download file ID IP address MAC address user information hardware serial numbers Identifying Operating System Data Cookies Locally Stored Objects and other data associated with the Unauthorized Device .E . In Step Chaperone . is operable to store the meta logs comprising the results of the data tracking message into the remote data storage of the cloud control server designated as RData .R . In Step as meta logs are written to RData .R they are fed into the reporting component of the cloud control server which is designated as Prospectus . . In another preferred embodiment the meta logs may be read by Prospectus . . In Step as files are received by Prospectus . analytics are applied to the data by Prophet . in order to determine patterns of data use that constitute rule violations or deviations from normal behavior. In another embodiment Prophet . is operable to read the meta logs directly from RData .R . In Step as unusual behavior or rule violations are detected constituting anomalies the anomalies are sent to Trumpet . . Anomalies may also be sent back to Prospectus . to be included in the activity reporting. In Step Trumpet . creates an alert in accordance with the configuration of the Forensic Computing Platform. In this exemplary embodiment an alert may be generated based on an anomaly wherein the Unauthorized Device .E has received files from Registered External Endpoint .D . In this case the analytics capability of Prophet . is operable to see this pattern of activity and generate the corresponding anomaly in Step . In Step previously downloaded files comprised with encoded data are forwarded from Unauthorized Device .E to a Plurality of Devices .F . The Plurality of devices may be any combination of Registered Internal Devices Registered External Devices and Unregistered External Devices. In Step at least one encoded file is opened on at least one of the Plurality of Devices .F . In Step a tracking message is sent to the Chaperone . function of the Forensic Computing Platform. Depending on the encoding method the tracking message may be comprised of one or more of the following download file ID IP address MAC address User Information Hardware Serial Numbers Identifying Operating System Data Cookies Locally Stored Objects and other data associated with the at least one of the Plurality of Devices .F . In Step Chaperone . is operable to store the meta logs comprising the results of the data tracking message into the remote data storage of the cloud control server designated as RData .R . In Step as meta logs are written to RData .R they are fed into the reporting component of the cloud control server which is designated as Prospectus . . In another preferred embodiment the meta logs may be read directly by Prospectus . . In Step as files are received by Prospectus . analytics are applied to the data by Prophet . in order to determine patterns of data use that constitute rule violations or deviations from normal behavior. In another embodiment Prophet . is operable to read the meta logs directly from RData .R . In Step as unusual behavior or rule violations are detected constituting anomalies the anomalies are sent to Trumpet . . Anomalies may also be sent back to Prospectus . to be included in the activity reporting. In Step Trumpet . creates an alert in accordance with the configuration of the Forensic Computing Platform. In this exemplary embodiment an alert may be generated based on an anomaly wherein one of the Plurality of Devices .F is a Registered Internal Endpoint device that has received files from an Unauthorized Device .E . In this case the analytics capability of Prophet . is operable to see this pattern of activity and generate the corresponding anomaly in Step . Although in this final exemplary alert the receiving device is one of a Registered Internal Endpoint which may otherwise have had access to the file or files the encoded file or files were received at the Registered Internal Endpoint in an unauthorized manner thus constituting a breach of security policy.

Line shows that when the State Configuration . initializes it opens a connection to the Database component . and maintains that connection. When State Configuration . accepts requests for data from other modules it requests data from the database component and returns the requested data to the requesting module.

Line shows that the Database component . depends heavily on the Cryptographic . component to read and write to the deployed local database as all data can be encrypted at rest. As such data to be encrypted or decrypted is sent to the Cryptographic . component and the results are returned to the Database component . .

Line shows that the State Configuration . also interacts directly with the Cryptographic component . to encrypt and decrypt data and return the results for processing.

Line shows that the State Configuration . launches a thread to perform File Traversal and Parsing . and thereafter manages that thread retrieving data from . answering requests from . and shutting down . when its services are no longer needed. The trigger to launch File Traversal and Parsing . may come from instructions from the Cloud Control Server . from the CRON component . or from user input.

Line shows that the File Traversal and Parsing . may depending on configuration call upon the Archival Transport component . to push an encrypted file to an archival location shown as Remote Storage . . Once pushed the Archival Transport component . will return a confirmation message to File Traversal and Parsing . .

Line shows that the Archival Transport component . may interact directly with a Remote Storage . Environment. This environment could be a single file server a cloud based storage environment or any other conceivable connected networked storage device.

Line shows that the Remote Communications component . communicates securely with the Cloud Control Server . using an encrypted SSL session and sending encrypted data. This Cloud Control Server will decrypt the data packets and process the request and return a response. The environment may also return additional configuration information and instructions to the local client.

Line shows the Remote Communications component . relies on the Cryptographic component . to encrypt data packets and maintain an encrypted SSL session. Data to be encrypted or decrypted is sent to the Cryptographic component with results returned.

Line shows that the Meta Logging component . makes use of Remote Communications . to send data to the Cloud Control Server . . Confirmation of receipt is returned to back the Meta Logging function.

Line shows that the State Configuration . is responsible for launching the Meta Logging component . . Requests for data to Meta Log and requests for confirmations of data successfully sent are returned to . .

Line shows that the Remote Security component . is responsible for instructing State Configuration . to deactivate the process and fall back to a mode of operation where all the deployed application does is wait for either an activation instruction or it receives other instructions from the Cloud Control Server. Additionally State Configuration . will periodically request Remote Security to check to see if the activation status of the deployed application has changed.

Line shows that License Validation . is called by State Configuration to validate license keys and to return information about the license that enables or disables certain functionality of the deployed application.

Line shows that CRON . is initialized by State Configuration . with a list of profiles or activities to schedule and returns back to the State Configuration when an activity is supposed to take place. This is more fully detailed in . The activities subject to scheduling include initiating a File Traversal pushing Meta Logs checking in with Remote Security and any other activities that run on a schedule.

Line shows that License Validation . requests Remote Communications . to validate license key information. The results of that validation are returned to License Validation . .

Line shows that Remote Security . requests Remote Communications . to check in with the Cloud Control Server . and determine if there has been a change in status for this deployed application while the local environment is running and checks to see if there are additional instructions waiting from the Cloud Control Server . . The results of that check are returned to the State Configuration . function.

Line shows the consumption of the Configuration . file by the State Configuration . component of the deployed application.

Step license validation component of deployed application requests a license key and registration URL from the State Configuration . function.

Step If the deployed application already has obtained a license key from user input control is passed to this step to encrypt the data and send the encrypted data to the remote server.

Step If the deployed application does not have a license key a generic license key is used to request an official license key.

Step Data is encrypted and sent to the remote server. This initial data set includes information about the deployed endpoint such as serial number MAC address and other unique information obtained during registration and as previously described herein.

Step The remote server checks for additional information to send to the deployed application client .

Step The cryptography component of the deployed application decrypts the data packet and inspects the additional data.

At this point in the process the deployed application makes a decision based on the inspected packet. If the data is simply a confirmation message from the remote server Step is executed and data is sent to the calling function. If the data is comprised of an instruction for the Remote Security . function the data is sent to remote security as shown in Step . If the data is configuration data the message is sent to the State Configuration . component of the deployed application.

Line . State Configuration . initializes and provides from the Database component . a list of activities and the times they should run.

Line . CRON . arranges these activities into a chain of objects each link includes a timestamp and an activity type. A confirmation of receipt of the list is sent back to State Configuration . .

Line . Each second the CRON component compares the chain with the current timestamp and if any links are equal to or older than the current timestamp they are returned to the State Configuration for execution.

Line . State Configuration then sends to the pertinent module a command to start a given function along with any data pertinent to that activity.

Line . External modules may receive instructions or based on programming logic request to change a currently set activity schedule. They subsequently request a scheduling change from State Configuration.

Line . State Configuration receives the request logs it and forwards the request to the CRON which sends back confirmation of receipt. The CRON then updates the schedule accordingly.

Continuing now with the next figure. is a flow chart describing the File Traversal . flow of the deployed application of the Forensic Computing Platform.

Box and show the two ways a file traversal can be initiated. Either the CRON . component requests the file traversal run because a previously scheduled task is now ready to run or instructions to run a File Traversal were received over Remote Communications.

Box . If the data is not complete as in a scheduled task then the Database component is requested to provide the remaining data.

Box . The data remains incomplete and State Configuration asks the Database component to log the failure.

Box . Notes that this part of the process starts with an internal component call the component being responsible for managing the traversal of a single directory.

Box . Prepare to list the contents of the directory based on the instruction received by the deployed application. All subdirectories and all files that match whatever pattern s requested for the current scan. The patterns can be a variety of things including the file type files that have certain EXIF data files that contain information matching a specific pattern file names matching a pattern or files matching other searchable criteria.

Box . The file traversal component of the deployed application reads each entry one at a time and processes that entry.

Box . Each entry is tested to determine if the item is null if so then it has completed the process of listing the current directory and control is returned out of the function. If this is the last directory to traverse this will end this part of the process. the completion corresponding to Box .

Box . The current entry is tested for redundant operating system directory entries namely the . and .. directories. The . directory represents the current directory and .. represents the parent directory.

Box . If the item is a directory the same component is recursively called so that directory contents can be included in the current traversal.

Box . The link is resolved to a full path and traversal logic ensures that this path isn t one that is already scanned. Next the same component is recursively called so the directory contents can be included in the current traversal.

Box . If the item is a file or a link to a file in operating systems supporting that concept the deployed component subjects the file to a series of different tests and actions depending on the instructions that accompanied this traversal. The file can be archived to a remote server its contents can be tallied or examined and compared against strings or data segments a hash can be computed on the file data can be appended or removed from the file etc. No matter what action is to be taken all parameters are made available to be meta logged . to the Cloud Control Server . . An overview of this process is outlined in

The above process repeats for each item in the directory with the component returning back to either the recursive call that initiated a scan on a subdirectory or when all files are scanned to Box on

Continuing now with the next figure. File Traversal Flow Chart showing additional details of Box This sample flow chart shows the decisions made during the file examination portion of the file traversal and the actions thus taken for each scanned file 

Step If a hash value is to be calculated a unique hash value is calculated for the file and added to the properties associated with the scanned file in accordance with configuration requirements.

Step If EXIF values are to be determined pull available EXIF data and add EXIF data to the properties associated with the current file in accordance with configuration requirements.

Step If there is a requirement to search the contents of the scanned file search the contents of the file for matching patterns and add to the properties associated with the scanned file in accordance with configuration requirements.

Step If there is a requirement to archive the scanned file compress and encrypt the file in accordance with configuration requirements.

Step If there is additional information to append to the scanned file append additional information to the scanned file in accordance with configuration requirements. Additional information may include EXIF data tags forensic encoding to allow tracing the file movement or other information in accordance with the system configuration.

Step If information is to be removed from the scanned file remove information from the file in accordance with configuration requirements. Examples include social security numbers credit card numbers and other information that is considered restricted.

Step If the file is to be deleted delete the file in accordance with configuration requirements. If there is a requirement to perform a secure delete such as a DOD seven pass wipe or similar secure deletion overwrite in accordance with this requirement.

Having described the components of the technical architecture of the deployed endpoint it should be appreciated that other implementations of the technology architecture are possible and can be described in subsequent disclosures.

In this scenario a combination of printable and scannable codes will allow the document to be traced back to the point of leakage from the Registered Internal Endpoint . In connection with this example the disk comprised within the fax machine may be scanned using a deployed agent operable to detect the scannable codes resulting in forensic data about the leaked document as shown in step . which is sent to the Cloud Control Server . In another exemplary embodiment of data leakage using fax a fax server may be comprised of a deployed application that is operable to read and detect the combination of codes comprised within the faxed document as the documents are transmitted. In this example the codes can be transmitted as forensic data to the Cloud Control Server . Meta logs are created by the Cloud Control Server in step . . The Cloud Control Server is to operable store the meta logs in step . . Note In an alternative exemplary embodiment the Guardian functional component of the Cloud Control Server is operable to react to the meta data received from the fax server and prevent the file or files from being transmitted. Continuing now with the description of the Cloud Control Server is further operable to analyze log data in step . using Prophet. The log data can be examined to determine if the file was faxed in accordance with company policy and in accordance with the entitlements of the Registered Internal User. The Cloud Control Server is further operable to create a report based on the analysis of the meta logs using Prospectus in step . . The Cloud Control Server is further operable to create an alert based on the analysis of the meta logs using Trumpet in step . .

We have described herein a Forensic Computing Platform and its functional and technical components with exemplary work flows and use cases. Although we have described the invention in detail it should be apparent that various modifications and changes may be made without departing from the spirit and scope of the present invention. Consequently these and other modifications are contemplated to be within the spirit and scope of the following claims.

