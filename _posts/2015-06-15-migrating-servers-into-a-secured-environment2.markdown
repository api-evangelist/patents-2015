---

title: Migrating servers into a secured environment
abstract: In one approach, one or more computer processors provision an instance in a cloud computing environment, wherein the instance includes one or more local disks. The one or more computer processors boot the instance from a boot image such that an operating system exists in a main memory of the instance. The one or more computer processors copy an image file to the one or more local disks of the instance, where copying the image file overwrites the one or more local disks. The one or more computer processors reboot the instance.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09652263&OS=09652263&RS=09652263
owner: International Business Machines Corporation
number: 09652263
owner_city: Armonk
owner_country: US
publication_date: 20150615
---
The present invention relates generally to the field of computer systems and more particularly to migrating servers into a secured environment.

The use of virtualization is becoming widespread. Virtualization describes a software abstraction that separates a computer resource and its use from an underlying physical device. Generally a virtual machine VM provides a software execution environment and may have a virtual processor virtual system memory virtual storage and various virtual devices. Virtual machines have the ability to accomplish tasks independent of particular hardware implementations or configurations. System virtualization is implemented through some managing functionality typically hypervisor technology. Hypervisors also called virtual machine managers VMMs use a thin layer of code in software or firmware to achieve fine grained dynamic resource sharing. Because hypervisors provide the greatest level of flexibility in how virtual resources are defined and managed they are generally the primary technology for system virtualization.

Virtual machines may be migrated between a source host computing platform the source host and a destination host computing platform the destination host connected over a network which may be a local area network or a wide area network that may include the Internet. Migration can include a move from a source environment to a target environment where the source environment is separate and under different management and security control than the target environment. Whole instance migration includes capturing an entire operating system OS with the software and data included in image form transferring the system to a new environment and restarting the system. Whole instance migration is often needed when a customer does not have sufficient documentation of their applications for easy re install. In addition whole instance migration can capture changes that were made to the server after the initial server setup that were not properly documented.

Virtual to virtual V2V server migrations and physical to virtual P2V server migrations are typically performed by tools that write from a customer zone onto a hypervisor in a cloud environment such as an infrastructure as a service IaaS virtual machine where the customer zone is a secure network protected by firewalls and where both the customer and a cloud administrator have access. Often such as in a cloud environment which typically serves multiple customers the target hypervisor a key component in securing separation between customers is in a secured environment such that data flow directly from the customer zone is not permitted. In order to address network security migration may be performed across multiple intermediate zones requiring multiple copy steps. In addition cross zone traffic may have to pass through firewalls and may be restricted in bandwidth while storage at intermediate steps may limit scalability.

A first aspect of the present invention discloses a method including one or more computer processors provisioning an instance in a cloud computing environment wherein the instance includes one or more local disks. The one or more computer processors boot the instance from a boot image such that an operating system exists in a main memory of the instance. The one or more computer processors copy an image file to the one or more local disks of the instance where copying the image file overwrites the one or more local disks. The one or more computer processors reboot the instance.

A second aspect of the present invention discloses a computer program product including one or more computer readable storage device and program instructions stored on the one or more computer readable storage device. The stored program instructions include program instructions to provision an instance in a cloud computing environment wherein the instance includes one or more local disks. The stored program instructions include program instructions to boot the instance from a boot image such that an operating system exists in a main memory of the instance. The stored program instructions include program instructions to copy an image file to the one or more local disks of the instance where copying the image file overwrites the one or more local disks. The stored program instructions include program instructions to reboot the instance.

A third aspect of the present invention discloses a computer system including one or more computer processors and one or more computer readable storage device wherein the program instructions are stored on the one or more computer readable storage device for execution by at least one of the one or more computer processors. The stored program instructions include program instructions to provision an instance in a cloud computing environment wherein the instance includes one or more local disks. The stored program instructions include program instructions to boot the instance from a boot image such that an operating system exists in a main memory of the instance. The stored program instructions include program instructions to copy an image file to the one or more local disks of the instance where copying the image file overwrites the one or more local disks. The stored program instructions include program instructions to reboot the instance.

In yet another aspect provisioning an instance in a cloud computing environment includes before the booting the instance from the boot image shutting down by the one or more computer processors the instance attaching by the one or more computer processors a boot image to the instance and changing by the one or more computer processors a boot sequence such that subsequent booting of the instance utilizes the attached boot image.

In yet another aspect copying an image file to the one or more local disks of the instance includes mounting by the one or more computer processors a file server such that an image file included in the file server is accessible to the operating system of the instance and copying by the one or more computer processors the image file from the file server to the one or more local disks of the instance.

In yet another aspect provisioning an instance in a cloud computing environment includes identifying by the one or more computer processors a primary disk of the instance mounting by the one or more computer processors the primary disk and injecting by the one or more computer processors one or more scripts into the primary disk such that the one or more scripts are run during a subsequent reboot of the instance.

Embodiments of the present invention recognize that improvements to a migration process may be made by providing a method where data flows are inside the customer zone making the process permissible. Embodiments of the present invention are independent of an operating system and do not require additional copying or transferring operations therefore shortening the migration timeline. Embodiments of the present invention further recognize that properly reformatting image data is a more optimal approach than traditional migration processes where the image data is not directly runnable. Embodiments of the present invention recognize that by using a migration process that starts by provisioning a corresponding virtual machine the process ensures correct registration of the migrated virtual machine in the cloud thereby replacing all disks correctly and not being dependent on starting with an empty slot. Embodiments of the present invention further recognize that with existing techniques the target environment may have different network addresses and require a root password to the source instance whereas embodiments of the present invention ensure network access and authentication to the image after copying. Embodiments of the present invention also have an advantages of mapping multiple internet protocol IP addresses to correct interfaces and mapping multiple disks correctly. Implementation of embodiments of the invention may take a variety of forms and exemplary implementation details are discussed subsequently with reference to the Figures.

Virtualized computing environment includes first computer file server second computer and server computer all interconnected over network . Network can be for example a telecommunications network a local area network LAN a wide area network WAN such as the Internet or a combination of the three and can include wired wireless or fiber optic connections. Network can include one or more wired and or wireless networks that are capable of receiving and transmitting data voice and or video signals including multimedia signals that include voice data and video information. In general network can be any combination of connections and protocols that will support communications between first computer file server second computer and server computer and other computing devices not shown within virtualized computing environment . In one embodiment first computer is considered a source environment and the remaining components of can be referred to as a target environment.

First computer and second computer can each be a standalone computing device a management server a web server a mobile computing device or any other electronic device or computing system capable of receiving sending and processing data. In other embodiments first computer and second computer can each represent a server computing system utilizing multiple computers as a server system such as in a cloud computing environment the cloud . In another embodiment first computer and second computer can each be a laptop computer a tablet computer a netbook computer a personal computer PC a desktop computer a personal digital assistant PDA a smart phone or any programmable electronic device capable of communicating with file server server computer and other computing devices not shown within virtualized computing environment via network . In another embodiment first computer and second computer each represent a computing system utilizing clustered computers and components e.g. database server computers application server computers etc. that act as a single pool of seamless resources when accessed within virtualized computing environment . First computer includes hypervisor and source instance . Second computer resides in a customer zone such as customer zone and includes hypervisor and target virtual machine VM . In general hypervisor and hypervisor may manage the operating systems and execution of source instance and target VM respectively. In some embodiments hypervisor and hypervisor can each represent a plurality of hypervisors within virtualized computing environment . Customer zone is a secure network protected by firewalls where both the customer and a cloud administrator have access. Customer zone is specific to a particular customer and although second computer may include VMs from other customers security is provided within customer zone such that other customers do not share access to target VM .

In exemplary embodiments source instance represents one or more virtual machines partitioned from first computer and target VM also described as an instance represents one or more virtual machines partitioned from second computer . Source instance and target VM are each a software implemented abstraction of hardware of first computer and second computer respectively. Source instance and target VM can each be utilized to emulate functions of a physical computer e.g. execute programs . In one embodiment resources of first computer e.g. memory central processing units CPUs storage devices and I O devices not shown can be partitioned into one or more virtual machines in source instance . In one embodiment resources of second computer e.g. memory central processing units CPUs storage devices and I O devices not shown can be partitioned into one or more virtual machines in target VM . In one embodiment source instance may reside on second computer or elsewhere in the environment. In an embodiment where the migration process is P2V source instance may not have been instantiated as a virtual machine managed by hypervisor and may have been built for the purpose of simulating a virtual machine. In the depicted embodiment target VM is an instance created from a copy of source instance .

File server is a computing device connected to network . File server provides a location for shared disk access i.e. shared storage of computer files such as documents sound files photographs movies images databases etc. that can be accessed by other computing devices connected to network . File server enables the storage and retrieval of data. File server can represent one or more file servers. File server resides in a customer zone such as customer zone and is a staging destination for a copy of source instance to reside to enable copying to target VM during the server migration process. In an embodiment where file server represents multiple file servers parallel migrations are enabled. File server includes shared image and scripts .

Shared image is a copy of source instance that exists as a compressed file. Since file server resides in customer zone shared image can be reached by target VM for copying during the migration process without concerns regarding network security.

Scripts are injected into target VM and run after target VM boots up. In one embodiment scripts include a script to permanently change network configuration. In another embodiment scripts include a script for access enablement by tools. For example scripts may install a secure shell SSH package and an initial public key of migration orchestrator program on server computer . SSH is a cryptographic encrypted network protocol for initiating text based shell sessions on remote machines in a secure way. SSH uses public key cryptography to authenticate a remote computer and allow the remote computer to authenticate a user if necessary. In another example scripts may install an agent of a systems management tool that can then make further adjustments on target VM .

Server computer can be a standalone computing device a management server a web server a mobile computing device or any other electronic device or computing system capable of receiving sending and processing data. In other embodiments server computer can represent a server computing system utilizing multiple computers as a server system such as in a cloud computing environment. In another embodiment server computer can be a laptop computer a tablet computer a netbook computer a personal computer PC a desktop computer a personal digital assistant PDA a smart phone or any programmable electronic device capable of communicating with first computer file server second computer and other computing devices such as a client computing device not shown within virtualized computing environment via network . In another embodiment server computer represents a computing system utilizing clustered computers and components e.g. database server computers application server computers etc. that act as a single pool of seamless resources when accessed within virtualized computing environment . Server computer includes virtualization management component cloud provisioning component migration orchestrator program and database .

Virtualization management component manages virtualization technology as is known in the art within virtualized computing environment . Virtualization management component may assist in controlling aspects of a hypervisor. For example virtualization management component may enable a user to create edit start and stop VMs as well as view and control each VM s console. In addition virtualization management component may enable a user to see performance and utilization statistics for each VM. Virtualization management component may also assist in allocating and optimizing virtual resources for efficiency. In addition virtualization management component may automate deployment of a virtual machine. Both cloud provisioning component and migration orchestrator program use virtualization management component to assist in a server migration process.

Cloud provisioning component prepares a VM also known as an instance for deployment on a cloud as is known in the art. Cloud provisioning component provisions target VM such that target VM includes the parameters of source instance specified by a system administrator. For example cloud provisioning component may provision target VM with a host name an operating system OS type and version a size a service level a number and size of disks a number of network interfaces and a number of internet protocol IP addresses. In another embodiment cloud provisioning component may provision target VM based on a VM template not shown that was utilized to generate source instance .

Migration orchestrator program directs server migration in a secured environment. Migration orchestrator program receives a target VM such as target VM that cloud provisioning component previously provisioned. Migration orchestrator program shuts down the target VM attaches a boot image and boots the target VM such that the main memory includes the OS. Migration orchestrator program causes the target VM to copy a source image VM such as shared image over the existing target VM disks. Migration orchestrator program enables the migration to the target VM to occur within the customer zone thus circumventing any concerns regarding network security. Migration orchestrator program is depicted and described in further detail with respect to .

Database resides on server computer . In another embodiment database can reside elsewhere in virtualized computing environment . A database is an organized collection of data. Database can be implemented with any type of storage device capable of storing data and configuration files that can be accessed and utilized by server computer such as a database server a hard disk drive or a flash memory. In other embodiments database can represent multiple storage devices within server computer . Database stores in memory boot image which migration orchestrator program uses in the server migration process. In one embodiment in memory boot image may be a file or a disk physical or virtual such as a virtual compact disk CD . In another embodiment in memory boot image may be written onto a disk included in target VM during VM provisioning and then may be unmounted after booting is complete. In memory boot image may be in an ISO file format. In general a boot image includes the operating system utilities and diagnostics as well as boot and data recovery information. In memory boot image is independent of source instance and is a static image that is read only. Use of in memory boot image allows a disk to be unmounted without damaging the running OS.

Virtualization management component controls both target VM and database . Database includes in memory boot image . When migration orchestrator program issues an appropriate command virtualization management component attaches in memory boot image as a disk to target VM enabling target VM to boot from in memory boot image during the migration process.

File server includes shared image and scripts . Migration orchestrator program copies shared image onto target VM . Migration orchestrator program injects scripts to target VM to configure target VM for automated execution.

Migration orchestrator program receives a provisioned target VM step . Migration orchestrator program begins the migration process with a target VM such as target VM which cloud provisioning component previously provisioned. Starting the migration process by provisioning a corresponding virtual machine is advantageous because the process ensures correct registration of the migrated virtual machine in the cloud thereby replacing all disks correctly and not being dependent on starting with an empty slot.

Migration orchestrator program shuts down target VM step . Because provisioning leaves target VM in a power on mode migration orchestrator program shuts down target VM in preparation for the next steps in the migration process.

Migration orchestrator program attaches in memory boot image step . Migration orchestrator program retrieves an in memory boot image such as in memory boot image as discussed with respect to and attaches in memory boot image to target VM as a disk via a command to virtualization management component .

Migration orchestrator program changes a boot sequence step . A standard boot sequence may include the following priority for devices from which to boot removable devices hard disk CD network. In one embodiment as part of the migration process migration orchestrator program issues a command to virtualization management component to change the boot sequence such that target VM will subsequently boot from in memory boot image which is in a virtual CD format. Once changed the boot sequence is as follows removable devices CD hard disk network.

Steps through may be the same for any VM migration process. In one embodiment steps through may be automated into a single group of steps included in the initial VM provisioning process. In addition in an embodiment where in memory boot image is written onto a disk included in target VM during VM provisioning steps and may not be needed.

Migration orchestrator program boots up target VM step . Migration orchestrator program starts target VM using in memory boot image . By booting target VM with in memory boot image the process is independent of the operating system.

Migration orchestrator program configures network settings step . Migration orchestrator program configures the network of target VM with IP addresses assigned when cloud provisioning component provisioned target VM . Correct IP addresses are needed to give target VM network accessibility and it is advantageous to be able to map multiple IP addresses to the correct interfaces. Migration orchestrator program uses one of a plurality of tools known in the art for network setting configuration that do not require a network connection to perform the configuration. In addition to network settings migration orchestrator program may also configure a corresponding subnet a gateway and a network route. Configuring the network settings is advantageous because with existing techniques the target environment may have different network addresses and require a root password to the source instance whereas embodiments of the present invention ensure network access and authentication to the image after copying.

Migration orchestrator program mounts file server step . As part of the migration process migration orchestrator program mounts file server to target VM i.e. makes shared image accessible to the OS on target VM by giving file server a mount point or reference address. Because file server and target VM both reside in customer zone mounting file server provides a secure environment for data flows.

Migration orchestrator program copies shared image step . Migration orchestrator program copies shared image from file server to target VM . In order to copy shared image to target VM migration orchestrator program may identify a disk layout of shared image . In one embodiment shared image is an open virtualization format OVF file that contains metadata of a virtual machine and virtual disk files e.g. VM templates and VM images in virtual machine disk VMDK format. VMDK format is a file format that describes containers for virtual hard disk drives to be used in virtual machines. Migration orchestrator program processes the metadata to identify the disk layout. In one embodiment migration orchestrator program uses a block copy method to dump virtual disk files from shared image onto the respective local disks of target VM . In another embodiment migration orchestrator program may include a decompressing step in the copying operation. Copying the shared image to target VM properly reformats the data which is advantageous because the standard format is not directly runnable.

Migration orchestrator program identifies and mounts primary disk step . In one embodiment migration orchestrator program relies on administration data interface tools which allow external manipulation of the OS to run scripts such as scripts after the boot up of target VM . A primary disk is the first disk of a migrated system and the disk that contains the OS. In order to inject scripts migration orchestrator program identifies and mounts a primary disk containing the administration data interface tools configuration folder. Embodiments of the present invention are advantageous because they can map multiple disks correctly.

Migration orchestrator program injects scripts step . Migration orchestrator program copies scripts into the administration data interface tools configuration folder and configures scripts for automated execution by target VM .

Migration orchestrator program shuts down target VM step . In order to complete the migration process migration orchestrator program unmounts the local disks to flush the drive caches persistent to the disks and shuts down target VM .

Migration orchestrator program removes in memory boot image step . Migration orchestrator program removes in memory boot image from the configuration of target VM . In one embodiment migration orchestrator program changes the boot sequence back to the original boot sequence previously changed in step in case another CD is attached to target VM in the future and should follow hard disk in the boot sequence.

Referring now to a schematic of an example of a cloud computing node is shown. Cloud computing node is only one example of a suitable cloud computing node and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention described herein. Regardless cloud computing node is capable of being implemented and or performing any of the functionality set forth hereinabove.

In cloud computing node there is a server computer which is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with server computer include but are not limited to personal computer systems server computer systems thin clients thick clients hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputer systems mainframe computer systems and distributed cloud computing environments that include any of the above systems or devices and the like.

Server computer may be described in the general context of computer system executable instructions such as program modules being executed by a computer system. Generally program modules may include routines programs objects components logic data structures and so on that perform particular tasks or implement particular abstract data types. Server computer may be practiced in distributed cloud computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed cloud computing environment program modules may be located in both local and remote computer system storage media including memory storage devices.

As shown in server computer in cloud computing node is shown in the form of a general purpose computing device. Server computer includes processor s cache memory persistent storage communications unit input output I O interface s and communications fabric . Communications fabric provides communications between cache memory persistent storage communications unit and input output I O interface s . Communications fabric can be implemented with any architecture designed for passing data and or control information between processors such as microprocessors communications and network processors etc. system memory peripheral devices and any other hardware components within a system. For example communications fabric can be implemented with one or more buses. In an embodiment communications fabric represents one or more of any of several types of bus structures including a memory bus or a memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnects PCI bus.

Memory and persistent storage are computer readable storage media. In this embodiment memory includes random access memory RAM . In general memory can include any suitable volatile or non volatile computer readable storage media. Cache is a fast memory that enhances the performance of processor s by holding recently accessed data and data near recently accessed data from memory .

Program instructions and data used to practice embodiments of the present invention are stored in persistent storage for execution and or access by one or more of the respective processor s via memory . In this embodiment persistent storage includes a magnetic hard disk drive. Alternatively or in addition to a magnetic hard disk drive persistent storage can include a solid state hard drive a semiconductor storage device a read only memory ROM an erasable programmable read only memory EPROM a flash memory or any other computer readable storage media that is capable of storing program instructions or digital information.

The media used by persistent storage may also be removable. For example a removable hard drive may be used for persistent storage . Other examples include optical and magnetic disks thumb drives and smart cards that are inserted into a drive for transfer onto another computer readable storage medium that is also part of persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices including resources of first computer file server and second computer . In these examples communications unit includes one or more network interface cards. Communications unit may provide communications through the use of either or both physical and wireless communications links. Program instructions and data used to practice embodiments of the present invention may be downloaded to persistent storage through communications unit .

I O interface s allows for input and output of data with other devices that may be connected to cloud computing node . For example I O interface s may provide a connection to external device s such as a keyboard a keypad a touch screen a microphone a digital camera and or some other suitable input device. External device s can also include portable computer readable storage media for example devices such as thumb drives portable optical or magnetic disks and memory cards. Software and data used to practice embodiments of the present invention can be stored on such portable computer readable storage media and can be loaded onto persistent storage via I O interface s . I O interface s also connect to a display .

Display provides a mechanism to display data to a user and may be for example a computer monitor. Display can also function as a touchscreen such as a display of a tablet computer.

It should be understood that although not shown other hardware and or software components could be used in conjunction with server computer . Examples include but are not limited to microcode device drivers redundant processing units external disk drive arrays RAID systems tape drives and data archival storage systems etc.

Referring now to illustrative cloud computing environment is depicted. As shown cloud computing environment comprises one or more cloud computing nodes with which local computing devices used by cloud consumers such as for example personal digital assistant PDA or cellular telephone A desktop computer B laptop computer C and or automobile computer system N may communicate. Nodes may communicate with one another. They may be grouped not shown physically or virtually in one or more networks such as Private Community Public or Hybrid clouds as described hereinabove or a combination thereof. This allows cloud computing environment to offer infrastructure platforms and or software as services for which a cloud consumer does not need to maintain resources on a local computing device. It is understood that the types of computing devices A N shown in are intended to be illustrative only and that computing nodes and cloud computing environment can communicate with any type of computerized device over any type of network and or network addressable connection e.g. using a web browser .

Referring now to a set of functional abstraction layers provided by cloud computing environment is shown. It should be understood in advance that the components layers and functions shown in are intended to be illustrative only and embodiments of the invention are not limited thereto. As depicted the following layers and corresponding functions are provided 

Hardware and software layer includes hardware and software components. Examples of hardware components include mainframes RISC Reduced Instruction Set Computer architecture based servers servers blade servers storage devices and networks and networking components . In some embodiments software components include network application server software and database software .

Virtualization layer provides an abstraction layer from which the following examples of virtual entities may be provided virtual servers virtual storage virtual networks including virtual private networks virtual applications and operating systems and virtual clients .

In one example management layer may provide the functions described below. Resource provisioning provides dynamic procurement of computing resources and other resources that are utilized to perform tasks within the cloud computing environment. Metering and Pricing provide cost tracking as resources are utilized within the cloud computing environment and billing or invoicing for consumption of these resources. In one example these resources may comprise application software licenses. Security provides identity verification for cloud consumers and tasks as well as protection for data and other resources. User portal provides access to the cloud computing environment for consumers and system administrators. Service level management provides cloud computing resource allocation and management such that required service levels are met. Service Level Agreement SLA planning and fulfillment provide pre arrangement for and procurement of cloud computing resources for which a future requirement is anticipated in accordance with an SLA.

Workloads layer provides examples of functionality for which the cloud computing environment may be utilized. Examples of workloads and functions which may be provided from this layer include mapping and navigation software development and lifecycle management virtual classroom education delivery data analytics processing transaction processing and migration orchestrator program .

It is understood in advance that although this disclosure includes a detailed description on cloud computing implementation of the teachings recited herein are not limited to a cloud computing environment. Rather embodiments of the present invention are capable of being implemented in conjunction with any other type of computing environment now known or later developed.

Cloud computing is a model of service delivery for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks network bandwidth servers processing memory storage applications virtual machines and services that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics at least three service models and at least four deployment models.

On demand self service a cloud consumer can unilaterally provision computing capabilities such as server time and network storage as needed automatically without requiring human interaction with the service s provider.

Broad network access capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms e.g. mobile phones laptops and PDAs .

Resource pooling the provider s computing resources are pooled to serve multiple consumers using a multi tenant model with different physical and virtual resources dynamically assigned and reassigned according to demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction e.g. country state or datacenter .

Rapid elasticity capabilities can be rapidly and elastically provisioned in some cases automatically to quickly scale out and rapidly released to quickly scale in. To the consumer the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.

Measured service cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service e.g. storage processing bandwidth and active user accounts . Resource usage can be monitored controlled and reported providing transparency for both the provider and consumer of the utilized service.

Software as a Service SaaS the capability provided to the consumer is to use the provider s applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser e.g. web based e mail . The consumer does not manage or control the underlying cloud infrastructure including network servers operating systems storage or even individual application capabilities with the possible exception of limited user specific application configuration settings.

Platform as a Service PaaS the capability provided to the consumer is to deploy onto the cloud infrastructure consumer created or acquired applications created using programming languages and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks servers operating systems or storage but has control over the deployed applications and possibly application hosting environment configurations.

Infrastructure as a Service IaaS the capability provided to the consumer is to provision processing storage networks and other fundamental computing resources where the consumer is able to deploy and run arbitrary software which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems storage deployed applications and possibly limited control of select networking components e.g. host firewalls .

Private cloud the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on premises or off premises.

Community cloud the cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns e.g. mission security requirements policy and compliance considerations . It may be managed by the organizations or a third party and may exist on premises or off premises.

Public cloud the cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services.

Hybrid cloud the cloud infrastructure is a composition of two or more clouds private community or public that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability e.g. cloud bursting for load balancing between clouds .

A cloud computing environment is service oriented with a focus on statelessness low coupling modularity and semantic interoperability. At the heart of cloud computing is an infrastructure comprising a network of interconnected nodes.

The programs described herein are identified based upon the application for which they are implemented in a specific embodiment of the invention. However it should be appreciated that any particular program nomenclature herein is used merely for convenience and thus the invention should not be limited to use solely in any specific application identified and or implied by such nomenclature.

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be any tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer a special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module a segment or a portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the blocks may occur out of the order noted in the Figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

The descriptions of the various embodiments of the present invention have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The terminology used herein was chosen to best explain the principles of the embodiment the practical application or technical improvement over technologies found in the marketplace or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.

