---

title: Governed application deployment on trusted infrastructure
abstract: Techniques are disclosed for governed or constrained deployment of one or more applications on trusted infrastructure of a cloud infrastructure environment. For example, a repository of metadata (e.g., metadata lake) is maintained. The metadata repository includes metadata associated with applications, metadata associated with content associated with the applications, and metadata associated with a cloud infrastructure environment in which the applications are deployable. A deployment is determined for a given application on a trusted infrastructure within the cloud infrastructure environment based on at least a subset of the metadata maintained in the metadata repository. The determination of the deployment of the given application based on the subset of the metadata includes mapping trust-based criteria associated with the given application with a portion of infrastructure of the cloud infrastructure environment that satisfies the trust-based criteria.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09594546&OS=09594546&RS=09594546
owner: EMC IP Holding Company LLC
number: 09594546
owner_city: Hopkinton
owner_country: US
publication_date: 20150130
---
The field relates generally to cloud infrastructure environments and more particularly to governed deployment of one or more applications on trusted infrastructure of a cloud infrastructure environment.

Many data centers in use today employ a cloud computing paradigm. As is well known the cloud computing paradigm is a model that provides ubiquitous convenient on demand network access to a shared pool of configurable computing resources e.g. networks servers storage applications and services as part of a cloud infrastructure that can be rapidly provisioned and released with minimal management effort or service provider interaction see e.g. NIST Special Publication No. 800 145 .

Application deployment on such a cloud infrastructure has been substantially automated by the development and implementation of tools that employ a Platform as a Service PaaS approach. One example of such a PaaS approach is implemented in the CloudFoundry product available from Pivotal Software Inc. Palo Alto Calif. which provides application developers with the functionality of a versatile PaaS application deployment layer. One of the main benefits of the PaaS application deployment layer is that by controlling deployment of an application to a specific platform e.g. specific data center or cloud the PaaS application layer abstracts the application developer away from the specific hardware architecture of the data center cloud where the application is intended to be deployed. This increases development speed and also facilitates speed of deployment for information technology IT operators.

Embodiments of the invention provide techniques for governed deployment of one or more applications on trusted infrastructure of a cloud infrastructure environment.

For example in one embodiment a repository of metadata is maintained. The metadata repository comprises metadata associated with applications metadata associated with content associated with the applications and metadata associated with a cloud infrastructure environment in which the applications are deployable. A deployment is determined for a given application on a trusted infrastructure within the cloud infrastructure environment based on at least a subset of the metadata maintained in the metadata repository. The determination of the deployment of the given application based on the subset of the metadata comprises mapping trust based criteria associated with the given application with a portion of infrastructure of the cloud infrastructure environment that satisfies the trust based criteria.

Advantageously illustrative embodiments realize that application developers may have reasons to have their applications deployed on infrastructure which is trusted. For example such applications may involve policies requirements and other criteria relating to financial services data protection data retention government regulations etc. While applications with such criteria clearly have one or more reasons to be deployed on cloud infrastructure that is trusted existing PaaS application deployment tools are unable to make such placement decisions. Illustrative embodiments therefore enable an understanding of the policy needs or regulatory requirements i.e. trust based criteria of an application which results in governed or constrained placement of the application onto a specific cloud with a certain trusted infrastructure within that cloud. This is accomplished in one or more illustrative embodiments by maintaining metadata associated with the infrastructure and metadata associated with the application and its associated content and finding a best fit mapping for the application on a specific part of the infrastructure to satisfy the policies and or requirements of the application. Such a best fit mapping also enables generation and processing of queries to discover specific data sets and schemas and the infrastructure onto which the data sets have been assigned. In illustrative embodiments the metadata is maintained in a metadata storage repository called a metadata lake. 

These and other features and advantages of the invention will become more readily apparent from the accompanying drawings and the following detailed description.

Illustrative embodiments may be described herein with reference to exemplary cloud infrastructure data centers data processing systems computing systems data storage systems and associated servers computers storage units and devices and other processing devices. It is to be appreciated however that embodiments of the invention are not restricted to use with the particular illustrative system and device configurations shown. Moreover the phrases cloud infrastructure data center data processing system computing system data storage system and the like as used herein are intended to be broadly construed so as to encompass for example private or public cloud computing or storage systems as well as other types of systems comprising distributed virtual infrastructure. However a given embodiment may more generally comprise any arrangement of one or more processing devices.

As used herein the following terms and phrases have the following illustrative meanings application generally refers to one or more software programs designed to perform one or more functions metadata generally refers to data that describes or defines other data governed placement generally refers to constraining deployment of an application on specific infrastructure that is trusted and trusted generally means satisfying or at least substantially satisfying or being consistent with one or more trust based criteria e.g. policies requirements regulations etc. .

It is realized herein that limitations of existing application deployment approaches have to do with these existing approaches failure to recognize the importance of data and metadata governance in entities such as large corporations. While the automated deployment of applications continues to be critical embodiments of the invention have been developed based on the realization that there is a need desire to constrain application deployment to run on top of specific trusted and compliant infrastructure as well as a need desire to subsequently discover such trusted infrastructure for analytic queries.

Application deployment via PaaS tools such as CloudFoundry and as another example OpenShift Red Hat Inc. of Raleigh N.C. typically limit the deployment of an application to a specific cloud without understanding the capabilities of the underlying infrastructure. A typical cloud selection process for deploying an application illustrated using CloudFoundry as an example is as follows 

In this example the data center operator that manages the cloud infrastructure issues commands 1 and 6 of the process while the application developer issues commands 2 through 5. Thus as is evident the application developer is automatically assigned a cloud my cloud which is some portion of the cloud infrastructure that constitutes a data center. The application developer can specify services that the application will need as well as how many instances of the application will run on the assigned cloud. The data center operator then issues commands to add resource capacity to the assigned cloud and to deploy the application instance s to the assigned cloud for execution.

However as is evident from the above example the existing PaaS deployment process has no mechanism for understanding the policies or regulatory requirements of an application that may need to result in constrained placement onto a specific cloud with a certain trusted infrastructure within that cloud. As mentioned above such a constrained or governed placement may be needed desired based on application criteria such as but not limited to policies requirements and other criteria relating to e.g. financial services data protection data retention government regulations etc.

Even if a PaaS tool were to have disparate knowledge of specific trusted infrastructure and disparate knowledge of policy constraints of the application that it must place existing PaaS tools have no ability to automatically and dynamically map those two pieces of information on the fly real time at deployment time. Illustrative embodiments of the invention provide such mapping functionality.

Furthermore it is realized herein that corporate discovery and analysis of data sets is hindered due to the fact that existing PaaS tools cannot be queried to discover specific data sets and the infrastructure onto which they have been assigned. This limits the ability of corporate personnel and officers e.g. chief data officer to quickly leverage data for business objectives. Illustrative embodiments of the invention provide such querying functionality.

It is also realized herein that the metadata that an existing PaaS tool such as CloudFoundry would need to solve the above problems is fragmented across disparate silos of the underlying data center and often difficult to access implemented in various formats and possibly with a different meaning within each silo. That is due to the heterogeneous nature of the data needed to make the decision as well as the disparate locations where such data is stored existing PaaS tools are unable to perform governed deployment of one or more applications on trusted infrastructure of a cloud infrastructure environment.

Illustrative embodiments of the invention maintain a metadata storage repository called a metadata lake whereby metadata associated with the cloud infrastructure environment is collected for use in making governed placement decisions. For example illustrates a system comprising a metadata storage repository also referred to as metadata lake and a cloud infrastructure environment wherein the repository enables governed deployment of one or more applications on trusted infrastructure of the environment as will be described in detail below. The metadata lake informs a PaaS tool such as e.g. CloudFoundry and OpenShift on the application and infrastructure metadata that provides for automated governed deployment of applications onto a best fit trusted infrastructure. This metadata lake is accessible at both application deployment time as well as discovery time when a specific data storage unit or device needs to be discovered and analyzed.

The metadata lake contains a combination of semantic content metadata infrastructure based metadata and application metadata . Thus metadata is considered metadata associated with content associated with applications metadata is considered metadata associated with a cloud infrastructure environment in which the applications are deployable and metadata is considered metadata associated with the applications. The metadata lake comprises a portal e.g. one or more application programming interfaces or APIs not expressly shown that accept metadata about semantic content e.g. discovered aggregated or manually supplied infrastructure based metadata e.g. gathered automatically from software defined data center interfaces and tools and application metadata e.g. schemas regulations and policies supplied by way of example only by Chief Security Officers Chief Data Officers others from various sources systems tools and or processes as will be further explained below.

It is to be appreciated that the phrase cloud infrastructure environment as illustratively used herein generally refers to an environment that comprises cloud infrastructure and a platform stack used for development management and deployment of applications hosted by computing resources that are part of the cloud infrastructure. The cloud infrastructure in one embodiment comprises an infrastructure as a service IaaS approach with a plurality of clouds that form a plurality of data centers e.g. software defined data centers or SDDCs . The platform stack in one embodiment comprises development and management layers that form a programming environment for an application developer and a platform as a service PaaS deployment layer to deploy developed applications.

As is known while the PaaS layer controls deployment of an application to a specific platform e.g. specific data center or cloud and thus abstracts the application developer away from the underlying infrastructure of the data center cloud where the application is to be deployed IaaS can be used in illustrative embodiments to assist in selecting the underlying infrastructure.

It is to be appreciated that the application development components in the application fabric layer may comprise any known application development tools depending on the specific applications to be developed and hosted on the data center. By way of example only these application development tools may include one or more of mobile software development tools from Xtreme Labs part of Pivotal Software Inc. of Palo Alto Calif. open source web application framework Rails David Heinemeier Hansson Java Virtual Machine JVM based application development Spring tools Pivotal Software Inc. of Palo Alto Calif. data intensive real time application development system Node.js Joyent Inc. of San Francisco Calif. and cloud application vFabric platform VMware Inc. of Palo Alto Calif. just to name a few.

Likewise the data management components in the data fabric layer may comprise any known data management tools depending on the specific applications to be developed and hosted on a data center cloud. By way of example only these data management tools may include one or more of massively parallel processing MPP structured query language SQL database Pivotal HD Pivotal Software Inc. of Palo Alto Calif. query interface software HAWQ Pivotal Software Inc. of Palo Alto Calif. and data management software GemFire Pivotal Software Inc. of Palo Alto Calif. just to name a few.

The PaaS layer may comprise any known PaaS tool by way of example as mentioned above CloudFoundry and OpenShift . One or more other PaaS tools may be employed by the PaaS layer .

The cloud infrastructure layer in one example comprises a plurality of SDDCs. An SDDC is a data center design where elements of the infrastructure e.g. including networking elements storage elements processing elements and security elements are virtualized and delivered as services e.g. IaaS to tenants. Typically each SDDC is implemented via a specific cloud where part or all of infrastructure associated with the cloud is allocated to one or more tenants. A cloud generally refers to a portion of infrastructure and associated environment that operates in accordance with a cloud computing paradigm. It is to be appreciated however that alternative embodiments may be implemented with other types of data centers and processing platforms.

In accordance with one embodiment PaaS layer in conjunction with metadata lake is configured to determine a deployment for application on a trusted infrastructure within the cloud infrastructure environment based on at least a subset of the metadata maintained in the metadata repository. This is accomplished with application deployment module and governed placement services module . More particularly a request to deploy application is presented to application deployment module . Application deployment module calls governed placement services module which determines the deployment of application based on a subset of the metadata e.g. content metadata infrastructure metadata application metadata stored in metadata lake by mapping trust based criteria e.g. policies requirements regulations etc. associated with application with a portion of infrastructure that satisfies the trust based criteria in this example trusted infrastructure which includes some portion or all infrastructure of an SDDC or cloud of the cloud infrastructure .

More particularly governed placement services module queries the metadata lake for information useful in identifying placement on a trusted infrastructure. Governed placement services module comprises logic configured to interpret one or more policies e.g. corporate policies for the application and map the one or more policies against available trusted infrastructure for the purpose of deploying the application and its associated data on top of the trusted infrastructure. Such logic can be encoded in various ways including but not limited to using semantic tools and rule based declarative approaches. Illustrative embodiments will be described below.

Once a placement decision is made by governed placement services module module notifies application deployment module which in turn deploys the application on the identified trusted infrastructure . The metadata lake is also notified of the placement decision by module . Metadata lake stores this information which serves as an audit trail for subsequent query services. The recording of this data may be done by tools such as a PaaS tool or an underlying SDDC entity.

It is to be appreciated that while system of shows governed placement services module being internal to the PaaS layer in alternative embodiments all or part of the functionality of governed placement services module may be implemented via the computing resources that implement metadata lake and or some other computing resources not expressly shown in communication with PaaS layer and metadata lake .

It is further realized herein that an SDDC platform likely hosts millions of applications and trying to quickly extract value out of data associated with those many applications can be severely constricted by the ability to query the PaaS layer to determine where in a geographically distributed cloud infrastructure specific applications and or data stores are assigned within the infrastructure. illustrates application deployment via governed placement services according to one embodiment that addresses this and other such discovery issues. More particularly system employs a similar architecture as described above for system with the exception that application and or data store dynamic discovery services with rich semantics are added to speed up the query and location process and make it more efficient. This CDO chief data officer architecture includes data source toolsets which can be accessed by employees that work for corporate officers and personnel e.g. chief executive officer or CEO CDO and or chief data architect or CDA . The data source toolsets are used by one or more of employees to submit one or more queries to the governed placement services module of the PaaS layer and or the metadata lake assuming an audit trail of governed placement is maintained therein to determine where in the geographically distributed cloud infrastructure specific applications are deployed and what trusted computing resources e.g. data stores are mapped or assigned to those applications.

Thus in the non limiting example shown in it is assumed that CEO poses one or more business questions to CDO who then poses one or more data questions intended to answer the one or more business questions to CDA . CDA then employs the data source toolsets to get answers to the one or more data questions. Examples of data source toolsets include but are not limited to a structured query language SQL query NoSQL not only SQL APIs Java APIs representational state transfer REST APIs etc.

We will now explain some illustrative scenarios and methodologies whereby various types of metadata maintained by metadata lake are collected and stored in the context of .

More specifically availability and recoverability metadata comprises statistics or other metrics that describe and or quantify the trusted infrastructure s ability to perform its agreed upon function s when required as well as its ability to recover from failure s . Security privacy and compliance metadata comprises statistics or other metrics that describe and or quantify the trusted infrastructure s ability to ensure confidentiality integrity and compliance of data and infrastructure. Sustainability metadata comprises statistics or other metrics that describe and or quantify the trusted infrastructure s ability to enable increased power and or energy efficiencies and ensure ethical practices. Transparency metadata comprises statistics or other metrics that describe and or quantify the trusted infrastructure s ability to provide standardized access to customer operational reports and reporting against trust objectives. Serviceability metadata comprises statistics or other metrics that describe and or quantify the trusted infrastructure s ability to facilitate technical support and problem resolution. Manageability metadata comprises statistics or other metrics that describe and or quantify the trusted infrastructure s ability to enable automation and interoperability in managing trust based criteria.

Given the one or more scenarios and methodologies illustratively described herein for collecting and storing metadata as part of metadata lake those ordinarily skilled in the art will realize various use cases for such functionality. It is to be appreciated that embodiments of the invention are not limited to these illustrative use cases and that many other use cases are intended to be within the scope of embodiments of the invention.

Accordingly as shown in step of methodology the unique LEI is extracted from a subject application by the PaaS layer e.g. application deployment module and provided to governed placement services module . In step the extracted LEI is used by governed placement services module as a key to access policies and schemas metadata and stored in metadata lake for that subject application. In step the policies and schemas are used for the subject application to best fit map the subject application on trusted infrastructure of at least one of the SDDCs clouds based on infrastructure metadata also accessed in metadata lake .

One example to demonstrate the above process is as follows. Assume an organization has a policy to encrypt all sensitive data with the AES 256 standard. This policy may be due to a regulatory requirement or internal policy of an organization. A query into the application metadata e.g. metadata in states that Application A that is required to be provisioned stores revenue data of the organization which is marked sensitive. Clearly this Application A will need to be provisioned on infrastructure with AES 256 encryption capability i.e. example of trusted infrastructure . PaaS governed placement services module discovers the storage infrastructure with AES 256 encryption capability e.g. discovered from metadata in and PaaS application deployment module subsequently provisions the application on the selected infrastructure. Subsequently if a CDO queries the metadata lake to show the characteristics of the infrastructure with sensitive data the CDO will see Application A with sensitive revenue data being hosted in a storage infrastructure with AES 256 encryption capability.

As shown step identifies the objective for which a solution is discoverable from enterprise data sources e.g. increase customer base by 10 percent in the new year. Step identifies the data source schemas relevant to the objective. Step queries metadata lake and extracts the LEIs relevant to the data source schemas. Then in step the methodology determines where applications related to the extracted LEIs are running and what data stores they are using. By way of one example only the data source toolsets may be used to provide such dynamic discovery services.

It is to be appreciated that while the figures described above have depicted certain components as being internal or external to other components embodiments of the invention are not limited to these illustrative depictions. By way of one example only while metadata lake is shown as being external to PaaS layer it is to be appreciated that in alternative embodiments metadata lake may be implemented partially or wholly internal to PaaS layer . Likewise any one or more of the components modules tools layers etc. described herein may be implemented internal or external to any other of the components modules tools layers data stores etc.

As an example of a processing platform on which a metadata storage repository and cloud infrastructure environment e.g. in may be implemented is processing platform shown in . The processing platform in this embodiment comprises a plurality of processing devices denoted . . . N which communicate with one another over a network . It is to be appreciated that the metadata storage and usage methodologies described herein may be executed in one such processing device or executed in a distributed manner across two or more such processing devices . The cloud infrastructure environment may also be executed in a distributed manner across two or more such processing devices . The metadata storage functionality and the data center cloud functionality described herein may be executed on the same processing devices separate processing devices or some combination of separate and the same overlapping processing devices. It is to be further appreciated that a server a client device a computing device or any other processing platform element may be viewed as an example of what is more generally referred to herein as a processing device. As illustrated in such a device generally comprises at least one processor and an associated memory and implements one or more functional modules for instantiating and or controlling features of systems and methodologies described herein. Multiple elements or modules may be implemented by a single processing device in a given embodiment.

The processing device in the processing platform comprises a processor coupled to a memory . The processor may comprise a microprocessor a microcontroller an application specific integrated circuit ASIC a field programmable gate array FPGA or other type of processing circuitry as well as portions or combinations of such circuitry elements. Components of systems as disclosed herein can be implemented at least in part in the form of one or more software programs stored in memory and executed by a processor of a processing device such as processor . Memory or other storage device having such program code embodied therein is an example of what is more generally referred to herein as a processor readable storage medium. Articles of manufacture comprising such processor readable storage media are considered embodiments of the invention. A given such article of manufacture may comprise for example a storage device such as a storage disk a storage array or an integrated circuit containing memory. The term article of manufacture as used herein should be understood to exclude transitory propagating signals.

Furthermore memory may comprise electronic memory such as random access memory RAM read only memory ROM or other types of memory in any combination. The one or more software programs when executed by a processing device such as the processing device causes the device to perform functions associated with one or more of the components steps of system methodologies in . One skilled in the art would be readily able to implement such software given the teachings provided herein. Other examples of processor readable storage media embodying embodiments of the invention may include for example optical or magnetic disks.

Processing device also includes network interface circuitry which is used to interface the device with the network and other system components. Such circuitry may comprise conventional transceivers of a type well known in the art.

The other processing devices . . . N of the processing platform are assumed to be configured in a manner similar to that shown for computing device in the figure.

The processing platform shown in may comprise additional known components such as batch processing systems parallel processing systems physical machines virtual machines virtual switches storage volumes etc. Again the particular processing platform shown in this figure is presented by way of example only and the metadata storage repository and data center environment collectively shown as in may include additional or alternative processing platforms as well as numerous distinct processing platforms in any combination.

Also numerous other arrangements of servers clients computers storage devices or other components are possible in processing platform . Such components can communicate with other elements of the processing platform over any type of network such as a wide area network WAN a local area network LAN a satellite network a telephone or cable network or various portions or combinations of these and other types of networks.

Furthermore it is to be appreciated that the processing platform of can comprise virtual machines VMs implemented using a hypervisor. A hypervisor is an example of what is more generally referred to herein as virtualization infrastructure. The hypervisor runs on physical infrastructure. As such the visualization techniques illustratively described herein can be provided in accordance with one or more cloud services. The cloud services thus run on respective ones of the virtual machines under the control of the hypervisor. Processing platform may also include multiple hypervisors each running on its own physical infrastructure. Portions of that physical infrastructure might be virtualized.

As is known virtual machines are logical processing elements that may be instantiated on one or more physical processing elements e.g. servers computers processing devices . That is a virtual machine generally refers to a software implementation of a machine i.e. a computer that executes programs like a physical machine. Thus different virtual machines can run different operating systems and multiple applications on the same physical computer. Virtualization is implemented by the hypervisor which is directly inserted on top of the computer hardware in order to allocate hardware resources of the physical computer dynamically and transparently. The hypervisor affords the ability for multiple operating systems to run concurrently on a single physical computer and share hardware resources with each other.

An example of a commercially available hypervisor platform that may be used to implement portions of the processing platform in one or more embodiments of the invention is the VMware vSphere VMware Inc. of Palo Alto Calif. which may have an associated virtual infrastructure management system such as the VMware vCenter . The underlying physical infrastructure may comprise one or more distributed processing platforms that include storage products such as VNX and Symmetrix VMAX both available from EMC Corporation of Hopkinton Mass. . A variety of other computing and storage products may be utilized to implement the one or more cloud services that provide the functionality and features described herein.

It should again be emphasized that the above described embodiments of the invention are presented for purposes of illustration only. Many variations may be made in the particular arrangements shown. For example although described in the context of particular system and device configurations the techniques are applicable to a wide variety of other types of data processing systems processing devices and distributed virtual infrastructure arrangements. In addition any simplifying assumptions made above in the course of describing the illustrative embodiments should also be viewed as exemplary rather than as requirements or limitations of the invention. Numerous other alternative embodiments within the scope of the appended claims will be readily apparent to those skilled in the art.

