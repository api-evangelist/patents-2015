---

title: Protecting content from third party using client-side security protection
abstract: Architecture that employs encryption and storage of encryption keys to protect trusted client message content from an untrusted third-party hosted service. Each trusted user machine is configured to optionally apply security to messages. Rules determine when automatic protection is applied and the level of protection to apply. The trusted client automatically downloads the rules (or rules policies) from a trusted rules service and caches the rules locally. During composition, the rules analyze the message and automatically apply security template(s) to the message. The security template(s) encrypt the body of the message, but not the headers or subject. The untrusted message service processes the header and delivers the message to the correct recipient. The hosted service cannot view the contents of the message body, and only intended recipients of the protected message can view the message body. Offline protection is supported, and the user can override protection by the rules.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09418244&OS=09418244&RS=09418244
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09418244
owner_city: Redmond
owner_country: US
publication_date: 20150129
---
This application is a continuation application of U.S. patent application Ser. No. 12 356 098 entitled PROTECTING CONTENT FROM THIRD PARTY USING CLIENT SIDE SECURITY PROTECTION filed on Jan. 20 2009 now issued U.S. Pat. No. 8 978 091 the entire disclosure of which is hereby incorporated herein by reference.

For most customers the prospect of moving to hosted message service is appealing from a total cost of ownership perspective but a subset of those customers prioritize the security of their information over any cost savings obtained from a hosted delivery model. Organizations deal with confidential material related to daily business or activities. At the same time many organizations are considering a switch to hosted services to reduce information technology IT costs and burden. Customers want the benefits of hosted application services without compromising security. A subset of customers is unwilling to share any information with a third party service provider.

In order for those organizations to move to a hosted e mail service for example the organizations want to trust that the service provider was not accessing confidential e mails of the organization without permission. However few options if any exist in preventing access to the data organization by a third party administrator. Thus a problem that organizations face is how to protect sensitive data from disclosure to the third party service provider while also obtaining the benefits of reduced IT expenses. To unblock hosted e mail for example a mechanism needs to be provided to secure customer e mail from the third party service provider.

The following presents a simplified summary in order to provide a basic understanding of some novel embodiments described herein. This summary is not an extensive overview and it is not intended to identify key critical elements or to delineate the scope thereof. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.

The disclosed architecture employs security rules that facilitate encryption and storage of encryption keys to protect client message e.g. e mail content of a trusted client from an untrusted third party hosting service through which the message is processed and routed. An administrator of the trusted e.g. on premises organization can define policies for use in the untrusted service for determining if security rules should be applied to messages leaving that trusted organization. For example the organization administrator can define a policy in the untrusted online mail service that all messages sent from users in a department called Research are protected by default with a specific rights template Research Confidential .

To enable protection of client message content each trusted user machine is configured to optionally apply security e.g. rights management to its outgoing messages. In other words if the trusted client message is to be sent through a trusted message service security may not be applied to the message. However if the message is sent through an untrusted service the client can apply security rules to the message such that the untrusted service cannot intentionally or unintentionally expose the message content and or attachments.

Based on rules and policies defined by the administrator the security or protection rules are applied in the form of security or rights template s against the messages leaving the trusted organization to determine when automatic protection is applied and the level of protection for example. Alternatively or in combination therewith an administrator of the hosted or untrusted application can define and apply rules or policies within the untrusted message server that determine when automatic protection is applied to messages and the level of protection.

A security rule can be composed of a set of predicates an action and additional configuration information. The predicates can include sender and recipient information e.g. constraints the action can include zero one or more security templates to be applied to the message that specify what actions the recipient can take on the message and the configuration information includes the ability to delegate control of the security rules to the user. More specifically the user to override the protection of certain security rules.

When the client message program is configured for interfacing to the untrusted message service the client program automatically downloads the rules defined by the administrator of the trusted organization and in accordance with organization policies and caches the rules locally in association with the client . When composing a new message a security component associated with the trusted client application analyzes the message using the security rule predicates and automatically applies the corresponding security template s to the message. Typically one security rights template is applied.

If the user changes the recipients on the message for example the message is re evaluated and the protection is left unchanged or removed. Periodically the client polls a trusted rules service for rules based policies that have been added or modified in which case the policies are re downloaded and the associated security rules are cached locally. Offline protection during message composition is also supported.

A result is the security template s encrypt the body and attachments of the message and not the headers or subject. Once sent the untrusted message service processes the message headers and delivers the message to the correct recipient. The untrusted service cannot view the contents of the message body thereby relegating the untrusted message service to strictly routing the message. Moreover only intended recipients of the protected message can open the message body for viewing.

To the accomplishment of the foregoing and related ends certain illustrative aspects are described herein in connection with the following description and the annexed drawings. These aspects are indicative of the various ways in which the principles disclosed herein can be practiced and all aspects and equivalents thereof are intended to be within the scope of the claimed subject matter. Other advantages and novel features will become apparent from the following detailed description when considered in conjunction with the drawings.

The disclosed architecture employs security protection e.g. encryption and storage e.g. at a trusted location of encryption keys to prevent exposure of message content of messages e.g. e mail to an untrusted hosted application e.g. third party e mail message service that can handle e.g. route the messages. In addition the protection can be applied broadly or narrowly using rules or rules policies .

All messages from a user in a particular department e.g. a trusted location for example can be protected as well as all messages sent to specific recipients users and or distribution lists . All internal messages within an organization can be protected. An administrator can define whether protection is optional and can be overridden by the sender for example.

A set of management configuration tasks is provided that allow the administrator e.g. of the trusted organization to create policies for the untrusted service and to create remove modify and retrieve client rules e.g. using get set tasks . The administrator can also define an update interval for the client to poll the rules service for changes in the policies. Each client rule is a collection of predicates that trigger the trusted client to apply a security template to the message and attachments during or after recipient changes or during message composition for example. The rules can execute in an order of priority which determines the order in which rules are processed and applied to the message to be protected.

Note that where the description uses the terms on premises and off premises on premises can mean a trusted location whereas off premises can be an untrusted location. However a trusted service does not necessarily need to be at an on premises or trusted location.

As described herein a rule or set of rules can be defined as a policy by the on premises administrator. One or more policies can then be downloaded to the trusted client cache for processing as part of message creation and protection. For example a policy can be assigned to users from a particular department such that the associated departmental messages are protected in a certain way from exposure through an untrusted message service. In another example a policy can be cached in the trusted client and that when applied encrypts messages to one recipient of a department but not another recipient of the same department. In other words the granularity of the protection can be managed according to the rules.

Reference is now made to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding thereof. It may be evident however that the novel embodiments can be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to facilitate a description thereof. The intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the claimed subject matter.

There are many different types of encryption systems other than rights management authentication to a rights management service that returns key s that protect a document . For example there can be shared keys between the users. Security can be provided by any kind of encryption system that is associated with management keys that the sender and recipient share as well as keys that are accessible through a simple service. When the recipient opens the received document for the message communication can be back to the security component e.g. a rights management server for authentication permission keys and unlocking of the contents at the recipient.

Security can work just as well in a data synchronization system where information is shared between two computers owned by the same user rather than two different users. The user owns a key that is inaccessible to anyone else. A client side protection agent encrypts the data using the key when input to the data synchronization system stores the encrypted data into the data synchronization system puts the key on the other user computer and encrypts the indicia that identifies where that key is also stored. The user computer or the user can open the content on the other computer and the data synchronization system never gains access to the data.

Another variation for encryption employs a key server to search a key for an intended recipient. In an e mail implementation the message can be encrypted using S MIME secure multipurpose Internet mail extensions for example the client looks in advance to find the public user recipient and encrypts the message for the user and before the message enters the service. The recipient already has the key.

The rules component is associated with the untrusted message service for creating the policy rules off premises and evaluating the message based on the policy rules when using the untrusted message service . The client automatically downloads and caches the policy rules to be used for evaluating the message when transmitting the message via the untrusted message service . The policy rules can include at least one of a predicate an action or configuration information. The trusted client is a messaging client that automatically polls a trusted rules service e.g. the rules component for changes and or updates to the policy rules and downloads the changed and or updated policy rules for evaluation of the message . Alternatively the client can poll and download rules from an on premises rules service or rules repository not shown rather than polling and downloading from the untrusted location. The message can be evaluated according to the policy rules during an offline mode of the client and the security can be applied during the offline mode.

As before the client and the security component can both be on premises entities and the untrusted message service and the rules component can be off premises entities. The security includes encryption of portions of the message and storage of an associated encryption key at a trusted location. The security can include encrypting a body of the message so the untrusted message service cannot read the message body.

In the context of the message being an e mail message and with respect to initialization and analysis when the user configures the client e mail program e.g. a personal information manager PIM that includes e mail capability for the untrusted message service which now is a hosted e mail service the e mail client e.g. trusted client automatically downloads the policy rules at the hosted e mail service and caches the policy rules locally in association with the client .

When the user begins composing a new message in the e mail program the policy rules are applied to the e mail to analyze the e mail using the predicates and the security e.g. one or more templates is automatically applied to the e mail. Based on changes the user makes when composing the e mail the e mail is automatically re evaluated for the same or different security. For example if the user changes the recipients on the e mail the e mail is automatically re evaluated. Based on the re evaluation the security can be left unchanged or the security can be removed e.g. if the e mail will then be routed through a trusted e mail service .

Periodically a trusted rules service e.g. the rules component can be polled to determine if the organization administrator has added or modified the policy rules . If so the policy rules new and or updated are re downloaded and cached locally in the client .

If the user is offline while composing a message the message can still be evaluated using the cached policy rules and the security applied while the e mail client is offline. The security component provides the ability to apply security protection while the client is offline. After sending the message is stamped with one or more attributes for example the version of the analysis engine that ran on the message the age of the rules and or whether the sender overrode the automatic protection.

The first off premises environment can include a first rules component that stores policy rules as policies and a first untrusted message service . The first untrusted service communicates messages protected and unprotected between the trusted clients and the recipients . Similarly the second off premises environment can include a second rules component that stores policy rules as policies and a second untrusted message service . The second untrusted service communicates messages protected and unprotected between the trusted clients and the recipients .

When configured the trusted clients each download and store e.g. cache the policy rules and the policy rules from trusted rules services e.g. the first rules component and the second rules component . Thus when composing a message via a second trusted client one or both sets of the policy rules and stored local to the second client are processed to determine the security e.g. template s to be applied to the message. It is to be appreciated that once a single recipient for example Recipientassociated with the first off premises environment is identified only the policy rules are applied. However if the distribution list for the message includes recipients associated with both the first and second off premises environments and then both the policy rules and are processed.

In other words it is possible that security can be applied differently for the same message being routed through two different untrusted services. In one implementation where multiple sets of policy rules can be applied to the same message the highest level of security as obtained from the security component needed for one recipient is applied to all recipients. Situations like this can be resolved according logical operations on the multiple rule sets such as AND OR etc. so that the optimum security is provided where desired.

Once the message is sent from the client machine of the sender the untrusted message service can process the header and deliver the message to the correct recipient . During this processing the untrusted message service e.g. a hosted e mail application cannot view the contents of the message body which precludes a third party from doing anything other than routing the message . When a recipient of the message receives and attempts to open the protected message body only a recipient that is intended to receive the message will be able to open the message body that is if specified as a recipient on the original message sent by the client user.

These properties and predicates can be specified in the following tasks. For creating a new client rule New ProtectionRule Name Enabled Priority Sender Department Recipient DL Internal Security Template User Can Override . For modifying an existing client rule Set ProtectionRule Identity Name Enabled Priority Sender Department Recipient DL Internal Security Template User Can Override . Moreover the predicates can be combined with the logical AND operator within a single rule and the values can be combined with the logical OR operator.

When the user creates a new e mail message for example the Sender Department Equals policy rules are evaluated e.g. as the client window appears and if triggered the corresponding security template specified in the security rule is applied.

Once the user specifies a list of recipients e.g. To CC and BCC and finishes inputting the recipients e.g. by clicking into the subject or body check names the client stored policy rules are run against that list of recipients. The client policy rules can be run after the user has finished inputting all recipients to avoid multiple runs of the policy rules and impact on the user experience.

Messages sent by the client while the security client rules are enabled can include a custom MAPI messaging application programming interface property that indicates the add in version e.g. ProtectionRuleVersion and the last date the rules were synchronized with the hoisted service e.g. ProtectionRuleLastUpdated . This helps in the verification that the message was sent through a client with the protection add in for untrusted services installed enabled and loaded with up to date rules. The MAPI properties can be elevated to an X Header for later evaluation by transport rules.

When a security rule is triggered and the security template s applied the user can be notified of this action through a user interface change. The selected template can change in a Permission menu and if the rule specifies User Override FALSE the menu can be disabled all items within the Permission menu except for a Manage Credentials option .

If the user overrides the selected security template s a custom MAPI property e.g. ProtectionRuleOverride can be created on the message containing the GUID of the security rule that was triggered therefore indicating that the security rule was overridden. This property can also be elevated to an X Header so that transport rules can run on the message.

The security rules can be evaluated in a specific order based on the overrideable property and then based on priority for example. First all non overrideable security rules can be evaluated by priority. Second the overrideable security rules can be evaluated by priority. If a security rule is overridden by the user and the message recipients change only the non overrideable security rules are re evaluated. For example consider the following rule set 

In other words if the user is a member of Team A and initially composes a message to the E mail Team then overrides security Rule 2 and then modifies the recipient to Marketing Team only security Rule 1 is re evaluated.

If no recipients are specified on a message and the message is saved to a drafts folder no further action is taken. Only the users that trigger Sender Department Equals have their message security protected without any recipients specified.

If the user receives a protected message and selects Reply or Forward operations on that message the add in rules are employed to re evaluate the message. If the user has permission to modify the protection the non overrideable security rules are evaluated on the message if triggered disable the control can be disabled in the UI. This prevents the user from removing the protection only to see the protection re applied to the message and keep the existing protection therefore reducing user confusion. If the user changes the recipients on the protected message only the non overrideable security rules are re evaluated. If the user does not have permission to modify the protection the add in rules are not re evaluated.

If the user invokes a send on behalf composition or there are multiple untrusted accounts for a user the identity of the message sender can be used when evaluating the rules. By default the default account specified in protection architecture can be used. For example if User A has send on behalf permission for User B and User A composes a message as User B the message is evaluated based on the identity of User B.

With respect to multiple accounts the user can have multiple mailboxes on the same hosted service or different hosted services a cross premises multi hosted service topology .

The action can be limited to the application of security or rights management templates which specify the actions the recipient can take on the message. These templates are created and managed by the security component e.g. a rights management services server . With respect to the configuration information an administrator can delegate control of this feature to the user more specifically the administrator can allow the user to override the protection of certain security rules.

Included herein is a set of flow charts representative of exemplary methodologies for performing novel aspects of the disclosed architecture. While for purposes of simplicity of explanation the one or more methodologies shown herein for example in the form of a flow chart or flow diagram are shown and described as a series of acts it is to be understood and appreciated that the methodologies are not limited by the order of acts as some acts may in accordance therewith occur in a different order and or concurrently with other acts from that shown and described herein. For example those skilled in the art will understand and appreciate that a methodology could alternatively be represented as a series of interrelated states or events such as in a state diagram. Moreover not all acts illustrated in a methodology may be required for a novel implementation.

As used in this application the terms component and system are intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component can be but is not limited to being a process running on a processor a processor a hard disk drive multiple storage drives of optical and or magnetic storage medium an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a server and the server can be a component. One or more components can reside within a process and or thread of execution and a component can be localized on one computer and or distributed between two or more computers. The word exemplary may be used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs.

Referring now to there is illustrated a block diagram of a computing system operable to content protection in accordance with the disclosed architecture. In order to provide additional context for various aspects thereof and the following discussion are intended to provide a brief general description of the suitable computing system in which the various aspects can be implemented. While the description above is in the general context of computer executable instructions that can run on one or more computers those skilled in the art will recognize that a novel embodiment also can be implemented in combination with other program modules and or as a combination of hardware and software.

The computing system for implementing various aspects includes the computer having processing unit s a system memory and a system bus . The processing unit s can be any of various commercially available processors such as single processor multi processor single core units and multi core units. Moreover those skilled in the art will appreciate that the novel methods can be practiced with other computer system configurations including minicomputers mainframe computers as well as personal computers e.g. desktop laptop etc. hand held computing devices microprocessor based or programmable consumer electronics and the like each of which can be operatively coupled to one or more associated devices.

The system memory can include volatile VOL memory e.g. random access memory RAM and non volatile memory NON VOL e.g. ROM EPROM EEPROM etc. . A basic input output system BIOS can be stored in the non volatile memory and includes the basic routines that facilitate the communication of data and signals between components within the computer such as during startup. The volatile memory can also include a high speed RAM such as static RAM for caching data.

The system bus provides an interface for system components including but not limited to the memory subsystem to the processing unit s . The system bus can be any of several types of bus structure that can further interconnect to a memory bus with or without a memory controller and a peripheral bus e.g. PCI PCIe AGP LPC etc. using any of a variety of commercially available bus architectures.

The computer further includes storage subsystem s and storage interface s for interfacing the storage subsystem s to the system bus and other desired computer components. The storage subsystem s can include one or more of a hard disk drive HDD a magnetic floppy disk drive FDD and or optical disk storage drive e.g. a CD ROM drive DVD drive for example. The storage interface s can include interface technologies such as EIDE ATA SATA and IEEE 1394 for example.

One or more programs and data can be stored in the memory subsystem a removable memory subsystem e.g. flash drive form factor technology and or the storage subsystem s including an operating system one or more application programs other program modules and program data . Generally programs include routines methods data structures other software components etc. that perform particular tasks or implement particular abstract data types.

The computer can be employed as a server machine and or client machine. As an on premises server and or an on premises client the one or more application programs other program modules and program data can include the security component security client message the rules the message body message subject message header the components of the rule the predicate s action and configuration information and methods of for example. Where the computer is employed for the untrusted message service the one or more application programs other program modules and program data can include the untrusted message service rules component and rules the first rules component and rules policies the second rules component and rules policies the untrusted service and the untrusted service for example.

All or portions of the operating system applications modules and or data can also be cached in memory such as the volatile memory for example. It is to be appreciated that the disclosed architecture can be implemented with various commercially available operating systems or combinations of operating systems e.g. as virtual machines .

The storage subsystem s and memory subsystems and serve as computer readable media for volatile and non volatile storage of data data structures computer executable instructions and so forth. Computer readable media can be any available media that can be accessed by the computer and includes volatile and non volatile media removable and non removable media. For the computer the media accommodate the storage of data in any suitable digital format. It should be appreciated by those skilled in the art that other types of computer readable media can be employed such as zip drives magnetic tape flash memory cards cartridges and the like for storing computer executable instructions for performing the novel methods of the disclosed architecture.

A user can interact with the computer programs and data using external user input devices such as a keyboard and a mouse. Other external user input devices can include a microphone an IR infrared remote control a joystick a game pad camera recognition systems a stylus pen touch screen gesture systems e.g. eye movement head movement etc. and or the like. The user can interact with the computer programs and data using onboard user input devices such a touchpad microphone keyboard etc. where the computer is a portable computer for example. These and other input devices are connected to the processing unit s through input output I O device interface s via the system bus but can be connected by other interfaces such as a parallel port IEEE 1394 serial port a game port a USB port an IR interface etc. The I O device interface s also facilitate the use of output peripherals such as printers audio devices camera devices and so on such as a sound card and or onboard audio processing capability.

One or more graphics interface s also commonly referred to as a graphics processing unit GPU provide graphics and video signals between the computer and external display s e.g. LCD plasma and or onboard displays e.g. for portable computer . The graphics interface s can also be manufactured as part of the computer system board.

The computer can operate in a networked environment e.g. IP using logical connections via a wired wireless communications subsystem to one or more networks and or other computers. The other computers can include workstations servers routers personal computers microprocessor based entertainment appliance a peer device or other common network node and typically include many or all of the elements described relative to the computer . The logical connections can include wired wireless connectivity to a local area network LAN a wide area network WAN hotspot and so on. LAN and WAN networking environments are commonplace in offices and companies and facilitate enterprise wide computer networks such as intranets all of which may connect to a global communications network such as the Internet.

When used in a networking environment the computer connects to the network via a wired wireless communication subsystem e.g. a network interface adapter onboard transceiver subsystem etc. to communicate with wired wireless networks wired wireless printers wired wireless input devices and so on. The computer can include a modem or has other means for establishing communications over the network. In a networked environment programs and data relative to the computer can be stored in the remote memory storage device as is associated with a distributed system. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used.

The computer is operable to communicate with wired wireless devices or entities using the radio technologies such as the IEEE 802.xx family of standards such as wireless devices operatively disposed in wireless communication e.g. IEEE 802.11 over the air modulation techniques with for example a printer scanner desktop and or portable computer personal digital assistant PDA communications satellite any piece of equipment or location associated with a wirelessly detectable tag e.g. a kiosk news stand restroom and telephone. This includes at least Wi Fi or Wireless Fidelity for hotspots WiMax and Bluetooth wireless technologies. Thus the communications can be a predefined structure as with a conventional network or simply an ad hoc communication between at least two devices. Wi Fi networks use radio technologies called IEEE 802.11x a b g etc. to provide secure reliable fast wireless connectivity. A Wi Fi network can be used to connect computers to each other to the Internet and to wire networks which use IEEE 802.3 related media and functions .

Referring now to there is illustrated a schematic block diagram of a computing environment that facilitates on premises content protection for message. The environment includes one or more client s . The client s can be hardware and or software e.g. threads processes computing devices . The client s can house cookie s and or associated contextual information for example.

The environment also includes one or more server s . The server s can also be hardware and or software e.g. threads processes computing devices . The servers can house threads to perform transformations by employing the architecture for example. One possible communication between a client and a server can be in the form of a data packet adapted to be transmitted between two or more computer processes. The data packet may include a cookie and or associated contextual information for example. The environment includes a communication framework e.g. a global communication network such as the Internet that can be employed to facilitate communications between the client s and the server s .

Communications can be facilitated via a wire including optical fiber and or wireless technology. The client s are operatively connected to one or more client data store s that can be employed to store information local to the client s e.g. cookie s and or associated contextual information . Similarly the server s are operatively connected to one or more server data store s that can be employed to store information local to the servers .

The client s can include the clients and recipients and . The server s can include the off premises services and for example.

What has been described above includes examples of the disclosed architecture. It is of course not possible to describe every conceivable combination of components and or methodologies but one of ordinary skill in the art may recognize that many further combinations and permutations are possible. Accordingly the novel architecture is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims. Furthermore to the extent that the term includes is used in either the detailed description or the claims such term is intended to be inclusive in a manner similar to the term comprising as comprising is interpreted when employed as a transitional word in a claim.

