---

title: Method and apparatus for pre-fetching remote resources for subsequent display on a mobile computing device
abstract: A computer-implemented method and system for pre-fetching remote resource data from a remote mapping system for display on a client computing device is disclosed. Data received at a client device from an online mapping system in response to a query from the client device includes vector and remote resource data. Vector data is rasterized by the client device to depict graphical elements that are easily described by mathematical formulas. Remote resource data includes digital map elements that are not easily described by vectors, but instead, must be relayed to the client device as either bitmaps or references (e.g., URLs) to remote resources that are resolved at the backend or the client device. This remote resource data is prefetched to a client device so that it will be available for subsequent mapping application searches without resolving a corresponding reference to the remote resource data for each search.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09491255&OS=09491255&RS=09491255
owner: GOOGLE INC.
number: 09491255
owner_city: Mountain View
owner_country: US
publication_date: 20151123
---
This application is a continuation of U.S. application Ser. No. 13 316 271 filed Dec. 9 2011 and titled Method and Apparatus for Pre Fetching Remote Resources for Subsequent Display on A Mobile Computing Device the entire disclosure of which is expressly incorporated herein by reference.

The present disclosure relates generally to pre fetching data from remote resources for subsequent display on a mobile computing device during periods of no connectivity with the source of the remote resource.

The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors to the extent it is described in this background section as well as aspects of the description that may not otherwise qualify as prior art at the time of filing are neither expressly nor impliedly admitted as prior art against the present disclosure.

Many mobile computing devices such as cellular phones tablet computers notebooks etc. incorporate global positioning system GPS applications and related hardware. When actuated on the device the GPS applications may communicate with a GPS transmitter or other GPS hardware on the device and a backend application server to provide a digital map of an area around the device s current position to a user as well as label data and remote resource data. Digital map data may be downloaded to a device in chunks or tiles that collectively make up a displayed map. These tiles may be in a vector format that includes resource locators for data that the receiving device must interpret access and download to render the complete tile.

However there may be circumstances when the mobile computing device is in an area with limited network cellular or other communication access with the backend application server which limits or otherwise precludes immediate real time access to remote data potentially adversely affecting the user s experience.

Features and advantages described in this summary and the following detailed description are not all inclusive. Many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings specification and claims hereof. Additionally other embodiments may omit one or more or all of the features and advantages described in this summary.

In one embodiment a computer implemented method for pre fetching remote resource data to a mapping application executing on a client computing device for subsequent display on the client computing device may include several steps. For example the method may send a request for mapping data from a client computing device to a remote mapping system. The method may also receive map tile data at the client computing device in response to the sent request for mapping data. The received map tile data may include vector data describing a first graphic feature and remote resource data describing a second graphic feature. The method may also store the remote resource data in a cache memory of the client computing device. Further the method may subsequently retrieve the remote resource data from the cache memory of the client computing device without further communication between the remote mapping system and the client computing device in response to sending a second request for mapping data.

The method may also send a subsequent request for mapping data. In response to the subsequent request the method may receive further map tile data. The further map tile data may include vector data from a previous request for mapping data. The further map tile data may include a reference to remote resource data corresponding to remote data stored in the cache memory. The method may also retrieve the remote resource data from the cache memory in response to receiving the further map tile data.

A further step of the method may analyze a user map search history data file to determine the remote resource data. Also the method may analyze the request for mapping data to determine a second graphic feature. The second graphic feature may include a raster image of one or more of a road shield icon a tree icon a camping icon a restaurant icon a mass transit icon or a hospital icon. The reference may also include a URL to a remote resource data source. Furthermore the remote resource data received at the client computing device in response to the sent request for mapping data may include a remote resources data list including a plurality of references to remote data resources. The method may also resolve a reference to retrieve a graphic feature from one or more remote data resources.

In a further embodiment a client computing device may comprise a processor a memory and a transceiver. The memory may store a mapping module including instructions for execution by the processor. The instructions may use the processor to cause a request for mapping data to be sent from the client computing device to a backend mapping system via a network connection. The transceiver may receive mapping data from the backend mapping system via the network connection. The transceiver may receive the mapping data in response to the sent request. The mapping data may include a reference to remote resource data. The mapping module may include further instructions to cause the processor to resolve the reference to the remote resource data. The transceiver may also receive the remote resource data in response to resolving the reference and the processor may execute instructions to subsequently display the received remote resource data from a cache memory without further communication between the backend mapping system and the client computing device in response to sending a further request for mapping data including the reference to the remote resource data. The client computing device of claim may subsequently display the remote resource data from the cache memory in response to the mapping module causing further instructions to be executed to send a subsequent request for mapping data. A response to the subsequent request may include vector data and a reference to remote resource data from a previous request for mapping data. The mapping module may include further instructions to resolve the reference to the remote resource data of the response to the subsequent request by retrieving the remote resource data from the cache memory. The remote resource data received at the client computing device in response to the sent request for mapping data may include a remote resources data list including a plurality of references to remote data resources.

In a still further embodiment a remote mapping system may comprise a processor and a memory in communication with the processor and storing a map controller including various instructions that may be executed by the processor. For example the instructions may include instructions causing the processor to receive a request for mapping data from a client computing device. Other instructions may cause the processor in response to the request to construct a vector describing first graphic features of a graphical map and to resolve a reference to remote resource data for second graphic features of the graphical map. The vector may include instructions for the client computing device to rasterize the first graphic features. Still other instructions may cause the processor to send the vector and the remote resource data from the remote mapping system to the client computing device. The remote resource data may be stored in a cache memory of the client computing device. The client computing device may be further configured to subsequently retrieve the stored remote resource data from the cache memory without further communication between the remote mapping system and the client computing device in response to sending a subsequent request for mapping data. The instructions may further cause the processor to receive the subsequent request for mapping data from the client computing device. The processor may then construct another vector describing first graphic features of the graphical map and determine if references to remote resource data for second graphic features of the graphical map have been previously resolved. When the references have been previously resolved the client computing device may be further configured to resolve the reference to the remote resource data by retrieving the remote resource data from the cache memory. The processor may also include instructions to send a remote resources data list to the client.

The figures depict a preferred embodiment for purposes of illustration only. One skilled in the art may readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein.

Embodiments of systems and methods for efficiently transferring remote resource data that is logically linked to map data from various remote resource data servers to a client device are discussed below. To render a map image in a web browser mapping application or another application the client device may request map data from the map server via a communication network and the map server in response may provide vector data that allows a mapping application executing on a mobile computing device to render map graphic content as well as remote resource data that describes other graphic content of the rendered vector data. More particularly vector data may specify various geometric shapes e.g. using mathematical descriptions for map features and indicate how these shapes should be positioned for rendering various map features such as roads buildings parks bodies of water etc. on the client computing device. Remote resource data may include graphic representations of common map items such as tree symbols road shields smart map icons etc. that may be commonly found on a wide variety of maps. The map server or the client may also specify which visual styles the client device should apply to various vector based descriptions of map features as well as the remote resource bitmaps.

A computer implemented method may pre fetch place remote resource data to a mapping application executing on a client computing device from various remote resources for subsequent display on the client computing device. The method may comprise analyzing a standard remote resources listing a user s historic uses of a mapping application preferences or other data to determine which remote resources to store in a cache memory of a mobile computing device. The remote resource data may include data to render graphic representations of items that are commonly depicted on maps. For example maps may be rendered in mobile computing devices using vector formatted data sent from a backend mapping system. Rather than sending a completely rendered map image to the mobile device a portion of the data within the vector may be data and instructions to cause a mapping application executing on the mobile computing device to rasterize or render the map image upon arrival at the device. Sending vector data reduces data transmission latency over sending a fully formatted map image.

Vector data to render the map using instructions of the mobile device mapping application may be useful when describing graphic items that are not consistent across the entire map image. For example vector data may describe a number of roads with turns and various changes across the map. However some map items are consistently repeated across the map and are more easily transmitted as complete images rather than data that causes the mobile device mapping application to render vector data multiple time. For example sending vector data may be most efficient to illustrate how a road changes across a map image but sending vector data to describe each instance of a road shield in a map image may be significantly less efficient. Thus data transmission latency may be reduced if map data is sent to a mobile computing device using a combination of instructions for the mapping application to rasterize some portions of the map and graphics to render other portions of the map that consistently repeat within the image.

Remote resource data in the form of consistently repeated graphic map items may be separately pre fetched or pre downloaded via a network connection before it is requested by the user so that this remote resource data is available independent of all or some of the memory burden of accompanying map tile data. For example data logically associated with the digital map data may include label or icon data for the various buildings roads and other graphic elements of the map. Other data may include remote resource data that provides commonly understood graphic representations of common map items such as road shields mass transit symbols park symbols and other graphic items. Remote resource data may be requested separately or at the same time as other vector based graphic elements of a map from various remote resource data servers via a network connection between a mobile computing device and the server. This remote resource data may then be stored in a cache memory of the mobile computing device i.e. an in memory cache an on disk cache etc. . The remote resource data may then be available at times of low connectivity between the mobile device and the server.

In some embodiments a user map search history a list of standard map icons or other information may be retrieved and analyzed to determine locations for remote resource data that may be useful for the user. The remote resource data may be pre fetched to the mobile device either at the request of a remote resource module at the mobile device or pushed to the mobile device by a backend server. Further an analysis of user activity system wide mapping search histories or other analyses may determine one or more graphic items that are likely to be needed to render a map. This analysis may be performed at the backend or the mobile device and may consider all or portions of data related to the user s geographic interests a standard list of common graphic items use histories or combination of data. In some embodiments the system may use data related to where the user spends most of his or her time map searches the user has performed via a mapping modules trips the user has planned a listing of standard map icons and their sources and the like.

A mapping system server which may be in the form of one or more servers may send and receive map tile data from a map tile data repository and a remote resource data list from a remote resource data repository that identifies common graphical features of the map tile data . In some embodiments the mapping system and the system server may send computer executable instructions and data to allow the mapping module to render a digital map in a display component of the client device . While using the mapping module a user may cause instructions of the module to be executed to show his or her location perform a map search or other action using the mapping module . User actions with the module may build a user mapping history A that describes past locations the user has been searches the user has performed interests favorite restaurants locations etc. For example after a map search result is returned to the device as described below a user may cause the mapping module to execute instructions to flag a particular location e.g. address map feature GPS point etc. within the returned search result as a favorite or otherwise indicate that a particular map location is preferred by the user. Geographic locations for which the user has indicated a preference e.g. mapping module search results favorites hometown favorite cities planned trips etc. may be collected at the device and instructions of the mapping system may be executed to build a mapping module history A indicating locations at which the user is likely to request data from the mapping server .

In some embodiments a remote resource data list may be determined at the client device or retrieved and pulled from various sources. The remote resource data list may indicate the common remote resources that a user needs to fully render a map at the device . For example a remote resources module may execute instructions to determine or collect resource identifications or references corresponding to remote resources that are typically displayed on maps at the client computing device e.g. from the mapping history A . The remote resource data list may also be collected from a variety of applications and modules executing on the client device or in communication with the device e.g. a mapping application a web browser a user activity tracking module a trip planning module an email module a social networking system etc. and stored in a remote resources data module . The data may include a list of remote resource locations e.g. uniform resource locators or URLs for graphical resources that typically appear within maps that are rendered on the device e.g. an urban user may render maps with mass transit and highway shield icons much more often than a rural user . The data may also include common icons associated with favorite locations a user saves during execution of a mapping module a list of remote resources that is standard for all users of the mapping module and maintained in a backend component etc. The remote resources list may also be analyzed at the client device to determine a user s geographic and personal interests to determine common graphical features that may be pre fetched and stored in a cache memory of the device for later use by the mapping module when rendering a map that includes those features.

In another embodiment that determines remote resources data at the backend remote resources data A may be collected from various online resources and pushed to the client device . The remote resources data A may be collected from a variety of online resources linked to the mapping system . For example a backend server may include a module with instructions that upon execution collect information related to the location of remote resources A as indicated in a remote resource data list . Remote resource data may then be pre fetched from a remote resource data repository or the various repositories for the graphic items that are consistently repeated across maps and that are likely to be rendered by the user at the mobile device . Those resources A may then be displayed to a user during a period of low connectivity to the mapping system or at any other time. Other embodiments may determine remote resource data A for cache storage at a user s mobile device using a combination of front end and backend components.

In response to a request from a client computing device the mapping system may process and send graphics text and other data for a map image to be displayed on a client computing device . A client device request may also cause the mapping system to send remote resource data A that may be displayed with the graphic map tile data or be linked to the displayed map tile data . The graphic components i.e. map tile data remote resources data A and text or other data may be processed and sent to the device together or separately. When the client computing device requests data A from the mapping system the system may generate each map tile with or without remote resource data A according to a vector graphics format. The client device e.g. a mobile phone tablet computer etc. may locally rasterize the vector data corresponding to each map tile for display at the device .

In an embodiment the system retrieves the requested data from various servers. For example the mapping system server may include a processor and a computer readable memory that stores a map controller in the form of computer instructions for example that may be executable on the processor directly e.g. as compiled code or indirectly e.g. as a script interpreted by another application executing on the processor . The computer readable memory may include volatile memory to store computer instructions and data on which the computer instructions operate at runtime e.g. Random Access Memory or RAM and in an embodiment persistent memory such as a hard disk for example. In an embodiment the map controller includes a dynamic feature controller that generates vector data for various map elements that are provided as map content to the client device . As used herein a map feature or simply feature may correspond to an individual map element such as a building or an aggregation of several map elements such as several buildings a park and several pedestrian paths of a college campus. In general a map feature may be described using vector data. Remote resource data A may include graphic elements that are consistently and repeatedly displayed within a map such as road and highway shields trees public transportation indicators business type indicators e.g. a restaurant location may display an image of a crossed fork and knife a bank may display an image of a dollar sign etc. .

In some embodiments the mapping module receives data that specifies both graphical characteristics of map features as well as remote resource data A or references to the remote resource data A that includes images of the consistently repeated elements of a map in response to a request for mapping data from the remote mapping system . The received data may include vector data that specifies the map features as geometric shapes using mathematical descriptions of points and paths connecting the points. For example rather than specifying each pixel that makes up a raster image of a line segment vector data may specify the two endpoints of the line segment and indicate that the two endpoints are connected by a straight line. The mapping module then may apply style and other data as appropriate to the specified line segment so that the line segment is displayed with a particular title description etc. As another example the vector data may specify the contour of a building and corresponding text data may specify the name description web page contact information address etc. of the building. In other words rather than receiving raster images from the map server the mapping module may receive instructions for drawing a map image on an output device of the client computing device and execute the instructions to generate a raster map image.

In some cases however data received in response to a mapping system request may include raster images e.g. bitmaps JPEGs etc. or references to raster images e.g. a URL to a bitmap of a standardized highway road shield from a governmental or road safety server as certain component elements that cannot be easily represented in a vector format or are more suitable to be formatted as a URL within the vector that points to a raster image remote resource. As described above a remote resource data list may include types and locations of remote resources that may be included within data from the mapping system or another remote resource that sends map tile data to the mobile computing device . For example the remote resource data list may include a URL to a consistently repeated raster image of a highway shield. The URL may point to a federal highway server that maintains standard images for such shields. The URL may also point to images maintained as a resource of the mapping system . For example the mapping system may maintain raster images for the consistently repeated graphics for mapping system requests as described herein.

For simplicity the client device is illustrated with a single processor to execute various modules stored in the device memory as described herein. The client device in other embodiments may include additional processing units not shown such as a graphics processing unit GPU configured to facilitate image rendering on the output device for example. Further the mapping module may utilize a library of graphics functions for efficiently generating a map image as well as remote resource data A. For example the memory may store a plugin such as an OpenGL or Direct3D library having functions for rendering graphics which various applications executing on the client including the mapping module may access via an application programming interface API . In another embodiment the memory stores a plugin particularly suitable for browser applications such as WebGL for example. Also in some embodiments the memory stores additional software components that facilitate efficient rendering of images and remote resource data A via the output device . For example the memory may store an Adobe Flash plugin or an O3D plugin.

With reference to a map controller may include various functions and operate as a module in the memory of the client computing device or in the server of for example or the various functions may be split among the client computing device and the server as described above to format receive and process requests for mapping data from the system and return the data to a client computing device. According to an embodiment the map data controller is implemented as a set of instructions that are stored on a computer readable medium and executable on one or more processors. For example referring back to the map data controller and its various functions may be distributed among the memories and processors .

According to an embodiment the map controller includes a dynamic feature controller a map tile generator a remote resource data generator and a map request processor . The map request processor may be configured to process requests from client devices such as the client device for map data and or remote resource data A corresponding to specified or user preferred geographic regions. Each request may correspond to a single electronic message or a series of electronic messages depending on the scenario and or embodiment. For example the map request processor may receive a request for map data corresponding to a two mile wide region centered at latitude 41 52 43 and longitude 87 38 11 . The map request processor may also receive a request for remote resource data A corresponding to consistently repeated graphic elements within maps requested from the system generally or from a user specifically. The map request processor may receive a request for map data that includes feature data in a vector format and remote resource data A in a single electronic message e.g. a single HTTP message or in separate electronic messages. For example an HTTP message may include data for a map feature e.g. a road building park etc. that corresponds to a feature identification as well as a resource reference e.g. a URL that corresponds to a resource reference ID .

After the map request processor receives a request for map data including from a client device the map controller provides appropriate data to the client device via one or more electronic messages . In some embodiments the map request processor may include instructions to determine what type of data is being requested and execute a function call to one or more of the map tile generator or the remote resource data generator to retrieve the requested data from the appropriate data repository . The map tile generator may include instructions to generate map data as a set of map tile descriptors such that each map tile descriptor describes a map tile i.e. a portion of a map image of a certain size e.g. 256 by 256 pixels . The size of a geographic region represented by an individual map tile depends on the zoom level with which the map tile is associated so that a single map tile at a lower zoom level illustrates a larger geographic area than a single map tile at a higher zoom level. The map tile generator may generate each map tile descriptor according to a vector graphics format and a client device such as the client device of may locally generate a raster image for each tile. The map tile generator may retrieve the requested data from a map database such as the map tile database . Similarly the remote resource data generator may retrieve remote resource data A in conjunction with the response to the request for map data. In some embodiments the remote resource data generator includes instructions to determine remote resource data A from a remote resource data listing retrieve the remote resource data A corresponding to one or more entries on the listing and push or pull remote resource data A from one or more data repositories . In other embodiments the remote resource data generator includes instructions to determine a resource reference e.g. a URL for remote resource data A from the remote resource data listing and push or pull the resource reference from the listing to the client device where the client device executes another instruction to retrieve the remote resource data A from the backend repositories . The remote resource data generator may also include instructions to push or pull remote resource data A that corresponds to one or more of the requested geographic region or a map search history A along with the data referenced by the listing . For example where user history data or other data indicates that the user typically requests map tile data for urban areas the map request processor may employ the map tile generator and the remote resource data generator to push pull remote resource data corresponding to consistently repeated remote resource data A for urban areas. Likewise the system may push pull remote resource data A to the computing device according to the remote resource data list .

When providing graphic map data to a client device the map controller may separate map tile data from remote resource data A. In some cases the map controller may provide vector data that describes map content without providing the corresponding remote resource data A to the client device at the same time if for example the client device already has the necessary remote resource data or conversely may provide remote resource data A without providing the vector data in satisfaction of a specific request for graphical map content to which the remote resource data A applies for rendering a geographic region at a more detailed zoom level and using remote resource data A that was sent with a previous request for the geographic region at a different zoom level for example . Further in some scenarios the map controller provides vector data and remote resource data A at the same time e.g. in a same electronic message or a series of electronic messages . For example when the map request processor receives a request for map data and queries the map data repository for map tile data the remote resource data generator may query the remote resource data repositories for remote resource data A that corresponds to the geographical area of the requested map tile data . As with the map tile data the amount of remote resource data corresponding to the requested map data may depend on the zoom level with which the map tile is associated. For example a single map tile at a lower zoom level illustrates a larger geographic area and thus corresponds to more remote resource data A than a single map tile at a higher zoom level. In some embodiments the remote resource data generator may query the remote resource data repository for only the data A that is visible at the zoom level of the requested map data . In other embodiments the remote resource data generator may query the repository for more data that corresponds to other zoom levels than would be visible at the zoom level of the requested map data . Furthermore the remote resource data generator may query the repository for data that corresponds to expressed or predicted user interests before the data is explicitly requested by a user. The remote resource data generator may then insert the retrieved remote resource data A in the vector containing the requested map tile data or may send the data A separately from the map tile data . The client device may locally rasterize the vector data for each tile including the data and store the retrieved remote resource data in a cached memory of the device .

The dynamic feature controller may be communicatively coupled to the map tile generator and remote resource data generator and configured to determine which map elements are associated with the requested map data and generate vector based or other descriptions of these map elements. For example the dynamic feature controller may determine that in response to a request for map data corresponding to zoom level Zi for a certain geographic region vector descriptors corresponding to interstate highways large bodies of water etc. must be generated whereas in response to another request for map data corresponding to zoom level Zj for the same geographic region additional vector data corresponding to local roads and buildings must be generated along with additional remote resource data A corresponding to a larger area view of the map. Further in some cases the dynamic feature controller generates different sets of vector data and remote resource data A for different map types. For example a terrain map may include map elements that are not included in a basic map for the same geographic region and zoom level.

In some embodiments the remote resources system may include a remote resources system server that includes a module with instructions executable by a processor to receive or retrieve a remote resources data list from the mapping system or a user mapping history A from the device . The remote resources data list may indicate locations or sources for remote resources data A. For example the remote resources module may be in communication with the mapping system . At periodic intervals e.g. daily weekly etc. or when the list is updated at the mapping system the list may be pushed to the device from the system . The remote resources module may then execute instructions to retrieve the resource data A from the resources and store the data A in a cache memory for future use by the mapping module . In other embodiments the mapping system may respond to requests for mapping system data from the computing device with messages including both feature data and resource references . The remote resources module may then execute instructions to retrieve and store the resource data A as described herein. In still other embodiments the mapping system may use the list at the backend to retrieve the data A from the resources to periodically push the remote resource data A to the remote resources module for storage in the cache memory .

In further embodiments the remote resources module or the remote resources system may periodically analyze a mapping module history A to determine remote resource data A that the user is likely to need to display maps in future map searches or other uses of the mapping module . The module may then cause the processor to execute instructions to pull the data A from the remote resources for storage in the cache memory . For example with reference to where the system determines that the user will likely request data for urban areas the module may pull remote resource data A corresponding to more urban graphic objects for an urban map e.g. road shields highway exit indicators business indicators mass transit indicators landmarks etc. . Similarly with reference to where the system determines that the user will likely request data for rural areas the module may pull remote resource data A corresponding to more rural graphic objects for a rural map e.g. trees lakes camping indicators etc. .

The mapping data that makes up a raster image of a complete map i.e. a map image including the rasterized vector data the remote resource data and the raster data on a client computing device may be logically linked among various data sources. For example map tile data stored within the map tile data repository may be logically linked to the various mapping data for example the remote resource data A of the remote resource data repository or repositories . In some embodiments a first feature including a graphic component described by vector data may be logically linked to a second feature including a graphic component described by a reference to remote data and or a raster image . For example a map tile feature of a road that is described by vector data may be logically linked to a road shield e.g. US 95 etc. that is described by a reference to remote data or a raster image . Once the system resolves the reference data or receives the raster data the reference data or a raster image corresponding to the reference and the raster data may be stored in cache memory . Thus if a subsequent request for mapping data may satisfied by map tile data including features described by vector data that corresponds to reference or raster data that was previously stored in the cache the module may retrieve the cached data without further communication between the remote mapping system and the client computing device .

The location data may include particular coordinates that describe the specific geographic location of the map tile that represents a geographic area. In some embodiments the location data includes a plurality of boundaries such as a north south east and west boundary for the map tile . The location data may include latitude and longitude coordinates as determined by a global positioning system GPS or other system that is able to determine where the geographic location or physical object is located.

At block the mapping module of the user device may execute an operation. For example the module may execute a function call to the mapping system to execute a search routing or other operation to cause a message to be sent to the device with is then processed by a mapping module to display a map within a display component of the device . Once the mapping system receives the function call via the network the system may execute instructions to retrieve mapping system data to fulfill the received request. In some embodiments the mapping system builds a message including feature vector data and a resource reference in response to the request.

At block the method may determine the remote resource data A. In some embodiments the block may include instructions that cause the mapping module to use the feature vector data to rasterize a map feature. At block the module may use the resource ID and or the resource reference to determine if resource data A corresponding to the ID and or reference is stored in cache memory of the device . If the data A has been previously stored in the cache memory then block may cause instructions to be executed to rasterize the feature vector data and display the map with the data A from the cache . If the data A is not in the cache then block may cause instructions to be executed to retrieve the data A from the remote resources system or another remote resource. Once retrieved block may cause instructions to be executed to store the remote data A in the cache memory rasterize the feature vector data and display the map with the remote resource data A that was stored in the cache .

With reference to another method may determine the remote resource data A and push or pull the data A to the device for future use by the module in response to a periodic push pull operation rather than a specific search or other user initiated mapping module operation. At block a frontend or backend component may determine the references of a remote resources list . In some embodiments a remote resource module on the mobile device may query the backend mapping system for a remote resources data list at block and resolve references on the list to retrieve remote resource data A to the device at block . For example the mapping system server may receive a request for the list and execute instructions to send the list itself or one or more references from the list to the device at block . The device may then use the references to execute further instructions to request the remote resources data A from the various remote repositories of the remote resources system at block . The device may thus pull the data A to the device at block . In further embodiments the mapping system server may receive a request for the list and execute instructions to resolve each reference on the list at block . The backend server may then execute further instructions to retrieve the remote resources data A from the various remote repositories of the remote resources system at block . Thus the server may push the data A to the device at block .

Whether the data A is pushed or pulled to the device the device may execute instructions to determine whether the data A was previously stored in the cache at block . In some embodiments the module may use a resource ID and or a resource reference to determine if resource data A corresponding to the ID and or reference is stored in cache memory of the device . If the data A has been previously stored in the cache memory then the method may end. When the stored data A is needed for a future search or other operation using the mapping module then the mapping module may retrieve the data A from the cache . If the data A is not in the cache then block may cause instructions to be executed to store the data A in the cache for future use by the mapping module . At block the method may cause instructions to be executed for updating the remote resources list or another listing to indicate that the retrieved data A has been stored in the cache .

As shown in the computing device includes a processor that is coupled to an interconnection bus . The processor includes a register set or register space which is depicted in as being entirely on chip but which could alternatively be located entirely or partially off chip and directly coupled to the processor via dedicated electrical connections and or via the interconnection bus . The processor may be any suitable processor processing unit or microprocessor. Although not shown in the computing device may be a multi processor device and thus may include one or more additional processors that are identical or similar to the processor and that are communicatively coupled to the interconnection bus .

The processor of is coupled to a chipset which includes a memory controller and a peripheral input output I O controller . As is well known a chipset typically provides I O and memory management functions as well as a plurality of general purpose and or special purpose registers timers etc. that are accessible or used by one or more processors coupled to the chipset . The memory controller performs functions that enable the processor or processors if there are multiple processors to access a system memory and a mass storage memory including the cache memory that may include either or both of an in memory cache e.g. a cache within the memory or an on disk cache e.g. a cache within the mass storage memory .

The system memory may include any desired type of volatile and or non volatile memory such as for example static random access memory SRAM dynamic random access memory DRAM flash memory read only memory ROM etc. The mass storage memory may include any desired type of mass storage device. For example if the computing device is used to implement a mapping application having an API and a remote resource module including instructions as described by the method of the mass storage memory may include a hard disk drive an optical drive a tape storage device a solid state memory e.g. a flash memory a RAM memory etc. a magnetic memory e.g. a hard drive or any other memory suitable for mass storage. As used herein the terms module block function operation procedure routine step and method refer to tangible computer program logic or tangible computer executable instructions that provide the specified functionality to the computing device and the mobile mapping system . Thus a module block function operation procedure routine step and method can be implemented in hardware firmware and or software. In one embodiment program modules and routines e.g. the mapping application the API the remote resources module etc. are stored in mass storage memory loaded into system memory and executed by a processor or can be provided from computer program products that are stored in tangible computer readable storage mediums e.g. RAM hard disk optical magnetic media etc. . Mass storage may also include a cache memory storing pre fetched remote resource data graphics and other data for use by the mapping application and remote resources module .

The peripheral I O controller performs functions that enable the processor to communicate with peripheral input output I O devices and a network interface a cellular network transceiver a local network transceiver and a GPS transceiver via the network interface via a peripheral I O bus . The I O devices and may be any desired type of I O device such as for example a keyboard a display e.g. a liquid crystal display LCD a cathode ray tube CRT display etc. a navigation device e.g. a mouse a trackball a capacitive touch pad a joystick etc. etc. The I O devices and may be used with the mapping application and user activity module to receive GPS data from the GPS transceiver send the GPS data to the backend components of the system render and display maps and user interfaces as described in relation to the figures. A cellular telephone transceiver may be resident with the local network transceiver . The local network transceiver may include support for a Wi Fi network Bluetooth Infrared or other wireless data transmission protocols. In other embodiments one element may simultaneously support each of the various wireless protocols employed by the computing device . For example a software defined radio may be able to support multiple protocols via downloadable instructions. In operation the computing device may be able to periodically poll for visible wireless network transmitters both cellular and local network on a periodic basis. Such polling may be possible even while normal wireless traffic is being supported on the computing device . The network interface may be for example an Ethernet device an asynchronous transfer mode ATM device an 802.11 wireless interface device a DSL modem a cable modem a cellular modem etc. that enables the system for pre fetching remote resource data to communicate with another computer system having at least the elements described in relation to the system .

While the memory controller and the I O controller are depicted in as separate functional blocks within the chipset the functions performed by these blocks may be integrated within a single integrated circuit or may be implemented using two or more separate integrated circuits. The mobile mapping system may also implement the mapping application and remote resources module on remote computing devices and . The remote computing devices and may communicate with the computing device over an Ethernet link . For example the computing device may receive mapping data created by a mapping application executing on a remote computing device . In some embodiments the mapping application and or the remote resources module may be retrieved by the computing device from a cloud computing server via the Internet . When using the cloud computing server the retrieved mapping application and or the remote resources module may be programmatically linked with the computing device . The mapping application and or the remote resources module may be a Java applet executing within a Java Virtual Machine JVM environment resident in the computing device or the remote computing devices . The mapping application and or the remote resources module may also be plug ins adapted to execute in a web browser located on the computing devices and . In some embodiments the mapping application and or the remote resources module may communicate with back end components such as the mapping system and remote resources system via the Internet .

Using the systems and procedures described above the system for pre fetching remote resource data and mapping system can retrieve and analyze data from a computing device corresponding to a resource that is remote from the mapping system . Mapping module search histories A preferences a remote resource data listing user initiated mapping module operations or other data may be analyzed to determine references corresponding to remote resource data. The references e.g. URLs and other references indicating a location for remote resources that are displayed within maps that are rasterized by the mapping module may be resolved and data A corresponding to the references may be stored in a cache memory of the device . Of course the systems described herein may present a user with a user interface from which the user is able to opt out of any of the user search histories or personal preferences and remote resources data pull push and cache storage methods described herein.

The system may include but is not limited to any combination of a LAN a MAN a WAN a mobile a wired or wireless network a private network or a virtual private network. Moreover while only three remote computing devices and are illustrated in to simplify and clarify the description it is understood that any number of client computers are supported and can be in communication within the system .

Additionally certain embodiments are described herein as including logic or a number of components modules or mechanisms. Modules may constitute either software modules e.g. code or instructions embodied on a machine readable medium or in a transmission signal wherein the code is executed by a processor or hardware modules. A hardware module is tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments one or more computer systems e.g. a standalone client or server computer system or one or more hardware modules of a computer system e.g. a processor or a group of processors may be configured by software e.g. an application or application portion as a hardware module that operates to perform certain operations as described herein.

In various embodiments a hardware module may be implemented mechanically or electronically. For example a hardware module may comprise dedicated circuitry or logic that is permanently configured e.g. as a special purpose processor such as a field programmable gate array FPGA or an application specific integrated circuit ASIC to perform certain operations. A hardware module may also comprise programmable logic or circuitry e.g. as encompassed within a general purpose processor or other programmable processor that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a hardware module mechanically in dedicated and permanently configured circuitry or in temporarily configured circuitry e.g. configured by software may be driven by cost and time considerations.

Accordingly the term hardware module should be understood to encompass a tangible entity be that an entity that is physically constructed permanently configured e.g. hardwired or temporarily configured e.g. programmed to operate in a certain manner or to perform certain operations described herein. As used herein hardware implemented module refers to a hardware module. Considering embodiments in which hardware modules are temporarily configured e.g. programmed each of the hardware modules need not be configured or instantiated at any one instance in time. For example where the hardware modules comprise a general purpose processor configured using software the general purpose processor may be configured as respective different hardware modules at different times. Software may accordingly configure a processor for example to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.

Hardware modules can provide information to and receive information from other hardware modules. Accordingly the described hardware modules may be regarded as being communicatively coupled. Where multiple of such hardware modules exist contemporaneously communications may be achieved through signal transmission e.g. over appropriate circuits and buses that connect the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times communications between such hardware modules may be achieved for example through the storage and retrieval of information in memory structures to which the multiple hardware modules have access. For example one hardware module may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware module may then at a later time access the memory device to retrieve and process the stored output. Hardware modules may also initiate communications with input or output devices and can operate on a resource e.g. a collection of information .

The various operations of example methods described herein may be performed at least partially by one or more processors that are temporarily configured e.g. by software or permanently configured to perform the relevant operations. Whether temporarily or permanently configured such processors may constitute processor implemented modules that operate to perform one or more operations or functions. The modules referred to herein may in some example embodiments comprise processor implemented modules.

Similarly the methods or routines described herein may be at least partially processor implemented. For example at least some of the operations of a method may be performed by one or processors or processor implemented hardware modules. The performance of certain of the operations may be distributed among the one or more processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the processor or processors may be located in a single location e.g. within a home environment an office environment or as a server farm while in other embodiments the processors may be distributed across a number of locations.

The one or more processors may also operate to support performance of the relevant operations in a cloud computing environment or as a software as a service SaaS . For example at least some of the operations may be performed by a group of computers as examples of machines including processors these operations being accessible via a network e.g. the Internet and via one or more appropriate interfaces e.g. application program interfaces APIs . 

The performance of certain of the operations may be distributed among the one or more processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the one or more processors or processor implemented modules may be located in a single geographic location e.g. within a home environment an office environment or a server farm . In other example embodiments the one or more processors or processor implemented modules may be distributed across a number of geographic locations.

Some portions of this specification are presented in terms of algorithms or symbolic representations of operations on data stored as bits or binary digital signals within a machine memory e.g. a computer memory . These algorithms or symbolic representations are examples of techniques used by those of ordinary skill in the data processing arts to convey the substance of their work to others skilled in the art. As used herein an algorithm is a self consistent sequence of operations or similar processing leading to a desired result. In this context algorithms and operations involve physical manipulation of physical quantities. Typically but not necessarily such quantities may take the form of electrical magnetic or optical signals capable of being stored accessed transferred combined compared or otherwise manipulated by a machine. It is convenient at times principally for reasons of common usage to refer to such signals using words such as data content bits values elements symbols characters terms numbers numerals or the like. These words however are merely convenient labels and are to be associated with appropriate physical quantities.

Unless specifically stated otherwise discussions herein using words such as processing computing calculating determining presenting displaying or the like may refer to actions or processes of a machine e.g. a computer that manipulates or transforms data represented as physical e.g. electronic magnetic or optical quantities within one or more memories e.g. volatile memory non volatile memory or a combination thereof registers or other machine components that receive store transmit or display information.

As used herein any reference to some embodiments or an embodiment means that a particular element feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in some embodiments in various places in the specification are not necessarily all referring to the same embodiment.

Some embodiments may be described using the expression coupled and connected along with their derivatives. For example some embodiments may be described using the term coupled to indicate that two or more elements are in direct physical or electrical contact. The term coupled however may also mean that two or more elements are not in direct contact with each other but yet still co operate or interact with each other. The embodiments are not limited in this context.

Further the figures depict preferred embodiments of a system for pre fetching remote resource data for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein

Upon reading this disclosure those of skill in the art will appreciate still additional alternative structural and functional designs for a system and a process for pre fetching remote resource data for subsequent display on a mobile computing device through the disclosed principles herein. Thus while particular embodiments and applications have been illustrated and described it is to be understood that the disclosed embodiments are not limited to the precise construction and components disclosed herein. Various modifications changes and variations which will be apparent to those skilled in the art may be made in the arrangement operation and details of the method and apparatus disclosed herein without departing from the spirit and scope defined in the appended claims.

