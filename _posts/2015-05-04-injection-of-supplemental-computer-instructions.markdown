---

title: Injection of supplemental computer instructions
abstract: Application computer instructions can be provided to a publishing server. The publishing service can parse the application computer instructions to identify one or more locations where supplemental computer instructions can be inserted. Metadata about purchasable items can be obtained and the supplemental computer instructions can be written based on the item metadata. The supplemental computer instructions can be inserted into the application computer instructions. A publishable application can be created by compiling the application computer instructions with the inserted supplemental computer instructions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09465592&OS=09465592&RS=09465592
owner: Amazon Technologies, Inc.
number: 09465592
owner_city: Seattle
owner_country: US
publication_date: 20150504
---
This application is a continuation of U.S. patent application Ser. No. 13 797 233 filed on Mar. 12 2013 the entire contents of which are incorporated herein by reference in its entirety.

Mobile applications are used on many computing devices. As the number of mobile computing devices such as laptop computers tablets cell phones and the like increases the usage of such applications also increases. Applications have been developed for a wide range of functions. For example email client applications can provide users with the ability to compose send and receive email messages on the computing device social network applications can allow users to interact within a social network from the computing device gaming applications can allow a user to play a game on the computing device and or participate in an online multiplayer game using the computing device music and audio applications can allow a user to listen to and or edit music and audio on the computing device photo and video applications can allow a user to capture and or edit pictures and video and so forth. Each application provides a user of the mobile device with some functionality. Users can install any number of different applications on a computing device.

Applications operating on a computing device can provide users with functionality. However many applications particularly those for mobile computing devices are limited to a specific set of functions. For example the maker of sports apparel may create an application for users to track their fitness activities. The fitness activities application may provide users with the ability to enter and store fitness activity information to track routes of runs and hikes and the like. However the fitness activity application may not have capabilities to take customer orders for sports apparel. Adding additional features to an application such as the ability to take customer orders for sports apparel in the fitness activity application example may require the application developer to put into place additional resources such as a server to fulfill customer orders that it does not have in place.

A developer of an application can take advantage of a third party sales service by interfacing with a sales service. For example a sales service can provide developers with tools in a software development kit SDK or an application programming interface API that enables the developer to include within the application functionality to interface with the sales service. The SDK or API can provide tools that permit an application to interact with a server associated with the sales service. The SDK or API can also provide tools that permit an application running on a computing device to interact with sales application running on the same computing device where the sales application can act as an intermediary between the developer s application and the sales service. Providing an SDK or an API to application developers can be costly for a sales service. The sales server must invest resources to develop the SDK or API to educate large numbers of developers how to use the SDK or API to assist developers to troubleshoot problems when their applications fail to properly interface with the sales service and so forth.

Instead of providing an SDK or an API to developers a sales service can inject computer instructions for sales functionality into a developer s application. Computer instructions can include one or more instructions that can be executed by a computing device. Computer instructions can include computer readable instructions computer executable instructions source code compiled code byte code binary code applet assembly language and the like or any combination thereof. Computer instructions can be written in an established programming language such as Java C C Perl JavaScript and the like. Mobile applications in particular can be written as native applications platform generic applications or hybrid applications. Native mobile applications are specific to a particular mobile platform such as iOS or ANDROID. Such applications use development tools and language supported by the mobile platform such as Xcode and Objective C with iOS Eclipse and Java with ANDROID and the like. Platform generic applications can be written using languages that are generic to the mobile platform such as HTML HTML5 JavaScript CSS and the like. Such applications can be distributed across a range of mobile platforms though they may not be able to take full advantage of the specific capabilities of each mobile platform. Hybrid applications can include some platform generic computer instructions such as instructions written in HTML5 embedded inside of platform specific computer instructions. Such hybrid applications are able to take advantage of specific functionality of the mobile platform while the platform generic portion can be used across mobile platforms.

In one embodiment the developer can register with a developer portal of the sales server items that will be available for purchase via the developer s application. The developer can submit an application for distribution. The sales service can inspect the application s computer instructions decompiling the computer instructions if necessary. When inspecting the computer instructions the sales service can identify locations in the computer instructions where sales capability can be inserted. The sales service can inject computer instructions into the application that is configured to perform all sales functions associated with taking user orders for the developer s registered items. In this manner the sales service itself will include the sales functionality into the application s computer instructions thereby eliminating the need for the developer to understand how to add sales functionality to the application s computer instructions. In another embodiment the developer can set certain configurable options for the appearance of the sales functionality within the computer instructions. When the sales service injects computer instructions into the application the sales service can modify the sales computer instructions according to the options set by the developer.

Computing device can also include one or more hard buttons integrated into housing . In one embodiment the one or more hard buttons can include a single button such as a home button or a power button. In another embodiment the one or more hard buttons can include a small set of buttons such as a power button a home button and a back button. In yet another embodiment the one or more hard buttons can include a large set of buttons such as a full QWERTY keyboard a keypad and the like. The one or more hard buttons can be part of the user interaction system of the computing device .

Computing device can also include a speaker configured to emit sounds and a microphone configured to receive sounds. In the embodiment where computing device is a cell phone speaker and microphone can be used to carry on a telephone call. In one embodiment speaker can be configured to play sounds associated with graphics displayed on display such as during play of audiovisual material on computing device . In another embodiment microphone can receive audio sounds which the computing device can interpret as user inputs. In addition while not depicted in computing device can also include an audio port which can be connected to an external microphone and or an external speaker or speakers. Computing device can send and receive audio signals via the audio port and interpret the received audio signals via the audio port just as it would interpret audio signals generated from sounds received by the microphone .

Computing device can also include one or more optical devices . In one embodiment an optical device can include an optical sensor such as an infrared sensor a visible light sensor and or any device that can sense light and or electromagnetic energy. The detection of light and or electromagnetic energy can be used by the computing device to control components of the computing device such as a level of light emitted by a backlight of display illumination of one or more hard keys and any other aspect of computing device . In another embodiment an optical device can include an image capturing device such as a digital camera. An image capturing device can include any device configured to capture an image such as a complementary metal oxide semiconductor CMOS active pixel sensor APS and a charged coupled device CCD . Images captured by one or more optical devices can be stored by the computing device as an individual image or as a series of images in a video. Individual images and or video images can be processed by computing device and interpreted as user inputs. While depicts one optical device pointing in the same direction as the display it is possible for computing device to have any number of optical devices and it is possible for one or more optical devices to be pointed in other directions such as a rear facing camera pointing in the opposite direction of display .

Computing device can include at least one power source . Power source can provide power to any or all of the other components in computing device . As depicted in power source can be connected to and provide power to each of processor memory display network interface and user interface . Power source can be any type of power source such as one or more disposable batteries a rechargeable battery and the like. In the embodiment where computing device is a portable device such as a laptop computer a tablet computer a cell phone a hand held computer and the like the power supply may need to provide power for a period of time between recharging of the power source . In other embodiments computing device can be a desktop computer workstation server or other non portable device that is typically connected to an external power source any time that computing device is active. With such non portable computing devices certain elements such as a display user interface components and the like may also be external to the computing device.

In one embodiment to arrive at the arrangement of the user interfaces shown in the first user interface could have been completely visible showing a shirt and other clothing. The depiction in the first user interface could have included information about the clothing such as the brand and name of the clothing e.g. LEVI available colors or styles type of fabric and the like. When the user selects an item of clothing such as shirt that item can be highlighted as is shown by the fill on shirt of first user interface . Selecting an article of clothing in first user interface can cause the second user interface to be overlaid over some or all of the first user interface . The second user interface can include a depiction of the selected item in the first user interface . The second user interface can also include other elements such as text boxes drop down boxes command buttons and the like to provide additional functionality for the user. In the embodiment depicted in the second user interface includes drop down boxes to select a color a size and a quantity of the selected shirt as well as command buttons for enabling a user to make a purchase or close the second user interface .

Referring now to depicted are embodiments of applications operating on a computing device and interacting with a sales server. The system depicted in includes a computing device and a sales server connected via a network . Computing device includes an operating system and at least one application . Application can be a sales application provided by an operator of sales server . Sales application can operate as a stand alone application providing a user with functionality to search for available products and make purchases of those products. Sales application can communicate with sales server to submit search terms and or queries for available products to identify available products and information about available products to receive recommendations about additional products that may be of interest to a user to transmit purchase requests for fulfillment and the like.

Application can also be a third party application. Third party application can be developed and produced by an entity other than a sales entity associated with sales server . Third party application can be any type of application such as an email client application a social network application a gaming application a music audio application a photo video application or any other type of application. In one embodiment an operator of sales server can provide application developers such as a developer of third party application with tools in an SDK or an API that enable third party application to interface with sales server . The SDK or API can provide tools for the third party application to communicate with sales server to obtain any or all of the information functionalities and features of sales server .

Sales server can include one or more computing devices configured to communicate with application to service inquiries from application about available products to fulfill product order purchases and the like. In addition to being configured to communicate with application sales server can also be configured to host one or more websites that are accessible via a conventional web browser operating on a computing device. When sales server receives an order for a product it can initiate a process to charge an account of the user for the amount of the purchase price and to ship the product to the purchaser.

The system depicted in includes a computing device and a sales server connected via a network . Computing device includes an operating system and at least two applications and . Application can be a sales application provided by an operator of sales server . Sales application can operate as a stand alone application providing a user with functionality to search for available products and make purchases of those products. Sales application can communicate with sales server to submit search terms and or queries for available products to identify available products and information about available products to receive recommendations about additional products that may be of interest to a user to transmit purchase requests for fulfillment and the like. Sales server can include one or more computing devices configured to communicate with sales application to service inquiries from sales application about available products and to fulfill product order purchases.

Application can be a third party application. Third party application can be developed and produced by an entity other than a sales entity associated with sales server . Third party application can be any type of application such as an email client application a social network application a gaming application a music audio application a photo video application or any other type of application.

The sales application can serve as an intermediary between third party application and sales server . Doing so can allow a developer of the third party application to interface with sales server without having to know exactly how to interface with sales server . In one embodiment an operator of sales server can provide application developers such as a developer of third party application with tools in an SDK or an API that enable third party application to interface with sales application . The SDK or API can provide tools for the third party application to communicate with sales application to obtain any or all of the information functionalities and features of sales server .

Depicted in is an embodiment of a developer portal accessible by a developer computing device. The system depicted in includes a developer computing device and a developer portal connected via a network . Computing device can be any type of computing device such as a desktop computer a laptop computer a tablet computer a cell phone and the like. Network can include any type of wired network wireless network or any combination thereof. Developer portal can be hosted on one or more computing device that are accessible to network . In one embodiment developer portal can be hosted by a sales server and made available for interface with computing device via a website.

Developer portal can include a number of developer registries and . While three developer registries and are depicted in the developer portal can fewer or more than three developer registries. Each of the developer registries can be associated with one particular developer or a developer account. A developer account can be shared with multiple users. For example a company may have a single developer registry for use by the company with multiple developers having access to the one developer registry. The developer portal can require authentication before a user can access any one of the developer registries and . Authentication can include any or all of the entry of a user name and password the entry of a PIN the submission of a token passing of a cookie from user computing device verification of a biometric feature and the like. Once a user has been authenticated the developer portal can grant the user access to add edit or delete information from the appropriate developer registry.

A developer can include in developer registry any number of items to N. Each of the items can represent a product that is purchasable from the developer. In the developer registry each item can have metadata associated with the item . For example any one of items can include metadata such as any or all of a name a description a color a size a stock keeping unit SKU code a price and the like. Each item can also include an indication of one or more of the developer s applications in which the item will be available for purchase. The metadata associated with each of items can be sufficient to create computer instructions for offering the items for sale in an application. When a developer accesses developer registry the user can add new items delete existing items or edit existing items . Other developer registries and in developer portal can include their own items such as items to N and to N respectively. Those items and can be added to edited and deleted when the appropriate developer registry or is accessed.

A developer can include in developer registry any number of sets of store options to N. Each set of store options can represent settings for an application store front for which computer instructions can be injected into one or more of the developer s applications. For example a set of store options can include settings such as primary colors secondary colors window sizes fonts font sizes and the like. Each set of store options can also include an indication of one or more of the developer s applications in which a store front according to the set of store options will appear. Supplemental computer instructions can be developed for injection into the developer s application based on the set of store options . When a developer accesses developer registry the user can add new sets of store options delete existing sets of store options or edit existing sets of store options . Other developer registries and in developer portal can include their own set of store options such as set of store options to N and to N respectively. Those set of store options and can be added to edited and deleted when the appropriate developer registry or is accessed.

Depicted in is an embodiment of a user interface of a developer portal accessible for adding or editing items in a developer registry. depicts a web browser that includes a user interface of a developer portal for adding or editing items. The user interface includes a frame in which the item metadata can be entered and or modified. In the embodiment shown in the frame includes user interface elements including text boxes for entering a title of the item a description of the item one or more images of the item and one or more tags for the item. Frame also includes checkboxes for the user to select one of more of the user s applications in which the item will be available for sale. The user interface can include other elements such as the browse cancel and save command buttons depicted the text above frame and any other element. Item metadata entered into user interface can be stored by the developer registry.

Depicted in is an embodiment of a user interface of a developer portal accessible for adding or editing sets of application store front options in a developer registry. depicts a web browser that includes a user interface of a developer portal for adding or editing sets of application store front options. The user interface includes a frame in which store front options can be entered and or modified. In the embodiment shown in the frame includes user interface elements including text boxes for entering a name of the set of application store front options a primary color of the set of application store front options a secondary color of the set of application store front options and a font of the set of application store front options. Frame also includes checkboxes for the user to select one of more of the user s applications in which this set of application store front options will be used. Frame also includes a preview which depicts how the application store front may look when the appropriate computer instructions are incorporated into the user s application. The user interface can include other elements such as the cancel and save command buttons depicted the text above frame and any other element. The sets of application store front options entered into user interface can be stored by the developer registry.

Sales server includes a parser that can inspect the decompiled application computer instructions. The parser can identify locations within the decompiled computer instructions where supplemental computer instructions are to be injected. In one embodiment the parser can identify locations in the computer instructions that execute when certain events occur such as computer instructions that are executed when the application is launched computer instructions that are executed when the application resumes computer instructions that are executed when the application is stopped and computer instructions that are executed at other events. For example when the application is launched or resumed the computer instructions parser can identify that supplemental computer instructions should execute to refresh any item metadata so that the application also has the most recent version of any item metadata. In another embodiment the parser can identify locations in the computer instructions where the developer has indicated that supplemental computer instructions should be executed. For example the developer could insert a particular string of text into the application computer instructions that the parser recognizes as an indication that supplemental computer instructions should be executed the developer could insert a comment in the application computer instructions that the parser interprets as an indication that supplemental computer instructions should be executed and the like. In another embodiment the application computer instructions can include a call to execute supplemental computer instructions where the computer instructions associated with the call are not included in the application computer instructions. In another embodiment the parser can identify instances where the application computer instructions include computer instructions associated with a SDK or an API of the sales service. For example the computer instructions parser can identify computer instructions where the developer has used or attempted to use SDK or API functions so that those functions can be replaced by injected computer instructions. Any number of other embodiments of computer instructions locations where supplemental computer instructions are to be injected can be identified by the computer instructions parser .

Parser can send an indication to injection computer instructions generator of the injection computer instructions that is to be created. In one embodiment the parser can send injection computer instructions generator an indication of one or more locations in the application computer instructions where supplemental computer instructions are to be injected. For example the parser can send injection computer instructions generator an indication that computer instructions are to be injected in a location with application start up computer instructions in a location with application resume computer instructions or any other location. In another embodiment the parser can send injection computer instructions generator an indication of one or more types of supplemental computer instructions that are to be injected into the application computer instructions. For example the parser can send injection computer instructions generator an indication that computer instructions to refresh item metadata will be injected that computer instructions to launch an application store within the application user interface will be injected that computer instructions to process a user order will be injected or that any other type of sales computer instructions will be injected.

Injection computer instructions generator can create injection computer instructions based on the information received from the parser item metadata stored in developer portal and store options stored in developer portal . The injection computer instructions can include computer instructions that when included in the application computer instructions will allow the application to perform sales functions. In one embodiment the injection computer instructions can include all of the computer instructions necessary for the application to perform the sales functions on its own. In another embodiment the injection computer instructions can include computer instructions for the application to interact with a sales application operating on the same computing device to provide the sales functions. For example the injected computer instructions can include a call to a sales application on the same computing device to display a product purchase page for an item such as the product purchase page depicted in . In another embodiment the injection computer instructions can include computer instructions for the application to retrieve and or execute computer instructions residing on a remote computing device. For example in an example sometimes referred to as a cloud based solution some or all of the computer instructions needed to perform the sales functions can be located on a remote computing device that is accessible to the computing device on which the application is operating. In this example the injection computer instructions can include a call for the remote computing device to perform some function to provide some information or any other function. In another embodiment the injection computer instructions can include computer instructions for the application to interact with a second application such as a retail application operating on the same computing device. For example the injection computer instructions can include instructions for the application to request that a retail application retrieve item metadata related to one or more purchasable items or to request that a retail application display information about one or more purchasable items. One possible benefit of this example is that a developer could modify item metadata in a developer portal after an application has been released and the retail application can retrieve the updated item metadata each time the application requests that the retail application retrieve item metadata.

Sales server also includes a compiler . The compiler can receive the decompiled application computer instructions and the injection computer instructions and insert the injection computer instructions into the decompiled application computer instructions at the appropriate one or more locations. Once the injection computer instructions are inserted into decompiled application computer instructions the compiler can compile the computer instructions to produce compiled application computer instructions . Sales server may optionally test compiled application computer instructions to identify any issues from the computer instructions injection process. Sales server may also publish the compiled application computer instructions . Publication of the compiled application computer instructions may include making the compiled application computer instructions downloadable by consumer computing devices.

Depicted in are embodiments of a system and methods of injecting supplemental computer instructions into a developer s application. Each of depicts a system with a developer computing device a developer portal server and a publication server . The system also includes a network which enables developer computing device developer portal server and a publication server to independently communicate with each other.

At block application computer instructions can be submitted from developer computing device to publication server . The application computer instructions can be in a compiled form or a decompiled form. At block the publication server can parse the application computer instructions. If the application computer instructions are provided in a compiled form parsing the application computer instructions can include first decompiling the computer instructions. Parsing the application computer instructions can also include identifying one or more locations in the application where supplemental computer instructions may be inserted. The locations where supplemental computer instructions may be inserted can include one or more of a location in the application that executes when a certain event occurs a location in the application where the developer has indicated that supplemental computer instructions should be executed a location in the application where a call to execute supplemental computer instructions is placed a location in the application that includes computer instructions associated with an SDK or an API and the like.

At block the publication server can request retail options and item metadata from the developer portal server . The request from the publication server to the developer portal server can include one or more of an indication of the developer an indication of the application an indication of one or more items an indication of a set of store front options and the like. At block the developer portal server can respond to the publication server with the requested retail options and item metadata. At block the publication server can inject the application with the appropriate supplemental computer instructions. As described above injecting supplemental computer instructions into application computer instructions can include any or all of injecting all of the supplemental computer instructions into the application for performing sales functions injecting supplemental computer instructions into the application for the application to interface with a sales application on the same computing device injecting supplemental computer instructions for the application to interface with cloud based sales services and the like. At block the publication server can publish the application with the injected computer instructions. Publishing the application with the injected computer instructions can include any or all of compiling the application with the injected computer instructions testing the compiled application with the injected computer instructions making the application with the injected computer instructions available for download by consumer computing devices and the like.

At block the developer computing device can access a developer portal hosted by the developer portal server . Accessing the developer portal can include browsing to a website associated with the developer portal using a web browser interacting with a specific application on developer computing device that can access the developer portion or in any other way. At block the developer portal server can display a user interface configured to allow the user to interact with the developer portal. At block the developer using the developer computing device can select various retail options and enter item metadata for an application. This can include adding or editing items in a developer registry or adding or editing store front options in a developer registry such as those described above with respect to . At block the developer portal server can store any retail options and or item metadata received from the developer computing device .

At block a request to publish the application can be submitted from developer computing device to publication server . At block the publication server can request retail options and item metadata from the developer portal server . The request from the publication server to the developer portal server can include one or more of an indication of the developer an indication of the application an indication of one or more items an indication of a set of store front options and the like. At block the developer portal server can respond to the publication server with the requested retail options and item metadata. At block the publication server can inject the application computer instructions with the appropriate supplemental computer instructions. As described above injecting supplemental computer instructions into application computer instructions can include any or all of injecting all of the supplemental computer instructions into the application for performing sales functions injecting supplemental computer instructions into the application for the application to interface with a sales application on the same computing device injecting supplemental computer instructions for the application to interface with cloud based sales services and the like. At block the publication server can publish the application with the injected computer instructions. Publishing the application with the injected computer instructions can include any or all of compiling the application with the injected computer instructions testing the compiled application with the injected computer instructions making the application with the injected computer instructions available for download by consumer computing devices and the like.

Each of the processes methods and algorithms described in the preceding sections may be embodied in and fully or partially automated by computer instructions modules executed by one or more computers or computer processors. The computer instructions modules may be stored on any type of non transitory computer readable medium or computer storage device such as hard drives solid state memory optical disc and or the like. The processes and algorithms may be implemented partially or wholly in application specific circuitry. The results of the disclosed processes and process steps may be stored persistently or otherwise in any type of non transitory computer storage e.g. volatile or non volatile storage.

The various features and processes described above may be used independently of one another or may be combined in various ways. All possible combinations and subcombinations are intended to fall within the scope of this disclosure. In addition certain method or process blocks may be omitted in some implementations. The methods and processes described herein are also not limited to any particular sequence and the blocks or states relating thereto can be performed in other sequences that are appropriate. For example described blocks or states may be performed in an order other than that specifically disclosed or multiple blocks or states may be combined in a single block or state. The example blocks or states may be performed in serial in parallel or in some other manner. Blocks or states may be added to or removed from the disclosed example embodiments. The example systems and components described herein may be configured differently than described. For example elements may be added to removed from or rearranged compared to the disclosed example embodiments.

It will also be appreciated that various items are illustrated as being stored in memory or on storage while being used and that these items or portions of thereof may be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software modules and or systems may execute in memory on another device and communicate with the illustrated computing systems via inter computer communication. Furthermore in some embodiments some or all of the systems and or modules may be implemented or provided in other ways such as at least partially in firmware and or hardware including but not limited to one or more application specific integrated circuits ASICs standard integrated circuits controllers e.g. by executing appropriate instructions and including microcontrollers and or embedded controllers field programmable gate arrays FPGAs complex programmable logic devices CPLDs etc. Some or all of the modules systems and data structures may also be stored e.g. as software instructions or structured data on a computer readable medium such as a hard disk a memory a network or a portable media article to be read by an appropriate drive or via an appropriate connection. The systems modules and data structures may also be transmitted as generated data signals e.g. as part of a carrier wave or other analog or digital propagated signal on a variety of computer readable transmission media including wireless based and wired cable based media and may take a variety of forms e.g. as part of a single or multiplexed analog signal or as multiple discrete digital packets or frames . Such computer program products may also take other forms in other embodiments. Accordingly the present invention may be practiced with other computer system configurations.

Conditional language used herein such as among others can could might may e.g. and the like unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without author input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment. The terms comprising including having and the like are synonymous and are used inclusively in an open ended fashion and do not exclude additional elements features acts operations and so forth. Also the term or is used in its inclusive sense and not in its exclusive sense so that when used for example to connect a list of elements the term or means one some or all of the elements in the list.

While certain example embodiments have been described these embodiments have been presented by way of example only and are not intended to limit the scope of the inventions disclosed herein. Thus nothing in the foregoing description is intended to imply that any particular feature characteristic step module or block is necessary or indispensable. Indeed the novel methods and systems described herein may be embodied in a variety of other forms furthermore various omissions substitutions and changes in the form of the methods and systems described herein may be made without departing from the spirit of the inventions disclosed herein. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of certain of the inventions disclosed herein.

