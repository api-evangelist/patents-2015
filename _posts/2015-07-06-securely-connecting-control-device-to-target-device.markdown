---

title: Securely connecting control device to target device
abstract: In an approach, a target computing device receives a pairing request from a controller computing device, the pairing request including controller credentials that were previously received by the controller computing device from an authentication server computer and encrypted under a service key. The target computing device forwards the pairing request to the authentication server, the authentication server computer being configured to return a pairing response based at least in part on the controller credentials. The target computing device receives the pairing which includes a shared secret encrypted under a target device key and the same shared secret encrypted under a controller key. The target computing device decrypts the shared secret encrypted under the target device key and forwards the shared secret encrypted under the controller key to the controller device. Using the decrypted shared secret, the target computing device establishes a secure connection to the controller computing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09438571&OS=09438571&RS=09438571
owner: Netflix, Inc.
number: 09438571
owner_city: Los Gatos
owner_country: US
publication_date: 20150706
---
This application claims the benefit as a continuation of application Ser. No. 14 161 558 filed Jan. 22 2014 which claims the benefit of to provisional application 61 881 304 filed Sep. 23 2013 the entire contents of which are hereby incorporated by reference for all purposes as if fully set forth herein.

The present disclosure generally relates to aspects of computer security including securely connecting control computing devices to a target computing device.

The approaches described in this section are approaches that could be pursued but not necessarily approaches that have been previously conceived or pursued. Therefore unless otherwise indicated it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.

A second screen device also known as a companion device may be a portable screen based computing device for example a smartphone tablet computer that allows a content consumer to interact with content for example shows movies music video games that is presented by a media device for example game console set top box digital video player television . In many cases the second screen device is synchronized with the content displayed on the media device and displays additional options or data that enhances the user s experience. In typical cases the second screen device and the media device are located close to each other for example close enough that the user can view both screens without too much effort and communicatively coupled over the user s local area network LAN . As one example a smartphone can be configured to allow a user to view live tweets or comments related to a program being displayed on their television. As another example a tablet computer can be synchronized with a game console to display additional data such as a map or heads up display. As yet another example a second screen device can be synchronized with a digital video recorder to select and control media for presentation essentially replacing the need for a standard remote control.

However while second screen technology allows multiple devices to work in concert to enhance the user s experience many uses of this technology also require communication between the pairing and external servers on which the user has an account for example servers that provide the media content game servers that allow players to interact online . Thus to protect the user s communications and devices security is needed not only between the pair of devices but also between the devices and the authentication server that binds the pairing to the user s account. This issue can also be made difficult in light of the fact that second screen devices may be more vulnerable to attack than the multimedia devices as well as the converse. As a result security for the system may run into device failures untrustworthy devices as well as other standard attacks such as man in the middle and replay.

In the following description for the purposes of explanation numerous specific details are set forth to provide a thorough understanding of the present invention. It will be apparent however that the present invention may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form to avoid unnecessarily obscuring the present invention.

Reference will be made to various communications such as messages packets frames segments etc. belonging to different layers of the Open System Interconnection OSI model. However mention of a particular type of communication in conjunction with a feature is not intended to limit the feature to only one layer of the OSI model. Thus a feature discussed as applicable to one layer of the OSI model may also be applicable to other layers of the OSI model as well.

In an embodiment a target computing device receives a pairing request from a controller computing device the pairing request including controller credentials that were previously received by the controller computing device from an authentication server computer and encrypted under a service key that is not available to the controller computing device or the target computing device. The target computing device forwards the pairing request to the authentication server computer the authentication server computer being configured to return a pairing response based at least in part on the controller credentials. The target computing device receives the pairing response from the authentication server computer the pairing response including a shared secret encrypted under a target device key and the same shared secret encrypted under a controller key the controller key being unavailable to the target computing device and the target device key being unavailable to the controller computing device. The target computing device decrypts the shared secret encrypted under the target device key and forwards the shared secret encrypted under the controller key to the controller device. The target computing device then uses the decrypted shared secret to establish a secure connection to the controller computer device and receives one or more control messages over the secure connection that are configured to control one or more functions of the target computing device.

In an embodiment the target computing device is configured to present multimedia content and the target computing device receives over the secure connection an instruction from a second screen user interface application executing on the controller computing device that causes the target computing device to modify presentation of the multimedia content.

In an embodiment modifying the presentation of the multimedia content includes one or more of changing volume of the target device enabling or disabling closed captioning on the multimedia content beginning playback of the multimedia content pausing the multimedia content switching presentation to different multimedia content changing playback of the multimedia content to resume at a different point in time within the multimedia content ending playback of the multimedia content or displaying title recommendations.

In an embodiment the controller computer device determines that a period of time has elapsed without receiving input from a user and in response enters a power saving mode and locks the controller computing device to prevent user access to one or more functions of the controller computing device. In response to exiting the power saving mode the controller computing device displays a user interface that allows the user to unlock the controller computing device the interface including one or more options which when selected cause the target computing device to modify presentation of the multimedia content.

In an embodiment the controller computing device determines that the target computing device has finished playback of the multimedia content and in response displays one or more titles. The controller computing device in response to receiving user input specifying selection of a particular title of the one or more titles sends a message to the target computing device over the secure connection that causes the target computing device to begin presentation of the particular title.

In an embodiment the target computing device sends at least a portion of the pairing request to a target application executing on the target computing device that is configured determine whether to accept or reject the pairing request based on one or more criteria. The target computing device forwards the pairing request to the authentication server in response to receiving a communication from the target application indicating that the target application has accepted the pairing request.

In an embodiment the target computing device sends at least a portion of the pairing response to a target application executing on the target computing device that is configured determine whether to accept or reject the pairing response based on one or more criteria. The target application forwards the shared secret encrypted under the controller key to the controller computing device in response to receiving a communication from the target application indicating that the target application has accepted the pairing response.

In an embodiment the controller computing device and the target computing device are communicatively coupled by a local area network. In some embodiments the controller computing device and the target computing device reside on the same subnet.

In an embodiment the controller computing device is any of a smartphone. a tablet computer or a wearable computing device.

In an embodiment the pairing request includes a timestamp generated based on a clock of the controller computing device and the pairing response includes the same timestamp encrypted under the target device key. The target computing device decrypts the timestamp performs a lookup into a log of previously received timestamps to determine whether the timestamp had been previously received in response to determining that the timestamp had not been previously received determines whether the timestamp is within a threshold distance of a current time indicated by a clock of the target computing device in response to determining that the timestamp is within the threshold distance of the current time the target computing device records the timestamp in the log and forwards the shared secret encrypted under the controller key to the controller computing device.

In an embodiment the pairing response includes target device credentials for the target computing device that are encrypted under the service key.

In other embodiments the invention encompasses a computer apparatus a computer system and a computer readable medium configured to carry out the foregoing steps.

For the sake of providing clear examples only a particular number of elements have been depicted in . However other embodiments may have a different number of elements or may have the elements arranged in a different order. For example a practical environment may be scaled to have thousands or millions of the components depicted in . As another example an embodiment may include a server computer virtual machine instance or multiple computing elements that combine the functions of both the authentication server and the service server . As yet another example the authentication server and the service server may reside on the same LAN.

In an embodiment controller computing device is second screen device for example tablet computer smart phone screen enabled game controller or wearable computing device such as a computer enhanced watch or eyeglass device that is used to control or otherwise modify the operation of the target computing device . The controller computing device executes user application which is configured to send instructions to target application or other component of target computing device to facilitate the aforementioned control. In some embodiments the user application displays a second screen user interface that provides the user with options to control the target computing device . For example the user application may be a mobile application that provides a graphical user interface GUI on the controller computing device that can be used to select multimedia titles for viewing on target computing device . In an embodiment the user application may be the NETFLIX app commercially available from Netflix Inc. Los Gatos Calif. via the APPLE APP STORE ANDROID PLAY STORE and other outlets.

In an embodiment the user application communicates with the target application through the controller connector which acts as a software and or hardware communication endpoint that secures the connection between the controller computing device and the target computing device . For example the controller connector may provide an application programming interface API that can be used by the user application or other component of controller computing device to securely exchange communications with the target application or other component of target computing device . In an embodiment the controller connector establishes a secure communications channel with the target device connector which is then used to send and receive the aforementioned communications.

In an embodiment target computing device is a media device for example television set top box digital video recorder disc player projector music player or game console that is configured to receive and process commands from the controller computing device . The target computing device executes target application which is configured to receive instructions from user application to facilitate the aforementioned processing. For example target application may represent a software platform that allows users to select content for viewing for example select content stored locally for playback stream content from a remote site and or control playback of the content stop pause play rewind fast forward volume control closed caption options jump to point in time . The target application may be the NETFLIX application which is commercially available from Netflix Inc. Los Gatos Calif.

In an embodiment the target application communicates with the user application through the target device connector which acts as a software and or hardware communication endpoint that secures communications between the target computing device and the controller computing device . For example the target device connector may provide an API that can be used by the target application or other component of target computing device to securely exchange communications with user application or other component of controller computing device . In an embodiment the target device connector establishes a secure communications channel with the controller connector which is then used to send and receive the aforementioned communications.

In some embodiments the instructions from the controller computing device may be routed by the target device connector to different components of the target computing device depending on the type of instruction that has been received. For example the target computing device may possess one or more additional hardware or software components not depicted in installed by the manufacturer to control hardware functions for example volume controls which may be the recipient of certain instructions from the user application rather than the target application . As another example multiple target applications may be executed by the target computing device concurrently and communications from the user application may be routed to the correct recipient by target device connector . Similarly the controller connector may route messages from the target computing device to components of the controller computing device other than the user application .

In an embodiment network and network represent any combination of one or more local networks wide area networks or internetworks. Data exchanged over the networks may be transferred using any number of network layer protocols such as Internet Protocol IP Multiprotocol Label Switching MPLS Asynchronous Transfer Mode ATM and Frame Relay Furthermore in embodiments where the networks represent a combination of multiple sub networks different network layer protocols may be used at each of the underlying sub networks. In an embodiment network represents a LAN that is used to convey communications between the controller computing device and the target computing device . In addition network represents an external network used to convey communications between the target computing device and the servers authentication server and service server . For example network may represent a home Wi Fi network and network may represent the public Internet.

In an embodiment the authentication server represents one or more software and or hardware components that registers the controller computing device and target computing device as well as determines whether the devices are allowed to pair. For example upon being authenticated the authentication server may issue a ticket or other form of credential that can be provided to the service server as proof of identity and authorization to access the service. In addition assuming the pairing is approved the authentication server provides a shared secret to the controller computing device and the target computing device which is used to secure for example encrypt messages sent through the controller connector and the target device connector .

In an embodiment the service server represents one or more software and or hardware components that provide a given service. For example the service server may provide a service that delivers streaming media to users. As another example the service server may run a back end server for hosting online multiplayer game sessions for users.

In an embodiment the authentication server is coupled to or has access to an account database which stores account information for users of the service provided by the service server . For example the account database may store encrypted user names passwords or other credentials for the customers of the service as well as other information related to the user s account for example permissions authentication information for devices previously linked to the account and account activity history. In some embodiments the account database may also store service related information for users. For example the service provided by the service server may stream media content to users and the service related information could relate to pre computed title recommendations viewing histories usage rates.

For the following explanations communications may be described as secured with a particular type of encryption such as symmetric key encryption for example AES RC4 or asymmetric key encryption for example public key encryption RSA elliptic curve . However in other embodiments different encryption techniques other than the one explicitly mentioned in the example can be used to achieve the same effect. As a result one skilled in the art would know that the techniques described herein are not limited to any particular encryption technique to secure communications between the various actors. In addition although not explicitly stated any or all of the communications sent between the actors may be checked for integrity and or authenticated using a message authentication code MAC hash based message authentication code HMAC digital signature or other integrity checking mechanism.

Referring first to at block the controller connector registers the controller computing device with the authentication server . In an embodiment the controller connector displays a login screen to the user which asks the user for their login information user name password personal identification number secret question and answer or other challenge and response . In some embodiments the controller computing device may not be configured to accept certain types of user input for example may not include a keyboard or equivalent thus in those cases the controller connector may automatically supply the log in information. For example the controller computing device may be configured with the user s login information when the user application is installed or identifying information may be pre installed by the manufacturer of the controller computing device . The controller connector sends the login information to the authentication server in an encrypted message. For example the controller connector may use a pre shared key installed by the manufacturer of the controller computing device or supplied when the user application was installed. Alternatively the controller connector may use a cryptographic technique such one based on public key cryptography or the Diffie Hellman key exchange protocol to perform the encryption. The aforementioned key used to secure communications between the controller computing device and the authentication server will be referred to as the controller key .

Upon receiving the login information the authentication server decrypts the message using the controller key and consults the account database to determine whether the log in information is correct and or which services the user s account has permission to access. In response to determining that the user s information matches an account in the account database the authentication server generates credentials for the controller connector and sends the credentials back through the encrypted channel. In an embodiment the credentials are provided in the form of a ticket which specifies one or more of the following an account identifier a user identifier a device identifier a validity period a list of services to which the user has access and or the network address of the controller computing device . In an embodiment the authentication server encrypts the ticket using a key that is known to the authentication server and the service server but not the controller computing device or other intermediary devices to ensure that the ticket cannot be forged or altered. This aforementioned key will be referred to as the service key . In some embodiments the controller connector may store credentials for future use assuming the credentials are still valid at that future point in time for example when the expiration period has not ended before the pairing request is made. As a result in situations where valid credentials are already available the controller connector may skip block and proceed to block .

Alternatively the user application may register the controller computing device and supply the credentials received from the authentication server to the controller connector . For example the user application may initially require the user to log in for basic service and also provide an option to enable second screen functions. Thus when the user logs in the user application registers the controller computing device with the authentication server and receives the controller credentials. Then when the user selects the second screen option the user application invokes the controller connector and supplies the controller credentials so that the controller connector can establish a pairing with the target computing device . In such embodiments the controller connector can skip block and proceed directly to block .

At block the controller connector performs discovery to locate compatible devices. In an embodiment the controller connector performs discovery in two stages. In the first stage the controller connector discovers devices available over network . For example the controller connector may utilize a discovery protocol such as Universal Plug and Play UPnP Simple Service Discovery Protocol SSDP to discover available devices. One standard for UPnP is described in UPnP Device Architecture 1.0 by the UPnP Forum which is hereby incorporated by reference for all purposes as though fully stated herein. In the second stage the controller connector queries the discovered devices to determine if one of the discovered devices is executing an application that can be used in conjunction with a second screen for example target application . For example the controller connector may use Discovery and Launch DIAL protocol to find compatible applications. DIAL is described in Application Discovery U.S. application Ser. No. 13 827 720 which is hereby incorporated by reference for all purposes as though fully described herein. In an embodiment once the controller connector discovers one or more compatible devices the controller connector or alternatively user application displays a menu listing available devices which can be selected by the user to choose the device for the pairing for example target computing device . Alternatively if only one compatible device is available over network the controller connector may skip the menu and automatically select that device. In some embodiments the menu may also include an option to abandon the pairing operation and instead run the service directly on the controller computing device . For example in the case of selecting a video to stream selecting this option may cause the video to play on the controller computing device rather than a target computing device .

In some embodiments the target computing device when turned off may keep one or more components in a low power sleep mode. In an embodiment when the target computing device receives a discovery request from the controller computing device the target computing device wakes up and executes the target device connector and or target application contemporaneously with responding to the request. In some embodiments the target computing device may wait until a later stage to execute the target application and or target device connector for example waiting until the user has actually selected the target computing device .

At block the controller connector sends a pairing request to the target device connector over network . In an embodiment the pairing request includes the controller credentials received during the registration of block a pin number for the target computing device encrypted under the controller key and a nonce which will be used to detect and prevent replay attacks. In some embodiments the pin number for the target computing device changes randomly every set period of time and is displayed on a screen of the target computing device . Thus in such an embodiment the user may also be asked to input the pin number currently being displayed by the target computing device when selecting a device for the pairing during discovery at block . When the pin number is eventually decrypted and checked by the authentication server it serves as evidence that the user had simultaneous access to both the controller computing device and the target computing device . In other embodiments the controller connector may pull the target pin from the target computing device automatically without the user needing to manually enter the input. Alternatively an identifier for the target computing device other than a pin number may also be used for the same purpose. In an embodiment the nonce represents a randomly selected number a number based on a serially increasing or decreasing value a timestamp value timestamp pair or a value generated based on a time stamp. In some embodiments the request additionally specifies one or more of a target device identifier a timestamp an action that the pairing will be used for for example the type of service a version number of the user application a version number of the controller connector controller identification number network address of the controller computing device port address of the controller connector and or other application or device level details. In some embodiments the parts of the pairing request that are not encrypted under the service key or the controller key are sent in the clear. However in other embodiments the controller connector and the target device connector may establish a separate encrypted channel over which to transfer the pairing request.

In at block the target device connector receives the pairing request sent by the controller connector at block of .

At block the target device connector forwards the pairing request to the target application . In some embodiments the target device connector may forward only the parts of the request that are not encrypted under the service key or the controller key for example only the information which the target computing device can read .

In at block the target application receives the pairing request forwarded by the target device connector at block of .

At block the target application determines whether the pairing request meets one or more criteria. For example the target application may determine whether the pairing request is for a service which is currently enabled for second screen functions whether the version number of the user application or the controller connector is up to date or otherwise compatible whether the timestamp is out of date beyond a particular threshold whether the pin number for the target device has changed since the time indicated by the timestamp or any other criteria that the designer of the target application wishes to impose on a pairing request from user application . If the pairing request does not meet the criteria imposed by the target application the target application declines the request and informs the target device connector at block . If the pairing request meets the criteria imposed by the target application the target application accepts the request and informs the target device connector at block . For example the target application may respond with one value if the pairing request is accepted and a different value if the pairing request is rejected.

Referring back to at block the target device connector determines whether the target application accepted or rejected the pairing request based on the response. In the event that the target application declines the request the target device connector sends a message back to the controller connector that informs the controller connector of the failure at block . In response referring back to the controller connector determines that the pairing was not successful at block and returns an error at block to the user application for eventual display to the user. Thus one consequence of a pairing request being rejected by the target application is that the pairing request is not forwarded to the authentication server relieving the authentication server of the burden of processing requests that are guaranteed to fail. However if referring back to the target application accepts the pairing request the target device connector proceeds to block .

At block the target device connector encrypts the pairing request using a key known to the target computing device and the authentication server . This aforementioned key will be referred to as the target device key . In some embodiments prior to encrypting the pairing request the target device connector appends additional information to the pairing request. For example the target device connector may append the pin number for the target computing device to the pairing request. As another example the target device connector may have been previously registered by the authentication server during a previous pairing session with the controller computing device or from pairing with a different controller. Assuming the credentials that the target computing device received previously are still valid the target computing device can include those credentials to prove its identity to the authentication server . For example the credentials may be a ticket in the same form used for the controller credentials described earlier. The credentials for the target computing device will be referred to as the target device credentials . In an embodiment the target device key is derived using a pre shared secret installed by the manufacturer of the target computing device . In other embodiments the target device key may be derived using a cryptographic protocol such as the Diffie Hellman key exchange protocol. The exact protocol used to establish a secure channel between the target computing device and the authentication server is not critical and one skilled in the art would recognize that any number of cryptographic protocols may be used to accomplish substantially the same result. In some embodiments the target device connector may encrypt only part of the pairing request. For example the target device connector may encrypt the added information for example the pin number of the target computing device but may leave all or part of the original pairing request intact along with the target device s credentials if any already exist . Thus the portions of the pairing request that are already encrypted under another key or the portions not critical to security may be left in place to save resources when encrypting the pairing request.

At block the target device connector forwards the encrypted pairing request to the authentication server over network .

In at block the authentication server receives the pairing request that the target device connector forwarded at block of .

At block the authentication server decrypts the pairing request. In an embodiment the authentication server uses the target device key to decrypt the pairing request then uses the service key and controller key to decrypt the controller credentials and the pin number of the target computing device that had been encrypted by the controller connector respectively.

At block the authentication server performs security checks on the information in the pairing request. In an embodiment the security checks include performing one or more of the following checking that the action specified in the pairing request is valid validating the controller credentials validating any message authentication codes or digital signatures sent with the pairing request checking that the pin number supplied by the controller computing device matches the pin number supplied by the target computing device and or validating the target device credentials if applicable . If any of the security checks performed by the authentication server fails the authentication server returns an pairing failure error to the target device connector which then forwards the error to the controller connector for display to the user. Otherwise the authentication server proceeds to block .

At block the authentication server determines whether the target computing device is registered. For example the authentication server may check the pairing request for the presence of target device credentials. If the authentication server determines that the target computing device is already registered the authentication server records the pairing and proceeds to block . For example the authentication server may make an entry in the account database specifying the devices involved in the pairing the credentials of the devices involved in the pairing and or the account or user to which the pairing is attributed. Otherwise if the target computing device is not already registered the authentication server registers the target computing device at block .

At block the authentication server registers the target computing device . In an embodiment the authentication server registers the target computing device by generating target device credentials in the same fashion as the controller credentials discussed earlier. In this case the user and or account information for the target device credentials would be derived from the same user and or account specified in the controller credentials. The target device credentials are then included in the response to the pairing request which will be sent back to the target device connector at block .

At block the authentication server generates a shared secret for the pairing. This shared secret will ultimately be used to secure communications between the target computing device and the controller computing device during the pairing session. In an embodiment the authentication server also records the shared secret in association with the user s account in the account database .

At block the authentication server generates and encrypts a target authentication response using the target device key and a controller authentication response using the controller key. In an embodiment each authentication response includes the shared secret the nonce sent with the pairing request and authentication information for example a value indicating the authentication server has approved the pairing an identification number for the pairing a timestamp account user permissions . Since each response is encrypted under a key known only to the recipient both the controller computing device and the target computing device can separately verify that that shared secret and other encrypted information originated from the authentication server . In the event that the authentication server had to register the target computing device the target authentication response also includes the target device credentials.

At block the authentication server forwards the authentication responses to the target device connector over network . In some embodiments although multiple authentication responses are being sent by the authentication server to the target device connector the responses may be encapsulated within a single message.

Referring again to at block the target device connector receives the authentication responses sent by the authentication server at block of .

At block the target device connector decrypts the target authentication response using the target device key. Thus upon decryption the target device connector possesses the shared secret for the pairing the nonce and the authorization information sent by the authentication server . Also depending on whether or not the target computing device was pre registered the target device connector may have also received the target device credentials which can be recorded by the target device connector for future use when requesting services from the service server or when sending future pairing requests to the authentication server .

At block the target device connector checks the nonce for a possible replay attack. In an embodiment the target device connector performs one or more of the following determines whether a reply with that nonce has been previously received for example using a log of previously received nonces determines whether the nonce matches the nonce included in the original pairing request and or determines whether the timestamp is within a threshold distance of the current time when the nonce is associated with or based on a timestamp. If any of the aforementioned determinations fails the target device connector rejects the authentication response and jumps directly to block to fail the pairing. If the determinations succeed the target device connector records the nonce and proceeds to block . In some embodiments the target device connector may clear recorded nonces after a set period of time. For example nonces that are older than the threshold distance used when determining if the timestamp is within acceptable bounds the may be discarded to save space and processing time. In an embodiment the threshold is set based on a historical average of the amount of time it takes for all actors to process the pairing request up to this point in the process and an additional safety margin to account for discrepancies between the clocks of the controller computing device and the target computing device . In some embodiments to reduce the risk of discrepancies between the clocks the controller computing device and the target computing device may synchronize clocks prior to the controller connector sending the pairing request at block of .

At block the target device connector forwards the authentication information of the target authentication response to the target application .

Referring back to at block the target application receives the authentication information that the target device connector sent at block of .

At block the target application determines whether the authorization information meets one or more criteria. For example the target application may determine whether the timestamp is within acceptable bounds whether the account or user specified by the authentication information is permitted to access the service or any other criteria that the designer of the target application wishes to impose on the target authentication response. In some cases the target computing device may have been previously registered during a pairing session with a controller bound to a different user s account. As a result the target application may discover through the authorization information that the pairing is attempting to bind devices which have credentials under two different accounts. Thus the target application may have a policy which allows such a pairing or may have a policy that rejects such a pairing. In some embodiments if the pairing is rejected in this fashion the target device connector may request a new registration from the authentication server and submit the updated authorization information to the target application for approval.

If the authorization information does not meet the criteria the target application declines the authorization at block . In response referring back to the target device connector determines that the authorization has not been accepted at block and informs the controller connector of the failure at block . Then referring back to the controller connector determines that the pairing was not successful at block and returns an error to the user application at block for eventual display to the user.

If authentication information meets the criteria the target application accepts the authorization at block and informs the target device connector which causes the target device connector to determine at block that the authorization has been accepted. The target device connector proceeds to block informs the controller connector of the successful pairing and forwards the controller authentication response. As a result referring back to the controller connector determines that the pairing was successful at block . At block the controller connector decrypts the controller authentication response to obtain the shared secret the nonce and the authentication information. At block the controller connector checks the nonce for possible replay attacks in the same fashion as discussed above for the target device connector at block of . If the nonce fails the checks the controller connector fails the pairing and jumps directly to block . Otherwise the controller connector establishes a secure communication session with the target device connector using the shared secret at block .

In an embodiment the secure communication session provides functions enabling the user application and the target application to exchange messages and events. The communication session begins with a handshake from the controller connector that informs the target device connector to prepare to process messages from the user application and target application . Once the handshake is complete the user application and target application can utilize a communication mechanism such as an API to begin sending and receiving messages over their respective endpoint. The controller connector and the target device connector then function as a transport layer encrypting outgoing messages based on the shared secret for delivery over network to the other endpoint and decrypting incoming messages based on the shared secret for delivery to their respective application. In an embodiment the endpoints also take advantage of nonces to prevent replay as well as message authentication and integrity schemes discussed previously. In some embodiments the endpoints compare each received message to a particular format to determine that the fields adhere to valid size requirements. For example if a header of the message indicates that the payload is a particular size the endpoint may check to ensure that the payload actually is the size as indicated in the header to hedge against potential buffer overflow attacks. In an embodiment for commands which require access to a service for example selecting a video to stream from a remote site accessing an online gaming session the target device connector sends service requests to the service server that includes the credentials of the target computing device . As a result the service server is able to verify that the target computing device has been authorized by the authentication server before supplying the requested service.

In some embodiments when the network connection between the controller connector and the target device connector is interrupted the devices continue to retry sending messages until a specified timeout. However in other embodiments the devices may be configured to assume an interruption after particular events indicates an end to the session. For example in the case of streaming movies if playback of a movie has ended or is within a threshold distance from ending a disruption from the controller for example the controller shutting off may indicate that the user has finished their viewing session and the resources to maintain the secure connection may be released. In other embodiments a network interruption may cause default behaviors in either the controller computing device or the target computing device . For example if network connectivity between the controller computing device and the target computing device is interrupted the target computing device may pause a video that is currently streaming until receiving an independent instruction from the user for example via another device or through an interface of the target computing device or until connectivity is reestablished. In some embodiments a secure communication session ends when one endpoint receives an end session message from the other endpoint. For example the user exiting the user application on the controller computing device may cause the controller connector to send the end session message to the target device connector to end the session.

In an embodiment the title descriptors display information for titles that can be selected by the user for playback. For example the title descriptors may display the name of the title the amount of the title that the user has previously viewed for example hours minutes seconds of the title that the user has already watched In some embodiments the title descriptors can be selected to display additional information regarding the title such as a description of the title s content user reviews options to submit a review actor director information country of origin Each of the title descriptors is displayed with a play widget which when selected brings up the device descriptors menu that allows the user to select which device for example target computing device controller computing device will present the title. The device descriptors may be populated using the techniques discussed above for discovery at block of . In an embodiment cancel widget when selected causes the device descriptors menu to close and allow the user to select a different title for viewing. In an embodiment selecting the cancel widget causes the user interface to return to a previous screen. For example the previous screen may be a genre selection screen or recommendation list that determines the titles displayed in the title descriptors .

Upon selecting a device for example target computing device from the device descriptors list the user application invokes the controller connector to create a secure channel to the target application . Once the secure channel is established the user application can send an instruction to the target application to begin playback of the selected title. The user application then sends a request to the service server for the content of the title for presentation on the target computing device . In the event that the device selected is the controller computing device the pairing operation is not performed and instead the target computing device forwards messages between the controller computing device and the service server . Alternatively the controller computing device may utilize a communication channel that does not involve the target computing device acting as an intermediary provided that the operating environment allows for such an alternative communication channel.

In an embodiment user interface is displayed by the user application in response to the target computing device beginning to present a title. Continuing from the example described above in reference to once the target computing device begins to receive and present content from the service server the target application may send a confirmation message to the user application over the secure channel. Then in response to receiving the confirmation the user application displays user interface to allow the user to control the presentation of the title on the target computing device . In some embodiments the target application may send update messages to the user application that specify the status of the playback for example how much time is left for the title connection metrics such as latency or jitter to ensure the user application and the target application remain in sync.

In an embodiment the return widget when selected by a user causes the user application to return to a previous screen. For example the user application may return to user interface of to allow the user to select a new title. In an embodiment selecting the review widgets brings up a listing of user reviews for the title and or allows the user to submit their own review of the title. For example the user may be asked to enter a written review using a keyboard presented in response to selecting the review widgets or the user may enter their review by selecting a number of stars indicating how well the user likes the presented title. In an embodiment selecting the review widgets sends an instruction to the target application over the secured channel to retrieve other user reviews or to submit the user s own review. In response the target application performs the requested action by exchanging messages with the service server .

In an embodiment the pause resume widget causes playback of the title presented on the target computing device to pause or if playback is already paused resume playback of the title. In some embodiments pause resume widget covers an area of the screen that is set to a backdrop of a scene character logo or other image related to the title being presented. For example in the pause resume widget is set against a backdrop of a character from the series Breaking Bad . In an embodiment the display of the pause resume widget changes depending on whether not playback is currently paused to inform the user of the playback s status. In an embodiment pause resume widget performs the same functions as pause resume widget and provides an alternative widget that the user can select to pause and resume playback of the presented title.

In an embodiment trick play bar displays how far into the title the presentation has currently run. For example the trick play bar may be displayed as filling up as the title is presented with the percentage of the bar that is filled indicating how far the playback of the title has run. In addition the trick play bar can be displayed with a value indicating the total length of the title. The trick play bar includes a trick play selection widget that indicates the exact point in time of the playback being presented on the target computing device . In an embodiment the trick play selection widget can be clicked and dragged by the user to select a point in time within the content of the title. In response the user application sends an instruction to the target application through the secure channel that instructs the target application to restart playback of the title at the specified point in time. Depending on how buffering is performed on the target computing device restarting playback may also require contacting the service server to synchronize the stream to the correct point in time. In addition the user may select the rewind widget to rewind playback a set amount of time which follows the same procedures as the user selecting a point in time through the trick play selection widget .

In an embodiment device selection widget can be selected to switch playback of the title between being displayed on the target computing device and the controller computing device . For example if the user selects the device selection widget while the title is being presented on the target computing device the user application sends an instruction to the target application through the secure channel to forward the content stream to the controller computing device for presentation. The user interface then updates to display the content stream in a window. Then if the user decides to switch back to watching the title through the target computing device the user reselects the device selection widget . This causes the user application to send another instruction to the target application to cease forwarding the content stream and instead display the content stream on the target computing device .

In an embodiment selecting the minimize maximize widget while the user interface is displayed causes all or part of the user interface to minimize. This allows the user to access other applications or functions of the controller computing device . Then if the minimize maximize widget is selected again the user interface is then redisplayed in its entirety.

In other embodiments user interface provides options to adjust the volume of title being presented the target computing device and or change closed captioning for the presented title.

In some embodiments the controller computing device may be configured to sleep or switch to a low power battery mode after a period of inactivity. During this sleep mode many devices will lock the screen which requires additional input such as the user running their finger along the screen in a particular pattern or entering a security code before the user can access most functions of the controller computing device . In some embodiments during a secure communications session the controller connector may override the default sleep mode of the controller computing device to prevent the device from locking during a secure communications session. For example while watching a streaming video there may be long periods of time where there is no user interaction with the user application since the user s focus may be directed towards the content being presented. It may be inconvenient for a user to have to unlock the controller computing device to enter a command after each period of inactivity. Thus by preventing the controller computing device from locking the controller computing device still saves power by darkening the screen but may require only minimal user input for example touching the screen or hitting a button to wake the device up rather than needing to go through the security measures needed to unlock the device. In other embodiments instead of preventing the controller computing device from locking all or part of user interface may be displayed alongside the security mechanism on the controller computing device . Thus the user can still access the commands through the user application without needing to unlock the controller computing device .

In some embodiments the user application in response to determining that playback of a title has completed or substantially completed on the target computing device displays a selection screen of recommended titles for the user on the controller computing device . For example the user application may receive a message indicating end of playback from the target application or the user application may maintain a timer that tracks how much time is left for the title currently being presented. The user may then select a title from the selection screen to cause the target computing device to present the newly selected title. Alternatively the user application may present an option to add the newly selected title to the user s queue for later viewing.

According to one embodiment the techniques described herein are implemented by one or more special purpose computing devices. The special purpose computing devices may be hard wired to perform the techniques or may include digital electronic devices such as one or more application specific integrated circuits ASICs or field programmable gate arrays FPGAs that are persistently programmed to perform the techniques or may include one or more general purpose hardware processors programmed to perform the techniques pursuant to program instructions in firmware memory other storage or a combination. Such special purpose computing devices may also combine custom hard wired logic ASICs or FPGAs with custom programming to accomplish the techniques. The special purpose computing devices may be desktop computer systems portable computer systems handheld devices networking devices or any other device that incorporates hard wired and or program logic to implement the techniques.

For example is a block diagram that illustrates a computer system upon which an embodiment of the invention may be implemented. Computer system includes a bus or other communication mechanism for communicating information and a hardware processor coupled with bus for processing information. Hardware processor may be for example a general purpose microprocessor.

Computer system also includes a main memory such as a random access memory RAM or other dynamic storage device coupled to bus for storing information and instructions to be executed by processor . Main memory also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor . Such instructions when stored in non transitory storage media accessible to processor render computer system into a special purpose machine that is customized to perform the operations specified in the instructions.

Computer system further includes a read only memory ROM or other static storage device coupled to bus for storing static information and instructions for processor . A storage device such as a magnetic disk or optical disk is provided and coupled to bus for storing information and instructions.

Computer system may be coupled via bus to a display such as a cathode ray tube CRT for displaying information to a computer user. An input device including alphanumeric and other keys is coupled to bus for communicating information and command selections to processor . Another type of user input device is cursor control such as a mouse a trackball or cursor direction keys for communicating direction information and command selections to processor and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes a first axis for example x and a second axis for example y that allows the device to specify positions in a plane.

Computer system may implement the techniques described herein using customized hard wired logic one or more ASICs or FPGAs firmware and or program logic which in combination with the computer system causes or programs computer system to be a special purpose machine. According to one embodiment the techniques herein are performed by computer system in response to processor executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory from another storage medium such as storage device . Execution of the sequences of instructions contained in main memory causes processor to perform the process steps described herein. In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions.

The term storage media as used herein refers to any non transitory media that store data and or instructions that cause a machine to operation in a specific fashion. Such storage media may comprise non volatile media and or volatile media. Non volatile media includes for example optical or magnetic disks such as storage device . Volatile media includes dynamic memory such as main memory . Common forms of storage media include for example a floppy disk a flexible disk hard disk solid state drive magnetic tape or any other magnetic data storage medium a CD ROM any other optical data storage medium any physical medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM NVRAM any other memory chip or cartridge.

Storage media is distinct from but may be used in conjunction with transmission media. Transmission media participates in transferring information between storage media. For example transmission media includes coaxial cables copper wire and fiber optics including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio wave and infra red data communications.

Various forms of media may be involved in carrying one or more sequences of one or more instructions to processor for execution. For example the instructions may initially be carried on a magnetic disk or solid state drive of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system can receive the data on the telephone line and use an infra red transmitter to convert the data to an infra red signal. An infra red detector can receive the data carried in the infra red signal and appropriate circuitry can place the data on bus . Bus carries the data to main memory from which processor retrieves and executes the instructions. The instructions received by main memory may optionally be stored on storage device either before or after execution by processor .

Computer system also includes a communication interface coupled to bus . Communication interface provides a two way data communication coupling to a network link that is connected to a local network . For example communication interface may be an integrated services digital network ISDN card cable modem satellite modem or a modem to provide a data communication connection to a corresponding type of telephone line. As another example communication interface may be a local area network LAN card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information.

Network link typically provides data communication through one or more networks to other data devices. For example network link may provide a connection through local network to a host computer or to data equipment operated by an Internet Service Provider ISP . ISP in turn provides data communication services through the world wide packet data communication network now commonly referred to as the Internet . Local network and Internet both use electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system are example forms of transmission media.

Computer system can send messages and receive data including program code through the network s network link and communication interface . In the Internet example a server might transmit a requested code for an application program through Internet ISP local network and communication interface .

The received code may be executed by processor as it is received and or stored in storage device or other non volatile storage for later execution.

In the foregoing specification embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the invention and what is intended by the applicants to be the scope of the invention is the literal and equivalent scope of the set of claims that issue from this application in the specific form in which such claims issue including any subsequent correction.

In the foregoing specification embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. Thus the sole and exclusive indicator of what is the invention and is intended by the applicants to be the invention is the set of claims that issue from this application in the specific form in which such claims issue including any subsequent correction. Any definitions expressly set forth herein for terms contained in such claims shall govern the meaning of such terms as used in the claims. Hence no limitation element property feature advantage or attribute that is not expressly recited in a claim should limit the scope of such claim in any way. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense.

