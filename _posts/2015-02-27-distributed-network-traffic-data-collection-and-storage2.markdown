---

title: Distributed network traffic data collection and storage
abstract: Network traffic information from multiple sources, at multiple time scales, and at multiple levels of detail are integrated so that users may more easily identify relevant network information. The network monitoring system stores and manipulates low-level and higher-level network traffic data separately to enable efficient data collection and storage. Packet traffic data is collected, stored, and analyzed at multiple locations. The network monitoring locations communicate summary and aggregate data to central modules, which combine this data to provide an end-to-end description of network traffic at coarser time scales. The network monitoring system enables users to zoom in on high-level, coarse time scale network performance data to one or more lower levels of network performance data at finer time scales. When high-level network performance data of interest is selected, corresponding low-level network performance data is retrieved from the appropriate distributed network monitoring locations to provide additional detailed information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09565076&OS=09565076&RS=09565076
owner: 
number: 09565076
owner_city: 
owner_country: 
publication_date: 20150227
---
This application is a divisional of pending U.S. patent application Ser. No. 13 415 819 filed on 8 Mar. 2012. U.S. patent application Ser. No. 13 415 819 claims priority to U.S. Provisional Patent Application No. 61 450 599 filed Mar. 8 2011. Both of these applications are incorporated by reference herein for all purposes.

The invention relates to the field of computer networks and systems and methods for monitoring analyzing and modifying network traffic. There exists a variety of systems protocols and software applications for monitoring and analyzing network traffic. These include packet analyzers like Wireshark traffic load measurement applications like MRTG network monitoring protocols such as SNMP and netflow and system logs reports and other data records. Each of these things is adapted to monitor a narrow aspect of network performance. Moreover many of these applications and protocols are tailored to measure network performance at a single location rather than over multiple network locations. Applications that do monitor network performance at multiple network locations often provide very little information such as detailed packet traffic data. This requires system administrators to use multiple applications and tools to identify diagnose and correct network problems.

Additionally network performance data can be very large and difficult to efficiently collect especially for large networks and if packet data as opposed to just traffic load and network flow data is included. Moreover system administrators often need to sift through large quantities of network performance data to identify and diagnose network problems.

Embodiments of the invention include systems and methods for integrating a variety of network traffic information from multiple sources at multiple time scales and at multiple levels of detail to provide users such as system administrators with network traffic information in formats that are easier to identify relevant network information. Example time scales include but are not limited to individual packet network traffic data on a time scale of milliseconds microseconds or nanoseconds microflows including sequences of packets over a time scale of seconds flows including sequences of packets over a time scale on the order of minutes and macroflows including sequences of flows over a time scale on the order of fifteen minutes or bigger.

In an embodiment the network monitoring system stores and manipulates low level network packet traffic data and higher level network microflow flow and macroflow information separately to enable efficient scaling of the collection and storage of network performance data. Network packet traffic data is collected stored and analyzed at multiple network locations. Low level packet and microflow traffic data is stored at the collection locations and may be communicated over the network only as needed conserving network bandwidth.

Instead of communicating all low level packet and microflow traffic data over the network an embodiment of the network monitoring system use the distributed network locations to communicate summary and aggregate data identifying network microflow traffic and other attributes of potential interest to central flow collection and analysis modules. The central flow collection and analysis modules combine data received from multiple network locations to provide an end to end description of network traffic at coarser time scales such a network traffic flows and macroflows.

In an embodiment a network monitoring system provides top down visibility of network performance data. System administrators or other users can zoom in or drill down on high level network performance data such as network and application health to one or more intermediate levels of network performance data such as network flow statistics and trends and further to low level network performance data such as captured network packets. When a user selects specific high level network performance data of interest such as a macroflow or flow an embodiment of the network monitoring system retrieves corresponding low level network performance data such as packet and microflow traffic from the appropriate distributed network monitoring locations to provide additional detailed information about the area of interest.

In an embodiment users and network monitoring and control applications may collect and present network performance data from both distributed and centralized sources for presentation analysis and control of the network. In a further embodiment macroflow and flow information may be used to identify the appropriate distributed network devices that have microflow and packet information relevant to network traffic of interest to the user. In an additional embodiment analytics processing and presentation portions of the system may be programmable and utilize web protocols such as XML HTTP and REST.

In an embodiment the network monitoring system may use behavioral analytics to identify network problems. For example the network monitoring system may learn traffic trends and patterns over time and be configured to identify the existence of a problem when the network traffic deviates significantly from the pattern.

In an embodiment the network monitoring system includes a database that exploits the time series structure typical search patterns on flow tuples and multilevel hierarchy of network performance data. In a further embodiment each distributed network monitoring device may store and organize data according to the collection time such as in packet data block references and compute microflow information as packets are collected. Microflow information may then be used to accelerate queries of packet data.

In a further embodiment the network monitoring system may allow for extensions and additional applications through a scripting interface. This can enable features such as UI gadgets more advanced behavioral analytics packet dissectors capture control reports system configuration alarms network topology applications and additional packet and flow information. The scripting interface may also enable alarms and behaviors specific to different types of applications and businesses.

Embodiments of the invention include systems and methods for integrating a variety of network traffic information from multiple sources at multiple time scales and at multiple levels of detail to provide users such as system administrators with network traffic information in formats that are easier to identify relevant network information.

In an embodiment the network monitoring system classifies network performance data into four different categories each with a different amount of detail and different time resolution. Packet network traffic is the lowest level of network performance data and includes detailed data about individual network packets. Packet network traffic has a time resolution of milliseconds microseconds or nanoseconds. Microflows are sequences of packets from a source to a destination over a time scale of seconds. Network performance data about microflows includes aggregate or statistical attributes of the packets included in microflow as opposed to detailed information about individual packets. Flows are sets or sequences of packets from a source to a destination over a time scale of minutes. Network performance data about flows includes aggregate or statistical attributes of the packets included in flow as opposed to detailed information about individual packets. Network performance data about flows can also be generated though aggregate or statistical attributes of the microflows included in flow. Macroflows are sets and or sequences of flows and have a time resolution on the order of for example fifteen minutes. Network performance data about macroflows includes aggregate or statistical attributes of the flows included in macroflow. These categories are provided for the purposes of illustration and other embodiments of the invention may use any arbitrary number of categories corresponding to any desired levels of information detail and time resolution.

In an embodiment the network monitoring system stores and manipulates low level network packet traffic data and higher level network flow information separately to enable efficient scaling of the collection and storage of network performance data. As described in detail below network packet traffic data is collected stored and analyzed at multiple network locations. Low level packet and microflow traffic data is stored at the collection locations and may be communicated over the network only as needed conserving network bandwidth.

Instead of communicating all low level packet and microflow traffic data over the network the distributed network locations communicate summary and aggregate data identifying network microflow traffic and other attributes of potential interest to central flow collection and analysis modules. The central flow collection and analysis modules combine data received from multiple network locations to provide an end to end description of network traffic at coarser time scales such a network traffic flows and macroflows.

In an embodiment a network monitoring system provides top down visibility of network performance data. System administrators or other users can zoom in or drill down on high level network performance data such as network and application health to one or more intermediate levels of network performance data such as network flow statistics and trends and further to low level network performance data such as captured network packets. When a user selects specific high level network performance data of interest such as a macroflow or flow an embodiment of the network monitoring system retrieves corresponding low level network performance data such as packet and microflow traffic from the appropriate distributed network monitoring locations to provide additional detailed information about the area of interest.

Branch locations each include any arbitrary number of client systems such as client systems A B and C. Client systems may include user computers server computers or other communication devices. Client systems communicate with each other with any other network devices at that branch location and with WAN via routers via branch location LANs such as branch location LANs A B and C. Branch location LANs may include any combination of wired and wireless network devices including Ethernet connections of various speeds network switches gateways bridges load balancers wireless access points and firewalls and network address translation devices.

Additionally each branch location includes one or more network traffic capture modules such network traffic capture modules A B and C. Each network traffic capture module is adapted to intercept network packet traffic and to record attributes of these packets for performance monitoring and analysis. Following the interception of network packets and the recording of their attributes of interest network traffic capture modules may forward these network packets on towards their intended destinations.

Embodiments of the network traffic capture modules may be connected to branch location LANs using in line or out of path configurations. For example network traffic capture module A is connected in line between the branch location LAN A and router A. Conversely network traffic capture module B is connected with branch LAN B in an out of path configuration such as through a router span port or a tap device installed between branch LAN B and router B.

Example attributes recorded by network traffic capture modules includes source and destination network addresses the time of interception packet and packet payload sizes the network protocol protocol specific attributes such as the message type such as a TCP SYN message sequence and acknowledgement numbers flags or other indicators window sizes and scaling factors error correction and checksum values packet headers and footers optional metadata embedded into packets layer 3 and 4 information such as time to live TTL packet drops round trip times and fragmentation information and or layer7 information found inside reconstructed packet payloads such as application identifiers and URLs.

Additionally embodiments of the network traffic capture modules may analyze packets to derive additional attributes to be used for network performance analysis. For example a derived attribute may be a hash checksum list of segmentation boundaries or other type of data fingerprinting of packet payloads. In another example network traffic capture modules may group related packets such as those having the same source and destination into microflows. In a further embodiment the network traffic capture modules may derive additional attributes summarizing the activities of microflows such as the source and destination addresses protocols used application identifiers and or URLs accessed. Additionally the network traffic capture module may derive statistical measurements of microflows such as the average maximum minimum and variance of one or more attributes of the microflow and or of packets included in the microflow. Microflow performance data may be stored by network traffic capture modules in conjunction with references to the performance data for their corresponding packets to assist in the retrieval of more detailed information as needed.

Each of the network traffic capture modules may store detailed packet attributes for use in performance monitoring and analysis. In an embodiment the network traffic capture modules store detailed packet attributes for intercepted network packets at their respective network locations. As described in detail below an embodiment of the network traffic capture modules analyze the detailed packet attributes of intercepted packets to identify microflows and other summary and aggregate information. This summary and aggregate information is communicated to a central flow collection module for storage. Because summary and aggregate information is communicated over the network for all of the intercepted packet traffic rather than the complete detailed packet attributes for all of the intercepted packet traffic the network bandwidth required for network performance monitoring and analysis is substantially reduced.

Similarly data center location includes one or more types of server computers such as one or more application servers file servers and web servers . Servers and are connected via data center LAN and or storage area network SAN which may include any combination of wired and wireless network devices including Ethernet and SAN connections of various speeds network switches gateways bridges load balancers wireless access points and firewalls and network address translation devices and one or more routers for connecting with WAN .

Additionally data center location may include one or more network traffic capture modules such as network traffic capture modules A B C and D. Network traffic capture modules may be installed to capture network traffic between entities of interest such as to and from servers of different. Network traffic capture modules like modules intercepted network packet traffic and record attributes of interest and then send the intercepted network packets towards their intended destinations.

Embodiments of network traffic capture modules and may be implemented as standalone network devices as part of other network devices such as WAN optimization devices as software applications executing on network devices and or computer systems and or as virtual machine applications executed by network devices and or computer systems.

Embodiments of the network traffic capture modules and may be located in path between clients servers and network devices of interest to users or alternatively out of path. In an out of path configuration network devices are configured to forward a copy of some or all of the packet traffic passing through a network location to a network traffic capture module.

Like network traffic capture modules network traffic capture modules store detailed packet attributes for intercepted network packets at their respective network locations. An embodiment of the network traffic capture modules analyze the detailed packet attributes of intercepted packets to identify microflows and other summary and aggregate information. This summary and aggregate information is communicated to a central flow collection module for storage. Because summary and aggregate information is communicated over the network for all of the intercepted packet traffic rather than the complete detailed packet attributes for all of the intercepted packet traffic the network bandwidth required for network performance monitoring and analysis is substantially reduced.

Additionally central flow profiler module analyzes the summary and aggregate network traffic data provided to central flow collection module to identify related network traffic as it travels through multiple locations over the example networks of system . For example central flow profiler module may identify network flows by cross referencing flow data intercepted at different network locations that have the same source and destination and other attributes and sequence these according to their times of interception. Central flow profiler module may further identify network macroflows using similar analysis of network flows. Central flow profiler module may also determine additional summary or aggregate attributes of flows and macroflows based on the microflow attributes. Macroflow and flow performance data may be centrally stored in conjunction with references to location of the corresponding flows and microflows respectively to assist in the retrieval of more detailed information as needed. In the latter case the references to microflow performance data may include references to stored data at one or more distributed network traffic capture modules.

In an embodiment the central flow profiler module may provide and or interface with one or more network monitoring and performance applications to provide users and applications with top down visibility of network performance data. Applications may be implemented using web based technologies such as HTML and XML. Similarly interfaces may use web protocols such as HTTP and REST. Using applications and or interfaces provided by the central flow profiler module users and applications can view network performance data from a high level such as macroflows and flows and as needed focus on one or more intermediate levels of network performance data such as network flow statistics and trends and further to low level network performance data such as captured network packets. When specific high level network performance data of interest such as a macroflow or flow is selected an embodiment of the central flow profiling module retrieves corresponding low level network performance data such as packet and microflow traffic from the appropriate distributed network monitoring locations to provide additional detailed information about the area of interest.

In a further embodiment the network monitoring system may allow for extensions and additional applications through a scripting interface. This can enable features such as UI gadgets more advanced behavioral analytics packet dissectors capture control reports system configuration alarms network topology applications and additional packet and flow information. The scripting interface may also enable alarms and behaviors specific to different types of applications and businesses.

Packet capture modules record attributes of intercepted network packet traffic and then may forward the packet traffic on towards its destinations. Example attributes recorded by the packet capture modules include source and destination network addresses the time of interception packet and packet payload sizes the network protocol protocol specific attributes such as the message type such as a TCP SYN message sequence and acknowledgement numbers flags or other indicators window sizes and scaling factors error correction and checksum values packet headers and footers optional metadata embedded into packets layer 3 and 4 information such as time to live TTL packet drops round trip times and fragmentation information and or layer7 information found inside reconstructed packet payloads such as application identifiers and URLs.

Embodiments of the packet capture modules and or packet and microflow traffic analytics modules may also analyze packet traffic to derive additional attributes to be used for network performance analysis. For example a derived attribute may be a hash checksum list of segmentation boundaries or other type of data fingerprinting of packet payloads.

In an embodiment the packet capture modules record packet traffic attributes in packet traffic data storages . In an embodiment each instance of packet traffic data storage such as A and B includes local data storage associated with its respective network traffic capture module. Packet traffic data storages may store packet traffic attributes in any format and using any type of data structure known in the art such as within databases or log files. In a further embodiment one or more of the packet traffic data storages utilize a file system specifically optimized to organize chronologically recorded packet traffic attributes. Details of an example file system implementing this embodiment are described below.

In an embodiment each of the network traffic capture modules include packet and microflow traffic analytics modules . Each of the packet and microflow traffic analytics modules may also analyze the recorded packet attributes in their respective local packet traffic data storages to group related packets such as those having the same source and destination into microflows. Microflow traffic data may include attributes common to some or all of the network packets in a microflow such as a common source and or destination protocol and or associated application. In a further embodiment each of the packet and microflow traffic analytics modules may derive additional attributes summarizing the activities of microflows such as the source and destination addresses the time the microflow was received protocols used application identifiers and or URLs accessed. Additionally packet and microflow traffic analytics modules may derive statistical measurements of microflows such as the average maximum minimum and variance of one or more attributes of the microflow and or of packets included in the microflow. In an embodiment each of the packet and microflow traffic analytics modules stores microflow traffic data and attributes in microflow traffic data storage . The microflow traffic data and attributes are stored in association with references to the corresponding packet traffic data stored in packet traffic data storage to facilitate access to detailed packet traffic data and attributes if needed. In a further embodiment the microflow traffic data storages may include local data storage associated with their respective network traffic capture modules .

In a further embodiment the packet and microflow traffic analytics modules may perform application and or traffic specific analysis of specific types of network traffic. For example the packet and microflow traffic analytics modules may process voice over IP VOIP network traffic to determine an aggregate quality of service metric value such as a mean opinion score MOS value. In this embodiment the packet and microflow traffic analytics modules may extract and or compute arbitrary attributes from network packets conditionally based on attributes of the network traffic such as the source destination protocol packet metadata and or associated application. Attributes extracted or computed by the packet and microflow traffic analytics modules may be stored in association with packet and microflow traffic data and or passed along with flow and or macroflow data.

In an additional embodiment users may select the types of attributes to be extracted and or computed from network packet traffic. Similarly an embodiment of the invention enables users to select the type of network packet traffic to be analyzed in this detail by the packet and microflow traffic analytics modules . This user configurability enables users to balance performance considerations against the need for detailed network traffic data. In yet a further embodiment users may define their own attributes to be extracted and or computed from network packet traffic microflows flows and or macroflow via script or program code.

In an embodiment each of the network traffic capture modules and its respective analytics modules generate flow traffic data describing its microflow traffic data on a coarser time scale. For example if microflows cover time periods on the scale of seconds then flow traffic data cover time periods associated with flows such on the scale of minutes. This flow traffic data is referred to as duplicated flow traffic data because it represents a portion of an end to end network traffic flow. Each flow described by the duplicated flow traffic data includes one or more related microflows. Duplicated flow traffic data may include summary attributes such as microflows source and destination addresses and ports the time the microflow was received protocols used application identifiers and or URLs accessed the number and size of the packets included in the microflows. quality of service and or error metrics such as the number of packets dropped in the flow and or any other attributes of microflows or packets statistical measurements of microflows such as the average maximum minimum and variance of one or more attributes of the microflow and or of packets included in the microflow and or attributes of packets and or microflows selected for monitoring.

The network traffic capture modules forward duplicated flow traffic data to a central flow collection module . The central flow collection module includes a flow traffic data collector for storing the duplicated flow traffic data from one or more network traffic capture modules in flow traffic data storage . In an embodiment duplicated flow traffic data from two or more network traffic capture modules are stored in the same flow traffic data storage . Duplicated flow traffic data stored in flow traffic data storage may include references to their respective associated network traffic capture modules and microflow traffic data to facilitate access to detailed microflow traffic data and attributes if needed. In an embodiment flow traffic data storage is included in local storage associated with a central flow profiler module .

In a further embodiment flow and macroflow traffic analytics module analyzes the received duplicated flow traffic data to create an end to end representation of network traffic flows. These end to end representations of network traffic flows are referred to as connected flow traffic data. For example each of the network traffic capture modules collects packet traffic data at a different network location. Using the duplicated flow traffic data collected and derived from these different locations the flow and macroflow traffic analytics module can identify duplicated flow traffic data from two or more network locations that are part of the same end to end network flow. Duplicated flow traffic data collected from different locations and part of the same connected flow may have the same source and destination addresses and ports and or other attributes and similar time values. Other information such as routing information may be used to determine the sequence of duplicated flow traffic data from different network location in the end to end network connection. In a further embodiment the contents of network packets or a derived attribute of these contents such as a hash checksum list of segmentation boundaries or other type of data fingerprinting may be used to identify duplicated flows that are part of the same end to end network connection or a related network connection. In an embodiment end to end connected network flow traffic data is also stored in flow traffic data storage . In a further embodiment the end to end connected network flow traffic data is stored in conjunction with references to the associated network traffic capture modules and their respective packet and microflow traffic data storages to assist in the retrieval of more detailed network traffic data associated with connected network traffic flows.

In an embodiment flow and macroflow traffic analytics module also analyzes the connected flow traffic data to generate macroflow traffic data representing sets of end to end network flows over a coarser time scale for example around fifteen minutes. Macroflow traffic data may include sequences of connected network flows from the same source and or the same destination. For example macroflow traffic data may include all of the connected network flows that start end and or pass through a given point in a network. This macroflow information may used to monitor and analyze the performance of a specific client server or network device. Macroflow traffic data may also aggregate connected network flows according to attributes such as an application protocol or service type such as e mail services database services VOIP services. Macroflow traffic data is stored in macroflow traffic data storage with references to their respective associated network traffic flow data to facilitate access to detailed flow traffic data and attributes if needed.

In an embodiment macroflow traffic data may include one or more summary attributes describing aspects of the aggregated connected network flows. The flow and macroflow traffic analytics modules may use predefined and or user defined criteria to specify how these summary attributes are determined. In an additional embodiment macroflow summary attributes may measure network performance in quantitative metrics such as a quality of service score and or qualitative metrics for example representing normal operation possibly anomalous operation and abnormal or faulty operation. 

Users and applications may access packet microflow flow and macroflow traffic data from their respective sources through one or more network traffic monitoring and analysis applications . Network traffic and analysis applications may access network traffic data via one or more application programming interfaces. In a further embodiments the application programming interface may use web based protocols such as HTTP and SOAP data formats such as XML and JSON and API principles like representative state transfer REST for exchanging network traffic data.

Embodiments of the network traffic monitoring and analysis applications may include command line and graphical user interfaces to present network traffic data and receive input from users. Network traffic monitoring and analysis applications may present network traffic data in the form of tables lists graphs charts and flow and packet sequence diagrams. Network traffic monitoring and analysis applications may include functions for searching and filtering network traffic data according to criteria specified by users or other applications. Network traffic monitoring and analysis applications may also export network traffic data formats in human and or machine readable formats for further analysis.

In an embodiment the network traffic monitoring and analysis applications enable users to view related network traffic data at a variety of different time scales and different levels of detail to monitor and analyze network performance. For example the network traffic monitoring and analysis applications may present users with a macroflow view of network traffic data. From this view a user may identify a macroflow of interest. For example a network traffic monitoring and analysis application may indicate that one of the macroflows associated with a specific service is experiencing occasional delays in response times. In this example upon selecting this macroflow interest the network traffic monitoring and analysis application retrieves and presents more detailed network flow data corresponding with the selected macroflow. For example the network traffic monitoring and analysis application may present a chart or graph of the connected flow s response time over the past few days.

Once a user has identified a portion of one or more connected network traffic flows of interest the network traffic monitoring and analysis applications may retrieve corresponding microflow information from the appropriate microflow traffic data storages in one or more of the network traffic capture modules and present this information to the user. For example a user may select the network traffic flows in a time range of a few minutes for further analysis. The network traffic monitoring and analysis applications will then retrieve the microflow traffic data associated with this flow within this time range and present it to the user. Similarly the user may then select one or more packets of interest within a microflow for further examination. The network traffic monitoring and analysis applications then retrieves the corresponding packet traffic data from the appropriate packet traffic data storages in one or more of the network traffic capture modules for presentation to the user.

In addition to one or more network traffic monitoring and analysis applications an embodiment of the invention may also include a scripting language interface enabling scripts or applications to access and process network traffic data at all available levels of detail. The scripting language interface can be used to add features and functionality within existing network traffic monitoring and analysis applications to interface and or integrate other applications with the central flow profiler module and also to create new standalone applications. Example usages enabled by the scripting language interface include behavioral analytics within network traffic monitoring and analysis applications widgets packet dissectors customized network performance reporting network configuration applications network topology analysis and network performance alarms. Embodiments of scripting language interface may utilize any programming or scripting language known in the art including Javascript Python and Perl as well as bytecode compilers and interpreters for supporting additional programming and scripting languages.

Step collects packet traffic data at distributed locations for example using network traffic capture modules. In an embodiment packet traffic may be collected by intercepting network packets on route to their destinations recording attributes of these packets and then forwarding the intercepted packets on to their destinations. As described above example attributes recorded by step may include source and destination network addresses the time of interception packet and packet payload sizes the network protocol protocol specific attributes such as the message type such as a TCP SYN message sequence and acknowledgement numbers flags or other indicators window sizes and scaling factors error correction and checksum values packet headers and footers optional metadata embedded into packets layer 3 and 4 information such as time to live TTL packet drops round trip times and fragmentation information and or layer7 information found inside reconstructed packet payloads such as application identifiers and URLs. In a further embodiment step analyzes packet contents and or packet traffic attributes to derive additional attributes to be used for network performance analysis such as data fingerprints.

Step analyzes packet traffic data to group related packets such as those having the same source and destination into microflows. In a further embodiment step may derive additional attributes summarizing the activities of microflows including statistical measurements of microflows such as the average maximum minimum and variance of one or more attributes of the microflow and or of packets included in the microflow. In yet a further embodiment step may analyze packet traffic data selected by users or user defined criteria for example to provide in depth analysis of specific types of network traffic. In an additional embodiment step may analyze packet traffic data to determine user defined attributes.

Step provides duplicated flow traffic data and optionally aggregate packet or microflow data to one or more central modules for collection and analysis. In an embodiment the duplicated flow traffic data and any aggregate packet or microflow data is provided from one or more network traffic capture modules at different network locations to central flow collection and or central flow profiler modules for analysis and storage.

Step cross references the received duplicated flow traffic data to create connected flow traffic data representing network traffic flows from end to end. Embodiments of step may cross reference attributes of duplicated flow traffic data collected using source and destination addresses and ports similar time values routing information and or the contents of network packets or a derived attribute of these contents.

In an embodiment step analyzes the connected flow traffic data to generate macroflow traffic data. Macroflow traffic data may represent attributes of connected network traffic flows over longer time scales such as 15 minutes. Embodiments of step may generate macroflow traffic data by aggregating connected network flows according to attributes such as an application protocol or service type.

In an embodiment step may determine aggregate attributes of connected flow and or macroflow traffic data for the uses such as performance monitoring and analysis. Step may use predefined and or user defined criteria to determine these aggregate attributes. Step may also determine quantitative and or qualitative metrics of these flows and macroflows.

Step stores the connected flow and macroflow traffic data. In an embodiment macroflow and flow traffic data is stored in data storage with references to their respective associated network traffic flows and microflows to facilitate access to detailed traffic data and attributes if needed.

In response to receiving the selection of at least one macroflow or flow step identifies one or more distributed storage locations of corresponding microflow and or packet traffic data. In an embodiment macroflow and flow traffic data is stored in a central storage location with references to one or more distributed storage locations storing the corresponding microflow and or packet traffic data. In a further embodiment these distributed storage locations may also be the network locations where network packet traffic data is collected via network traffic capture modules.

An embodiment of step accesses the central macroflow and or flow traffic data to identify macroflow and or flow traffic data corresponding with the selection of step . Step then accesses the references associated with this traffic data to identify one or more distributed storage locations for the related microflow and or packet traffic data. Each reference may include the network location including distributed traffic data such as a network address of a network traffic capture module and at least one storage location within each storage device such as a storage or memory address file path database key or other record identifier or other type of index into a data structure.

Step retrieves microflow and or packet traffic data corresponding with the selection of one or more macroflow and or flows from step . Because each macroflow and or connected flow describes network traffic as it passes through multiple locations over one or more networks an embodiment of step may retrieve microflow and or packet traffic data from one or more distributed network locations such as the network locations of one or more network traffic capture modules.

Step generates detailed network traffic summary data from the macroflow and flow traffic data and the traffic data retrieved in step such as microflow and or packet traffic data. In an embodiment step uses the macroflow and or flow traffic data to organize the corresponding microflow and or packet traffic data into detailed network traffic summary data. For example step may use connected flow traffic data to organize the microflow traffic data retrieved from two or more network locations thereby creating an end to end representation of microflow traffic. Similarly step may use the flow traffic data and or retrieved microflow traffic data to organize the packet traffic data retrieved from two or more network locations thereby creating an end to end representation of network packet traffic. In a further embodiment a user application and or script may specify the type of representation to be generated by step . For example a user application and or script may specify a subset of network traffic data of interest or how the network traffic data should be organized in the detailed network traffic summary data.

Step returns the detailed traffic summary data to the user application and or script. In an embodiment the detailed traffic summary data may be returned by the same application programming interface used to receive the selection in step . In another embodiment step may output the detailed traffic summary data via another interface or in the form of a data file. Step may utilize web based protocols and formats such as HTTP and XML for returning the detailed traffic summary data.

As described above embodiments of the invention may cross reference duplicated flow traffic data to create combined network flow data representing network flows from their sources to their destinations. However some types of network traffic may generate a cascade of related network traffic that does not necessarily travel between the same source and destination.

For example a network packet requesting a web page may be received by load balancer. The load balancer then directs the web page request to one of a set of web servers. If the web page includes dynamic content this web server may create and send one or more related packets to one or more application servers to retrieve and or generate additional data. Each application server may create and send one or more additional packets to database servers other application servers and or data storage systems.

In this example a single packet from a client to a web server results in a cascade of related network packet traffic between load balancers web servers application servers database servers and data storage systems as well as any other devices on the network such as network switches WAN optimization devices proxies and firewalls. The network traffic that triggers this cascade of additional network traffic between other entities is referred to as triggering network traffic. The network traffic generated in response to the triggering network traffic which is not directed between the same source and destination as the triggering network traffic is referred to as related network traffic. To assist users and applications with monitoring and analyzing network performance an embodiment of the invention identifies related network traffic and cross references it with its triggering network traffic.

For each macroflow flow microflow and or packet included in the selection step identifies the destination server for the selected network traffic. In an embodiment step identifies the destination server using the destination network address associated with the selected network traffic.

Step retrieves the time and a data fingerprint of one or more network packets associated with the selected network traffic. In an embodiment if the selected network traffic includes a macroflow connected or duplicated flow and or a microflow then step first identifies one or more network packets associated with the selected network traffic. This may be done for example using method described above.

Once one or more network packets associated with the selected network traffic are identified step retrieves the time of interception at or near the destination server for these associated network packets. In an embodiment these and other attributes of the network packets may be retrieved from distributed packet traffic data storages.

Additionally step retrieves data fingerprints previously derived and stored for these network packets at the time of their interception. The data fingerprints are derived at least in part from the contents of the network packets payload or data contents. Example data fingerprints may include a hash checksum and or a list of segmentation boundaries of the network packet payloads. Data fingerprints may be determined for all or subsets of packet payloads. For example step may segment a packet payload according to a deterministic segmentation algorithm and then determine separate hashes or checksums for each segment of the packet payload.

Step identifies outbound network packets from the destination server in a time window based on the interception time s determined in step . For example step may search distributed packet traffic data storages for network packets originating at the destination server and having an interception time at or near this network location within a time window such as one second of the interception time of inbound network packets. In an embodiment these outbound network packets may be directed to destinations other than the sources or destinations of the selected network traffic.

Step searches the attributes of the identified outbound network packets for similar or the same data fingerprints as that retrieved for inbound network packets in step . In an embodiment step retrieves data fingerprint attributes from distributed traffic packet storages for the identified outbound network packets. Step compares the data fingerprint attributes of the outbound network packets with those of the inbound network packets. Outbound data packets with the same or similar data fingerprints as that found in the selected inbound network traffic are likely to have been triggered by this inbound network traffic.

An embodiment of step adds any outbound network packets with the same or similar data fingerprints as the inbound network traffic to a related network traffic data set. In an embodiment step may also search distributed and central microflow flow and macroflow traffic data storages for microflows flows and or macroflows including these matching outbound network packets and add these microflows flows and or macroflows to the related network traffic data set.

Step returns the related network traffic set to the requesting user or application for further review or analysis.

In an embodiment steps to may be repeated using newly identified related outbound network traffic from a first destination server as inbound network traffic to one or more additional destination servers. For example steps to may be applied recursively to identify further network traffic that is triggered by outbound network traffic from a first destination server.

Packet interception network interface is adapted to copy all or a portion of the intercepted network traffic and then forward this traffic on to its destination. In an embodiment intercepted network traffic data such as network packet headers and or packet payloads from intercepted network traffic is provided to microflow analytics module . Microflow analytics module groups related packets such as those having the same source and destination over a relatively short time frame such as seconds into microflows. In a further embodiment the microflow analytics module may derive additional attributes summarizing the attributes and activities of microflows such as the source and destination addresses the time the microflow was received protocols used application identifiers and or URLs accessed statistical measurements of microflows such as the average maximum minimum and variance of one or more attributes of the microflow and or of packets included in the microflow and or user defined or user enabled attributes or metrics such as quality of service metrics for general or specific types of network traffic.

Microflow analytics module outputs packet traffic data such as packet headers and any derived packet traffic attributes to packet data block reference storage device for storage. Packet data block storage device may include one or more physical data storage devices configured to act as a single logical storage device or multiple logical storage devices such as a RAID array.

In an embodiment the packet data block reference storage device includes a file system adapted to organize packet traffic data. In typical prior file systems node data structures such as inodes are used to store information about a regular file directory or other file system object. In prior systems node data structures organize data into directories and files. A directory node includes pointers or references to one or more file nodes and or other directory nodes. A file node may include one or more pointers or addresses to data blocks including the file data. Both file and directory node data structures may optionally include pointers or addresses of additional node data structures to represent large files or directories.

In contrast with prior file systems an embodiment of the system includes a file system adapted to organize packet traffic data. Packet data block reference storage includes a plurality of packet data storage blocks . Each of the packet data storage blocks is adapted to store packet traffic data for a large number of packets. For example each of the packet data storage blocks may be sized in the hundreds of megabytes allowing it to store packet traffic data for millions or more packets. In an embodiment microflow analytics module writes packet traffic data to packet data storage blocks in sequential order based at least approximately on the order in which packets are intercepted. This maximizes write throughput by using sequential data writes to minimize disk access time.

An embodiment of system utilizes a block allocation table data structure to index and enable efficient access to packet traffic data stored in the packet data storage blocks. In this embodiment the block allocation table includes a plurality of storage block references . Each of the storage block references includes a index address pointer or other reference to one of the packet data storage blocks . For example storage block references A B and C provide references to packet data storage blocks A B and C respectively. Packet data block reference storage may include any arbitrary positive integer number of packet data storage blocks . Similarly block allocation table may include the same arbitrary positive integer number of corresponding storage block references . In an embodiment the block allocation table is stored packet data index storage device separate from the packet data block reference storage device to avoid interrupting the write throughput of packet traffic data.

Additionally each of the storage block references includes metadata to identify the range of packet traffic data stored in its corresponding packet data storage block. This metadata may include the time stamps for the earliest and or latest packets stored in the packet data storage block and the total number of packets stored in the packet data storage block. By accessing the metadata in the storage block references applications can quickly identify one or more of the packet data storage blocks including packet traffic data of interest.

Additionally data storage device may include one or more microflow records to store microflow traffic data . Microflow records may include references pointers or addresses to one or more of the packet data storage blocks associated with their corresponding packet traffic data. Embodiments of the microflow records may be stored on the same storage device as the block allocation table or the packet data storage blocks or on a separate data storage device.

In an embodiment microflow records may be used to optimize searches for relevant packet traffic data. For example if a user or application is searching for packet traffic data for a flow within a time period the flow traffic data may be accessed to identify one or more microflows associated with this flow and within the time period of interest. The microflow records corresponding with these identified microflows can be accessed to identify one or more packet data storage blocks including the relevant packet traffic data. The user or application only needs to search the packet data storage blocks identified by the microflow records rather than large log files or other data structures to retrieve the relevant packet traffic data.

Computer system includes a central processing unit CPU for running software applications and optionally an operating system. CPU may be comprised of one or more processing cores. Memory stores applications and data for use by the CPU . Examples of memory include dynamic and static random access memory. Storage provides non volatile storage for applications and data and may include fixed or removable hard disk drives flash memory devices ROM memory and CD ROM DVD ROM Blu ray or other magnetic optical or solid state storage devices.

In a further embodiment CPU may execute virtual machine software applications to create one or more virtual processors capable of executing additional software applications and optional additional operating systems. Virtual machine applications can include interpreters recompilers and just in time compilers to assist in executing software applications within virtual machines. Additionally one or more CPUs or associated processing cores can include virtualization specific hardware such as additional register sets memory address manipulation hardware additional virtualization specific processor instructions and virtual machine state maintenance and migration hardware.

Optional user input devices communicate user inputs from one or more users to the computer system examples of which may include keyboards mice joysticks digitizer tablets touch pads touch screens still or video cameras and or microphones. In an embodiment user input devices may be omitted and computer system may present a user interface to a user over a network for example using a web page or network management protocol and network management software applications.

Computer system includes one or more network interfaces that allow computer system to communicate with other computer systems via an electronic communications network and may include wired or wireless communication over local area networks and wide area networks such as the Internet. Computer system may support a variety of networking protocols at one or more levels of abstraction. For example computer system may support networking protocols at one or more layers of the seven layer OSI network model. An embodiment of network interface includes one or more wireless network interfaces adapted to communicate with wireless clients and with other wireless networking devices using radio waves for example using the 802.11 family of protocols such as 802.11a 802.11b 802.11g and 802.11n.

An embodiment of the computer system may also include one or more wired networking interfaces such as one or more Ethernet connections to communicate with other networking devices via local or wide area networks.

The components of computer system including CPU memory data storage user input devices and network interface are connected via one or more data buses . Additionally some or all of the components of computer system including CPU memory data storage user input devices and network interface may be integrated together into one or more integrated circuits or integrated circuit packages. Furthermore some or all of the components of computer system may be implemented as application specific integrated circuits ASICS and or programmable logic.

Further embodiments can be envisioned to one of ordinary skill in the art. In other embodiments combinations or sub combinations of the above disclosed invention can be advantageously made. The block diagrams of the architecture and flow charts are grouped for ease of understanding. However it should be understood that combinations of blocks additions of new blocks re arrangement of blocks and the like are contemplated in alternative embodiments of the present invention.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

