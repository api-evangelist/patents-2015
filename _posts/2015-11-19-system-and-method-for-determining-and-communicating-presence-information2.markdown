---

title: System and method for determining and communicating presence information
abstract: A system and method for communicating presence information that can include at a first server of a communication platform, receiving an authorization token of a first client application; verifying at least one permission associated with the authorization token; registering a presence status of the first client application upon verifying the at least one permission of the authorization token; at a second server of the communication platform, accepting an incoming communication request; retrieving communication instructions according to the incoming communication request; identifying an instruction to communicate with a communication destination of the first client application; accessing the presence status resource of the first client application; establishing communication with the first client application according to the accessed presence status resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09641677&OS=09641677&RS=09641677
owner: Twilio, Inc.
number: 09641677
owner_city: San Francisco
owner_country: US
publication_date: 20151119
---
This application is a continuation of co pending U.S. patent application Ser. No. 13 624 750 filed 21 Sep. 2012 which claims the benefit of U.S. Provisional Application No. 61 537 223 filed 21 Sep. 2011 and U.S. Provisional Application No. 61 537 217 filed 21 Sep. 2011 all of which are incorporated in their entirety by this reference.

This invention relates generally to the telephony field and more specifically to a new and useful system and method for determining and communicating presence information in the telephony field.

In recent years telephony and messaging applications have spread into numerous settings including peer to peer computer based telephony and messaging services. One feature of some systems relates to determining the availability or presence of a user to receive and or engage in a communication. In order to determine and communicate this presence information a user s terminal will repeatedly transmit his or her availability to a presence server which then redirects that status to each and every contact of the user. Similarly each of the user s contacts is constantly and repeatedly transmitting its presence information back to the user and each of their respective contacts. The resultant traffic of presence information grows geometrically with each additional user and contact thereby consuming vast network and server resources while providing very little useful information at the margin. Additionally including such functionality can require considerable engineering resources and some cases a physical presence of a server on site to support the presence functionality. Thus there is a need in the telephony field to create a new and useful system and method for determining and communicating presence information. This invention provides such a new and useful system and method.

The following description of the preferred embodiments of the invention is not intended to limit the invention to these preferred embodiments but rather to enable any person skilled in the art to make and use this invention.

As shown in a system for determining and communicating presence information can function to determine and communicate the presence information in a bidirectional manner between one or more accounts . . . N and a client application of an account . Preferably a presence server can function as an intermediary between the accounts . . . N and the client application . More particularly the presence server preferably functions to receive N messages conveying the status of each of the accounts . . . N and convert those N messages into a single message to the client application thereby substantially reducing the consumption of the presence data. Conversely the presence server preferably also functions to receive a single message from the client application and convey a single message to each of the accounts . . . N again substantially reducing the data traffic and consumption of presence data. Preferably the transmissions from the presence server include only a single line of content for use in an API of the type described below.

In another variation of the system of the preferred embodiment the system can provide for the determination and communication of presence information associated with one or more devices relating to a single account . An account is preferably a contact within a communication platform or system. A contact may be a name spaced endpoint or any suitable identifier for a communication destination. As used herein the term device can include a mobile based telephony application a browser based telephony application a PSTN telephony device either wired or wireless or any suitable combination thereof. As shown in the account can be associated with a token setting forth and or containing one or more attributes of the account . As an example the token can include a definition of account permissions capabilities authorizations security protocols as well as presence information relating to one or more devices. Each device preferably includes a client application that runs and interfaces with the presence server to provide information of an account . Preferably each of the devices can have its own presence information that is the account might be present on his or her mobile based application but not present at his or her browser based telephony application. In some variations a single device may be allowed to have two client applications running and indicate different presence information for each client application. For example a user may have two different applications open on one device that function as communication endpoints for the account but the user may set availability differently for each.

As shown in preferably the presence data can be aggregated for all devices. Alternatively the presence data can be partitioned by each client application such that a account can only see the presence data for those client applications to which the account is connectable. Preferably the grouping and or partitioning of the presence data by device can be established in accordance with the token which as noted above can function to set the basic rules and parameters of client communication. Preferably the presence data can include one or more fields that can be populated with minimal information to convey the presence information to the account . As an example the presence data can include a field indicating whether an account in a contact list is available and whether any one or more client applications i.e. devices of accounts in a contact list are accessible. Additionally the presence data can further include a field indicating the transitional status of an account that is unavailable that is whether the account is unavailable because he or she is busy on another call away from the device down the hallway or extended away lunch gone home for the day or on vacation .

As shown in the system of the preferred embodiment can be configured in part as a communication platform cloud system which can be separate from the presence server . Alternatively the presence server can be integrated into the cloud system and or consolidated into one or more nodes and or functions of the cloud system . In one variation of the system of the preferred embodiment the presence server can compose a portion of the cloud system such as a cloud based service such as that available from the assignee of the present application. Preferably the presence server and or cloud system is configured according to an Application Programming Interface API . As used herein the term API should be understood to mean any combination of software firmware and or hardware that allows two or more software applications i.e. machine readable instructions to communicate with one another. The cloud system is preferably a communication platform that facilitates communication e.g. telephony voice sessions video chatting SMS messaging . An example API can be configured as a telephony platform such as one substantially similar to the one described in published U.S. Patent Application No. 2009 0252159 titled SYSTEM AND METHOD FOR PROCESSING TELEPHONY SESSIONS assigned to the assignee of the present application and hereby incorporated in its entirety by this reference. The cloud service may interface with the presence server through an API. The API may be an internal presence API that is only exposed to the cloud system but the presence server and or the cloud system may expose an at least partial access presence API for use by outside devices.

In another variation of the system of the preferred embodiment the presence server or presence server portion of the cloud system can be configured to operate in a substantially or entirely RESTful mode. Alternatively all communications in and out of the presence server can be RESTful in nature in both directions. RESTful is understood in this document to describe a Representational State Transfer architecture as is known in the art. The RESTful HTTP requests are preferably stateless thus each message communicated between at least the presence server and the client preferably contains all necessary information for the presence information relating to the client. Hardware communications elements such as routers and servers preferably do not need to remember or store previous communications to be aware of the state. Documents media and application state are preferably viewed as addressable resources combined with data provide to the resource via request parameter such as HTTP GET or HTTP POST parameters or request body contents. Such request data can include an updated representation of the call resource or other call state data generated as a result of call router operation such as digits pressed on the keypad or audio recordings generated.

State information included with each request can include a unique call identifier call status data such as whether the call is in progress or completed the caller ID of the caller the phone number called geographic data about the callers whether a device is available for communication and or any suitable data. Alternatively a varying level of a RESTful communication statelessness can be used such as by using cookies session tracking or any suitable devices to simulate a normal website visitor model. Preferably data sent with each request can fully enable the application server to determine the next state of the call to execute. RESTfulness preferably does not preclude using an external data source such as a database to lookup additional data to log call meta data or determine application logic.

As shown in the cloud system can function to transition incoming communications into connected communications to one or more client applications . Preferably each of the clients can provide a presence stream to the presence server indicating a status of the client application on one or more devices as described above. Preferably the presence stream is communicated to the cloud system via a simple one line API or single API call. Alternatively the presence server can be integrated into the cloud system shown in phantom such that the presence stream can be communicated to other communications hubs in the cloud system for further organization and or transmission to contacts of the clients . The system of the preferred embodiment preferably operates according to the single line http API described above and can be executed between a browser API on the client application side and a cloud based or distributed API on the cloud presence server side. Preferably the systems described herein can be applied to voice communication i.e. PSTN to browser or browser to browser voice communications presence although other types of communications such as video email SMS MMS IP based messaging proprietary messaging protocols and the like can also be considered.

The system preferably can be configured to perform one or more of the foregoing functions in a computer readable medium storing computer readable instructions. The instructions are preferably executed by computer executable components preferably integrated with the client applications the cloud system and or the presence server . The computer readable medium can be stored on any suitable computer readable media such as RAMs ROMs flash memory EEPROMs optical devices CD or DVD hard drives floppy drives or any suitable device. The computer executable component is preferably a processor but the instructions can alternatively or additionally be executed by any suitable dedicated hardware device.

As shown in a system for communicating with a client application can include one or more hardware interfaces including for example a browser a mobile device or a public switched telephone network PSTN line . In the system of the preferred embodiment each of the hardware interfaces can be connected and or interconnected with one another through a communication platform cloud based service such as that available from the assignee of the present application. Preferably the cloud service is configured according to an Application Programming Interface API . As used herein the term API should be understood to mean any combination of software firmware and or hardware that allows two or more software applications i.e. machine readable instructions to communicate with one another. An example API can be configured as a telephony platform such as one substantially similar to the one described in published U.S. Patent Application No. 2009 0252159 titled SYSTEM AND METHOD FOR PROCESSING TELEPHONY SESSIONS assigned to the assignee of the present application and hereby incorporated in its entirety by this reference.

As shown in the cloud system functions to communicate with one or more client HTTP servers . The cloud system and HTTP server communications are preferably RESTful in nature in both directions. RESTful is understood in this document to describe a Representational State Transfer architecture as is known in the art. The RESTful HTTP requests are preferably stateless thus each message communicated from the call router to the application server preferably contains all necessary information for operation of the application server and response generation of the application server. Hardware communications elements such as routers and servers preferably do not need to remember or store previous communications to be aware of the state. Documents media and application state are preferably viewed as addressable resources combined with data provide to the resource via request parameter such as HTTP GET or HTTP POST parameters or request body contents. Such request data can include an updated representation of the call resource or other call state data generated as a result of call router operation such as digits pressed on the keypad or audio recordings generated.

State information included with each request can include a unique call identifier call status data such as whether the call is in progress or completed the caller ID of the caller the phone number called geographic data about the callers and or any suitable data. Alternatively a varying level of a RESTful communication statelessness can be used such as by using cookies session tracking or any suitable devices to simulate a normal website visitor model. Preferably data sent with each request can fully enable the application server to determine the next state of the call to execute. RESTfulness preferably does not preclude using an external data source such as a database to lookup additional data to log call meta data or determine application logic.

The hardware interfaces function to interface with the human element of the communication through voice video short message service SMS multimedia messaging service MMS proprietary or alternative IP messaging protocols or other communication means and or protocols. As an example the browser can include any web enabled browser that is capable of receiving and or transmitting voice signals such as through real time messaging protocol RTMP or other suitable TCP type communication protocols. Alternatively the browser can include any plug in enabled browser that is configured for session initiated protocol SIP communications that can be transmitted through TCP UDP and or other suitable protocols. Similarly the mobile device can include a SIP module or other suitable communication protocol. Preferably each of the browser and the mobile device can be connected and or connectable to the cloud service through any suitable type of network including but not limited to wide area networks local area networks mobile telephony networks or any suitable combination thereof. As an example many current mobile devices such as tablet computers are connectable to the Internet through both WiFi and mobile telephony GSM and CDMA networks.

The mobile device of the system of the preferred embodiment can include a series of modules relating to its communication function. As shown in the mobile device of the preferred embodiment can include an operating system module an audio engine and a cloud interface module . The operating system module of the mobile device of the preferred embodiment functions to control the general functionality of the mobile device including but not limited to its communication capabilities. The audio engine of the mobile device of the preferred embodiment functions to control a majority of voice communication functions including interfacing with any device hardware such as speakers and microphones. In particular the audio engine can function to initiate and control communication sessions including voice communication sessions using Internet protocol rather than a typical telephony communication protocol typically used in a mobile device .

The mobile device of the preferred embodiment can further include a cloud interface module that functions to cooperate with the audio engine to communicate with the cloud service and communicate with other hardware interfaces . The cloud interface module can be configured within a browser function of the mobile device or alternatively as a native application or set of machine executable instructions residing permanently or quasi permanently in a memory module not shown of the mobile device . Preferably the cloud interface module can be designed according to the RESTful principles described above.

In one variation of the mobile device of the preferred embodiment the cloud interface module can further include one or more security and or resource management tools described in further detail below. Examples of security and or resource management tools can include an authorization token which can be defined as an electronic listing of possible privileges for its bearer. A developer or other suitable account holder preferably obtains an account token from the provider of the cloud service and then signs the account token to generate an authorization token. The authorization token can be used to authorize actions when included in communication requests client registration client presence registration and or any suitable use. The cloud service or any suitable service can preferably verify the authorization token by validating the signature of the authorization token against the account key. Thus enabling possibly untrusted client applications to prove that they are authorized to perform particular actions. Example privileges conferred by a token can include but are not limited to a user s abilities to make and or receive calls an identification of the application and or user and one or more operational parameters that can further define a scope of functions and or processes performable by the cloud interface module . In one exemplary variation an authorization token permits a communication request to send one or more communications. In another exemplary variation an authorization token can permit a communication request to establish a communication session that supports communications selected from audio video chat and or other suitable communication mediums. In another variation an authorization token can permit presence information to be provided to other devices or to be obtained from other devices or a contact list. In one alternative embodiment the token can be transmittable in its entirety in the clear. In another alternative embodiment some or all aspects of the token are encrypted during transmission and are partially or entirely unknown to the user of the mobile device . The cloud service may be substantially agnostic relative to the contents of the token insofar as the contents of the token can be directed entirely to the HTTP server or to a authorization server indicating if the authorization token is allowed. Alternatively the cloud service can function in part as a gatekeeper and perform one or more security and or authenticity checks prior to during and or following a communication session.

As described above and shown in a system for communicating with a client application may additionally include a presence server . The presence server is preferably integrated into the cloud service through an API or any suitable interface. The presence information provided through the presence server is preferably used in processing and or augmenting the communication of the cloud service . The presence server may alternatively be combined with any suitable component of the cloud service .

The system preferably implements the below methods in a computer readable medium storing computer readable instructions. The instructions are preferably executed by computer executable components preferably integrated with the mobile devices the cloud system and the HTTP servers . The computer readable medium can be stored on any suitable computer readable media such as RAMs ROMs flash memory EEPROMs optical devices CD or DVD hard drives floppy drives or any suitable device. The computer executable component is preferably a processor but the instructions can alternatively or additionally be executed by any suitable dedicated hardware device.

As shown in a method for detecting and communicating presence information of a preferred embodiment may include at a presence server of a communication platform registering a presence status resource of at least one account S receiving an account update at the presence server wherein the account update sets status of at least one client application of the account in the presence status resource S exposing the presence status resource at the presence server through a presence application protocol interface API S and at a communication platform accessing a presence status resource through the presence API S. The method functions to collect presence availability information from a plurality of devices and a plurality of users and enable access to the presence information in a scalable and efficient manner. The cloud based presence server in combination with a cloud communication platform system as described above preferably enables scalable presence based features in communication applications. A communication platform that is a multitenant environment can preferably provide presence enabled features to customers and or developers utilizing the communication platform. The method may further be used to provide presence information to various client applications running on devices. The presence server preferably utilizes an authorization token as described above to enable client applications to register to provide and consume presence information.

Presence data transmitted to the presence server can include any number N of presence messages for each account and or client application and or device pairing all of which may also be retransmitted at regular intervals. For example incoming presence data from an outside system can include N nT data records where N is the number of accounts and nT is the number of periods intervals for which presence data is transmitted. The presence server preferably consolidates the presence information and presence updates to alleviate client applications and other systems from handling the significant amount of presence traffic. In some variations the method may include publishing the presence information to a client application of an account.

Step S which includes at a presence server of a communication platform registering a presence status resource of at least one account functions to receive and establish presence data for an account. The presence data is preferably received in a first format for a plurality of accounts. A client application is preferably responsible for initiating and transmitting a communication to register the presence status of an account. Simultaneously or subsequently Step S may update the status of the client application. In one variation this effectively sets the presence availability of a device of a user. Additionally presence status may be assumed for an account from which no contact has been made or a significant time delay has occurred since the last update. Registering a presence status preferably includes setting a publication subscription between the presence server and at least one client application of an account. This publication subscription functions to enable presence information to be delivered and or received by a device as the presence information changes as described below. As with subsequent communications with the presence server communication is preferably received in a first format which can include for example an API format usable with the cloud system described above or an XMPP format used in other applications.

Preferably at a presence server or an alternative server of the communication platform an authorization token is received. The authorization token is preferably received when the client application is attempting to connect. The authorization token is preferably verified to ensure the client application is permitted to perform the intended act of the client application subscribing to calls messages contact list presence updates and or any suitable action. As described above authorizing preferably includes signing the authorization token against an account key shared with the developer account .

Step S which includes receiving an account update at the presence server wherein the account update sets presence status of at least one client application of the account in the presence status resource functions to set the availability of an account. As mentioned above the presence status may be set during initial presence communication from a client application or account. The initial presence communication preferably indicates the identity of the account and if the account or client application is available or not available.

Subsequent updates can be received when a presence status change occurs in a client application of an account. Thus whenever a device of an account has a status change the presence server preferably receives an account update that includes the change. Rather than consume copious amounts of network resources a client application only updates a presence communication if and when there is a need to do so. Using the API and HTTP modus described herein the method of the preferred embodiment preferably only alters a presence status resource in response to an affirmative change in such a state received by the client. Absent any change in the client s presence then the method of the preferred embodiment will take no action and thereby consume fewer resources at the presence server and or cloud service.

Presence status of an account may include the presence status of all associated client applications. Alternatively the presence status of an account may be based on an assessment of the presence status of the client applications. In one variation different presence statuses e.g. available busy do not disturb unavailable may have different priority and the presence status of an account may be set based on the highest priority of the individually set presence status of the client applications of an account. For example if a user has two devices one set to available and one set to do not disturb the account presence status is preferably set to available since the user has one device set to available. Any suitable logic may be used to determine account presence status based on presence status of client applications of the account.

In another variation of Step S the presence status can include an additional natural language description of the status of the client application or account apart from the binary rendition of whether or not the client is available. For example a client Romeo can be available and also have an additional status wooing Juliet. Juliet one of Romeo s contacts can have the additional natural language status expecting roses or the like. The presence status can also include attributes for presently unavailable contacts such as busy away short term and away long term. These attributes can be communicated in lieu of or in addition to the natural language status of the client. Accordingly client Juliet can have a presence profile that indicates she is away long term in concert with a natural language status indicating that she is asleep and therefore not permanently away. Similarly the client Romeo can have a presence profile that indicates that he is away in concert with a natural language status indicating that he is on his way to Verona in case any other contacts need to reach him directly. In another example configuration Romeo and Juliet can have joint presence statuses for example if they are on a conference call with one another both clients will have a busy attribute. Similarly Romeo and Juliet can use the same natural language status for joint events such as star crossed. 

Additionally the method of a preferred embodiment may include consolidating the presence statuses of a plurality of accounts in the presence server S. Step S functions to combine and simplify the disparate and innumerable presence status resources of the presence server. The presence server preferably includes presence information for a plurality of accounts and an account may have presence information for a plurality of client applications devices. In the application where a client application requires the presence information for a contact list of accounts there is considerable presence information that is required. The presence server preferably consolidates the presence data of the various accounts into a single API style message to more effectively and efficiently communicate the necessary presence information to the consumer of presence status resource of the presence server e.g. the client application . The presence server may alternatively consolidate presence information of client applications for an account or perform any suitable consolidation of presence data. The consolidated presence statuses are preferably published or otherwise transmitted to a client application but may alternatively be accessed as a resource through the presence API. Consolidated presence statuses may be sent on regular intervals or more preferably published to subscribed client applications when an update occurs.

Additionally the method may include publishing presence status information of an account S which functions to disseminate information from the presence server to interested devices. Step S preferably publishes presence status of accounts in a contact list to a client application that has a subscription. The publication subscription may rely upon a pub sub system webhooks or any suitable mechanism for communicating messages to a client application. The published presence status information is preferably published as a consolidated message. Similar to how client applications can update presence status when there is a change the presence server preferably publishes presence status information when there is a change in presence status information. In one variation contact lists and updates to contact lists are published to client applications.

Step S which includes exposing the presence status resource at the presence server through a presence application protocol interface API functions to enable devices to interact and utilize the information of the presence server. All communication with the presence server is preferably performed through the presence API though alternative mechanisms may be used. For example the consolidated presence information is preferably communicated through an API styled message. Client applications can additionally use a provided library or SDK to facilitate interfacing with the presence API. The presence status publication subscriptions may additionally be provided through the presence API. Preferably the presence server is configured to operate with any API in a RESTful manner as defined and described above.

Step S which includes at a communication platform accessing a presence status resource through the presence API functions to integrate the presence information into the operation of a communication platform. The communication platform preferably accesses the presence status resources to augment behavior of the communication platform and or provide insight into presence information for users of the communication platform. The communication platform preferably functions in a manner substantially similar to the methods described below in methods S and S. In one variation of the method of the preferred embodiment the presence server can be unique and disintegrated from any other suitable communication platform such as a cloud based telephony services. The communication platform in this variation may use a public presence API available to other components. In another variation of the method of the preferred embodiment the presence server can be integrated into a larger communication such as a cloud based telephony service. The communication platform in this variation may use private and or public presence API mechanisms to access and interact with the presence information of the presence server. Preferably the communication platform will access presence status resources when processing logic of a communication application and modify communication according to presence information access from the presence server. For example the communication platform may route to a different device change mediums of a communication route a call or message to a different account or perform any suitable action. The communication platform preferably communicates with a client application which preferably functions to provide presence information as well as serve as a communication endpoint for outgoing or incoming communication.

The method of the preferred embodiment can be configured partially or entirely in a computer readable medium storing computer readable instructions. The instructions are preferably executed by computer executable components preferably integrated with a mobile devices one or more portions of the cloud system and the presence server. The computer readable medium can be stored on any suitable computer readable media such as RAMs ROMs flash memory EEPROMs optical devices CD or DVD hard drives floppy drives or any suitable device. The computer executable component is preferably a processor but the instructions can alternatively or additionally be executed by any suitable dedicated hardware device.

As shown in a method S of a first preferred embodiment for making outgoing communications from a client application can include receiving a connection request from a first client application S verifying at least one parameter of the communication request S transmitting a progress signal to the first client application S retrieving communication instructions from a server according to the incoming communication request S identifying an instruction to make a call to a communication destination S and establishing communication with the communication destination S. The method of the first preferred embodiment enables a client application to establish communication. The medium of communication is preferably a telephony based communication but may alternatively be any suitable communication medium such as video session screen sharing text messaging and or multimedia messaging. The method preferably establishes a media channel i.e. communication session such as an open voice channel between the first client application and at least a second endpoint. The method may alternatively perform one or more communication requests such as transmitting a message from the first client application to at least a second endpoint. As shown in the method may be used for connecting a USER A that is using a client application to a USER B that is using a PSTN device. As shown in the method may alternatively be used for communicating a media message such as an SMS or MMS message from a USER A on a client application to a USER B using a PSTN device. The method as described herein USER A can include a mobile device of the type described above. USER B may be a PSTN connected device or a mobile device of the type described above.

Step S which includes receiving a connection request from a first client application functions to connect a USER A of client application to the CLOUD. The CLOUD is preferably a communication platform and can include one or more functions and or hardware systems described above with reference to cloud service . Preferably the CLOUD can include one or more separate servers and or services configured for trafficking and connecting communications between the users in accordance with the principles of the API described above. The connection Step S functions to initiate communications over a predetermined protocol such as SIP RTMP and the like between a mobile device and the CLOUD. The predetermined protocol is preferably an internet protocol utilizing an internet protocol such as TCP UDP and or HTTP but any suitable protocol may be used.

In one variation of the method of the preferred embodiment the connecting step S can further include transmitting one or more permissions parameters or tokens with the connection attempt. Preferably the parameters can include one or more of a cloud system token or security credential token that can contain authentication credentials of USER A a bridge token which can have a null value in outgoing calls such as that shown in and or one or more user defined parameters. The authentication token is preferably associated with security credentials that can authenticate and or authorize a communication request to perform particular actions. The authorization token can preferably be used to verify if a bearer can perform a particular action and in some variations which operations to limit permit. A communication request can be permitted to execute one or more communications. Any suitable restriction on the communications may additionally be associated with the authorization token such as number of communications timing of communications communication endpoints and communication mediums. As described above the authorization token is preferably created for a client application by a developer signing against their account key or some other suitable identifier. At the communication platform or at a service communicatively coupled to the communication platform the authorization token can be verified against an account key provided to a developer or provider of a system using the client application. As an example the user defined parameters can include additional constraints or conditions on the use of the system such as for example particular users to whom calls can be placed particular abilities of the token holder identifiers of any applications or functions in use or identifiers of any required recipients of communications e.g. customer service or sales representatives. Preferably any or all of the permissions can be consolidated into a single entity such as the cloud system token and any or all of the permissions can be sealed and kept invisible from USER A and partially or entirely transparent to any intermediary servers useable in the communication process.

Step S which includes verifying at least one parameter of the communication request functions to check if the connection request should be completed. Preferably the connection request is sent with a security credential token for a user of the first client application. The security credential token is preferably checked at the CLOUD to ensure the client application is allowed to make a connection request on behalf of the user. Permissions can be stored in association with an authorization token and the authorization token preferably received in S is used to retrieve the associated permissions. The permissions are then used to determine if the communication request is allowed. Additionally or alternatively the user defined parameters may be checked to ensure they satisfy any requirements or meet expectations. Additionally step S can preferably function to check other diagnostic functions of the communication system and identify selected ports and or communication channels for the impending communications. For example the CLOUD may check to ensure that the connection request is not being made when the CLOUD is an overloaded state and that the connection request satisfies an overload policy.

Step S which includes transmitting a progress signal to the first client application functions to transmit a ringtone or confirmation message to USER A. The progress signal may take different forms depending on the communication medium. For voice or video calls the progress signal is preferably a ringtone played for the user of the client application. In an asynchronous messaging application the progress signal may indicate the delivery status of the message e.g. sending delivered read . In some variations the progress signal is a confirmation transmission to confirm the connection for the client application. The confirmation transmission is preferably transparent to a user and is only an acknowledgment by the CLOUD for the client application. The progress signal is preferably transmitted in response to an invite transmission within one or more of the CLOUD service. Preferably the invite can include an application to which connection is sought the account identification of the recipient as well as the user defined parameters that were previously received in the CLOUD. Additionally the invite can include a caller identification or user identification of USER A. The invite is preferably a SIP invite but may be any suitable invite. In response to a smooth traffic flow of the invite within the one or more CLOUD servers the CLOUD can preferably transmit the progress signal back to the mobile device via the SIP connection.

Step S which includes retrieving communication instructions from a server according to the incoming communication request functions to fetch instruction markup determining communication logic. Step S preferably includes transmitting an HTTP request such as a GET or POST to the HTTP Server associated with the user account of the client application. Preferably the user account has a URL configured as a resource location of the communication instructions. Step S can preferably be performed simultaneously or substantially simultaneously with one or more variations of step S described above. In another variation of the method of the preferred embodiment the HTTP request can include any or all of the permissions described above. Preferably the HTTP request includes at least the user defined parameters which can be transmitted and received in an encrypted format. Alternatively step S can include verifying one or more of the user defined parameters at or by the HTTP server.

Step S which includes identifying an instruction to make a call to a communication destination functions to process the communication instructions and determine an outgoing communication destination. The communication instructions retrieved in Step S are preferably transmitted as a markup language format message to the CLOUD from the HTTP Server. In one variation of the method of the preferred embodiment the markup language format message can include one of an HTML message an XHTML message an SGML message or any other suitable markup language or variation or version thereof. In another variation of the method of the preferred embodiment the markup language format message can include a TWiML message for use with a cloud system of the assignee of the present application. The communication instructions may include any suitable logic. In making an outgoing call the communication instructions preferably include an instruction to dial or communicate with a communication destination.

Step S which includes establishing communication with the communication destination functions to complete communication with the desired endpoint. Establishing communication can establish communication from the source of the communication request e.g. USER A and at least one party endpoint. A plurality of destination endpoints parties may alternatively be included in the established communication. In a first variation the communication is preferably an open media channel e.g. voice audio video screen sharing or any suitable communication session between the client application and a device of the communication destination. This variation preferably includes inviting the communication destination and upon receiving acknowledgement of invite acceptance opening an media channel between the communication destination and the first client application. The invite is preferably a SIP invite but may alternatively be any suitable invite to a media channel. This may be used to establish communication with a PSTN device and or a second client application as described more below. In one example a USER A is attempting to contact a PSTN USER B. Accordingly the communication instructions can indicate that the recipient is a PSTN user and therefore the CLOUD will preferably create an appropriate SIP invite and transmit it to an appropriate provider. As used herein the PSTN network and or service provider can include both mobile and landline based telephony networks. A response is preferably received from the provider at the CLOUD service wherein the response can include an appropriate HTTP status code such as 200 OK. Following confirmation and cross confirmation between one or more components of the CLOUD service and the service provider the method can open a media channel between USER A and USER B. As shown in the media channel bypasses and or is transparent to the HTTP server but can be transmitted through one or more components of the CLOUD service. It should be understood that the media channel can also include other types of media including at least video screen sharing SMS MMS or any other suitable communication media.

In a second variation of Step S establishing a communication with the communication destination can include performing one or more specific communication requests. Performing the communication request preferably includes sending an asynchronous message to the communication destination as shown in . An asynchronous message can be sent using protocols including SMS MMS IP based messaging protocols proprietary messaging protocols and or any suitable messaging protocol.

In another variation of the method of the preferred embodiment USER A can be communicating on a mobile device having a native application software program or set of machine executable instructions that functions to perform one or more of the steps outlined above. In one example configuration the connect check and invite steps S S S or significant portions thereof can all be performed by such a native application configured with an operating system of the mobile device. As an example certain invite and authentication procedures including for example the cloud system token and user defined parameters associated with the application native to the user s mobile device. In such an example configuration the mobile device can communicate directly with the HTTP server via one or more requests and or messages of the type described above.

As shown in a method S of a second preferred embodiment for receiving communication at a client application may include at a first server of a communication platform receiving an executed login of a user of a first client application S at a second server of the communication platform accepting an incoming communication request S retrieving communication instructions from a server according to the incoming communication request S identifying an instruction to make a call to a communication destination of the user of the first client application S forwarding the communication request to the first server of the communication platform S and at the first server of the communication platform establishing communication with the first client application S. The method functions to receive calls at a client application through the systems described above. The method is preferably employed to enable software applications or machine executable instructions running natively on a mobile device to interface with a telephony or communication platform. The method may be used such that a PSTN device or any suitable communication capable device may contact the client application. The method may be used for voice video SMS MMS IP based messaging proprietary messaging and or any suitable communication medium. The method may be used in combination with the method above for making outgoing communications from a client application such that a first client application may contact a client application. The pairs of steps S and S S and S S and S and S and S may in some variations be substantially similar to their corresponding step.

Step S which includes at a first server of a communication platform receiving an executed login of a user of a first client application functions to establish a connection of a user to a communication platform CLOUD system. The user preferably uses a mobile device having a native application with a client application of the type described above but any suitable device with a client application may be used. Preferably when USER D logs into his account on CLOUD B a URL subscription USERD is established in CLOUD B such that USER D will receive any messages published to that URL. Example messages can include voice video SMS MMS email or any other suitable type of electronic communication audible or readable on a mobile device.

Step S which includes at a second server of the communication platform accepting an incoming communication request functions to initiate a call from a caller e.g. USER C to the user of the first client application e.g. USER D . As shown in the call initiation can be processed at a service provider such as for example a PSTN service provider for a mobile telephony or landline telephony network. The service provider can function to receive a telephonic communication voice SMS MMS and convert that incoming communication into an SIP request transmittable to CLOUD A. Alternatively the caller may be initiated by device using a second client application and the outgoing call may be established in manner substantially similar to that of the method for making outgoing communications from a client application. In step S of the method of the preferred embodiment CLOUD A will perform a check of the received SIP invite which can include checking a recipient account a voice URL for the account an SMS or MMS URL for the account and or any other account specific or user specific permissions or preferences associated with the account of USER D. In the variation where a call is initiated from a second client application the method S may include transmitting a progress signal to the second client application which is substantially similar to Step S.

Steps S and S which include retrieving communication instructions from a server according to the incoming communication request and identifying an instruction to make a call to a communication destination of the user of the first client application function to process the application logic of a communication platform application. Step S of the method of the preferred embodiment preferably includes transmitting an HTTP request from CLOUD A to the users HTTP Server in response to a successful check of the recipient s credentials. As an example once CLOUD A identifies a voice URL associated with USER D s account CLOUD A can transmit an HTTP GET POST request to USER D s HTTP Server. Step S of the method of the preferred embodiment preferably processes the communication instructions and determine an outgoing communication destination corresponding to the user of the first client application. A markup language format message is preferably received at CLOUD A from the HTTP Server. In one variation of the method of the preferred embodiment the markup language format message can include one of an HTML message an XHTML message an SGML message or any other suitable markup language or variation or version thereof. In another variation of the method of the preferred embodiment the markup language format message can include a TWiML message for use with a cloud system of the assignee of the present application.

Step S which includes forwarding the communication request to the first server of the communication platform functions to communicate the incoming communication request to a portion of the CLOUD that manages the logged in user. For media channels communication requests such as voice or video calls an invite request is transmitted from CLOUD A to CLOUD B in response to the receipt of the markup language format message from USER D s HTTP Server. Preferably the invite request contains at least an account identification for USER D and a client name USER D associated with the account during the login step S. The invite request is preferably a SIP invite as is known in the art. In the case of an asynchronous messaging the text and or media message may be contained in the communication message sent to the server of CLOUD B as shown in . The first server of the communication platform may additionally or alternatively include or function as a subscription manager of the communication platform. The communication request may subsequently be forwarded to an appropriate server to manage the subscription or login session of the user of the first client application.

Step S which includes at the first server of the communication platform establishing communication with the first client application functions to complete the communication request initiated in Step S. Step S preferably completes the communication request between the entity of the incoming communication request e.g. USER C and the user of the first client application e.g. USER D . Establishing communication with the first client application preferably includes publishing a notification to the first client application S. In one variation of the method of the preferred embodiment CLOUD B can publish an invite message to USER D s URL while simultaneously causing the caller USER C to hear a ringtone. In Step S CLOUD B can receive the publication of the invite message and broadcast it to all registered listeners i.e. those users associated with the account established in step S. Establishing communication with the first client application may include varying steps depending on if the method is employed for establishing a media channel between two parties or for sending a message from one entity to a user of the first client application.

Establishing communication for a media channel communication request can additionally include receiving a connection acceptance by the first client application S and opening a media channel with the first client application upon connection S. If USER D agrees to accept the incoming call then he will transmit a connection acceptance to CLOUD B as shown in step S. The acceptance can include the transmission of one or more permissions with the connection acceptance. Preferably the permissions can include one or more of a cloud system token containing the security credentials of USER D which can have a null value since the call is being received in a bridge token which might have been copied from the invitation from CLOUD B and one or more user defined parameters. In another variation of the method of the preferred embodiment CLOUD B step S can also include checking the one or more permissions at CLOUD B which can include for example checking if there are a predetermined number of parameters even though one or more can be null . Alternatively step S can further include unpacking the bridge token to identify an IP address associated with one or more CLOUD A or CLOUD B servers to ensure that communications are properly routed and merged through the appropriate portion of CLOUD A or CLOUD B i.e. a bridge portion of one of the respective CLOUD services. In another variation of the method or the preferred embodiment step S can include bridging the call between USER C and USER D in response to a bridge token associated with the connection request from USER D.

In another variation of the method of the preferred embodiment step S can recite responding from the provider to the CLOUD service wherein the response can include an appropriate HTTP status code such as 200 OK. Following confirmation and cross confirmation between one or more components of the CLOUD service and the service provider step S of the method of the preferred embodiment recites opening an audio channel between USER C and USER D. As shown in the audio channel bypasses and or is transparent to the HTTP server but can be transmitted through one or more components of the CLOUD A and CLOUD B components.

In another variation of the method of the preferred embodiment USER D can be communicating on a mobile device having a native application software program or set of machine executable instructions that functions to perform one or more of the steps outlined above. In one example configuration the login pub notice and connect steps S S S or significant portions thereof can all be performed by such a native application configured with an operating system of the mobile device. As an example certain invite and authentication procedures including for example the cloud system token and user defined parameters associated with the application native to the user s mobile device. In such an example configuration the mobile device can communicate directly with the HTTP server via one or more requests and or messages of the type described above.

Additionally the method S and or method S may be used in combination with the method for communicating presence information as shown in . The method preferably includes steps for communicating presence information and additionally steps for receiving communication at a client application. The method preferably comprises at a presence server registering a presence status resource of at least one account receiving an account update at the presence server wherein the account update sets status of at least one client application of the account in the presence status resource and exposing the presence status through a presence application protocol interface API and at a communication platform receiving a connection request from a calling entity retrieving communication instructions from a server according to the incoming communication request identifying an instruction communicate with a communication destination accessing a presence status resource through the presence API and establishing communication with the communication destination according to the accessed presence status resource. The method may include any suitable combination or variations of the above methods and systems or any suitable alternatives. The authorization token and verifying of the authorization token may be used to both set up the presence status resource of a client application and the communication endpoint of a client device. Thus a client application that executes a login by sending an authorization token can simultaneously set up their presence information and enable the client application to make outgoing communications or receive incoming communications. A publication subscription between the communication platform and the client application may be used for both presence and communication purposes.

As shown in the method may be employed to modify communication to a client application or any suitable device with a presence status. The method may be used for media connections such as opening voice or video channels. It may alternatively or additionally be used for messaging such as SMS MMS IP based messaging proprietary messaging and or any suitable messaging protocol. The presence information may be used by the communication platform to alter communication in any suitable manner. The presence of an account is preferably accessed and processed during in preparation or as a result of processing communication instructions. The communication instructions may be customized and developed by third parties and have any suitable variations in the application of presence information in communication apps.

In one variation the method is used to route to the available client application of an account. For example user A may call user B but user B can have three devices associated with the account. The communication platform will preferably use the presence information to determine which of the three devices to connect to user A. This may be used to route to one of a plurality of devices of a user.

In another variation the method may be used to route to one of a plurality of available accounts. In a call center customer support agents may all have an account and an active client application. Throughout the day various agents will be busy. The communication platform may intelligently distribute calls to an account based on availability and even how much load i.e. number of calls an agent has supported .

In yet another variation the method may be used to indicate to a caller that the account is not available as shown in . For example user A may call user B. When the communication platform determines that user A is trying to connect to user B the communication platform preferably accesses the presence status resource for user B. If user B is not available as indicated in the presence status resource then the communication platform preferably transmits an unavailable signal to the user A. The unavailable signal may be a busy signal a text to speech transcription of a message set by user B or any suitable indicator of the presence information of user B.

As shown in the cloud services can be broken in to two or more segments including for example CLOUD A and CLOUD B. Those of skill the art will appreciate that these designations are for illustrative and descriptive ease only and that CLOUD A and CLOUD B can include a single computer server having multiple functions or multiple discrete computers servers having unique functions depending upon the particular configuration sought by the user. The method of the preferred embodiment can be configured partially or entirely in a computer readable medium storing computer readable instructions. The instructions are preferably executed by computer executable components preferably integrated with a mobile devices one or more portions of the cloud system and the HTTP servers. The computer readable medium can be stored on any suitable computer readable media such as RAMs ROMs flash memory EEPROMs optical devices CD or DVD hard drives floppy drives or any suitable device. The computer executable component is preferably a processor but the instructions can alternatively or additionally be executed by any suitable dedicated hardware device.

As a person skilled in the art will recognize from the previous detailed description and from the figures and claims modifications and changes can be made to the preferred embodiments of the invention without departing from the scope of this invention defined in the following claims.

