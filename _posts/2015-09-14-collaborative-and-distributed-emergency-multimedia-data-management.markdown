---

title: Collaborative and distributed emergency multimedia data management
abstract: Systems, apparatus, and methods for collaborative and distributed emergency multimedia data management are described. In one aspect, a system includes a packet data reception interface. The system further includes a rules engine coupled with the packet data reception interface and configured to select a processing profile for packet data received, the rules engine further configured to associate packet data received with stored packet data. The system also includes a policy engine coupled with the rules engine and configured to execute the processing profile for packet data received.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09509842&OS=09509842&RS=09509842
owner: Airbus DS Communications, Inc.
number: 09509842
owner_city: Temecula
owner_country: US
publication_date: 20150914
---
This application is a continuation of U.S. patent application Ser. No. 13 526 305 filed on Jun. 18 2012 which claims a priority benefit to U.S. Provisional Application No. 61 498 478 filed Jun. 17 2011. These applications are incorporated by reference in their entireties. Furthermore any and all priority claims identified in the Application Data Sheet or any correction thereto are hereby incorporated by reference under 37 C.F.R. 1.57.

The present application is related to management of emergency multimedia data and more specifically systems apparatus and methods for collaborative and distributed emergency multimedia data management.

Emergency response systems may feature very limited capabilities. The emergency system in the U.S. for example was designed and built several years ago. This system allowed people to place an emergency voice call over a circuit switched network. The system routed the call to an appropriate call center geographically capable of initiating a response to the emergency. To determine the geographic location of a caller various third party systems were introduced to for example provide a look up service based on the originating phone number. Similarly an identity system was introduced to provide a number look up service for the originating communication.

Once the information was dispatched to a call center the capabilities of the receiving agent were limited. The circuit switched nature of the call limited the ability of an agent to transfer or conference an active call to other entities. Furthermore transmitting data generated during the call was often decoupled from the call itself. No reliable way was available to reconstruct the events of a given call let alone several calls related to a similar incident. Additionally the interfaces were essentially all or nothing interfaces in the sense that because of the tight integration with the circuit switch voice systems entire applications may include features that may not be applicable to all agents. This affected the installation and cost of maintaining call center systems.

To the extent call centers were integrated with other systems the interface was cumbersome. As previously mentioned the user interfaces were generally tightly integrated with the circuit switched voice system. Sharing data from the call center with for example other call centers or a centralized dispatch station could be fragmented. There also was limited capability to receive information e.g. feedback for a transferred event.

Accordingly improvements in the management of emergency response data are desirable particularly as emergency response systems are migrating from a circuit switched network to a packet switched network. In this packet switched world it would further be desirable to have a system that can efficiently accept emergency information such as voice text messages video messages streaming video and email and which can correlate the information in a meaningful way to provide situational awareness to a given input set of inputs and overall incident.

The systems methods and devices of the disclosure each have several innovative aspects no single one of which is solely responsible for the desirable attributes disclosed herein.

In one innovative aspect a system for collaborative and distributed emergency multimedia data management is provided. The system includes a packet reception interface. The system further includes a rules engine coupled with the packet data reception interface and configured to select a processing profile for packet data received the rules engine further configured to associate packet data received with stored packet data. The system also includes a policy engine coupled with the rules engine and configured to execute the processing profile for packet data received. In some implementations the system also includes a networked data store coupled with the policy engine. In some implementations the system may further include an event manager coupled with the policy engine. The event manager may be configured to transmit and receive messages in accordance with a processing profile.

In another innovative aspect a method for collaborative and distributed emergency multimedia event management among a plurality of agents is provided. The method includes assigning the event to one or more sessions associated with at least one of the plurality of agents. The method further includes assigning the one or more sessions into a session group associated with one of the plurality of agents. The method also includes assigning the session group to an incident.

In some implementations assigning the event may include identifying a value included in the event. The value may include for example a header value or a content value. The value may indicate at least one of a packet content type a packet content length a packet source and a packet destination. In some implementations assigning the event may include comparing the identified value with one or more values associated with one or more sessions. Comparing the identified value may include generating a comparison value indicating if the identified value is equal to a stored value associated with one or more sessions.

In some implementations the method may further include identifying one of the plurality of agents as a primary agent for the event.

In yet another innovative aspect a method for collaborative and distributed emergency multimedia data management is provided. The method includes determining an event type of an incoming emergency multimedia data element. The method also included providing a processing profile for the incoming emergency multimedia data element. The method further includes identifying one or more of a plurality of emergency multimedia data elements based at least in part on a value included in the incoming emergency multimedia data element. The method also includes storing an association of an emergency multimedia data element search result with the incoming emergency multimedia data element.

In some implementations determining the event type may include identifying at least one of a header value and a content value of the incoming emergency multimedia data element such as for example a header value or a content value. The incoming emergency multimedia data may include voice data video data text message data email image data geospatial data and audio data. The identified value may indicate at least one of a packet content type a packet content length a packet source and a packet destination. Providing the processing profile may include identifying a value included in the incoming emergency multimedia data element. Providing the processing profile may also include in some implementations comparing the identified value with one or more values associated with a plurality of processing profiles. The comparison may include comparing the identified value with a stored value to generate a comparison value. The result of the comparison may indicate if the values are equal. In some implementations providing the processing profile may also include selecting a processing profile of the plurality of processing profiles based at least in part on the comparison.

In a further innovative aspect a computer readable storage medium including instructions for collaborative and distributed emergency multimedia data management is provided. The instructions are executable by a processor of an apparatus. The instructions cause the apparatus to determine an event type of an incoming emergency multimedia data element. The instructions also cause the apparatus to provide a processing profile for the incoming emergency multimedia data element. The instructions further cause the apparatus to identify one or more of a plurality of emergency multimedia data elements based at least in part on a value included in the incoming emergency multimedia data element. The instructions additionally cause the apparatus to store an association of an emergency multimedia data element search result with the incoming emergency multimedia data element.

In an innovative aspect a computer readable storage medium including instructions for collaborative and distributed emergency multimedia event management among a plurality of agents is provided. The instructions are executable by a processor of an apparatus. The instructions cause the apparatus to assign the event to one or more sessions associated with at least one of the plurality of agents. The instructions also cause the apparatus to assign the one or more sessions into a session group associated with one of the plurality of agents. The instructions further cause the apparatus to assign the session group to an incident.

In one or more of the above identified innovative aspects selecting the processing profile may include identifying a value included in the packet data such as for example a header value and or a content value. In some implementations the identified value may indicate at least one of a packet content type a packet content length a packet source and a packet destination. The selecting process may include comparing the identified value with one or more values associated with a plurality of processing profiles. The selecting process may include selecting a processing profile of the plurality of processing profiles based at least in part on the comparison.

In one or more of the above identified innovative aspects comparing the identified value with one or more values associated with a plurality of processing profiles may include generating a comparison value indicating if the identified value is equal to a stored value associated with a processing profile.

In one or more of the above identified innovative aspects associating packet data received with stored packet data may include identifying a value included in the packet data such as for example a header value and or a content value. In some implementations the identified value may indicate at least one of a packet content type a packet content length a packet source and a packet destination. The association may also include comparing the identified value with one or more values associated with stored packet data. The association may be based at least in part on the comparison.

In one or more of the above identified innovative aspects the packet data interface may be configured to receive at least one of voice data video data text message data email image data geospatial data and audio data.

The ESInet can provide among other functions routing of the emergency multimedia data to an appropriate public safety answering point PSAP . For example one ESInet may be connected to multiple PSAPs. It is desirable to ensure the emergency multimedia data is handled by an appropriate PSAP . In one implementation the ESInet includes an emergency call routing function ECRF . The emergency call routing function includes a directory of available PSAPs. The emergency call routing function may be configured to determine the appropriate PSAP for incoming communications based at least in part on the location of the event. To determine the location the ESInet shown in the example of includes a location information store LIS . The incoming event is received by the emergency service routing proxy ESRP . The ESRP may be configured to query the LIS for the appropriate location information associated with the event. In some implementations the ESRP and LIS are coupled with a location validation function LVF . The LVF can be used to ensure the location for the event is a valid location. Once the ESRP has identified a valid location for the event the ESRP may be configured to query the ECRF using at least the validated location to determine the appropriate PSAP . The ESRP can then route the event to the selected PSAP .

Once processed by the ESInet components the resulting session initiation protocol SIP message is transferred via a packet protocol e.g. NENA I3 Standard TCP IP to the packet capable public safety answering point PSAP . The SIP message or other packet transferred multimedia emergency message e.g. via SMTP HTTP HTTPS is then used by the PSAP to initiate an intake and response to the communication received from the origination network . Only one PSAP is shown in . In other implementations more than one PSAP may be in communication with the ESInet. Furthermore some PSAP implementations treat each event as a discrete occurrence. This may create a situation where subsequent events related to a similar incident are not necessarily identified and routed to an agent who may be most familiar with the case. Each PSAP may include one or more agents capable of responding to the emergence event. In some implementations the agent is a human. In some implementations the agent is an automated responder e.g. voice recognition call service .

Under this data paradigm the number of data types that can be received at a PSAP are expanded to include more than voice. The increased data may enable a more effective emergency response to a given situation. However by increasing the possible data types the system can handle and the sources the data may come from the increased volume of information should be managed so as to make the information useful in an emergency situation and to do so in a timely fashion. Furthermore various PSAPs either in communication with each other or separated from each other may be concurrently receiving events. In some situations the events received at two different PSAPs may be related to the same incident. Accordingly systems and methods for correlating coordinating and sharing these multimedia events such as within and amongst PSAPs are described below.

By enabling the emergency response system to receive multimedia information a new paradigm in emergency response becomes possible. Consider the situation whereby a child is abducted. As part of this incident a frantic parent may place an emergency voice call. Meanwhile a person at another location may notice a struggling child forced into a car and snap a photo of the license plate with a camera phone. This person may subsequently place a second emergency call. As the abductor races from the scene he may run through a red light at an intersection a few miles away prompting a third emergency call. According to an implementation of the disclosed system all four data points first call second call photo and third call may arrive at the system at different times. Being able to quickly correlate these multimedia events as part of the same incident potentially across PSAPs could mean the difference between apprehending the abductor and a prolonged missing persons search.

The implementation also includes other multimedia sources. In the example shown emergency service IP network ESInet short messaging service SMS multimedia messaging service MMS packet based exchange PBX e.g. web source and email not shown are multimedia sources. The multimedia sources communicate with the MMSE via packet switched protocols such as HTTP HTTPS SMTP or session initiated protocol SIP .

In the implementation shown one or more legacy emergency response systems can also provide input to the MMSE . A legacy emergency response system generally communicates with the MMSE via an analog path such as centralized automatic message accounting CAMA . As shown the MMSE is configured to process the incoming source data. The MMSE and processing features are described in further detail below. In this example the MMSE is configured to communicate with one or more agents via a client interface . The agents are generally using individual workstations within an emergency response call center also known as public safety answering point PSAP . Via the MMSE individual agents may communicate with each other. The MMSE is further configured to communicate with one or more external applications such as a computer aided dispatch system CAD geospatial information system GIS or call detail record system CDR . The MMSE is also configured to communicate with one or more other PSAPs. Communication with the external applications or other PSAPs can be via a packet switched protocol e.g. HTTP or through a proprietary application programming interface. In some embodiments this interface is implemented as message based packet interface such as a web service.

The MMSE includes an MMSE core which includes in its responsibilities the correlation and coordination of the multimedia events. The MMSE core may be coupled with an automatic call distribution system . The automatic call distribution system may provide information to the MMSE core identifying the appropriate routing for a particular event. For example a session manager included in the MMSE core may be configured to identify a value associated with an incoming multimedia data element e.g. location and query the ACD for information to route the call e.g. which PSAP agent and or agent workstation . The MMSE core is described in further detail below.

The MMSE may include an application programming interface to allow external applications to communicate with the MMSE . For example a graphical user interface may access the system. In the example shown an API is configured to allow access to application business logic of the MMSE .

The application business logic is configured to mediate communications with business applications included in the MMSE and the API . As shown in the example of the business applications include a radio application RCS an SMS application and a computer telephony integration CTI application . Other application types are contemplated and are discussed in further detail below.

In one example the API may include a web service interface . The web service interface may be configured to receive and transmit signals via a packet protocol such as HTTP or HTTPS. The signals may include event information.

The MMSE may include a data fabric as a data storage means. The data fabric allows the components of the MMSE to easily share information. The data fabric may be configured to allow components outside the MMSE to access information from the MMSE and provide information to the MMSE such as a call data record system . The MMSE may be administered at least in part and based upon one or more operations and management profiles . These profiles may identify characteristics of the system such as quality of service e.g. desired number of client connections or operational characteristics e.g. applications to be deployed and number instances to deployed .

As an example the MMSE processes incoming events to the system via a number of interfaces. Each incoming event is tagged with a multimedia type and each type is associated with a set of workflows or business rules. The MMSE is configured to ensure that each step in the workflow is executed and to coordinate the timing of the steps. The business applications of the MMSE may include a queue server a client line manager an event manager and or a call data record system to support the execution and coordination process. These and other components are described in further detail below.

The MMSE may be configured to allow nesting workflows where a step in a workflow can execute another workflow. This allows for merging workflows and reusing workflows to compose other workflows. In one implementation the MMSE includes a configuration utility for building workflow rules and adding them to the system.

Workflows can change dynamically while the system is running. Workflows can be versioned. A versioned workflow may include a rule that specifies which input events are associated with that workflow.

When an event is received by the MMSE the system preprocesses the event and extracts any relevant data from the event for further processing. The event is then executed against workflows configured to execute under the direction of the MMSE . These workflows may trigger asynchronous messages to other services to execute the workflow. The MMSE is configured for orchestrating the workflow and coordinating the activities between all the various services involved in a workflow.

In this example the MMSE is driven based on messages each of the multimedia input is converted into an event message and passed onto an MMSE input queue. The MMSE can also be configured to process messages from application services as feedback events to continue workflow execution. In one implementation in progress messages have higher priority than incoming multimedia event messages to ensure continuity of the workflow. The MMSE may be configured to generate a session and a corresponding session group for new input events. Sessions and session groups are discussed in further detail below.

While the elements of this figure and others in this application appear in a single diagram it should be understood that co location in the diagram does not necessarily imply physical co location of the elements depicted. As shown the individual components may be located at the same site and on the same server or distributed across several sites and different servers.

In the example shown in a web service is provided as an entry to a MMSE core. The MMSE core may be similar to the MMSE core shown in . Other interfaces such as RPC direct socket connection may be included concurrently or as alternative interfaces to the MMSE core. The MMSE core includes a rules engine . The rules engine is coupled with a match profile repository. For example the match profiles may be stored in a data store . A match profile repository can store one or more match profiles . A match profile is a set of attributes the MMSE locates to determine how a given event should be processed. For example SIP data may include a series of header elements such as time data source e.g. phone number data location or data type. By parsing one or more header elements and comparing them to match profiles the rules engine may identify different actions to be taken for the event. In the abduction example the rule engine may correlate the phone call and the camera phone picture based on the geo position from which the events were transmitted and a proximity. Matching criteria may also consider temporal proximity to correlate events.

The rules engine may be configured identify match profiles based at least in part on the content of an event. For example a data profile may include a regular expression that if the event data matches triggers a certain set of actions. In the abduction scenario the emergency caller may identify the car as a Ford Focus. The PSAP may receive a subsequent SMS message Kid forced into ford focus 123 Main Street. Using a content based matching profile for ford focus the two messages may be identified and correlated as potentially part of the same incident.

As another example pre processing for an image event may include a call out from the MMSE to an image processing service that extracts features from images e.g. license plates faces landmarks and the rules engine identifies a match profile based at least in part on the features identified through pre processing. How events are matched is described in more detail below. Match profiles may be statically defined and stored in a data store. For example a default profile may be defined to specify the basic handling of an event. Match profiles may be dynamically defined during system operation. For example in the abduction scenario the license plate number of the suspected abductor s car may serve as a match profile while the hunt is in progress. Accordingly any event including information that matches the license plate number e.g. a traffic stop would trigger a match. Once the situation has ended this match profile can be removed manually e.g. by an agent or automatically e.g. once the session is inactive from the system.

The rules engine can also provide coarse grained filtering events. Filtering events provide a way to avoid sending events to an agent that can otherwise be excluded as noise or handled in an automated fashion. For example if a PSAP receives unsolicited commercial email system resources can be saved if these events are not processed as emergencies. Another example a noise reduction filter could be a rule that disregards a faulty alarm that continually triggers but is in fact a false alarm. Yet another example of filtering is the situation where a major event occurs and a response has already been initiated. In this case an automated message informing the caller that an appropriate response has been dispatched could reduce the number of calls needing attention by an agent.

The match profile may also include routing information for the event. The MMSE may include several different applications for processing specific types of events. Based at least in part on characteristics of the event e.g. event type the rules engine may identify a match profile which lists the appropriate application or applications to handle the event. Specific examples of applications are discussed below.

The rules engine transmits the event data and the application s identified in the match profile for this event to a policy engine included in the MMSE core. The policy engine is configured to coordinate the dissemination of the event to the identified applications. The dissemination process may include workflows and or agent profiles to provide information for transmitting an event to the identified destination s . The structure and function of the policy engine are described in further detail below.

The policy engine is coupled with a data store . As shown in the data store is a data fabric. A data fabric allows distributed sharing and storage of SIP data and other information collected or generated by the MMSE . The data store preferably stores data across many servers. The servers may be replicated or partitioned. In some implementations the data is cached in local process memory with the overflow written to a permanent storage e.g. disk . In another implementation a traditional relational database management system may be the data store.

In one embodiment the data store is implemented such that information is shared with multiple sites. A data ring allows information to be received from multiple sources and made available to systems connected to the ring. An example of a data ring is shown in Appendix A at page 4.

The policy engine is coupled with an event manager . The event manager is coupled with one or more applications e.g. CAD GIS . Each application has access to the data store . In part under the direction of the policy engine the event manager sends and receives information to and from the applications . For example a voice application may be configured to process voice events. Further details on applications are described below.

The policy engine is further coupled with an event distribution module also known as an automatic call distributor ACD . The ACD determines which agent should receive a given event. The determination is based at least in part on information received from the policy engine event type one or more agent profiles or the raw event data. ACD vendors may also provide agent profiles as part of the implementation of the physical transfer mechanism for calls and other event data. The event distribution may be based on some or all of these agent profiles .

Agent profiles may include network information about the agent such as the workstation the agent is logged into the agent s workstation IP address or contact information for the agent. An agent profile may also include skill set information for agents. For example certain agents may specialize in handling abduction events and thus the ACD would use some initial information from the SIP data or the policy engine to tag an event as a possible abduction. This tag may be read by the ACD and used to identify agents who may be particularly trained to respond to this type of event. As another example some agents may speak foreign languages. Accordingly events identified by a match profile as originating from a foreign language speaker can be routed to an agent most likely to speak the language.

The event may be associated with a priority. Given the priority of a particular event rather than processing events in the order received the higher priority event may be processed out of turn ahead of less urgent events. For example it may be desirable to address an emergency call for a fire before a call for a cat stuck in a tree.

The ACD may also be configured to communicate information to the policy engine . For example if the event distribution fails the ACD may communicate this condition to the policy engine . In this example the policy engine may be configured to process the event according to an alternate workflow and or generate an alert as to the cause of the failure.

In the example shown in the ACD is configured to communicate with a telephony system . As shown the SIP interface is configured to transmit SIP data to the telephony system . Once the ACD determines the appropriate agent for a given event the telephony system which is also coupled with the SIP interface may transfer the event to the appropriate agent e.g. one or more of and .

When the telephony system ultimately transfers the SIP data to an agent the SIP data any information generated by the MMSE and the SIP voice are reunited on a single interface. For example the SIP data and information generated by the MMSE travel together through the MMSE core . Using information in the SIP header the SIP data and SIP voice components can be correlated for unified presentation at an agent workstation. Alternatively an event identifier assigned by the policy engine can be used as a reference for this event. Furthermore because the same data may be transmitted from the MMSE core to different applications each application may transmit data directly to an agent workstation for unified presentation as the data becomes available. For example for an application that operates on the data contained in the event this application may provide the data needed for presentation relatively quickly. A second application for the same event may use a look up service to acquire additional information. The interface may present the information from the first application along with a pending indicator for the second application. This allows an agent to begin working with the available event data rather than waiting.

For example in the abduction scenario the SMS message is likely be transmitted from a phone. Accordingly this event may be routed to two applications an SMS application such as the SMS application and a call information application such as a computer telephony interface application and or a call data record application . The SMS application may be configured to display the message while the call information application is configured to obtain information about the origin of the message based on for example the sending device s phone number. An example of an interface and integration with applications is described in further detail below.

In the implementation shown in because of the bi directional nature of the coupling between an agent the telephony system the event distribution and the policy engine an agent may transfer an event back to the MMSE . For example if an event is related to another event it may be desirable to transfer the event back to the policy engine to perform correlation of the two events and re assign the event to a single agent. This functionality is described in further detail below.

In some implementations routing an event to a particular application may generate a response message. In some implementations the application may generate periodic information messages e.g. status . These response or update messages may be treated as an event. At block if a response or update message event is received the flow returns to a block and repeats the event processing for the new event. If no applications transmit a response or update message the flow ends at block .

Each session has a primary agent . The primary agent is the individual identified as the main point of contact for the given event. Generally the primary agent is the person at the PSAP who is handling the event. A session may also be associated with other agents . The other agents may be agents other than the primary agent who may be handling a related event. By creating the association between the agents and the session related events may be grouped and the information pertaining to the shared sessions efficiently managed between the agents and the primary agent. The designation of primary may be transitory. For example a first agent receiving the initial communication for an event may be designated as the primary agent. Subsequently a second agent may be identified as the primary agent to consolidate activities related to the event e.g. the event is related to an previously identified incident assigned to the second agent .

Multiple sessions may be collected into a session group . Each session group may include a unique session group identifier. The session group may comprise events simultaneously transmitted e.g. a photo sent during a mobile phone call or events later determined to be associated. The events need not necessarily be linked by source originating device or time. The event data matching of the policy engine may use these factors in matching events but these are not the exclusive factors. An external application may create this association. For example a computer assisted dispatch system may identify two events as related and transmit this information to the MMSE . Each session group is associated with a primary agent .

Multiple session groups may be associated into an incident . The incident may include a unique incident identifier. As with the sessions the session groups need not necessarily be linked by source originating device or time to be categorized as an incident. Agents or external systems may identify multiple session groups as part of an incident.

Using the information associated with the entities shown in correlations between different entities may be achieved. For example sessions may be associated with an incident tracking identifier. The sessions associated with the common incident tracking identifier may be related. The incident tracking identifier for a session may be provided at the network level e.g. or at the PSAP level. At the PSAP level the system may be configured to transmit information about the PSAP and the call handling to the originating device. This information may include one or more of a PSAP identifier a PSAP mail identifier PSAP domain information and an incident identifier. This information may be used for matching subsequent sessions as described herein. For example the session information may be transmitted to a device. The device may use the information to transmit additional data regarding the same incident. For example a 9 1 1 call may initiate a first session. The device may receive one or more of a PSAP identifier a PSAP mail identifier PSAP domain information and an incident identifier. Subsequently the device may be configured to compose and transmit an email message. As part of the transmission the device may be configured to include the received PSAP identifier the PSAP mail identifier the PSAP domain information and or the incident identifier. This may further expedite the association and routing of the information to the agent s attending to this incident.

Sessions may be initiated from a device. As such the device identifier associated with a session may be used to correlate related sessions. Examples of device identifiers include MAC address mobile subscriber identifier e.g. international mobile subscriber identity international mobile equipment identity mobile equipment identifier or the like. In some implementations multiple device identifiers may be identified by a single device group. In such implementations the correlation may be based on the device group.

Automatic number identification or from information associated with the device initiating the session may be used to correlate sessions. Automatic number identification determines information associated with the device such as the telephone number of the originating device. The telephone number may be compared with a telephone number associated with other sessions to correlate the sessions. A caller may also be identified by name e.g. caller ID . Sessions from a source having a common name may be associated. For example a first call may be placed from John X. Smith s cellular phone. A second call may be placed from the residence of John X. Smith. As such these two calls may be related based on a match between the name associated with the first call and the name associated with the second call. When matching names or the other identified attributes the system may be configured to perform partial matches e.g. stem searches probabilistic matching phonetic matches or other approximate matches.

Sessions may be initiated from a source which may be geo located. For example a smartphone may include global positioning system capable of transmitting the location of the device. A session may be correlated with another session in an overlapping spatial region. For example emergency phone calls placed from multiple phones located near the same freeway exit may be related to a similar traffic accident. Other types of sessions may include location information such as a public switched telephone call and the origination IP address of an email or voice over IP call.

These match attributes are provided as examples of attributes which may be used to correlate sessions session groups and incidents. The information included in or derivable from a session may be used as a basis to associate the session with others. One non limiting advantage of a system including match profiles is distributed application logic with the ability to associate session with one another and group sessions intelligently with incidents. By using one or more of the above attributes to intelligently associate sessions into session groups and or with incidents. The systems and methods described may be configured for processing policy rules to react to incoming events and system events to correlate incident behavior back to the agent.

If the event matches an incident match profile the flow proceeds to a block where the session group is associated with the matched incident. The flow then ends at block .

At block if the session group does not match an incident the flow proceeds to a block . At block a new incident is created. At block a new incident match profile may be created. For example in the abduction scenario a match profile on the license plate number for the abductor s car may be defined such that any information referencing this vehicle is centrally identified. At block the new incident match profile is registered by the rules engine and will be considered for all subsequent events and or sessions received by the MMSE. At block the process ends.

At block the process determines the appropriate match profile for the incoming event. In one implementation the match profile is a list based matching whereby an ordered list of matching criteria is evaluated in sequential order. Once data extracted from the event satisfies a match profile on the list that profile is used to direct further processing of the event. In another embodiment multiple match profiles may be identified for an event and executed for example in parallel or in order of priority. The determination can be based at least in part on the event type. The match profile may be selected based in part on factors unrelated to the incoming event such as network configuration e.g. available data sources PSAPs external systems or operational situation e.g. peak hours off peak hours emergency .

At block the process utilizes in whole or in part the extracted data and the match profile to perform a search of the data store for related events. The match profile may specify which data store or data stores to query. Alternatively the process may be configured to search specific data stores. The data store searched may be local to the PSAP receiving the incoming event. The data store searched may be located at a different PSAP than the PSAP receiving the incoming event. The process receives the results.

At block the received results are used to associate the events matched with the incoming event. In one implementation the data store is used to persist the relationship between the incoming event and the matched events for example using the event identifier. If no results are received the process creates a new session group and associates the incoming event with this new session group. At block the process ends.

In the example of the abduction the SMS message and initial phone call may both contain location information. A match profile may be defined to correlate events occurring within 500 feet of each other. In this example the SMS message may be sent from a location near the location where the phone call was placed. Accordingly these two events would satisfy this match profile and be assigned to the same session group.

At block information identifying the session or session group to be transferred is appended to the transfer message. For example if a session is being transferred via SIP the session identifier may be appended to the SIP header. As another example if a session group is being transferred over SMTP the session group identifier may be appended in an SMTP message header.

At block information including the selected event and the selected transfer destination are transmitted to the destination system. When the transfer message is received by the destination system the message may be treated as a new event and processed for example as described above in . An initial match profile may identify the presence of a session or session group identifier in the header. This match profile may then interrogate the shared data store to retrieve the information for the session or session group using the session or session group identifier. Accordingly the receiving system benefits from the processing performed by the previous MMSE. At block the process ends.

The example interface shown in includes a telephone call display window. The telephone call display window includes several tabs. One tab included is a my calls tab. The my calls tab is configured to show all calls that the agent is working on. The window further includes an answer button. The answer button enables an agent to answer the call. In one implementation when the client application receives a signal indicating a call to answer an answer operation signal is sent to a call application included in the MMSE along with a session identifier for the call. The call application interfaces with the telephony module to direct the call to the agent s workstation.

The window includes a release button. The release button enables release e.g. hang up of the call by the agent. In one implementation when the client application receives a signal indicating a call to release a release operation signal is sent to a call application included in the MMSE along with a session identifier for the call. The call application interfaces with the telephony module to release the call from the agent s workstation.

The window includes a transfer button. The transfer button enables the agent to send the call to another destination e.g. agent at the PSAP agent at another PSAP external system . In one implementation when the client application receives a signal indicating a call to transfer a transfer operation signal is sent to a call application included in the MMSE along with a session identifier for the call. The call application interfaces with the telephony module to transfer the call from the agent s workstation as described above.

The my calls tab also includes an information window. The information window displays data related to the selected call such as queue identifier call status calling number call type call location information call time stamp and call duration. The data displayed in the information window can be pushed to the information window from the MMSE. In another implementation the client may retrieve the information directly from the data store.

In the example shown the telephone call display window includes a pending tab. The pending tab shows the calls waiting in the queue. The pending tab may be configured to show calls pending at the PSAP calls pending for certain agents e.g. all agents of a common skill set or workgroup or calls pending for an individual agent. The pending tab may include one or more buttons such as a select a call to enable the agent to activate a particular call answer a call to enable the agent to answer a particular call and priority answer to enable the agent to answer a call with a heightened priority. The pending tab may also include an information window for displaying data related to a selected call such as queue identifier call status calling number call type call location information call time stamp and wait time. As with the my calls tab the information may be pushed to the client or fetched by the client.

The example interface shown in includes a data browser window. This application contains a browser window on the client and connects to the web server on the MMSE server. The browser application contains pages for the agent to browse a caller s information such as their name any registered members of the household addresses mitigating personal factors e.g. physical disability hearing impairment photographs of the caller or medical history. The data browser window may include one or more tabs. The browser page shall represent a household information page. This window can contain all the people living in the household and how many houses the caller has. The window can also contain detailed information about each resident of the household and details about the house.

In one implementation the data application receives an event identifier from the event manager. The data application can use this identifier to obtain information about the event such as the location or phone number. Using this information the data application can transmit a request for additional data. For example the data application may execute a search of an online registry using the phone number e.g. a web service . The data application can process the resulting information and provide additional data for the agent to consider. The data application may also provide resulting information back to the MMSE. This new information may be treated as a new event and processed for example as discussed above.

The data browser shown in includes a summary tab. The summary tab is configured to display a list of people living in the house and indicate if the person has medical history or picture available. The houses section includes the address of the homes associated with the caller. The agent can click on the person name medical icon or photo icon to get more information. If an agent clicks on the name the people tab is displayed clicking on medical icon opens up medical records and clicking on picture opens a picture page.

The data browser shown in includes a people tab. The people tab may include personal information about each of the people in the household such as age description occupation parental contacts married children social security number healthcare provider. In one implementation the data browser can include a separate tab for each resident of the household.

The data browser shown in includes a houses tab. The houses tab may display information about the homes such as address how many exit points location of each exit number of floors neighbors safety equipment installed e.g. automatic sprinklers security equipment installed e.g. alarm system gates automated door locks proximity to emergency equipment e.g. fire hydrants fire lanes or blueprints. If a home an multi unit complex the houses tab may be configured to display the floor and unit number.

The data browser shown in includes an others tab. The others tab may display contact information of other people who should be contacted in the event of an emergency.

The example interface shown in includes a message window. The message window is configured to display incoming SMS MMS message requests as well as transmit outgoing SMS messages. The message window may include one or more operation buttons. For example in one implementation the message window includes an answer button. The answer button allows an agent to response to a received message. The operations e.g. routing answer dismiss for the SMS MMS window are handled in a similar fashion to the call window. A signal containing the desired operation and the SMS MMS session identifier is transmitted to the SMS MMS application. The application interfaces with the appropriate systems to effect the desired operation.

The message window may be configured to support tabs. For example the message window may include a pending tab to display messages received but not yet viewed. The message window may include a my messages tab to display messages to and or from the agent accessing the message window.

The example interface shown in includes a video display window. The video display window is configured to allow video streams to be sent to the agent using a client application. The video can either be streamed live from an external source via the MMSE or stored and streamed directly from the server directly. In one implementation when a call is answered by the agent the MMSE core can be configured to determine if video is available based in part on the call. The MMSE includes a video application. The MMSE core can be configured to notify the video application if a video is available. The video application with send a message to the video client with the list of video files available for the call. The video display window renders this list and receives a signal indicating a video to be played. In the implementation where the video is streamed through the MMSE the selection is transmitted to the video application and a video stream is opened in response. For example the communication between the video client and the video application may be an HTTP web service. The video client generates a message identifying the video to view. This message is transmitted to the interface of the video application. After parsing the message the video application begins to retrieve the video data and transmit a stream back to the video client. The video application may transform the video prior to streaming to the video client for example by re sampling buffering increasing gain introducing watermarks or other audio video processing. The streaming may be performed by module in communication with the video application such as a RealNetworks Helix server.

The video client may support a play and or stop button. These buttons would control the playback of the selected video. The video client may also support a time slider indicating the point of play back for the selected video. The time slider may be adjusted to indicate a desired point of playback in the video.

The video client may support a record button. The record button generates a signal to the video client indicating the video stream should be recorded. The recording may be temporarily stored on the client workstation. The recording may be transmitted to the MMSE and stored in the data store thereby making the recording accessible to other users of the system.

The example interface shown in includes a session group display window. The session group display window is configured to display session group data. The session group window may be configured to show which sessions are active for the session group or all sessions for a given session group. The session group display window may render sessions handled by the agent accessing the client application in a different color or with an icon to distinguish it from other sessions.

Other windows that may be included on an interface include a dialer pad for making out going phone calls a radio window for receiving radio data a session group window for selecting and associating sessions with a session group and an interface configuration window to allow an agent to organize the layout characteristics of the interface. The interface may include an automatic location identification ALI window. The ALI window is configured to display location data. As previously discussed the information may be pushed to the client or fetched by the client. In one implementation the ALI window supports clearing the associated ALI window information.

In the implementation shown in the client shown is a graphical user interface GUI . The graphical user interface includes a variety of display modules similar to those described above in reference to . The client interface also includes an application programming interface API . In one implementation the API is a message queued interface. The application programming interface receives messages from the MMSE and delivers them to the appropriate display module s . In this way pushing data from the MMSE to a display window can be accomplished. In another implementation the API may also allow the display modules to transmit requests to the MMSE thereby creating a bi directional interaction with the MMSE.

Each application and each corresponding display element is decoupled from each other. The link between the applications is the common data base shown in as a data fabric . Accordingly the failure of one application does not necessarily mean the entire MMSE will fail. By reducing the interdependence between the applications the disclosed system enables higher fault tolerance and thus higher availability than a tightly coupled system. Furthermore the separation of components allows customized MMSE and client interfaces that feature only the components desired at a site. For example a PSAP may not have the capability to process SMS messages. In this example the SMS app and corresponding SMS display client module may be disabled. Accordingly system resources need not be expended maintaining these features.

The implementation shown in also includes an authorization and configuration server Auth Config Server . This server may control the overall operation of the client and MMSE by providing a common repository for authorization and configuration information. For example the authorization server may determine whether a given agent may access the system. The configuration server may be used to enable certain applications as discussed above. In one implementation the MMSE queries the configuration server for the modules to be instantiated.

The implementation shown in includes a license server . The license server can be used to control the available modules based on features purchased by the customer. For example each MMSE application may be individually licensed. A standard installation may include the code necessary to execute each application but the ability to do is may be controlled by the license server . In this example if a customer obtains the appropriate license for the video application the appropriate designation is made at the license server . In one implementation this may include generating a license file. When the authorization and configuration server attempts to instantiate a module it may be configured to consult the license server to ensure the proper authorization to execute the selected module.

The implementation shown in includes a web server . The web server may be used to publish documents at the PSAP. The web server may be configured as the host for service interfaces to the MMSE e.g. web service . The implementation shown includes a video server . The video server may be configured to playback store or record video for the MMSE. The video server may interoperate with the video application.

As discussed above content may be sent to the system from a variety of sources. One source may be email. In one implementation an email service included in the system may be configured to receive email messages process the messages and autoreply to one or more users upon successful delivery. Email can be associated with an existing emergency call or can itself instantiate a separate session. An email message can contain text multipart body or any attachment. This combination of data may provide information to the agents who may ultimately address the email message.

The email service may be implemented in specially adapted hardware configured to receive electronic signals including the email message. The email service may be implemented as instructions which may be executed by a processor of an apparatus.

The email service may include a multimedia service engine interface. The multimedia service engine interface may be configured to notify the system of new email agent answer agent complete out bound email or other events which may be associated with an email message. The multimedia service engine may be configured as for example described above in .

The email service may be configured to provide and or obtain data from the data storage such as the data storage described above. For example the email service may store the email message in the data storage . As part of storing the email message the email service may be configured to create a session for new emails. The email session may include a state of the session as well as a reference to the email itself in the server e.g. an email identifier and or server address .

The email service may include an application message interface. The application message interface may be a queued message interface such as that described above in . The application message interface may be configured to communicate messages associated with email messages to the agent and or agent actions. For example the application message interface may transmit parsed information from the email message e.g. attachments to an agent workstation. The application message interface may be configured to receive information from other system elements such as autoreply information for an event associated with the received email message.

The email service may be configured to create a new session for the incoming email. For example the email service may extract information from the email such as a header field e.g. the mime content description an incident tracking identifier the device identifier message subject message sender and group from to header. The email service may be configured to store the identified information in the session data.

The email service may be configured to determine if there was data attached to the email and extract that data into a data store . The data store may be organized based on incident tracking identifier. Some implementations may include an attached flag to indicate that additional information was attached to the session e.g. email message .

The email service may be configured to cause transmission of a message to a multimedia service engine . The message may include information about the new email session such as a session identifier and or an email identifier to the multimedia service engine . The message may be transmitted directly to the multimedia service engine . In some implementations the message may be provided using the data store or message queue . In such implementations the multimedia service engine may be configured to monitor the intermediate location for the presence of new messages. Once obtained the multimedia service engine may be configured to process workflows associated with email as described above and below.

For example the multimedia service engine may be configured to apply one or more match policies to determine if this email message is associated with an active incident that may have other sessions being managed by an agent. If the multimedia service engine can match an attribute associated with the email message such as the incident tracking identifier or sending device identifier with an existing active session in the system the multimedia service engine may be configured to add the new email session to the existing incident.

The multimedia service engine may be configured to notify a policy and routing function to queue the email for delivery to the appropriate agent. For example the multimedia service engine may transmit a signal including the identifier for the email message along with an identifier for the agent a message queue . The identification may obtain the agent information from an automatic call distribution system as described above.

The multimedia service engine may be configured to determine if data is associated with the email such as attachment data. If so the multimedia service engine may also notify an application service of new data. For example if the email includes an image file the multimedia service engine may transmit a signal to an image application service identifying the image data. The determination may be based at least in part on a header field of the email message e.g. mime type .

Accordingly the email may be processed and displayed via an email user interface element while the data may be simultaneously displayed using a data user interface element. The interface element may be included in an agent graphical user interface GUI .

The policy and routing function may be configured to determine if the email is associated with an active call handled by an agent. In such cases the policy and routing function may deliver a queue notification to the agent of the new email. If the email session is not associated with an active incident the policy and routing function may be configured to queue the session in the group email queue and send a queue notification to all agents subscribed to the group mail queue.

Agents may access emails queued in the session group that they are subscribed to such as via the agent GUI or via an email client. Session group subscriptions may be automatically assigned to agents based on the PSAP the agent is working in. Agents may also subscribe to a session group via an interface element included in the agent GUI . The subscription information may be stored in the data store and obtained by the policy and routing function for use in processing and or routing received content. In some implementations the subject line in the queue for each email is displayed. Agents can select an email in the queue via the agent GUI . The selection may trigger an answer request to the email application. The email server may copy all or a portion of the email from the group email account into the agent email account. The original email may be stored in the group email account. This provides an audit trail for the email as it is process by the system.

The email may be pushed for example through SMTP to an email client e.g. Mozilla Thunderbird at the agent workstation and displayed in a multimedia service engine UI email window.

Once an email is selected the email may be removed from the queue. The email may be marked as read once delivery to an email client is confirmed. For example when the email is selected via the agent GUI a signal may be transmitted via the message queue to the email service . In some implementations a read receipt is sent back to the originator that the email has been received and read with the appropriate time stamp.

If an agent is active in a conversation e.g. voice or SMS real time text RTT and an email is received by the system for that incident the email may be automatically routed to the agent that is handling that conversation. The routing may be determined by the multimedia service engine . The engine may direct the policy and routing function to directly deliver the email to the agent without the email being queued as described above. The email may be copied to the agent mailbox as discussed and the agent will be notified on the UI that an email for that conversation is available to be viewed. The agent may select answer to open the email and have the contents appear in the email window.

Once the email is opened and displayed a read receipt may be sent back to the originator with read timestamp.

Multiple agents may be conferenced on an email message. For example the carbon copy email header field may be used to include additional agents on an email message. The blind carbon copy may be used to allow agents to view the session but not necessarily participate. Accordingly the efforts of multiple agents may be coordinated for an email session.

The system shown also includes a computer telephony interface CTI . The system also includes collaboration application service . The system shown includes a geospatial information system GIS . The system shown further includes a computer assisted dispatch CAD server . Each service may be configured to receive information such as via the message queue and or data store associated with the email message.

When a new email message is received by a particular PSAP group the email server may be configured to store the mail in a group inbox associated with the identified PSAP group via signal . The email sever may be a sendmail server postfix server James server or other server adapted for sending and receiving email messages. In some implementations the email server may be configured to transmit a notification of the received message to the email service .

The email service may be configured to generate a session for the received message. The session may be similar to the session discussed above in . The session may include a session identifier value a session create time and a value indicating the data which caused the session to be generated e.g. email identifier . The session may be generated based at least in part on one or more of the content of the message header values included in the message e.g. email identifier subject the source of the message e.g. sender email address sender email server sender device sender location and the email server. In some implementations the email service may be configured to store the message and associated session identifier in the data storage e.g. data fabric . An email may be associated with a unique email identifier value. The unique email identifier value may also be stored and may uniquely identify that particular email. As such the email identifier can be later used for searching mail in the PSAP group folder. The session may store the location of the email on the server e.g. email ID but not the full email itself. The full email may be retrieved based on the session identifier and or email identifier. In some implementations a session identifier may be based at least in part on one or more of a PSAP identifier and a group identifier.

Email messages may include an incident identifier and session identifier in the subject field. This may be pre populated for incoming or outgoing messages. If an unsolicited email arrives and does not include an incident or session identifier then email service may be configured to identify an existing session incident or generate the values as described above. In some implementations an agent receiving the message may associate the message with a session and or incident.

Although the call flow of is using email as the session content it will be appreciated that a similar call flow may be used to receive SMS MMS messages video or other multimedia data.

The email service may be configured to transmit a notification signal to the multimedia service engine . The notification signal may include values indicating a new email event. The notification signal may include the session identifier and or email identifier associated with the received email.

The multimedia service engine may be configured to transmit a similar notification signal to the policy and routing function . The PRF may be configured to queue the session for an agent to review via signal . The PRF may queue the received email or information associated therewith e.g. email identifier in an email queue. The email queue may be identified as a non ACD priority answer queue. Other attributes may be associated with the queue and used to determine the priority with which items appearing in the queue are routed for agent review. In some implementations multiple email queues may be included. In such implementations the PRF may selectively route the emails to different queues based on rules applied to values included in the email message. For example if an email is received from certain domains e.g. whitehouse.gov the email may be routed to a high priority queue for expedited processing.

Once queued a signal may be transmitted to the agent GUI indicating the presence of a new email. An agent may select the message to begin processing the email message. For example the agent may use a graphical user interface presented on a workstation to view the email message. When the email message is selected for processing the GUI may be configured to send an answer request to the email service . The request signal may include the email identifier the agent requesting access to the message or other information to identify the message and credentials for the agent.

Based at least in part on the received information the email service may be configured to approve this agent for email handling. Once an agent has been approved to access the message the email service may indicate the state for this email as assigned. An agent may not receive approval if for example another agent has selected the message for processing. Accordingly multiple agents may avoid duplicate handling of a single message.

This state may be used to process additional answer requests from the agent. For example if the assigned agent attempts to answer a subsequent message the request can be dumped as in some implementations a one to one relationship between agents and assigned answered messages may be maintained. In some implementations agents may be assigned multiple messages.

Once an agent has been approved to answer a particular email message the email service may be configured to copy the email message from a PSAP group mailbox to a mailbox associated with the agent via signal . The agent GUI may be configured to transmit a signal to cause the email client e.g. Mozilla Thunderbird Microsoft Outlook Eudora Mail or Lotus Notes to fetch mail associated with the email identifier assigned to the answered message.

After mail is delivered to email client such as via IMAP delivery signaling the agent GUI may be configured to transmit a response to the email service including a value indicating a successful delivery status. The email service may be configured to update the session record to reflect the new status via signal . The email service may be configured to provide this status to the multimedia service engine via signal . The multimedia service engine may provide a corresponding status update to the policy and routing function . The PRF may be configured to remove this message from email queue via signal .

In some implementations the delivery of the message to the email client may be disrupted. For example the agent workstation may experience an equipment failure prior to delivery. In such cases the email service may be configured to place the message back into the queue for the PSAP group. Accordingly an agent may subsequently attend to the message. The email service may determine a failure based on the absence of a success signal within a configurable period of time e.g. five seconds .

In some implementations after a message is removed from the queue an auto reply may be sent to the user through the email server . It may be desirable to also close the session associated with the email message. Furthermore in implementations including a session time transmitting the auto reply message may cause the session timer to stop.

As the call flow progresses events associated with a message may be logged. For example when an email arrives in the system a session identifier email header information MIME content description and a time stamp may be logged. When the email is queued the email identifier queue identifier PSAP associated with the queue and a timestamp may be logged. When the email is delivered to an agent the email identifier an agent identifier and a timestamp may be logged. If a delivery failure is detected the email identifier agent identifier failure reason and a timestamp may be logged.

Multimedia data may be provided to the system through a variety of channels. For example an email client may be used to send an email message to the multimedia service engine a telephone may be used to initiate an emergency call and a video camera coupled with a network may be used to provide video and or audio. In some implementations a device may include the inputs to capture textual and data information. Such devices may be specially configured to provide this information to the multimedia service engine. These devices may be generally referred to as multimedia service engine clients.

The settings element may be configured to transmit and receive signals with a network configuration module. The network configuration module may be configured to receive input signals identifying an emergency multimedia server e.g. by URL or IP address to connect with. The emergency multimedia server may be configured to route information from the multimedia service engine client to the correct multimedia service engine associated with a PSAP based on location of the device.

The settings element may be configured to transmit and receive signals with a profile module. The profile module may be configured to obtain a collection of voluntary data from the user that they would like to have available to the emergency call operator during emergency communication sessions. The profile data may include first name last name phone number personal picture one or more home addresses a work address one or more emergency contacts including a phone number email address relationship and or mailing address for the emergency contact medical information e.g. prescriptions conditions allergies disabilities doctor contact information contact information for one or more children or parents family information pictures additional notes information for freeform additional data.

The user profile information may be saved locally on the device. In some implementations the user profile information can be uploaded synchronized with a user profile service. The user profile page shall allow the entry of connection information e.g. URL username password for the user profile service. The upload synchronization process may be performed according to a schedule. The user profile information may be transmitted to the user profile service for storage in a subscriber database. The stored user profile information may be accessed by the device or another authorized entity. For example a subscriber of the user profile service may authorize the user profile service to provide the profile information to 9 1 1 operators during an emergency call originating from the device.

The voice call element may be configured to call 9 1 1 the chat element may be configured to transmit and or receive text messages the email element may be configured to transmit an email the data element not shown may be configured to send data and the live video element may be configured to stream video. When making a call to 911 or initiating any session to 911 the multimedia service engine client may be configured to receive a confirmation to acknowledge the session. This confirmation may be used to prevent accidental calls. For example if the confirmation is not received after a preconfigured period of time the call may be canceled e.g. not placed .

When call 9 1 1 is selected and confirmed the device may be configured to activate a phone mode and initiate a call to the endpoint configured in the network settings. The client used for phone mode may be configured as a SIP voice client sending an INVITE message to the endpoint. As discussed above this may generate a session which may be associated with one or more session groups and incident. Once the call is established multimedia service engine client may be connected to an agent. The multimedia service engine client may be configured to receive a disconnect signal to cause the termination of the call.

In some implementations the codec for establishing voice call can be G7.11 using DSCP value of 40 for quality of service. The voice client may also support incoming calls from the agent using SIP.

When the texting mode is activated via the chat element a text message to the endpoint configured in the network settings is initiated. In some implementations the client used for texting mode may include an RTT client initiating an RTT session with the server. The RTT client may support the RFC 4103 and 5194 for communicating with the server. The RTT client may also support incoming session requests from the agent using RTT. Once the session is established the multimedia service engine client may be connected to an agent and can begin a dialog with the agent until disconnecting by pressing disconnect button.

The multimedia service engine client may be configured to receive manually entered text messages. The multimedia service engine client may be configured to receive a selection of a preconfigured message such as via a drop down.

When the send data mode is activated such as via the send data element the call or text session continues while the multimedia service engine client receives an input identifying which content to transmit to the agent. Data that may be transmitted includes user profile information pictures in storage coupled with the multimedia service engine client and videos in storage coupled with the multimedia service engine client.

In some implementations the data may be transmitted to the agent using HTTP Post. The multimedia service engine client may request the post location for the PSAP associated with the agent handling the call. The post location may be the multimedia service engine server IP address or URL.

In some implementations the multimedia service engine client may be configured to auto send data when the session is connected. For example the multimedia service engine client may be configured to transmit the user profile information once connected.

When the streaming video mode is activated such as via live video element the call or text session continues while the multimedia service engine client establishes a video link. The video link may be established using the SIP client. For example an INVITE message may be sent to the server address configured in the network settings. In some implementations the streaming video mode may be started and stopped based on signals received by the multimedia service engine client e.g. via button push .

The multimedia service engine client may also be configured to send an email to the agent during and after the communication session is completed. The email element may be used to receive email information and transmit the same. The email may be transmitted via an SMTP client. The email client may be configured to host an SMTP gateway on the device associated with the multimedia service engine client. The SMTP gateway may be configured to send and receive email.

The email mode may be configured to receive both text input as well as attachments of locally stored data. The multimedia service engine client may be configured to include an incident identifier provided from the voice or text communication session in the subject field of the email. The identifier information may be automatically populated when sending an email during an active session. If sending an email while not on an active session the client may receive an incident identifier e.g. text input selection from drop down of most recent incidents and the application will include this information in the subject line.

The multimedia service engine client may be configured to receive notifications such as those described above when the email is received by the agent. The notifications may include a timestamp.

As the multimedia service engine may be used to process information for critical applications such as emergency services it may be desirable for some implementations including a multimedia service engine to include fault tolerance features. A load balancer may be included to manage traffic through the system. Servers may be associated with the load balancer. Some servers may be designated as active servers. An active server generally refers to a server that is presently available to service requests. An active server is further configured to synchronize its data via the data store e.g. data fabric with other servers. Some servers may be designated as standby servers. A standby server generally refers to a server that is configured to service requests but is not actively doing so.

Requests may be received from a client over a network such as ESInet. The request may be routed to one of the active servers based on the load of the servers. For example if a first active server is currently experiencing a higher load as compared to the load of a second server a request may be routed to the less loaded second server. The load information may be transmitted to a central router which may be implemented in hardware or software. The load information may be current load historic load aggregate load e.g. average or the like.

The client may be configured to register with a network address such as an IP address. The IP address may be dynamically assigned to a physical server. If the physical server becomes unavailable the standby sever may associate with the IP address assigned to the physical server. Accordingly the standby server may continue communication with the client despite the unavailability of the physical server initially attached to.

Additional fail over and fault tolerance measures may be included to further enhance the availability and processing of multimedia data.

Further innovative aspects include a method of associating multimedia data with a communication session. The multimedia data may include at least one of voice data video data text message data email image data geospatial data and audio data. The method includes transmitting a first signal to initiating the communication session. The first signal may be transmitted for example to an emergency management system. The method further includes receiving a session identifier. The method also includes transmitting a second signal including the multimedia data and the session identifier.

In some implementations the communication session may include one of a voice communication session and a text messaging communication session. In some implementations the session identifier may include an incident tracking identifier. The session identifier may be included in a session initiation protocol message such as for example in a header field of the session initiation protocol message. The second signal may be transmitted while the communication session is active or after the communication session is terminated.

In some implementations the session identifier may be stored. Transmitting the second signal may include resenting stored session identifiers. Transmitting the second signal may further included receiving a third signal identifying one of the stored session identifiers. Including the identified stored session identifier in the second signal may be a further aspect of transmitting the second signal.

In some implementations the email may include an attachment the attachment including additional multimedia data. An email may include the session identifier in a header field of the email.

A method of associating multimedia data with a communication session is provided in a further innovative aspect. The communication session may be one of a voice communication session and a text messaging communication session. The multimedia data may include at least one of voice data video data text message data email image data geospatial data and audio data.

The method includes receiving a first signal from a device to initiate the communication session. The method further includes generating a current session identifier for the communication session. The method also includes transmitting a second signal including the current session identifier to the device. The method also includes receiving a third signal including the multimedia data and the current session identifier. The method also includes associating the received multimedia data with the communication session associated with the current session identifier.

In some implementations generating a current session identifier may include when an attribute of the received first signal is associated with an attribute of a previous communication session having a session identifier generating a current session identifier equal to the session identifier of the previous communication and otherwise generating a current session identifier based at least in part on the received first signal. The attribute of the received first signal may include at least one of a sender identifier an identifier of the device and content included in the received signal.

In one or more implementations described the current session identifier may include an incident tracking identifier. The second signal may include a session initiation protocol message. The current session identifier may be included in a header field of the session initiation protocol message.

The third signal may be received while the communication session is active. In some implementations the third signal may be received after the communication session is terminated.

In yet another innovative aspect a device for transmitting multimedia data for association with a communication session is provided. The device includes means for transmitting a first signal to initiate the communication session. The device includes means for receiving a session identifier. The device further includes means for transmitting a second signal including the multimedia data and the session identifier. The device may be configured to implement one or more of the methods described above.

In some implementations the means for transmitting a first signal to initiate the communication session comprises at least one of means for initiating a phone call and means for initiating a text message. In some implementations the means for receiving a session identifier comprises at least one of a processor. In some implementations the means for transmitting a second signal includes at least one of means for transmitting voice data means for transmitting video data means for transmitting text message data means for transmitting email means for transmitting image data means for transmitting geospatial data and means for transmitting audio data.

In another innovative aspect a device for receiving multimedia data for association with a communication session is provided. The device includes means for receiving a first signal from a device to initiate the communication session. The device includes means for generating a current session identifier for the communication session. The device includes means for transmitting a second signal including the current session identifier to the device. The device includes means for receiving a third signal including the multimedia data and the current session identifier. The device includes means for associating the received multimedia data with the communication session associated with the current session identifier.

In some implementations the means for receiving the first signal to initiate the communication session may include means for initiating a phone call and means for initiating a text message. In some implementations the means for generating a current session identifier for the communication session may include a multimedia service engine. In some implementations the means for transmitting the second signal may include means for transmitting a session initiation protocol message. In some implementations the current session identifier may be included in a header field of the session initiation protocol message. In some implementations the third signal may be received while the communication session is active. In some implementations the third signal may be received after the communication session is terminated. Generating a current session identifier may include when an attribute of the received first signal is associated with an attribute of a previous communication session having a session identifier generating a current session identifier equal to the session identifier of the previous communication and otherwise generating a current session identifier based at least in part on the received first signal.

A non transitory computer readable storage medium comprising instructions for transmitting multimedia data for association with a communication session is also provided. The instructions are executable by a processor of an apparatus to cause the apparatus to transmit a first signal to initiate the communication session receive a session identifier and transmit a second signal including the multimedia data and the session identifier.

A non transitory computer readable storage medium comprising instructions for receiving multimedia data for association with a communication session is provided in a further innovative aspect. The instructions are executable by a processor of an apparatus to cause the apparatus to receive a first signal from a device to initiate the communication session generate a current session identifier for the communication session transmit a second signal including the current session identifier to the device receive a third signal including the multimedia data and the current session identifier and associate the received multimedia data with the communication session associated with the current session identifier.

As used herein the term determining encompasses a wide variety of actions. For example determining may include calculating computing processing deriving investigating looking up e.g. looking up in a table a database or another data structure ascertaining and the like. Also determining may include receiving e.g. receiving information accessing e.g. accessing data in a memory and the like. Also determining may include resolving selecting choosing establishing and the like.

As used herein a phrase referring to at least one of a list of items refers to any combination of those items including single members. As an example at least one of a b or c is intended to cover a b c a b a c b c and a b c.

The various operations of methods described above may be performed by any suitable means capable of performing the operations such as various hardware and or software component s circuits and or module s . Generally any operations illustrated in the Figures may be performed by corresponding functional means capable of performing the operations.

The various illustrative logical blocks modules and circuits described in connection with the present disclosure may be implemented or performed with a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array signal FPGA or other programmable logic device PLD discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any commercially available processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration.

In one or more aspects the functions described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored on or transmitted over as one or more instructions or code on a computer readable medium. Computer readable media includes both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage media may be any available media that can be accessed by a computer. By way of example and not limitation such computer readable media can comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Also any connection is properly termed a computer readable medium. For example if the software is transmitted from a web site server or other remote source using a coaxial cable fiber optic cable twisted pair digital subscriber line DSL or wireless technologies such as infrared radio and microwave then the coaxial cable fiber optic cable twisted pair DSL or wireless technologies such as infrared radio and microwave are included in the definition of medium. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and blu ray disc where disks usually reproduce data magnetically while discs reproduce data optically with lasers. Thus in some aspects computer readable medium may comprise non transitory computer readable medium e.g. tangible media . In addition in some aspects computer readable medium may comprise transitory computer readable medium e.g. a signal . Combinations of the above should also be included within the scope of computer readable media.

The methods disclosed herein comprise one or more steps or actions for achieving the described method. The method steps and or actions may be interchanged with one another without departing from the scope of the claims. In other words unless a specific order of steps or actions is specified the order and or use of specific steps and or actions may be modified without departing from the scope of the claims.

Thus certain aspects may comprise a computer program product for performing the operations presented herein. For example such a computer program product may comprise a computer readable medium having instructions stored and or encoded thereon the instructions being executable by one or more processors to perform the operations described herein. For certain aspects the computer program product may include packaging material.

Further it should be appreciated that modules and or other appropriate means for performing the methods and techniques described herein can be downloaded and or otherwise obtained by a device or component included therein as applicable. For example such a device can be coupled to a server to facilitate the transfer of means for performing the methods described herein. Alternatively various methods described herein can be provided via storage means e.g. RAM ROM a physical storage medium such as a compact disc or floppy disk etc. such that a device or component included therein can obtain the various methods upon coupling or providing the storage means to the device. Moreover any other suitable technique for providing the methods and techniques described herein to a device can be utilized.

It is to be understood that the claims are not limited to the precise configuration and components illustrated above. Various modifications changes and variations may be made in the arrangement operation and details of the methods and apparatus described above without departing from the scope of the disclosure.

While the foregoing is directed to aspects of the present disclosure other and further aspects of the disclosure may be devised without departing from the basic scope thereof.

