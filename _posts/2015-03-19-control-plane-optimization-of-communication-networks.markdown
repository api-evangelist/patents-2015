---

title: Control plane optimization of communication networks
abstract: Optimization of control plane in a software defined network includes obtaining peer information of at least one neighbouring network controller by a network controller and determining a traffic profile variation. The method further includes computing of a self payoff value indicative of one of optimum utilization, underutilization and overutilization of the network controller. The method further includes initiating a non-zero sum game based network control plane optimization operation based on the self payoff value and the traffic profile of the neighbouring network controllers, and may include one of activating additional network controller(s), transferring control of one or more network devices managed by the network controller(s) to a neighbouring greedy network controller, deactivating the network controller, and transferring control of one or more additional network devices managed by the neighbouring network controller(s) to the greedy network controller.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09531633&OS=09531633&RS=09531633
owner: TATA Consultancy Services Limited
number: 09531633
owner_city: Mumbai
owner_country: IN
publication_date: 20150319
---
This application claims the benefit of priority of Indian Patent Application Serial No. 921 MUM 2014 filed on Mar. 20 2014 the benefit of priority of which is claimed hereby and which is incorporated by reference herein in its entirety.

The present subject matter relates in general to communication networks and in particular to optimization of control plane in Software Defined Network SDN .

Communication networks are vastly utilized and relied upon across the globe to share information between two or more end users. A communication network also referred to as a network typically involves one or more network devices such as network switches and network routers apart from other components for the purpose of transferring information amongst the end users.

The information is transferred in the form of digitized data packets simply referred to as packets. At a network device packets are received at one or more input ports of and are forwarded to one or more output ports of the network device. The forwarding is based on a path or a route of the packet for being forwarded to an end user which may in turn be based on the configuration of the network. Typically each forwarder in a network is configured with an in built control logic also referred to as the control plane. The control plane determines forwarding rules or conditions that allow the network device to control the forwarding behaviour or flow of packets between the input and output port s of the network device.

More recently computer networks with dynamic architectures such as Software Defined Networks SDNs that allow the control logic to be decoupled from the network device and be moved to external central controllers are increasingly being used. The SDN architecture decouples the control plane of the network from the data plane and provides direct control of the network devices such that the network may be managed with greater flexibility and efficiency.

It should be appreciated by those skilled in the art that any block diagrams herein represent conceptual views of illustrative systems embodying the principles of the present subject matter. Similarly it will be appreciated that any flow charts flow diagrams state transition diagrams pseudo code and the like represent various processes which may be substantially represented in computer readable medium and so executed by a computer or processor whether or not such computer or processor is explicitly shown.

Software Defined Network SDN technology provides customization and optimization of data forwarding in communication networks. Modern communication networks are simplified by the SDN technology by decoupling a data forwarding layer and control layer for example the data plane and the control plane. In conventional communication networks the control plane function such as routing resourcing and management functionality are performed in the network devices such as a switch or a router itself whereas in case of communication networks supporting SDN the network devices are configured to implement the data plane functions while the control plane functions are provided by an SDN controller mapped to the network devices. Open Application Programming Interface API services such as Open Flow protocol are implemented to manage the interactions between the data plane and control plane. SDN in conjunction with an Open API service provides flexibility and increased control over the network devices.

Conventionally communication networks implemented based on SDN architecture provides a logically centralized control of a physically distributed control plane. Such systems implement a distributed SDN controller with the mapping between a network device such as a switch or a router and a controller being statically configured. The terms SDN controller network controller and controller have been used interchangeably in the specification. Statically configured controllers make it difficult for the control plane to adapt to traffic load variations in the communication networks such as data centre networks enterprise networks that have significant variations in temporal traffic and spatial traffic characteristics. In such scenarios of statically configured controllers a controller may become overloaded if the network devices mapped to this controller observe a large traffic. Further some controllers in the communication network may be in an overload condition while other controllers may be underutilized. The load may shift across controllers over time depending on the temporal and spatial variations in traffic conditions and static mapping can result in non optimal performance.

Majority of the techniques follow a centralized control plane architecture where a central controller can decide the number of controllers required and their allocation to network devices. Also certain conventional techniques provide distributed control plane architecture for communication networks implemented based on SDN architecture. The load in such architecture is dynamically shifted to allow the controllers to operate within a specified load restriction. As the load on the communication network changes the load on each controller also changes and the architecture dynamically expands or shrinks the controller pool as based on the change in the network load. As load imbalance occurs a controller with heavy network load transfers its load on to another controller with relatively less load. The algorithm and techniques underlying the architecture to provide change in control pool are generally based on the existing Open Flow standard.

However the presently available methods and systems for distributed controller architecture as described above do not provide optimal solutions for controller placement. Further such methods and systems provide for addition and deletion of controllers based on the load of the communication network but the number of the controllers in the network may not be optimum. If the non optimum number of controllers in the communication network is high it may lead to underutilization of some controllers and further result in delay in the control resolution result in more electricity consumption and cause high operational expenditure and capital expenditures for the communication network. On the other hand if the number of controllers in the communication network is low it may result in poor Quality of Service QoS of the communication network due to packet drops and delayed resolution of flows. Moreover the decision of addition and deletion of network controllers based on the load of the communication network is taken by a centralized control entity. More often than not a malfunctioning of the centralized control entity results in failure or improper functioning of the communication network.

Further conventionally available methods are topology specific and may not be compatible with different types of communication networks. Also conventionally available methods are often not backward compatible making them difficult to be implemented in existing communication networks. Also some conventionally known techniques provide solution that require incurring significant cost and expenditure of resources for their implementation.

The present subject matter describes systems and methods for control plane optimization in a communication network. In an embodiment the systems and methods allow determination of optimum number of network controllers in the communication network. Further according to an implementation of the present subject matter the determined optimum number of controllers may be placed at optimal locations in the control plane of the communication network. Placement of the controllers may be defined as mapping of controller on network devices such as network switch in order to achieve a uniform load over the network maximum utilization of the controllers and minimum delay of control resolution.

According to an implementation of the present subject matter the communication network may be implemented based on SDN architecture. In one implementation the optimum number of controller s is determined based on the load on the communication network. Since the load on a communication network is a function of time and changes dynamically the number of controllers to support the load may also change dynamically. Providing optimal number of controllers may include addition or deletion of controllers dynamically. Accordingly in one implementation of the present subject matter network controllers may be dynamically added or deleted in the communication network such as a SDN. Further in one embodiment the placement of the network controllers in the control plane may be dynamically varied.

In one embodiment of the present subject matter the optimization of the number of the controllers and their respective placement may be determined in accordance with a non zero sum game based network control plane optimization operation. In the non zero sum game based network control plane optimization operation hereinafter referred to as control plane optimization operation each network controller in the communication network computes its self payoff value. The self payoff value is indicative of whether the controller is optimally utilized underutilized or overutilized.

In one implementation any controller of the communication network which is underutilized and has a capacity to take over more load may be considered as a greedy controller. Based on the control plane optimization operation the greedy controller may increase its utilization by sharing load of one or more neighboring controllers. However in case the controller is significantly underutilized it may transfer its existing load to one or more neighboring greedy controllers and enter an inactive mode. This approach not only enables equal distribution of load across the various controllers but also ensures that the controllers that have a significantly low utilization are no longer active thus allowing optimization of the operational cost of the communication network.

In another embodiment an over utilized controller may off load some of its load to one or more neighboring controllers to balance its load. For example the load may be off loaded to a neighboring controller that is underutilized. In one embodiment in case the over utilized controller is unable to off load it load to a neighboring controller or is facing excessive load in spite of the off loading the overutilized controller may generate a request for activation of an additional controller in the communication network. This again ensures equal distribution of load across the various controllers. Also instances where additional controllers may have to be added in the communication network are promptly identified such that there is no loss of QoS. Activation of the additional controller only at such instances ensures optimization of the operational cost of the communication network.

The control plane optimization operation is carried out by each of the controllers in the communication network. The decision to add or delete network controllers to the communication network is not taken by a centralized control entity but is rather distributed across the various controllers of the communication network. Thus the performance of the communication network is unaffected by any delay or failure in functioning of the centralized control entity. Further the systems and methods for control plane optimization as described in accordance with various embodiments of the present subject matter are backward compatible and may also be implemented in legacy communication networks. Furthermore the systems and methods for control plane optimization described herein are independent of the topology of the communication network. Additionally the systems and methods for control plane optimization provide a scalable solution for network control plane optimization that may be implemented in any communication network irrespective of the size of the communication network or the amount of load that the communication network handles.

The following disclosure describes systems and methods for control plane optimization in a communication network. It should be noted that the description merely illustrates the principles of the present subject matter. It will thus be appreciated that those skilled in the art will be able to devise various arrangements that although not explicitly described herein embody the principles of the present subject matter and are included within its scope. Furthermore all examples recited herein are principally intended expressly to be only for pedagogical purposes to aid the reader in understanding the principles of the present subject matter and the concepts contributed by the inventor s to furthering the art and are to be construed as being without limitation to such specifically recited examples and conditions. Moreover all statements herein reciting principles aspects and embodiments of the present subject matter as well as specific examples thereof are intended to encompass equivalents thereof.

While aspects of the described system and method can be implemented in any number of different computing systems environments and or configurations embodiments for the information extraction system are described in the context of the following system s and method s .

The network environment allows the computing devices to transmit and receive data to and from each other. The computing devices may belong to an end user such as an individual a service provider an organization or an enterprise. The network environment may be understood as a public or a private network system implementing the system for control plane optimization of the communication network over which the computing devices may communicate with each other.

The communication network may be a wireless network wired network or a combination thereof. The communication network can be a combination of individual networks interconnected with each other and functioning as a single large network for example the Internet or an intranet. The communication network may be any public or private network including a local area network LAN a wide area network WAN the Internet an intranet a peer to peer network and a virtual private network VPN . According to an implementation of the present subject matter the communication network may be a software defined network. Further embodiments of the present subject matter the concepts of SDN may be extended to non SDN networks also.

In an implementation the communication network may include a plurality of network devices . . . N individually and commonly referred to as network device s hereinafter. The network device may be any network hardware device such as network switch simple forwarders routers gateways network bridges and hubs for mediation of data in the communication network . Further a network device may be hybrid network device such as multilayer switches proxy servers or firewalls. The network device may be utilized for communication process through the communication network . The network devices may communicate with other network devices of the communication network based on communication links .

The communication network may further include a plurality of network controllers . . . N individually and commonly referred to as controller s hereinafter. The controller s may be employed on a control plane of a communication network and may manage the flow control of the communication network . The controller s may receive data from the network devices employed on a data plane of the communication network . Further the controller s may obtain a forwarding path for the requests coming from networking devices and configures the networking devices such that networking devices may forward data to other network devices or to a computing device . . . N. The controller s may be a virtual controller or a physical controller.

In one embodiment of the present subject matter the system determines an optimum number of controller s for the communication network based on the load on the communication network . In one embodiment the system performs a non zero sum game based network control plane optimization operation interchangeably referred to as control plane optimization operation to determine the optimum number of controller s for the communication network . The control plane optimization operation has been explained in details later in this specification.

In accordance with one implementation of the present subject matter the system includes a central optimization controller COC in the communication network . In another embodiment of the present subject matter the COC may be a controller of the communication network assigned to work as COC . The COC may optimize the number of controllers in the communication network . The COC may be communicatively coupled to the controllers through communication link s . . . N. The COC may receive requests from one or more of the ccontrollers for activation or deactivation of additional controllers in the communication network . Based on factors such as a current traffic profile of the controller that sends the request the network load and quality of service parameters the COC may allow or refuse the request for activation or deactivation of virtual controllers.

Activation of an additional network controller may include addition of a virtual network controller or invoking an existing dormant physical network controller. Deactivating a network controller may include deleting a virtual controller or putting an active physical controller in a dormant mode. In one example controllers may run on virtual machines. In such a network configuration the COC may provide for logical addition and deletion of the controllers in the communication network . Logical addition and deletion of controllers may be achieved through the virtual machines running the controllers . For instance each controller runs on a separate virtual machine. The capacity of each virtual machine such as number of cores or CPUs memory disk may be assigned dynamically. In another example where the network configuration includes physical network controllers the physical controllers may be dynamically invoked from a dormant mode or put in a dormant mode. The dormant mode may be a sleep mode or a switch off mode. The COC may determine to put a physical network controller on either mode based on factors such as time or traffic profile variation of the communication network .

To explain the functioning of the COC to optimize the number of controllers in the communication network the number of controllers in the communication network may be represented by k wherein the value of k may vary dynamically. At any instant the value of k controllers may be within the range of k and k such that k k k where k may be the minimum number of controller s and k may be the maximum number of controllers in the communication network . In the worst case k 1 and k M where M may be the number of network devices in the communication network . In one embodiment the optimized number of controllers i.e. the value of k may be determined based on non zero sum game based control plane optimization operation and k and k may be obtained from the statistics of the network load change.

Further based on the control plane optimization operation the system not only provides the optimum number of controller s at a given instance of time but also indicates an optimum placement of the respective controller s such that delay and utilization of each of the controller s is balanced. In this context determining the placement of a controller may be understood as ascertaining a number of network devices that may be managed by the controller for a given time and identification of such network devices such that at the load between the various controllers is balanced.

Placements of controllers may be explained referring to that depicts the controllers in the communication network to be communicatively coupled with at least one of the network device s through communication links . . . N. Each controller may run in a master slave mode. Accordingly the controller may be master for a set of network devices and may be a slave for another set of network devices that may be controlled by another master controller . A controller would be master for a network device such as a switch if the switch refers to the controller for a flow table update and routing. Both master and slave controllers may communicate with each other based on inter SDN communication protocol. Further in one embodiment of the present subject matter the master and slave controllers may be interchangeable based on the load in the communication network . Change in the number of controllers and or change in placement of the existing controllers may result in change of state of master or slave controller . The control plane optimization operation to determine that change in number and placement of controller s may be based on optimization parameters as follows min f k c s.t. t t i U U i Equation 1 minc s.t. t t U U Equation 2 where f is a non linear function of the number of active controllers and cost associated with the number of active controllers k represents the number of active controllers c represents the capital and operational expenditure associated with implementation of the communication network Urepresents the utilization of icontroller trepresents the delay associated with icontroller trepresents a pre defined threshold value for delay constraint of icontroller and Urepresents a pre defined threshold value of utilization for icontroller. As load on the communication network varies equation 2 may be solved such that one or more additional controllers may be added or invoked to active state or an existing controller may be deleted or put in a dormant state. Solution of equation 2 may be obtained by designing a non zero sum game in which each controller performs the game independently and may take their decisions independently. Since the load on the network is dynamic obtaining an optimal solution of equation 2 applicable for load conditions may not possible. Hence use of non zero sum game may be appropriate.

As the load on the communication network changes utilization of the controllers also change. Each controller performs the non zero sum game based control plane optimization operation to maximize its utilization. Each controller obtains peer information from one or more neighbouring controller . Further each controller computes its payload which indicates whether the controller is optimally utilized underutilized or overutilized. Based on the payload the controllers manage their load and may send controller deletion message s or the controller addition message s to the COC . Further based on the payload an overutilized controller may transfer its excess load to a neighbouring greedy controller while an underutilized controller may take over additional load from one or more neighbouring controller . In this context load of a controller may be based on the number of network devices that may be managed by the controller at any given instance of time and the volume of traffic each of these network devices may be handling. Further any controller in the communication network having capacity to take more load may be considered as a greedy controller.

Further the interface s of the controller may include a variety of software and hardware interfaces that allow the controller to interact with other entities of the communication network or with each other. For example the interface s may enable the controller to communicate with network devices and other devices such as web servers and external repositories. The interface s may also facilitate multiple communications within a wide variety of networks and protocol types including wired networks for example LAN cable etc. and wireless networks such as WLAN cellular or satellite. For the purpose the interface s may include one or more ports.

The memory may include any computer readable medium known in the art including for example volatile memory such as static random access memory SRAM and dynamic random access memory DRAM and or non volatile memory such as read only memory ROM erasable programmable ROM flash memories hard disks optical disks and magnetic tapes. Further the controller may include module s and data . The module s include for example a communication module a control module and other module s .

The data may include network device data and other data . The device data may further include peer information . The other data amongst other things may serve as a repository for storing data that is processed received or generated as a result of the execution of one or more modules in the module s .

According to an implementation the communication module of the controller may communicate with several network devices of the communication network . Further the communication module may communicate with neighbouring controllers in the communication network . Such communication may be based on inter SDN communication protocols. Communication of the controller with neighbouring controllers may include request for peer information comprising routing updates self payoff value or may include information messages such as offloading message and state change message. The communication module may communicate with the module s of the controller for exchange of controller messages. In one embodiment the communication module may communicate the control messages to the neighbouring controller s at a time instance of routing updates.

The network controller includes the control module to determine a traffic profile variation compute a self payoff value and update the routing tables. The configuration information of the controller such as routing table may be stored in the network device data . Further the peer information received by the communication module from the neighbouring controllers may be stored in the peer information .

In accordance with one implementation of the present subject matter the control module determines a traffic profile variation in the communication network . The control module may receive network traffic and load information from time to time from the communication module . The control module analyses the traffic information received at various instances of time and determines a traffic variation profile. The traffic profile variation may be indicative of changes in a current traffic profile of the controller and the neighbouring controller s with respect to a previous traffic profile.

The control module further computes a self payoff value for the controller . The self payoff value also referred to as payoff may be determined based on equation 3. Equation 3

where frepresents the self payoff value of a icontroller represents a non linear function or a constant for icontroller related to the usage of the controller Urepresents the utilization of icontroller Urepresents a pre defined threshold value of utilization for icontroller represents a nonlinear function or a constant for delay payoff computation for a controller i related to the delay experienced by it trepresents a pre defined threshold value for delay constraint of icontroller and trepresents the delay constraint for icontroller. The values of U U tand the self payoff value may also be stored in the network device data .

In accordance with one implementation of the present subject matter the control module includes an optimization module for optimization of the controller s in the communication network . The optimization module performs the control plane optimization operation with the neighbouring controller s . Based on the solution achieved by performing the operation the optimization module may decide the process to be executed to achieve maximum utilization. In one example the optimization module of an overutilized controller may offload several network device s based on the solution of the control plane optimization operation. In another example the optimization module of an underutilized controller may master several network device s of the communication network based on the solution of the control plane optimization operation.

In an example based on the non zero sum game based control plane optimization operation when the controller transfers control of some of the network devices that it may be managing to a neighbouring controller or when the controller acquires control of additional network devices from one or more neighbouring controllers a change in placement of the controller occurs. The communication module may communicate control messages to inform such change in placements or transfer of control to one or more neighbouring controllers . In one embodiment the communication module may also communicate the control messages to the COC . Also in cases where based on the non zero sum game based control plane optimization operation if a decision to activate or deactivate a controller is taken the communication module may further communicate the request to the COC .

In one implementation of the present subject matter the various control messages may be communicated asynchronously. In one more implementation of the present subject matter the communication module communicates with the neighbouring controllers in an asynchronous manner to obtain the peer information. Such asynchronous communication wherein not all controllers talk to each other at the same time ensures that at any given instance of time the volume of control messages being exchanged between the various controllers of the communication network is within acceptable limits and that the control messages do not overload the controllers .

Further the interface s of the COC may include a variety of software and hardware interfaces that allow the COC to interact with other entities of the communication network or with each other. For example the interface s may enable the COC to communicate with network devices and other devices such as web servers and external repositories. The interface s may also facilitate multiple communications within a wide variety of networks and protocol types including wired networks for example LAN cable etc. and wireless networks such as WLAN cellular or satellite. For the purpose the interface s may include one or more ports.

The memory may include any computer readable medium known in the art including for example volatile memory such as static random access memory SRAM and dynamic random access memory DRAM and or non volatile memory such as read only memory ROM erasable programmable ROM flash memories hard disks optical disks and magnetic tapes. Further the COC may include module s and data . The module s include for example a communication module a controller optimization module and other module s .

The data may include controller optimization data and other data . The other data amongst other things may serve as a repository for storing data that is processed received or generated as a result of the execution of one or more modules in the module s .

According to an implementation the communication module of the COC may communicate with several controller s of the communication network . The communication module may receive request from the controllers for optimization of the number of controllers in the communication network . The request may include request for activation of a new controller in the communication network or request for deactivation of an existing controller from the communication network .

The COC includes the controller optimization module for execution of the request received by the communication module . The controller optimization module may activate an additional controller in the communication network or may deactivate an existing controller in the communication network based on the request received. Information related to controllers such as the number of controllers in the communication network status of controllers and number of controllers in sleep or switched off mode may be stored as the controller optimization data .

Although in the above described embodiment the COC deactivates existing controllers based on received requests in other embodiments deactivation of a controller in the communication network may be executed by the controllers themselves. For example a controller may perform the control plane optimization operation and upon determining that it is substantially underutilized the controller may execute a process to enter the inactive mode. Thus the controller may offload the associated network devices and deactivates itself without intervention of the COC . For example an inactive virtual network controller may be deleted while an inactive physical network controller may become dormant. Such inactive physical controllers may be considered to be in a dormant mode which can be realized by either switching off the controller or by keeping the controller in an idle state with limited operations such as sleep mode. The controller which is in sleep mode can be activated and made fully operational by control message received from the COC or any other controller . Change of state i.e. active to inactive and vice versa may be stored in the data of the COC and in the data of all neighbouring controllers .

The order in which the method is described is not intended to be construed as a limitation and any number of the described method blocks can be combined in any order to implement the method or alternative methods. Additionally individual blocks may be deleted from the methods without departing from the spirit and scope of the subject matter described herein. Furthermore the method can be implemented in any suitable hardware software firmware or combination thereof.

Referring to at block the method may include obtaining by a network controller peer information of at least one neighbouring network controller . The peer information may be indicative of utilization and delay associated with the performance of the at least one neighbouring network controller .

At block the method includes determining a traffic profile variation by the network controller . The traffic profile variation may be indicative of changes in a current traffic profile of the network controller and the least one neighbouring network controller with respect to a previous traffic profile of the network controller and the least one neighbouring network controller .

At block the method includes computing a self payoff value for the network controller by the network controller . The self payoff value may be indicative of one of optimum utilization underutilization and overutilization of the network controller . Further as explained previously the computing of self payoff value may be based on predefined QoS parameters which may include parameters such as maximum and minimum utilization threshold values.

At block the method includes initiating a non zero sum game based control plane optimization operation based on the self payoff value by the network controller and neighbour s payoff values. The non zero sum game based control plane optimization operation provides for optimizing the number and placement of controllers in the communication network. The control plane optimization operation may include one of activating of at least one additional network controller transferring control of one or more network devices managed by the network controller to a neighbouring network controller deactivating the network controller and transferring control of one or more additional network devices to the network controller .

According to an implementation of the present subject matter each controller as illustrated in the computes a self payoff value and runs the load optimization process at several instances of time to achieve maximum utilization. For example controller C may obtain peer information of neighbouring controllers C C and C and information of switches of such controllers. The controller C determines the change in the traffic profile based on the current traffic profile and previously received traffic profile. In such situation where the number of flow requests decreases the controller performs the control plane optimization operation to maximize utilization. Hence the controller C compares its self payoff value with the minimum threshold payoff value and maximum threshold payoff value to determine underutilization or overutilization of the controller. Based on the information about utilization of the controller each controller performs the control plane optimization operation along with one or more neighbouring controllers.

In the illustrated example the process of performing the control plane optimization operation by each of the controllers in the network results in increased utilization by deletion of 2 controllers C and C. The switches mastered by controllers C and C may be offloaded to other active controllers before deletion. For example the switches S S S and S originally mastered by controller C may be mastered by controller C on deletion of controller C. Thus controller C originally mastering 3 switches may master 7 switches. Similarly the controller C may be deleted for achieving maximum utilization of controllers. The switches S S S and S originally mastered by controller C may be mastered by controller C on deletion of controller C. Thus the controller C originally mastering 3 switches may master 7 switches. In the above described example decision of deletion of controllers results an increase in utilization of controllers. The utilization of 47 as illustrated in increases to 55 on deletion of two controllers as illustrated in . Such decision of deletion of controllers further results in decrease of operational expenditure of the communication network . Optimization of number of controllers for a changing network traffic is further illustrated based on

According to the example illustrated in the figure 367 flow requests may be served by the 5 active controllers and 74 utilization of the controllers may be achieved in the illustrated example. The figure further illustrates non uniform distribution of load over the switches. In accordance with one embodiment of the present subject matter the configuration of the communication network may be modified i.e. the number of controllers and mapping of the controllers to the switches may be changed to achieve optimum utilization of the controllers based on the network load. In one example the SDN topology as depicted in may be modified to the SDN topology as depicted in to achieve optimum utilization of the controllers.

According to the illustrated example on an increase in the number of flow requests the load on the switches S S S S S S S S S S and S increases the load on S decreases while the load on other switches does not change. The network load on switches causes an imbalance of the load distribution on the 5 active controllers as depicted in . As the traffic profile of the controllers change each controller performs the control plane optimization operation to optimize the load. Based on the solutions of the control plane optimization operation performed by the controllers a message for activation of an additional controller may be sent to the COC . The COC activates the additional controller C in the network. The controllers based on the results of the control plane optimization operation reallocate the switches mastered by each controller. Thus the new controller C masters switches S S and S offloaded by controller C. Since the total load on the controller C reduces on offloading of switches to C the controller C performs the control plane optimization operation with C and masters switches S and S. Further as the controller C also performs the control plane optimization operation with its neighbouring controllers controller C masters switch S offloaded by controller C. Thus as illustrated in the example an increase in the number of flow requests may be served by increasing the number of controllers in the communication network.

According to the example illustrated in the figure 442 flow requests may be severed by the 6 active controllers and 74 utilization of the controllers may be achieved in the illustrated example. The figure further illustrates non uniform distribution of load over the switches. In accordance with one embodiment of the present subject matter the configuration of the communication network may be modified i.e. the number of controllers and the mapping of the controllers to the switches may be changed to achieve optimum utilization of the controllers based on the network load. In one example the SDN topology as depicted in may be modified to the SDN topology as depicted in to achieve optimum utilization of the controllers.

According to the illustrated example on a decrease in the number of flow requests the load on the switches S S S S S and S increases load on switches S S S S S S S S S S and S decreases while the load on the other switches does not change. The network load on switches causes an imbalance of the load distribution on the active controllers as depicted in . As the traffic profile for the controllers change each controller performs the control plane optimization operation to optimize the load. As illustrated since the decrease in the number of flow requests is small deactivation of a controller may not provide an optimized solution. Thus based on the results of the control plane optimization operation performed by the controllers the controllers reallocate the switches to optimize the load distribution. Switches S and S are mastered by controller C on offloading by controller C based on the control plane optimization operation performed by controller C with controller C. Thus as illustrated in the example a decrease in the number of flow requests is optimized based on control plane optimization operation to achieve optimum utilization of the controllers.

Although embodiments for methods and systems for controller optimization in communication networks have been described in a language specific to structural features and or methods it is to be understood that the invention is not necessarily limited to the specific features or methods described. Rather the specific features and methods are disclosed as exemplary embodiments for load optimization in software defined networks.

