---

title: Systems and methods for error handling
abstract: Systems and methods for performing error handling in ERP systems are disclosed. In one implementation, the method comprises receiving processed jobs data from at least one of the ERP systems. Further, the method comprises analyzing the processed jobs data to determine error data associated with one or more errors occurred while processing jobs in the at least one of the ERP systems. Further, the method comprises executing at least one corrective action to rectify the one or more errors based on the error data. Further, the method comprises tracking processing of the jobs in the at least one of the ERP system upon executing the at least one corrective action. Further, the method comprises performing one or more trigger actions to improve performance of the jobs based on the tracking.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09569300&OS=09569300&RS=09569300
owner: Wipro Limited
number: 09569300
owner_city: Bangalore
owner_country: IN
publication_date: 20150617
---
This application claims the benefit of Indian Patent Application No. 883 CHE 2015 filed Feb. 24 2015 which is hereby incorporated by reference in its entirety.

The present subject matter relates to error handling systems and particularly but not exclusively to systems and methods for error handling in Enterprise Resource Planning ERP systems.

Generally ERP systems are used to organize define and standardize business processes in an organization by effectively managing and interpreting data from various business activities. In an example the business activities may include planning of resources manufacturing or service delivery inventory management supply chain management SCM marketing and sales and shipping and payment.

In a SCM based ERP systems background jobs and processes are considered for carrying out critical supply chain planning and forecasting activities. Typically when the background jobs and the processes are executed by an ERP system there are constant background failures of these batch jobs or process chains. In an example critical batch processing jobs that carry forward business activities in the background usually fail due to Inconsistency between systems or due to missing data that is required by the job for processing the activity or any other manual error during customization. This causes critical information availability failure for ERP system end users. To rectify and monitor the background failures manual interventions are needed. Further stipulated manual corrections are also needed to avoid any data miss match or wrong planning from being carried out and presented to the business users.

Disclosed herein are systems and methods for performing error handling in Enterprise Resource Planning ERP systems. In one example the system comprises a processor a memory communicatively coupled to the processor wherein the memory stores processor executable instructions which on execution cause the processor to receive processed jobs data from at least one of the ERP systems. The processor executable instructions on execution further cause the processor to analyze the processed jobs data to determine error data associated with one or more errors occurred while processing jobs in the at least one of the ERP systems. The processor executable instructions on execution further cause the processor to execute at least one corrective action to rectify the one or more errors based on the error data. The processor executable instructions on execution further cause the processor to track processing of the jobs in the at least one of the ERP system upon executing the at least one corrective action. The processor executable instructions on execution further cause the processor to perform one or more trigger actions to improve performance of the jobs based on the tracking.

Certain embodiments of the present disclosure relates to a method for performing error handling in ERP systems comprises receiving processed jobs data from at least one of the ERP systems. Further the method comprises analyzing the processed jobs data to determine error data associated with one or more errors occurred while processing jobs in the at least one of the ERP systems. Further the method comprises executing at least one corrective action to rectify the one or more errors based on the error data. Further the method comprises tracking processing of the jobs in the at least one of the ERP system upon executing the at least one corrective action. Further the method comprises performing one or more trigger actions to improve performance of the jobs based on the tracking.

Certain embodiments of the present disclosure also relate to a non transitory computer readable medium storing instructions for performing error handling in ERP systems that when executed by a processor cause the processor to perform operations comprising receiving processed jobs data from at least one of the ERP systems. Further the operations comprise analyzing the processed jobs data to determine error data associated with one or more errors occurred while processing jobs in the at least one of the ERP systems. Further the operations comprise executing at least one corrective action to rectify the one or more errors based on the error data. Further the operations comprise tracking processing of the jobs in the at least one of the ERP system upon executing the at least one corrective action. Further the operations comprise performing one or more trigger actions to improve performance of the jobs based on the tracking.

Additional objects and advantages of the present disclosure will be set forth in part in the following detailed description and in part will be obvious from the description or may be learned by practice of the present disclosure. The objects and advantages of the present disclosure will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims.

It is to be understood that the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention as claimed.

Exemplary embodiments are described with reference to the accompanying drawings. In the figures the left most digit s of a reference number identifies the figure in which the reference number first appears. Wherever convenient the same reference numbers are used throughout the drawings to refer to the same or like parts. While examples and features of disclosed principles are described herein modifications adaptations and other implementations are possible without departing from the spirit and scope of the disclosed embodiments. Also the words comprising having containing and including and other similar forms are intended to be equivalent in meaning and be open ended in that an item or items following any one of these words is not meant to be an exhaustive listing of such item or items or meant to be limited to only the listed item or items. It must also be noted that as used herein and in the appended claims the singular forms a an and the include plural references unless the context clearly dictates otherwise.

The present subject matter discloses systems and methods for performing error handling in ERP systems. The systems and methods may be implemented in a variety of computing systems. The computing systems that can implement the described method s include but are not limited to a server a desktop personal computer a notebook or a portable computer and a mainframe computer. Although the description herein is with reference to certain computing systems the systems and methods may be implemented in other computing systems albeit with a few variations as will be understood by a person skilled in the art.

Embodiments of the present disclosure are related to a method and an error handling system for handling errors that arise during execution of background jobs and processes in ERP systems. In one implementation the error handling system may receive processed jobs data from the ERP systems. The processed jobs data comprises data obtained by execution of background jobs and processed in the ERP systems. The processed jobs data may also include parameters specified by ERP system and business users. Further the error handling device may analyze the processed jobs data to determine error data associated with one or more errors occurred during execution of the background jobs. Thereafter the error handling system may analyze the error data based on predictive analytics and apply man machine algorithms to the error data to determine at least one corrective action to rectify the one or more errors. Once the at least one corrective action is performed the error handling system monitors processing of the jobs. Further the error handling system may trigger one or more trigger actions to improve performance of the jobs and generate an error handling report for the business users. In an example the error handling report may include error data ERP data and correction data.

Working of the systems and methods for performing error handling in ERP systems is described in conjunction with . It should be noted that the description and drawings merely illustrate the principles of the present subject matter. It will thus be appreciated that those skilled in the art will be able to devise various arrangements that although not explicitly described or shown herein embody the principles of the present subject matter and are included within its spirit and scope. Furthermore all examples recited herein are principally intended expressly to be only for pedagogical purposes to aid the reader in understanding the principles of the present subject matter and are to be construed as being without limitation to such specifically recited examples and conditions. Moreover all statements herein reciting principles aspects and embodiments of the present subject matter as well as specific examples thereof are intended to encompass equivalents thereof. While aspects of the systems and methods can be implemented in any number of different computing systems environments and or configurations the embodiments are described in the context of the following exemplary system architecture s .

Further as shown in the system is communicatively coupled to data load systems and ERP systems . In an example the ERP systems may be supply chain management SCM based conceptual ERP systems provided by a third party. The ERP systems may comprise complete set of SCM backgrounds process chains and jobs. The ERP systems execute these process chains and jobs and provide execution to the input module .

In an example the data load systems may be third party systems used for data warehousing and reporting purpose. Also the data load systems receive inputs from business users indicating customization changes to the process flows or jobs. In an example the business user may be an administrator of the system or the ERP systems or stakeholders such as project managers team leads in an organization where the ERP systems are implemented.

Further as shown in the analysis engine comprises sub modules a predictive analyzer and a correction module . The correction module further comprises an action formulator and a trigger module . Also the handling and scheduling module comprises an error handler and a cognitive scheduler .

Further the data comprises data and reports generated by various modules of the system during error handling process. As shown in the data comprises error data correction data and ERP data . In an example the error data may comprise information pertaining to errors that occurred in the ERP systems while processing of jobs. The correction data may comprise details pertaining to corrective actions taken by the system on different errors. The ERP data may comprise details pertaining to background process and jobs and customization that the jobs are intended to perform. In an example the ERP data may also include a remote function call RFC with user parameters.

In operations for error handling in the ERP systems the input module may receive processed jobs data from the ERP systems . The processed jobs data may comprise data related to the jobs executed by the ERP systems and additional details such as the user parameters and ERP parameters. The user parameters may be specified by a user for functioning of the background job or process chain. The ERP parameters may be used for categorization of error and identifying timeframe for error maintenance. In an example the ERP parameters are provided by the input module to the analysis engine to communicate when to start the error handling correcting process.

The cognitive man machine learning module may monitor and learn actions performed by the business user in the ERP systems when the errors were occurred previously. In one implementation based on the monitoring and the learning the cognitive man machine learning module may develop man machine algorithms to rectify the errors. Also the cognitive man machine learning module may be initialized with details of artificial intelligence to report which job has been triggered currently in the background in the ERP system so that the analysis engine knows when to start its functionality.

The supporter module act as an interface that leverages inputs from the cognitive man machine algorithm and the input module to the analysis engine .

The cognitive man machine learning module and the analysis module have inbuilt Artificial Intelligence AI program incorporated into it. The artificial intelligence program allows the cognitive man machine learning module and the analysis module to correct error based on what is read from user interactions with the ERP systems .

The analysis engine is a collaborative man machine cognitive system and predictive analyzer . The analysis engine receives the processed jobs data and analyzes it to determine one or more errors that occurred during execution of the background jobs. Also the analysis engine applies the man machine algorithms to the processed jobs data and recommends actions to be performed for rectifying the one or more errors identified by predictive analysis. In an example the predictive analyzer tracks error by analyzing the processed jobs data and obtains the error data . The error data may include errors occurred during execution of the jobs cause of the errors failed jobs and past history of the failed jobs with time stamps. Further the predictive analyzer determines whether to initiate the analysis or error handling based on the one or more errors identified in the error data .

Thereafter the correction module determines at least one corrective action for to rectify the one or more errors. In an example the correction module works based on the learning received from the cognitive man machine learning module . The correction module may then execute the at least one corrective action based on the man machine learning algorithms. Further the correction module may monitor processing of the background jobs upon executing the at least one corrective action and determine one or more triggers that needs to be done based on the monitoring to avoid the one or more errors from re occurring.

In an example the action formulator is responsible for determining the at least one corrective action that that needs to be taken on the one or more errors received and the analysis performed by the Predictive analyzer .

In an example the trigger module determines the one or more trigger actions to be taken for the better performance of the job. The trigger module may perform the one or more trigger action by continuously monitoring the processing of the background jobs once the at least one corrective action is performed. In this manner the correction engine ensures that the one or more errors do not occur.

Further the handling and scheduling module is an after care module that is used for corrective measures that may be needed if the at least one corrective action taken by the correction module has caused a change to the actual performance of the job.

In the handling and scheduling module the error handler may monitor effects on processes in the ERP systems due to execution of the at least one corrective action.

Further the cognitive scheduler may determine whether to re trigger the steps or jobs that have failed or to trigger a next step. In an example the cognitive scheduler may re trigger the processes that failed in the ERP systems based on the monitoring of the processes.

Subsequently the output module indicates to the business user that the one or more errors have rectified and all the processes are running smoothly. In an example the output module may generate an error handling report. The error handling report may comprise the error data the correction data and the ERP data . The output module may also store the data generated by the various modules or engine of the system in the data .

In one implementation where background jobs are being executed in a SCM based ERP system the input module may receive the processed jobs data generated by execution of the background jobs. For example say the processed jobs data have information that a couple of background jobs failed such as some characteristic value combinations CVCs cannot be processed in block time bucket does not exist and communication failure. In case where the CVCs cannot be processed a consistency check may be run in the background for the planning area and or the live cache consistency check in case of an SAP environment. In case where the time bucket does not exist a step green may be performed via the inbuilt function module program by providing the various parameters that the particular failed job has customized in it for processing data. In case of a communication error the job needs to be processed after the data load process is completed or after a stipulated amount of time this job can be repeated. The cognitive man machine learning module may read the system failure and then it learns the respective corrective action that needs to be performed during such a failure. During learning the cognitive man machine learning module also reads how the job is performing after the manual correction is done. Thereafter for every job failure the cognitive man machine learning module tends to read the error and finds possible solution that the user has performed. The predictive analyzer analyses these errors and the different conditions that the job has to actually perform and this then generates a complete analysis for the correction module that combines the learners reading and analyzers complete detailed analysis and consequently formulates the at least one corrective action. In this manner the system efficiently performs error handling during background processing of jobs in the ERP systems .

Thus the system of present subject matter performs error handling of background jobs in ERP systems . The system rectifies the errors occurred during execution of the background jobs by employing collaborative functioning of man machine concept and predictive analysis. The system improves ERP system functionality by efficiently handling the errors and preventing regular failure of background processes. Further the system ensures all the processes are working fine upon corrective actions and checks whether any customization change is needed for improved functioning of planning processes.

The method may be described in the general context of computer executable instructions. Generally computer executable instructions can include routines programs objects components data structures procedures modules and functions which perform particular functions or implement particular abstract data types. The method may also be practiced in a distributed computing environment where functions are performed by remote processing devices that are linked through a communication network. In a distributed computing environment computer executable instructions may be located in both local and remote computer storage media including memory storage devices.

The order in which the method is described is not intended to be construed as a limitation and any number of the described method blocks can be combined in any order to implement the method or alternative methods. Additionally individual blocks may be deleted from the method without departing from the spirit and scope of the subject matter described herein. Furthermore the method can be implemented in any suitable hardware software firmware or combination thereof.

With reference to method as depicted in as shown in block processed jobs data is received from at least one of the ERP systems . In an example where the background jobs are getting executed in the ERP systems it may be possible that one or more jobs may get failed or there may be some error in the execution. The processed jobs data may comprise this information pertaining to the execution of the background jobs.

The system may receive the processed jobs data to rectify the errors that occurred during execution of the background jobs. In an example the ERP parameters and the user parameters may be obtained by the input module from the data load systems and the ERP systems . Further the cognitive man machine learning module may learn user inputs and customizations through ERP intelligence. Further the system may keep on monitoring the ERP systems and updating information obtained from the user inputs and interaction with the ERP systems .

At block the processed jobs data are analyzed to determine error data associated with one or more errors occurred while processing jobs in the at least one of the ERP systems . The error data may comprise errors occurred during execution of the jobs cause of the errors failed jobs and past history of failed jobs with time stamps.

The analysis engine may then further analyze the one or more errors by checking error message received as the input. The analysis engine may also analyze the error generated with previously dealt errors that it had analyzed and check whether the other steps of the process or jobs have any faulty influence from the error that s occurred.

Further the analysis engine keeps track of whether to start the analyzing of failure or probable failure depending on the jobs previous performance. In an example if a job has failed at least once before in the previous run i.e. in one month then the analysis engine may start immediately start analysis as the job starts without waiting for failure. Also the analysis engine may monitor the jobs and check if any preventive action is required.

At block at least one corrective action is performed to rectify the one or more errors based on the error data . The predictive analyzer analyzes the error data and identifies the one or more errors occurred in the ERP systems . Thereafter the correction module may determine the at least one corrective action to rectify the one or more errors based on the man machine algorithms.

In one example the correction module and the predictive analyzer check for further action that can be formulated for the next run so that if the analysis engine starts from the start of the job for example in case the job has failed in the last few days weeks as maintained the action formulator may form corrective action based on previous error so that the error does not reoccur. The action formed is such that it tries to prevent any error from re occurring. The action formulator also formulates if there is any simultaneous consistency run for the system that is required to be triggered in parallel along with the start of the job so that the job does not fail during its next trigger due to any system or data inconsistency. This is a preventive action formulated based on the system and data check done by the predictive analyzer during the course of analyzing the failure when this job is re triggered during the next run.

At block processing of the jobs is tracked in the at least one of the ERP system upon executing the at least one corrective action. In an example the trigger module may monitor the processing of the jobs after execution of the one or more corrective actions to see whether the at least one action have not changed the nature of the jobs or to see whether the jobs are functioning in an expected manner.

At block one or more trigger actions are determined to improve performance of the jobs based on the tracking. In an example the trigger module may initiate the one or more trigger actions to improve the performance of the background jobs based on the tracking.

Further the handling and scheduling module may monitor effects on processes in the ERP systems due to execution of the at least one corrective action. Thereafter the handling and scheduling module may re trigger the processes that failed in the at least one of the ERP systems . The handling and scheduling module ensures that the error correction process has not changed any basic functionality of the job and its customization is in line with its actual process. The changes that require any kind of new customization for the functionality of the job may be reported and uploaded to the data load systems that feed the data to the concerned planning team. Subsequently the handling and scheduling module may trigger jobs either from the failed jobs or a next job based on the corrective action taken. In this manner a new run is sent to the output module thereby automating the entire process.

Further an error handling report is generated by the output module for the business users. The error handling report may comprise the error data the correction data and the ERP data . The error data may comprise details of the errors that occurred in the ERP systems while processing of jobs. The correction data may comprise details of corrective actions taken by the system to rectify different errors. The ERP data may comprise details pertaining to background process and jobs and customization that the jobs are intended to perform.

Processor may be disposed in communication with one or more input output I O devices via I O interface . The I O interface may employ communication protocols methods such as without limitation audio analog digital monoaural RCA stereo IEEE 1394 serial bus universal serial bus USB infrared PS 2 BNC coaxial component composite digital visual interface DVI high definition multimedia interface HDMI RF antennas S Video VGA IEEE 802.n b g n x Bluetooth cellular e.g. code division multiple access CDMA high speed packet access HSPA global system for mobile communications GSM long term evolution LTE WiMax or the like etc.

Using the I O interface the computer system may communicate with one or more I O devices. For example the input device may be an antenna keyboard mouse joystick infrared remote control camera card reader fax machine dongle biometric reader microphone touch screen touchpad trackball sensor e.g. accelerometer light sensor GPS gyroscope proximity sensor or the like stylus scanner storage device transceiver video device source visors etc. Output device may be a printer fax machine video display e.g. cathode ray tube CRT liquid crystal display LCD light emitting diode LED plasma or the like audio speaker etc. In some embodiments a transceiver may be disposed in connection with the processor . The transceiver may facilitate various types of wireless transmission or reception. For example the transceiver may include an antenna operatively connected to a transceiver chip e.g. Texas Instruments WiLink WL1283 Broadcom BCM4750IUB8 Infineon Technologies X Gold 618 PMB9800 or the like providing IEEE 802.11a b g n Bluetooth FM global positioning system GPS 2G 3G HSDPA HSUPA communications etc.

In some embodiments the processor may be disposed in communication with a communication network via a network interface . The network interface may communicate with the communication network . The network interface may employ connection protocols including without limitation direct connect Ethernet e.g. twisted pair 10 100 1000 Base T transmission control protocol internet protocol TCP IP token ring IEEE 802.11a b g n x etc. The communication network may include without limitation a direct interconnection local area network LAN wide area network WAN wireless network e.g. using Wireless Application Protocol the Internet etc. Using the network interface and the communication network the computer system may communicate with devices and . These devices may include without limitation personal computer s server s fax machines printers scanners various mobile devices such as cellular telephones smartphones e.g. Apple iPhone Blackberry Android based phones etc. tablet computers eBook readers Amazon Kindle Nook etc. laptop computers notebooks gaming consoles Microsoft Xbox Nintendo DS Sony PlayStation etc. or the like. In some embodiments the computer system may itself embody one or more of these devices.

In some embodiments the processor may be disposed in communication with one or more memory devices e.g. RAM ROM etc. via a storage interface . The storage interface may connect to memory devices including without limitation memory drives removable disc drives etc. employing connection protocols such as serial advanced technology attachment SATA integrated drive electronics IDE IEEE 1394 universal serial bus USB fiber channel small computer systems interface SCSI etc. The memory drives may further include a drum magnetic disc drive magneto optical drive optical drive redundant array of independent discs RAID solid state memory devices solid state drives etc.

The memory devices may store a collection of program or database components including without limitation an operating system user interface application web browser mail server mail client user application data e.g. any data variables or data records discussed in this disclosure etc. The operating system may facilitate resource management and operation of the computer system . Examples of operating systems include without limitation Apple Macintosh OS X Unix Unix like system distributions e.g. Berkeley Software Distribution BSD FreeBSD NetBSD OpenBSD etc. Linux distributions e.g. Red Hat Ubuntu Kubuntu etc. IBM OS 2 Microsoft Windows XP Vista 7 8 etc. Apple iOS Google Android Blackberry OS or the like. User interface may facilitate display execution interaction manipulation or operation of program components through textual or graphical facilities. For example user interfaces may provide computer interaction interface elements on a display system operatively connected to the computer system such as cursors icons check boxes menus scrollers windows widgets etc. Graphical user interfaces GUIs may be employed including without limitation Apple Macintosh operating systems Aqua IBM OS 2 Microsoft Windows e.g. Aero Metro etc. Unix X Windows web interface libraries e.g. ActiveX Java Javascript AJAX HTML Adobe Flash etc. or the like.

In some embodiments the computer system may implement a web browser stored program component. The web browser may be a hypertext viewing application such as Microsoft Internet Explorer Google Chrome Mozilla Firefox Apple Safari etc. Secure web browsing may be provided using HTTPS secure hypertext transport protocol secure sockets layer SSL Transport Layer Security TLS etc. Web browsers may utilize facilities such as AJAX DHTML Adobe Flash JavaScript Java application programming interfaces APIs etc. In some embodiments the computer system may implement a mail server stored program component. The mail server may be an Internet mail server such as Microsoft Exchange or the like. The mail server may utilize facilities such as ASP ActiveX ANSI C C Microsoft .NET CGI scripts Java JavaScript PERL PHP Python WebObjects etc. The mail server may utilize communication protocols such as internet message access protocol IMAP messaging application programming interface MAPI Microsoft Exchange post office protocol POP simple mail transfer protocol SMTP or the like. In some embodiments the computer system may implement a mail client stored program component. The mail client may be a mail viewing application such as Apple Mail Microsoft Entourage Microsoft Outlook Mozilla Thunderbird etc.

In some embodiments computer system may store user application data such as the data variables records etc. as described in this disclosure. Such databases may be implemented as fault tolerant relational scalable secure databases such as Oracle or Sybase. Alternatively such databases may be implemented using standardized data structures such as an array hash linked list struct structured text file e.g. XML table or as object oriented databases e.g. using ObjectStore Poet Zope etc. . Such databases may be consolidated or distributed sometimes among the various computer systems discussed above in this disclosure. It is to be understood that the structure and operation of the any computer or database component may be combined consolidated or distributed in any working combination.

The specification has described systems and methods for performing error handling in ERP systems . The illustrated steps are set out to explain the exemplary embodiments shown and it should be anticipated that ongoing technological development will change the manner in which particular functions are performed. These examples are presented herein for purposes of illustration and not limitation. Further the boundaries of the functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternative boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed. Alternatives including equivalents extensions variations deviations etc. of those described herein will be apparent to persons skilled in the relevant art s based on the teachings contained herein. Such alternatives fall within the scope and spirit of the disclosed embodiments.

Furthermore one or more computer readable storage media may be utilized in implementing embodiments consistent with the present disclosure. A computer readable storage medium refers to any type of physical memory on which information or data readable by a processor may be stored. Thus a computer readable storage medium may store instructions for execution by one or more processors including instructions for causing the processor s to perform steps or stages consistent with the embodiments described herein. The term computer readable medium should be understood to include tangible items and exclude carrier waves and transient signals i.e. be non transitory. Examples include random access memory RAM read only memory ROM volatile memory nonvolatile memory hard drives CD ROMs DVDs flash drives disks and any other known physical storage media.

It is intended that the disclosure and examples be considered as exemplary only with a true scope and spirit of disclosed embodiments being indicated by the following claims.

