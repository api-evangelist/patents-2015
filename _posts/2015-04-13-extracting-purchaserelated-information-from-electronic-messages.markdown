---

title: Extracting purchase-related information from electronic messages
abstract: Product order and shipping information received via email messages is automatically aggregated for ready user review. Once the user is authenticated, authorization to access their email mailbox is obtained and the email message headers of their emails are analyzed to identify those messages of interest. The bodies of the email messages of interest are parsed to extract the product order and shipping information which is stored and presented for display to the user typically grouped by individual product thus greatly simplifying user review of orders. The aggregated product order and shipping information can be augmented with additional information such as shipping status, delivery status, a product image, and/or a last date that the product can be returned.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09508054&OS=09508054&RS=09508054
owner: Slice Technologies, Inc.
number: 09508054
owner_city: San Mateo
owner_country: US
publication_date: 20150413
---
This application is a continuation of U.S. patent application Ser. No. 13 349 287 filed Jan. 12 2012 which is a continuation in part of U.S. patent application Ser. No. 13 185 943 now U.S. Pat. No. 8 844 010 filed Jul. 19 2011. The disclosures of U.S. patent application Ser. Nos. 13 349 287 and 13 185 943 are both incorporated herein by reference.

This application also relates to the following co pending applications U.S. patent application Ser. No. 14 457 421 filed Aug. 12 2014 U.S. patent application Ser. No. 14 684 658 filed Apr. 13 2015 U.S. patent application Ser. No. 14 519 919 filed Oct. 21 2014 and U.S. patent application Ser. No. 14 519 975 filed Oct. 21 2014.

The present invention relates generally to gathering product order and shipping information and in particular to augmenting and aggregating such information that was communicated by email.

The acquisition of goods and services hereinafter individually and collectively referred to as product is ever increasing. Further such acquisitions are commonly handled electronically today either by an online purchase or an electronic confirmation of such purchase. For example it is common today to place an order with an online merchant such as AMAZON.COM of Seattle Wash. The online merchant then typically sends to the purchaser an order confirmation in an electronic form such as an email message. Subsequently the online merchant and or shipping company typically sends a shipping confirmation to the purchaser also in an electronic form such as an email message. While such transactions have become increasingly common and quite convenient this convenience comes with some downsides as well.

A typical prior art online transaction scenario will now be explained with reference to . As shown in a user operating a user computing device such as a personal computer handheld computing device or smartphone communicates across a network such as the internet to an online merchant to shop for and consummate an online transaction to acquire some product. This is typically performed by the user operating an application such as a web browser running on the user computing device . When the online transaction is complete online merchant typically sends details of the completed transaction to the user computing device for display to the user typically in a window of the same application running on the user computing device . Online merchant also typically sends an email message to the user of user computing device confirming the transaction. Such an order confirmation email message is typically sent from the online merchant to an email server which is accessible to the user computing device via an email application running on the user computing device . Subsequently when the order is ready to be shipped to the user either by the online merchant or by a shipping company acting on behalf of the online merchant a shipping confirmation email message is typically sent from either the online merchant or the shipping company to the email server which is again accessible to the user computing device via the email application running on the user computing device. In this way the user who consummates an online transaction to acquire some product receives an order confirmation and a shipping confirmation of the ordered product.

Referring now to an exemplary prior art display window of an email application as may be running on the user computing device of can be seen. As shown in window of the email application is a column of email message folders e.g. an Inbox folder a Sent Items folder a Deleted Items folder and a Spam folder on the left hand side with the Inbox folder underlined and in bold thereby indicating that it is the currently selected email message folder for display. Next to the email message folders column is a slider bar an email message sender column a message subject line column and an email message sent date column . Each displayed email message line in the email message sender column the message subject line column and the email message sent date column corresponds to a single email message and as is known in the art slider bar can be used to scroll the displayed email message lines up and down in window .

In this way a user of the email application can view a limited portion of a number of the email messages received by the email application. In particular in the example shown in the user can view limited portions of various email messages received by the email application sent from email message senders such as Bob Smith Mary Jones John Green Lisa Adams etc. as indicated in email message send column . As also shown in this example are limited portions of email messages received from senders such as Apple and Amazon which are email messages sent by APPLE INC. of Cupertino Calif. and AMAZON.COM of Seattle Wash. respectively.

The email messages sent by email message senders Apple and Amazon have corresponding email message subjects as indicated in email message subject line column and corresponding email message sent dates as indicated in email message sent date column . In particular as shown in the figure there are two email messages indicated as being sent by Apple and one email message indicated as being sent by Amazon in the email message sender column .

The topmost email message indicated as being sent by Apple has a corresponding email message subject of Shipping Confirmation Order No. . . . as shown in the email message subject line column as is known in the art the remainder of the email message subject line text is cutoff as indicated by the ellipses due to the width constraints of the email message subject line column and a corresponding email message sent date of May 26 2011. This indicates that Apple sent an email message on May 26 2011 confirming shipment of an order. The next email message indicated as being sent by Apple has a corresponding email message subject of Order Confirmation Order No. . . . with a corresponding email message sent date of May 25 2011. This indicates that Apple sent an email message on May 25 2011 confirming that an order has been placed.

Of course as is common and known in the art other information about the shipping confirmation and other information about the order confirmation is contained in the respective email messages themselves either in the cutoff portion of the email message subject line or the email message body itself despite not being shown in the email application window . Such information can include for example the order number the shipping date the expected delivery date the item or items ordered including their descriptions and quantity the individual and or total price paid including any taxes and or shipping costs etc. However as indicated by the example of such further information is not typically displayed in the email application window thus requiring the user to open each individual email message for display in order to be able to view the further information contained therein. While perhaps not too problematic for a user who has only recently ordered few items this can become quite troublesome for a user who orders more items over time and particularly when those items are ordered from more than one online merchant and may be shipped by more than one online merchant or shipping company. In this latter case the user wishing to check what was ordered and when or wishing to check the shipping status of an order or wishing to see what the ordered item looks like finds himself wading through numerous old email messages to find the desired information having to use the scroll bar to review the hundreds or thousands of old email message lines displayed in email application window by sender subject and sent date and may also require moving between those message items displayed in the Inbox folder and those messages displayed in the Deleted Items folder or those message items displayed in an Archived Items folder not shown . This problem is compounded when items are backordered and the online merchant sends additional emails to that effect to the user or when the user wants to return items in which case the user must locate information in the emails or online about the return policy as well as details about the ordered items and their delivery.

What is needed therefore is a way for a user to more readily be able to view information about ordered items as well as view updated shipping and delivery status information as it becomes available.

In one embodiment is a method of augmenting aggregated product order and shipping information with shipping status information for an ordered product comprising retrieving email message headers from an email mailbox of a user identifying email messages of interest by analyzing the retrieved email message headers retrieving from the email mailbox of the user email message bodies of the identified email messages of interest parsing the retrieved email message bodies of the identified email messages of interest to extract the product order and shipping information storing the extracted product order and shipping information retrieving the stored extracted product order and shipping information for the ordered product to identify an online merchant of the ordered product accessing a website of the identified online merchant to obtain shipping status data for the ordered product and presenting for display to the user the extracted product order and shipping information and the obtained shipping status for the ordered product.

In another embodiment is a method of augmenting aggregated product order and shipping information with delivery status information for an ordered product comprising retrieving email message headers from an email mailbox of a user identifying email messages of interest by analyzing the retrieved email message headers retrieving from the email mailbox of the user email message bodies of the identified email messages of interest parsing the retrieved email message bodies of the identified email messages of interest to extract the product order and shipping information storing the extracted product order and shipping information retrieving the stored extracted product order and shipping information for the ordered product to identify a shipper of the ordered product and a tracking number for the ordered product obtaining delivery status information about the ordered product by accessing a website of the identified shipper and using the identified tracking number and presenting for display to the user the extracted product order and shipping information and the obtained delivery status information for the ordered product.

In another embodiment is a method of augmenting aggregated product order and shipping information with return policy information for an ordered product comprising retrieving email message headers from an email mailbox of a user identifying email messages of interest by analyzing the retrieved email message headers retrieving from the email mailbox of the user email message bodies of the identified email messages of interest parsing the retrieved email message bodies of the identified email messages of interest to extract the product order and shipping information storing the extracted product order and shipping information identifying an online merchant of the ordered product from the stored extracted product order and shipping information retrieving from the identified online merchant a return policy of the online merchant determining from the retrieved return policy a return policy type and a return policy time limit calculating a last return date for the ordered product based on the determined return policy type and the determined return policy time limit and presenting for display to the user the extracted product order and shipping information and the calculated last return date for the ordered product.

In yet another embodiment is a method of augmenting aggregated product order and shipping information with an image of an ordered product the method comprising retrieving email message headers from an email mailbox of a user identifying email messages of interest by analyzing the retrieved email message headers retrieving from the email mailbox of the user email message bodies of the identified email messages of interest parsing the retrieved email message bodies of the identified email messages of interest to extract the product order and shipping information storing the extracted product order and shipping information retrieving product information from the stored extracted product order and shipping information using the retrieved product information to obtain the image of the ordered product and presenting for display to the user the extracted product order and shipping information and the image of the ordered product.

In still another embodiment is a system to augment aggregated product order and shipping information for an ordered product comprising a computing device an email server and a database coupled to the computing device wherein the computing device is configured to communicate across a network with the email server to retrieve email messages from an email mailbox of a user the email messages being parsed to extract product order and shipping information about the ordered product store the extracted product order and shipping information about the ordered product on the database retrieve the extracted product order and shipping information for the ordered product from the database communicate across the network with an online merchant using the stored extracted product order and shipping information to acquire updated shipping information and return policy information about the ordered product communicate across the network with a shipping company using the stored extracted product order and shipping information to acquire product delivery information about the ordered product communicate across the network with the search engine server or the online merchant using the stored extracted product order and shipping information to acquire an image of the ordered product and communicate across the network with a user computing device to display for the ordered product the retrieved product order and shipping information the updated shipping information the product delivery information the return policy information and the product image.

In another embodiment is a non transitory computer readable medium having stored thereupon computing instructions comprising a code segment to retrieve email message headers from an email mailbox of a user a code segment to identify email messages of interest by analyzing the retrieved email message headers a code segment to retrieve from the email mailbox of the user email message bodies of the identified email messages of interest a code segment to parse the retrieved email message bodies of the identified email messages of interest to extract the product order and shipping information a code segment to store the extracted product order and shipping information a code segment to retrieve the stored extracted product order and shipping information for the ordered product to identify an online merchant of the ordered product a code segment to access a website of the identified online merchant to obtain shipping status data for the ordered product and a code segment to present for display to the user the extracted product order and shipping information and the obtained shipping status for the ordered product.

In yet another embodiment is a non transitory computer readable medium having stored thereupon computing instructions comprising a code segment to retrieve email message headers from an email mailbox of a user a code segment to identify email messages of interest by analyzing the retrieved email message headers a code segment to retrieve from the email mailbox of the user email message bodies of the identified email messages of interest a code segment to parse the retrieved email message bodies of the identified email messages of interest to extract the product order and shipping information a code segment to store the extracted product order and shipping information a code segment to retrieve the stored extracted product order and shipping information for the ordered product to identify a shipper of the ordered product and a tracking number for the ordered product a code segment to obtain delivery status information about the ordered product by accessing a website of the identified shipper and using the identified tracking number and a code segment to present for display to the user the extracted product order and shipping information and the obtained delivery status information for the ordered product.

In still another embodiment is a non transitory computer readable medium having stored thereupon computing instructions comprising a code segment to retrieve email message headers from an email mailbox of a user a code segment to identify email messages of interest by analyzing the retrieved email message headers a code segment to retrieve from the email mailbox of the user email message bodies of the identified email messages of interest a code segment to parse the retrieved email message bodies of the identified email messages of interest to extract the product order and shipping information a code segment to store the extracted product order and shipping information a code segment to identify an online merchant of the ordered product from the stored extracted product order and shipping information a code segment to retrieve a previously stored return policy of the online merchant a code segment to determine from the retrieved return policy a return policy type and a return policy time limit a code segment to calculate a last return date for the ordered product based on the determined return policy type and the determined return policy time limit and a code segment to present for display to the user the extracted product order and shipping information and the calculated last return date for the ordered product.

In yet another embodiment is a non transitory computer readable medium having stored thereupon computing instructions comprising a code segment to retrieve email message headers from an email mailbox of a user a code segment to identify email messages of interest by analyzing the retrieved email message headers a code segment to retrieve from the email mailbox of the user email message bodies of the identified email messages of interest a code segment to parse the retrieved email message bodies of the identified email messages of interest to extract the product order and shipping information a code segment to store the extracted product order and shipping information a code segment to retrieve product information from the stored extracted product order and shipping information a code segment to use the retrieved product information to obtain the image of the ordered product and a code segment to present for display to the user the extracted product order and shipping information and the image of the ordered product.

Overcoming the limitations and challenges of the prior art the present approach aggregates product order and shipping information received via order confirmation emails and shipping confirmation emails thus making it easier for a user to review such product orders.

Referring now to an exemplary embodiment and operating environment can be seen. As with the order and shipping process described with respect to a user operating user computing device such as a personal computer handheld computing device or smartphone communicates across network such as the internet to online merchant to shop for and consummate an online transaction to acquire some product. This is typically performed by the user operating an application such as a web browser running on the user computing device . When the online transaction is complete online merchant typically sends details of the completed transaction to the user computing device for display to the user typically in a window of the same web browser application running on the user computing device . Online merchant also typically sends an email message to the user of user computing device confirming the transaction. Such an order confirmation email message is typically sent from the online merchant to email server which is accessible to the user computing device via an email application running on the user computing device . It is to be understood that email server may be provided by the user s company or may be provided by a third party email service provider. Subsequently when the order is ready to be shipped to the user either by the online merchant or by the shipping company acting on behalf of the online merchant a shipping confirmation email message is typically sent from either the online merchant or the shipping company to the email server which is again accessible to the user computing device via the email application running on the user computing device.

Also present in the embodiment shown in is an aggregation server . Aggregation server as will be explained aggregates the order information and the shipping information contained in the order confirmation email messages and the shipping confirmation email messages as explained herein. In particular aggregation server identifies the order confirmation email messages and the shipping confirmation email messages received in the user s email mailbox and parses them to extract the order information and the shipping information contained therein. Aggregation server also stores in a database the extracted order information and shipping information which extracted information can be sent across network to user computing device for display to the user typically grouped by individual product thus greatly simplifying user review of orders. It is to be understood that database and its associated information containing records as described herein are but one possible embodiment and that any known data storage approach can likewise be used to store the information.

Also shown in is a user authentication server and an access authorization server each optional in some embodiments. User authentication server is used to authenticate a user in some embodiments and access authorization server is used to obtain authorization to access the user s email mailbox in some embodiments each as explained further elsewhere herein.

In step the user is authenticated. As is known in the art user authentication is a process of verifying the identity of a user. Authenticating a user can be accomplished in any of a large variety of ways known in the art. Such authentication methods can include receiving from a user a user name and password or some biometric information such as a fingerprint or retinal scan or a security code or key which can then be compared with some stored known or determined information to thereby authenticate the user. Receipt of such information can occur by it being communicated from user computing device across network to aggregation server of for example.

In some embodiments operation of such user authentication methods can involve the user first registering with whomever is providing the order and shipping information aggregation service for example by the user registering directly with aggregation server using user computing device to communicate with aggregation server across network of .

In other embodiments third party user authentication services can be employed. For example user authentication server of can be used to authenticate the user thereby avoiding having the user register with the aggregation service or share authentication information with the aggregation service. One example of a third party authentication service is one that complies with OpenID a known open standard for user authentication in a decentralized manner. In accordance with the OpenID standard a user establishes an OpenID identifier using user computing device to communicate across network with user authentication server which in this example is operating as an OpenID provider. Aggregation server then receives the user s OpenID identifier from user computing device across network . Aggregation server can then communicate the user s OpenID identifier across network to user authentication server which can then authenticate the user on behalf of the user. It is to be understood that this OpenID third party authentication process is known in the art.

In step authorization for the aggregation service to access the user s email mailbox is obtained. As is known in the art access authorization is a process of obtaining permission to enter and or use some electronic or online resource. In some embodiments this is obtained directly from the user who themselves provides such authorization for example by communicating the user s email user name and email password from user computing device across network to aggregation server of .

In other embodiments this is obtained indirectly from the user who provides such authorization through a third party service such as for example access authorization server of . For example access authorization server of can be used to authorize the aggregation service to access the user s email mailbox thereby avoiding the user having to share their user credentials such as email user name and email password with the aggregation service. An example of a third party authorization service is one that complies with OAuth a known open standard for users to authorize access to private resources such as an email mailbox stored on one site with another site without having to share their user credentials such as email user name and email password with that other site. Following the OAuth standard a user operating user computing device obtains a token from access authorization server across network where the token grants access to a specific site such as email server . As is known in the art the access granted via the token can be limited to specific resources e.g. a particular email account for a defined duration e.g. the next 2 hours etc. thus providing the user the comfort of and ability to control who has access to what and for how long. The token is then communicated by the user from user computing device to aggregation server across network to thereby ultimately provide authorization to aggregation server to access email server . Aggregation server then uses the token in accordance with a sequence of communications steps across network involving user computing device aggregation server access authorization server and email server all as defined by the OAuth standard to obtain authorized access to email server across network . It is to be understood that this OAuth third party authorization process is known in the art.

In other embodiments as appropriate taking into account such issues as privacy and legal authority such authorization for the aggregation service to access the user s email mailbox is obtained directly from a provider of the email service. This may be appropriate in the case of an email service provider s user agreement granting the service provider the right to give such authorization. This may also be appropriate in the case of an email service provided by an employer to an employee as for example in the case of Yahoo Inc. of Sunnyvale Calif. which provides its employees with an email service called Yahoo Mail where by virtue of an employment contract or other agreement the employer has the right to authorize access to the employee s email mailbox.

In step email message headers are retrieved from the user s email mailbox using the access authorization obtained in step . As is known in the art an email message typically has a header of data fields about the email message such as who was the sender of the message what is the subject of the message when was the message sent and who is to be the message recipient etc. These header fields are what are typically used to populate an email application window as shown in . In one embodiment the email message headers are retrieved from the user s email mailbox by aggregation server communicating across network to directly access the user s email mailbox in email server of using mail access protocols known in the art. In another embodiment the email message headers are retrieved from the user s email mailbox by aggregation server communicating across network with a request to email server of to perform a search of the user s email messages and return those having an email message header with a sender being a known online merchant such as Apple or Amazon or an email message header with a subject line text that matches keywords such as order confirmation shipping confirmation etc. In yet another embodiment the email message headers are retrieved from the user s email mailbox by aggregation server communicating across network with a request to email server of to perform a search of the user s email messages and return those having an email message header with the sender being an email address associated with ordering from or shipping by the online merchant e.g. auto confirm amazon.com or ship confirm amazon.com .

In step email messages of interest are identified. In one embodiment this occurs within aggregation server of which filters the retrieved email message headers to identify email messages sent by a known online merchant. Examples include an email message header indicating that the email message was sent by Apple or by Amazon. Another example is when an email message header indicates that the email message was sent by a third party known to send such email messages on behalf of an online merchant. This filtering process can also identify email messages of interest by recognizing those email message headers that contain text in the email message subject line that corresponds to known order confirmation subject line text or known shipping confirmation subject line text. Examples include an email message sent with a subject line containing the text purchase order ordered shipment shipping shipped invoice confirmed confirmation notification receipt return pre order pre ordered tracking on its way received fulfilled ereceipt package etc.

In step the email message bodies for the identified email messages of interest are retrieved from the user s email mailbox using the access authorization obtained in step . As is known in the art an email message typically has a message body which contains the main part of the email message itself and is what is typically viewed by a user when an email message is opened. In one embodiment this retrieval is accomplished by aggregation server requesting the email message body for the identified email messages of interest from email server across network of using mail access protocols known in the art. Identification of which message bodies are being requested can be accomplished in various ways known in the art including requesting each by email message identifier obtained from the email message header of the identified email messages of interest in step . In an alternative embodiment step and step are combined into a single retrieval step with identification step occurring afterwards.

In step the retrieved email message bodies for the identified email messages of interest are parsed to extract the order information and or shipping information contained therein. Such parsing operation can occur in a variety of known ways. However because the text contained in email message bodies is of a free form nature as opposed to the structured tagged elements in a hypertext markup language HTML web page which delineate and make recognizable the various fields or elements of the web page in one embodiment predefined templates are used that have been specifically created to identify the various individual elements or entities of interest in a given email from an online merchant. Use of these predefined templates to parse a retrieved email message body occurs within aggregation server of as will be explained further elsewhere herein.

Further because it is known from step which online merchant sent the email message of interest and whether the email message is an order confirmation or a shipping confirmation a template specific to the online merchant and type of confirmation is used. Still further because email message bodies can as is known in the art be in either a text or HTML format a template specific to the type of email message body format is used. It is to be understood that even though an email message body may be in an HTML format the email message body is still of a free form nature because it lacks recognizable structured tag elements that exist for example in an HTML web page.

As such for each online merchant there are typically four different parsing templates which can be used in this embodiment i a text order confirmation template ii an HTML order confirmation template iii a text shipping confirmation template and iv an HTML shipping confirmation template. Of course for some online merchants there are greater or fewer templates depending simply upon what are the various forms of confirmation email messages a given online merchant typically sends. Regardless of the number of templates for a given merchant each template is specific as to the known particular entities typically included and the order they typically occur within each type of email confirmation message sent by that merchant.

In this embodiment context free grammars CFGs are used to parse fields from an identified email message of interest. Of note however is that rather than using grammars for parsing natural language e.g. English structures the present approach uses defined smaller grammars describing a particular email message format for example Greetings from merchant Details about order Details about item 1 Details about item 2 . . . Details about item N Tax and totals calculation etc. And although those of skill in the art commonly define CFGs in a format known as Backus Naur Form BNF in this embodiment templates have been created so a user does not themselves have to define such grammars. It is to be understood however that these templates are used for data extraction rather than for the more common purpose of templates which is data generation.

The created templates are themselves a grammar. As such these created templates are converted using for example a tool known in the art as Another Tool for Language Recognition ANTLR into mail specific grammars. ANTLR is then used again to convert these grammars into a mail specific extraction parser which aggregation server can then use to parse the email message bodies to extract the entities of interest from them. Examples of such extracted entities include merchant name merchant web address order number order date product description product name product quantity product price product image hyperlink to the product image on merchant website sales tax shipping cost order total billing address shipping company shipping address estimated shipping date estimated delivery date tracking number etc.

Aggregation server can use other extract on parsers to parse the email message bodies to extract the entities of interest from them. In one embodiment regular expression extraction can be used as a brute force pattern matching approach across the entire email message body. With this technique each word in the email message body is matched against a set of rules. If the rules are met the piece of text matching the set of rules is returned. For example shipping companies frequently use a 21 digit tracking number beginning with 1Z or 91 . Aggregation server can scan an entire email message body to find a 21 digit number with 1Z or 91 as the first 2 digits. The matched text can then be extracted and used to determine shipping information as discussed below .

In another embodiment an HTML document object model DOM approach is used to parse email message body ies . For example the message body of an email shipping notification may contain HTML code with tags for order shipping and or tracking information. Aggregation server can use these tags to identify the shipping and or tracking information for extraction.

In step the extracted product order and or shipping information is stored. In one embodiment if the email message of interest is an order confirmation then a new database record is created by aggregation server in database of and the relevant information from the email message header and the extracted entities from the order confirmation email message body are added to the database record. Likewise if the email message of interest is a shipping confirmation for a previously received order confirmation then the relevant information from the email message header and the extracted entities from the shipping confirmation email message body are added to the previously created database record or is added as another record to the database.

In one embodiment an email message identifier of the email message of interest is also stored in the database record no that the email message of interest can later be retrieved from the user s email mailbox should that be desired for any reason. Alternatively some or all of the email message itself can be stored in the database record for later retrieval. In another embodiment the email message identifier and or anything else described herein as being stored in the database record including e.g. the email message of interest can be stored in a file system.

It is to be noted that sometimes a shipping confirmation email message for a given ordered product is identified as an email message of interest before an order confirmation email message for that ordered product is identified as an email message of interest. This can occur for various reasons for example in the case of an order confirmation email message not being received in the user s email mailbox or being deleted by a user or inadvertently treated as spam before the above process has occurred. Likewise sometimes multiple identical or very similar order confirmation email messages or shipping confirmation email messages are sent by an online merchant or a shipping company thus seemingly causing duplicate confirmation email messages. Handling these out of sequence or duplicate email messages in a way that avoids multiple record entries for the same ordered product will now be explained.

Referring now to a flowchart depicting a method of handling out of sequence or duplicate email messages according to one embodiment of the present approach can be seen. In one embodiment this occurs within aggregation server of and is part of step of .

In step it is determined whether the identified email message of interest is an order confirmation message. If the identified email message of interest is an order confirmation message then in step it is determined whether it corresponds to a previously received shipping confirmation message. In one embodiment this determination is made by comparing extracted entity information such as order number item identification and or stock keeping unit SKU item description etc. If it does not correspond to a previously received shipping confirmation message then in step a database record is created and the extracted entities are stored in the database record. Alternatively if it does correspond to a previously received shipping confirmation message then in step the extracted entities from the email message of interest are compared with previously stored extracted entities to eliminate any duplicate data a deduplication process before storing them along with any extracted new entities in the previously created database record in step .

Referring back to step if the identified email message of interest is not an order confirmation message hence it is a shipping confirmation message then in step it is determined whether it corresponds to a previously received order confirmation message. In one embodiment this determination is made using essentially the same process described above with respect to step . If it does not correspond to a previously received order confirmation then in step a database record is created and the extracted entities are stored in the database record. Alternatively if it does correspond to a previously received order confirmation message then in step the extracted entities from the email message of interest are compared with previously stored extracted entities to eliminate any duplicate data again a deduplication process before storing them along with any extracted new entities in the previously created database record in step .

It is to be understood that the process described with reference to works when a single shipping confirmation email is received for a one or more products in a single order confirmation email as well as when multiple shipping confirmation emails are received each shipping confirmation email corresponding to less than all of the one or more products in a single order confirmation email.

Referring again to in step the extracted product order and or shipping information is presented for display to the user. In one embodiment the stored extracted product order and or shipping information is retrieved from database of . This information can then be sent across network to user computing device of for display to the user as will now be explained.

Referring now to an exemplary display of the extracted product order and or shipping information can be seen. In this example an order shipping information aggregation OSIA application window as may be displayed on user computing device of can be seen. Within OSIA application window are various columns including slider bar product order date column product item description column product price column online merchant column and product order shipping status column .

In this example it is to be noted that each row displays a grouping of extracted entity product order and or shipping information for an individual product. For example the first display row shows in item description column that an iPad 2 tablet computing device with Order No. 123456 was ordered on May 25 2011 as shown in order date column with a price of 499.00 as shown in price column from merchant Apple as shown in online merchant column and the status of the order is that the product has Shipped as shown in status column . Also shown are other examples of extracted entity product order and or shipping information for other individual products purchased from other online merchants.

The aggregated product order and shipping information presented in OSIA application window can be augmented with other information for display on user computing device including for example the product shipping status discussed below with reference to the product delivery status discussed below with reference to the time remaining to return the product discussed below with reference to and the product image discussed below with reference to .

Referring now to an exemplary embodiment and operating environment for augmenting aggregated emailed product order and shipping information can be seen. As with the order and shipping process described with respect to a user operating user computing device such as a personal computer handheld computing device or smartphone communicates across network such as the internet to online merchant to shop for and consummate an online transaction to acquire some product. This is typically performed by the user operating an application such as a web browser running on the user computing device . The user can identify the product to be purchased or locate online merchant by querying search engine server across network . When the online transaction is complete online merchant typically sends details of the completed transaction to the user computing device for display to the user typically in a window of the same web browser application running on the user computing device . Online merchant also typically sends an email message to the user of user computing device confirming the transaction. Such an order confirmation email message is typically sent from the online merchant to email server which is accessible to the user computing device via an email application running on the user computing device . It is to be understood that email server may be provided by the user s company or may be provided by a third party email service provider. Subsequently when the order is ready to be shipped to the user either by the online merchant or by the shipping company acting on behalf of the online merchant a shipping confirmation email message is typically sent from either the online merchant or the shipping company to the email server which is again accessible to the user computing device via the email application running on the user computing device.

Also present in the embodiment shown in is an augmentation and aggregation server and a search engine server e.g. GOOGLE YAHOO or BING . Augmentation and aggregation server aggregates the order information and the shipping information contained in the order confirmation email messages and the shipping confirmation email messages as discussed above with respect to aggregation server and in addition augments the aggregated order and shipping information with updated shipping and delivery information product images and or information about the time remaining to return the ordered product. In particular augmentation and aggregation server communicates across network with 1 online merchant and or shipping company to update the shipping and delivery information extracted and stored in database 2 search engine server and or online merchant to retrieve product images 3 online merchant to access its return policy which augmentation and aggregation server then uses to determine the time remaining to return the ordered product and 4 user computing device to display to the user extracted and augmented product order and shipping information typically grouped by individual product thus greatly simplifying user review of orders .

Augmentation and aggregation server stores the augmented shipping delivery and or product information for the given ordered product in database within the database record containing aggregated information for the same ordered product.

The augmented aggregated product information e.g. updated shipping and delivery information product images and time remaining to return the product can be communicated to user computing device before being stored or after being retrieved from storage.

Referring now to a flowchart depicting a method of tracking shipping status e.g. on order backordered to be shipped on x date or shipped of the product order according to one embodiment is presented. One of skill in the art will understand that the steps detailed in typically occur at some point after retrieved email message body ies are parsed as discussed above with respect to step of but in other embodiments can occur before or after extracted information is stored in database as discussed above with respect to step of or can occur after the extracted information is displayed as discussed above with respect to step of .

In step augmentation and aggregation server retrieves information about a given ordered product from the database record for that product which record contains extracted entities from shipping and or confirmation emails and is stored in database to identify the online merchant of the ordered product.

In step augmentation and aggregation server obtains user sign in information e.g. a user identification and a password to access shipping information for the ordered product on the website for the online merchant. The user identification and password can be obtained directly from the user by sending a request from augmentation and aggregation server through network to user computing device .

In step augmentation and aggregation server uses the obtained user sign in information to sign into the user s account for online merchant and perform the equivalent of the user manually accessing a merchant webpage containing the shipping information.

In step augmentation and aggregation server stores the obtained shipping information in the previously created database record for the product in database .

In step the stored shipping information can then be retrieved from database and sent across network to user computing device for display.

In an alternate embodiment the stored shipping information can be sent across network to user computing device for display before being stored i.e. before step .

Referring now to a flowchart depicting a method of tracking delivery status of the product order according to one embodiment is presented. Tracking delivery status is performed on a per package basis i.e. the package can comprise more than one ordered product . One of skill in the art will understand that the steps detailed in typically occur at some point after retrieved email message body ies are parsed as discussed above with respect to step of but in other embodiments can occur before or after extracted information is stored in database as discussed above with respect to step of or can occur after the extracted information is displayed as discussed above with respect to step of .

In step augmentation and aggregation server retrieves for a given ordered product the identity of shipping company and the tracking number for the product from the database record for that product stored in database .

In step augmentation and aggregation server normalizes the identity of the shipping company if necessary. As is known shipping providers can be referenced in shipping confirmation emails by different aliases e.g. United States Postal Service is also referenced as U.S. Postal Service US Postal Service and United States Postal Services may operate similar shipping businesses under different names e.g. UPS and UPS Mail Innovations or offer different mailing options under different names e.g. Federal Express FedEx Priority Overnight and SmartPost . Thus if the identity of the shipping company retrieved in step is an alias for a known shipping company the retrieved identified shipper for the ordered product is normalized to that known shipping company. A list of exemplary shipping company aliases grouped by known shipping company is presented in .

Referring again to in step augmentation and aggregation server places a hypertext transfer protocol HTTP call to the website of the identified normalized if necessary shipper to query delivery status of the product order based on the identified tracking number.

In step augmentation and aggregation server receives and stores delivery status data from the shipper website. The received delivery status data can include the current location of the product shipment e.g. city and or state the estimated delivery date and or time and or the delivery date and time if already delivered . Augmentation and aggregation server stores the received delivery status data in database .

In an alternate embodiment the delivery status data can be sent across network to user computing device for display before being stored i.e. after receiving the delivery status data in step but before storing the delivery status data .

In step the stored delivery status data can then be retrieved from database and sent across network to user computing device for display.

In step augmentation and aggregation server determines from the stored delivery status data whether the product has been delivered. If the product has not been delivered then augmentation and aggregation server loops through steps and periodically e.g. every 3 hours or multiple times per day to check for delivery status updates. Augmentation and aggregation server terminates the periodic looping for delivery status updates once the product has been delivered as indicated by the shipper . Augmentation and aggregation server can also update delivery status by executing steps and when the user accesses the OSIA application.

Referring now to a flowchart depicting one embodiment of a method of determining a last date to return the product according to the online merchant s return policy is presented. One of skill in the art will understand that the steps detailed in typically occur at some point after retrieved email message body ies are parsed as discussed above with respect to step of but in other embodiments can occur before or after extracted information is stored in database as discussed above with respect to step of or can occur after the extracted information is displayed as discussed above with respect to step of .

The return policy is obtained by manually accessing an online merchant s website. The return policy is then stored in database .

In step the retrieved return policy is manually analyzed to determine a date type of return policy and a return policy time limit the number of days allowed by the policy to return the product . Return policies are categorized by the governing date specified by the return policy i.e. whether the return policy is governed by the product order date the product shipping date or the product delivery date . Because online merchant return policies can mandate different return periods for different categories of products e.g. electronics can have a 30 day return period whereas shoes may have a 6 month return period the most conservative return policy time limit is used in one embodiment for products from the online merchant. As an example if online merchant A requires electronics returns within 30 days suits within 60 days and shoes within 6 months the default return policy time limit is stored in database as 30 days. This embodiment avoids overstating the return policy time limit based on an incorrect product classification thus ensuring that the user can return the product within the determined return time period regardless of the actual product category.

In step augmentation and aggregation server calculates the last date that the user can return the product last return date based on the determined category of return policy and the determined return policy time limit.

In step augmentation and aggregation server stores the calculated last return date in the previously created database record for the product in database .

In step augmentation and aggregation server retrieves the stored last return date from database and sends it across network to user computing device for display. The display can then be presented as the last date for product return or can be displayed as a countdown timer such that the amount of time remaining to return the product is shown e.g. 3 days remaining .

In an alternate embodiment the calculated last return date can be sent across network to user computing device for display before being stored i.e. before step .

Referring now to a flowchart detailing a method to retrieve and display a product image according to one embodiment is presented. One of skill in the art will understand that the steps detailed in typically occur at some point after retrieved email message body ies are parsed as discussed above with respect to step of but in other embodiments can occur before or after extracted information is stored in database as discussed above with respect to step of or can occur after the extracted information is displayed as discussed above with respect to step of .

In step augmentation and aggregation server retrieves product identification information about a given ordered product from database . Retrieved information can include for example a product name a product description a product model number a stock keeping unit SKU and a manufacturer of the product. Once the product identification information has been retrieved augmentation and aggregation server can obtain an image of the product in various ways.

In one embodiment in step augmentation and aggregation server uses the retrieved product identification information to query a web search engine through network connection to search engine server for an image of the product. One of skill in the art will understand that an application programming interface API of a given search engine server can be accessed to perform the query. In another embodiment augmentation and aggregation server uses the retrieved product identification information to access the website of online merchant through network connection to query a merchant specific search engine on the website of online merchant for the product image.

In another embodiment in step augmentation and aggregation server obtains the hyperlink to the product image and follows the hyperlink to retrieve the product image. One of skill in the art will understand that the hyperlink can have been stored in the database record for that product in database after being extracted during earlier parsing of the order confirmation or shipping email message bodies or that the order confirmation or shipping email message bodies can be parsed for the hyperlink if and when the product image is desired.

In yet another embodiment in step augmentation and aggregation server crawls the website of online merchant for the product image. One of skill in the art will understand that a web crawler can search the website of online merchant to locate offered products and maintain an index of the merchant s offered products with the location on the merchant s website of the associated product images for the offered products. Alternatively the web crawler can search the website of online merchant to locate images of offered products send the images to augmentation and aggregation server which can in turn store the images locally in a database e.g. database and maintain an index of the databased images of merchant s offered products. The index can be stored in database or another third party local or remote database to facilitate access to the product images at a later time.

In another embodiment in step the product image can be retrieved from the website of an online merchant with SKU specific product pages. In this embodiment aggregation and augmentation server has knowledge of online merchants website structures and can use retrieved product identification information e.g. the SKU for the product of interest to access the product page identified for the product SKU to obtain the product image. As an example if the ordered product is a DVD from Netflix aggregation and augmentation server can access a product unique webpage at NETFLIX defined as Netflix.com productid SKU here SKU is the SKU for the product of interest to obtain the product image.

The methods of steps and can be implemented as separate embodiments or alternatively any two three or four of these methods e.g. steps and or steps and or steps and or steps and or steps and can be implemented in one embodiment.

Once the product image is retrieved then in step the product image is added to the previously created database record for the product in database . In step the stored product image is retrieved from database and sent across network to user computing device for display.

In an alternate embodiment the product image can be sent across network to user computing device for display before being stored i.e. before step .

Referring now to an augmented OSIA application window for display on user computing device is presented which shows the same ordered products shown in OSIA application window with additional columns shown product image shipping status delivery status and last return date containing exemplary product information. The hatched bar in the center of the figure is used to indicate that the columns containing price merchant and status information shown in would be present but have been omitted from this figure for clarity of presentation. As can be seen in OSIA application window and present clear views of basic aggregated product information that can be augmented as described herein to provide additional product information.

In one embodiment OSIA application window is augmented with product images obtained as described above in steps and or with respect to retrieved from database . In an alternate embodiment OSIA application window is augmented with product images not yet stored in database . In this embodiment JavaScript code in the browser application running on user computing device accesses a search engine server e.g. GOOGLE image search via an API to search for and obtain the product image using product identification information. Once obtained the product image can be displayed in OSIA application window and communicated from user computing device across network to aggregation and augmentation server for storage in database . Once stored the stored product image can be retrieved from database for display during subsequent generation of OSIA application window .

It is to be understood that although the examples shown in are displays of the extracted product order and or shipping information in an OSIA application window this same information can instead be displayed within a display window of some other application running on either the aggregation server augmentation and aggregation server or user computing device such as for example an email application.

It is to be understood that although the examples and description herein refer to the merchant as an online merchant the present approach is equally applicable to any merchant online or otherwise who provides such order and or shipping confirmation emails.

It is to be understood that while a number of the examples are described herein as operations running on for example aggregation server or augmentation and aggregation server the described operations can all be implemented in software stored in a computer readable storage medium for access as needed to either run such software on the appropriate processing hardware of a server or user computing device.

It is to be understood that the examples noted here are only for illustrative purposes and there may be further embodiments possible with a different set of components. While several embodiments are described there is no intent to limit the disclosure to the embodiment or embodiments disclosed herein. On the contrary the intent is to cover all alternatives modifications and equivalents obvious to the ones familiar with the art.

In the foregoing specification the invention is described with reference to specific embodiments thereof but those skilled in the art will recognize that the invention is not limited thereto. Various features and aspects of the above described invention may be used individually or jointly. Further the invention can be utilized in any number of environments and applications beyond those described herein without departing from the broader spirit and scope of the specification. The specification and drawings are accordingly to be regarded as illustrative rather than restrictive. It will be recognized that the terms comprising including and having as used herein are specifically intended to be read as open ended terms of art.

