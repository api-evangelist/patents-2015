---

title: Using an alias volume name for a volume to allocate space to a data set
abstract: Provided are a computer program product, system, and method for using an alias volume name for a volume to allocate space to a data set. An assignment of a plurality of volumes to a data set is maintained, wherein the volumes are configured in a storage system. A request is received to extend the data set. An alias volume name is assigned to the data set for a previously assigned volume to the data to extend the data set in response to one of the previously assigned volumes having available space to extend the data set. A base volume name is assigned to the data set for a volume not assigned to the data set in response to one of the previously assigned volumes to the data set not having available space to extend the data set.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09460003&OS=09460003&RS=09460003
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09460003
owner_city: Armonk
owner_country: US
publication_date: 20151005
---
This application is a continuation of U.S. patent application Ser. No. 14 550 674 filed on Nov. 21 2014 which is a continuation of U.S. patent application Ser. No. 12 904 859 filed Oct. 14 2010 and issued as U.S. Pat. No. 8 918 614 on Dec. 23 20114 which patent applications and parent are incorporated herein by reference in their entirety.

The present invention relates to a computer program product system and method for using an alias volume name for a volume to allocate space to a data set.

In certain computing environments multiple host systems may configure data sets in volumes configured in a storage system such as interconnected storage devices e.g. a Direct Access Storage Device DASD Redundant Array of Independent Disks RAID Just a Bunch of Disks JBOD etc. In the prior art when extending a data set by adding an extent of data where an extent comprise a range of tracks extents are drawn from a new volume even if volumes previously assigned to the data set now have more free space for assigning an additional extent to the data set. The reason for this limitation that data cannot re extend back to a prior volume not comprising the last assigned volume is that the order of the data as written to the data set must be preserved. If data was allocated from a volume already assigned to the data set that is not the last volume from which data was allocated to the data set then that data would be combined with data previously written from that prior volume during volume read activities which will cause data to be read in an incorrect order. Thus the different volume names allow for distinction of the order of data in the data set and reusing a previous volume from which data was allocated could cause confusion as to the order for data read from that volume.

There is a need in the art for improved techniques to allocate data from a previously assigned volume to a data set.

Provided are a computer program product system and method for using an alias volume name for a volume to allocate space to a data set. An assignment of a plurality of volumes to a data set is maintained wherein the volumes are configured in a storage system. A request is received to extend the data set. A determination is made as to whether one of the volumes previously assigned to the data set has an allocation amount of available space in the storage system in response to the request to extend the data set. An alias volume name is assigned to the data set for the previously assigned volume determined to have the allocation amount of available space wherein the alias volume name provides an alternative name for the previously assigned volume. The allocation amount of available space is assigned to the data set for the alias volume name.

A data set comprises a collection of data intended to be stored in a same logical allocation of data such as data from a single application user enterprise etc. A data set may be comprised of separate files or records or comprise a single file or record. The data sets may comprise indexed data sets that are indexed according to a primary key that is used to locate records in the data set . Data set indexes provide an index for each indexed data set . For instance the data set may comprise a Key Sequenced Data Set KSDS used in the IBM Virtual Storage Access Method VSAM storage where each record in the KSDS data set has a unique key used to locate the record in the data set .

The host may comprise a computational device known in the art such as a workstation mainframe server etc. The host may communicate Input Output I O requests to a control unit for the storage system such as a storage subsystem or server such as an enterprise storage server storage controller etc. or other device used to manage I O requests to attached volumes. The storage system may comprise one or more storage devices known in the art such as interconnected storage devices e.g. configured as a DASD RAID JBOD virtualized devices etc. as a solid state storage device SSD comprised of solid state electronics such as a EEPROM Electrically Erasable Programmable Read Only Memory flash memory flash disk Random Access Memory RAM drive storage class memory SCM etc. magnetic storage disk optical disk tape etc. The host communicates with the storage system via a connection . The connection may comprise a network such as a Local Area Network LAN Storage Area Network SAN Wide Area Network WAN peer to peer network wireless network etc. Alternatively the connection may comprise a bus interface such as a Peripheral Component Interconnect PCI bus or serial interface. The operating system may comprise suitable operating systems known in the art such as the International Business Machines IBM z OS operating system. IBM and z OS are trademarks of IBM in the United States and foreign countries .

The operating system receives data requests from the applications for data The applications may include middleware access methods and independent software vendor ISV products. The host may also receive I O requests from applications on systems over a network.

Each volume includes a volume table having information on the volume including a mapping of tracks and extents of tracks to data sets . The volume table may be stored in the volume such as in the first few records of the volume as in the case of a volume table of contents VTOC or may be stored as metadata external to the volume .

In an alternative embodiment the alias volume suffix . . . may indicate the full alias volume name and not require combination with all or part of the base volume name . Thus the alias volume name may be determined from the alias volume suffix . . . alone or in combination with all or some portion of the volume name .

The reference numeral n used herein may refer to any number of instances of an element to which it is attached and may refer to the same or different number of instances when used with different elements.

The operating system may maintain a data set catalog providing information on data sets having extents in one or more volumes . illustrates an embodiment of a catalog entry in the catalog including a data set name a primary allocation amount indicating an amount of available space needed when initially assigning space from a volume or alias volume a secondary allocation indicating an amount of available space needed when assigning available space from a volume or alias volume after the initial assignment and before another volume is considered and the volumes . . . in which the data set is assigned extents. The volumes . . . are listed in the order in which extents from the volume are assigned to the data set and indicate base volume names or alias volume names. For each volume . . . the catalog entry provides the extents . . . from the volume that are assigned to the data set . The extents . . . for one volume may be listed in the order in which they are assigned to the data set . The catalog may be organized by a key comprising the data set name to allow searching on the data set name to obtain the entry for a data set name.

When creating a data set the operating system would create an entry in the catalog and indicate the primary and secondary allocation amounts. The operating system would then locate a first volume having the primary allocation amount available and assign a first extent in that volume to the data set and indicate the configured extent in the catalog entry for the created data set. The volume would be used to assign further extents if the volume has the secondary allocation amount of space available for further extents. If the volume does not have the secondary allocation amount of available space then the operating system would locate a next volume e.g. or further having the primary allocation amount of space available for a first extent. This process of assigning extents to the data set from a volume until that volume has no further secondary allocation amounts of available space and then moving on to a next volume is performed until all extents are assigned as part of creating the data set . In certain embodiments the primary and secondary allocation amounts may be different where the primary amount is greater than the secondary amount and in alternative embodiments the primary and secondary amounts may be the same. The volumes . . . may indicate a base volume name or an alias volume name comprising the base volume name and alias volume suffix . . . name.

If at block no previously assigned volume . . . has the allocation amount e.g. primary allocation amount then the operating system determines at block a volume not assigned to the data set having the allocation amount primary allocation amount of available space. Determining such a volume may involve configuring a new volume in the storage system if there is no volume available. The operating system assigns at block the allocation amount e.g. primary allocation amount of available space for extents in the determined volume to the data set.

If at block a previously assigned volume . . . does have the allocation amount of available space for a further extent which may be determined from the free space records for the volume then the operating system determines at block whether the determined volume has an assigned alias volume suffix . If so then the operating system determines at block whether a most recently assigned alias volume suffix is already assigned to the data set being allocated which may be determined from the base alias fields . . . for the data set name in the volume table or from the catalog entry for the data set indicating volumes . . . assigned to the data set which may include alias volume names.

The operating system assigns at block a new alias volume suffix which may comprise a first alias volume name from the no branch of block or an additional alias volume suffix from the yes branch of block if the alias volume suffix has been assigned to the data set. The operating system then assigns at block the allocation amount e.g. primary allocation amount of available space in extents for the created new alias volume suffix to the data set. If at block the most recently assigned alias volume suffix is not already assigned to the data set being extended then control proceeds to block to use the most recently assigned alias volume suffix to assign the allocation amount to the data set.

After assigning space from the current volume from block a volume not previously assigned to the data set from block or a new or existing alias volume suffix from block the operating system proceeds at block to block in to update the data set record for the data set being extended to indicate the allocation of the extents. At block the operating system updates a record for the data set in the determined volume table to indicate the space e.g. extent assigned to the data set . The operating system further indicates at block in the base alias field . . . the base name or alias volume name base volume name and alias volume suffix for which the extent was allocated. If the extent is assigned from a base volume name then the base alias field may be left blank or indicate the base volume name . The operating system then updates at block the catalog entry for the data set to indicate the determined volume base or alias volume name and allocation amount extent e.g. assigned to the data set in the indicated volume. If at block there are further extents to assign to the data set then control proceeds at block back to block in to assign further extents. Otherwise if at block there are no further extents to assign to the data set then control ends.

With the described embodiments the operating system uses an alias volume name not previously assigned to the data set to allocate available space from a volume previously assigned to the data set. This allows unique volume names to be continually assigned to the data set to allow a preservation of the order in which volumes were assigned to the data set and to allow the use of available space in a volume or alias volume name previously assigned to the data set. This allows data from a previously assigned volume to be assigned to a data set being extended so that the order can be determined by an ordering of unique volume names including alias volume names when reusing a previously assigned volume which was not the last assigned volume. This avoids the situation where extents assigned from the same volume are read incorrectly when combined in the memory because in the described embodiments each data set is from a uniquely defined volume name in an ordering of volumes. So the extent for a data set assigned later may be distinguished from the extents assigned prior to the current volume.

The described operations may be implemented as a method apparatus or computer program product using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof. Accordingly aspects of the embodiments may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the embodiments may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

In certain embodiments the server of may be implemented as a cloud component part in a cloud computing environment. In the cloud computing environment the systems architecture of the hardware and software components involved in the delivery of cloud computing may comprise a plurality of cloud components communicating with each other over a network such as the Internet. For example in certain embodiments the server of may provide clients and other servers and software and or hardware components in the networked cloud with data set management services. The host may provide reliable storage services and access to the storage system to meet quality of service requirements for customers in the cloud including clients requiring storage and other servers providing storage services to clients. The host may communicate with clients to provide storage services for the storage systems through a web interface or other application programming interface.

The terms an embodiment embodiment embodiments the embodiment the embodiments one or more embodiments some embodiments and one embodiment mean one or more but not all embodiments of the present invention s unless expressly specified otherwise.

The terms including comprising having and variations thereof mean including but not limited to unless expressly specified otherwise.

The enumerated listing of items does not imply that any or all of the items are mutually exclusive unless expressly specified otherwise.

Devices that are in communication with each other need not be in continuous communication with each other unless expressly specified otherwise. In addition devices that are in communication with each other may communicate directly or indirectly through one or more intermediaries.

A description of an embodiment with several components in communication with each other does not imply that all such components are required. On the contrary a variety of optional components are described to illustrate the wide variety of possible embodiments of the present invention.

Further although process steps method steps algorithms or the like may be described in a sequential order such processes methods and algorithms may be configured to work in alternate orders. In other words any sequence or order of steps that may be described does not necessarily indicate a requirement that the steps be performed in that order. The steps of processes described herein may be performed in any order practical. Further some steps may be performed simultaneously.

When a single device or article is described herein it will be readily apparent that more than one device article whether or not they cooperate may be used in place of a single device article. Similarly where more than one device or article is described herein whether or not they cooperate it will be readily apparent that a single device article may be used in place of the more than one device or article or a different number of devices articles may be used instead of the shown number of devices or programs. The functionality and or the features of a device may be alternatively embodied by one or more other devices which are not explicitly described as having such functionality features. Thus other embodiments of the present invention need not include the device itself.

The illustrated operations of show certain events occurring in a certain order. In alternative embodiments certain operations may be performed in a different order modified or removed. Moreover steps may be added to the above described logic and still conform to the described embodiments. Further operations described herein may occur sequentially or certain operations may be processed in parallel. Yet further operations may be performed by a single processing unit or by distributed processing units.

The foregoing description of various embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description but rather by the claims appended hereto. The above specification examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention the invention resides in the claims hereinafter appended.

