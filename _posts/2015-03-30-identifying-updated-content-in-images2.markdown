---

title: Identifying updated content in images
abstract: Aspects of the present invention disclose a method, computer program product, and system for analyzing an image. The method includes one or more processors identifying a document that includes (i) at least one image and (ii) unstructured text that is situated proximate to the image, wherein both the image and the unstructured text are concurrently displayed in the document. The method further includes identifying one or more potential locations depicted in the image included in the identified document, based on an analysis of the unstructured text that is situated proximate to the image. The method further includes identifying a set of images of a first potential location from the identified one or more potential locations. The method further includes determining whether an image in the set of images of the first potential location substantially matches the image included in the identified document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09607216&OS=09607216&RS=09607216
owner: International Business Machines Corporation
number: 09607216
owner_city: Armonk
owner_country: US
publication_date: 20150330
---
The present invention relates generally to the field of data analysis and more particularly to identifying updated content in images.

Within the World Wide Web WWW and the Internet users can upload different images and incorporate the images into documents. The images may represent the current state of the image at the time of upload. For example an individual can upload an image of a city skyline to a web document e.g. a web site a blog entry a wiki a web application an article etc. and the city skyline includes some buildings that are currently under construction. These uploaded images can include corresponding metadata.

Metadata is data about data and includes two different types of metadata structural metadata and descriptive metadata. Structural metadata includes information about the design and specification of data structures i.e. data about the containers of data . Descriptive metadata includes information about individual instances of application data or the data content. Metadata can be written into a digital image file to indicate various types of information that is associated with the image such as who owns the image copyright and contact information what camera created the image file along with exposure information and descriptive information such as keywords associated with the image. Images that include metadata can be more easily searchable e.g. via the Internet . Metadata also helps organize electronic resources provides digital identification and helps support archiving and preservation of a resource. Metadata also assists in resource discovery by allowing resources to be found e.g. via Internet searching by relevant criteria identifying resources associating similar resources and giving location information.

Aspects of the present invention disclose a method computer program product and system for analyzing an image. The method includes one or more processors identifying a document that includes i at least one image and ii unstructured text that is situated proximate to the image wherein both the image and the unstructured text are concurrently displayed in the document. The method further includes one or more processors identifying one or more potential locations depicted in the image included in the identified document based on an analysis of the unstructured text that is situated proximate to the image. The method further includes one or more processors identifying a set of images of a first potential location from the identified one or more potential locations. The method further includes one or more processors determining whether an image in the set of images of the first potential location substantially matches the image included in the identified document.

Embodiments of the present invention allow for a user to view an updated version of the content of an image. A document that includes an image is identified and the text of the document is analyzed to identify potential locations depicted in the image. The image in the document is compared to images of the identified potential locations. When a match is found a thumbnail of a matching location is displayed to the user.

Some embodiments of the present invention recognize that users upload images that can represent the current state of an object at the time of upload. Over a period of time the uploaded images can become out of date in terms of representing the current state of objects in the images. For example a user can search for pictures of a city skyline and the search results that are returned can vary across a wide range of time e.g. building in the skyline in various stages of construction etc. . When the user is viewing the search results the user may not be able to know which images are current and which images are out of date.

Implementation of embodiments of the invention may take a variety of forms and exemplary implementation details are discussed subsequently with reference to the Figures.

The present invention will now be described in detail with reference to the Figures. is a functional block diagram illustrating a distributed data processing environment generally designated in accordance with one embodiment of the present invention. provides only an illustration of one implementation and does not imply any limitations with regard to the environments in which different embodiments may be implemented. Many modifications to the depicted environment may be made by those skilled in the art without departing from the scope of the invention as recited by the claims.

An embodiment of data processing environment includes client device and server interconnected over network . In an example embodiment client device accesses data that is hosted on server . In one embodiment client device and server communicate through network . Network can be for example a local area network LAN a telecommunications network a wide area network WAN such as the Internet or any combination of the three and include wired wireless or fiber optic connections. In general network can be any combination of connections and protocols that will support communications between client device and server in accordance with embodiments of the present invention.

In various embodiments of the present invention client device may be a workstation personal computer personal digital assistant mobile phone or any other device capable of executing computer readable program instructions in accordance with embodiments of the present invention. In general client device is representative of any electronic device or combination of electronic devices capable of executing computer readable program instructions. Client device may include components as depicted and described in further detail with respect to in accordance with embodiments of the present invention.

Client device includes user interface and image analysis program . User interface is a program that provides an interface between a user of client device and a plurality of applications that reside on the client device. A user interface such as user interface refers to the information such as graphic text and sound that a program presents to a user and the control sequences the user employs to control the program. A variety of types of user interfaces exist. In one embodiment user interface is a graphical user interface. A graphical user interface GUI is a type of user interface that allows users to interact with electronic devices such as a computer keyboard and mouse through graphical icons and visual indicators such as secondary notation as opposed to text based interfaces typed command labels or text navigation. In computing GUIs were introduced in reaction to the perceived steep learning curve of command line interfaces which require commands to be typed on the keyboard. The actions in GUIs are often performed through direct manipulation of the graphical elements. In another embodiment user interface is a script or application programming interface API . Image analysis program analyzes an image to identify updated versions of content in the image that are included in other images in accordance with embodiments of the present invention. For example image analysis program can identify other images that are accessible via network such as images located on other servers not shown .

In example embodiments server can be a desktop computer a computer server or any other computer systems known in the art. In certain embodiments server represents computer systems utilizing clustered computers and components e.g. database server computers application server computers etc. that act as a single pool of seamless resources when accessed by elements of data processing environment e.g. client device . In general server is representative of any electronic device or combination of electronic devices capable of executing computer readable program instructions. Server may include components as depicted and described in further detail with respect to in accordance with embodiments of the present invention.

Server includes storage device which includes document . Storage device can be implemented with any type of storage device for example persistent storage which is capable of storing data that may be accessed and utilized by server and client device such as a database server a hard disk drive or a flash memory. In other embodiments storage device can represent multiple storage devices within server . Storage device stores a plurality of documents such as document . Document is a web document that includes at least one imbedded image. For example document can be a web site a blog entry a wiki a web application an article etc. In additional embodiments document can include or be associated with metadata. In one embodiment document includes metadata but is missing metadata that indicated a data and location of at least one image in document . In additional embodiments data processing environment can include additional servers not shown that host additional documents and images that are accessible to client device via network .

In step image analysis program identifies a document that includes an image. In one embodiment image analysis program identifies document which is stored on storage device of server . In another embodiment image analysis program identifies a document that is stored on client device . In an additional embodiment image analysis program can receive a document via network e.g. document from server . The identified document for example document can be a web document e.g. a web site a blog entry a wiki a web application an article etc. that includes text and at least one image. Images that are included in the identified document can be tagged with corresponding instances of metadata which provide information relating to the images. In one aspect the identified document includes an image that is not tagged with metadata or not tagged with a complete set of metadata. For example an image in document is not tagged with metadata that indicates the location depicted in the image or the data that the image was taken.

In step image analysis program analyzes text in the document. In one embodiment image analysis program analyzes the text in the identified document identified in step that is proximate to the image in the identified document e.g. a document heading an image caption or other text included in a document . In an example embodiment image analysis program collects the text in document as metadata and analyzes the text utilizing Natural Language Processing NLP . For example image analysis program utilizes NLP deep parsing e.g. deep linguistic processing to identify information associated with the context and location of the image in the identified document.

In an example image analysis program utilizes NLP deep parsing to analyze text of sample document . Text is the text portion of sample document that is proximate to image i.e. the image in the document . Image analysis program utilizes NLP deep parsing to analyze text and identify information associated with a likely location depicted in image . Image analysis program identifies names of potential locations in text that include The City 22 Main Street South City Mall New Town City Center and Shopping Gallery. 

In an example scenario image analysis program analyzes text displayed in the document that is associated with an image included in a document e.g. text in sample document to identify text in the document that is indicative of names of locations and distances of said text in the document that is indicative of names of locations from the image. Text is an unstructured text description i.e. not metadata text that is concurrently displayed with image in sample document and situated proximate to image . For example sample document is an article that includes e.g. concurrently displays to a user image and a text description in text that is associated with image and displayed to a user concurrently with image . The text description in text is unstructured text that is associated with image and displayed to a user concurrently with image therefore text is not metadata that is stored in association with image . Additionally the text description such as text is situated in sample document in a location that is proximate to image . Image analysis program identifies and analyzes the unstructured test description i.e. text that is associated with image in step .

In step image analysis program identifies one or more potential locations. In one embodiment image analysis program identifies one more potential locations that may be depicted in the identified document identified in step based on information identified in the analysis of the document step . In the previously discussed example image analysis program identifies names of potential locations that include The City 22 Main Street South City Mall New Town City Center and Shopping Gallery. In an additional embodiment image analysis program utilizes context information from the analysis of the text in the document. For example image analysis program utilizes location context to identify a location associated with 22 Main Street e.g. 22 Main Street in proximity to The City discussed in text or other locations that are identified in text etc. .

In step image analysis program determines a confidence level corresponding to each identified potential location. In one embodiment image analysis program determines and assigns a confidence level e.g. a percentage or other form of confidence value for each of the one or more identified potential locations from step indicating a likelihood that the identified potential location is represented in the image in the identified document. Image analysis program utilizes information gathered in the NLP deep parsing analysis of step to determine confidence levels. In various embodiments image analysis program utilizes factors that include text proximity e.g. location of text in relation to the image in the document text description e.g. location of text in relation to the context of the description in the document and text frequency e.g. number of instances that certain text such as location names and references occur in the document .

In one example for text proximity image analysis program associates a high confidence level with the potential location in the text that appears closest to the image. For example Shopping Gallery in text appears closest to image . In another example for text description image analysis program associates a high confidence level with the potential location mentioned in a conclusion portion of the document. For example sample document discusses a series of shopping malls with Shopping Gallery being included in the conclusion portion of text . In an additional example for text frequency image analysis program associates a high confidence level with the potential location in the text that is mentioned most frequently. For example sample document mentions each potential location once in text therefore image analysis program can consider text frequency to be substantially similar for each potential location.

In another example embodiment image analysis program determines confidence levels by ranking the one or more identified potential locations. For example image analysis program can determine a ranking based on the text proximity of potential image locations. In this example image analysis program determines the ranking from highest confidence level to lowest to be Shopping Gallery New Town City Center South City Mall 22 Main Street and The City. In additional embodiments image analysis program can utilize the text proximity to determine an initial ranking then image analysis program can utilize other factors e.g. the text description to modify or update the initial ranking.

Further the NLP parsing does not need the actual location name of the image to be included in the text. For example a web page is titled Things to do in Paris and contains a discussion of the Mona Lisa and a reference to one of the largest museums in the world. Image analysis program can utilize NLP parsing and searching to determine that the information in the web page is indicating The Lourve in Paris and therefore image analysis program associates a high confidence level with The Lourve.

In another embodiment image analysis program compares names of potential locations utilizing NLP as a component of determining a confidence level. For example a selection of text associated with a picture of a mall includes potential location names of Shopping Mall Shop Corp Mall and The City. Image analysis program can make an association between Shopping Mall and Shop Corp Mall based on both names including Mall and image analysis program cannot make that association to The City since the location does not include the word mall . Image analysis program then determines confidence levels for Shopping Mall and Shop Corp Mall that are higher than the confidence level for The City. In an additional embodiment image analysis program utilizes NLP with a domain dictionary e.g. on client device which indicates that Shop Corp is a corporation. Image analysis program can use the information of Shop Corp being a corporation to determine a more accurate confidence rating for Shop Corp Mall e.g. referencing Shop Corp with images documents and associated metadata etc. .

In step image analysis program extracts objects from the foreground of the image. In one embodiment image analysis program utilizes object recognition software to identify objects in the foreground of the image in the document that are not a characteristic of a location such as people and vehicles. Image analysis program removes the identified objects from the foreground of the image which results in an image of the location that image analysis program can utilize for comparisons. In other embodiments image analysis program can identify objects that are in the background of an image as well as the foreground of an image that are not a characteristic of a location.

In an example embodiment image analysis program extracts objects from the foreground of image of sample document . Image analysis program identifies people and cars in image utilizing object recognition software e.g. software on client device not shown as objects in the foreground of image e.g. not a characteristic of the location such as building . Image analysis program removes the identified objects that include people and cars from image which results in an image with a reduced amount of extra objects.

In step image analysis program identifies images of a potential location. In one embodiment image analysis program identifies images that correspond to one of the identified one or more potential locations. In an example embodiment on the first iteration image analysis program identifies at least one image that corresponds to the identified potential location with the highest associated confidence level determined in step . Then on subsequent iterations image analysis program identifies at least one image that corresponds to the identified potential location with the next highest confidence level. Image analysis program searches for images that are accessible via network . For example image analysis program searches for images that are hosted on one or more image repositories not shown . Image analysis program identifies images that are tagged with metadata that indicates the potential location that image analysis program is searching for.

In the previously discussed example regarding sample document image analysis program initially identifies images of the potential location with the highest determined confidence level which is the Shopping Gallery with a 34 confidence level as depicted in table . In this example image analysis program accesses a plurality of image repositories not shown utilizing network to search for images that are tagged with metadata that indicates the Shopping Gallery location. Image analysis program identifies at least one image of the Shopping Gallery based on tagged metadata of the images . In example embodiments the number of images that image analysis program identifies can be based on user input or preferences e.g. identifies a maximum of 10 images identifies all images in a certain repository identifies images based on another metadata characteristic etc. . In another embodiment image analysis program identifies a set of images which if image analysis program cannot find an image with appropriate tagged metadata is a set that includes zero images i.e. an empty set .

In step image analysis program compares the identified images to the image in the identified document. In one embodiment image analysis program compares the identified images from step to the image included in the identified document from step . In another embodiment image analysis program extracts objects from the foreground and background of the identified images utilizing the process discussed in step e.g. utilizing object recognition software . Image analysis program compares the identified images of the potential location with objects extracted from the images to the image included in the identified document that also has objects extracted from the image in step . In additional embodiments image analysis program utilizes metadata associated with images in the comparison since modifications can occur to locations over time such as building construction etc.

In various embodiments image analysis program utilizes image comparison software to compare each of the identified images of the potential location to the image included in the document and determines a similarity between the given images. For example image analysis program utilizes reverse image searching techniques to compare images and identify similarities between images e.g. a similarity rating percentage of similar features etc. . In an example image analysis program compares each of the identified images of the Shopping Center to building in image e.g. not including people and cars .

In decision step image analysis program determines whether a match is found. In one embodiment image analysis program determines whether one of the identified images of the potential location matches the location depicted in the image included in the identified image. In various embodiments locations depicted in images are matching if image analysis program utilizes image comparison software e.g. reverse image searching techniques to determine that the locations depicted in the images are substantially matching such as within a threshold of similarity certain matching features etc.

If image analysis program determines that none of the identified images of the potential location match the location depicted in the image included in the identified document decision step no branch then image analysis program returns to step to identify images of the potential location with the next highest confidence level. For example if image analysis program determines that none of the identified images of the Shopping Gallery are a match for building in image then image analysis program returns to step to identify images of New Town City Center i.e. the second highest confidence level depicted in . In another embodiment image analysis program performs a comparison in step of each identified image of the potential location up to a threshold number of images e.g. the first ten images returned in the search etc. .

In step image analysis program identifies a set of tagged images for the matching location. More specifically responsive to determining that at least one of the identified images of the potential location does match the location depicted in the identified document decision step yes branch image analysis program identifies a set of tagged images for the matching location. In various embodiments image analysis program searches for and finds images that are tagged with metadata that indicates the location depicted in the determined matching image e.g. utilizing techniques previously discussed in step . Image analysis program identifies a set of images that includes metadata indications of the location depicted in the images as well as additional metadata that can provide additional information that pertains to the image included in the identified document e.g. the data the image was taken the direction from which the image was captured etc. .

In an example embodiment image analysis program identifies a set of tagged images for a matching location that includes image depicted in . Image includes building people and car . Building in image is a completed version of building in image which depicted building while under construction. People and car are objects that are in the foreground of image which image analysis program can extract using object recognition software for the purpose of comparing the images. In this example image analysis program determined in step that an image that was tagged with metadata that indicated a location of the Shopping Gallery matched image of sample document e.g. both images depicting the Shopping Gallery while under construction . Then image analysis program identifies in step a set of images that are tagged with metadata and are images of the Shopping Gallery e.g. at various dates and in various forms of construction .

In step image analysis program determines an updated image. In one embodiment image analysis program determines an updated image from the identified set of tagged images from step . Image analysis program can determine an updated image based on different user references and defined characteristics. For example image analysis program can determine the updated image to be the image in the identified set of images that is tagged with metadata that indicates the most recent date. In another example image analysis program can determined the updated image to be the image in the identified set of images that is tagged with metadata that the image is the most recent image that was captured from a similar angle to the image included in the identified document. In additional examples image analysis program can utilize other ranking characteristics to determine the updated image such as quality of an image e.g. image resolution social media sentiment for an image e.g. ratings and other data provide by social media users rankings associated with an image etc.

In another embodiment image analysis program can utilize images in the set of identified tagged images from step to determine information that is associated with the image included in the identified document e.g. the source image and document from step . For example image analysis program can utilize metadata to determine information associated with the image included in the identified document including the date the image was taken and the direction in which an image was captured. To determine the date an image was captured image analysis program can utilize metadata associated with the identified set of tagged images a level of construction in an image visible signage in the images e.g. a sign indicating the year and other identification characteristics. To determine the direction in which an image was captured image analysis program can utilize metadata associated with the identified set of tagged images e.g. metadata indicating that the image is facing north visible signage in the images and other identification characteristics.

In an example embodiment image analysis program determines that image of meets pre defined user preferences and is the updated image of the image included in the identified document i.e. image in sample document . For example image is tagged with metadata that indicated that image was taken at the most recent date compared to the other images in the identified set of tagged images which meets a user preference of the most recent image.

In step image analysis program displays the updated image. In one embodiment image analysis program displays the determined updated image from step to the user of client device via user interface . In an example image analysis program displays the updated image as a thumbnail with the image included in the identified document e.g. overlaying a top corner portion of the source image . An individual utilizing client device can select the image thumbnail e.g. via user interface which results in image analysis program displaying a full version of the update image to the individual e.g. displaying image . In an additional embodiment image analysis program can also display additional information that pertains to the source image i.e. the image include in the identified document such as the date the image was taken and the direction in which an image was captured etc. In one aspect image analysis program displays a thumbnail image that is an up to date image of the source image.

In an example embodiment image analysis program can initiate in response to a user of client device accessing and viewing an image e.g. in a document . Image analysis program can provide the user with a more up to date version of the image that the user is viewing. For example image analysis program can operate in the background of client device e.g. as an application or plug in associated with a web browser etc. without a request to initiate and operate from the user of client device . In one scenario a user is viewing images of an apartment building. Image analysis program operates in the background of client device to determine an updated image that depicts the apartment building in the present time e.g. including updated features that are not depicted in a past image etc. .

Memory and persistent storage are computer readable storage media. In this embodiment memory includes random access memory RAM . In general memory can include any suitable volatile or non volatile computer readable storage media. Cache is a fast memory that enhances the performance of processors by holding recently accessed data and data near recently accessed data from memory .

Program instructions and data e.g. software and data used to practice embodiments of the present invention may be stored in persistent storage and in memory for execution by one or more of the respective processors via cache . In an embodiment persistent storage includes a magnetic hard disk drive. Alternatively or in addition to a magnetic hard disk drive persistent storage can include a solid state hard drive a semiconductor storage device read only memory ROM erasable programmable read only memory EPROM flash memory or any other computer readable storage media that is capable of storing program instructions or digital information.

The media used by persistent storage may also be removable. For example a removable hard drive may be used for persistent storage . Other examples include optical and magnetic disks thumb drives and smart cards that are inserted into a drive for transfer onto another computer readable storage medium that is also part of persistent storage . Software and data can be stored in persistent storage for access and or execution by one or more of the respective processors via cache . With respect to client device software and data includes image analysis program . With respect to server software and data includes document .

Communications unit in these examples provides for communications with other data processing systems or devices. In these examples communications unit includes one or more network interface cards. Communications unit may provide communications through the use of either or both physical and wireless communications links. Program instructions and data e.g. software and data used to practice embodiments of the present invention may be downloaded to persistent storage through communications unit .

I O interface s allows for input and output of data with other devices that may be connected to each computer system. For example I O interface may provide a connection to external devices such as a keyboard keypad a touch screen and or some other suitable input device. External devices can also include portable computer readable storage media such as for example thumb drives portable optical or magnetic disks and memory cards. Program instructions and data e.g. software and data used to practice embodiments of the present invention can be stored on such portable computer readable storage media and can be loaded onto persistent storage via I O interface s . I O interface s also connect to display .

The programs described herein are identified based upon the application for which they are implemented in a specific embodiment of the invention. However it should be appreciated that any particular program nomenclature herein is used merely for convenience and thus the invention should not be limited to use solely in any specific application identified and or implied by such nomenclature.

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the Figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

The descriptions of the various embodiments of the present invention have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The terminology used herein was chosen to best explain the principles of the embodiment the practical application or technical improvement over technologies found in the marketplace or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.

