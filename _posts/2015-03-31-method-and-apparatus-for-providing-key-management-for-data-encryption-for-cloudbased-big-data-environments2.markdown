---

title: Method and apparatus for providing key management for data encryption for cloud-based big data environments
abstract: An approach is provided for key management for data encryption. A key management platform receives a request from at least one client for one or more private keys for decrypting one or more datasets. The one or more private keys are encrypted in at least one key repository associated with at least one server. The key management platform also causes, at least in part, an authentication of the request using one or more secure credentials of the at least one client, the at least one server, or a combination thereof. The key management platform further causes, at least in part, an authorization of the at least one client to determine whether the at least one client is authorized to access the one or more private keys based on the authentication. The key management platform further causes, at least in part, a decryption of the one or more private keys using at least one master key based on the authorization.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09660969&OS=09660969&RS=09660969
owner: HERE Global B.V.
number: 09660969
owner_city: Veldhoven
owner_country: NL
publication_date: 20150331
---
Service providers are continually challenged to deliver value and convenience to consumers by for example providing compelling network services. To support such services service providers often manage and process large data assets for access by different business units or entities. Moreover because such data assets often contain sensitive or private data these data assets have traditionally been encrypted to for data security. However implementing encryption across large datasets that are accessed by multiple business units and or entities can potentially be burdensome with respect to providing secure access to encryption keys to authorized users. Accordingly service providers face significant technical challenges to enabling secure management of encryption keys while facilitating efficient interaction among the business units entities of an organizations and their data assets.

Therefore there is a need for an approach for providing key management for encryption of data assets.

According to one embodiment a method comprises receiving a request from at least one client for one or more private keys for decrypting one or more datasets wherein the one or more private keys are encrypted in at least one key repository associated with at least one server. The method also comprises causing at least in part an authentication of the request using one or more secure credentials of the at least one client the at least one server or a combination thereof. The method further comprises causing at least in part an authorization of the at least one client to determine whether the at least one client is authorized to access the one or more private keys based on the authentication. The method further comprises causing at least in part a decryption of the one or more private keys using at least one master key based on the authorization.

According to another embodiment an apparatus comprises at least one processor and at least one memory including computer program code for one or more computer programs the at least one memory and the computer program code configured to with the at least one processor cause at least in part the apparatus to receive a request from at least one client for one or more private keys for decrypting one or more datasets wherein the one or more private keys are encrypted in at least one key repository associated with at least one server. The apparatus also causes at least in part an authentication of the request using one or more secure credentials of the at least one client the at least one server or a combination thereof. The apparatus further causes cause at least in part an authorization of the at least one client to determine whether the at least one client is authorized to access the one or more private keys based on the authentication. The apparatus further causes at least in part a decryption of the one or more private keys using at least one master key based on the authorization.

According to another embodiment a computer readable storage medium carries one or more sequences of one or more instructions which when executed by one or more processors cause at least in part an apparatus to receive a request from at least one client for one or more private keys for decrypting one or more datasets wherein the one or more private keys are encrypted in at least one key repository associated with at least one server. The apparatus also causes at least in part an authentication of the request using one or more secure credentials of the at least one client the at least one server or a combination thereof. The apparatus further causes cause at least in part an authorization of the at least one client to determine whether the at least one client is authorized to access the one or more private keys based on the authentication. The apparatus further causes at least in part a decryption of the one or more private keys using at least one master key based on the authorization.

According to another embodiment an apparatus comprises means for receiving a request from at least one client for one or more private keys for decrypting one or more datasets wherein the one or more private keys are encrypted in at least one key repository associated with at least one server. The apparatus also comprises means for causing at least in part an authentication of the request using one or more secure credentials of the at least one client the at least one server or a combination thereof. The apparatus also comprises means for causing at least in part an authorization of the at least one client to determine whether the at least one client is authorized to access the one or more private keys based on the authentication. The apparatus further comprises means for causing at least in part a decryption of the one or more private keys using at least one master key based on the authorization.

In addition for various example embodiments of the invention the following is applicable a method comprising facilitating a processing of and or processing 1 data and or 2 information and or 3 at least one signal the 1 data and or 2 information and or 3 at least one signal based at least in part on or derived at least in part from any one or any combination of methods or processes disclosed in this application as relevant to any embodiment of the invention.

For various example embodiments of the invention the following is also applicable a method comprising facilitating access to at least one interface configured to allow access to at least one service the at least one service configured to perform any one or any combination of network or service provider methods or processes disclosed in this application.

For various example embodiments of the invention the following is also applicable a method comprising facilitating creating and or facilitating modifying 1 at least one device user interface element and or 2 at least one device user interface functionality the 1 at least one device user interface element and or 2 at least one device user interface functionality based at least in part on data and or information resulting from one or any combination of methods or processes disclosed in this application as relevant to any embodiment of the invention and or at least one signal resulting from one or any combination of methods or processes disclosed in this application as relevant to any embodiment of the invention.

For various example embodiments of the invention the following is also applicable a method comprising creating and or modifying 1 at least one device user interface element and or 2 at least one device user interface functionality the 1 at least one device user interface element and or 2 at least one device user interface functionality based at least in part on data and or information resulting from one or any combination of methods or processes disclosed in this application as relevant to any embodiment of the invention and or at least one signal resulting from one or any combination of methods or processes disclosed in this application as relevant to any embodiment of the invention.

In various example embodiments the methods or processes can be accomplished on the service provider side or on the user device side or in any shared way between service provider and user device with actions being performed on both sides.

For various example embodiments the following is applicable An apparatus comprising means for performing the method of any of the claims.

Still other aspects features and advantages of the invention are readily apparent from the following detailed description simply by illustrating a number of particular embodiments and implementations including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments and its several details can be modified in various obvious respects all without departing from the spirit and scope of the invention. Accordingly the drawings and description are to be regarded as illustrative in nature and not as restrictive.

Examples of a method apparatus and computer program for providing key management for data encryption according to one embodiment are disclosed. In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent however to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention.

However because many of these datasets include private or otherwise sensitive data e.g. customer privacy data service providers often employ security measures e.g. data encryption to protect the datasets. At the same time organizations with multiple business units that have traditionally maintained separate datasets need a way to interact with each other to produce improved data driven business analysis solutions. Moreover such organizations often have security requirements to have an end to end self controlled key management system to manage all of the keys e.g. public private keys for asymmetric data encryption used to secure the datasets migrated to cloud storage services.

To address this problem a system of introduces a capability to provide multiple levels of security to homogenize the management of datasets stored in the cloud via a multi layer secured key management platform . In one embodiment the system also provides a transparent data tool or interface for individual business units of an organization to ingest and process encrypted data transparently without knowing the details of the encryption and or decryption by encapsulating the encryption logic within the key management platform operating for instance in combination with a cloud service .

In one embodiment one or more individual clients also collectively referred to as clients and e.g. corresponding to individual business units BU have access to the key management platform and the cloud service over a communication network . In one embodiment the clients respectively execute one or more key management clients to interact with or perform all or a portion of the functions of the key management platform . Descriptions of various embodiments of the functions of the key management platform and or key management client are discussed in more detail below.

In one embodiment the key management platform securely manages all of the datasets collected from various end user facing applications also collectively referred to as end user facing applications . For example individual BU clients may manage the datasets to support end user facing applications e.g. streaming media services mapping services social networking services media sharing services etc. accessible by one or more user equipment UEs also collectively referred to as UEs . In one embodiment the UEs may execute one or more applications also collectively referred to as applications to access the end user facing applications and or the datasets . By way of example the applications can be either native applications associated with the end user facing applications e.g. client applications or general applications e.g. a browser application that can access the end user facing applications when implemented as a network side application e.g. a web application or web page.

As previously discussed in one embodiment the datasets associated with end user facing applications may be privacy involved or otherwise sensitive. Accordingly the system encrypts the datasets with keys controlled by the key management platform using various embodiments of the multi layered security mechanisms described herein to protect the datasets against being comprised to un intended or un authorized parties e.g. external and or internal parties . In one embodiment the key management platform stores the keys in a key repository or other equivalent data storage.

In one embodiment to provide secured key management the key management platform combines multiple mitigating security controls over the keys that are used to encrypt and decrypt the datasets controlled by the system . For example with this multi layered secured approach even if one or some of the layers are compromised the data secured according to various embodiments of the system will not be able to be decrypted because there are other layers of protection.

In one embodiment the key management platform and the system uses secured communications protocols e.g. a Secure Sockets Layer SSL protocol as one layer of protection. For example the key management platform can employ a two way SSL authentication where a client uses an SSL certificate for authentication authenticated e.g. by the key management platform the cloud service and or another component of the system . In one embodiment the secured credentials e.g. the SSL certificates are stored in the secure credentials database of the cloud service .

As another layer of security in one embodiment access to the secure credentials database and or the SSL certificates are restricted to clients e.g. business unit users that have been appropriately provisioned. As yet another layer of security in one embodiment the key management platform performs an authorization check upon receiving a key retrieval request e.g. from a client to ensure that the requesting party is authorized to request or obtain the subject key. Accordingly even if an SSL certificate or other secure credentials is compromised the key management platform e.g. via the authorization process can prevent an external party from retrieving the key for any particular dataset to which the party is not entitled.

In one embodiment the key management platform applies encryption to keys stored in the key repository as yet another layer of security beyond authentication e.g. via SSL and authorization e.g. determining whether a requesting client is provisioned or authorized to access a dataset . Accordingly even if a requesting party is authenticated and then authorized to a certain dataset the requesting party would still need to have e.g. a master key to decrypt the key retrieved from the key repository . By way of example in one embodiment the key retrieved from the key repository e.g. a private key of an asymmetric encryption scheme can be encrypted with credentials in a client library e.g. a JAVA client library that is distributed to trusted parties e.g. trusted clients or other trusted components to be able to decrypt the keys retrieved from the key repository . Additional layers of security are described in the various embodiments discussed below.

In other words various embodiments of the key management platform stores secure credentials e.g. SSL certificates in a controlled common repository e.g. the key repository . In this context a control common repository permits only privileged users to have access to the SSL certificates or other credentials in the key repository . This helps to ensure that only privileged users e.g. provisioned authenticated and or authorized users can have access to the decryption keys associated with each dataset or dataset domain.

In one embodiment the key management platform provides end to end security that includes authentication authorization and also delivery of secured decryption information for encrypted data. In yet another embodiment the key management platform is a self containing key management service that provides internal authentication and authorization mechanisms with proprietary keys. For example the self contained platform can be managed by individual organizations to service their respective units without exposing or outsourcing the key management services or functions to external cloud based key management systems. For example the key management platform enables e.g. as another security layer organizations to set access control policies for any element of the system e.g. access to secure credentials access to keys access to datasets access to a master access to keys for ingesting encrypting data etc. either individually or in combination.

In one embodiment the decryption function of the key management platform is at rest. In other words the key management platform securely transmits keys e.g. private keys over e.g. Rest Application Programming Interface API protocols. In this way the private key can be only retrieved by authenticated and or authorized parties using privileged computing environments. As previously noted this provides another level of security to protect data against unauthorized access even when a private key is compromised.

In one embodiment the cloud service includes one or more storage platforms e.g. distributed storage platforms capable of handling vast collections of large databases that store for instance information data etc. generated by any number of services e.g. both integrated and individual services of the clients e.g. computing nodes clusters servers etc. . Many of these databases can reach multiple terabytes petabytes or more in size. In some cases storage platforms can additionally split larger databases into smaller databases e.g. partitions or database shards maintained at multiple nodes to allow for the scalability and or redundancy. By way of example the storage platforms can include relational databases key value stores and or other database structure.

In one embodiment the UEs may be any type of mobile terminal fixed terminal or portable terminal including a mobile handset station unit device multimedia computer multimedia tablet Internet node communicator desktop computer laptop computer notebook computer netbook computer tablet computer personal communication system PCS device personal navigation device personal digital assistants PDAs audio video player digital camera camcorder positioning device television receiver radio broadcast receiver electronic book device game device or any combination thereof including the accessories and peripherals of these devices or any combination thereof. It is also contemplated that the UE can support any type of interface to the user such as wearable circuitry etc. .

The communication system of system may include one or more networks such as a data network a wireless network a telephony network or any combination thereof. It is contemplated that the data network may be any local area network LAN metropolitan area network MAN wide area network WAN a public data network e.g. the Internet short range wireless network or any other suitable packet switched network such as a commercially owned proprietary packet switched network e.g. a proprietary cable or fiber optic network and the like or any combination thereof. In addition the wireless network may be for example a cellular network and may employ various technologies including enhanced data rates for global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. worldwide interoperability for microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi wireless LAN WLAN Bluetooth Internet Protocol IP data casting satellite mobile ad hoc network MANET and the like or any combination thereof. Further fast connections e.g. gigabit Ethernet fiber channel etc. can be utilized among any of the components of the system .

By way of example the components of the system communicate with each other and using well known new or still developing protocols e.g. including SSL protocols . In this context a protocol includes a set of rules defining how the network nodes within the communication network interact with each other based on information sent over the communication links. The protocols are effective at different layers of operation within each node from generating and receiving physical signals of various types to selecting a link for transferring those signals to the format of information indicated by those signals to identifying which software application executing on a computer system sends or receives the information. The conceptually different layers of protocols for exchanging information over a network are described in the Open Systems Interconnection OSI Reference Model.

Communications between the network nodes are typically effected by exchanging discrete packets of data. Each packet typically comprises 1 header information associated with a particular protocol and 2 payload information that follows the header information and contains information that may be processed independently of that particular protocol. In some protocols the packet includes 3 trailer information following the payload and indicating the end of the payload information. The header includes information such as the source of the packet its destination the length of the payload and other properties used by the protocol. Often the data in the payload for the particular protocol includes a header and payload for a different protocol associated with a different higher layer of the OSI Reference Model. The header for a particular protocol typically indicates a type for the next protocol contained in its payload. The higher layer protocol is said to be encapsulated in the lower layer protocol. The headers included in a packet traversing multiple heterogeneous networks such as the Internet typically include a physical layer 1 header a data link layer 2 header an internetwork layer 3 header and a transport layer 4 header and various application layer 5 layer 6 and layer 7 headers as defined by the OSI Reference Model.

In one embodiment the components of the system may interact according to a client server model. According to the client server model a client process sends a message including a request to a server process and the server process responds by providing a service. The server process may also return a message with a response to the client process. Often the client process and server process execute on different computer devices called hosts and communicate via a network using one or more protocols for network communications. The term server is conventionally used to refer to the process that provides the service or the host computer on which the process operates. Similarly the term client is conventionally used to refer to the process that makes the request or the host computer on which the process operates. As used herein the terms client and server refer to the processes rather than the host computers unless otherwise clear from the context. In addition the process performed by a server can be broken up to run as multiple processes on multiple hosts sometimes called tiers for reasons that include reliability scalability and redundancy among others.

Various embodiments of the components of the key management platform are described with respect to a flowchart of an overview of a process for providing multi layered key management for encrypted datasets according to one embodiment. The example illustrated in the process includes using key management for ingesting encrypting the datasets and then reading the ingested datasets using various embodiments of the multi layered secured key management of the key management platform . In one embodiment the ingestion and reading processes are separate processes performed separately by client side components e.g. data ingestion via the key management client and the network side components e.g. data reading and key management by the key management platform and or the cloud service .

In step of the process a business unit client initiates a process to migrate its datasets to an organizational cloud storage service e.g. cloud service . For example the business unit can aggregate the data to support it end user facing applications as previously described. As part of this process to ingest and encrypt the data from the business unit into the cloud service the data ingestion module initiates a retrieval of a dataset asymmetric encryption key. In one embodiment the key management platform uses asymmetric encryption instead of symmetric encryption to provide an additional level of security and to provide for more secured key management that manages private keys within the organization. For example even if the encryption public key is compromised the associated datasets cannot be decrypted without having the decryption private key.

Although the approaches described herein are also applicable to symmetric encryption in an embodiment using asymmetric encryption the system can store the public key to the cloud service using for instance access control policies to determine access to the public keys. In this way business unit clients can retrieve the public key and perform the encryption in a fully automated manner e.g. using the key management client .

In step once the asymmetric key is retrieved the ingestion module initiates or causes an execution of for instance a client side encryption of the datasets using the asymmetric key for storage to the cloud service . The multi layered security of the key management platform then ensures that decryption users are authenticated and authorized to connect to the key management platform to initiate a reading of the ingested datasets .

In step to support the authentication and authorization of decryption users e.g. clients the provisioning module retrieves client side secure credentials e.g. client side SSL certificate from e.g. the provisioning database to authenticate the decryption user.

In step once the decryption user is authenticated the key management module determines whether a dataset object decryption key reference e.g. a reference indicated a key associated with a requested dataset is stored or otherwise managed in the key management platform . If the dataset object decryption key reference exists the key management module returns the reference to the client to identify the private key associated with the requested dataset . In one embodiment the private key is identified using a private key reference identifier ID that can used to initiate retrieval of the private key from the key repository . In one embodiment the key management module initiates a client server HTTPS Rest request for the decryption private key based on the private key reference ID.

In step the key management module authenticates and authorizes the return of the decryption private key to the requesting client or decryption user. In one embodiment the authentication and authorization of the decryption user is via a two way SSL connection. By way of example via an SSL client certificate the key management module can authenticate and authorize the requesting client based on whether the client or decryption user has permission or rights granted to receive the requested key. In one embodiment the key permissions or rights can be stored and queried from the provisioning database . The key management module determines whether to return the private key upon data reading based on specified permissions and or rights.

In step the data processing server of the client and or the cloud executes client side decryption and streams the requested datasets from the cloud service using the private key.

In step the key management platform receives a request from at least one client e.g. client for one or more private keys for decrypting one or more datasets wherein the one or more private keys are encrypted in at least one key repository associated with at least one server e.g. cloud service . In one embodiment the request for the private keys is initiated during a data decryption process by a client . For example the client receives a request to for data associated with one or more end user facing applications that use or access encrypted data stored in the cloud service . In one embodiment the key management platform processes the request using a multi layered security approach involving at least in part authentication and authorization of the requesting client as well as additional security measures such as encrypting private keys.

Accordingly in step the key management platform causes at least in part an authentication of the request using one or more secure credentials of the at least one client the at least one server or a combination thereof. In one embodiment the one or more secure credentials is a Secure Sockets Layer SSL certificate and wherein the request the decrypted one or more private keys or a combination thereof is transmitted using an SSL protocol. In one embodiment the at least one client and the at least one server communicate using a two way Secure Sockets Layer SSL connection of the SSL protocol. It is contemplated that the SSL protocol is provided by way of illustration and not limitation. Accordingly any equivalent secured connection protocol are applicable to the various embodiments described herein. Example embodiments of the signaling and handshake procedures that can be used by the key management platform are discussed below with respect to .

In step the key management platform causes at least in part an authorization of the at least one client to determine whether the at least one client is authorized to access the one or more private keys based on the authentication. For example in addition to the authentication process of step the key management platform can further verify whether the requesting client has been authorized e.g. via a provisioning process to receive the private keys. By way of example it is contemplated that the key management platform may use any level authorization e.g. unconditionally authorized conditionally authorized based on one or more criteria such as time of day activity or any other contextual parameter not authorized for any purpose etc. .

In step the key management platform causes at least in part a decryption of the one or more private keys using at least one master key based on the authorization. In one embodiment if the key management platform determines that the client is authenticated and authorized to receive the private key the key management platform initiates a decryption of the private keys using a master key. In one embodiment the master key can be distributed only to trusted entities e.g. Rest API servers within the organization. It is noted that in various embodiments the key management platform can apply any number of additional security layers to protect the private keys and eventual decryption of protected data including those describe in the embodiments discussed below.

Alternatively if for instance the client itself is trusted by the key management platform or otherwise privileged in step the key management platform optionally causes at least in part a transmission of the at least one master key to the at least one client based on another authentication process. In one embodiment the decryption of the one or more private keys is performed by the at least one client using the at least one master key.

For example in one embodiment for any stage of the key management process the key management platform can apply any number access control policies to provide additional security. In one embodiment access control policies can define criteria for who e.g. which client or requesting entity can access assets e.g. keys datasets servers etc. under what conditions e.g. read only write only read write etc. and context. The control policies can then be enforced in addition to other mechanisms such as SSL connections handshakes authorizations encryption etc.

Accordingly when processing requests for private keys to decrypt stored datasets from one or more clients in step the key management platform determines the authentication of the request the authorization of the at least one client the decryption of the one or more private keys or a combination thereof based on one or more access control policies. In other words the key management platform determines whether the requested activity complies with any applicable access control policy. In one example an access policy may limit access to specific encrypted datasets only to business unit clients have been specifically authorized by an end user. In other cases the end user may set conditions for when access is available e.g. only for a predetermined period of time only under certain conditions such as emergency conditions etc. . In one embodiment it is contemplated that the type and complexity of access control policies is limited only a user the business units the parent organization and or other authorized entity.

In step the key management platform causes at least in part a storage of one or more public keys of the at least one asymmetric encryption for retrieval by the at least one client using one or more access control policies. In one embodiment the types of operations that a client can performed can be controlled by access control policies. For example policies may allow storage by not reading viewing but not modifying etc.

In step the key management platform determines whether to grant access to the one or more datasets by the at least one client based on one or more access control policies. In addition to what operations can be performed whether a client can have access to a dataset can be further controlled by a policy.

Accordingly by enforcing access control policies in addition to other security measures the policies can potentially still limit exposure of sensitive data when other security measures e.g. SSL certificates public private keys master keys etc. are compromised.

In step the key management platform provides at least one interface for an ingestion of the one or more datasets to the at least one server. In one embodiment the at least one interface includes at least one Secure Sockets Layer SSL tunnel. In one embodiment the interface e.g. SSL tunnel serves as one level of security provided by the system in the context of secured key management from ingestion to reading.

In step the ingestion comprises retrieving the one or more private keys one or more public keys or a combination thereof for the at least one key repository to encrypt the one or more datasets. By way of example for asymmetric encryption in many cases the key management platform will retrieve and provide only the public keys to a client for encryption. However in some embodiments or scenarios e.g. when the client that is performing the encryption has an elevated trust or privilege level the private keys may be retrieved on ingestion using a read process described above.

In one embodiment an access to the at least one interface the ingestion of the one or more datasets or a combination is also based on one or more access control policies

The processes represented in are a key management client comprising a business unit BU e.g. a client and an encryption server a cloud service comprising an identity and access control module a BU dataset and a common dataset and a key management platform comprising a key API server e.g. a Rest API server a key repository and a master key .

In the example of the processes demonstrate interactions between the key management client and the cloud service for ingesting data. By way of example ingesting data includes encrypting the data and then writing the data to the cloud service for storage.

In process to initiate the ingestion process the BU access a secure interface to the data encryption server . In this example the BU establishes an SSL tunnel connection with the data encryption server for raw data aggregation. In response the data encryption server sends a request to the BU specific dataset of the cloud service to retrieve the BU owned dataset encryption public key process . In one embodiment the arguments for the request include identifying the requested bucket and dataset.

In one embodiment if access control policies are in place the identity and access control module of the cloud service can verify whether the requesting BU has the correct identity and is provisioned to access the requested public key. The access control module then sends a message with the results of the determination to the BU dataset process . If the verified by the access control module the BU dataset returns the BU owned dataset public key to the data encryption server process .

In process the data encryption server encrypts the raw data aggregated from the BU using the public key via asymmetric encryption and transmits the encrypted data to the BU dataset for storage. If access control policies are in place the access control module determines whether access control policies permit the BU to store the encrypted data to the cloud server and sends the determination to the BU dataset process . The BU dataset confirms whether the BU has permission to store the encrypted data and sends a message indicating the encrypted data has been stored at the BU dataset if successful process .

The processes represented in are a key management client comprising a business unit BU e.g. a client and an encryption server a cloud service comprising an identity and access control module a BU dataset and a common dataset and a key management platform comprising a key API server e.g. a Rest API server a key repository and a master key . assume that encrypted data has already been stored in the BU dataset e.g. using the process described with respect to .

In process of the BU begins the data decryption process by initiating an authentication authorization process. For example the BU sends a request for secure credentials to the common dataset of the cloud service . In one embodiment the request includes an argument specifying the business unit name and or identifier. In one embodiment the common dataset includes a secure credentials database to provide a commonly accessible storage for credentials of business units entities within an organization.

In one embodiment the system can apply access control policies to determine which decryption users have permission to obtain associated secure credentials e.g. SSL certificates . Accordingly in process the identity and access control module can verify the identity of the requestor and whether the requestor has requisite permissions or rights to access the credentials and sends the determination to the common dataset . In process the common dataset returns the requested secure credentials to the BU based on the determination made by the access control module .

In process the BU then initiates a request to retrieve data decryption key meta data e.g. dataset object decryption key reference that associates a key reference ID for the decryption key associated with a requested dataset. If access control policies are in place the access control module determines whether the BU has permission and identity to obtain the requested decryption key meta data and or key reference ID and send a message with the determination to the common dataset process . Based on the determination from the access control module the common dataset returns the decryption key meta data and or reference ID to the BU process .

After obtaining the BU secure credentials e.g. BU SSL certificate and the decryption key reference ID the BU sends a request to authenticate itself to the key API server e.g. Rest API server of the key management platform process . In one embodiment the BU presents the BU SSL certificate to the key API server as part of a two way SSL authentication via an HTTPS Rest API request. The key API server e.g. acting as an SSL or Rest server authenticates the client side certificate process . The BU then authenticates the SSL certificate or other secure credentials presented by the key API server to complete the two way authentication e.g. a two way SSL handshake process .

Following the completion of the two way authentication the key API server sends a request to the key repository to determine whether the BU is authorized for the requested key process . If the key repository confirms or authorizes the BU to receive the requested key by for instance checking a provisioning database or other record to determine permissions or rights and returns the determination to the key API server process .

After the key API sever authenticates e.g. via a two way SSL handshake and authorizes e.g. via querying of the key repository for permissions the BU the key API server sends a request to the master key server to retrieve the master key to decrypt the encrypted private key process . As previously discussed in one embodiment the private keys are further encrypted for storage in the key repository as another level of security. Accordingly even if other security measures are compromised so that the encrypted private key is exposed external parties would still need access to the master key to decrypt the encrypted private key to enable decryption of the datasets associated with the private key.

Based on the authentication and authorization of the BU the master key server returns the master key to the key API server process . The key API server then retrieves the encrypted private key e.g. using the decryption key reference ID provided by the BU from the key repository process and decrypts the private key using the master key process .

In process the key API server returns the decrypted private key that is encoded over a secure communication connection e.g. an SSL connection to the BU . The BU then sends a request to download encrypted data from the BU dataset process . If access control policies are in place the access control module determines the identity and access permissions rights of the BU to the requested encrypted data and sends the determination to the BU dataset process . If confirmed by the access control module the BU dataset then transmits or streams the requested encrypted dataset to the BU for client side decryption using the private key process .

The processes described herein for providing key management for data encryption may be advantageously implemented via software hardware firmware or a combination of software and or firmware and or hardware. For example the processes described herein may be advantageously implemented via processor s Digital Signal Processing DSP chip an Application Specific Integrated Circuit ASIC Field Programmable Gate Arrays FPGAs etc. Such exemplary hardware for performing the described functions is detailed below.

A bus includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors for processing information are coupled with the bus .

A processor or multiple processors performs a set of operations on information as specified by computer program code related to providing key management for data encryption. The computer program code is a set of instructions or statements providing instructions for the operation of the processor and or the computer system to perform specified functions. The code for example may be written in a computer programming language that is compiled into a native instruction set of the processor. The code may also be written directly using the native instruction set e.g. machine language . The set of operations include bringing information in from the bus and placing information on the bus . The set of operations also typically include comparing two or more units of information shifting positions of units of information and combining two or more units of information such as by addition or multiplication or logical operations like OR exclusive OR XOR and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions such as an operation code of one or more digits. A sequence of operations to be executed by the processor such as a sequence of operation codes constitute processor instructions also called computer system instructions or simply computer instructions. Processors may be implemented as mechanical electrical magnetic optical chemical or quantum components among others alone or in combination.

Computer system also includes a memory coupled to bus . The memory such as a random access memory RAM or any other dynamic storage device stores information including processor instructions for providing key management for data encryption. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory is also used by the processor to store temporary values during execution of processor instructions. The computer system also includes a read only memory ROM or any other static storage device coupled to the bus for storing static information including instructions that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus is a non volatile persistent storage device such as a magnetic disk optical disk or flash card for storing information including instructions that persists even when the computer system is turned off or otherwise loses power.

Information including instructions for providing key management for data encryption is provided to the bus for use by the processor from an external input device such as a keyboard containing alphanumeric keys operated by a human user or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus used primarily for interacting with humans include a display device such as a cathode ray tube CRT a liquid crystal display LCD a light emitting diode LED display an organic LED OLED display a plasma screen or a printer for presenting text or images and a pointing device such as a mouse a trackball cursor direction keys or a motion sensor for controlling a position of a small cursor image presented on the display and issuing commands associated with graphical elements presented on the display . In some embodiments for example in embodiments in which the computer system performs all functions automatically without human input one or more of external input device display device and pointing device is omitted.

In the illustrated embodiment special purpose hardware such as an application specific integrated circuit ASIC is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor quickly enough for special purposes. Examples of ASICs include graphics accelerator cards for generating images for display cryptographic boards for encrypting and decrypting messages sent over a network speech recognition and interfaces to special external devices such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.

Computer system also includes one or more instances of a communications interface coupled to bus . Communication interface provides a one way or two way communication coupling to a variety of external devices that operate with their own processors such as printers scanners and external disks. In general the coupling is with a network link that is connected to a local network to which a variety of external devices with their own processors are connected. For example communication interface may be a parallel port or a serial port or a universal serial bus USB port on a personal computer. In some embodiments communications interface is an integrated services digital network ISDN card or a digital subscriber line DSL card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments a communication interface is a cable modem that converts signals on bus into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example communications interface may be a local area network LAN card to provide a data communication connection to a compatible LAN such as Ethernet. Wireless links may also be implemented. For wireless links the communications interface sends or receives or both sends and receives electrical acoustic or electromagnetic signals including infrared and optical signals that carry information streams such as digital data. For example in wireless handheld devices such as mobile telephones like cell phones the communications interface includes a radio band electromagnetic transmitter and receiver called a radio transceiver. In certain embodiments the communications interface enables connection to the communication network for providing key management for data encryption.

The term computer readable medium as used herein refers to any medium that participates in providing information to processor including instructions for execution. Such a medium may take many forms including but not limited to computer readable storage medium e.g. non volatile media volatile media and transmission media. Non transitory media such as non volatile media include for example optical or magnetic disks such as storage device . Volatile media include for example dynamic memory . Transmission media include for example twisted pair cables coaxial cables copper wire fiber optic cables and carrier waves that travel through space without wires or cables such as acoustic waves and electromagnetic waves including radio optical and infrared waves. Signals include man made transient variations in amplitude frequency phase polarization or other physical properties transmitted through the transmission media. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM CDRW DVD any other optical medium punch cards paper tape optical mark sheets any other physical medium with patterns of holes or other optically recognizable indicia a RAM a PROM an EPROM a FLASH EPROM an EEPROM a flash memory any other memory chip or cartridge a carrier wave or any other medium from which a computer can read. The term computer readable storage medium is used herein to refer to any computer readable medium except transmission media.

Logic encoded in one or more tangible media includes one or both of processor instructions on a computer readable storage media and special purpose hardware such as ASIC .

Network link typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example network link may provide a connection through local network to a host computer or to equipment operated by an Internet Service Provider ISP . ISP equipment in turn provides data communication services through the public world wide packet switching communication network of networks now commonly referred to as the Internet .

A computer called a server host connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example server host hosts a process that provides information representing video data for presentation at display . It is contemplated that the components of system can be deployed in various configurations within other computer systems e.g. host and server .

At least some embodiments of the invention are related to the use of computer system for implementing some or all of the techniques described herein. According to one embodiment of the invention those techniques are performed by computer system in response to processor executing one or more sequences of one or more processor instructions contained in memory . Such instructions also called computer instructions software and program code may be read into memory from another computer readable medium such as storage device or network link . Execution of the sequences of instructions contained in memory causes processor to perform one or more of the method steps described herein. In alternative embodiments hardware such as ASIC may be used in place of or in combination with software to implement the invention. Thus embodiments of the invention are not limited to any specific combination of hardware and software unless otherwise explicitly stated herein.

The signals transmitted over network link and other networks through communications interface carry information to and from computer system . Computer system can send and receive information including program code through the networks among others through network link and communications interface . In an example using the Internet a server host transmits program code for a particular application requested by a message sent from computer through Internet ISP equipment local network and communications interface . The received code may be executed by processor as it is received or may be stored in memory or in storage device or any other non volatile storage for later execution or both. In this manner computer system may obtain application program code in the form of signals on a carrier wave.

Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor for execution. For example instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system receives the instructions and data on a telephone line and uses an infra red transmitter to convert the instructions and data to a signal on an infra red carrier wave serving as the network link . An infrared detector serving as communications interface receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus carries the information to memory from which processor retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory may optionally be stored on storage device either before or after execution by the processor .

In one embodiment the chip set or chip includes a communication mechanism such as a bus for passing information among the components of the chip set . A processor has connectivity to the bus to execute instructions and process information stored in for example a memory . The processor may include one or more processing cores with each core configured to perform independently. A multi core processor enables multiprocessing within a single physical package. Examples of a multi core processor include two four eight or greater numbers of processing cores. Alternatively or in addition the processor may include one or more microprocessors configured in tandem via the bus to enable independent execution of instructions pipelining and multithreading. The processor may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors DSP or one or more application specific integrated circuits ASIC . A DSP typically is configured to process real world signals e.g. sound in real time independently of the processor . Similarly an ASIC can be configured to performed specialized functions not easily performed by a more general purpose processor. Other specialized components to aid in performing the inventive functions described herein may include one or more field programmable gate arrays FPGA not shown one or more controllers not shown or one or more other special purpose computer chips.

In one embodiment the chip set or chip includes merely one or more processors and some software and or firmware supporting and or relating to and or for the one or more processors.

The processor and accompanying components have connectivity to the memory via the bus . The memory includes both dynamic memory e.g. RAM magnetic disk writable optical disk etc. and static memory e.g. ROM CD ROM etc. for storing executable instructions that when executed perform the inventive steps described herein to provide key management for data encryption. The memory also stores the data associated with or generated by the execution of the inventive steps.

Pertinent internal components of the telephone include a Main Control Unit MCU a Digital Signal Processor DSP and a receiver transmitter unit including a microphone gain control unit and a speaker gain control unit. A main display unit provides a display to the user in support of various applications and mobile terminal functions that perform or support the steps of providing key management for data encryption. The display includes display circuitry configured to display at least a portion of a user interface of the mobile terminal e.g. mobile telephone . Additionally the display and display circuitry are configured to facilitate user control of at least some functions of the mobile terminal. An audio function circuitry includes a microphone and microphone amplifier that amplifies the speech signal output from the microphone . The amplified speech signal output from the microphone is fed to a coder decoder CODEC .

A radio section amplifies power and converts frequency in order to communicate with a base station which is included in a mobile communication system via antenna . The power amplifier PA and the transmitter modulation circuitry are operationally responsive to the MCU with an output from the PA coupled to the duplexer or circulator or antenna switch as known in the art. The PA also couples to a battery interface and power control unit .

In use a user of mobile terminal speaks into the microphone and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter ADC . The control unit routes the digital signal into the DSP for processing therein such as speech encoding channel encoding encrypting and interleaving. In one embodiment the processed voice signals are encoded by units not separately shown using a cellular transmission protocol such as enhanced data rates for global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi satellite and the like or any combination thereof.

The encoded signals are then routed to an equalizer for compensation of any frequency dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream the modulator combines the signal with a RF signal generated in the RF interface . The modulator generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission an up converter combines the sine wave output from the modulator with another sine wave generated by a synthesizer to achieve the desired frequency of transmission. The signal is then sent through a PA to increase the signal to an appropriate power level. In practical systems the PA acts as a variable gain amplifier whose gain is controlled by the DSP from information received from a network base station. The signal is then filtered within the duplexer and optionally sent to an antenna coupler to match impedances to provide maximum power transfer. Finally the signal is transmitted via antenna to a local base station. An automatic gain control AGC can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone any other mobile phone or a land line connected to a Public Switched Telephone Network PSTN or other telephony networks.

Voice signals transmitted to the mobile terminal are received via antenna and immediately amplified by a low noise amplifier LNA . A down converter lowers the carrier frequency while the demodulator strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer and is processed by the DSP . A Digital to Analog Converter DAC converts the signal and the resulting output is transmitted to the user through the speaker all under control of a Main Control Unit MCU which can be implemented as a Central Processing Unit CPU not shown .

The MCU receives various signals including input signals from the keyboard . The keyboard and or the MCU in combination with other user input components e.g. the microphone comprise a user interface circuitry for managing user input. The MCU runs a user interface software to facilitate user control of at least some functions of the mobile terminal to provide key management for data encryption. The MCU also delivers a display command and a switch command to the display and to the speech output switching controller respectively. Further the MCU exchanges information with the DSP and can access an optionally incorporated SIM card and a memory . In addition the MCU executes various control functions required of the terminal. The DSP may depending upon the implementation perform any of a variety of conventional digital processing functions on the voice signals. Additionally DSP determines the background noise level of the local environment from the signals detected by microphone and sets the gain of microphone to a level selected to compensate for the natural tendency of the user of the mobile terminal .

The CODEC includes the ADC and DAC . The memory stores various data including call incoming tone data and is capable of storing other data including music data received via e.g. the global Internet. The software module could reside in RAM memory flash memory registers or any other form of writable storage medium known in the art. The memory device may be but not limited to a single memory CD DVD ROM RAM EEPROM optical storage magnetic disk storage flash memory storage or any other non volatile storage medium capable of storing digital data.

An optionally incorporated SIM card carries for instance important information such as the cellular phone number the carrier supplying service subscription details and security information. The SIM card serves primarily to identify the mobile terminal on a radio network. The card also contains a memory for storing a personal telephone number registry text messages and user specific mobile terminal settings.

While the invention has been described in connection with a number of embodiments and implementations the invention is not so limited but covers various obvious modifications and equivalent arrangements which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims it is contemplated that these features can be arranged in any combination and order.

