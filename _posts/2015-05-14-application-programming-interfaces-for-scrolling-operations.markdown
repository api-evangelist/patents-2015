---

title: Application programming interfaces for scrolling operations
abstract: Described are devices, methods and storage media for receiving an input and issuing at least one scroll call or gesture call based on a determination whether the input consists of a single input point that moves a distance across the display or consists of a plurality of input points on the display. A scroll call, for example, causes scrolling of a window in a vertical or horizontal direction at a fixed or varying speed. A gesture call, for example, initiates various operations such as scaling of a window, rotating a window, etc.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09448712&OS=09448712&RS=09448712
owner: APPLE INC.
number: 09448712
owner_city: Cupertino
owner_country: US
publication_date: 20150514
---
This application is a continuation of U.S. application Ser. No. 14 189 922 filed Feb. 25 2014 now U.S. Pat. No. 9 037 995 issued on May 19 2015 which is a continuation of U.S. application Ser. No. 13 867 950 filed Apr. 22 2013 now U.S. Pat. No. 8 661 363 issued on Feb. 25 2014 which is a continuation of U.S. patent application Ser. No. 12 869 182 filed Aug. 26 2010 now U.S. Pat. No. 8 429 557 issued Apr. 23 2013 which is a divisional of U.S. patent application Ser. No. 11 620 717 filed Jan. 7 2007 now U.S. Pat. No. 7 844 915 issued Nov. 30 2010 all of which are incorporated herein by reference in their entirety.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

Applicant has submitted herewith Computer Program Listings which are included as Appendix A attached.

An API is a source code interface that a computer system or program library provides in order to support requests for services from a software application. An API is specified in terms of a programming language that can be interpretative or compiled when an application is built rather than an explicit low level description of how data is laid out in memory. The software that provides the functionality described by an API is said to be an implementation of the APL

Various devices such as electronic devices computing systems portable devices and handheld devices have software applications. The API interfaces between the software applications and user interface software to provide a user of the device with certain features and operations. A user may desire certain operations such as scrolling selecting gesturing and animating operations for a display of the device.

Scrolling is the act of sliding a directional e.g. horizontal or vertical presentation of content such as text drawings or images across a screen or display window. In a typical graphical user interface scrolling is done with the help of a scrollbar or using keyboard shortcuts often the arrow keys. Gesturing is a type of user input with two or more input points. Animating operations include changing content within a given time period.

The various types of devices may have a limited display size user interface software API interface and or processing capability which limits the ease of use of the devices. User interfaces of devices implement APIs in order to provide requested functionality and features. These user interfaces can have difficulty interpreting the various types of user inputs and providing the intended functionality associated with the user inputs.

At least certain embodiments of the present disclosure include one or more application programming interfaces in an environment with user interface software interacting with a software application. Various function calls or messages are transferred via the application programming interfaces between the user interface software and software applications. Example application programming interfaces transfer function calls to implement scrolling gesturing and animating operations for a device.

At least certain embodiments of the present disclosure include an environment with user interface software interacting with a software application. A method for operating through an application programming interface API in this environment includes transferring a set bounce call. The method further includes setting at least one of maximum and minimum bounce values. The set bounce call causes a bounce of a scrolled region in an opposite direction of a scroll based on a region past an edge of the scrolled region being visible in a display region at the end of the scroll.

At least certain embodiments of the present disclosure include an environment with user interface software interacting with a software application. A method for operating through an application programming interface API in this environment includes transferring a rubberband call. Rubberbanding a scrolled region within a display region occurs by a predetermined maximum displacement when the scrolled region exceeds a display edge. The method further includes transferring an edge rubberband call to set displacement values for at least one edge of the display e.g. top and bottom edges left and right edges .

At least certain embodiments of the present disclosure include gesture operations for a display of a device. The gesture operations include performing a scaling transform such as a zoom in or zoom out in response to a user input having two or more input points. The gesture operations also include performing a rotation transform to rotate an image or view in response to a user input having two or more input points.

At least certain embodiments of the present disclosure include a method for performing animations for a display of a device. The method includes starting at least one animation. The method further includes determining the progress of each animation. The method further includes completing each animation based on a single timer. The single timer can be based on a redraw interval of the display hardware.

Various devices which perform one or more of the foregoing methods and machine readable media which when executed by a processing system cause the processing system to perform these methods are also described.

Various embodiments and aspects of the disclosure will be described with reference to details discussed below and the accompanying drawings will illustrate the various embodiments. The following description and drawings are illustrative of the disclosure and are not to be construed as limiting the disclosure. Numerous specific details are described to provide a thorough understanding of various embodiments of the present disclosure. However in certain instances well known or conventional details are not described in order to provide a concise discussion of embodiments of the present disclosure.

Some portions of the detailed descriptions which follow are presented in terms of algorithms which include operations on data stored within a computer memory. An algorithm is generally a self consistent sequence of operations leading to a desired result. The operations typically require or involve physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like can refer to the action and processes of a data processing system or similar electronic device that manipulates and transforms data represented as physical electronic quantities within the system s registers and memories into other data similarly represented as physical quantities within the system s memories or registers or other such information storage transmission or display devices.

The present disclosure can relate to an apparatus for performing one or more of the operations described herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a machine e.g. computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs erasable programmable ROMs EPROMs electrically erasable programmable ROMs EEPROMs flash memory magnetic or optical cards or any type of media suitable for storing electronic instructions and each coupled to a bus.

A machine readable medium includes any mechanism for storing or transmitting information in a form readable by a machine e.g. a computer . For example a machine readable medium includes read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices electrical optical acoustical or other form of propagated signals e.g. carrier waves infrared signals digital signals etc. etc.

At least certain embodiments of the present disclosure include one or application programming interfaces in an environment with user interface software interacting with a software application. Various function calls or messages are transferred via the application programming interfaces between the user interface software and software applications. Transferring the function calls or messages may include issuing initiating invoking or receiving the function calls or messages. Example application programming interfaces transfer function calls to implement scrolling gesturing and animating operations for a device having a display region. An API may also implement functions having parameters variables or pointers. An API may receive parameters as disclosed or other combinations of parameters. In addition to the APIs disclosed other APIs individually or in combination can perform similar functionality as the disclosed APIs.

The display region is a form of a window. A window is a display region which may not have a border and may be the entire display region or area of a display. In some embodiments a display region may have at least one window and or at least one view e.g. web text or image content . A window may have at least one view. The methods systems and apparatuses disclosed can be implemented with display regions windows and or views.

At least certain embodiments of the present disclosure include scrolling operations for scrolling a display of a device. The scrolling operations include bouncing a scrolled region in an opposite direction of a scroll when a scroll completes rubberbanding a scrolled region by a predetermined maximum displacement when the scrolled region exceeds a display edge and setting a scrolling angle that locks the scroll in a horizontal or vertical direction.

At least certain embodiments of the present disclosure include gesture operations for a display of a device. The gesture operations include performing a scaling transform such as a zoom in or zoom out in response to a user input having two or more input points. The gesture operations also include performing a rotation transform to rotate an image or view in response to a user input having two or more input points.

At least certain embodiments of the present disclosure include a method for performing animations for a display of a device. The method includes starting at least one animation. The method further includes determining the progress of each animation. The method further includes completing each animation based on a single timer. The single timer can be based on a redraw interval of the display hardware.

At least certain embodiments of the disclosure may be part of a digital media player such as a portable music and or video media player which may include a media processing system to present the media a storage device to store the media and may further include a radio frequency RF transceiver e.g. an RF transceiver for a cellular telephone coupled with an antenna system and the media processing system. In certain embodiments media stored on a remote storage device may be transmitted to the media player through the RF transceiver. The media may be for example one or more of music or other audio still pictures or motion pictures.

The portable media player may include a media selection device such as a click wheel input device on an iPod or iPod Nano media player from Apple Computer Inc. of Cupertino Calif. a touch screen input device pushbutton device movable pointing input device or other input device. The media selection device may be used to select the media stored on the storage device and or the remote storage device. The portable media player may in at least certain embodiments include a display device which is coupled to the media processing system to display titles or other indicators of media being selected through the input device and being presented either through a speaker or earphone s or on the display device or on both display device and a speaker or earphone s . In some embodiments the display device and input device are integrated while in other embodiments the display device and input device are separate devices. Examples of a portable media player are described in published U.S. patent application numbers 2003 0095096 and 2004 0224638 both of which are incorporated by reference.

Embodiments of the disclosure described herein may be part of other types of data processing systems such as for example entertainment systems or personal digital assistants PDAs or general purpose computer systems or special purpose computer systems or an embedded device within another device or cellular telephones which do not include media players or multi touch tablet devices or other multi touch devices or devices which combine aspects or functions of these devices e.g. a media player such as an iPod combined with a PDA an entertainment system and a cellular telephone in one device . In this disclosure electronic devices and consumer devices are types of devices.

In certain embodiments of the present disclosure scroll operations include attaching scroll indicators to a content edge of a display. Alternatively the scroll indicators can be attached to the display edge. In some embodiments user input in the form of a mouse finger down causes the scroll indicators to be displayed on the display edge content edge or window edge of the scrolled region. If a mouse finger up is then detected the scroll indicators are faded out from the display region content edge or window edge of the scrolled region.

In certain embodiments of the present disclosure gesture operations include responding to at least one gesture call if issued by rotating a view associated with the event object based on receiving a plurality of input points in the form of the user input. Gesture operations may also include scaling a view associated with the event object by zooming in or zooming out based on receiving the user input.

In some embodiments a device includes a display region having multiple views or windows. Each window may have a multiple views including superviews and subviews. It is necessary to determine which window view superview or subview is contacted by a user input in the form of a mouse up mouse down or drag etc. An API can set various modes for making this determination. In one embodiment a pass always mode sends mouse down mouse up and drag inputs to the nearest subview. In another embodiment an intercept on drag mode sends a drag input to the superview while mouse up and down inputs are sent to the subview. In another embodiment an intercept always mode sends all drag mouse up and down inputs to the superview. The superview may be scroller software operating as a subclass of a view software. The subview may be view software operating as a subclass of the user interface software.

In certain embodiments of the present disclosure transferring the set bounce call is either one of issuing initiating invoking or receiving the set bounce call.

Rubberbanding a scrolled region according to the method occurs by a predetermined maximum displacement value when the scrolled region exceeds a display edge of a display of a device based on the scroll. If a user scrolls content of the display making a region past the edge of the content visible in the display then the displacement value limits the maximum amount for the region outside the content. At the end of the scroll the content slides back making the region outside of the content no longer visible on the display.

In certain embodiments of the present disclosure transferring the rubberband call is either one of issuing initiating invoking or receiving the rubberband call.

In at least some embodiments of the present disclosure the method performs the bounce operations described in . The bounce call transferred at block determines whether a bounce operation is enabled. The maximum and minimum bounces values determine the amount of bouncing of the scrolled region in an opposite direction of the scroll.

If the list of emails fills more than the allotted screen area the user may scroll through the emails using vertically upward and or vertically downward swipe gestures on the touch screen. In the example of a portion of a list of emails is displayed in the screen area including a top displayed email from Bruce Walker and a bottom displayed email from Kim Brook. A user performs a vertically downward swipe gesture to scroll toward the top of the list. The vertically downward gesture need not be exactly vertical a substantially vertical gesture is sufficient. In some embodiments a gesture within a predetermined angle of being perfectly vertical results in vertical scrolling.

As a result of detecting the vertically downward gesture in the displayed emails have shifted down such that the previous bottom displayed email from Kim Brook is no longer displayed the previous top displayed email from Bruce Walker is now second from the top and the email from Aaron Jones which was not displayed in is now displayed at the top of the list.

In this example the email from Aaron Jones is the first email in the list and thus is the terminus of the list. Upon reaching this email in response to continued detection of the vertically downward gesture an area above the first email i.e. beyond the terminus of the list is displayed. In some embodiments the area displayed beyond the terminus of the list is visually indistinct from the background of the list. In both the area and the background of the emails e.g. emails and are white and thus are visually indistinct.

Once vertically downward gesture is complete such that a corresponding object is no longer detected on or near the touch screen display the list is scrolled in an opposite direction until the area is no longer displayed. illustrates the result of this scrolling in the opposite direction the email from Aaron Jones is now displayed at the top of the screen area allotted to the list and the area is not displayed.

In the example of a vertically downward gesture resulted in display of an area beyond the first item in the list. As described in the values for the predetermined maximum displacement e.g. display of an area beyond the first item in the list are set at block for top and bottom edges or at block for all edges of the window.

Similarly a vertically upward gesture may result in display of an area beyond the last item of the list if the vertically upward gesture continues once the list has been scrolled to the last item. The last item may be considered a terminus of the list similar to the first item. As discussed above the gesture need not be exactly vertical to result in vertical scrolling a gesture within a predefined range of angles from perfectly vertical is sufficient.

In certain embodiments a user input in the form of a drag forms an angle with the horizontal direction that is less than the first scroll angle. In this case the user presumably intends to scroll in the horizontal direction. The scrolling will be locked in the horizontal direction until the user input exceeds the first scroll angle. A second scroll angle may be used for locking the user input in the vertical direction. The second scroll angle may be set equal to the first scroll angle.

In some embodiments the horizontal and vertical locking angles can be determined in part by the aspect of the content. For example content in the form of a tall page may receive a larger vertical locking angle compared to the horizontal locking angle.

In certain embodiments a user input in the form of a drag invokes a scroll operation for a certain time period. The user input has a certain speed. The scroll of the scrolled region of a window or a display region of a display of a device will be stopped after the user input stops by applying a deceleration factor to the speed of the user input during the drag movement.

In certain embodiments a user input in the form of a drag over a certain distance across a display or window within a display of a device invokes a scroll operation. The hysteresis value determines the certain distance which the user input must drag across the display or window prior to invoking a scroll operation. A user input that does not drag the certain predetermined distance will not invoke a scroll operation and may be considered a mouse up or down input or other type of input.

In some embodiments the operations of method can be altered modified combined or deleted. For example block can be deleted. Likewise block can be deleted from the method . Alternatively the order of block and block can be switched. Other methods having various operations that have been disclosed within the present disclosure can also be altered modified rearranged collapsed combined or deleted.

In certain embodiments of the present disclosure transferring the scroll indicator call is either one of issuing initiating invoking or receiving the scroll indicator call. For example the user interface software e.g. software kit or library may receive the scroll indicator call from the software application.

In certain embodiments of the present disclosure transferring the inadvertent user input call is either one of issuing initiating invoking or receiving the inadvertent user input call.

A gesture API provides an interface between an application and user software in order to handle gesturing. Gesturing may include scaling rotating or other changes to a view window or display. A mask may merely permit certain changes while limiting or not permitting other changes. Events of all kinds come into the application via a graphics framework. They are enqueued coalesced if necessary and dispatched. If the events are system level events e.g. application should suspend device orientation has changed etc. they are routed to the application having an instance of a class of the user interface software. If the events are hand events based on a user input the events are routed to the window they occurred over. The window then routes these events to the appropriate control by calling the instance s mouse and gesture methods. The control that receives a mouse down or mouse entered function will continue to get all future calls until the hand is lifted. If a second finger is detected the gesture methods or functions are invoked. These functions may include start change and end gesture calls. The control that receives start gesture call will be sent all future change gesture calls until the gesture ends.

In certain embodiments a user input in the form of two or more points is received by a display of a device. A multi touch driver of the device receives the user input and packages the event into an event object. A window server receives the event object and determines whether the event object is a gesture event object. If the window server determines that a gesture event object has been received then user interface software issues or transfers the handle gesture call at block to a software application associated with the view. The software application confirms that a gesture event has been received and passes the handle gesture call to a library of the user interface software. The window server also associates the gesture event object with the view that received the user input. The library responds by transferring a gesture change call in response to the handle gesture event call at block .

In one embodiment a window or view associated with the user input receives the change call in order to perform the gesture event. The user software that provides the view receives a gesture start event call a gesture changed event call a zoom to scale setting for the view and a gesture end call. The gesture calls receive an input of a gesture event which may be base event having a type such as a hand event keyboard event system event etc. A delegate associated with the application receives a start gesture call gesture did change call and gesture did finish call. The user software is dynamically linking into the application during the run time of the gesture process.

In some embodiments the gesture changed function call contains the following information about the gesture 

A gesture event object may be a chord event object having a chord count e.g. number of fingers contacted the view or display a chord start event a chord change event and a chord end event. A chord change event may include a scaling or rotation transform.

In certain embodiments a user input in the form of two or more input points e.g. fingers moves together or apart to invoke a gesture event that performs a scaling transform on the view associated with the user input. A scale transform includes a minimum and maximum scale factor. illustrates a display of a device having a scaling transform of a view. The view e.g. web text or image content has a first scale factor. A user input e.g. two fingers moving apart associated with the view is interpreted as a gesture event to zoom out from view to view having a second scale factor that exceeds the maximum scale factor of the view . A snapback flag determines whether the zoom out can proceed past the maximum scale factor to view prior to snapping back to the maximum scale factor associated with view .

In at least some embodiments of the present disclosure a user desires to change a view from a scale factor of 2 to a scale factor of 1 as illustrated in . A first set of user inputs and that move to the second set of user inputs and will decrease the scale factor from 2 to 1 . It may be desirable for the user to scale from 2 to 1 without having to move the user inputs a large distance across the view . In an environment with user interface software interacting with a software application a gesture scaling transform flag may be set in order to determine a scaling transform for a view associated with a user input having a plurality of input points. The scaling transform flag scales either from a current scale factor to a minimum scale factor or from the current scale factor to a maximum scale factor. For example a flag may be set at the position associated with a 1.5 scale factor and a third set of user inputs and . A user desiring to change the scale factor from 2 to 1 would only have to move his fingers the user inputs from the first set and to the third set and if the gesture scaling transform flag has been set at a scale factor of 1.5 .

In certain embodiments a user input in the form of two or more input points rotates to invoke a gesture event that performs a rotation transform on the view associated with the user input. The rotation transform includes a minimum and maximum degree of rotation for associated minimum and maximum rotation views. The user input may temporarily rotate a view past a maximum degree of rotation prior to the view snapping back to the maximum degree of rotation.

In certain embodiments software invokes an animation that performs a scaling transform on the view associated with the user input. A display may include numerous views. The view being increased in size by the scaling transform may obstruct other views in which case the other views may need to be reduced in size. Alternatively the view being decreased in size by the scaling transform may create additional area for other views to increase in size.

In certain embodiments of the present disclosure the single timer includes a timer based on a redraw interval which is a time period between the display of a current frame and a next frame of the display of the device. In this case changes in animation are updated to the display during the redraw interval in order to display the changes during the next frame of the display. The progress of each animation may be calculated periodically or based upon a progress call.

The method may further include determining whether each animation is associated with a delegate. The delegate is then notified of the animation. Other views not associated with an animation may be changed depending on the software application controlling the delegate.

In some embodiments a first data structure or layer tree represents a hierarchy of layers that correspond to the views or windows of the processes. A second data structure or render tree represents a similar copy of the layer tree. However the render tree is not updated until the independent processes have completed their separate animations. At this time the render tree updates and redraws the screen with the new animations.

In some embodiments each layer from the data structure is associated with a view. The layer associated with the view sends a delegate function call to the view in order to generate content provided by the view. A first pointer reference points from the layer to the view. A second pointer reference points from the view to the layer. The number of references pointing to an object such as the view is defined as the retained count of the object. The view may receive notification that the layer will be removed from the data structure. Removing the layer from the data structure may occur based on the view associated with the layer being removed from the display of the device. When the layer is removed from the data structure or layer tree the pointer from the layer to the view will be removed. The view will have a retained count of zero and be deallocated or removed from memory if the ownership of the view is not reversed. The view will have a retained count of at least one if ownership is reversed.

If the layer is removed from the data structure as illustrated in then the pointer is removed. View will have a lower retained count as illustrated in . If view has a retained count of zero then the memory storing the view will be deallocated.

In some embodiments compositing the media and non media content includes retrieving the media content from the first memory location retrieving the non media content from the second memory location and scanning the media and non media content directly to the display. The memory location can be any type of memory located in cache main memory a graphics processing unit or other location within a device. The media content may include video video plug in audio image or other time varying media. The media content may be in the form of a YUV model with the Y representing a luminance component the brightness and U and V representing chrominance color components. The media content may be scanned to the display at a rate of substantially twenty to forty frames per second. The media content may be scaled prior to being scanned to the display of the device.

The non media content may include content views and images that do not require frequent updating. The non media content may be in the form of a RGB model which is an additive model in which red green and blue often used in additive light models are combined in various ways to reproduce other colors. The non media content may be scanned to the display at a slower rate compared to the media content.

In some embodiments the methods systems and apparatuses of the present disclosure can be implemented in various devices including electronic devices consumer devices data processing devices desktop computers portable computers wireless devices cellular devices tablet devices handheld devices multi touch devices multi touch data processing devices any combination of these devices or other like devices. illustrate examples of a few of these devices.

The display device is shown positioned at an upper portion of the housing and the input device is shown positioned at a lower portion of the housing . The antenna is shown extending from the housing at an upper portion of the housing . The speaker is also shown at an upper portion of the housing above the display device . The microphone is shown at a lower portion of the housing below the input device . It will be appreciated that the speaker and microphone can be positioned at any location on the housing but are typically positioned in accordance with a user s ear and mouth respectively.

The display device may be for example a liquid crystal display LCD which does not include the ability to accept inputs or a touch input screen which also includes an LCD. The input device may include for example buttons switches dials sliders keys or keypad navigation pad touch pad touch screen and the like. Any well known speaker microphone and antenna can be used for speaker microphone and antenna respectively.

The data acquired from the proximity sensor and the accelerometer can be combined together or used alone to gather information about the user s activities. The data from the proximity sensor the accelerometer or both can be used for example to activate deactivate a display backlight initiate commands make selections control scrolling gesturing animating or other movement in a display control input device settings or to make other changes to one or more settings of the device. In certain embodiments of the present disclosure the device can be used to implement at least some of the methods discussed in the present disclosure.

In one embodiment the display input device may include a multi point touch input screen in addition to being a display such as an LCD. In one embodiment the multi point touch screen is a capacitive sensing medium configured to detect multiple touches e.g. blobs on the display from a user s face or multiple fingers concurrently touching or nearly touching the display or near touches e.g. blobs on the display that occur at the same time and at distinct locations in the plane of the touch panel and to produce distinct signals representative of the location of the touches on the plane of the touch panel for each of the multiple touches.

In certain embodiments of the present disclosure the device can be used to implement at least some of the methods discussed in the present disclosure.

In at least certain embodiments the device may contain components which provide one or more of the functions of a wireless communication device such as a cellular telephone a media player an entertainment system a PDA or other types of devices described herein. In one implementation of an embodiment the device may be a cellular telephone integrated with a media player which plays MP3 files such as MP3 music files.

Each of the devices shown in may be a wireless communication device such as a cellular telephone and may include a plurality of components which provide a capability for wireless communication. shows an embodiment of a wireless device which includes the capability for wireless communication. The wireless device may be included in any one of the devices shown in although alternative embodiments of those devices of B C A B C D A and B may include more or fewer components than the Wireless device .

Wireless device may include an antenna system . Wireless device may also include a digital and or analog radio frequency RF transceiver coupled to the antenna system to transmit and or receive voice digital data and or media signals through antenna system .

Wireless device may also include a digital processing system to control the digital RF transceiver and to manage the voice digital data and or media signals. Digital processing system may be a general purpose processing device such as a microprocessor or controller for example. Digital processing system may also be a special purpose processing device such as an ASIC application specific integrated circuit FPGA field programmable gate array or DSP digital signal processor . Digital processing system may also include other devices as are known in the art to interface with other components of wireless device . For example digital processing system may include analog to digital and digital to analog converters to interface with other components of wireless device . Digital processing system may include a media processing system which may also include a general purpose or special purpose processing device to manage media such as files of audio data.

Wireless device may also include a storage device coupled to the digital processing system to store data and or operating programs for the Wireless device . Storage device may be for example any type of solid state or magnetic memory device.

Wireless device may also include one or more input devices coupled to the digital processing system to accept user inputs e.g. telephone numbers names addresses media selections etc. Input device may be for example one or more of a keypad a touchpad a touch screen a pointing device in combination with a display device or similar input device.

Wireless device may also include at least one display device coupled to the digital processing system to display information such as messages telephone call information contact information pictures movies and or titles or other indicators of media being selected via the input device . Display device may be for example an LCD display device. In one embodiment display device and input device may be integrated together in the same device e.g. a touch screen LCD such as a multi touch input panel which is integrated with a display device such as an LCD display device . The display device may include a backlight A to illuminate the display device under certain circumstances. It will be appreciated that the Wireless device may include multiple displays.

Wireless device may also include a battery to supply operating power to components of the system including digital RF transceiver digital processing system storage device input device microphone A audio transducer media processing system sensor s and display device . Battery may be for example a rechargeable or non rechargeable lithium or nickel metal hydride battery. Wireless device may also include audio transducers which may include one or more speakers and at least one microphone A. In certain embodiments of the present disclosure the wireless device can be used to implement at least some of the methods discussed in the present disclosure.

In certain embodiments of the present disclosure the device can be used to implement at least some of the methods discussed in the present disclosure.

In certain embodiments of the present disclosure the laptop device can be used to implement at least some of the methods discussed in the present disclosure.

In some embodiments a platform provides various scrolling gesturing and animating operations. The platform includes hardware components and an operating system. The hardware components may include a processing unit coupled to an input panel and a memory coupled to the processor. The operating system includes one or more programs that are stored in the memory and configured to be executed by the processing unit. One or more programs include various instructions for transferring function calls or messages through an application programming interface in order to perform various scrolling gesturing and animating operations.

In an embodiment the one or more programs include instructions for transferring a bounce call through an API to cause a bounce of a scrolled region in an opposite direction of a scroll based on a region past an edge of the scrolled region being visible in a display region at the end of the scroll. In an embodiment the one or more programs include instructions for transferring a rubberband call through an API to cause a rubberband effect on a scrolled region by a predetermined maximum displacement when the scrolled region exceeds a display edge based on a scroll. In an embodiment the one or more programs include instructions for transferring a directional scroll call through an API to set a scroll angle for locking the scrolling in at least one of a vertical or a horizontal direction.

In an embodiment the one or more programs include instructions for transferring a scroll hysteresis call through an API to determine whether a user input invokes a scroll. In an embodiment the one or more programs include instructions for transferring a deceleration scroll call through an API to set a deceleration factor for a user input based on the user input invoking a scroll. In an embodiment the one or more programs include instructions for transferring a scroll indicator call through an API to determine whether at least one scroll indicator attaches to a content edge or a display edge of a display region.

In some embodiments the platform includes a framework containing a library of software code. The framework interacts with the programs of the platform to provide application programming interfaces for performing various scrolling gesturing and animating operations. The framework also includes associated resources e.g. images text etc. that are stored in a single directory.

In an embodiment the library of the framework provides an API for specifying a bounce operation to cause a bounce of a scrolled region in an opposite direction of a scroll based on a region past an edge of the scrolled region being visible in a display region at the end of the scroll. In an embodiment the library of the framework provides an API for specifying a rubberband operation that has a rubberband effect on a scrolled region by a predetermined maximum displacement when the scrolled region exceeds a display edge based on a scroll. In an embodiment the library of the framework provides an API for specifying a directional scroll operation to set a scroll angle for locking the scrolling in at least one of a vertical or a horizontal direction.

In an embodiment the library of the framework provides an API for specifying a scroll hysteresis operation to determine whether a user input invokes a scroll. In an embodiment the library of the framework provides an API for specifying a deceleration scroll operation to set a deceleration factor for a user input based on the user input invoking a scroll. In an embodiment the library of the framework provides an API for specifying a scroll indicator operation to determine whether at least one scroll indicator attaches to a content edge or a display edge of a display region.

In the foregoing specification the disclosure has been described with reference to specific exemplary embodiments thereof. It will be evident that various modifications may be made thereto without departing from the broader spirit and scope of the disclosure as set forth in the following claims. The specification and drawings are accordingly to be regarded in an illustrative sense rather than a restrictive sense.

