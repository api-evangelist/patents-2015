---

title: System design support apparatus and system design supporting method
abstract: A system design support apparatus identifies design information elements each achieving a corresponding one of multiple requirements concerning a system to be newly designed, by using a first table. When multiple design information elements are identified with respect to a certain one of the requirements as a result of the identification, the system design support apparatus identifies a design information element that establishes a combination at a higher aptitude rank among the multiple design information elements, while referring to an aptitude rank of combined use of each of the multiple design information elements and design information elements identified with respect to another requirement among the multiple requirements, by using a second table. Then, the system design support apparatus outputs the design information elements, which are identified with respect to the multiple requirements, to a predetermined device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09208184&OS=09208184&RS=09208184
owner: HITACHI, LTD.
number: 09208184
owner_city: Tokyo
owner_country: JP
publication_date: 20150218
---
The present application claims the benefit of priority pursuant to 35 U.S.C. 119 a to Japanese Patent Application No. 2014 246189 filed on Dec. 4 2014 the entire disclosure of which is hereby incorporated herein by reference.

The present invention relates to a system design support apparatus and a system design supporting method. Specifically the present invention relates to a technique for proposing a combination of system installation elements which complies with multiple requirements concerning a system to be installed and enables efficient system design and installation.

With the advent of cloud computing IT system design and installation works which have conventionally been conducted from scratch by humans based on requirements are replaced with use of patterns which are prepared in units of configurations and can be reused easily. For example there is provided a service configured to store installed virtual servers and virtual systems as templates and to allow reuse of such templates.

However when such a pattern is used it is necessary to verify by humans whether or not the pattern satisfies requirements for a system to be designed and installed if the requirements on which the pattern is based are not specified by a definite source. System analyses and tests associated with the verification works by humans consume time and effort and the above described use of the pattern may rather lead to inefficiency.

In this regard there has also been proposed a method of forming patterns in units of software components of an OS software and the like and combining those patterns as appropriate. As an example of this technique there has been proposed a software development tool see Japanese Patent Application Publication No. 2008 171318 which includes a software structural diagram editor for combining software components stored in a component database to edit a software structural diagram a software structural diagram analysis part for analyzing software structural diagram data from the editor to generate inter software component coupling information showing a statistic relation between the components and a dynamic behavior thereof and extracting a composite component contained in the software structural diagram a composite component data generation part for generating software component specification data of the composite component a composite component registration part for registering the software component specification data of the composite component with a database and a consistency verification part for verifying consistency between the components based on the inter software component coupling information and the software component specification data stored in the database.

The above described conventional technique exerts an advantageous effect in the case of a combination of software patterns and unambiguous functional requirements such as software specifications. However for a target such as an IT system in which non functional requirements e.g. performance availability and the like occupy an important role the conventional technique does not exert an advantageous effect sufficiently if it is necessary to consider a thing such as a relation between a software version and system stability for which a causal relation is difficult to show simply. Furthermore in an environment such as a cloud environment where the specifications of a service are not disclosed entirely and the software of the service has to be treated as a black box from a user s side it is necessary to introduce a technique that surpasses the existing software development techniques.

In view of the above an object of the present invention is to provide a technique for proposing a combination of system installation elements which complies with multiple requirements concerning a system to be installed and enables efficient system design and installation.

A system design support apparatus for solving the aforementioned problems includes a storage device configured to store a first table in which design information elements of a system designed in the past and requirements to be achieved by the design information elements are stored in association with one another and a second table in which aptitudes of combined use of a plurality of the design information elements included in the first table are managed with aptitude ranks assigned on the basis of track records of the combined use and a processing unit configured to identify first design information elements achieving a plurality of requirements concerning a system to be newly designed by using the first table in the storage device when a plurality of the first design information elements are identified for a first requirement among the plurality of requirements as a result of the identification to refer in the second table in the storage device to the aptitude rank of combined use of each of the plurality of the first design information elements and a design information element identified for a second requirement different from the first requirement among the plurality of requirements and thereby to identify the first design information element establishing a combination at a higher aptitude rank among the plurality of the first design information elements and to output the first design information elements thus identified for the plurality of requirements to a predetermined device.

Meanwhile a system design supporting method to be executed by an information processing apparatus provided with a storage device configured to store a first table in which design information elements on a system designed in the past and requirements to be achieved by the design information elements are stored in association with one another and a second table in which aptitudes of combined use of a plurality of the design information elements included in the first table are managed with aptitude ranks assigned on the basis of track records of the combined use. The method includes identifying first design information elements achieving a plurality of requirements concerning a system to be newly designed by using the first table in the storage device when a plurality of the first design information elements are identified for a first requirement among the plurality of requirements as a result of the identification referring in the second table in the storage device to an aptitude rank of combined use of each of the plurality of the first design information elements and any of the design information elements identified for a second requirement different from the first requirement among the plurality of requirements and thereby identifying the first design information element establishing a combination at a higher aptitude rank among the plurality of the first design information elements and outputting the first design information elements identified for each of the plurality of requirements to a predetermined device.

According to the present invention it is possible to propose a combination of system installation elements which complies with multiple requirements concerning a system to be installed and enables efficient system design and installation.

Embodiments of the present invention will be described below in detail by using the accompanying drawings. is a diagram showing an example of a network configuration including a system design support apparatus of a first embodiment. The system design support apparatus shown in is a computer which proposes a combination of system installation elements which complies with multiple requirements concerning a system to be designed and installed and enables efficient system design and installation. The system design support apparatus of the first embodiment shown as an example in is communicably coupled to a cloud system and a terminal via an appropriate network . Here among the system design support apparatus the cloud system and the terminal a system design support system may be formed at least from the system design support apparatus . In other words the system design support apparatus is an execution subject of a system design supporting method.

In the configuration shown in requirements for an IT system to be designed and installed which are inputted with the terminal by a user such as a system developer are accepted as an input and appropriately processed by the system design support apparatus . Here the terminal is a computer terminal such as a PC a tablet terminal a smartphone and a mobile telephone which allows an operator to browse and perform an operation on information provided from a pattern display editing device to be described later.

In the meantime the system design support apparatus in this configuration selects and combines IT systems e.g. various servers and the like to be mounted on a cloud service which are patterned on the basis of design information elements namely past design information accumulated in a pattern management database as appropriate in accordance with the above mentioned requirements and deploys the IT systems on the cloud system .

The above mentioned cloud system includes server devices and the like which offer cloud services via the Internet. The cloud system offers virtualized functions such as a software function a platform function and a hardware function through the network according to the needs of a user. The offered functions include a PaaS Platform as a Service a SaaS Software as a Service an Iaas Infrastructure as a Service and so forth. In the first embodiment a situation where the cloud system offers for instance the PaaS namely the platform function for execution of various applications including a virtualized WEB server a virtualized application server a virtualized database server and the like through the network is assumed as an example.

The system design support apparatus in the first embodiment mounts the pattern display editing device a pattern search device a pattern integration device and a pattern execution device . While these devices may be realized as hardware a typical mode assumable is to mount these devices as functions included in the system design support apparatus by way of executing programs provided to the system design support apparatus .

Among these devices the pattern display editing device has functions to provide the above mentioned terminal with input and output interfaces including GUI Graphical User Interface API Application Programming Interface CLI Command Line Interface and the like and to accept given input and output operations concerning combinations of requirements and patterns and the like via the interfaces. The above mentioned terminal serves as a terminal which causes the user to execute browsing of and operations using the information via the interfaces provided from the pattern display editing device .

Meanwhile the pattern search device has a function to search the pattern management database for appropriate patterns on the basis of the requirements inputted from the terminal .

In the meantime the pattern integration device has a function when multiple patterns are identified in terms of a certain one of the requirements as a result of the pattern search conducted by the pattern search device described above to identify a pattern that achieves a combination at a higher aptitude rank from multiple design information elements by referring to an aptitude rank of combined use of each of the multiple patterns and a pattern identified in terms of another one of the requirements except the certain requirement in a pattern combination table to be described later of the pattern management database .

Meanwhile the pattern execution device has functions to determine that the pattern representing a processing result by the pattern search device and the pattern integration device is deployable and to deploy the pattern on the cloud system .

The system design support apparatus that implements the above described functions has a hardware configuration as shown in . The system design support apparatus in includes a storage device formed from an appropriate non volatile storage element such as an SSD solid state drive and a hard disk drive a memory formed from a volatile storage element such as a RAM a processing unit such as a CPU which executes a program held in the storage device by reading the program out to the memory and the like performs integrated control of the apparatus itself and performs various judgments operations and control processing an output device such as a display device which displays processing data and a communication device which is coupled to the network and handles communication processing with other devices. Here in addition to the program for implementing the functions required as the system design support apparatus of this embodiment a pattern management database storing a creator management table a requirement pattern table a requirement definition table a pattern definition table and the pattern combination table is at least stored in the storage device . A specific example of a data configuration of this pattern management database will be described later.

Next a specific configuration example of the pattern management database used by the system design support apparatus of the first embodiment will be described. is a diagram showing a first example of the tables included in the pattern management database of the first embodiment.

The pattern management database shown as the example in is a database designed to manage information on requirements of IT systems previously designed and installed and on patterns hardware applications and the like to be mounted on the cloud services adopted for achieving the requirements. The pattern management database is formed from the following tables. Specifically the pattern management database includes the requirement definition table which manages requirements to be registered with the pattern management database the pattern definition table which manages patterns to be registered with the database the requirement pattern table which manages relations between the requirements and the patterns mentioned above and the creator management table which manages creators who register the relations between the requirements and the patterns mentioned above. Besides the pattern management database also includes the pattern combination table which will be described later.

Among the above described tables the requirement definition table is an aggregate of records where each record uses a requirement ID being an identifier unique to a requirement as a key and associates values of a requirement name indicating a defined name of the requirement a requirement achievement standard representing a benchmark to be satisfied as the requirement a requirement level indicating a relative achievement standard strictness between requirements and an explanation indicating a specific explanation of the requirement with one another. Among them the requirement ID and the requirement achievement standard are required values.

Meanwhile the pattern definition table is an aggregate of records where each record uses a pattern ID being an identifier unique to a pattern as a key and associates values of a pattern name indicating a defined name of the pattern a pattern classification indicating a category to which the pattern belongs or a granularity of the pattern such as an OS a Web server and a Web three tier system a template reference representing an actual condition of the pattern to be deployed on the actual cloud system in relation to the contents registered as the pattern a user count representing the number of users of the pattern an average rating representing an average of ratings of the pattern given by the users of the pattern a pattern level indicating relative quality standard strictness of the pattern and an explanation which is a specific explanation of the pattern with one another. Among them the pattern ID the pattern name the pattern classification the user count the average rating and the pattern level are required values.

In the meantime the requirement pattern table is an aggregate of records where each record uses a relation ID being a unique identifier representing a relation between each requirement registered with the requirement definition table and each pattern registered with the pattern definition table mentioned above as a key and associates values of a relational expression indicating a relationship between the requirement and the pattern a registration request count indicating how many times a registration request corresponding to the combination in the table is issued from the terminal a usage count indicating how many times the relationship is used an explanation which is a specific explanation of the relation a creator representing a creator of the relation and date and time of creation which is date and time when the relation is created with one another. Among them the relation ID the relational expression the registration request count and the usage count are required values.

An example shown in can be assumed as a concrete image of the above mentioned relational expression . is a logical relationship diagram showing relations between the requirements and the patterns in the first embodiment. Here a requirement is defined as a requirement of a system configuration formed from a Web server an AP server and a DB server. A requirement is defined as a requirement concerning a performance of the Web server. A requirement is defined as a requirement of a program processable by the AP server. A requirement is defined as availability of the DB server. In addition a set of patterns including a pattern corresponding to the Web server a pattern corresponding to the AP server and a pattern corresponding to the DB server are assumed to be present as patterns that satisfy all of the requirements to .

Based on the above mentioned premise the requirement is a combination of the pattern the pattern and the pattern . Accordingly this relation is expressed as R is satisfied by P and P and P . 

Likewise a relation between the requirement and the pattern can be expressed in the form of R is satisfied by P . 

On the other hand the pattern has to be the one that meets P can satisfy R and R . Accordingly the system design support apparatus selects a pattern that satisfies this condition from the pattern management database . In the first embodiment each set of the requirement and the patterns has been acquired when a certain pattern corresponding to a certain system configuration was confirmed to satisfy a certain requirement on the occasion of system design and installation in the past and the relationship has been registered with the requirement pattern table of the pattern management database .

Meanwhile the creator management table is an aggregate of records where each record uses a creator ID being an identifier unique to a person registering a requirement and a pattern with the pattern management database as a key and associates values of an organization name representing an organization to which the creator belongs a name representing the name of the creator an assignment representing the creator s assignment to the organization a position representing the creator s position in the organization and contact information representing contact information of the creator with one another. Note that the creator management table is not a part of the essential configuration. However if the above described information on the creator e.g. the assignment the position and the like which correlate with experiences and skills is additionally displayed as information on the person related to the requirements and the patterns included in outputted contents when the system design support apparatus outputs such a result of processing the information suitably forms the basis for determining appropriateness of the pattern or the combined use thereof.

In the following actual procedures of a system design supporting method of this embodiment will be described with reference to the drawings. Operations corresponding to the system design supporting method described below are implemented by the program which is read out to the memory and the like and executed by the system design support apparatus . Moreover the program includes codes for performing various operations to be described below.

Here it is assumed that the user who wishes to register information on a requirement and a pattern concerning an IT system already designed and installed operates the terminal to access the system design support apparatus thereby starting registration processing.

In this case the above mentioned terminal accepts an input of the set of the requirement and the pattern by the user through the input device and transmits a registration request including the accepted information to the system design support apparatus via the network step .

Meanwhile the pattern display editing device of the system design support apparatus accepts the requirement and the pattern indicated in the above mentioned registration request steps via the appropriate interfaces and the like provided to the terminal and notifies the pattern integration device of the requirement and the pattern steps .

In this case the pattern integration device executes a search in the pattern management database by using the requirement notified from the above mentioned pattern display editing device as a key. When an identical requirement that has already been registered is not present the pattern integration device registers the requirement with the requirement definition table of the pattern management database step . Likewise the pattern integration device executes a search in the pattern management database by using the pattern notified from the above mentioned pattern display editing device as a key. The processing proceeds to step when an identical pattern that has already been registered is present step Y . On the other hand the processing proceeds to step when the identical pattern that has already been registered is not present step N .

Here if there are no restrictions regarding a method of describing the set of the requirement and the pattern to be accepted from the user by the terminal a search performance concerning the information after the registration with the pattern management database is deteriorated. For this reason as described in reference to the steps and above the pattern integration device which executes the registration processing of the requirement on the basis of the above mentioned registration request is preferably configured to perform the searches as to whether or not the same or similar requirement and pattern have already been registered with the pattern management database so as to avoid duplicate registration of the same requirement and pattern with the pattern management database . Of this processing the registration processing of the requirement the above described step will be cited as an example and details of the example will be shown below on the basis of .

In this situation the registration request including the information on the requirement and the pattern is transmitted from the terminal to the pattern display editing device . Having accepted the registration request the pattern integration device reads the list of requirements held in the above mentioned step from the storage device and sends the list back to the terminal for display step . Here the exchange of the information between the terminal and the pattern integration device is supposed to be relayed by the pattern display editing device . However for the sake of simplifying the descriptions the relay processing by the pattern display editing device will be omitted in the following descriptions the same applies hereinafter .

In the meantime the terminal displays the above mentioned list of requirements on an output device to make the list available for inspection by the user . The user checks whether or not the list of requirements includes the requirement that the user wishes to register. If the appropriate requirement is present in the list the user inputs an achievement standard of the requirement by using the terminal . At this time the terminal accepts a value of the achievement standard concerning the requirement designated by the user step . For example if the requirement that the user wishes to register is a response performance by the Web server to a HTTP request then an average within 3 seconds or the like corresponds to the achievement standard. Accordingly the user in this case selects and inputs the average within 3 seconds representing the achievement standard by using the terminal . The pattern integration device preferably causes the terminal to additionally display a selection list for the achievement standard corresponding to the requirement depending on a selection event of the requirement from the above mentioned list of requirements. In this case the user selects the achievement standard from the selection list by using the terminal .

On the other hand if the requirement that the user wishes to register is not present in the above mentioned list of requirements the user inputs the requirement name and explanation of the requirement by using the terminal . The terminal accepts the input concerning the requirement name and the explanation of the requirement and transmits the requirement name and the explanation of the requirement to the pattern integration device step .

The pattern integration in this case accepts the above mentioned information on the requirement name and the explanation of the requirement and searches the pattern management database thereby checking whether or not the requirement having the same explanation has been registered step . The way of the above described search inclusive of the explanation of the requirement as the key deals with an intention to check whether or not the requirement has actually been registered with and present in the pattern management database on the basis of the explanation of the requirement in the case where it is difficult to identify the requirement on the basis of the requirement name alone. For instance in the above described example it is assumed that the requirement envisaged by the user as the one that the user wishes to register is a service level concerning an inquiry of the Web server and its achievement standard is an average HTTP response within 3 seconds. Meanwhile if the requirement definition table of the pattern management database registers the average within 3 seconds as the value of the requirement achievement standard or the explanation concerning the requirement which is the response performance by the Web server to a HTTP request then the value is deemed to be almost equivalent to the achievement standard intended by the user .

If a similar value is present step Y as a result of the above described check the pattern integration device sends the terminal a notification to seek confirmation by the user step . On the other hand if such a similar value is not present step N the pattern integration device executes the registration of the appropriate requirement with the pattern management database as a new requirement step .

Having received the notification seeking the above mentioned confirmation the terminal displays the notification on the display device and causes the user to view the notification. The user investigates whether or not the requirement presented by the pattern integration device is identical to the requirement intended by the user and inputs a result of investigation by using the terminal . In this case the terminal accepts the result of investigation by the user and sends the result back to the pattern integration device step .

Having received the result the pattern integration device executes registration step of the appropriate requirement with the pattern management database as the new requirement if the result of investigation represents not identical step N . On the other hand when the result of the investigation represents identical step Y the pattern integration device selects the appropriate requirement from the list of requirements step and terminates the flow.

Now the description goes back to the flow of . Subsequent to the above described registration of the requirement steps to the pattern integration device executes the registration processing of the pattern received from the above mentioned pattern display editing device step . In step the pattern integration device searches the pattern management database for the pattern inputted through the terminal thereby checking whether or not the same pattern as the inputted pattern has been registered with the pattern management database .

Here concrete images of patterns to be registered or which are registered with the pattern management database are demonstrated. is a diagram showing a configuration example of patterns in the first embodiment. Both of a pattern and a pattern shown as examples in are patterns compatible with the configuration of the Web server. For example the pattern configures the Web server in which Apache registered trademark is installed on its OS and includes a construction representing a relation of a part which is a constituent of the pattern an Apache configuration representing a setting of Apache installed thereon and an OS configuration representing a setting of the OS. Here required components and respectively contained in the construction the Apache configuration and the OS configuration each indicate a precondition of a part required by the corresponding constituent. For example the required component is the precondition of the OS and therefore includes such a definition as to which hypervisor which network configuration or which operation is supposed to be a destination of a deployment of this pattern.

Meanwhile the pattern is similar to the above described pattern but further includes a PHP configuration representing a setting of a PHP which is mounted for a function to dynamically create a Web page.

Each of the required components contained in the patterns and may be classified into necessity levels as the precondition such as MUST which means absolutely necessary and OPTIONAL which means may be provided . Each of the patterns cited herein may employ an arbitrary method of description as long as the method applies a computer processable language such as XML and YAML because a difference in the method of description does not affect advantageous effects of the present invention. In the meantime as the method of describing the patterns it is only necessary to employ a method which is capable of defining types of parts including the OS and the software as well as describing settings thereof and similarly defining types concerning relations of the parts as well as describing setting thereof. TOSCA which is an OASIS standard OVF which is a DMTF standard or the like corresponds to such a description method.

Identity between the patterns such as the pattern and the pattern shown as the examples in is checked in the above described processing in step . Here the expression identical patterns is equivalent to the fact that an identical IT system can be reproduced when the contents defined by the pattern are mounted on the cloud service. Accordingly if there is a single different part or parameter when the patterns are compared to each other then the same IT system cannot be reproduced by mounting the patterns respectively. Hence the patterns are not deemed identical in this case. When the patterns and shown as the examples in are compared to each other the two patterns are deemed to be not identical because of the presence of the PH configuration . Needless to say differences between the contents of the required components respectively contained in the patterns and also constitute criteria for determining the identity. Nevertheless if the required parts are different only in the order of description whereas the contents thereof are the same then the patterns are deemed to be identical since these patterns reproduce the same IT system provided that there is no restriction which depends on the order of description .

As a result of the above described step when it is determined that the identical pattern is not present in the pattern management database step N the pattern integration device proceeds the processing to step and executes processing for new registration of the pattern. In this embodiment there is a case where a use relationship exists between the patterns. Accordingly by managing track records of not only the patterns alone but also combinations of the patterns establishing the use relationships it is possible to reduce test man hours when the system is designed and installed by combining multiple patterns. This is based on the fact that a large amount of man hours are required in association with design changes and updates of parts without conducting the management at a granularity increased to some extent when reusability and maintainability of the parts are taken into consideration. For example an update of an OS occurs in the case of a pattern including the OS DB software and Web server software the entirety of the pattern has to be reviewed. Accordingly if there is another pattern in which only the Web server software is different it is difficult to apply a result of review of the OS and the DB software included in the former pattern because these patterns are different from each other. In this embodiment however when increasing the granularity in terms of the pair of the OS and the DB the pair of the OS and the Web server and so forth then it is possible to rate the relations between the parts as the track records. Accordingly if there is a certain pattern having a high rating as a track record concerning the relation between the updated OS and the DB then it is easier to review a complicated pattern by applying the setting of the certain pattern thereto.

In step the pattern integration device compares the inputted pattern with the patterns in the pattern management database . When the pattern management database includes the pattern having the same functional blocks the pattern integration device defines the relation between these patterns as excess and registers the relation with the pattern combination table to be described later of the pattern management database step . Here the expression having the same functional blocks means having the constituents the parts of the same type definition. For example a pattern including the OS the Web server and the DB and a pattern including the OS and the Web server both have the same functional blocks namely the OS and the Web server. Hence the relation between these patterns is registered as excess with the pattern combination table . For example if two patterns having a use relationship with regards to the requirements for a certain IT system share the same functional blocks or in other words when the relation between the patterns is defined as excess there is a risk of causing trouble or inefficiency at the time of mounting which is attributed to a contradiction or a functional overlap between the patterns.

The pattern integration device performs the confirmation processing in the above described step in a similar manner concerning other patterns received from the terminal . Then the pattern integration device checks whether the inputted pattern and each of the patterns in the pattern management database can be coupled to each other or in other words whether the patterns establish a use relationship. When the patterns can be coupled to each other the relation between the patterns is defined as stone which is registered with the pattern combination table step . The determination as to whether the patterns can be coupled to each other is made on the basis of whether a required component contained in any of the patterns enables coupling between one of the patterns and the other pattern or whether the required component requires such coupling.

The pattern integration device performs the confirmation processing in the above described step in a similar manner concerning other patterns received from the terminal . Then the pattern integration device registers the remaining patterns among the inputted patterns as short with the pattern combination table step . However when an increase in the number of the patterns is anticipated and there is a need to reduce the data size of the pattern management database the pairs of the patterns without definitions of relationships may be regarded as short. The definition short indicates a relation of the patterns which cannot be directly coupled to each other i.e. a relation which cannot directly establish the use relationship. For example a pattern including the Web server or an application execution framework such as Java and php needs to be interposed between the patterns of the OS and a Web application. In this case the patterns are regarded as not directly linking each other.

Subsequently the pattern integration device executes a search for a combination in the pattern management database which is identical to the combination of the inputted requirement and pattern. If there is not the identical pattern therein the pattern integration device registers the combination with the requirement pattern table of the pattern management database as a new relationship between the requirement and the pattern. After completion of the above described series of processing the pattern integration device returns a registration completion notification to the terminal step . In the meantime the terminal receives this registration completion notification and displays the registration completion notification on the display device step and then terminates the processing.

Relations among the patterns can be expressed as shown in the pattern combination list by using the pattern name the pattern name and the application track record described above as well as the pattern classification described in the pattern definition table . Characters including excess gold and the like described in this matrix each represent the corresponding application track record described above. A specific configuration of the application track records is as shown in . illustrates relations among eight types of the application track records. The application track records shown as the example in includes a stone representing that the combination of the corresponding patterns turns out to be possible in light of the specifications thereof a bronze pattern corresponding to a track record indicating that at least one user succeeds in the deployment and operation a silver pattern having ten or more users and acquiring high ratings and a gold pattern having a hundred or more users and acquiring high ratings. In the meantime a supported pattern means that the combination is assured by a provider of the patterns irrespective of the number of users. Meanwhile an anti pattern represents a combination of the patterns which is described in the specifications but is actually infeasible. Moreover the aforementioned excess and the short are also included in this category. By using the above described pattern combination list it is possible to check whether or not one pattern and another pattern can be used in combination.

Next a description will be provided for processing to perform identification of a pattern which achieves each requirement and identification of a pattern in accordance with an aptitude of combined use of patterns when multiple patterns are identified with respect to a certain requirement in accordance with the system design supporting method of this embodiment and on the basis of the requirements of an IT system to be designed and installed.

Having accepted the requirements the pattern search device searches the pattern management database based on the requirements inputted through the terminal thereby searching the requirement pattern table for the patterns that achieve the requirements step . As a result of the search when a set of the patterns satisfying all the requirements designated by the terminal is found step Y the pattern search device returns information on the patterns identified in the above described search to the terminal without attaching any flag to the information step and suggests the appropriate patterns to the user .

On the other hand as a result of the above described search in step if a pattern which achieves any of the requirements inputted by the terminal is not successfully searched or if any of the requirements is not satisfied step N the pattern search device searches the requirement pattern table again by expanding the scope of the achievement standard to the extent including a standard stricter than the corresponding achievement standard of the requirement inputted by the terminal step . For example if an achievement standard of one of the requirements inputted by the terminal concerns a processing speed and defines an average response speed equal to or below 3 seconds then the pattern search device searches the requirement pattern table for a pattern including one which achieves a higher processing speed than the average response speed equal to or below 3 seconds e.g. an average response speed equal to or below 1 second .

As a result of this search when a set of the patterns satisfying all the requirements designated by the terminal is found step Y the pattern search device returns the newly identified patterns as a consequence of tightening the achievement standards of the requirement in the above described step to the terminal while attaching a flag over spec thereto step and suggests the appropriate patterns to the user .

On the other hand as a result of the search if any of the requirements designated by the terminal is not satisfied step N the pattern search device searches the requirement pattern table again by including patterns which achieve a standard laxer by a certain degree e.g. having a value laxer by 30 than the corresponding achievement standard of the requirement inputted by the terminal step . For example if the achievement standard of one of the requirements inputted by the terminal concerns the processing speed and defines the average response speed equal to or below 3 seconds then the pattern search device searches the requirement pattern table for a pattern including one which achieves a lower processing speed than the average response speed equal to or below 3 seconds e.g. an average response speed equal to or below 5 seconds .

As a result of this search when a set of the patterns satisfying all the requirements designated by the terminal is found step Y the pattern search device returns the newly identified patterns as a consequence of loosening the achievement standard of the requirement in the above described step to the terminal while attaching a flag under spec thereto step and suggests the appropriate patterns to the user .

On the other hand as a result of the search if any of the requirements designated by the terminal is not yet satisfied step N even after loosening its achievement standard the pattern search device returns the corresponding requirement to the terminal while attaching a flag no pattern thereto step . Then the pattern search device terminates the processing.

Here as for an arrangement sequence of the patterns identified in the above described steps and e.g. an arrangement sequence of display positions of the patterns in the information to be returned from the pattern search device to the terminal a pattern having a smaller difference from the achievement standard which is inputted by the terminal of one of the requirements or a pattern having a higher track record has a priority. Here the arrangement sequences of the patterns are defined by the following expressions.

 When the requirements and the patterns inputted by the terminal coincide with those searched in the requirement pattern table Arrangement sequence point the track record of the pattern Expression 1500 .

 When the pattern having the achievement standard stricter than that of the requirement inputted by the terminal is identified Arrangement sequence point the track record of the pattern the achievement standard of the requested requirement the achievement standard of the requirement associated with the identified pattern the achievement standard of the requested requirement Expression 1510 .

 When the pattern having the achievement standard laxer than that of the requirement inputted by the terminal is identified Arrangement sequence point the track record of the pattern the achievement standard of the requested requirement the achievement standard of the requirement associated with the pattern the achievement standard of the requested requirement Expression 1520 .

Here the track record of the pattern is rated by defining gold 1.3 supported 1.0 silver 0.7 bronze 0.5 stone 0.2 excess 0.1 and other 0 for example. These computational expressions and the point allotment may be changed depending on a system which applies the computational expressions and the point allotment.

After recognizing the patterns identified by the search on the terminal the user executes the deployment by actually combining the patterns thereby installing a desired IT system on the cloud service. The processing associated with the deployment will be described below.

In this case the terminal accepts the instruction concerning the above mentioned combination of the patterns and transmits the instruction to the pattern integration device of the system design support apparatus step . In this example it is assumed that the terminal displays the information on the patterns transmitted from the system design support apparatus in step and the like in the above described flow in as a list of the patterns on the given GUI. Moreover it is assumed that the terminal accepts a judgment and an instruction from the user as to which pattern e.g. the Web server on the list of the patterns is to be coupled to which pattern e.g. the DB server thereon.

Meanwhile the pattern integration device confirms whether or not the combination of the patterns designated by the terminal is actually suitably couplable i.e. available and returns a result of confirmation to the terminal step . In this processing the pattern integration device performs rating of each combination of patterns of an original element to be coupled and a counterpart element to be coupled which are designated by the terminal while using the pattern combination list . In this rating the pattern integration device presumably performs judgment by selectively using any one of the expression 1500 the expression 1510 and the expression 1520 described above on the basis of a flag associated with the combination of the patterns in order to evaluate an aptitude i.e. appropriateness of each combination of the patterns.

For example regarding a combination of a pattern A concerning the Web server and a pattern B concerning the DB server in the pattern combination list the pattern integration device adopts the expression 1500 when no flags are provided to any of the patterns and derives 0 which is a value of the track record of the pattern short i.e. other. Likewise regarding a combination of the pattern A concerning the Web server and a pattern D concerning the DB server in the pattern combination list the pattern integration device adopts the expression 1500 when no flags are provided to any of the patterns and derives 0.5 which is a value of the track record of the pattern bronze. Meanwhile regarding a combination of a pattern B concerning the Web server and the pattern D concerning the DB server in the pattern combination list if the under spec flag is provided to the pattern B while the achievement standard of the requirement that is required concerning the Web server is set to 3 and the achievement standard of the requirement related to the pattern B is set to 5 then the pattern integration device adopts the expression 1520 in accordance with the under spec flag and calculates the value of the track record of the pattern gold 1.3 3 5 3 1.3 0.67 0.63. Meanwhile regarding a combination of the pattern B concerning the Web server and the pattern E concerning the DB server in the pattern combination list if the under spec flag is provided to the pattern B while the achievement standard of the requirement that is required concerning the Web server is set to 3 and the achievement standard of the requirement related to the pattern B is set to 5 then the pattern integration device adopts the expression 1520 in accordance with the under spec flag and calculates the value of the track record of the pattern silver 0.7 3 5 3 0.7 0.67 0.03. The pattern integration device identifies that any of the combinations of the patterns having the derived value equal to or above a predetermined reference value e.g. 0.6 as being actually couplable and returns a result of identification to the terminal . According to the above described example concerning the Web server and the DB server the pattern integration device identifies that the combination of the pattern B and the pattern D as a preferred combination and returns this information to the terminal . Here the above mentioned reference value is preferably equal or above 1.0 for example. However the reference value may be set as appropriate depending on the intended use and the like of the IT system to be designed and installed.

Meanwhile instead of performing the verification processing concerning the availability of the combinations of the patterns by using the expressions as described above the availability may be evaluated only on the basis of the track records registered with the pattern combination list concerning the corresponding combinations i.e. on the values of gold 1.3 supported 1.0 silver 0.7 bronze 0.5 stone 0.2 excess 0.1 and other 0 naturally the availability is superior as the value is larger .

On the other hand having received the result of confirmation concerning the availability regarding the combination of the designated patterns mentioned above from the pattern integration device the terminal displays the result of confirmation on the output device and accepts a final instruction from the user as to whether or not the deployment is to be executed step . Here it is assumed that the user judges to execute the deployment in accordance with the relevant combination of the patterns and inputs the instruction as such by using the terminal .

In this case the terminal accepts the instruction to execute the deployment step Y and notifies the pattern execution unit of the instruction step . Having received the notification via the pattern integration device the pattern execution device executes the deployment of the patterns designated by the terminal on the cloud system in accordance with a predetermined algorithm procedures predetermined by a provider of the cloud service and the like step .

When the deployment is actually executed successfully without causing any problems such as occurrence of an error step Y the pattern integration device which receives a notification as such from the pattern execution device counts up the value of the deployment success track record for the corresponding record of the combination in the pattern combination table step . Meanwhile if there is still another combination to be deployed then the user instructs as such by using the terminal and the processing is executed again from the above mentioned step step .

On the other hand when the above described pattern execution device fails in the deployment processing on the cloud system step N the pattern integration device which receives a notification as such from the pattern execution device counts up the value of the deployment failure track record for the corresponding record of the combination in the pattern combination table step and notifies the terminal of the failure in the deployment step . Having received the notification the terminal displays the failure in the deployment concerning the corresponding combination of the patterns accepts an instruction from the user concerning a new combination step and returns the processing to the above described step .

As a consequence of the series of the operations the patterns corresponding to the requirements are deployed on the cloud system and the system thus mounted is used by the above mentioned user . Using the terminal the user inputs the rating determined in accordance with the use of the system. Meanwhile the terminal accepts the input of the rating step and registers the rating with the average rating in the record for of corresponding combination in the pattern combination table step . The rating is registered on a ten point scale for example. Here a case where the system is recommended as the best practice is rated . A case where the system can be used continuously without a change is rated . A case where it is possible to determine that there is an effect of patterning although changes in some items are involved is rated . A case where man hours for designing are not substantially changed as a result of patterning but there is an effect as a whole such as in light of installation is rated . A case where overall man hours are increased by contraries is rated . The above mentioned allotment of rates may be changed depending on a system applying the rating. In conjunction with this change the pattern integration device may change the value of the application track record in the pattern combination table step .

By using the system design supporting technique described above the user can reduce labor and cost for verification work concerning the combinations of the patterns by using the past track records in the situation where the multiple patterns are selected on the basis of multiple requirements.

The above described first embodiment is applicable to both an on premise system and a cloud system. Meanwhile a case of performing a combination of patterns particularly in accordance with characteristics of a cloud system will be described below as a second embodiment. As described in the first embodiment a cloud service is defined as a method in which a provider provides various resources such as hardware and software to be equipped on the cloud system to a user as a service. Detailed specifications on a framework side of such a cloud service are not always disclosed to the user side. In the meantime specifications of the cloud services may be changed without being disclosed. Accordingly on the assumption that the above described patterns are deployed on the cloud system it is also necessary to define a relationship between the patterns and the cloud service.

The pattern management database of the second embodiment further includes a service definition table and a service pattern table . Of the tables the service definition table is an aggregate of records where each record uses a service ID being an identifier unique to a cloud service as a key and associates values of a service name indicating a defined name of the cloud service a service offering standard representing a benchmark to be offered as the cloud service a service level indicating relative offering standard strictness of the cloud service and an explanation indicating a specific explanation of the cloud service with one another.

In the meantime the service pattern table is an aggregate of records where each record uses a relation ID being a unique identifier representing a relation between each pattern defined in the pattern definition table and each cloud service defined in the service definition table as a key and associates values of a relational expression indicating a relationship between the cloud service and the pattern a registration request count indicating how many times a registration request corresponding to the combination is issued from users a usage count indicating how many times the relationship is used an explanation which is a specific explanation of the relation a creator who is a creator of the relation and date and time of creation which is date and time when the relation is created with one another.

Subsequently procedures of a system design supporting method to be executed by the system design support apparatus of the second embodiment including the above described pattern management database will be described. is a flowchart showing a first procedural example of the system design supporting method of the second embodiment. Specifically is a flowchart in the case of registration of the relation between the cloud service and the pattern.

Here a situation is assumed in which the user having enough knowledge about the cloud services performs registration of a pattern used for designing and installing a system with the pattern management database inclusive of a relationship of the pattern with the cloud service as a deployment platform.

In this case the terminal accepts information concerning a set of the pattern and the cloud service inputted by the above mentioned user and transmits the information to the system design support apparatus together with a registration request step .

Meanwhile the pattern display editing device of the system design support apparatus accepts the information on the pattern and the cloud service indicated in the above mentioned registration request steps via the appropriate interfaces and the like provided to the terminal and notifies the pattern integration device of the pattern and the cloud service steps .

In this case the pattern integration device executes a search in the service definition table by using the information on the cloud service notified from the above mentioned pattern display editing device e.g. the information such as the ID and the name of the cloud service designated by the user as a key. Thus among the cloud services registered with the service definition table the pattern integration device selects a cloud service having the values of the corresponding items in the service ID and the service name which coincide with the above mentioned search key step . Here each of the cloud services is assumed to be registered in advance with the service definition table of the pattern management database .

The contents of the processing in steps to in are the same as those in the flow of the pattern registration in . Accordingly the descriptions of these steps are omitted herein.

Next in step the pattern integration device searches the service pattern table for the combination of the cloud service selected in the above described step and the corresponding pattern which undergoes the processing in steps to . If the identical combination is not registered yet the pattern integration device executes the registration step .

After completion of the above described series of processing the pattern integration device returns a registration completion notification to the terminal step . In the meantime the terminal receives this registration completion notification and displays the registration completion notification on the display device step and then terminates the processing.

Next details of processing for selecting a pattern in response to an input of a requirement in the second embodiment will be described. is a flowchart showing a second procedural example of the system design supporting method of the second embodiment. Specifically shows a flowchart in the case of selecting a pattern on requirements of the IT system to be newly designed and installed after the combination of the cloud service and the pattern has been registered as described above.

In the flow shown as an example in the steps from the search for the pattern using the requirement to the identification of the pattern are the same as those in the flow of . However the steps in which the pattern search device searches the service pattern table for the cloud service on which the identified pattern is deployable and notifies the terminal of the searched cloud service via the pattern display editing device are adapted to the second embodiment and are different from those in the flow of in the first embodiment steps .

By executing steps and the user operating the terminal can clearly and easily recognize on which cloud service the patterns for the IT system that the user intends to design and install are deployable. For this reason this embodiment also provides an effect that it is easier to perform arbitrary selection of infrastructure i.e. selection of the cloud service on the basis of an appropriate condition such as a security policy of an organization to which the user belongs.

Note that the processing associated with the deployment in the second embodiment is the same as the processing described on the basis of in the first embodiment. Accordingly the descriptions of the processing will be omitted.

Although the best modes for carrying out the present invention and the like have been specifically described above the present invention is not limited only to the foregoing and various modifications are possible within a range not departing from the scope of the invention.

According to the above described embodiments in a situation of system development based on patterns on cloud services for example it is possible to avoid a situation where a pattern matching a system requirement requested by a customer cannot be found or in contrast a situation where too many patterns matching the requirement are found and it is therefore uncertain which one should be selected. Furthermore it is possible to effectively reduce man hours for retesting and redesigning by humans concerning installed systems.

In other words the present invention can propose a combination of system installation elements which complies with multiple requirements concerning a system to be installed and enables efficient system design and installation.

The descriptions of the specification clarify at least the following features. Specifically a system design support apparatus according to any of the embodiments may be designed such that the storage device is configured to store the first table in which each of the design information elements on the system designed in the past the requirement achieved by the design information element and a use track record of the design information element are stored in association with each other and during processing to identify the first design information elements achieving the plurality of requirements the processing unit identifies the first design information element achieving each of the plurality of requirements on the basis of a magnitude of the use track record by using the first table in the storage device.

According to the above described features it is possible to propose to the user the design information element having a high use track record among the design information elements complying with the requirement i.e. the design information element which has been used many times and proven to be capable of installing and operating the system that satisfies the requirement without causing any problems.

Meanwhile the system design support apparatus according to any of the embodiments may be designed such that as a consequence of the processing to identify the first design information elements each achieving the corresponding one of the plurality of requirements if for a third requirement among the plurality of requirements the processing unit fails to identify the first design information element achieving the third requirement and having the use track record equal to or above a predetermined standard the processing unit further executes processing to modify a definition indicated in the third requirement within a predetermined range to establish a fourth requirement and identify a first design information element achieving the fourth requirement and having the use track record equal to or above the predetermined standard by using the first table.

According to the above described features it is possible to select and propose the design information element which satisfies the requirement loosened to the extent that does not cause a practical problem and thus to achieve more realistic and efficient system design and installation.

In the meantime the system design support apparatus according to any of the embodiments may be designed such that in the second table the storage device manages the aptitudes of the combined use of the plurality of the design information elements included in the first table with the aptitude ranks each assigned by using as the track record of the combined use information on a degree of change in any of the design information elements required due to the combined use and during processing to identify the first design information element establishing the combination at the higher aptitude rank among the plurality of the first design information elements the processing unit refers in the second table in the storage device to the aptitude rank of the combined use of each of the plurality of the first design information elements and any of the design information elements identified for the second requirement among the plurality of requirements eliminates a first design information element establishing the combination which has the aptitude rank equal to or below a predetermined standard and which involves the degree of change in the design information elements outside an allowable range and identifies the first design information element establishing the combination at the higher aptitude among the plurality of the first design information elements.

According to the above described features it is possible to take into account a case where the combined use of the design information elements which did not have any problem in light of the aptitude for the requirement has in fact incurred significant additional man hours in an attempt of a deployment on an actual system for operation. Hence it is possible to perform selection after eliminating in advance the combination of the design information pieces which has a practical problem. In this case the user can recognize the appropriate design information elements for the system design and properly use the design information elements without being misled by a superficial aptitude for the requirement.

Meanwhile the system design support apparatus according to any of the embodiments may be designed such that in the second table the storage device manages the aptitudes of the combined use of the plurality of the design information elements included in the first table with the aptitude ranks each assigned by using as the track record of the combined use information on a degree of change in any of the design information elements required due to the combined use and during processing to identify the first design information element establishing the combination at the higher aptitude rank among the plurality of the first design information elements the processing unit refers in the second table in the storage device to the aptitude rank of the combined use of each of the plurality of the first design information elements and any of the design information elements identified for the second requirement among the plurality of requirements and if the processing unit fails to identify the first design information element establishing the combination at the aptitude rank equal to or higher than a predetermined rank among the plurality of the first design information elements identifies the first design information element establishing the combination at the higher aptitude rank among a plurality of first design information elements each establishing another combination which has the aptitude rank within a predetermined range lower than the predetermined rank and which involves the degree of change in the design information elements within an allowable range and during processing to output the identified design information elements to the predetermined device the processing unit further outputs information indicating that an additional design information element is required for using the design information elements identified as establishing the other combination.

According to the above described features it is possible to take into account a case where the combined use of the design information elements which did not have any problem in light of the aptitude for the requirement has in fact incurred additional man hours in an attempt of a deployment on an actual system for operation to the extent tolerable relative to an effect of improvement in efficiency which can be obtained by reusing the design information elements. Hence it is possible to propose to the user the combination of the design information elements that promises a certain level of improvement in efficiency although the combination are likely to require some additional man hours. In this case the user can recognize the design information elements that promise a certain level of improvement under a situation where it is not possible to obtain the design information elements with the aptitude as well as the use track record at the top level and properly use the design information elements.

In the meantime the system design support apparatus according to any of the embodiments may be designed such that during processing to identify the first design information element establishing the combination at the higher aptitude rank among the plurality of the first design information elements the processing unit refers to in the second table in the storage device the aptitude rank of the combined use of each of the plurality of the first design information elements and any of the design information elements identified for the second requirement among the plurality of requirements and if the processing unit fails to identify the first design information element establishing the combination at the aptitude rank equal to or higher than a predetermined rank among the plurality of the first design information elements identifies the first design information element establishing the combination at the higher aptitude rank among a plurality of the first design information elements each establishing another combination which has the aptitude rank within a predetermined range lower than the predetermined rank and which has a track record of the combined use equal to or below a predetermined standard and during processing to output the identified design information elements to the predetermined device the processing unit further outputs information indicating that a verification operation is required for using the design information elements identified to establish the other combination.

According to the above described features it is possible to take into account a case where the combination of the design information elements which did not have any problem in light of the aptitude for the requirement has in fact been used only infrequently. Hence it is possible to propose to the user the combination of the design information elements that promises a certain level of improvement in efficiency although its practical reliability is insufficient. In this case the user can recognize the design information elements that promise a certain level of improvement albeit not with perfect reliability under a situation where it is not possible to obtain the design information elements with the aptitude as well as the use track record at the top level and properly use the design information elements.

Meanwhile the system design support apparatus according to any of the embodiments may be designed such that during the processing to identify the first design information element establishing the combination at the higher aptitude rank among the plurality of the first design information elements the processing unit refers to the aptitude rank of the combined use of each of the plurality of the first design information elements and any of the design information elements identified for the second requirement among the plurality of requirements by using the second table in the storage device and if the processing unit fails to identify the first design information element establishing the combination at the aptitude rank equal to or higher than a predetermined rank among the plurality of the first design information elements identifies a first design information element establishing still another combination which has the aptitude rank within a predetermined range lower than the predetermined rank and which has no track record of the combined use.

According to the above described features it is possible to take into account a case where the combination of the design information elements which did not have any problem in light of the aptitude for the requirement has in fact never been used. Hence it is possible to propose to the user the combination of the design information elements that promises a certain level of improvement in efficiency although it is necessary to conduct a given verification operation. In this case the user can recognize the design information elements that promise a certain level of improvement albeit requiring the verification operation under a situation where it is not possible to obtain the design information elements with the aptitude as well as the use track record at the top level and properly use the design information elements.

In the meantime the system design support apparatus according to any of the embodiments may be designed such that the processing unit further executes processing to create a configuration deployable on a cloud service on the basis of the design information elements identified for the plurality of requirements and to deploy the created deployable configuration on the cloud service.

According to the above described features in a situation where the design information elements are provided from the cloud service it is possible to deploy the design information elements identified as described above on the cloud service thus installing the system to be designed.

Meanwhile the system design support apparatus according to any of the embodiments may be designed such that the storage device further store a third table that stores information elements on cloud services on which the design information elements included in the first table are deployable and during processing to output the identified design information elements to the predetermined device the processing unit identifies an information element on a cloud service on which each of the identified design information elements is deployable by using the third table and further outputs the identified information element on the cloud service on which each of the identified design information elements is deployable.

According to the above described features the user can easily recognize on which cloud service the design information elements identified as described above are deployable. Thus the user can arbitrarily select the cloud service on the basis of a desired condition out of the cloud services on which the design information elements are deployable. Hence the freedom usability and the like of design work are improved.

Meanwhile a system design supporting method according to any of the embodiments may be designed such that the information processing apparatus stores in the first table of the storage device each of the design information elements on the system designed in the past in the first table the requirement achieved by the design information element and a use track record of the design information element while associating the design information element the requirement and the use track record with each other and during processing to identify the first design information elements achieving the plurality of requirements identifies the first design information element achieving each of the plurality of requirements on the basis of a magnitude of the use track record by using the first table in the storage device.

Meanwhile the system design supporting method according to any of the embodiments may be designed such that as a consequence of the processing to identify the first design information elements achieving the plurality of requirements if for a third requirement among the plurality of requirements the information processing apparatus fails to identify the first design information element achieving the third requirement and having the use track record equal to or above a predetermined standard the information processing apparatus further executes processing to modify a definition indicated in the third requirement within a predetermined range to establish a fourth requirement and identify the first design information element achieving the fourth requirement and having the use track record equal to or above the predetermined standard by using the first table.

In the meantime the system design supporting method according to any of the embodiments may be designed such that the information processing apparatus manages in the second table in the storage device the aptitudes of the combined use of the plurality of the design information elements included in the first table with the aptitude ranks each assigned by using as the track record of the combined use information on a degree of change in any of the design information elements required due to the combined use and during processing to identify the first design information element establishing the combination at the higher aptitude rank among the plurality of the first design information elements refers in the second table in the storage device to the aptitude rank of the combined use of each of the plurality of the first design information elements and any of the design information elements identified for the second requirement among the plurality of requirements eliminates a first design information element establishing the combination which has the aptitude rank equal to or below a predetermined standard and which involves the degree of change in the design information elements outside an allowable range and identifies the first design information element establishing the combination at the higher aptitude among the plurality of the first design information elements.

Meanwhile the system design supporting method according to any of the embodiments may be designed such that the information processing apparatus manages in the second table in the storage device the aptitudes of the combined use of the plurality of the design information elements included in the first table with the aptitude ranks each assigned by using as the track record of the combined use information on a degree of change in any of the design information elements required due to the combined use and during processing to identify the first design information element establishing the combination at the higher aptitude rank among the plurality of the first design information elements refers in the second table in the storage device to the aptitude rank of the combined use of each of the plurality of the first design information elements and any of the design information elements identified for the second requirement among the plurality of requirements if the processing unit fails to identify the first design information element establishing the combination at the aptitude rank equal to or higher than a predetermined rank among the plurality of the first design information elements identifies the first design information element establishing the combination which has the higher aptitude rank among the plurality of the first design information elements each establishing another combination at the aptitude rank within a predetermined range lower than the predetermined rank and which involves the degree of change in the design information elements within an allowable range and during processing to output the identified design information elements to the predetermined device further outputs information indicating that an additional design information element is required for using the design information elements identified to establish the other combination.

In the meantime the system design supporting method according to any of the embodiments may be designed such that during processing to identify the first design information element establishing the combination at the higher aptitude rank among the plurality of the first design information elements the information processing apparatus refers to the aptitude rank of the combined use of each of the plurality of the first design information elements and any of the design information elements identified for the second requirement among the plurality of requirements by using the second table in the storage device if the information processing apparatus fails to identify the first design information element establishing the combination at the aptitude rank equal to or higher than a predetermined rank among the plurality of the first design information elements identifies the first design information element establishing the combination at the higher aptitude rank among a plurality of the first design information elements each establishing another combination which has the aptitude rank within a predetermined range lower than the predetermined rank and which has a track record of the combined use equal to or below a predetermined standard and during processing to output the identified design information elements to the predetermined device further outputs information indicating that a verification operation is required for using the design information elements identified as establishing the other combination.

Meanwhile the system design supporting method according to any of the embodiments may be designed such that during the processing to identify the first design information element establishing the combination at the higher aptitude rank among the plurality of the first design information elements the information processing apparatus refers in the second table in the storage device to the aptitude rank of the combined use of each of the plurality of the first design information elements and any of the design information elements identified for the second requirement among the plurality of requirements and if the information processing apparatus fails to identify the first design information element establishing the combination at the aptitude rank equal to or higher than a predetermined rank among the plurality of the first design information elements identifies the first design information elements each establishing still another combination which has the aptitude rank within a predetermined range lower than the predetermined rank and which has no track record of the combined use.

In the meantime the system design supporting method according to any of the embodiments may be designed such that the information processing apparatus further executes processing to create a configuration deployable on a cloud service on the basis of the design information elements identified for the plurality of requirements and to deploy the created deployable configuration on the cloud service.

Meanwhile the system design supporting method according to any of the embodiments may be designed such that the information processing apparatus causes the storage device to further store a third table that stores information elements on cloud services on which the design information elements included in the first table are deployable and during processing to output the identified design information elements to the predetermined device identifies an information element on a cloud service on which each of the identified design information elements is deployable by using the third table and further outputs the identified information element on the cloud service on which each of the identified design information elements is deployable.

