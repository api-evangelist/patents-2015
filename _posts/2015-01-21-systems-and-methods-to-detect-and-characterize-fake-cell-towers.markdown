---

title: Systems and methods to detect and characterize fake cell towers
abstract: Systems and methods to detect and characterize fake cell towers in a network operator's network include receiving live data comprising any of crowd-sourced data and tower data; performing live data analysis on the live data and reference data; and detecting the fake cell towers based on the live data analysis. Optionally, spectrum data captured at cell towers by a baseband processor coupled to backhaul equipment can be used as additional input.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09485660&OS=09485660&RS=09485660
owner: Ciena Corporation
number: 09485660
owner_city: Hanover
owner_country: US
publication_date: 20150121
---
The present disclosure relates generally to networking systems and methods. More particularly the present disclosure relates to systems and methods to detect and characterize fake cell towers.

Cell phones normally connect to the strongest signal from the nearest cell tower to maximize the signal quality and to minimize their own power usage. Additionally the cell phones authenticate with the cell towers. International Mobile Subscriber Identity IMSI catchers are used in mobile networks to identify and eavesdrop on mobile devices namely the cell phones. These catchers lightly emulate fake cell towers forcing these mobile devices to connect with them even when they are not engaged in a telephone call. In a 2G Global System for Mobile Communications GSM network the cell towers do not authenticate with the cell phones making it relatively easy to attack. Modern 3G and 4G networks are relatively safe because they practice two way authentication. However 2G GSM is still used by service providers as the fallback network when both 3G and 4G are not available. It is estimated that it will be years 2017 or later before service providers will abandon the 2G GSM towers. This does not preclude 4G interception as a threat modern devices such as the VME Dominator do currently have this ability and more sophisticated devices will undoubtedly be available in the future. Safeguarding physically deploying towers to protect other towers an area only works on a small scale. The location dependent known good tower list could be outdated or poisoned by malicious actors. Once a cell phone is intercepted a variety of over the air attacks become possible including but not limited to telephone call eavesdropping text message eavesdropping and spyware loading. Once a cell phone is captured this needs to be detected and characterized.

Service providers do not allow for IMSI catchers to operate on their networks lawful interceptors notwithstanding. However service providers are not currently able to identify rogue IMSI catchers and prevent them from operating on their networks. Conventional detection techniques are directed towards the perspective of users of the network not network operators. The users of a network don t know with 100 confidence if their phone is connecting to a tower operated by their provider or a stingray device. The conventional detection techniques rely on either setting up towers to safeguard a specific geographic area or compared with a historical list of known good towers for the current geographical position of the phone. As mentioned previously safeguarding physically deploying towers to protect other towers an area only works on a small scale. The location dependent known good tower list could be outdated or poisoned by malicious actors.

In an exemplary embodiment a method implemented on a server to detect fake cell towers in a network operator s network includes receiving live data comprising any of crowd sourced data and tower data performing live data analysis on the live data and reference data and detecting the fake cell towers based on the live data analysis. The method can further include characterizing the fake cell towers based on the crowd sourced data of cell phones near the fake cell towers. The live data analysis can utilize big data analytics to detect the fake cell towers based on comparisons with the reference data wherein the reference data includes samples of the live data without fake cell towers included therein. Optionally the reference data can further include samples of the live data with fake cell towers included therein. The crowd sourced data can be received from a plurality of cell phones operating on the network and the tower data is received from cell towers in the network. The crowd sourced data can include Received Signal Strength Indicator data and soft handoff data and wherein the tower data can include location data and Distributed Power Control data. The detection of fake cell towers can be performed from multiple data sources simultaneously using multivariate techniques comprising Boosted Decision Trees or Neural Networks to handle statistical correlations of the multiple data sources.

The live data can further include spectrum data captured at cell towers in the network by a baseband processor coupled to backhaul equipment. The detecting the fake cell towers in part can utilize location data to correlate and detect spikes of multiple cell phones at a same location. The detecting the fake cell towers in part can be based on a non participation of the fake cell towers in Distributed Power Control. The characterizing the fake cell towers can include determining an area of reach and a capture efficiency of the fake cell towers. The characterizing the fake cell towers can utilize all collectable information from the tower data the crowd sourced data or backhaul data and the collectable information is extracted separately for captured devices and devices who escaped capture using statistical methods. The server can be a Software Defined Networking SDN controller.

In another exemplary embodiment a controller configured to detect fake cell towers in a network operator s network includes a processor a network interface coupled to the processor and memory storing instructions that when executed cause the processor to obtain live data comprising any of crowd sourced data and tower data perform live data analysis on the live data and reference data and detect the fake cell towers based on the live data analysis. The instructions that when executed can further cause the processor to characterize the fake cell towers based on the crowd sourced data of cell phones near to the fake cell towers. The live data analysis can utilize big data analytics to detect the fake cell towers based on comparisons with the reference data wherein the reference data comprises samples of the live data with and without fake cell towers included therein. The crowd sourced data can be received from a plurality of cell phones operating on the network and the tower data is received from cell towers in the network. The crowd sourced data can include Received Signal Strength Indicator data and soft handoff data and wherein the tower data can be location data and Distributed Power Control data. The live data can further include spectrum data captured at cell towers in the network by a baseband processor coupled to backhaul equipment. The detecting the fake cell towers in part can utilize location data to correlate and detect spikes of multiple cell phones at a same location and in part can be based on a fact the fake cell towers do not participate in Distributed Power Control.

In various exemplary embodiments systems and methods to detect and characterize fake cell towers are described. The fake cell towers are Man in the Middle MITM devices for the cellular networks. Once a cell phone is captured by the fake cell tower the traffic content data is collected and then forwarded to a real cell tower so the cell phone user is unaware of the interception. The reach of a fake tower can be up to a mile away forcing thousands of phones in a region to connect to it. The systems and methods detect fake cell towers from a service provider perspective i.e. detect and characterize the illicit and unlawful use of IMSI catchers. Characterizing the fake cell towers and collecting statistics about their usage brings valuable information for the entire network security business. The systems and methods identify and characterize fake towers from a global network perspective using Big Data analytics. That is instead of considering this problem for an individual cell phone the systems and methods consider the entire network at once. From this global perspective network operators can potentially detect and characterize fake towers in their network by monitoring specific data sources and looking for anomalous patterns which enables a new type of security application.

Although the exemplary embodiments described herein reference the Second Generation 2G digital mobile communications standard it is purely used as an example for the standard at which MITM fake tower devices are currently downgrading higher standards in their attacks. The foreseeable future includes attacks which occur on any standard such as transmission over Third Generation 3G and Fourth Generation 4G enabled networks. The systems and methods described herein utilize an unprecedented approach to determine the presence of a MITM device by coupling and analyzing Distributed Power Control DPC and cellular soft handoff data regardless of which digital communication standard is being used. The digital communication standard being used simply allows this method to better characterize these MITM fake tower devices allowing for enhanced detection. It should also be noted that regardless of the generation digital communication standard the fake cell tower will misbehave from the network operator s perspective. The fake cell tower will prevent phones it can communicate with from performing a soft handoff and will also not adhere to the DPC algorithm.

Referring to in an exemplary embodiment a block diagram illustrates a detection system for detecting and characterizing fake cell towers. The detection system includes a data collector coupled to a controller . The data collector is coupled to a clock and has persistent data in a database on which offline analysis is performed. For live data live data analysis is performed. The controller is coupled to one or more network elements and in an exemplary embodiment the controller can be a Software Defined Networking SDN controller a Network Management System NMS and Element Management System EMS or the like. Note the detection system is merely an illustration of a hardware system for realizing the methods described herein. The controller can receive information from the entire network and send instructions to each of the network elements . The data collector records a snapshot of the network state periodically such as for example approximately every second i.e. at time intervals shorter than most phone conversations. The collected data is analyzed in real time by a collection of software applications such as for example SDN applications and is stored in a persistent data database for offline analysis. The data collector can include hardware embedded with a baseband processor in the network to collect specific data.

To identify fake cell towers the detection system can use pre defined reference samples that contain no fake cell towers and are similar to the network data of interest. Such samples can come either from simulations or from historical data. A basic analysis strategy includes comparing the live data with these background reference samples looking for statistically significant patterns only appearing in the live data which would originate from the presence of one or several attackers in the network. To increase the sensitivity of the fake cell towers detection the detection system can use additional reference samples which are known to contain attacker s . Different attacker reference samples can optionally be used to model different types of fake cell towers. These additional samples can then be combined with the above background reference samples in a statistical regression of the live data resulting in significantly increased identification accuracy for the modeled types of attackers and bringing the possibility to count the number of attackers of each type in the network.

The detection system can analyze an individual source of data as well as perform analysis simultaneously for multiple data sources to increase the accuracy. The flexible nature of the detection system also allows for virtually un limited updates of its detection and characterization algorithms over time.

While working with large data sets can be technically challenging a growing number of Big Data applications have been successfully deployed by organizations in the scientific governmental and private sectors. Furthermore the availability of specialized open source software frameworks such as Apache Hadhoop makes large scale data storage and processing increasingly accessible. In the telecommunication industry Software Defined Networking SDN will enable the usage of sophisticated data collection and data analysis applications SDN Apps at large scale. It is hence foreseen that network providers will progressively deploy the underlying Big Data infrastructure.

Referring to in an exemplary embodiment a network diagram illustrates a data collection system for the data collector in the detection system . The data collector the analysis and the clock can be realized in an application implemented on one or more servers. In an exemplary embodiment the application is an SDN application and the controller is an SDN controller although other embodiments are contemplated. As illustrated in Table 1 the above data collection system obtains three types of information namely crowd sourced data from cell phones tower data from cell towers and backhaul analytic data from wireless backhaul systems. The data is provided to the application directly while the data is provided to the application from the controller . The crowd sourced data can be received from a plurality of cell phones operating on the network and the tower data is received from cell towers in the network. Stated differently the crowd sourced data is from users whereas the tower data is from the network operators. The crowd sourced data can include Received Signal Strength Indicator data and soft handoff data and the tower data can include location data and Distributed Power Control data. The live data can further include spectrum data captured at cell towers in the network by a baseband processor coupled to backhaul equipment. The collection of most data types for the detection system requires basic access to the crowd sourced data or the tower data except for a few types that require a dedicated backhaul device to collect the backhaul analytic data . As described below all the tower data obtained through tower requirement scenarios can be compared to the crowd sourced data and the different data types can be optionally combined to increase the sensitivity of the detection algorithm but no single type is mandatory.

The collected data is data analyzed in real time by the application or a combination of applications and is stored in the persistent data database for the offline analysis . If the resulting data rate exceeds the capacity of the implemented infrastructure the data acquisition can be instrumented with a trigger system see for example arxiv.org abs 1110.1530 to only store snapshots in which interesting events have occurred and to react to events by dynamically increasing or decreasing the amount of detailed information about specific aspects.

To identify fake cell towers the application uses pre defined reference samples that are similar to the network data of interest and contain no fake cell towers. Such samples can come either from simulations or from historical data. Again a basic analysis strategy includes comparing live data with these background reference samples looking for statistically significant patterns only appearing in the live data. Such patterns could originate from the presence of one or several attackers in the network. This can be efficiently performed with a statistical regression method returning the total number of fake cell towers in the network. In the context of particle physics this procedure is often referred to as background only fit. See for example M. Baak et al. HistFitter software framework for statistical data analysis ref. arxiv.org abs 1410.1280 .

To increase the sensitivity of the fake cell tower detection the application can use additional reference samples which are known to contain attacker s . Different attacker reference samples can optionally be used to model different types of fake cell towers. These additional samples can then be combined with the above background reference samples in a statistical regression of the live data resulting in significantly increased identification accuracy for the modeled types of attackers and bringing the possibility to count the number of attackers of each type in the network.

The above analysis can be performed for an individual source of data but it can also be performed simultaneously for multiple data sources to increase the accuracy. In a multivariate analysis the likelihood functions of the different data sources can simply be multiplied if the individual data sources are un correlated. However it frequently happens that individual data sources do have correlations in which case they can be combined with machine learning techniques like Boosted Decision Tree or Neural Network See for example A. Hoecker et al. TMVA Toolkit for Multivariate Data Analysis ref arxiv.org abs physics 0703039 .

Referring to in an exemplary embodiment a flow chart illustrates a fake cell tower detection process . The detection process contemplates operation in the detection system with the data collection system and or through the application . The detection process includes receiving live data including any of crowd sourced data and tower data step performing live data analysis on the live data and reference data step detecting fake cell towers based on the live data analysis step and characterizing the fake cell towers based on the crowd sourced data of cell phones near to the fake cell towers step . Optionally the live data can also include backhaul analytic data.

The live data analysis can utilize big data analytics to detect the fake cell towers based on comparisons with the reference data and the reference data can include samples of the live data without fake cell towers included therein. The reference data can further include samples of the live data with fake cell towers included therein. The detecting the fake cell towers in part can utilize location data to correlate and detect spikes of multiple cell phones at a same location. The detecting the fake cell towers in part can be based on a fact the fake cell towers do not participate in Distributed Power Control. The characterizing the fake cell towers can include determining an area of reach of the fake cell towers. Optionally the server is a Software Defined Networking SDN controller.

Specific examples of fake cell tower identification and characterization considering a global network are described as follows. Fake cell towers alter the geographical position GPS information about cell phones and connect to multiple phones simultaneously. This introduces correlations in the GPS coordinates of individual phones that should normally be un correlated but seem to originate from the same point when they are tricked by a fake tower. Referring to three dimensional graphs illustrate GPS coordinate distribution of cell phones in a safe network and in a network with a fake tower . The examples in contain ten thousands user agents. The fake tower in is positioned at latitude 45.4 and longitude 75.7. It has a reach of 1.1 km and a capture efficiency of 95 . The height of the fake tower spike is truncated for the sake of illustration but the fake tower actually captured over a thousand phones in this example.

As shown in this pattern can be identified by the application the detection system or the detection process by scanning the GPS location of all cell phones in a network snapshot looking for spikes of multiple phones with the same location. The position of each spike then gives the GPS location of a fake tower and the number of spikes equals the number of fake towers in the network. If many false positive are returned the detection can be refined with a multivariate analysis of the data sources listed above. For instance looking for cell phone locations forming a spike and having an unusual cell ID or frequency usage.

An abrupt shift of the GPS position happens at the moment when a cell phone starts to be tricked. This can be identified by the application scanning the variations of GPS positions over time in a live data buffer or in an offline analysis of historical data. The same kind of detection can be applied to other data sources listed above and can optionally be performed simultaneously on multiple sources. For example if a fake cell tower is placed on a moving truck it can be tracked by following the position of a GPS position spike as in changing over time in a live data buffer or in an offline analysis of historical data providing that data collection time intervals are sufficiently short.

The application can perform analytics based on the fact that the fake tower does not participate in the Distributed Power Control DPC as the capture phones normally would. A real tower performs DPC by measuring a signal to interference ratio SIR for the cell phones and communicating the SIRs to the cell phones. SIR equals signal power divided by a combination of interference and noise. The cell phones adjust the transmit power accordingly. The DPC is iterative with the real tower measuring and updating the new SIRs to the cell phones. In the data set collected and analyzed by the application values in the Signal column associated with the cell phones vary in the time series data. are examples of using DPC to detect fake towers. Specifically is a network diagram of a network without a fake tower and a table of associated data. is a network diagram of the network with a fake tower and a table of associated data. For example assume a cell phone with IMSI 1 has power levels at three different times of 2 mW 1.40 mW and 1.58 mW. That is the overshoot undershoot power levels that are appropriately adjusted by the DPC.

Again illustrates associated data for the network with a real cell tower . The data for DPC includes time IMSI location signal interference and noise. When the fake tower is present as in the fake tower pretends to be the cell phones to the real tower . In this situation the values in the Signal column for the IMSIs captured are most likely to be the same across the time series data starting at T.

Not only can the systems and methods identify the presence of fake cell towers they can also characterize several properties of an individual fake tower by analyzing the data of nearby cell phones on a statistical basis. For instance in the position of the spike maximum gives the GPS position of a fake cell tower. Around the spike a circular area contains significantly less phones than usual. The radius of that area gives the reach of the fake cell tower and the number of remaining phones in the circular area but not in the spike is proportional to the capture efficiency of the fake cell tower. Furthermore arbitrary information about the phones in the spike captured devices in the circular area devices who escaped capture or outside the area s radius unbiased sample of devices can be compared to extract information about the fake cell tower and its effect on various types of phones. This information can be extracted with a variety of statistical methods such as sPlot SPlot A Statistical tool to unfold data distributions Nucl. Instrum. Meth. A555 2005 356 369 for example. This information can include DPC frequency usage all the collectable data listed in Table 1 above and more. As a result it is conceivable that a fake cell tower with specific characteristics can be associated to a known owner or organization by the service provider.

Additionally the systems and methods enable characterizing the entire population of fake towers in a given network. Meta information such as the number of fake towers of each type and or belonging to a certain organization the time periods of activity the average reach or capture efficiency the most frequently used frequency the probability of a cell phone to be attacked and so on can all be extracted by a service provider using the systems and methods.

While several examples of data sources and analysis methods to identify and characterize fake towers have been presented above it should be emphasized that the invention will enable many more data and methods in the future. Furthermore the systems and methods allow easy and frequent updates of the data sources and analysis methods. Hence the systems and methods have the capacity to adapt to the evolution of security threats over time and will progressively deploy algorithms of virtually unlimited sophistication.

The cell phones can include applications or Application Programming Interfaces API which provide the data. For example Android has an API to identify the cell tower with the following API developer.android.com reference android telephony TelephonyManager.html. Here the following data can be determined TelephonyManager.getNetworkCountryIso returns the MCC string TelephonyManager.getNetworkOperator returns the MCC MNC string. TelephonyManager.getNetworkOperatorName returns the alphabet name of register operator and TelephonyManager.getNeighboringCellInfo gives a list of NeighboringCellInfo.

Another API can include developer.android.com reference android telephony NeighboringCellInfo.html. Here NeighboringCellInfo.getLac gives LAC NeighboringCellInfo.getCid gives CID and NeighboringCellInfo.getRssi gives the received signal strength or UNKNOWN RSSI if unknown. For GSM it is in arbitrary strength unit ASU ranging from 0 to 31 dBm 113 2 asu 0 means 113 dBm or less and 31 means 51 dBm or greater For UMTS it is the Level index of CPICH RSCP defined in TS 25.125.

Reference data is used by the detection system to distinguish and learn behavior with and without fake cell towers. The following Error Reference source not found. contains the information for real cell towers. At each location there may be more than one provider. A sample is shown below. The Tower ID is internally generated by the application for ease of reference.

The following Table 3 Crowd Sourced Received Signal Strength Indicator Data Set IMSI protected for privacy shows an example of crowd reported data. A sample of data collected is shown. The whole dataset consists of measurement done by the cell phone with the person walking from a first location a last location in the table.

The following Table 4 Distributed Power Control DPC Data Set From Cell Towers 480 ms interval shows how one tower is interacting with one cell phone to control the power. The DPC column indicates the desired power level by the tower. The RSSI value is the actual power lever at the tower. At each iteration the tower instructs the cell phone to adjust the transmit power. As an example at fourth iteration the cell phone is at the desired power level.

The following Table 5 Crowd Sourced Soft Handoff Dataset shows the soft handoff. Note that the Tower IDs TW and TW are used for in this table for clarity. The actual data reported will be in the format MCC MNC LAC and Cell Id which are then used to look up the Tower ID from Error Reference source not found.

The following Table 6 Spectrum Data Captured At Tower Ciena Service Delivery Switch with Baseband Processor shows an example of scanning the desired spectrum for evidence of jamming as well as received power at the real cell tower. Note this is the backhaul analytic data collected by a device coupled to the tower and the backhaul system.

The following tables show what the data might look like when a fake tower is present. A new CID indicating a fake tower would be reported by the IMSI 1 at location 6 and 7. The RSSI would also indicate the stronger strength see Table 7 Crowd Sourced Received Signal Strength Indicator Data Set .

At the real tower the following information about IMSI 1 would be reported to the application showing that the fake tower pretending to be IMSI 1 is not obeying the DPC algorithm see Table 8 Distributed Power Control DPC Data Set from Cell Tower with a fake tower in the middle .

A service delivery switch equipped with a baseband processor would observed that the signal is jammed.

Referring to in an exemplary embodiment a block diagram illustrates a server such as for the controller . The server can be a digital computer that in terms of hardware architecture generally includes a processor input output I O interfaces a network interface a data store and memory . It should be appreciated by those of ordinary skill in the art that depicts the server in an oversimplified manner and a practical embodiment may include additional components and suitably configured processing logic to support known or conventional operating features that are not described in detail herein. The components and are communicatively coupled via a local interface . The local interface can be for example but not limited to one or more buses or other wired or wireless connections as is known in the art. The local interface can have additional elements which are omitted for simplicity such as controllers buffers caches drivers repeaters and receivers among many others to enable communications. Further the local interface can include address control and or data connections to enable appropriate communications among the aforementioned components.

The processor is a hardware device for executing software instructions. The processor can be any custom made or commercially available processor a central processing unit CPU an auxiliary processor among several processors associated with the server a semiconductor based microprocessor in the form of a microchip or chip set or generally any device for executing software instructions. When the server is in operation the processor is configured to execute software stored within the memory to communicate data to and from the memory and to generally control operations of the server pursuant to the software instructions. The I O interfaces can be used to receive user input from and or for providing system output to one or more devices or components. User input can be provided via for example a keyboard touch pad and or a mouse. System output can be provided via a display device and a printer not shown . I O interfaces can include for example a serial port a parallel port a small computer system interface SCSI a serial ATA SATA a fiber channel Infiniband iSCSI a PCI Express interface PCI x an infrared IR interface a radio frequency RF interface and or a universal serial bus USB interface.

The network interface can be used to enable the server to communicate on a network. The network interface can include for example an Ethernet card or adapter e.g. 10BaseT Fast Ethernet Gigabit Ethernet 10 GbE or a wireless local area network WLAN card or adapter e.g. 802.11a b g n . The network interface can include address control and or data connections to enable appropriate communications on the network. A data store can be used to store data. The data store can include any of volatile memory elements e.g. random access memory RAM such as DRAM SRAM SDRAM and the like nonvolatile memory elements e.g. ROM hard drive tape CDROM and the like and combinations thereof. Moreover the data store can incorporate electronic magnetic optical and or other types of storage media. In one example the data store can be located internal to the server such as for example an internal hard drive connected to the local interface in the server . Additionally in another embodiment the data store can be located external to the server such as for example an external hard drive connected to the I O interfaces e.g. SCSI or USB connection . In a further embodiment the data store can be connected to the server through a network such as for example a network attached file server.

The memory can include any of volatile memory elements e.g. random access memory RAM such as DRAM SRAM SDRAM etc. nonvolatile memory elements e.g. ROM hard drive tape CDROM etc. and combinations thereof. Moreover the memory can incorporate electronic magnetic optical and or other types of storage media. Note that the memory can have a distributed architecture where various components are situated remotely from one another but can be accessed by the processor . The software in memory can include one or more software programs each of which includes an ordered listing of executable instructions for implementing logical functions. The software in the memory includes a suitable operating system O S and one or more programs . The operating system essentially controls the execution of other computer programs such as the one or more programs and provides scheduling input output control file and data management memory management and communication control and related services. The one or more programs may be configured to implement the various processes algorithms methods techniques etc. described herein.

In an exemplary embodiment the controller can be implemented through the server where the network interface is communicatively coupled to one or more nodes in a network. The controller can also include an Application Programming Interface API which allows additional applications to interface with the SDN controller for data associated with the network. In an exemplary embodiment one or more applications can be implemented on the server or on the server operating as the SDN controller for the SDN control plane and receive data through the API. Other configurations are also contemplated.

It will be appreciated that some exemplary embodiments described herein may include one or more generic or specialized processors one or more processors such as microprocessors digital signal processors customized processors and field programmable gate arrays FPGAs and unique stored program instructions including both software and firmware that control the one or more processors to implement in conjunction with certain non processor circuits some most or all of the functions of the methods and or systems described herein. Alternatively some or all functions may be implemented by a state machine that has no stored program instructions or in one or more application specific integrated circuits ASICs in which each function or some combinations of certain of the functions are implemented as custom logic. Of course a combination of the aforementioned approaches may be used. Moreover some exemplary embodiments may be implemented as a non transitory computer readable storage medium having computer readable code stored thereon for programming a computer server appliance device etc. each of which may include a processor to perform methods as described and claimed herein. Examples of such computer readable storage mediums include but are not limited to a hard disk an optical storage device a magnetic storage device a ROM Read Only Memory a PROM Programmable Read Only Memory an EPROM Erasable Programmable Read Only Memory an EEPROM Electrically Erasable Programmable Read Only Memory Flash memory and the like. When stored in the non transitory computer readable medium software can include instructions executable by a processor that in response to such execution cause a processor or any other circuitry to perform a set of operations steps methods processes algorithms etc.

Although the present disclosure has been illustrated and described herein with reference to preferred embodiments and specific examples thereof it will be readily apparent to those of ordinary skill in the art that other embodiments and examples may perform similar functions and or achieve like results. All such equivalent embodiments and examples are within the spirit and scope of the present disclosure are contemplated thereby and are intended to be covered by the following claims.

