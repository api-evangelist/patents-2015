---

title: Dynamic adjustment of video quality
abstract: A video quality module receives data indicating a visibility status of a tab of a web browser running on a user device. The video quality module determines, based on the data indicating the visibility status of the tab whether the tab of the web browser is currently visible to a user of the user device, the tab of the web browser comprising a streaming media player. If the tab of the web browser is not currently visible to the user, the video quality module decreases a quality of a video component of a streaming media file playing in the streaming media player.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09652112&OS=09652112&RS=09652112
owner: GOOGLE INC.
number: 09652112
owner_city: Mountain View
owner_country: US
publication_date: 20150107
---
This continuation application claims priority to U.S. patent application Ser. No. 13 601 149 filed on Aug. 31 2012 and is incorporated by reference herein.

This disclosure relates to the field of streaming media and in particular to dynamic adjustment of video quality.

Streaming media is multimedia such as video and audio content which is received by and presented to an end user while being delivered by a streaming provider. With streaming media a client media player can start playing media content before the entire file has been transmitted from a server e.g. over a telecommunications network. For example a user may visit a media streaming website using a web browser running on a personal computing device. The user may play multimedia content including video and audio portions in a media player from the media streaming website. The streaming provider may transmit the audio and video portions of the content to the personal computing device over a network such as the Internet which may be played back in the media player.

Many users stream multimedia content including video and audio components to their personal computers. One example of the multimedia content is a music video. In many cases however a user may perform other tasks while the multimedia content is streaming such as web browsing using productivity applications or other tasks. In these cases the website containing the media player is minimized or shifted to the background and the user is effectively using the media player as a music only player. The video component of the multimedia content continues to stream to the user s computer using considerable network bandwidth and resources even though the video portion of the content is not being viewed by the user.

The following is a simplified summary of the disclosure in order to provide a basic understanding of some aspects of the disclosure. This summary is not an extensive overview of the disclosure. It is intended to neither identify key or critical elements of the disclosure nor delineate any scope of the particular implementations of the disclosure or any scope of the claims. Its sole purpose is to present some concepts of the disclosure in a simplified form as a prelude to the more detailed description that is presented later.

In one implementation a video quality module receives data indicating a visibility status of a tab of a web browser running on a user device. Receiving the data may include sending a request for the visibility status of the tab using the Page Visibility Application Programming Interface API of the web browser. The video quality module determines based on the data indicating the visibility status of the tab whether the tab of the web browser is currently visible to a user of the user device the tab of the web browser comprising a streaming media player. In one implementation the tab of the web browser includes a streaming media player playing a streaming media file from a web page. If the tab of the web browser is not currently visible to the user the video quality module decreases a quality of a video component of a streaming media file playing in the streaming media player. The tab of the web browser is not visible to the user if the tab is in the background of the web browser behind one or more other tabs. In addition the video quality module may further halt a transmission of the video component of the streaming media file to the user device while continuing to transmit an audio component of the streaming media file to the user device.

If the tab of web browser is currently visible to the user the video quality module determines if the video component is currently decreased from a default setting. The tab of the web browser is visible to the user if the tab is in the foreground of the web browser. If the video component is currently decreased from the default setting the video quality module increases the quality of the video component to the default setting. If the video component is not currently decreased from the default setting the video component maintains a current quality of the video component.

Implementations are described for dynamically adjusting a video quality of streaming media. In one implementation a user requests that multimedia content including video and audio components be streamed to a personal computer or other user device. For example the user may play a music video using a media streaming website accessed through a browser running on the user s computer. In many cases however the user may perform other tasks while the multimedia content is streaming. For example if the browser is a tabbed browser the user may open a new tab and view other web pages in the new tab. In this cases the browser tab with the media streaming website is minimized or shifted to the background and the user is effectively using the media player as a music player as the video component of the media is no longer visible. In one implementation a visibility monitor running on the user s computer detects that the media player is no longer visible to the user due to the fact that the browser tab has been minimized or shifted to the background. For example the browser may have an application programming interface API such as the Page Visibility API which other devices can call to determine the visibility status of the tab containing the media player. While details are provided herein specifically relating to videos as an example for clarity of explanation it shall be appreciated that such details may be equally applicable to other types of media e.g. audio e.g. music images documents text e.g. tweets flash content etc. as applicable.

If for example the media server streaming the media content to the user s computer receives an indication from the visibility monitor that the user is not currently viewing the music video the media server can dynamically adjust the quality of the streaming video component. In one implementation the media server can decrease the quality of the video to a lower resolution. In another implementation the media sever can halt streaming of the video component completely. In either case the audio component of the streaming media may remain unchanged so that the user can continue to hear the music video. Decreasing the quality or halting streaming of the video component can save network bandwidth and resources allowing them to be used for other computing tasks. If the media server receives an indication from the visibility monitor that the tab containing the media player has been brought back to the foreground the media server can increase the quality of the video or resume streaming of the halted video stream. This allows the user to maintain an enjoyable experience while consuming the media content.

Web server and media server may include a network accessible server based functionality various data stores and or other data processing equipment. The servers and may be implemented by a single machine or a cluster of machines. As illustrated in web server and media server are separate devices. In another implementation however web server and media server may be combined into a single machine or device. One or both of web server and media server may be hosted for example by computer system of . In one implementation web server hosts web page . Web server can deliver web page to user device or another client device using for example the Hypertext Transfer Protocol HTTP . Web page may be part of for example a media content hosting website that allows users to upload view and share multimedia content.

In one implementation media server includes one or more media files and video quality module . Media file may represent the audio and video content that a user plays through web page . For example when a user of user device views web page using a web browser or other program running on user device and requests to view a certain multimedia content web server can send a message to media server requesting media file . Media server can initiate streaming of media file to user device via network . In one implementation media file is a music video file including both a visual and an audio component. In other implementations however media file may be some other type of media file. In one implementation user device may additionally include visibility monitor . Visibility monitor may determine if the user is actually viewing the streaming multimedia content at a given point in time based on a user s behavior with respect to the streaming media in web browser . Some implementations of visibility monitor are discussed in more detail below.

Video quality module running on media server can receive an indication from visibility monitor of whether the user us actually viewing the streaming media. In one implementation based on the received indication video quality module can dynamically adjust the quality of the video portion of the streaming media to save bandwidth and other network resources. For example if video quality module receives an indication that the user is not viewing the streaming media e.g. because a tab of web browser used to view web page has been minimized or shifted to the background in favor of another tab or application video quality module can optionally halt streaming the video component of the media or decrease a quality of the video stream to save bandwidth. An audio component of the media stream may continue to be transmitted to user device so that if the user is still listening to the audio the user s consumption is uninterrupted. Some implementations of video quality module are discussed in more detail below.

In one implementation request receiving module receives requests for example from media server for the visibility status of a particular tab of web browser . The request may identify the tab of web browser in which a media player is running to which media server is currently was previously or is about to stream media content such as media file . In one implementation the request is in the form of an API call made for example to visibility monitor . In one implementation visibility monitor is the Page Visibility API. The Page Visibility API may be a standard interface that is included by a vendor of web browser . The Page Visibility API allows applications to request the visibility state of a document or web page being displayed by web browser . In other implementations visibility monitor may include some other API or specification. Upon receiving the request request receiving module may forward the request to or otherwise notify visibility state determining module that the request has been received from media server . In other implementations the request may be received from some other source besides media server .

Visibility state determining module can determine whether the requested tab of web browser is currently visible to a user. illustrates web browser according to one implementation. In this implementation web browser includes one or more browsing tabs and browser controls . Browsing tabs and allow multiple web pages to be viewed in a single browser window. For example browsing tab may display web page including media player . In one implementation media player may also include a set of controls to control playback of media content. When the first browsing tab is selected or activated web page may be visible to the user assuming no other windows are placed on top of the window for web browser . Any additional tabs such as browsing tab are in the background and the content displayed therein is generally not visible to the user. Visibility state determining module can determine if browsing tab i.e. the tab containing web page and media player is currently selected activated or in the foreground of web browser . If so visibility state determining module can return a value of visible and store that value in an entry in tab visibility status information corresponding to tab . If another browsing tab were activated and browsing tab was in the background visibility state determining module can return a value of hidden. In one implementation visibility state determining module checks the status of tabs and in response to receiving the request. In other implementations however visibility state determining module can check the status of tabs and at periodic intervals or can update the status in tab visibility status information each time the status changes. In these implementations rather than checking the status of each tab visibility state determining module can just read the stored values from tab visibility status information .

In one implementation when the user moves browsing tab to the background the visibility status of browsing tab can change. illustrates web browser in this situation. In this implementation a second browsing tab is selected. The user may select tab or switch between browsing tabs using for example browser controls using a computer mouse or other pointer device by tapping the selected tab if user device includes a touch sensitive display or by some other means. In one implementation browsing tab displays a different web page which may include text and images . Media player remains running in browsing tab which is now in the background. In one implementation visibility state determining module can update the status of browsing tabs and in tab visibility status information .

In one implementation request responding module can respond to the request for the visibility status of a particular tab. Request responding module can read the current value stored in tab visibility status information for the particular tab and send a response including the value to the requestor. In one implementation where the requestor is media server request responding module can send the response over network . Request responding module can send an update with the state information of each tab to media server in response to the request periodically or each time the status of a tab is updated in tab visibility status information .

Referring to at block method receives a request for visibility status of a media player tab such as browsing tab . In one implementation request receiving module receives the request for example from media server .

The request may identify the tab of web browser in which a media player is playing streamed media content such as media file . In one implementation the request is in the form of an API call made for example to visibility monitor . In one implementation visibility monitor is the Page Visibility API. Upon receiving the request request receiving module may forward the request to or otherwise notify visibility state determining module that the request has been received from media server . In other implementations the request may be received from some other source besides media server .

At block method determines if the media player tab is visible to the user. Visibility state determining module can determine whether the requested tab of web browser is currently visible to the user. Browsing tab may be visible to the user when it is selected activated or running in the foreground of web browser . Any additional tabs such as browsing tab are in the background and the content displayed therein is generally not visible to the user. Visibility state determining module can determine whether each browsing tab is activated or not and if activated determine that the browsing tab is visible. If at block method determines that the browsing tab is visible at block method sets the state value for browsing tab to visible. If at block method determines that the browsing tab is not visible at block method sets the state value for browsing tab to hidden. In one implementation visibility state determining module can store the value in tab visibility status information . Alternatively the steps at blocks and are not performed in response to block . In one implementation the visibility status is updated by a different process e.g. every time a different tab is selected and method will only need to access this information rather than sending a specific request.

At block method returns the determined state value to the requestor. In one implementation request responding module can respond to the request for the visibility status of a particular tab. Request responding module can read the current value stored in tab visibility status information for the particular tab and send a response including the value to the requestor. In one implementation where the requestor is media server request responding module can send the response over network .

In one implementation visibility state requestor generates and issues a request to user device for the visibility status of a tab of web browser in which media player is running. The request may specify the particular browsing tab or may be for the status of all tabs in web browser . In one implementation visibility state requestor may repeatedly issue a request at periodic intervals. In another implementation visibility state requestor may issue the request in response to a command from an administrator or other entity. In response to the request visibility state requestor can receive a value indicating the visibility status e.g. visible or hidden from visibility monitor on user device .

In one implementation video quality controller can dynamically adjust the quality of a video component of media file or halt transmission of the video component completely. In one implementation media server may be streaming media file to user device . If visibility state requestor receives an indication from the user device that the browsing tab containing the media player is not visible to the user video quality controller may decrease the quality of the media component. For example video quality controller may reduce the resolution of the video component of media file that is streamed to user device . In another implementation media stream communicator may halt transmission of the video component completely. In either case the audio component of the streaming media may remain unchanged so that the user can continue to hear corresponding sound. Similarly if visibility state requestor receives an indication that the browsing tab has become visible again video quality controller can increase the quality of the video component of media file back to an original or default quality or media stream communicator can resume transmission of the video component.

Referring to at block method requests the visibility status of a browsing tab of web browser containing media player . In one implementation visibility state requestor generates and issues a request to user device for the visibility status of the browsing tab . In one implementation visibility state requestor may repeatedly issue a request at periodic intervals. In another implementation visibility state requestor may issue the request in response to a command from an administrator or other entity. In response to the request at block method receives an indication of the requested visibility state. Visibility state requestor can receive a value indicating the visibility status e.g. visible or hidden from visibility monitor on user device . Alternatively user device can provide an update to the visibility status each time the status changes during media streaming.

At block method determines if the received visibility status is set to visible or if the received indication otherwise indicates that the browsing tab is active. In one implementation the visibility status will be set to either visible or hidden. In other implementations however some other indication may be provided. If at block method determines that the visibility status is not set to visible at block method halts transmission of the video component or decreases the quality of the video. For example video quality controller may reduce the resolution of the video component of media file that is streamed to user device . In another implementation media stream communicator may halt transmission of the video component completely.

If at block method determines that the visibility status is set to visible at block method determines if the video component of media file is currently halted or has the quality currently decreased. In one implementation the video component of media file may have a default quality setting. This may be for example the highest resolution supported by user device or some intermediate resolution. In one implementation the default quality may be set by the user of user device . Upon being reduced at block the video quality may be reduced to a lower resolution than the default or standard resolution. Video quality controller may determine what quality setting is currently being used to stream the video component to user device . If at block method determines that the video component is currently halted or has had the quality decreased at block method resumes transmission of the video component or increases the quality back to the default setting. If at block method determines that the video component is not currently halted or has not had the quality decreased at block method maintains the current video quality or allows the video to remain halted .

The exemplary computer system includes a processing device a main memory e.g. read only memory ROM flash memory dynamic random access memory DRAM such as synchronous DRAM SDRAM or Rambus DRAM RDRAM etc. a static memory e.g. flash memory static random access memory SRAM etc. and a data storage device which communicate with each other via a bus . Any of the signals provided over various buses described herein may be time multiplexed with other signals and provided over one or more common buses. Additionally the interconnection between circuit components or blocks may be shown as buses or as single signal lines. Each of the buses may alternatively be one or more single signal lines and each of the single signal lines may alternatively be buses.

Processing device represents one or more general purpose processing devices such as a microprocessor central processing unit or the like. More particularly the processing device may be complex instruction set computing CISC microprocessor reduced instruction set computer RISC microprocessor very long instruction word VLIW microprocessor or processor implementing other instruction sets or processors implementing a combination of instruction sets. Processing device may also be one or more special purpose processing devices such as an application specific integrated circuit ASIC a field programmable gate array FPGA a digital signal processor DSP network processor or the like. The processing device is configured to execute processing logic for performing the operations and steps discussed herein.

The computer system may further include a network interface device . The computer system also may include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse and a signal generation device e.g. a speaker .

The data storage device may include a machine readable storage medium on which is stored one or more set of instructions e.g. software embodying any one or more of the methodologies of functions described herein. The instructions may also reside completely or at least partially within the main memory and or within the processing device during execution thereof by the computer system the main memory and the processing device also constituting machine readable storage media. The instructions may further be transmitted or received over a network via the network interface device .

The machine readable storage medium may also be used to store instructions to perform a method for dynamically adjusting video quality as described herein. While the machine readable storage medium is shown in an exemplary implementation to be a single medium the term machine readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. A machine readable medium includes any mechanism for storing information in a form e.g. software processing application readable by a machine e.g. a computer . The machine readable medium may include but is not limited to magnetic storage medium e.g. floppy diskette optical storage medium e.g. CD ROM magneto optical storage medium read only memory ROM random access memory RAM erasable programmable memory e.g. EPROM and EEPROM flash memory or another type of medium suitable for storing electronic instructions.

The preceding description sets forth numerous specific details such as examples of specific systems components methods and so forth in order to provide a good understanding of several implementations of the present disclosure. It will be apparent to one skilled in the art however that at least some implementations of the present disclosure may be practiced without these specific details. In other instances well known components or methods are not described in detail or are presented in simple block diagram format in order to avoid unnecessarily obscuring the present disclosure. Thus the specific details set forth are merely exemplary. Particular implementations may vary from these exemplary details and still be contemplated to be within the scope of the present disclosure.

Reference throughout this specification to one implementation or an implementation means that a particular feature structure or characteristic described in connection with the implementations included in at least one implementation. Thus the appearances of the phrase in one implementation or in an implementation in various places throughout this specification are not necessarily all referring to the same implementation. In addition the term or is intended to mean an inclusive or rather than an exclusive or. 

Although the operations of the methods herein are shown and described in a particular order the order of the operations of each method may be altered so that certain operations may be performed in an inverse order or so that certain operation may be performed at least in part concurrently with other operations. In another implementation instructions or sub operations of distinct operations may be in an intermittent and or alternating manner.

