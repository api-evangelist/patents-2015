---

title: Enabling mobile applications to acquire a MAC address for obtaining location information
abstract: Techniques are presented to enable a network element in a network to receive a request from an application on a device, the request being encapsulated in a packet that includes a header that contains a physical layer identifier of the device to which the application does not have access. The physical layer identifier at the network element may be obtained. A response may be sent to the application on the device, the response containing at least one of the physical layer identifier of the device and location information of the device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09509786&OS=09509786&RS=09509786
owner: Cisco Technology, Inc.
number: 09509786
owner_city: San Jose
owner_country: US
publication_date: 20151008
---
This application is a continuation of U.S. patent application Ser. No. 14 028 874 filed Sep. 17 2013 entitled Enabling Mobile Applications to Acquire a MAC Address for Obtaining Location Information the entire contents of which are hereby incorporated by reference in their entirety.

Radio signals may be used to determine the location of a device in a wireless network such as a Wi Fi network. For example the location of a user device may be triangulated based upon wireless signal strength and other indicators detected at nearby Wi Fi access points APs . Wi Fi location tracking can be especially useful indoors where Global Positioning System GPS signals may be unavailable.

The media access control MAC address of a user device may be used as an identifier on the network for location tracking. This can be a problem for applications executing on user devices which for security and other reasons are increasingly prohibited from querying the device operating system to obtain a MAC address of the device. The prohibition may apply to applications executing within a user web browser or to applications directly installed on the user device. The result is that user device applications cannot utilize location tracking services.

Techniques are presented to enable a network element in a network to receive a request from an application on a device the request being encapsulated in a packet that includes a header that contains a physical layer identifier of the device to which the application does not have access. The physical layer identifier at the network element is obtained. A response is sent to the application on the device the response containing at least one of the physical layer identifier of the device and location information of the device.

Referring first to a location look up system is shown. The system may include user devices and which may communicate via network with network elements and . The user devices may take any of a variety of forms including a desktop computer laptop computer mobile cellular phone e.g. Smartphone tablet computer etc. The user devices may connect to network to communicate with each other and with other network elements. The network may consist of one or more wired and or wireless local and or wide area networks. Other network elements that may be utilized according to techniques presented herein include one or more Hypertext Transport Protocol HTTP proxies one or more wireless local area network LAN controllers WLC one or more access points APs one or more web servers and one or more Mobility Service Engine MSE servers . These network elements may perform the services of other network elements for the techniques presented herein. For example an access point may perform the functions of a proxy device a controller may perform the functions of a location server such as the MSE server etc.

A proxy server such as an HTTP proxy is a server that acts as an intermediary for requests from clients seeking resources from other servers such as a web server . Proxies are widely used to facilitate access to content on the World Wide Web and may be used to filter cache translate log and anonymously access data. Proxies may also be used to add content to data passing through them. For example a web proxy or HTTP proxy may inject additional content to a web page. This may include injecting a cookie or a Hypertext Markup Language HTML border with business or local information into a web page. A business venue may use a proxy to offer their customers a customized presentation or location relevant data to the web content accessed by their clients.

The AP is a wireless device that allows another device to wirelessly connect to network resources using the IEEE 802.11 or Wi Fi communication or other standards. APs may be managed by a controller where a controller may automatically configure up to thousands of access points.

The MSE server may provide network analytics location based mobile services and enhanced wireless network security. The MSE server may also act as a location server coordinating with access points to triangulate the locations of user devices based on indicators such as signal strength. The location server functionality is useful indoors where GPS services may be unavailable and allows user devices to utilize rich location based features such as turn by turn directions and location relevant advertisements.

Reference is now made to . shows a more detailed block diagram for an example network setup or system . In the system a wireless user device may communicate via access points and to other network elements. Signals from a wireless user device may be received by access points and or signals from the access points and are received at the user device in order to determine the device location. The access points may be configured and managed by controller and raw signal information may be provided to MSE server which may perform further calculations to determine the location of the wireless user device and may store the location information. The access points and controller and MSE server may together or individually provide the user device access to the World Wide Web and communicate with a cloud based application that may exist on the Internet or Intranet etc. The user device may also have native or installed applications which can send and receive data on the LAN WAN Internet or Intranet etc.

A MAC address is a unique physical layer identifier assigned to network interfaces for communications on a physical network segment. The MAC address may thus uniquely associate a given user device with associated location information on the MSE or other network element acting as a location server. However increasingly operating systems restrict user application access to the MAC address of a device. As a result web based or cloud based applications and even native applications running on the device may not be able to acquire location information that is associated with the MAC address or other unique identifier of device. Yet requests and other messages sent from a device on the network contain content from an application that is encapsulated in a packet having one or more headers containing the MAC address of the device Internet Protocol IP address used by the device and other device or network identifiers. Thus packets generated by the network stack in the device from content provided by an application may contain the physical layer identifier e.g. MAC address to which the application does not have access due to restrictions imposed by the operating system of the device. Nevertheless various network elements in the path of communications to from the device may have access to the MAC address or other unique identifiers in the headers of packets originating from that device. While a physical layer identifier is referred to herein as a means to obtain location information for a device other unique identifiers may be used with techniques presented herein including an IP address. In addition to the MAC address other physical layer identifiers now known or hereinafter developed may also be used with the techniques presented herein.

One solution presented herein utilizes web cookies. A web cookie or HTTP cookie or simply cookie is data received from an external source that is typically stored in a web browser. Examples of a web cookie are shown in at where a cookie variable name may be set to a value e.g. cookie variable name2 may be set to value2 with an optional attached expiration date etc. Web cookie values may be set by destination web servers and intermediary network elements which may even insert data e.g. a MAC address or other unique identifier to which user applications would not normally have access.

An example is shown in the ladder diagram of which shows steps of a process by which a user application such as a web browser may communicate with other network elements to obtain location information of the device using a MAC address of the device but without the application having access to the MAC address of the device. A user device may access a web page at with for example by an HTTP GET request http somesite.com which may be intercepted by an HTTP proxy and forwarded to a web server at . The web server may respond with web content at . The HTTP proxy may then inject a cookie with the MAC address of the user device into the web content and forward it to the user application web browser at . Such a cookie injection may be as achieved by for example Set Cookie Macaddress 3C 97 0E 6A E7 6B. The HTTP proxy may acquire the MAC address information of the user device from the packet or frame header at or from the packet or frame header at . In another form the HTTP proxy may acquire an IP address and look up the associated MAC address in local storage or pull MAC addresses from the headers of packets or frames and immediately inject them into cookies. The HTTP proxy may also obtain the IP address of the user device at steps or from the HTTP GET request packet header or internal storage and query a controller or location server e.g. MSE server to obtain the MAC address for the user device for injection at . The controller or location server may maintain a table containing IP addresses on the network and associated MAC addresses.

The user application could then read the cookie with JavaScript code at for example though a variety of other programming languages could accomplish this feature. Such a command may be for example getCookie Macaddress which would return the MAC address value at . The JavaScript code may then create a request to a location server e.g. the MSE server by way of an Extensible Markup Language XML Simple Object Access Protocol SOAP location query as shown at . The application programming interfaces APIs of the location server and other network elements may also be based on a representational state transfer REST model. Other API models are within the scope of techniques presented herein. The MSE may then return location coordinates at as X Y Z coordinates latitude and longitude etc.

This technique may repeatedly update the cookie with a MAC address each time a user sends a request to any location or website or may intermittently update the MAC address at a predetermined time interval which may be set by the user or only when the user application is accessing location based functionality. Similarly the user application may query the location server to obtain location coordinates after each time a request is sent and MAC address received or may check for location coordinates after predetermined time intervals which may be set by the user or may check for location coordinates only when the user is accessing location based services. Any combinations of these features are envisioned.

Another technique is presented with reference to . which shows steps for a process by which a user application such as a web browser may communicate with other network elements to obtain location coordinates. In this embodiment a user device may access a web page at with for example an HTTP GET request which may be intercepted by an HTTP proxy and forwarded to a web server at . The web server may respond with web content at . The HTTP proxy may use the MAC address of the user device in an XML SOAP location query at to the MSE server to obtain location coordinates from the MSE server at . The HTTP proxy may obtain the MAC address from the packet header of the incoming HTTP GET request at or from the HTTP response at for use in the location query at . The HTTP proxy may also obtain the IP address of the user device at steps or from the HTTP GET request packet header or internal storage query a controller or location server at to get the location coordinates for the user device for injection at . The HTTP proxy may inject the coordinates into a cookie in the web content and return it to the application at . The user application may then access the location coordinates using JavaScript code or other programming language at and . Variations in the protocols and languages used the format of the location coordinates and frequency of insertion into HTTP requests etc. are discussed above with respect to and are applicable to the process .

Systems which locate users may have an opt in feature. This may be accommodated by the HTTP proxy presenting a login page or splash page on the user device in response to an initial HTTP request. A checkbox or similar feature may be presented allowing the user to opt out of cookie based location updates.

In another example the HTTP proxy or any other network element may inject a tag containing location information which may include location coordinates into the HTML body of the web page requested using HTML or other web programming languages. Code may also be injected into other portions of web content for example JavaScript into a JavaScript portion of a webpage. Injected code may set a global variable with location information such as a MAC address or other unique identifier which the application on the user device may access. A Document Object Model DOM object may also be injected to provide a MAC address or other unique identifier other location information or location coordinates. Injections of JavaScript HTML DOM objects etc. may occur for example at steps in in . The injected JavaScript DOM object or in general any injected web software code may also contain software functions which enable the user device to communicate with a location server e.g. the MSE server to obtain location information using the MAC address.

The user the application or any network device such as the controller may specify how often the HTTP request for location information should be or will be executed. The application on the user device or a network element may perform a Domain Name System DNS lookup to obtain an IP address corresponding to a domain name used in steps and . Other protocols such as Mobility Services Advertisement Protocol MSAP may be used to obtain the IP address. Further the Where Am I service of may run in the background of the application and thus the user may be unaware of the execution of the service.

A variation of the proxy free technique shown in is shown in . shows a series of steps for process by which a user application such as a web browser may communicate with other network elements to obtain location coordinates again without the use of a proxy. A controller and or an access point may first provide instructions at as to how the application on the user device may query location information. This may be by providing a predetermined IP address or a domain name for the user to access. The predetermined IP address or domain name may be determined by the application a user of the user device a network administrator the controller or access point etc. The instructions conveyed at may also include code in for example JavaScript to allow the application to access location information at the predetermined domain name. The application may then initiate an HTTP GET request at and to the predetermined domain name which is received by the access point and or controller. This is similar to a redirect since the IP address or domain name does not necessarily point to an external web server but rather may be intercepted by the local controller or other network element which in turn forwards the relevant identifier of the user device to the entity that has the location information about the device. The controller may have access to layer 2 information of the request packet frame header where the MAC address is contained. The controller and or access point may then use that MAC address in for example an XML SOAP query to the MSE server at to obtain location coordinates from the MSE server at . The access point and or controller may then insert the location coordinates into the HTTP response at as for example XML data to be read by the application JavaScript at . The aforementioned variations described above with respect to the previous figures are also applicable to the process of .

The memory may comprise read only memory ROM random access memory RAM that stores software and data magnetic disk storage media devices optical storage media devices flash memory devices electrical optical or other physical tangible memory storage devices such as removable storage related devices and software. Thus in general the memory may comprise one or more tangible non transitory computer readable storage media e.g. a memory device encoded with software comprising computer executable instructions and when the software is executed by the processor it is operable to perform the operations described herein.

There are many applications to the techniques presented herein. For example event venue operators want to offer local services to users of Smartphones and these services typically depend on being able to locate the Smartphone within the venue. A significant problem is that web based clients unlike downloaded apps do not have access to the device MAC address or the device location. This is because the code that runs in the web browser context is untrusted and restricted from making calls to the operating system running on the Smartphone.

As presented above in one example the MAC address or current location is provided to a web based mobile client application as a cookie that is inserted by an HTTP proxy. In the case that the cookie contains the MAC address the client then uses the MAC address cookie for querying an entity having access to location information of the device or an entity capable of initiating a location process to obtain the location of the device. In the case that the cookie contains the current location this can be used immediately by the client application.

In another method the device makes a Layer 4 Where Am I request to a special proxy IP address on a wireless network controller which obtains the MAC address from the packet queries the MSE and responds with the device location. This method can be used with both web applications and native applications. With some operating systems even native applications will not be able to query the operating system for the device MAC.

Again these techniques enable location of web based mobile clients which is useful for many in venue apps such as indoor way finding coupons etc. There is a growing trend towards use of web based applications over downloaded applications because web based applications are platform independent and run on all types of user devices.

In summary a method is provided comprising receiving at a network element in a network a request from an application on a device the request being encapsulated in a packet that includes a header that contains a physical layer identifier of the device to which the application does not have access obtaining the physical layer identifier at the network element and sending a response to the application on the device the response containing at least one of the physical layer identifier of the device and location information of the device.

Further an apparatus is provided comprising a network interface unit configured to enable communications over a network a processor coupled to the network interface unit and configured to receive a request from an application on a device the request being encapsulated in a packet that includes a header that contains a physical layer identifier of the device to which the application does not have access obtain the physical layer identifier of the device and send a response to the application on the device the response containing at least one of the physical layer identifier of the device and location information of the device.

Further still a computer readable storage media is encoded with software comprising computer executable instructions and when the software is executed operable to receive a request from an application on a device the request being encapsulated in a packet that includes a header that contains a physical layer identifier of the device to which the application does not have access obtain the physical layer identifier at the network element and send a response to the application on the device the response containing at least one of the physical layer identifier of the device and location information of the device.

Described above are examples. The concepts described herein may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. The foregoing examples are therefore to be considered in all respects illustrative and not meant to be limiting. Accordingly it is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of any claims filed in applications claiming priority hereto interpreted in accordance with the breadth to which they are fairly legally and equitably entitled.

