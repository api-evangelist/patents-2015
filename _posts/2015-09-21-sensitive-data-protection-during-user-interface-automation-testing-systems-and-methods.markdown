---

title: Sensitive data protection during user interface automation testing systems and methods
abstract: There is provided systems and method for sensitive data protection during user interface automation testing. A user may transmit sensitive data to the test website framework, where the sensitive data is encrypted as a data key. The encrypted data key is set by an administrator of the test website and given to the user. The user may enter the key, where the test website framework application utilizes a conversion kit to decrypt the encrypted data key for use in the website user interface automation test. However, the encrypted data key is pulled into a version control system and/or viewed in test results so that the sensitive data remains hidden from view. In various embodiments, the encrypted data key may be entered into a web element, such as a password field, where the password field displays only the encrypted data key during test results.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09501657&OS=09501657&RS=09501657
owner: PAYPAL, INC.
number: 09501657
owner_city: San Jose
owner_country: US
publication_date: 20150921
---
This application is a continuation of and claims priority to U.S. patent application Ser. No. 14 095 297 filed Dec. 3 2013 which is hereby incorporated by reference in its entirety.

The present application generally relates to protection of sensitive data during user interface automation testing and more particularly to receiving an encrypted data key corresponding to sensitive data from a test user during a web user interface automation test so that the sensitive data remains hidden to viewers of a data report corresponding to the web user interface automation test.

During web user interface automation test test executors e.g. users of the test website may require the use and or transmission of sensitive data into the test framework. The sensitive data may appear in a test data file contained with a version control system VCS and or visible to code authors viewing results of the test framework. For example sensitive data may be pulled into the VCS and the test file may be required to be shared with the public and or viewed by code authors not authorized to view and or use the sensitive data. Thus test executors data is not protected from public inspection. Test executors may manually run cases directly with the test website instead of through the test framework however large resource are required to manage the test data that is not stored in the VCS and or managed by the test framework. Other test frameworks may require the test executors to enter sensitive data for example user names and or passwords into web elements where users and or code authors may view the sensitive data in test data files and or test results. Thus test executors data is visible to unauthorized parties.

Embodiments of the present disclosure and their advantages are best understood by referring to the detailed description that follows. It should be appreciated that like reference numerals are used to identify like elements illustrated in one or more of the figures wherein showings therein are for purposes of illustrating embodiments of the present disclosure and not for purposes of limiting the same.

In various embodiments a user such as a test executor of a test website may wish to transmit sensitive data to the test website for use by a test framework application performing website user interface UI automation tests. The user may receive an encrypted data key corresponding to the sensitive data. For example the sensitive data may be encrypted using an encryption algorithm and key held by an administrator of the test framework. The encryption algorithm may correspond to an RSA algorithm having a public key held by the test administrator. The user may transmit the encrypted data key to the test website for use in the test framework. When transmitting the encrypted data key to the test framework the encrypted data key may be transmitted in a test data file for an execution of a website user interface test. The test data file may be stored to a version control system VCS where various public users executors administrators and code authors may view the test data file. However in the test data file the encrypted data key is visible and the clear text for the sensitive data remains hidden. In various embodiments the encrypted data key may be entered into a web element instead such as a password field where a corresponding test data file and or test results for the website UI automation test displays only the encrypted data key.

The test website framework application utilizes a conversion kit to decrypt the encrypted data key for use in the website user interface automation test. Where the encrypted data key is entered to a web element the test framework may determine if the user is in a production environment and utilize the conversion kit to decrypt the encrypted data key. However the web element and test data file test results show the encrypted data key and not the clear text of the sensitive data in the test data file. The conversion kit may look up the encrypted data key in a cipher mapping file where the cipher mapping file may correspond to an extensible markup language XML or comma separated value CSV file having key value pairs. Each key represents an encrypted data key where each value represents a corresponding cipher text created from encryption of the sensitive data. The cipher mapping file allows users and or administrators to utilize a smaller key to enter to the test framework instead of the long cipher text.

Once the conversion kit recovers the cipher text the conversion kit may utilize a corresponding encryption algorithm such as an RSA algorithm and a public key held in the cipher mapping file to decrypt the cipher text and recover the clear text. The clear text may then be utilized by the test framework to execute a website UI automation test. Additionally the encrypted data key may be recorded in test results and or a test data file so sensitive data remains hidden.

System includes a user a user device a version control system and a test website server in communication over a network . User such as a test executor of a test website may utilize user device while engaging in and or transmitting data for a website UI automation test. In certain embodiments test website server may receive test data such as test data files including encrypted data keys from user through user device . Additionally test data files may be stored to version control system for public inspection and user in website UI automation tests.

User device version control system and test website server may each include one or more processors memories and other appropriate components for executing instructions such as program code and or data stored on one or more computer readable mediums to implement the various applications data and steps described herein. For example such instructions may be stored in one or more computer readable media such as memories or data storage devices internal and or external to various components of system and or accessible over network .

User device may be implemented using any appropriate hardware and software configured for wired and or wireless communication with version control system and or test website server . For example user device may be implemented as a personal computer PC a smart phone personal digital assistant PDA laptop computer wristwatch with appropriate computer hardware resources eyeglasses with appropriate computer hardware e.g. GOOGLE GLASS and or other types of computing devices capable of transmitting and or receiving data such as an IPAD from APPLE . Although a user device is shown the user device may be managed or controlled by any suitable processing device. Although only one user device is shown a plurality of user devices may be utilized.

User device of contains a browser application other applications a database and a network interface component . Browser application and other applications may correspond to processes procedures and or applications executable by a hardware processor for example a software program. In other embodiments user device may include additional or different software as required.

Browser application may be used for example to provide a convenient interface to permit a user to access the Internet including version control system and or test website server . In one embodiment browser application may be implemented as a web browser configured to view information available over the Internet for example accessing a website. Browser application may be configured to transmit and receive data of network including receiving webpages and displaying the webpages to user and transmitting user input corresponding to the webpages. In this regard browser application may display test webpages for a website corresponding to test website server to user . Browser application may receive user input from user corresponding to the webpages. In various embodiments the user input may correspond to test data including encrypted data key s corresponding to sensitive data. Encrypted data keys may be received from direct input of user and or from stored data in database . The test data including the encrypted user key s may be transmitted to test website server for example if a test data file is transmitted to test website server and or one or more encrypted data key is entered to a web element on a webpage of test website server .

Browser application may further be utilized to transmit test data to version control system for storage in a test data file. A test data file may correspond to a data container including test data for entry into a test framework for a website UI automation test. The test data file included in the data container may include encrypted data key s corresponding to sensitive data. In various embodiments browser application may be utilized to receive other information such encrypted data keys from an administrator of test website server and or website user interface test information from test website server .

User device includes other applications as may be desired in particular embodiments to provide features to user device . For example other applications may include security applications for implementing client side security features programmatic client applications for interfacing with appropriate application programming interfaces APIs over network or other types of applications. Other applications may also include email texting voice and IM applications that allow a user to send and receive emails calls texts and other notifications through network including for establishment receipt and or verification of encrypted data keys used by test website server . Other applications may contain other software programs executable by a processor including a graphical user interface GUI configured to provide an interface to the user.

User device may further include database which may include for example identifiers such as operating system registry entries cookies associated with browser credit application and or other applications identifiers associated with hardware of user device or other appropriate identifiers such as identifiers used for user device authentication or identification. In one embodiment identifiers in database may be used by version control system and or test website server .

In various embodiments database may further contain user information or may include data to access user information. Thus database may contain further user personal information e.g. a name social security number user financial information or other identifying information a user account identifier and a user device identifier. In various embodiments database may include online account access information. Database may include encrypted data key s transmitted from a system administrator of test website server and stored with user device . In various embodiments database may include additional information such as a portion or all of a cipher mapping file having key value pairs corresponding to encrypted data key s and cipher text.

In various embodiments user device includes at least one network interface component adapted to communicate with version control system and or test website server . In various embodiments network interface component may include a DSL e.g. Digital Subscriber Line modem a PSTN Public Switched Telephone Network modem an Ethernet device a broadband device a satellite device and or various other types of wired and or wireless network communication devices including microwave radio frequency infrared Bluetooth and near field communication devices.

Version control system may be maintained for example by an online and or offline version control system offering revision version source control applications and or features. Generally version control system may control the management of changes to documents data computer programs websites and or other collections of information. In this regard version control system may include one or more applications to retain test data in one or more test data containers enabling code authors of test website server s website and or user interfaces to view the test data in an organized and collected set. Thus version control system may be configured to interact with user device and or other user devices to receive test data. Additionally version control system may be configured to interact with test website server for the storage of test data and or the transmission of test data files to test website server .

Version control system may be implemented using any appropriate hardware and software configured for wired and or wireless communication with user device and or test website server . For example version control system may be implemented as a single or networked personal computer PC a smart phone personal digital assistant PDA laptop computer and or other types of computing devices capable of transmitting and or receiving data. Although a single version control system is shown a plurality of version control systems may be utilized.

Version control system includes test data containers identifiers and a network interface component . Version control system may include processes procedures and or applications executable by a hardware processor for example a software program necessary for storage of test data containers and or identifier . In other embodiments version control system may include additional or different software as required

Test data containers may correspond to a data structure for storing objects in an organized way and with specific access rules. Test data containers may include test data files having encrypted data key s from user . Test data containers may include one or more test data files and may organize and or limit access rights to one or more of the test data files. Each of test data containers may correspond to a single test data instance or may correspond to a collection of test data for example from a particular test executor e.g. user test version e.g. website UI version or other categorizing event. Additionally the data container may include additional information as necessary by a test website server to store and categorize test data files for use by a test framework in a website UI automation test.

Version control system includes identifiers used with test data containers and or associated with user including user device . For example identifiers may include identifiers identifying an entity of origin of a test data file and or test data container a time or origin and or other identifying information. Identifiers may include data necessary for test website server to match test data files with user such as an identifier of user device and or user . Thus identifiers may enable test website server to identify an author of a test data file including an encrypted data key and a holder of the encrypted data key.

In various embodiments version control system includes at least one network interface component adapted to communicate with user device and or test website server . In various embodiments network interface component may include a DSL e.g. Digital Subscriber Line modem a PSTN Public Switched Telephone Network modem an Ethernet device a broadband device a satellite device and or various other types of wired and or wireless network communication devices including microwave radio frequency infrared Bluetooth and near field communication devices.

Test website server may be maintained for example by an online entity establishing a test website having a user interface. In this regard test website server includes one or more processing applications which may be configured to interact with user device and or version control system to facilitate the testing of a website UI. Test website server may include a test website UI and a test framework enabling test data to be run through the test website UI. Thus test website server may be maintained by any entity wishing to perform a website UI automation test. Although test website server is described as separate from version control system it is understood that test website server may include one or more version control system s .

Test website server of includes a test website UI application a test framework application a conversion application other applications a database and a network interface component . Test website UI application test framework application conversion application and other applications may correspond to processes procedures and or applications executable by a hardware processor for example a software program. In other embodiments test website server may include additional or different software as required.

Test website UI application may provide a user interface application of a test website. Test website UI application may correspond to one or more UI displayable to user for example using browser application . In this regard test website UI application provides an interface for interactions between user and test website server through browser application . Test website UI application may receive user input and output results to user . For example test website UI application may display a webpage of test website server and accept user input corresponding to manipulation of the webpage by user . Test website UI application may output results of the manipulation to user .

Test website UI application may receive data input from user for example user login user information entry or user selections of options interactions and links available in test website UI application . However user input may correspond to sensitive information in various embodiments. Thus during website UI automation tests test framework application may utilize conversion application to prevent leakage of sensitive information during UI automation tests of test website UI application as discussed herein.

Test framework application may correspond to an application including a set of processes to provide support to automated testing of test website UI application . For example test website UI application may correspond to a test UI of a website where test executors such as user provide test data to code authors in order to test the UI. Test framework application may receive test data and map the test data to test website UI application in order to receive the results. Thus test framework application may generate UI events from test data contained in a test data file for use with test website UI application . Test framework application may enable a code author system administrator of test website server or other reviewing party to observe and validate the behavior of test website UI application using an automation test.

Test framework application may require sensitive data for test website UI application in various embodiments. For example test website UI application may include web elements requiring input of sensitive data such as a user name and or password field of a login request stored in test data files for use in a website UI automation test. Sensitive data may correspond to user names passwords social security numbers personal information e.g. phone numbers email address physical address driver license number etc. or user financial information e.g. credit debit card numbers checking savings accounts etc. . Thus user may wish to prevent other user from viewing the sensitive data.

In order to hide the sensitive data in test data files user may utilize one or more encrypted data key corresponding to the sensitive data. The encrypted data key may be part of a key value pair where the value is cipher text of the sensitive data encrypted using an encryption algorithm and symmetric asymmetric key. A test administrator may determine the encrypted data key and the cipher text and transmit the encrypted data key to user for use with web UI automation tests for test website server . Thus test framework application may receive one or more encrypted data key s in web element s and or in a received test data file for an automation test of test website UI application . In order to perform an automation test of test website UI application the test framework application may utilize conversion application .

Conversion application may correspond to an application including a conversion kit for decrypting one or more encrypted data key s into a corresponding clear text which may then be utilized with test website UI application and test framework application to run a website UI automation test. Thus conversion application may include the conversion kit having a cipher mapping file and an encryption algorithm. The encryption algorithm may be chosen by a system administrator and in various embodiments correspond to an RSA algorithm. The encryption algorithm may include a corresponding symmetric public key or may include a corresponding asymmetric key pair where the public and private keys may be held by one or more of a system administrator and or user .

Conversion kit of conversion application may also include a cipher mapping file. The cipher mapping may include the symmetric and or asymmetric key s for the encryption algorithm. Additionally the cipher mapping file may include the encrypted data key where the encrypted data key correspond to a short identifier. The cipher mapping file may include key value pairs where the key correspond to each encrypted data key and the value corresponds to the matching cipher text. The matching cipher text is cipher text of sensitive data after being encrypted using the encryption algorithm. As cipher text normally corresponds to a very long string the encrypted data key is used for user convenience to identify the cipher text. Thus the encrypted data key may be used by user instead of a long string of cipher text.

Conversion application returns clear text by looking up the encrypted data key s in the test data file using the cipher mapping file. Once the cipher text matching the encrypted data key is found conversion application may utilize the encryption algorithm and public key to return clear text by decrypting the cipher text. The clear text may then be utilized by test framework application when performing web UI automation tests of test website UI application . However the test data file only displays the encrypted data key and the encrypted data key is entered to web elements to prevent revealing sensitive data to other users.

In various embodiments test website server includes other applications as may be desired in particular embodiments to provide features to test website server . For example other applications may include security applications for implementing server side security features programmatic server applications for interfacing with appropriate application programming interfaces APIs over network or other types of applications. Other applications may contain software programs executable by a processor including a graphical user interface GUI configured to provide an interface to a user.

Additionally test website server includes database . Database may be protected to prevent unauthorized views of protected personal and or sensitive information. Database may include user information such as name address birthdate payment funding information additional user financial information and or other desired user data. User information may be linked to a user account such as a user name and or password. The user name and or password may be utilized by a system administrator of test website server with sufficient access privileges to establish one or more encrypted data key s . In other embodiments user may not have previously established a user account and other sensitive data may be stored in database and or utilized for encrypted data key s .

In various embodiments database stores data for test framework application including test data files. Additionally database may store test results including test results displaying encrypted data keys. Database may further store data for conversion application including the conversion kit having a cipher mapping file and an encryption algorithm.

In various embodiments test website server includes at least one network interface component NIC adapted to communicate with network including user device and or version control system . In various embodiments network interface component may comprise a DSL e.g. Digital Subscriber Line modem a PSTN Public Switched Telephone Network modem an Ethernet device a broadband device a satellite device and or various other types of wired and or wireless network communication devices including microwave radio frequency RF and infrared IR communication devices.

Network may be implemented as a single network or a combination of multiple networks. For example in various embodiments network may include the Internet or one or more intranets landline networks wireless networks and or other appropriate types of networks. Thus network may correspond to small scale communication networks such as a private or local area network or a larger scale network such as a wide area network or the Internet accessible by the various components of system .

Test data container with an encrypted data key may be received at by test data framework application . As previously discussed a test data container may include one or more test data files each having one or more encrypted data key s . A test data container may correspond to one or more test data instances from a user or for a particular version of a website user interface. Thus the test data container may include test data for execution by test data framework application using a websites user interface. However the website UI automation test executed by test data framework application may require conversion kit to return clear text for use in the website UI automation test. An exemplary test data file having encrypted data keys is displayed in Table 1.

As can be seen test data file contains a login attempt for a website UI automation test. The User.Email and User.Password fields include encrypted data keys of us user1 and us password instead of clear text of the user s email and password. Thus test data framework application utilizes conversion kit to look up cipher text for an encrypted data key in a cipher mapping file at . Conversion kit includes the cipher mapping file having key value pairs corresponding to encrypted data key cipher text pairs. Using the cipher mapping file conversion kit may return cipher text corresponding to encrypted sensitive data a user wishes to remain hidden in test data files containers. The cipher mapping file may correspond to a XML file a CSV file or other structured file displaying key value pairs. For example Table 2 shows a portion of a potential cipher mapping file.

Thus at the cipher texts corresponding to us user 1 and us password are returned. The cipher test is decrypted using an encryption algorithm of conversion kit and a stored key in the cipher mapping file. The encryption algorithm may correspond to an RSA algorithm with a symmetric public key stored in the cipher mapping file. Thus conversion kit returns clear text from the cipher text at for use by test data framework application .

The decrypted clear data is entered into the test websites user interface by test data framework application at . Test data framework application may execute a web UI automation test by utilizing test data container with a website UI. The decrypted clear data may be entered during the automation test however remain hidden from view of users viewing the results of the website UI automation test and or the test data file s in the test data container. Test data framework application may obtain test results from the website UI automation test at and report the test results with the test data container including the encrypted data key at . Thus system administrators code authors and other users viewing test results of a web UI automation test may view test files and or test results without viewing sensitive data.

At step a data file including a first encrypted data key is received wherein the first encrypted data key is logged in the data file. The data file may correspond to a test data file therefore the first encrypted data key may be logged in the data file for a website user interface automation test. The data file may be transmitted by a user device and and or a version control system VCS . For example a user device may transmit the data file for execution in a website UI automation test. However in other embodiments the VCS includes one or more data containers having data files. The VCS may receive data files from the user device or may receive data files after entry of an encrypted data key during use of a test website UI by a user. The data file may be viewed by a party other than the user transmitting the data file. Thus the first encrypted data key is visible in the data file instead of the corresponding sensitive data. The first encrypted data key may correspond to a key identifying an encrypted user name password and or other sensitive data e.g. financial data personal data etc. . The encrypted sensitive data may be cipher text of the sensitive data. In various embodiments the first encrypted data key may be entered to a web element of the website UI prior to logging the first encrypted data key in the data file. Once the test website server receives the data file and or a data container including one or more data files the test website server may run a website UI automation test.

A test website server may run a website UI automation test be utilizing a test framework with the data file on a website UI. Thus the test framework requires the use of data in the data file for input into various elements of the website UI. Where the data file includes encrypted data keys the test framework utilizes a conversion kit to determine clear text for input to the website UI. At step a first cipher text corresponding to the first encrypted data key is determined using a conversion kit wherein the conversion kit includes a cipher mapping file and an encryption algorithm. The cipher mapping file may include a key value pair list where the key corresponds to each of a plurality of encrypted data keys and the value corresponds to each of a plurality of matching cipher text. Thus the conversion kit may determine the cipher text corresponding to the encrypted data key by looking up the cipher text in the cipher mapping file.

The conversion kit also includes an encryption algorithm corresponding to the first cipher text. Thus at step the first cipher text is decrypted using the encryption algorithm to obtain a first data. In various embodiments the encryption algorithm may correspond to an RSA algorithm. The first data may correspond to clear text of the sensitive data such as the user name password and or other sensitive data. The first data may then be utilized with a test framework to run a website UI automation test and obtain test results. However the encrypted data key is only visible in the test data file and not the clear text preventing leakage of the clear text.

Computer system includes a bus or other communication mechanism for communicating information data signals and information between various components of computer system . Components include an input output I O component that processes a user action such as selecting keys from a keypad keyboard selecting one or more buttons image or links and or moving one or more images etc. and sends a corresponding signal to bus . I O component may also include an output component such as a display and a cursor control such as a keyboard keypad mouse etc. . An optional audio input output component may also be included to allow a user to use voice for inputting information by converting audio signals. Audio I O component may allow the user to hear audio. A transceiver or network interface transmits and receives signals between computer system and other devices such as another user device a merchant server or a service provider server via network . In one embodiment the transmission is wireless although other transmission mediums and methods may also be suitable. One or more processors which can be a micro controller digital signal processor DSP or other processing component processes these various signals such as for display on computer system or transmission to other devices via a communication link . Processor s may also control transmission of information such as cookies or IP addresses to other devices.

Components of computer system also include a system memory component e.g. RAM a static storage component e.g. ROM and or a disk drive . Computer system performs specific operations by processor s and other components by executing one or more sequences of instructions contained in system memory component . Logic may be encoded in a computer readable medium which may refer to any medium that participates in providing instructions to processor s for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. In various embodiments non volatile media includes optical or magnetic disks volatile media includes dynamic memory such as system memory component and transmission media includes coaxial cables copper wire and fiber optics including wires that comprise bus . In one embodiment the logic is encoded in non transitory computer readable medium. In one example transmission media may take the form of acoustic or light waves such as those generated during radio wave optical and infrared data communications.

Some common forms of computer readable media includes for example floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EEPROM FLASH EEPROM any other memory chip or cartridge or any other medium from which a computer is adapted to read.

In various embodiments of the present disclosure execution of instruction sequences to practice the present disclosure may be performed by computer system . In various other embodiments of the present disclosure a plurality of computer systems coupled by communication link to the network e.g. such as a LAN WLAN PTSN and or various other wired or wireless networks including telecommunications mobile and cellular phone networks may perform instruction sequences to practice the present disclosure in coordination with one another.

Where applicable various embodiments provided by the present disclosure may be implemented using hardware software or combinations of hardware and software. Also where applicable the various hardware components and or software components set forth herein may be combined into composite components comprising software hardware and or both without departing from the spirit of the present disclosure. Where applicable the various hardware components and or software components set forth herein may be separated into sub components comprising software hardware or both without departing from the scope of the present disclosure. In addition where applicable it is contemplated that software components may be implemented as hardware components and vice versa.

Software in accordance with the present disclosure such as program code and or data may be stored on one or more computer readable mediums. It is also contemplated that software identified herein may be implemented using one or more general purpose or specific purpose computers and or computer systems networked and or otherwise. Where applicable the ordering of various steps described herein may be changed combined into composite steps and or separated into sub steps to provide features described herein.

The foregoing disclosure is not intended to limit the present disclosure to the precise forms or particular fields of use disclosed. As such it is contemplated that various alternate embodiments and or modifications to the present disclosure whether explicitly described or implied herein are possible in light of the disclosure. For example the above description has focused on test data and testing systems however features described herein may also apply to other situations where sensitive data may advantageously be masked or hidden. Having thus described embodiments of the present disclosure persons of ordinary skill in the art will recognize that changes may be made in form and detail without departing from the scope of the present disclosure. Thus the present disclosure is limited only by the claims.

