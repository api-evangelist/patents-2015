---

title: Data integrity checks
abstract: Aspects of the present disclosure relate to performing agnostic data integrity checks on source data, and based on the data integrity checks, generating a human-readable report that may be useable to identify specific errors or anomalies within the source data. Example embodiments involve systems and methods for performing the data integrity checks and generating the human-readable reports. For example, the method may include operations to ingest data from a source database through a data pipeline and into a local database, access the data from the data pipeline, determine a data type of the data, determine subtypes of data elements which make up the data, determine a count of each subtype, and generate a human-readable report, to be displayed at a client device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09454564&OS=09454564&RS=09454564
owner: Palantir Technologies Inc.
number: 09454564
owner_city: Palo Alto
owner_country: US
publication_date: 20150909
---
The subject matter disclosed herein relates to data processing. In particular example embodiments may relate to techniques for detecting inconsistencies and errors in source data.

As computing power and data storage grows computational tools configured to ingest large amounts of source data through data pipelines have become increasingly common. This source data may include for example tabular input data comprising multiple rows and columns of data elements.

Unfortunately as source data is frequently retrieved from multiple sources the data is often disorganized and may suffer from data quality issues as a result of formatting errors and human error. As a result the computational tools are often unable to perform their intended functions effectively. Thus methods exist to analyze and detect anomalies which may exist in the source data with varying levels of usefulness.

For example automated systems exist which monitor streams of source data and are configured to detect specific types of errors and inconsistencies within the data. However these methods are not entirely effective and are not capable of detecting incorrect values that may be correctly formatted. An alternative solution is to create custom tools for monitoring specific data streams. While these methods may prove effective the process of creating and testing the tool itself often proves to be difficult and time consuming.

Reference will now be made in detail to specific example embodiments for carrying out the inventive subject matter. Examples of these specific embodiments are illustrated in the accompanying drawings and specific details are set forth in the following description in order to provide a thorough understanding of the subject matter. It will be understood that these examples are not intended to limit the scope of the claims to the illustrated embodiments. On the contrary they are intended to cover such alternatives modifications and equivalents as may be included within the scope of the disclosure.

Aspects of the present disclosure relate to performance of agnostic data integrity checks on source data and generation of human readable report based thereon which may be useable to identify specific errors or anomalies within the source data. Example embodiments involve systems and methods for performing the data integrity checks and generating the human readable reports. For example the method may include operations to ingest data from a source database through a data pipeline and into a local database access the data from the data pipeline determine a data type of the data determine subtypes of data elements that make up the data determine a count of each subtype and generate a human readable report to be displayed at a client device. The human readable report includes information and statistics useable to enable a user to quickly view the report and make determinations about the quality of the source data and more easily locate errors or anomalies. The data ingested may include data retrieved through tabular inputs e.g. tabular input data such as data collected in an HTML table.

In some embodiments the data integrity check system determines the data type of the source data based on a set of Boolean checks. Boolean checks include queries for identifying properties of data based on Boolean algebra. Boolean checks therefore have two possible values e.g. yes or no . The data integrity check system may include a set of one or more Boolean checks applicable to any type of data that may be ingested. The Boolean checks may also have sets of associated Boolean sub checks in order to identify data subtypes within the source data. The data integrity check system is also configured to receive additional Boolean checks and Boolean sub checks from a client device. By applying the Boolean checks the data integrity system can determine a data type of the source data as well as the sub types which define data elements within the source data.

In example embodiments the data integrity check system accesses historical data based on various properties of the source data such as the source database from which the source data is retrieved units of measurement associated with the source data subtypes included in the source data or one or more user inputs characterizing the source data. The data integrity check system may then perform checks on the historical data in order to determine a data type of the historical data a subtype of each historical data element within the historical data and a count of the subtypes of historical data in order to generate a human readable report based on the historical data. The report of the historical data provides additional criteria useable to determine if recently ingested source data contains anomalies or errors.

In example embodiments the data integrity check system performs a comparison between the human readable report of recently ingested source data and the report of the historical data in order to identify and locate differences and disparities. For example by comparing the reports the data integrity check system may determine that a particular data element within the source data is of a suspicious order or magnitude compared to what may be historically expected or a value may be indicated to be negative when historically only positive values have been seen. The data integrity check system may visually distinguish the suspicious values located within the source data based on the report of the historical data for example by highlighting suspicious and incorrect values in a pre defined color or by any other means of visually distinguishing a value.

In some instances the data integrity system receives a set of expected data types subtypes and counts associated with a particular set of source data. Similar to the method discussed above with respect to the historical data the expected values may be useable to detect errors anomalies and suspicious values which might exist in the source data.

The report generated by the data integrity system includes additional useful information for validating the source data such as numerical values units of measurement referenced in the source data and statistics and properties of the source data e.g. 90 are numbers 2 are negative etc. . For example a user may also provide one or more threshold values to be applied to the report generated by the data integrity system such that when a value of a data element within the source data transgresses the threshold the data integrity system provides an indication of the transgression.

As shown the network system includes a client device in communication with a data processing platform over a network . The data processing platform communicates and exchanges data with the client device that pertains to various functions and aspects associated with the network system and its users. Likewise the client device which may be any of a variety of types of devices that include at least a display a processor and communication capabilities that provide access to the network e.g. a smart phone a tablet computer a personal digital assistant PDA a personal navigation device PND a handheld computer a desktop computer a laptop or netbook or a wearable computing device may be operated by a user e.g. a person of the network system to exchange data with the data processing platform over the network .

The client device communicates with the network via a wired or wireless connection. For example one or more portions of the network may comprises an ad hoc network an intranet an extranet a Virtual Private Network VPN a Local Area Network LAN a wireless LAN WLAN a Wide Area Network WAN a wireless WAN WWAN a Metropolitan Area Network MAN a portion of the Internet a portion of the Public Switched Telephone Network PSTN a cellular telephone network a wireless network a Wireless Fidelity Wi Fi network a Worldwide Interoperability for Microwave Access WiMax network another type of network or any suitable combination thereof.

In various embodiments the data exchanged between the client device and the data processing platform may involve user selected functions available through one or more user interfaces UIs . The UIs may be specifically associated with a web client e.g. a browser or an application executing on the client device and in communication with the data processing platform .

Turning specifically to the data processing platform a web server is coupled to e.g. via wired or wireless interfaces and provides web interfaces to an application server . The application server hosts one or more applications e.g. web applications that allow users to use various functions and services of the data processing platform . For example the application server may host a data integrity check system that provides a number of data checks and analyses on source data to generate a human readable report. In some embodiments the data integrity check system runs and executes on the application server while in other embodiments the application server provides the client device with a set of instructions e.g. computer readable code that causes the web client of the client device to execute and run the data integrity check system . Further the data integrity check system retrieves associated historical data or may receive expected value data in order to identify specific data elements which may be suspicious or potentially in error.

The source data accessed and analyzed by the data integrity check system may for example include tabular input data. Tabular input data may for example include data which represents a table with a given set of columns with corresponding values. In some embodiments the data integrity check system may also access and analyze non tabular input data where non tabular input data may for example include rows of values where each row represents a distinct variable. The human readable report includes rows and columns of information relevant to the verification of the tabular input data such as a textual representation of the data type a textual representation of the data subtype a count of the data subtype e.g. as a numerical quantity and other statistics relevant to determining the quality of the source data such as a percentage of non zero numbers and a percentage of unavailable data entries. In some embodiments a user may select specific statistics that they wish to be displayed from among a set of possible source data statistics e.g. through a graphical user interface .

For example the tabular input data may include a column of values collected through a tabular input form including a list of temperature values a list of names or even something as generic as a list of uncharacterized values. The data integrity check system receives the ingested data and determines characteristics for each data element within the data e.g. the data type and data subtype in order to generate a human readable report.

The tabular input data analyzed by the data integrity check system is obtained from a third party computing system e.g. corresponding to a data source and in particular a third party database communicatively coupled to the third party computing system . The data may be routinely automatically retrieved e.g. nightly by the data integrity check system or manually provided by a user of the third party computing system or the client device for subsequent processing and analysis by the data integrity check system .

The data obtained from the third party computing system is stored in a database that is communicatively coupled to the application server e.g. via wired or wireless interfaces . The data processing platform may further include a database server not shown that facilitates access to the database . The database may include multiple databases that may be internal or external to the data processing platform .

The data integrity check system is shown as including a data retrieval module a data identification module a computation module a report module and a presentation module all configured to communicate with each other e.g. via a bus shared memory a switch or application programming interfaces APIs . The aforementioned modules of the data integrity check system may furthermore access one or more databases that are part of the data processing platform e.g. database and each of the modules may access one or more computer readable storage media of the client device .

The interface module receives requests from various client computing devices and communicates appropriate responses to the requesting client devices. The interface module may receive requests from client devices in the form of Hypertext Transfer Protocol HTTP requests or other web based application programming interface API requests. For example the interface module provides a number of interfaces e.g. APIs or user interfaces that are presented by the client device that allow data to be received by the data integrity check system .

The interface module also provides user interfaces that include graphical representations of the various analytics produced by the data integrity check system . These user interfaces may include various user input fields configured to define a selection of items to be included in the human readable report to receive threshold values useable to identify anomalies within the source data and to display reports generated by the data integrity check system .

The data retrieval module is configured to retrieve data for processing and analysis. For example the data retrieval module accesses a data pipeline that routes data from a third party source into a local database in order to retrieve raw source data. In some embodiments the data retrieval module obtains such data from the third party database of the third party computing system through appropriate requests e.g. API requests or calls transmitted over the network . The data may be retrieved by the data retrieval module in real time as the raw source data is being ingested into a local database e.g. database . In some embodiments the data retrieval module obtains data from a location specified by a user e.g. via a user interface provided by the interface module which may be within a local database e.g. database .

The data identification module is configured to analyze the raw source data accessed by the data retrieval module in order to identify a data type and corresponding data subtypes of the data elements within the source data. For example the data identification module applies one or more sets of data checks on the source data e.g. Boolean checks in order to identify data type and data subtypes and to identify possible anomalies within the data. An example set of data checks which may be applied to a particular set of source data for example tabular input data is provided below 

By applying a set of data checks e.g. the Boolean checks above the data identification module identifies a data type corresponding to the source data data subtypes of data elements within the source data and possible suspicious data elements or anomalies within the source data. In some embodiments the data identification module selects an appropriate set of checks based on a received user input defining the appropriate checks to apply or by detecting characteristics within the source data. For example the data identification module may have distinct sets of data checks which may be applied to different data sources or simply based on user selection.

In some instances the data identification module receives data check definitions from a client device e.g. client device . For example a user may provide a set of characteristics e.g. units of measurement data format and expected values e.g. an expected order of magnitude an expected range of values and assign the set of characteristics and the expected values to a particular data source or set of source data.

The computation module is configured to receive and analyze source data. The analysis by the computation module includes determining a count of data types and data subtypes and calculating statistics of the source data such as average and median values. In some embodiments a user may identify a desired set of calculations and statistics to be applied to the source data.

The report module is configured to receive the data type and data subtype classifications determined by the data identification module and the calculations done by the computation module in order to generate a human readable report. The human readable report includes a presentation of the identified data types data subtypes and corresponding counts. In some instances the report module is may visually distinguish suspicious values and possible errors based on determinations made by the data identification module and the computation module . For example the report module may visually distinguish suspicious values by placing a graphical element at or near the suspicious or potentially erroneous value or by highlighting the suspicious or potentially erroneous value in a predefined color.

The presentation module is configured to cause presentation of the report e.g. generated by the report module on a display coupled to or embedded in a client device. In some embodiments the presentation module also causes presentation of a graphical user interface that includes user input fields to receive characteristics and expected value definitions for use by the data identification module and the computation module .

At operation the data retrieval module of the data integrity check system ingests source data from a data source e.g. the third party database . For purposes of explanation depicts the data integrity check system retrieving source data from the third party database however the data retrieval module may also access any other data source specified by a user.

At operation the data identification module of the data integrity check system determines one or more data types of the ingested source data based on a set of data checks. In some embodiments at operation the data identification module receives data checks such as data type definitions from multiple sources including the databases and the client device . The data checks include sets of one or more queries to determine characteristics of the source data. The data checks may for example include a set of Boolean checks. After identifying a data type of the source data the data identification module determines data subtypes of the elements comprising the source data.

At operation the computation module of the data integrity check system calculates a count of each data subtype within the source data as well as relevant statistics of the source data in order to generate a report e.g. through a graphical user interface with user input fields generated by the presentation module . In some embodiments a user of the client device may specify statistics and counts for the computation module to determine.

At operation the computation module identifies suspicious and erroneous data within the source data based on the counts and the data type definitions received from the client device . In some embodiments as shown in operations A and B the computation module may also access historical data from the databases and expected value data from the client device in order to identify suspicious elements within the source data e.g. suspicious counts subtypes and data types . For example the computation module may compare the data types data subtypes and counts of the source data with historical data types historical data subtypes and historical counts of similar historical data e.g. based on a source or characteristics of the source data in order to determine if the calculated values are within a reasonable range.

In some embodiments the user may specify expected values or a threshold range of expected values as expected value data. The computation module may then identify the suspicious and erroneous values based on factors including the historical source data as well as the expected value data.

At operation the report module generates a report including the determined data type data subtypes and counts as well as indications of erroneous or suspicious data. The indications of erroneous or suspicious data may be included in a notification transmitted to the client device . The notification may indicate that elements within the source data are or may be in error and the suspicious or erroneous data may be visibly distinguished from the remainder of the source data in the report. At operation the client device receives and presents the report.

At operation the data identification module identifies one or more data types of the source data based on one or more data checks. Data types include numbers dates times and text strings. A user may also identify and provide definitions for additional data types. The data checks applied by the data identification module include Boolean checks.

At operation the data identification module identifies one or more data subtypes of data elements comprising the source data. The data subtypes may vary between data types. For example for numerical data data subtypes may include integers negative values zeros and so on while for dates the data subtypes may include future dates dates before a specified time month data day data etc.

At operation the computation module calculates a count of each subtype within the source data. The count may simply be a number of each subtype. For example the computation module may calculate that a particular set of source data which corresponds to dates in a particular month has a total of thirty one distinct values e.g. thirty one distinct dates within the source data . The computation module determines a count corresponding to each subtype within the source data. At a glance a user may determine whether or not the source data appears to be reasonable. For example when presented with a report indicating counts of data subtypes corresponding to source data including dates if a user notices that the count indicates only two distinct date values when at least thirty one are expected then the user may determine that the data is in error.

In some embodiments the computation module accesses historical data related to the source data e.g. of the same data source or of the same data type in order to compare the historical data to the counts of the source data. By comparing the historical data with the counts of the source data the computation module identifies disparities between the sets of data. For example the computation module may determine that a particular data element within the source data is shown as a negative value while historically the value has been positive or that a particular value is of a different format or order of magnitude from the historical values.

In some embodiments the computation module calculates statistics based on the source data. The statistics include for example average and median values of the subtypes and frequency of each subtype among the total number of subtypes.

In some embodiments a user may specify a threshold value or threshold range of values for each data subtype among the possible data subtypes comprising the source data. Upon receiving the threshold values or threshold range of values the computation module may flag any calculated statistics and counts which transgress the defined thresholds.

Having calculated the counts of subtypes and compared the counts of the subtypes with historical data or the defined thresholds the computation module may flag highlight or otherwise visually distinguish the suspicious and erroneous values.

At operation the report module generates a human readable report including at least the determined data types the determined data subtypes counts of the data subtypes and statistics related to the source data. In some embodiments the report also includes indications of suspicious or erroneous data. At operation the presentation module provides a data file including the report to a client device e.g. client device .

At operation the data retrieval module accesses historical data e.g. from third party database or database based on one or more characteristics of the source data including for example the source database or the data type. The historical data therefore provides an indication of expected values and expected data subtypes within the source data.

At operation the data identification module applies one or more data checks to the historical data e.g. Boolean checks in order to determine a data type of the historical data. In some instances the data type may be known prior to applying the Boolean checks e.g. based on a user input .

At operation having identified the data type of the historical data the data identification module identifies one or more data subtypes comprising the historical data by applying additional Boolean checks corresponding to the data type. At operation the computation module calculates a count of each data subtype. The computation module may also calculate relevant statistics for the historical data.

At operation the report module generates a human readable report including the data types data subtypes counts of the data subtypes and relevant statistics. In instances in which the report module receives user inputs specifying statistics and information to include the specific statics and information requested by the user. The human readable report includes the data type a listing of the data subtypes with corresponding counts and the relevant statistics.

The data types e.g. data type data type and data type are indicated by human readable text displayed as headings for each set of source data within the report . For example data type indicates a data type corresponding to data subtypes data type corresponds to data subtypes and data type corresponds to data subtypes .

The data subtypes e.g. data subtypes data subtype and data subtype are indicated by human readable text. In some embodiments the data subtypes are displayed in a column format in a location within the report related to the corresponding indication of data type e.g. data type data type and data type . Data subtypes may vary based on the data type. For example the set of source data corresponding to data type and data subtypes may include tabular input data corresponding to one or more dates and times. Thus data subtypes may include data subtypes such as future dates dates before 1980 and dates with time zones.

The data subtype counts are also shown to include a count indicating a total quantity of the data subtype within the source data. For example the data subtype indicated as total distinct values has a corresponding count indicating a total of fifty seven occurrences of distinct values.

The report also includes indications of suspicious or erroneous values e.g. indicator indicator indicator . For example indicator is depicted as a box over a suspicious or erroneous value. The determination that a value of a data subtype is erroneous or suspicious may be based on comparison of the data subtype value with historical or expected values as is discussed with reference to .

Operations and include Boolean checks for determining a data type of the source data. Starting at operation the data identification module applies a Boolean check to determine if the source data includes a number. If the Boolean checks returns true then the data identification module may apply a corresponding set of sub checks in operations A B and C in order to determine data subtypes of the source data. For example If the Boolean check of operation returns true then the corresponding sub checks determine if the data indicates an integer operation A if the data indicates a negative value operation B or if the data indicates a zero operation C . At operation the data identification module reports the results in order for the data integrity check system to generate a human readable report. If operation returns a false value then the data identification module proceeds to operation to apply a second Boolean check.

At operation the data identification module applies a second Boolean check to determine if the source data includes a date or time. If the Boolean check returns true then operations A B and C are applied and the results are reported at operation . If the Boolean check returns false then the data identification module continues to operation . In this way the data identification module may determine data types and data subtypes of source data.

Certain embodiments are described herein as including logic or a number of components modules or mechanisms. Modules may constitute either software modules e.g. code embodied on a machine readable medium or hardware modules. A hardware module is a tangible unit capable of performing certain operations and may be configured or arranged in a certain physical manner. In various example embodiments one or more computer systems e.g. a standalone computer system a client computer system or a server computer system or one or more hardware modules of a computer system e.g. a processor or a group of processors may be configured by software e.g. an application or application portion as a hardware module that operates to perform certain operations as described herein.

In some embodiments a hardware module may be implemented mechanically electronically or any suitable combination thereof. For example a hardware module may include dedicated circuitry or logic that is permanently configured to perform certain operations. For example a hardware module may be a special purpose processor such as a Field Programmable Gate Array FPGA or an Application Specific Integrated Circuit ASIC . A hardware module may also include programmable logic or circuitry that is temporarily configured by software to perform certain operations. For example a hardware module may include software executed by a general purpose processor or other programmable processor. Once configured by such software hardware modules become specific machines or specific components of a machine uniquely tailored to perform the configured functions and are no longer general purpose processors. It will be appreciated that the decision to implement a hardware module mechanically in dedicated and permanently configured circuitry or in temporarily configured circuitry e.g. configured by software may be driven by cost and time considerations.

Accordingly the phrase hardware module should be understood to encompass a tangible entity be that an entity that is physically constructed permanently configured e.g. hardwired or temporarily configured e.g. programmed to operate in a certain manner or to perform certain operations described herein. As used herein hardware implemented module refers to a hardware module. Considering embodiments in which hardware modules are temporarily configured e.g. programmed each of the hardware modules need not be configured or instantiated at any one instance in time. For example where a hardware module comprises a general purpose processor configured by software to become a special purpose processor the general purpose processor may be configured as respectively different special purpose processors e.g. comprising different hardware modules at different times. Software accordingly configures a particular processor or processors for example to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.

Hardware modules can provide information to and receive information from other hardware modules. Accordingly the described hardware modules may be regarded as being communicatively coupled. Where multiple hardware modules exist contemporaneously communications may be achieved through signal transmission e.g. over appropriate circuits and buses between or among two or more of the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times communications between such hardware modules may be achieved for example through the storage and retrieval of information in memory structures to which the multiple hardware modules have access. For example one hardware module may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware module may then at a later time access the memory device to retrieve and process the stored output. Hardware modules may also initiate communications with input or output devices and can operate on a resource e.g. a collection of information .

The various operations of example methods described herein may be performed at least partially by one or more processors that are temporarily configured e.g. by software or permanently configured to perform the relevant operations. Whether temporarily or permanently configured such processors may constitute processor implemented modules that operate to perform one or more operations or functions described herein. As used herein processor implemented module refers to a hardware module implemented using one or more processors.

Similarly the methods described herein may be at least partially processor implemented with a particular processor or processors being an example of hardware. For example at least some of the operations of a method may be performed by one or more processors or processor implemented modules. Moreover the one or more processors may also operate to support performance of the relevant operations in a cloud computing environment or as a software as a service SaaS . For example at least some of the operations may be performed by a group of computers as examples of machines including processors with these operations being accessible via a network e.g. the Internet and via one or more appropriate interfaces e.g. an API .

The performance of certain of the operations may be distributed among the processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the processors or processor implemented modules may be located in a single geographic location e.g. within a home environment an office environment or a server farm . In other example embodiments the processors or processor implemented modules may be distributed across a number of geographic locations.

The machine may include processors memory storage and I O components which may be configured to communicate with each other such as via a bus . In an example embodiment the processors e.g. a Central Processing Unit CPU a Reduced Instruction Set Computing RISC processor a Complex Instruction Set Computing CISC processor a Graphics Processing Unit GPU a Digital Signal Processor DSP an ASIC a Radio Frequency Integrated Circuit RFIC another processor or any suitable combination thereof may include for example a processor and a processor that may execute the instructions . The term processor is intended to include multi core processor that may comprise two or more independent processors sometimes referred to as cores that may execute instructions contemporaneously. Although shows multiple processors the machine may include a single processor with a single core a single processor with multiple cores e.g. a multi core processor multiple processors with a single core multiple processors with multiples cores or any combination thereof.

The memory storage may include a memory such as a main memory or other memory storage and a storage unit both accessible to the processors such as via the bus . The storage unit and memory store the instructions embodying any one or more of the methodologies or functions described herein. The instructions may also reside completely or partially within the memory within the storage unit within at least one of the processors e.g. within the processor s cache memory or any suitable combination thereof during execution thereof by the machine . Accordingly the memory the storage unit and the memory of the processors are examples of machine readable media.

As used herein machine readable medium means a device able to store instructions and data temporarily or permanently and may include but is not limited to random access memory RAM read only memory ROM buffer memory flash memory optical media magnetic media cache memory other types of storage e.g. Erasable Programmable Read Only Memory EEPROM and or any suitable combination thereof. The term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database or associated caches and servers able to store the instructions . The term machine readable medium shall also be taken to include any medium or combination of multiple media that is capable of storing instructions e.g. instructions for execution by a machine e.g. machine such that the instructions when executed by one or more processors of the machine e.g. processors cause the machine to perform any one or more of the methodologies described herein. Accordingly a machine readable medium refers to a single storage apparatus or device as well as cloud based storage systems or storage networks that include multiple storage apparatus or devices. The term machine readable medium excludes signals per se.

Furthermore the machine readable medium is non transitory in that it does not embody a propagating signal. However labeling the tangible machine readable medium non transitory should not be construed to mean that the medium is incapable of movement the medium should be considered as being transportable from one real world location to another. Additionally since the machine readable medium is tangible the medium may be considered to be a machine readable device.

The I O components may include a wide variety of components to receive input provide output produce output transmit information exchange information capture measurements and so on. The specific I O components that are included in a particular machine will depend on the type of machine. For example portable machines such as mobile phones will likely include a touch input device or other such input mechanisms while a headless server machine will likely not include such a touch input device. It will be appreciated that the I O components may include many other components that are not shown in . The I O components are grouped according to functionality merely for simplifying the following discussion and the grouping is in no way limiting. In various example embodiments the I O components may include output components and input components . The output components may include visual components e.g. a display such as a plasma display panel PDP a light emitting diode LED display a liquid crystal display LCD a projector or a cathode ray tube CRT acoustic components e.g. speakers haptic components e.g. a vibratory motor resistance mechanisms other signal generators and so forth. The input components may include alphanumeric input components e.g. a keyboard a touch screen configured to receive alphanumeric input a photo optical keyboard or other alphanumeric input components point based input components e.g. a mouse a touchpad a trackball a joystick a motion sensor or another pointing instrument tactile input components e.g. a physical button a touch screen that provides location and or force of touches or touch gestures or other tactile input components audio input components e.g. a microphone and the like.

In further example embodiments the I O components may include biometric components motion components environmental components or position components among a wide array of other components. For example the biometric components may include components to detect expressions e.g. hand expressions facial expressions vocal expressions body gestures or eye tracking measure biosignals e.g. blood pressure heart rate body temperature perspiration or brain waves identify a person e.g. voice identification retinal identification facial identification fingerprint identification or electroencephalogram based identification and the like. The motion components may include acceleration sensor components e.g. accelerometer gravitation sensor components rotation sensor components e.g. gyroscope and so forth. The environmental components may include for example illumination sensor components e.g. photometer temperature sensor components e.g. one or more thermometers that detect ambient temperature humidity sensor components pressure sensor components e.g. barometer acoustic sensor components e.g. one or more microphones that detect background noise proximity sensor components e.g. infrared sensors that detect nearby objects gas sensors e.g. gas detection sensors to detect concentrations of hazardous gases for safety or to measure pollutants in the atmosphere or other components that may provide indications measurements or signals corresponding to a surrounding physical environment. The position components may include location sensor components e.g. a Global Position System GPS receiver component altitude sensor components e.g. altimeters or barometers that detect air pressure from which altitude may be derived orientation sensor components e.g. magnetometers and the like.

Communication may be implemented using a wide variety of technologies. The I O components may include communication components operable to couple the machine to a network or devices via a coupling and a coupling respectively. For example the communication components may include a network interface component or other suitable device to interface with the network . In further examples the communication components may include wired communication components wireless communication components cellular communication components Near Field Communication NFC components Bluetooth components e.g. Bluetooth Low Energy Wi Fi components and other communication components to provide communication via other modalities. The devices may be another machine or any of a wide variety of peripheral devices e.g. a peripheral device coupled via a Universal Serial Bus USB .

Moreover the communication components may detect identifiers or include components operable to detect identifiers. For example the communication components may include Radio Frequency Identification RFID tag reader components NFC smart tag detection components optical reader components e.g. an optical sensor to detect one dimensional bar codes such as Universal Product Code UPC bar code multi dimensional bar codes such as Quick Response QR code Aztec code Data Matrix Dataglyph MaxiCode PDF4117 Ultra Code UCC RSS 2D bar code and other optical codes or acoustic detection components e.g. microphones to identify tagged audio signals . In addition a variety of information may be derived via the communication components such as location via Internet Protocol IP geo location location via Wi Fi signal triangulation location via detecting an NFC beacon signal that may indicate a particular location and so forth.

In various example embodiments one or more portions of the network may be an ad hoc network an intranet an extranet a VPN a LAN a WLAN a WAN a WWAN a MAN the Internet a portion of the Internet a portion of the PSTN a plain old telephone service POTS network a cellular telephone network a wireless network a Wi Fi network another type of network or a combination of two or more such networks. For example the network or a portion of the network may include a wireless or cellular network and the coupling may be a Code Division Multiple Access CDMA connection a Global System for Mobile communications GSM connection or another type of cellular or wireless coupling. In this example the coupling may implement any of a variety of types of data transfer technology such as Single Carrier Radio Transmission Technology 1 RTT Evolution Data Optimized EVDO technology General Packet Radio Service GPRS technology Enhanced Data rates for GSM Evolution EDGE technology third Generation Partnership Project 3GPP including 3G fourth generation wireless 4G networks Universal Mobile Telecommunications System UMTS High Speed Packet Access HSPA Worldwide Interoperability for Microwave Access WiMAX Long Term Evolution LTE standard others defined by various standard setting organizations other long range protocols or other data transfer technology.

The instructions may be transmitted or received over the network using a transmission medium via a network interface device e.g. a network interface component included in the communication components and using any one of a number of well known transfer protocols e.g. hypertext transfer protocol HTTP . Similarly the instructions may be transmitted or received using a transmission medium via the coupling e.g. a peer to peer coupling to the devices . The term transmission medium shall be taken to include any intangible medium that is capable of storing encoding or carrying the instructions for execution by the machine and includes digital or analog communications signals or other intangible media to facilitate communication of such software.

Throughout this specification plural instances may implement components operations or structures described as a single instance. Although individual operations of one or more methods are illustrated and described as separate operations one or more of the individual operations may be performed concurrently and nothing requires that the operations be performed in the order illustrated. Structures and functionality presented as separate components in example configurations may be implemented as a combined structure or component. Similarly structures and functionality presented as a single component may be implemented as separate components. These and other variations modifications additions and improvements fall within the scope of the subject matter herein.

Although an overview of the inventive subject matter has been described with reference to specific example embodiments various modifications and changes may be made to these embodiments without departing from the broader scope of embodiments of the present disclosure. Such embodiments of the inventive subject matter may be referred to herein individually or collectively by the term invention merely for convenience and without intending to voluntarily limit the scope of this application to any single disclosure or inventive concept if more than one is in fact disclosed.

The embodiments illustrated herein are described in sufficient detail to enable those skilled in the art to practice the teachings disclosed. Other embodiments may be used and derived therefrom such that structural and logical substitutions and changes may be made without departing from the scope of this disclosure. The Detailed Description therefore is not to be taken in a limiting sense and the scope of various embodiments is defined only by the appended claims along with the full range of equivalents to which such claims are entitled.

As used herein the term or may be construed in either an inclusive or exclusive sense. Moreover plural instances may be provided for resources operations or structures described herein as a single instance. Additionally boundaries between various resources operations modules engines and data stores are somewhat arbitrary and particular operations are illustrated in a context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within a scope of various embodiments of the present disclosure. In general structures and functionality presented as separate resources in the example configurations may be implemented as a combined structure or resource. Similarly structures and functionality presented as a single resource may be implemented as separate resources. These and other variations modifications additions and improvements fall within a scope of embodiments of the present disclosure as represented by the appended claims. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense.

In this document the terms a or an are used as is common in patent documents to include one or more than one independent of any other instances or usages of at least one or one or more. In the appended claims the terms including and in which are used as the plain English equivalents of the respective terms comprising and wherein. Also in the following claims the terms including and comprising are open ended that is a system device article or process that includes elements in addition to those listed after such a term in a claim are still deemed to fall within the scope of that claim. Moreover in the following claims the terms first second third and so forth are used merely as labels and are not intended to impose numerical requirements on their objects.

