---

title: Use of decoy data in a data store
abstract: Disclosed are various embodiments for identifying a table of non-decoy data matching a set of criteria. Decoy data is inserted into the table of non-decoy data. The decoy data is detected in a result comprising the decoy data, the result generated in response to an access of the data store. An alarm is generated based at least upon the result.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09361457&OS=09361457&RS=09361457
owner: Amazon Technologies, Inc.
number: 09361457
owner_city: Seattle
owner_country: US
publication_date: 20150206
---
This application is a Continuation of and claims priority to U.S. application Ser. No. 13 602 466 titled Use of Decoy Data in a Data Store filed Sep. 4 2012 which is incorporated herein by reference in its entirety.

In an age of information data stores to store and access information are ubiquitous. Some information may be confidential with only a limited number of parties granted access to the information. However identifying unauthorized access or use of the information may not always be possible.

The present disclosure relates to techniques for identifying potentially malicious activity through automated placement of decoy data into a response to an access of a data store and detection of the decoy data in locations other than where it was placed. Various criteria may be used to select the locations for placement of the decoy data while the decoy data itself may be predefined or generated based on a set of encoding rules using for example steganographic and or cryptographic techniques. Signature data may be created to concisely describe the decoy data which may then be distributed to one or more sentinels to begin examination. The sentinels may detect the decoy data based on comparison of the signature data with the data under examination. Various actions may be undertaken upon detection of decoy data that may be based upon the particular decoy data detected as well as the role and location of the detecting sentinel. In the following discussion a general description of the system and its components is provided followed by a discussion of the operation of the same.

With reference to shown is a networked environment according to various embodiments. The networked environment includes a computing device in data communication with one or more clients and a computing device by way of the network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks. Data communication transiting the network may be forwarded and or examined by a network device .

The computing device may comprise for example a server computer or any other system providing computing capability. Alternatively the computing device may comprise a plurality of servers or other computing devices that are arranged for example in one or more server banks or computer banks or other arrangements. For example the computing device may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. The computing device may be located in a single installation or may be distributed among many different geographical locations.

Various applications and or other functionality may be executed in the computing device according to various embodiments. Also various data is stored in a data store that is accessible to the computing device . The data store may be representative of a plurality of data stores as can be appreciated. As a non limiting example the data store may comprise one or more relational databases object oriented databases document oriented databases and or other types of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing device for example include a marking service a data store manager a sentinel service and other applications services processes systems engines or functionality not discussed in detail herein. The marking service is executed in order to facilitate identifying and or creating tables within the data store and including decoy data in responses to access of the given tables. To this end the marking service may insert the decoy data into the table to be included in responses and or the marking service may insert decoy data only into the responses without insertion into the table. Despite the organizational view of tables stored as rows and columns the data values may be stored in a different structure suitable for the particular data store . The decoy data may include the addition of data to the pre existing data of a table and or response as well as potential modifications to the pre existing data. As a non limiting example the modifications may include for example digital watermarks steganography cryptography and or other techniques for marking data as can be appreciated. In some embodiments the marking service may include coding rules transaction log and or other possible data.

The coding rules comprise rules for identifying and or creating tables within the data store for marking as well as the type of marking to be performed for a given table. The transaction log comprises data associated with historical modifications of the tables and or responses made by the marking service . For a given table modified by the marking service the transaction log may include an identifier for a modified table an identifier for one or more attribute types e.g. columns of decoy data inserted into the table an identifier for one or more records e.g. rows of decoy data inserted into the table decoy data values inserted a time stamp for the access authentication credentials associated with the access and or other data associated modifications to tables by the marking service .

The data store manager is executed in order to facilitate creation maintenance and use of one or more tables within the data store . The data store manager may support query languages or other types of access languages to specify criteria with which to report insert modify and or delete data values associated with the tables. The data store manager may further provide facilities for controlling data access enforcing data integrity managing concurrency control as well as maintaining database security. In some embodiments the data store manager may further offer an application programming interface API or other programmatic interface through which applications and or plug in program modules may interface with the data store manager to extend features and functionality.

The sentinel service is executed in order to facilitate identifying the presence of decoy data located outside of the tables of the data store . The decoy data may be identified based upon a comparison with portions of the signature data . The signature data may contain various types of information that may be employed to positively identify a given piece of data as being decoy data. As a non limiting example the signature data may comprise text strings checksums hash values metadata decoding rules and or other types of identification data as can be appreciated. In some embodiments the signature data may further specify actions to be taken in response to decoy data based upon the particular decoy data detected the computing device in which the sentinel service is executing and or other possible criteria.

The sentinel service may examine data present in memory in a table of the data store other than where it was placed stored in non volatile storage transiting a network interface and or other locations of the computing device in which the sentinel service is executing such as the computing device . The sentinel serve may communicate with the computing device and or other computing devices using various protocols such as for example hypertext transfer protocol HTTP simple object access protocol SOAP representational state transfer REST user datagram protocol UDP transmission control protocol TCP and or other protocols for communicating data over the network .

The data stored in the data store includes for example tables and potentially other data. Each table in the tables is a set of data values organized using a model of vertical columns and horizontal rows wherein a table has a specified number of columns but may have any number of rows. The types of data values represented in the tables may include customer records payment information payment instruments e.g. credit card information debit card information gift card information prepaid card information and stored value account information confidential information personally identifiable information order histories user credentials salary information sales information gift certificates web browser cookies music medical information and or other data as can be appreciated. Each of the tables generally has associated metadata such as constraints on the table and or on the values within particular columns descriptors for the table and or columns or other metadata as can be appreciated. Despite the organizational view of tables stored as rows and columns the data values may be stored in a different structure suitable for the data store .

The client is representative of a plurality of client devices that may be coupled to the network . The client may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a server a laptop computer a personal digital assistant a cellular telephone set top box music players web pads tablet computer systems game consoles or other devices with like capability.

The client may be configured to execute various applications such as a sentinel service and or other applications. The sentinel service as executed in the client is executed in order to facilitate identifying the presence of decoy data. The decoy data may be identified based upon a comparison with portions of the signature data . The signature data may contain various type of information that may be employed to positively identify a given piece of data as being decoy data. As a non limiting example the signature data may comprise text strings checksums hash values metadata decoding rules and or other types of identification data as can be appreciated.

The sentinel service may examine data present in memory stored in non volatile storage transiting a network interface and or other locations of the computing device in which the sentinel service is executing such as the client device . The sentinel serve may communicate with the computing device and or other computing devices using various protocols such as for example HTTP SOAP REST UDP TCP and or other protocols for communicating data over the network . The client may be configured to execute applications beyond the sentinel service such as for example a browser application email applications instant message applications and or other applications.

The computing device may comprise for example a server computing device or any other system providing computing capability. Alternatively a plurality of computing devices may be employed that are arranged for example in one or more computer banks or other arrangements. For example a plurality of computing devices together may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. For purposes of convenience the computing device may be referred to herein in the singular. Even though the computing device is referred to in the singular it is understood that a plurality of computing devices may be employed in the various arrangements as described above.

Various applications and or other functionality may be executed in the computing device according to various embodiments. Also various data is stored in a data store that is accessible to the computing device . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing device for example include a threat management service and other applications services processes systems engines or functionality not discussed in detail herein. The threat management service may correspond to a management application for the marking service and the sentinel service . To that end the threat management service may communicate with the marking service and the sentinel service over various protocols such as for example HTTP SOAP REST UDP TCP and or other protocols for communicating data over the network . The threat management service may also present a user interface accessible through a web browser and or other applications on the client or other computing device.

The data stored in the data store includes for example coding rules a transaction log signature data service data alert data and potentially other data. The coding rules comprise rules for identifying and or creating tables within the data store for marking as well as the type of marking to be performed for a given table. The transaction log comprises data associated with historical modifications of the tables and or responses made by the marking service . The signature data may contain various types of information that may be employed to positively identify a given piece of data as being decoy data. As a non limiting example the signature data may comprise text strings checksums hash values metadata decoding rules and or other types of identification data as can be appreciated.

The service data may comprise identifiers and authentication data associated with various deployed instances of the marking service and the sentinel service . The service data may further comprise network location information and or priority information for the computing devices on which instances of the marking service and or the sentinel service are executing. The alert data may comprise a set of alerts as reported by the deployed instances of the sentinel service . The alerts may comprise an identifier for the computing device on which the sentinel service is executing the decoy data detected where it was detected the action attempted result of the attempted action and or other possible data related to the incident as can be appreciated.

The network device is representative of a plurality of network devices that may forward and or examine communication data transiting the network . The network device may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a server network router a network switch a network proxy or other devices with like capability.

The network device may be configured to execute various applications such as a sentinel service and or other applications. The sentinel service as executed in the network device is executed in order to facilitate identifying the presence of decoy data. The decoy data may be identified based upon a comparison with portions of the signature data . The signature data may contain various type of information that may be employed to positively identify a given piece of data as being decoy data. As a non limiting example the signature data may comprise text strings checksums hash values metadata decoding rules and or other types of identification data as can be appreciated.

The sentinel service may examine data present in memory stored in non volatile storage transiting a network interface and or other locations of the computing device in which the sentinel service is executing such as the network device . The sentinel serve may communicate with the computing device and or other computing devices using various protocols such as for example HTTP SOAP REST UDP TCP and or other protocols for communicating data over the network .

Next a general description of the operation of the various components of the networked environment is provided. To begin an operator defines the instances of the marking service and the sentinel service to be used in the service data . The definitions may include a network address authentication data a location of the computing device on which the service is executing a priority of the service and other possible information about each service as can be appreciated.

Additionally the operator may provide coding rules to the threat management service . The coding rules identify specific tables or types of tables to be created and or modified with decoy data as well as the type s of marking to be performed for a given table. The marking may include specific decoy data to be inserted into the tables and or responses rules for modifying pre existing data to be decoy data rules for generating decoy data rules for creating tables and or other marking techniques as can be appreciated. The coding rules and the service data may be input to a user interface of the threat management service or predefined elsewhere and imported into the data store .

As a non limiting example one of the coding rules may be to identify tables containing confidential information such as name address telephone number geolocation uniquely identifying information personal non public information and personally identifiable information. The rule for these tables may further include direction to add a column to the table of non decoy actual data to include credit card information as decoy data. The credit card information may be decoy data provided by credit card issuers and or the decoy credit card numbers may be locally generated. Locally generated numbers may be created randomly from a credit card number algorithm and or using other techniques as can be appreciated. In some embodiments the locally generated credit card numbers may contain a valid credit card number check digit such that upon a cursory validation of the number the credit card number would appear to be valid.

The threat management service may use the coding rules to generate signature data . The signature data may be used by the instances of the sentinel service in order to detect decoy data and may comprise for example text strings checksums hash values metadata detection rules and or other types of identification data as can be appreciated. As a non limiting example the coding rules may comprise an instruction to insert a decoy credit card number of 4123 0987 5678 7890 into a table associated with customer order data. The signature data may contain the text string 4123 0987 5678 7890 to be matched a cyclical redundancy check CRC checksum of the text string a detection rule that a sum of the digits of the credit card number are a particular value and or other possible criteria for detecting decoy data as can be appreciated.

The threat management service may distribute the coding rules to the various instances of the marking service as well as distribute the signature data to the various instances of the sentinel service the instances of the services being defined in the service data . The distribution may occur using HTTP HTTP over Transport Layer Security TLS Secure Sockets Layer SSL File Transfer Protocol FTP FTP Secure FTPS or other data transfer protocols as can be appreciated. The distribution may further use authentication credentials to confirm the identity of the instances of the marking service and sentinel service . In some embodiments only portions of the coding rules and or the signature data are distributed to the respective services based at least upon location and or function of the computing device in which the service is executing. As a non limiting example a coding rule associated with inserting decoy data into tables of customer information may not be applicable for a computing device without tables containing customer information.

Thereafter the instances of the marking service may begin an examination of the tables to identify and or create tables conforming to the criteria of the coding rules and include decoy data in responses to access of the tables accordingly. To this end the marking service may insert the decoy data into the table to be included in responses and or the marking service may insert decoy data only into the responses without insertion into the table.

In some embodiments the decoy data inserted may be unique to the data store unique to a user accessing the tables unique to a client device unique to a particular access of the tables and or uniquely identifiable upon another basis as can be appreciated. Among other possible benefits the use of uniquely identifiable decoy data may aid in tracing the decoy data to the original source. The marking service may identify pre existing tables based upon metadata for the tables examination of the data values within the tables and or other possible techniques. As a non limiting the coding rules may instruct the marking service to identify ones of the tables having customer names where none of the customer names include a middle initial. The coding rules may further instruct the marking service to insert decoy data of randomly generated letters as middle initials into the customer name field for responses to access of those tables having a customer name.

Activities of the identification and marking performed by the marking service may be stored in the transaction log . The transaction log may be periodically transmitted to the threat management service for collection. In some embodiments the signature data may be adjusted based upon the transaction log . For example if the signature data includes detection techniques for decoy data that the transaction log indicates has never been used the particular detection technique may be removed from the signature data until the transaction log indicates the decoy data has actually been applied.

The sentinel service may be executed in the computing device the client device the network device and or other computing devices in order to detect the presence of decoy data outside the data store or other data stores in which it was placed. The decoy data may be identified based upon a comparison with portions of the signature data . The signature data may contain various type of information that may be employed to positively identify a given piece of data as being decoy data.

The sentinel service may examine data present in memory in a table of the data store other than where it was placed stored in non volatile storage transiting a network interface and or other locations of the computing devices in which the sentinel service is executing. The decoy data inserted into the tables may produce few false positive alerts in the sentinel service based upon the assumption that applications having authority to access tables marked with decoy data may access data using operations that do not produce decoy data in the results. One possible type of operation may be queries that request only specific predefined types of information that would not include the decoy data inserted.

As a non limiting example a column of credit card information has been previously added as decoy data to a table of customer information. Applications having authority to access the table of customer information may not request the credit card data from the table because such applications would not have expected credit card data within a table of customer information. In the event an application did routinely retrieve all the columns of data from the table the application may be instructed to discard credit card information for this particular table.

As another possible type of operation an application may access the tables through an API of the data store manager that limits the number of records returned for the access but the records contain no decoy data. Another API for the data store manager may be available that does not limit the number of records returned from the tables but which ensures decoy data is present in the returned results. As a non limiting example an attribute associated with credit card information has been previously added as decoy data to a table of customer information. An application using the record limited API would not receive the credit card information as part of a query for all attributes of the table. On the other hand an application using the unlimited API would receive the credit card information as part of a query for all attributes of the table. An application that had not been previously instructed to filter the results from this unlimited API would generate an alarm in the sentinel service based upon the presence of decoy data outside the data store .

Based upon an alarm the sentinel service may take a variety of possible actions as may be defined in the signature data or in other locations accessible to the sentinel service . The actions may include for example logging the details about the circumstances of the detected incident transmitting an alert to the threat management service quarantine the data associated with the decoy data terminating the process accessing the decoy data and or other possible actions as can be appreciated. The action s taken may depend in part based upon the particular decoy data detected the location of the computing device in which the sentinel service is executing the priority of the computing device in which the sentinel service is executing and or other possible criteria.

As a non limiting example the sentinel service executing in a network device near the source of the decoy data may simply transmit an alert for detected decoy data on a network interface because false positives at this location may be high and the risk of consequential damage is low due to the location. However a network device operating at an exit point of a network may choose to interrupt the data communication containing the decoy data as well as non decoy data because of the high risk that the data access may not have been authorized.

Referring next to shown is a flowchart that provides one example of the operation of a portion of the marking service according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the marking service as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing device according to one or more embodiments.

This portion of the execution of the marking service may be executed based on obtaining coding rules with which to identify and mark tables in the data store . Beginning with block the marking service may begin an examination of the tables to identify those conforming to the criteria of the coding rules . The marking service may identify such tables based upon metadata for the tables examination of the data values within the tables and or other possible techniques.

Next in block the marking service determines if one of the tables matches the criteria of the coding rules . If the table is not a match execution of the marking service proceeds to block . Alternatively if the table is a match in block the marking service marks data of the table with decoy data according to the coding rules . As discussed previously the marking service may insert the decoy data into the table to be included in responses to access of the table and or the marking service insert decoy data only into the responses without insertion into the table. The marking may include predefined decoy data inserted into the tables rules for modifying pre existing data to be decoy data rules for generating decoy data and or other marking techniques as can be appreciated.

Then in block the marking service may store a transaction log of data associated with the identification and marking of the table. Such data may include the criteria of the coding rules used to identify the table decoy data inserted into the table any prior value in the table before being modified with decoy data and or other possible data. Subsequently in block the marking service determines if there are any further tables remaining that have not been examined and or marked. If no more tables remain this portion of the execution of the marking service ends as shown. Alternatively if other tables do remain execution of the marking service returns to block .

Turning now to shown is a flowchart that provides one example of the operation of a portion of the sentinel service according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the sentinel service as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing device according to one or more embodiments.

This portion of the execution of the sentinel service may be executed based on the presence of unexamined data and or an update to the signature data . Beginning with block the sentinel service examines available data in order to detect the presence of decoy data outside the data store or other data stores in which it was placed. The decoy data may be identified based upon a comparison with portions of the signature data . The signature data may contain various types of information that may be employed to positively identify a given piece of data as being decoy data. The sentinel service may examine data present in memory in a table of the data store other than where it was placed stored in non volatile storage transiting a network interface and or other locations of the computing devices in which the sentinel service is executing.

Next in block the sentinel service determines if the data under examination matches the signature data thus indicating the presence of decoy data. If the data under examination does not match the signature data execution of the sentinel service proceeds to block . Alternatively if the data under examination does match the signature data in block the sentinel service initiates one or more actions in response to the decoy data.

The actions may include for example logging the details about the circumstances of the detected incident quarantining the data associated with the decoy data terminating the process accessing the decoy data and or other possible actions as can be appreciated. The action s taken may depend in part based upon the particular decoy data detected the location of the computing device in which the sentinel service is executing the priority of the computing device in which the sentinel service is executing and or other possible criteria. Next in block the sentinel service may transmit an alarm to the threat management service and or other computing device on the network .

Then in block the sentinel service determines whether additional data remains to be compared to the signature data . If no further data exists this portion of the execution of the sentinel service ends as shown. This portion of the sentinel service may be reactivated upon receiving additional data to examine and or changes to the signature data . Alternatively if additional data does exist to examine execution of this portion of the sentinel service returns to block .

With reference to shown is a schematic block diagram of the computing device according to an embodiment of the present disclosure. The computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end the computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the marking service the data store manager the sentinel service and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in the memory and are executable by the processors as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java Javascript Perl PHP Visual Basic Python Ruby Delphi Flash or other programming languages.

A number of software components are stored in the memory and are executable by the processor . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory and run by the processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory and executed by the processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory to be executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD magnetic tape or other memory components.

The memory is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor may represent multiple processors and the memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor may be of electrical or of some other available construction.

Although the marking service the data store manager the sentinel service threat management service and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits having appropriate logic gates or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts of show the functionality and operation of an implementation of portions of the marking service and the sentinel service . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowcharts of show a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the marking service the data store manager the sentinel service and threat management service that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system. The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

