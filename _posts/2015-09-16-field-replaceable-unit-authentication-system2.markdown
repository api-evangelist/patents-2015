---

title: Field replaceable unit authentication system
abstract: A field replaceable unit authentication system provides for a field replaceable unit device to be positioned in a chassis. A trusted platform module is included in the field replaceable unit device. A network operating system engine may be provided in the field replaceable unit device and coupled to the trusted platform module. The network operating system engine participates in a boot process with a booting subsystem to generate current boot metric data that is provided for storage in the trusted platform module. A platform management controller in the field replaceable unit device retrieves the current boot metric data from the trusted platform module, authenticates the trusted platform module, and compares the current boot metric data to previously stored boot metric data to determine whether to authenticate the network operating system engine. If authenticated, the network operating system engine then authenticates the platform management controller.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09652253&OS=09652253&RS=09652253
owner: Dell Products L.P.
number: 09652253
owner_city: Round Rock
owner_country: US
publication_date: 20150916
---
The present disclosure relates generally to information handling systems and more particularly to a hardware authentication system for a field replaceable unit in an information handling system.

As the value and use of information continues to increase individuals and businesses seek additional ways to process and store information. One option available to users is information handling systems. An information handling system generally processes compiles stores and or communicates information or data for business personal or other purposes thereby allowing users to take advantage of the value of the information. Because technology and information handling needs and requirements vary between different users or applications information handling systems may also vary regarding what information is handled how the information is handled how much information is processed stored or communicated and how quickly and efficiently the information may be processed stored or communicated. The variations in information handling systems allow for information handling systems to be general or configured for a specific user or specific use such as financial transaction processing airline reservations enterprise data storage or global communications. In addition information handling systems may include a variety of hardware and software components that may be configured to process store and communicate information and may include one or more computer systems data storage systems and networking systems.

The hardware authentication of information handling systems such as for example servers switches storage device and or other computing devices known in the art is typically performed over a network by an authentication server using authentication software and or hardware dongles. In many situations authentication servers and or the authentication software they use may be compromised which can allow unauthorized spurious devices and or subsystems to be utilized with the computing devices and or in the network.

According to one embodiment an information handling system IHS includes a booting subsystem a trusted platform module that is coupled to the booting subsystem and that is configured to couple to a network operating system engine wherein the trusted platform module is configured to receive and store current boot metric data that is generated when the booting subsystem and the network operating system engine perform a boot process and a platform management controller that is coupled to the trusted platform module wherein the platform management controller is configured to retrieve the current boot metric data from the trusted platform module in response to the booting subsystem and the network operating system engine performing the boot process authenticate the trusted platform module and compare the current boot metric data to previously stored boot metric data to determine whether to authenticate the network operating system engine.

For purposes of this disclosure an information handling system may include any instrumentality or aggregate of instrumentalities operable to compute calculate determine classify process transmit receive retrieve originate switch store display communicate manifest detect record reproduce handle or utilize any form of information intelligence or data for business scientific control or other purposes. For example an information handling system may be a personal computer e.g. desktop or laptop tablet computer mobile device e.g. personal digital assistant PDA or smart phone server e.g. blade server or rack server a network storage device or any other suitable device and may vary in size shape performance functionality and price. The information handling system may include random access memory RAM one or more processing resources such as a central processing unit CPU or hardware or software control logic ROM and or other types of nonvolatile memory. Additional components of the information handling system may include one or more disk drives one or more network ports for communicating with external devices as well as various input and output I O devices such as a keyboard a mouse touchscreen and or a video display. The information handling system may also include one or more buses operable to transmit communications between the various hardware components.

In one embodiment IHS includes a processor which is connected to a bus . Bus serves as a connection between processor and other components of IHS . An input device is coupled to processor to provide input to processor . Examples of input devices may include keyboards touchscreens pointing devices such as mouses trackballs and trackpads and or a variety of other input devices known in the art. Programs and data are stored on a mass storage device which is coupled to processor . Examples of mass storage devices may include hard discs optical disks magneto optical discs solid state storage devices and or a variety other mass storage devices known in the art. IHS further includes a display which is coupled to processor by a video controller . A system memory is coupled to processor to provide the processor with fast storage to facilitate execution of computer programs by processor . Examples of system memory may include random access memory RAM devices such as dynamic RAM DRAM synchronous DRAM SDRAM solid state memory devices and or a variety of other memory devices known in the art. In an embodiment a chassis houses some or all of the components of IHS . It should be understood that other buses and intermediate circuits can be deployed between the components described above and processor to facilitate interconnection between the components and the processor .

Referring now to an embodiment of a field replaceable unit authentication system is illustrated. While the discussion below is directed to embodiments that provide for authentication within and between field replaceable unit devices the teaching of the present disclosure may be utilized in providing authentication within and between other devices and or subsystems known in the art. As such the discussion involving the field replaceable unit device s below may be applied to the IHS discussed above with reference to and or to IHS components in the IHS while remaining within the scope of the present disclosure. The field replaceable unit authentication system includes a computing system that may be the IHS discussed above with reference to and or some or all of the components of the IHS . In specific embodiments discussed below the computing system is illustrated and described as a switch but a variety of other devices such as servers storage devices desktop computers laptop computers tablet computers mobile phones and or other computing systems known in the art will fall within the scope of the present disclosure. The computing system includes a chassis that houses the components of the computing system only some of which are illustrated in .

In the illustrated embodiment the chassis houses a field replaceable unit FRU device . In an embodiment the FRU device may be a circuit board part and or assembly that is quickly connectable to and removable from the computing system or other electronic component such that for example it may be quickly and easily replaced with another FRU device. In an embodiment the FRU device may be the IHS discussed above with reference to and or include some or all of the IHS components. In some specific embodiments discussed below the FRU device is a route processor module and or a line module in a switch but other FRU devices non FRU devices and or subsystems will benefits from the teachings of the present disclosure and thus fall within its scope. The FRU device is coupled to a plurality of internal device connectors that are housed in and accessible within the chassis and a plurality of external device connectors that are housed in and accessible on an outer surface of the chassis . For example the FRU device may be connected to a circuit board that provides the plurality of internal device connectors and the plurality of external device connectors on that circuit board and or through cabling connected to that circuit board and the FRU device may be connected to the internal device connectors and the external device connectors through traces in the circuit board and or cabling. However other couplings to the connectors e.g. cabling directly coupled to the FRU device is envisioned as falling within the scope of the present disclosure.

In the illustrated embodiment the chassis houses a plurality of internal devices that are each connected to a respective one of the internal device connectors and a plurality of external devices that are each connected to a respective one of the external device connectors . Any of all of the internal devices and the external devices may be the IHS discussed above with reference to and or include some or all of the IHS components. In different embodiments any or all of the internal devices and external devices may be FRU devices that may operate according to the methods discussed below. In specific embodiments discussed below the internal devices are described as line modules that are provided in a switch but a variety of other devices are envisioned as falling within the scope of the present disclosure. Furthermore as discussed below additional devices may be coupled to the internal devices and or external devices and authenticated as discussed below while remaining within the scope of the present disclosure.

Referring now to an embodiment of a field replaceable unit FRU device is illustrated. In an embodiment the FRU device may be the FRU device of . As such the FRU device may be the IHS discussed above with reference to and or may include some or all of the components of the IHS . The FRU device includes a chassis that in the embodiments described below is a circuit board that supports or provides each of the components of the FRU . However other chassis are envisioned as falling within the scope of the present disclosure. In the illustrated embodiment the chassis supports a platform management controller System on a Chip SoC and a trusted platform module that are each coupled to a network operating system engine . As discussed below the different components of the FRU device may be provided by different manufacturers vendors and or component providers and those components may be provided with a variety of authentication information some of which is discussed below that allows for their verification authentication. While specific features of the FRU device are illustrated in and described below one of skill in the art in possession of the present disclosure will recognize that the FRU device may include a variety of other components while remaining within the scope of the present disclosure.

In an embodiment the platform management controller SoC is provided by an integrated circuit that integrates all of the components of a platform management controller into a single chip that may include digital analog mixed signal and or radio frequency functions on a single chip substrate. However while the platform management controller functionality is illustrated as provided as an SoC other components devices and or subsystems may provide the platform management controller while remaining within the scope of the present disclosure. The platform management controller SoC includes an embedded processing system that is coupled to each of an embedded non volatile memory system and a secure storage device . In an embodiment the secure storage device may be provided using CONTROLVAULT available from the assignee of the present disclosure DELL Inc. of Round Rock Tex. However other secure storage devices will fall within the scope of the present disclosure. In addition to the illustrated components the platform management controller SoC may be coupled to include and or otherwise provide a Field Programmable Gate Arrays FPGA FPGA tiles programmable Input Outputs I O s PHYs and or other platform management controller elements known in the art that are not illustrated for clarity. In an embodiment the embedded processing system may include a multi core processor that runs a general purpose operating system for providing the functionality discussed below. As discussed below in some embodiments the platform management controller SoC may be provided by a SoC manufacturer and or vendor to an Original Equipment Manufacturer OEM e.g. the assignee of the present disclosure DELL Inc. of Round Rock Tex. that manufactures or otherwise provides the FRU device to users customers and thus may include authentication information that allows for its verification.

In an embodiment the trusted platform module includes a processing system that is coupled to a memory system . In an embodiment the processing system in the trusted platform module may include a dedicated secure cyptoprocessor that is configured to secure hardware by integrating cryptographic keys into that hardware. However other trusted platform module components will fall within the scope of the present disclosure. As discussed below in some embodiments the trusted platform module may be provided by a trusted platform module manufacturer and or vendor to an OEM that manufactures or otherwise provides the FRU device and thus may include authentication information that allows for its verification.

In an embodiment the network operating system engine includes a host processing system that is coupled to a memory system that includes instructions that when executed by the host processing system cause the host processing system to provide the network operating system engine that is configured to provide a network operating system and or perform the functions of the network operating system engines discussed below. As discussed in further detail below the host processing system may be utilized to run a network operating system that may be provided by a networking operating system provider the OEM a user of the FRU device and or some other third party. In some embodiments the host processor may be a central processing unit CPU SoC in the FRU device that typically provides for control plane functionality and that is utilized in the field replaceable unit authentication system to program a network processing unit NPU SoC that provides a Media Access Control MAC PHY data plane complex. However in some embodiments the host processing system may be an embedded processor in an NPU SoC in the FRU device . The network operating system engine is coupled to the platform management controller SoC via a plurality of connections that may include a power connection a Network Controller Sideband Interface NC SI connection a Local Procedure Call LPC connection a Management Data Input Output MDIO connection and or other connections known in the art. While the connections are illustrated as being between the host processing system in the network operating system engine and the embedded processing system in the platform management controller SoC those connections may be provided between different components in the network operating system engine and the platform management controller SoC e.g. multiplexers PHYs etc. while remaining within the scope of the present disclosure. As discussed below in some embodiments the network operating system engine may be provided by n network operating system manufacturer and or vendor to an OEM that manufactures or otherwise provides the FRU device and thus may include authentication information that allows for its verification. However in some embodiments the network operating system engine may be provided by the OEM.

A booting subsystem is provided on the FRU device and coupled to the processing system in the trusted platform module . In an embodiment the booting system may be provided by a Basic Input Output System BIOS a Unified Extensible Firmware Interface UEFI a boot loader such as an Open Network Install Environment ONIE and or other booting subsystem components known in the art. A communication system is provided on the FRU device and coupled to the host processing system in the network operating system engine . In an embodiment the communication system may include a variety of different components that provide the coupling of the FRU device to devices connectors and or other devices e.g. the internal connectors and or internal devices the external connectors and or external devices etc. In specific embodiments discussed below the FRU device is described as a route processor module or a line module in a switch and as such one of skill in the art in possession of the present disclosure will recognize that the FRU device may include a variety of different components not illustrated for clarify for enabling the functionality of those modules while remaining within the scope of the present disclosure.

Referring now to a specific embodiment of a field replaceable unit authentication system is illustrated as implemented in a network switching system . The network switching system includes a switch device having a chassis that houses a route processor module that is coupled to a plurality of line modules and up to . Any of the line modules may be coupled to one or more external devices as illustrated for the line module coupled to the port extender device that is further coupled to the transceiver device . In the examples provided below the route processor module is described as the FRU device of that performs the authentication discussed below while also being configured to authenticate the line modules port extender device the transceiver device and or any other devices coupled to the route processor module . However other devices e.g. any of the line modules may operate as the FRU device in the manner described below while remaining within the scope of the present disclosure.

Referring now to an embodiment of a method for providing authentication in a field replaceable unit is illustrated. In specific embodiments the systems and methods of the present disclosure may allow an OEM e.g. DELL Inc. of Round Rock Tex. to provide open networking switches that decouple the software hardware interlocks for a datacenter which allows for the running of an OEM operating system a third party operating system and or other operating systems on the network switch that allow users of the switch to focus on applications e.g. Software Defined Networking SDN applications that deal primarily with the control of NPU elements while leaving the platform management aspects to the OEM. In such embodiments the OEM may own the platform management controller and associated platform management software on the switch while the user has the option of running a network operating system of their choice e.g. a network operating system from the OEM or from a network operating system vendor a customized network operating system provided by the user etc. . That network operating system may then be run using the host processor in the switch and allows opportunities such as the design of build your own device systems such as port extender devices.

However along with such benefits such systems provide opportunities for the creation of counterfeit hardware which may be enabled by a user removing the platform management controller from the switch or providing an unauthorized network operating system on the switch. As such the systems and methods of the present disclosure may be provided to authenticate hardware e.g. by detecting and isolating shutting down unauthorized spurious hardware in scenarios such as for example line module authentication by a route processor module port extender authentication by a line module and or controlling bridge uplink module transceiver authentication by a line module and or port extender line card leaf authentication by a spine and or a variety of other hardware authentication scenarios known in the art.

In some of the embodiments discussed below the hardware authentication performed by the systems and methods of the present disclosure is referred to below as 802.1X hardware authentication and is distinguishable from 802.1X device authentication as defined by the Institute of Electrical and Electronics Engineers IEEE in that it provides for the detection of unauthorized spurious hardware rather than posture assessments of devices to determine whether those devices can safely and legitimately join a network topology. As such one of skill in the art in possession of the present disclosure will recognize that the 802.1Xhardware authentication described herein provides a novel hardware detection mechanism to determine whether hardware is authentic authorized.

Conventional hardware authentication systems operate in a number of manners. For example illegal unauthorized hardware may be countered using trusted platform module based solutions that use the IEEE 802.1AR framework for authenticating counterfeit hardware with 802.1X Extensible Authentication Protocol Transport Layer Security EAP TLS like authentication options. In another example some hardware authentication implementations build a trusted network of 802.1X authenticated devices based on IEEE 802.1AE also known as MACSec . In yet another example spurious host processor network processing unit checks may be performed based on conventional secure boot mechanisms. These and other conventional hardware authentication systems suffer from a variety of limitations. For example such conventional authentication systems use mechanisms or software entities that are themselves authenticated by authorized genuine software and thus authenticate hardware based on software entities. In such examples the authenticator may be a network device that is authenticated by a software entity such as a centralized authentication server and software components in those devices may be compromised to disregard fundamental authentication criteria and allow unauthorized spurious hardware. In other examples centralized software certificate based device authentication is used to provide for network admission control but cannot provide hardware authentication.

As discussed below specific embodiments of the present disclosure utilize recent strides in platform management controller SoC designs and evolution to provide a variety of security features that enable the authentication systems and methods of the present disclosure. For example binaries running on FPGAs and the embedded processing system in the platform management controller SoC may be utilized and or upgraded using an external programmer and or the host processing system without compromising the platform management controller SoC . In another example tamper resistant features may ensure the integrity of code and private keys stored on the platform management controller SoC while the embedded non volatile memory system in the platform management controller SoC allows for the exporting of keys and or other entities e.g. using Application Programming Interfaces APIs based on a request from the host processing system without compromising the keys in the secure storage device on the platform management controller SoC .

In yet another example a vendor of the platform management controller SoC can create and inject a platform management controller SoC public key SoC public key and a platform management controller SoC private key SoC private key that is paired with the SoC public key such that the SoC public private key pair is unique to the platform management controller SoC as well as sign the SoC public key with a platform management controller SoC vendor private key PMC private key to create a certificate e.g. an X.509 certificate indicated below by X.509 PMC private key SoC public key that may be stored in the embedded non volatile memory system of the platform management controller SoC and used e.g. by the OEM to verify that the platform management controller SoC is manufactured provided by a particular platform management controller SoC vendor. In yet another example once the platform management controller SoC is in control of the OEM private public key pairs may be generated internally in the platform management controller SoC using a physically uncloneable function PUF such that private keys cannot be exported out of the secure storage device in the platform management controller SoC . In a specific embodiment the platform management controller SoC may access a management port on the host processing system using NC SI and a lightweight Redfish application provided by the DISTRIBUTED MANAGEMENT TASK FORCE Inc. to scan OEM hardware in a networked system administer signed keys into the embedded non volatile memory system of the platform management controller SoC the memory system of the trusted platform module and the memory system of the network operating system engine and configure 801.1Xparameters such as for example the Internet Protocol IP address of an inline authentication server.

Referring to the method begins at block where authentication information is provided in an FRU device. In an embodiment as discussed below a variety of authentication information may be provided in the different components of an FRU device by one or more entities in order to provide for authentication of hardware discussed below as occurring during the method as well as authentication of hardware that occurs outside of the method e.g. before and or after the performance of the method . illustrates an authentication information diagram that illustrates some of the authentication information that may be provided in the components of the FRU device . For example as discussed above a vendor of the platform management controller SoC may create and inject an SoC public key into the embedded non volatile memory system of the platform management controller SoC and an SoC private key in the secure storage device of the platform management controller SoC where the pair of the SoC public key and the SoC private key is unique to the platform management controller SoC . Also as discussed above the vendor of the platform management controller SoC may sign the SoC public key with a PMC private key to create a certificate e.g. a X.509 PMC private key SoC public key certificate that is stored in the embedded non volatile memory system of the platform management controller SoC and that may be used e.g. by the OEM to verify that the platform management controller SoC is manufactured provided by a particular platform management controller SoC vendor.

The OEM may then integrate the platform management controller SoC into the FRU device . In an embodiment during manufacture of the FRU device the OEM may generate and store a public key for the FRU device FRU public key in a storage device accessible to the OEM and generate a private key for the FRU device FRU private key that is paired with the FRU public key and store the FRU private key in the secure storage device of the platform management controller SoC . For example the pair of the FRU public key and the FRU private key may be generated internally by the FRU device based on the physically uncloneable function PUF of the platform management controller SoC . As such the pair of the FRU public key and FRU private key is independent of the pair of the SoC public key and SoC private key and may be considered from the OEMs perspective as a root key pair independent of the platform management controller SoC and unique to the FRU device .

The OEM may also sign the FRU public key with a private key of the OEM OEM private key to create a certificate e.g. a X.509 OEM private key FRU public key certificate that is stored in the embedded non volatile memory system of the platform management controller SoC and the memory system of the network operating system engine . The OEM may also generate unique attestation identification keys from the host processing system in the network operating system engine that are based on the trusted platform module . For example a trusted platform module private key TPM private key may be created within the trusted platform module and stored in the memory system of the trusted platform module while a corresponding trusted platform module public key TPM public key that is paired with TPM public key may be created within the trusted platform module and stored in the embedded non volatile memory system of the platform management controller SoC e.g. by the OEM . In addition the trusted platform module may include an encrypted trusted platform module certificate AIK certificate OEM private key TPM public key that may be generated at the instruction of the OEM and utilized to verify that the trusted platform module is authentic.

The provider of the network operating system e.g. the OEM a network operating system vendor the customer etc. may generate a network operating system private key NOS private key and a network operating system public key NOS public key that is paired with the NOS private key and stored in the memory system of the networking operating system engine . The pair of the NOS private key and NOS public key may be used to sign the network operating system image so that the network operating system may be trusted during a boot process by the booting subsystem e.g. a BIOS and a ONIE boot loader when the host processing system in the network operating system engine performs a conventional secure boot operation. In embodiments where the provider of the network operating system is different from the OEM it is noted that the provider of the network operating system does not have to share the NOS private key with the OEM.

Referring now to the provider of the network operating system may conduct a boot process involving the network operating system engine and record boot metric data for provision in the embedded non volatile memory system in the platform management controller SoC . For example the provider of the network operating system may conduct a boot process involving the booting subsystem e.g. a BIOS and a boot loader in the illustrated embodiment and the network operating system engine and measure the platform configuration register data PCR data provided by the BIOS the boot loader and then the networking operating system engine during that boot process in platform configuration registers in the memory system of the trusted platform module . The provider of the network operating system may then cause the PCR data to be signed with the TPM private key and encrypt the result to provide boot metric data that is stored in the embedded non volatile memory system of the platform management controller SoC . The platform management controller SoC may also receive the decrypted PCR data signed with the TPM public key and store it as the boot metric data . In a specific example the network operating system provider may obtain the PCR data using the Redfish standard as published by the Distributed Management Task Force DMTF and that PCR data may be store as the boot metric data discussed above. In such an example the PCR data may be signed with the TPM private key as part of the TPM attestation process discussed below in which the trusted platform module generates the AIK certificate and signed the PCR data using that AIK certificate.

Thus the authentication information diagram provides an embodiment of the authentication information that may be provided with the components of the FRU device prior to the provisioning of the FRU device to a user. However one of skill in the art in possession of the present disclosure will recognize that other types of authentication information may be provided in different components of FRU devices to provide the functionality discussed below while remaining within the scope of the present disclosure. Subsequent to block of the method the FRU device may be provided to a user and operated as discussed below.

The method then proceeds to block where the network operating system performs a boot process and current boot metric data is provided to the trusted platform module. In an embodiment the FRU device may be powered up reset and or otherwise initialized and in response the platform management controller SoC receives power and provides power to the host processing system in the network operating system engine to initialize the network operating system. In some examples the platform management controller SoC may start a timer for network operating system attestation completion that provides for a maximum time for the attestation of the network operating system before the platform management controller SoC aborts the authentication process and powers down. In response to receiving power the host processing system in the network operating system engine operates with the booting subsystem to perform a conventional secure boot process. In an embodiment similarly as discussed above with reference to the BIOS the boot loader and then the network operating system engine operate to perform the conventional secure boot process and during that process generate and provide current boot metric data into the platform configuration registers in the memory system of the trusted platform module . Current boot metric data may include measurements such as has values of images magic numbers application specific data combinations thereof and or other boot metric data known in the art that may be recorded into the PCRs in a process called PCR Extends. When the conventional secure boot process is completed the network operating system engine indicates that the boot process is complete to the platform management controller SoC .

Referring now to the method may then proceed to block where the platform management controller SoC receives current boot metric data attested by the trusted platform module. In an embodiment of block in response to determining that the boot process has been completed the platform management controller SoC may request network operating system engine attestation. For example includes a communication flow diagram that illustrates the communications between the components of the FRU device during the method . As illustrated at block the platform management controller e.g. via the embedded processing system may send an attestation request through the network operating system engine e.g. via the host processing system to the trusted platform module e.g. via the processing system In an example the attestation request may include a first nonce nonce and a request to retrieve current boot metric data from the platform configuration registers in the memory system of the trusted platform module . In response to receiving the attestation request the processing system in the trusted platform module retrieves the current boot metric data from the platform configuration registers in the memory system signs the current boot metric data and the nonce with the TPM private key to encrypt the signed current boot metric data nonce encrypted TPM private key PCR metrics nonce and sends the encrypted TPM private key PCR metrics nonce along with the trusted platform module certificate as an attestation response through the network operating system engine e.g. via the host processing system to the platform management controller e.g. via the embedded processing system .

The method then proceeds to decision block where the platform management controller SoC determines whether the current boot metric data is valid. As illustrated in the platform management controller SoC may perform a variety of actions to determine whether the current boot metric data is valid at decision block . For example the embedded processing system in the platform management controller SoC may receive the trusted platform module certificate and perform TPM certificate verification by decrypting the trusted platform module certificate e.g. the AIK certificate and analyzing the data in the decrypted TPM certificate to determine whether the trusted platform module has been compromised using methods known in the art. If the TPM certificate is not verified at decision block the platform management controller SoC may determine that the current boot metric data is not valid and the method may proceed to block where the platform management controller SoC ceases providing power to the network operating system engine. In an embodiment of block the embedded processing system in the platform management controller SoC may perform a host processing system power down and cease the provisioning of power through at least one of the power connections to the host processing system in the network operating system engine .

If the TPM certificate is verified at decision block the platform management controller SoC may perform additional actions to determine whether the current boot metric data is valid at decision block . For example the embedded processing system in the platform management controller SoC may perform PCR metrics and nonce 1 decryption by decrypting the encrypted current boot metric data nonce e.g. the encrypted TPM private key PCR metrics nonce using the TPM public key derived from the AIK certificate to retrieve the current boot metric data and the nonce 1. The embedded processing system in the platform management controller SoC may then perform nonce verification to determine whether the nonce received in the attestation response matches the nonce sent in the attestation request . If the nonce is not verified i.e. the nonce received by the platform management controller SoC is different than the nonce sent by the platform management controller SoC at decision block the platform management controller SoC may determine that the current boot metric data is not valid and the method may proceed to block discussed above. If the nonce is verified at decision block the platform management controller SoC may perform PCR metric data verification to determine whether the current boot metric data received in the attestation response matches the previously stored i.e. as per block of the method boot metric data in the embedded non volatile memory system . If the current boot metric data is not verified i.e. the current boot metric data received by the platform management controller SoC is different than the previously stored boot metric data in the embedded non volatile memory system at decision block the platform management controller SoC may determine that the current boot metric data is not valid and the method may proceed to block discussed above.

If the current boot metric data is verified at decision block the platform management controller SoC may determine that the current boot metric data is valid and the method proceeds to block where the platform management controller SoC authenticates the network operating system engine and assigns authentication role s . In an embodiment at block the embedded processing system in the platform management controller SoC may determine that the current boot metric data generated at least in part by the network operating system engine is valid and in response authenticate the network operating system engine as providing an authorized network operating system. In response the embedded processing system in the platform management controller SoC may perform a configuration check and an authentication role assignment where the embedded processing system checks the configuration of the network operating system engine and assigns one or more authentication roles that may be subsequently performed by the network operating system engine . In an embodiment authentication roles assigned to the network operating system engine may include assignment as an authentication server and or authenticator supplicant for downstream devices and or a variety of other authentication roles known in the art

The method then proceeds to block where the network operating system engine sends an authentication message to the platform management controller SoC. Subsequent to the authentication of the network operating system engine by the platform management controller SoC the network operation system engine may perform an authentication process on the platform management controller SoC to provide mutual authentication in the FRU device . In an embodiment the host processing system in the network operating system engine sends an authentication message to the embedded processing system in the platform management controller SoC . For example the authentication message may include a second nonce nonce signed with the FRU public key encrypted FRU public key nonce . The method then proceeds to decision block where the network operating system engine determines whether a valid authentication response has been received. The platform management controller SoC receives the encrypted FRU public key nonce and may use the FRU private key in the secure storage device to decrypt the authentication message and retrieve the nonce. The embedded processing system in the platform management controller SoC may then return the nonce to the host processing system in the network operating system engine in an authentication response . If the nonce received by the network operating system engine in the authentication response does not match the nonce sent in the authentication message the method proceeds to block where the network operating system engine determines that the platform management controller SoC is not authentic authorized and shuts down or otherwise ceases communication and or operation with the platform management controller SoC .

If the nonce received by the network operating system engine in the authentication response matches the nonce sent in the authentication message the method proceeds to block where the network operating system engine authenticates the platform management controller SoC and may subsequently authenticate downstream devices coupled to the FRU device . In an embodiment subsequent to the mutual authentication of the platform management controller SoC and the network operating system engine the network operating system engine may begin acting as an 802.1Xauthenticator. For example at block the network operating system engine in a second FRU device may begin acting as a supplicant to an upstream port on the FRU device i.e. similarly to a centralized authentication server in conventional 802.1X authentication using EAP TLS with the FRU public private key pair to perform hardware authentication and create a secured hardware network of devices.

In one embodiment with reference to subsequent to the mutual authentication performed according to the method a network operating system engine in the route processor module may be coupled to the line module e.g. by connecting the line module to the switch device and the network operating system engine in the route processing module may authenticate the line module using FRU public private keys as per the supplicant authenticator model with the route processor module acting as the authenticator and the line module acting as the supplicant. For example the network operating system engine in the route processing module may receive a line module public key i.e. an FRU public key from the line module and validate that line module public key using an OEM certificate. The network operating system engine in the route processing module may then encrypt a nonce with the FRU public key and send that encrypted nonce to the line module . If the line module is able to decrypt that encrypted nonce with the FRU private key that is paired with the FRU public key and send the correct nonce back to the network operating system engine in the route processing module the line module is verified authenticated by the route processing module . The route processor module may then verify authenticate other devices that are coupled to the line module e.g. the port extender device the transceiver device etc. in the same manner. One of skill in the art in possession of the present disclosure will recognize that in such an example the line module has internally undergone the 802.1Xauthentication between its network operating system and platform management controller discussed above as otherwise its network operating system may not act as a valid supplicant. As such if its network operating system is spurious the authentication with the router processor module will fail.

Thus systems and methods have been described that provide inline authentication of hardware devices and components that eliminates the need for external authentication services that require configuration and management by a network administrator. Rather hardware devices such as FRU devices may be provided that are self authenticating in order to provide an inline 802.1AR service certification authority for hardware authentication based on a secure network operating system that does not require external servers dongles and or access to eternal certification authorities. The systems and methods of the present disclosure provide a convenient mechanism to open up ports features and data usage of an FRU device for licensing purposes. For example only a subset of ports PHYs on the FRU device may be enabled based on licensing scenarios while allowing the remaining ports PHYs to be turned off or otherwise made inaccessible. Furthermore trial versions of an FRU device may be provided with the platform management controller monitoring the specific and or aggregate link utilization on a per port basis in order to switch off the network processing unit after that link utilization reaches a threshold. In addition the systems and methods of the present disclosure allow for the co existence of authenticated and unauthenticated device trees within a network with the possibility of applications that can determine the extent of data flow between the authenticated and unauthenticated devices. These and other advantages will be apparent to one of skill in the art in possession of the present disclosure.

Although illustrative embodiments have been shown and described a wide range of modification change and substitution is contemplated in the foregoing disclosure and in some instances some features of the embodiments may be employed without a corresponding use of other features. Accordingly it is appropriate that the appended claims be construed broadly and in a manner consistent with the scope of the embodiments disclosed herein.

