---

title: Methods, systems and apparatus to manage power consumption of a graphics engine
abstract: Methods and apparatus are disclosed to manage power consumption at a graphics engine. An example method to manage power usage of a graphics engine via an application level interface includes obtaining a policy directive for the graphics engine via the application level interface, the policy directive identifying a threshold corresponding to power consumed by the graphics engine operating in a first graphics state. The example method also includes determining a power consumed by the graphics engine during operation. The example method also includes comparing the power consumed to the threshold of the policy directive, and when the threshold is met, setting the graphics engine in a second graphics state to cause the graphics engine to comply with the policy directive.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09460483&OS=09460483&RS=09460483
owner: Intel Corporation
number: 09460483
owner_city: Santa Clara
owner_country: US
publication_date: 20150714
---
This patent arises from a continuation of U.S. patent application Ser. No. 13 729 011 filed Dec. 27 2012 the entirety of which is hereby incorporated herein by reference.

This disclosure relates generally to power management and more particularly to methods systems and apparatus to manage power consumption of a graphics engine.

Media delivery involves complicated operations. As the demand for delivery of online media has increased performance of corresponding graphics hardware has also had to increase. However an increase in performance generally corresponds with an increase in power consumption by the graphics hardware.

At least one financial burden of a data center relates to the cost of electricity. As the amount of computing resources used in the data center increases so too does the cost of electricity energy to satisfy data processing requirements of the data center. In some data centers the cost of electricity may account for half of the operating cost of the data center. Thus managing the power consumed by the data center is of great importance.

Data centers may house hundreds or thousands of servers that may be in rows in which the rows may be subdivided into racks. Each rack may reflect a collection of servers. Each server typically includes a chipset which includes a central processing unit CPU having integrated graphics hardware or having communicative connection s to other graphics hardware e.g. as part of the chipset . For example a CPU may include one or more core processors and a graphics processor or a graphics engine.

In some known systems a graphics workload is communicated from a processing core in the CPU to a graphics driver located in a driver level or operating system kernel . The graphics driver converts the workload into instructions for the graphics engine included in the CPU. The workload is subdivided into one or more tasks that are executed by execution units or graphics engine blocks included in the graphics engine. Some known graphics engines operate in two power states a processing state e.g. a graphics state G or an idle state e.g. a graphics state G . A power state exhibits a discrete combination of voltage and frequency. While in the highest performing power state e.g. the Gstate the known graphics engine operates at a high e.g. the maximum graphics processing frequency set by for example a graphics engine manufacturer. In contrast to the Gstate when the known graphics engine is in the lower power consumption state e.g. the Gstate the graphics engine operates at a baseline graphics processing frequency. As used herein a baseline frequency refers to the frequency the graphics engine operates at while in the idle state. Thus when the known graphics engine is running a workload e.g. transcoding a video file the example graphics driver sets the graphics engine to the Gstate to utilize the high e.g. maximum available graphics processing frequency. Consequently because the known graphics engine is operating at the higher graphics processing frequency the known graphics engine consumes a higher amount of power. When processing of the workload is completed information indicative of the completed workload is communicated to the known graphics driver and the graphics driver sets the graphics engine to the Gstate to establish the baseline frequency for the graphics engine. However the known graphics engine may be able to process the workload at a lower graphics processing frequency without sacrificing processing performance. Thus unnecessary power is consumed by the known graphics processor while processing a workload.

The power consumed by a graphics engine is proportional to the graphics processing frequency and the square of the voltage used to operate the graphics engine. Thus in some systems managing power consumption includes managing the graphics processing frequency and or the voltage. Manipulating the graphics processing frequency in some systems may be a cumbersome and or otherwise impractical process. For example an in target probe may be used to unlock the processor and then adjust the settings and or voltage to control a target frequency. However this method is only available during the processing platform development phase and is not available after the processing platform development and or execution operational phase. Thus manipulating the graphics processing frequencies corresponding to the graphics state for some systems is not practical in large scale server deployments such as data centers cloud deployments or Internet data centers having tens hundreds or thousands of servers. Example methods apparatus systems and or articles of manufacture disclosed herein provide fine grain integrated graphics power management at a server which may then be scaled out to one or more servers in the large scale server deployment. In other words example methods systems and or articles of manufacture disclosed herein facilitate the fine grain integrated graphics power management without a need for cumbersome in target e.g. in circuit probe s .

In the illustrated example of power management of the node occurs at three different levels or layers e.g. an example application level an example operating system OS kernel and an example hardware layer .

In the illustrated example of the application level provides an interface for a user to perform an activity. For example software or application s may run on the application level . The example software or application enables a user and or a profile stored in a memory to execute one or more tasks. For example a user may utilize a media player at the application level to instruct a node or server to stream a video file. In the illustrated example of the OS kernel is software or a collection of software and or firmware that acts as a bridge between the application level and the hardware layer . In the illustrated example of the OS kernel includes execution code or driver s that manage the computing resources of the hardware layer . For example execution code running on the OS kernel may determine when hardware components execute instructions from a program running at the application level . In some examples execution code running at the OS kernel may control or manage specific computing resources. For example a graphics translator sometimes referred to as graphics driver running on the OS kernel receives instructions from the media player running at the application level to stream a video file. The example graphics translator may then instruct an example graphics engine regarding what data to process when to process that data how to process that data etc. In the illustrated example of the hardware layer includes the hardware components that perform data processing. For example the graphics engine may take data corresponding to the instructions from the graphics translator and perform video transcoding.

In the illustrated example of a user such as an Information Technology IT professional sets a policy directive for the node or a component of the node e.g. the graphics engine via a program running at the application level . For example the IT professional may input a Service Level Agreement SLA for the node or a component of the node via the management console . The example policy directive or SLA specifies one or more operating conditions for the node . For example an SLA may specify watts allocated to the node e.g. a power budget or power cap a target graphics processing frequency while executing a workload how long the policy is implemented e.g. a policy duration and or how to address periods when the power budget is violated such as whether to send an alarm or alert whether to enable a correction period to account for occasional power spikes what kind of alarm alert should output if the node or a component of the node cannot comply with the policy directive etc. e.g. one or more policy maintenance parameters conditions or terms . In the illustrated example of the management console is in communication with a policy directive storage to store one or more policy directives . In some examples the policy directive storage is a memory or database that is in communication with the management console via one or more networks and or local communication interfaces. In some examples the policy directive storage is local to the management console and or integrated therein.

In the illustrated example of the management console includes a power manager . The example power manager is an application or application programming interface API that runs on the example management console and facilities an interface for the application level . For example the power manager may include a web services API that allows the IT professional to manage the node . In the illustrated example of the power manager may provide an interface for the IT professional to set one or more policy directives for the example node . In some examples the power manager may retrieve one or more policy directives from the policy directive storage to apply to the node . For example the power manager may vary the power budget for the node based on maintenance parameters retrieved from an example policy directive a schedule e.g. the time of day current activity trends e.g. an increase in workload may cause the power budget to increase etc. In some examples the management console may display the current policy directive maintenance parameters or settings for the IT professional for review and or adjustment. In some examples the power manager may monitor the power consumption of the node and or allow the IT professional to monitor the power consumption of the node . For example via the power manager the management console may output e.g. display periodic aperiodic scheduled and or manual status notifications from the node . In still other examples the management console may output an audible and or visual alarm or alert when the node fails to comply with the policy directive .

In the illustrated example of the policy directive is communicated from the management console to the node e.g. via the network . At the example node the example policy directive is processed by software firmware and or hardware included in the node . The example node includes the example graphics translator and an example sensor monitor which operates on the example OS kernel and an example central processing unit CPU which operates at the example hardware layer . As mentioned above execution code running on the OS kernel acts as a bridge between programs running at the application level and the hardware components in the hardware layer .

In the illustrated example of the node includes the graphics translator a sensor monitor and a central processing unit CPU . In some examples the graphics translator or graphics driver is implemented by executable instructions e.g. software that translate data or information communicated from the management console to instructions that may be executed and or otherwise interpreted or implemented by the example CPU . For example a policy directive may include instructions that are communicated to the CPU via the power manager of the management console . The example graphics translator may convert the information from the example policy directive into instructions for the example CPU to execute. For example the graphics translator may communicate to the CPU a power budget set by the IT professional and or the policy directive for the node . In some examples the graphics translator may translate data or information received from the CPU to information for the power manager such as an output from the CPU indicative of whether the example policy directive is being satisfied or being violated. The example graphics translator may translate the indication from the example CPU into information for the example power manager to output as a status notification of whether the example policy directive is not being satisfied e.g. via an alarm or alert or is being satisfied e.g. via an acknowledgement the absence of an alarm or alert . Example instances where the node fails to comply with the policy directive include the node consuming an amount of power or energy that is greater than a threshold e.g. a minimum value .

In some examples the sensor monitor monitors one or more sensors coupled to hardware components included in the hardware layer and determines a current profile and or status of the hardware components e.g. the power controller the graphics engine etc. . For example the sensor monitor may gather current power information from one or more power sensors coupled to the CPU and determine the instant power consumed by the CPU based on the gathered information. In some examples the sensor monitor outputs an indication corresponding to the power consumed such as a range of power consumed over one or more periods of time.

In the illustrated example of the CPU operates as a hardware component located in the example hardware layer or operates as a virtual machine controlled by a virtual machine monitor communicatively connected to the example management console . In some examples the CPU communicates with programs running at the application level and or with execution code running on the OS kernel . The example CPU may also facilitate communicating information between other hardware components at the hardware layer such as retrieving information recorded in a memory and conveying that to one or more graphics engines.

In the illustrated example of the CPU includes one or more cores or processors a power controller and a graphics engine including execution units EU and . In the illustrated example of the core reads and writes instructions from the program manager the graphics translator and or the sensor monitor . In some examples the core receives information from a program running at the application level e.g. the example power manager and or from instructions e.g. software running on the OS kernel e.g. the example graphics translator . The example core may determine which component to communicate information to based on the type of information. For example the core may receive instructions from the graphics translator corresponding to settings of the example policy directive . As a result the example core communicates information corresponding to settings of the example policy directive to the example power controller . For example the core communicates a change in the power budget for the graphics engine to the power controller .

In the illustrated example of the power controller manages and or otherwise configures the power consumed by the graphics engine . As described above rather than the graphics engine operating in either the Gstate or the Gstate the power controller contains one or more additional or alternate graphics states and each graphics state may operate at a different frequency. Consequently each example graphic state corresponds to a different amount of power consumption by the example graphics engine . In the illustrated example of the power controller includes a data structure e.g. a table a bit array etc. that specifies a frequency at which the graphics engine operates as a percentage of a maximum frequency that the graphics engine can handle. For example when the example graphics engine is set to the example Gstate the graphics engine operates at 80 percent of the maximum operating frequency of the graphics engine see row .

In some examples the number of graphics states and the corresponding frequencies are generated based on an analysis of historical power consumption during operation e.g. while executing a workload . For example monitoring the power consumption of the graphics engine over a two week period may reveal that the graphics engine operates a majority of the time in one of three energy levels e.g. power consumption levels frequency levels etc. . In some examples these energy levels may be converted into frequencies or frequency levels. The example graphics states stored in the example data structure of are modified to correspond to the power consumption frequencies. In other words the example data structure may be updated to record three graphics states each with a frequency corresponding to power consumption by the example graphics engine at or near one of the three power consumption levels. In some examples a data structure reflects the maintenance parameters or terms or conditions of a policy directive . Each example policy directive may include any number of example data structures . For example a policy directive may include a first data structure with graphics states to execute during peak hours and a second data structure with graphics states to executing during off peak hours.

The example graphics engine of processes any type of graphical workload. For example the graphics engine may perform video file transcoding in which the graphics engine receives instructions to transcode the video file and the workload is divided amongst the execution units of the graphics engine . While the example graphics engine of includes three execution units example methods systems and or articles of manufacture disclosed herein may include any number of execution units which may vary based on the type of the graphics engine. However the speed at which the example execution units transcode the video file depends on the example graphics state set by the example power controller .

In the illustrated example of the power controller sets a graphics state for the graphics engine to execute a workload while complying with the power budget . In some examples the power controller compares the consumption e.g. power consumption frequency value etc. of each graphics state to the power budget and selects the consumption value closest to the power budget without consuming more power than that power budget allows. In some examples the power controller may set the graphics engine to a default or predetermined graphics state. For example when the graphics engine receives a workload to execute e.g. instructions to transcode a video file the power controller may set the graphics engine to the Gstate without comparing the power consumption at the Gstate to the power budget . In some examples the power controller may set the graphics engine to a graphics state based on historical information. For example the power controller may determine that the graphics engine executes a majority of received workloads while set to the Gstate. Thus the example power controller may set the graphics engine to the Gstate. In some examples the power controller may set the graphics engine to the graphics state in which the graphics engine completed executing a previous workload. In some examples the power controller may determine that the graphics engine can execute the workload and satisfy the power budget while varying the graphics state of one or more execution units included in the graphics engine . For example the graphics engine may complete executing a workload and remain below the power budget while the execution unit is set to the Ggraphics state and the execution units are set to for example the Ggraphics state. Thus the example power controller facilitates completing workloads based on the computing resources available and or the power budget set for the graphics engine .

In the illustrated example of based on the graphics state set by the power controller the graphics engine executes the workload at one or more corresponding frequencies. In some examples one or more sensors may be coupled to and or positioned near one or more of the execution units . For example sensors able to measure power consumption may be positioned near the execution units . In the illustrated example of the sensor monitor gathers information collected by sensors positioned at or near the execution units corresponding to the power consumed by each execution unit while executing one or more tasks and or calculates an instant power consumed by the graphics engine . In some examples the sensor monitor may communicate the instant power to the power controller consumed by the graphics engine as a feedback loop to be corrected based on the power budget . In other examples the sensor monitor may communicate that the instant power consumed is between ranges of one or more power consumption thresholds.

In the illustrated example of the power controller compares the instant power consumption values retrieved from the sensor monitor with one or more values or maintenance parameters associated with the policy directive e.g. the power budget for the graphics engine . Based on the result of the comparison the example power controller determines whether to make adjustments to the currently set graphics state of the example graphics engine . For example when the instant power consumption reaches and or exceeds the power budget the power controller may determine adjustments to make to the graphics state s at which the graphics engine operates to satisfy the power budget . For example the power controller may set one or more of the execution units to a lower power consumption graphics state e.g. throttle the graphics processing frequency of one or more of the execution units . In some examples when the power consumption is less than the power budget the power controller may execute actions to increase the workload performed by the graphics engine . In some examples the power controller may modulate the graphics state of the graphics engine between two graphics states to facilitate satisfying a power budget . For example the power budget for the graphics engine may be more than the power consumption of the graphics engine while operating in the Gstate but less than the power consumption of the graphics engine while operating in the Gstate. In such examples the average power consumption of the graphics engine caused by switching between for example the Gstate and the Gstate over a period of time may satisfy the power budget .

Whether modulating the graphics state is an acceptable adjustment depends on the maintenance parameters or terms of the policy directive set by for example the IT professional . The example policy directive may indicate that the instant power consumption cannot exceed e.g. meet the power budget at any time during operation under the policy directive . In some examples the policy directive may include a correction period. For instance the policy directive may indicate that the instant power consumption and or the average power consumption of the graphics engine cannot exceed the power budget over a duration of one second. That is if the example power controller is unable to make adjustments to the instant power consumption and or the average power consumption of the example graphics engine to satisfy the power budget within one second of exceeding the power budget the power controller may output an indication that the graphics engine cannot comply with or satisfy the currently implemented power budget and or policy directive . In some examples when the instant power consumption and or the average power consumption of the graphics engine exceeds the power budget a correction period timer is invoked by the power controller . The example power controller may monitor the instant power consumption and or the average power consumption for the correction period and adjust the graphics state s of the graphics engine when the correction period timer expires or the instant power consumption and or the average power consumption complies with the power budget .

The example power controller may determine that operating the example graphics engine is unable to satisfy the maintenance parameters of the example policy directive when the power budget is less than the power consumed by the graphics engine while operating at the baseline frequency. In some examples the policy directive may set a lower e g minimum limit for the power consumed by the graphics engine that is less than the power consumed by the graphics engine while operating at higher e.g. maximum graphics processing frequency. In some such examples when the power controller determines the graphics engine is unable to satisfy the maintenance parameters of the policy directive the power controller outputs for example an alarm indication. In such examples the graphics translator of may receive the alarm indication and communicate the indication to the power manager to output an alarm for the IT professional and or a log file of node performance. For example the power manager interface may change colors a pop up window may appear on the power manager interface etc.

In this manner the example power controller monitors and or configures power configurations e.g. frequency configurations of the example graphics engine to comply with the power budget . Additionally by selecting graphics states with the lowest power consumption while still satisfying the power budget the power consumption of the graphics engine may be reduced by tens or hundreds of watts over time and thereby reduce the cost of maintaining or operating the node .

As described above the example power controller of sets a graphics state for the example graphics engine to operate in a manner consistent with one or more policy directives controlled by and or otherwise accessible to the power manager . The example power controller selects one or more graphics states based on the maintenance parameters or terms of the policy directive e.g. the power budget and the power consumption corresponding to each of the graphics states. The example power controller also compares the instant power consumed by the example graphics engine while processing a workload to the power budget . Based on the comparison the example power controller may adjust one or more graphics states e.g. graphics processing frequencies of the example graphics engine . As a result the example power controller enables the example graphics engine to process the workload while also consuming less power which reduces the power consumed by the node by tens or hundreds of watts over time. To make the node power management of more useful the power management can be scaled out to collectively manage power consumption on any number of nodes e.g. servers cores processors computer processing units .

In the illustrated example of the data center power manager manages and or configures the power consumed by the nodes A B . . . N of the data center based on the maintenance parameters of one or more policy directives currently operating in the data center . Based on the computing resources available at each node A B . . . N included in the policy directive the example data center power manager communicates a node power budget A B . . . N for each respective node A B . . . N. For example the highest performing power state e.g. the Gstate may vary for one or more nodes A B . . . N. Thus rather than communicate uniform node power budgets e.g. based on a group power budget and the number of nodes included in the group to the nodes A B . . . N the example data center power manager may calculate a separate node power budget A B . . . N for each node A B . . . N that when combined over all of the nodes A B . . . N satisfies the group power budget . In the illustrated example of the group power budget and the node power budgets A B . . . N are stored in a node power database which is in communication with the data center power manager .

In the illustrated example of the node power budgets A B . . . N provided by the data center power manager are processed by each respective node A B . . . N using a similar process as described in . For example the power controller e.g. the power controller A determines what computing resources are available at the graphics engine e.g. graphics engine A and aggregates the instant node power consumed by the graphics engine A. In some examples the power controller A outputs the instant node power consumed to the data center power manager .

In the illustrated example of the data center power manager may sum the instant node power consumed A B . . . N by each node A B . . . N and compare the summed value to the group power budget . Using a similar process as described in the example data center power manager may adjust the node power budgets A B . . . N based on one or more comparison results. In this manner the example data center power manager manages the power consumed by the one or more nodes A B . . . N of interest. As the power management process described in may reduce power consumption of a node by tens or hundreds of watts over time the data center power management process described in may reduce the power consumption of a data center by tens or hundreds of kilowatts over time.

While an example manner of implementing the example node and management console is illustrated in one or more of the elements processes and or devices illustrated in may be combined divided re arranged omitted eliminated and or implemented in any other way. Further the example power manager the example network the example graphics translator the example sensor monitor the example CPU the example core the example power controller the example graphics engine the example execution units the example policy directive storage the example data center the example data center power manager the example node power database and or more generally the example node and example management console of may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Thus for example any of the example power manager the example network the example graphics translator the example sensor monitor the example CPU the example core the example power controller the example graphics engine the example execution units the example policy directive storage the example data center the example data center power manager the example node power database and or more generally the example node and example management console of could be implemented by one or more circuit s programmable processor s application specific integrated circuit s ASIC s programmable logic device s PLD s and or field programmable logic device s FPLD s etc. When any of the apparatus or system claims of this patent are read to cover a purely software and or firmware implementation at least one of the example management console the example power manager the example network the example graphics translator the example sensor monitor the example CPU the example core the example power controller the example graphics engine the example execution units the example node the example policy directive storage the example data center the example data center power manager and or the example node power database are hereby expressly defined to include a tangible computer readable storage medium such as a memory DVD CD Blu ray storing the software and or firmware. Further still the example node and example management console of may include one or more elements processes and or devices in addition to or instead of those illustrated in and or may include more than one of any or all of the illustrated elements processes and devices.

Flowcharts representative of example machine readable instructions for implementing the node and management console of are shown in . In these examples the machine readable instructions comprise programs for execution by a processor such as the processor shown in the example processing platform discussed below in connection with . The programs may be embodied in software stored on a tangible computer readable storage medium such as a CD ROM a floppy disk a hard drive a digital versatile disk DVD a Blu ray disk or a memory associated with the processor but the entire program and or parts thereof could alternatively be executed by a device other than the processor and or embodied in firmware or dedicated hardware. Further although the example programs are described with reference to the flowcharts illustrated in many other methods of implementing the node and management console of may alternatively be used. For example the order of execution of the blocks may be changed and or some of the blocks described may be changed eliminated or combined.

The example processes of may be implemented using coded instructions e.g. computer readable instructions stored on a tangible computer readable storage medium e.g. a computer readable storage device or storage disk such as a hard disk drive a flash memory a read only memory ROM a compact disk CD a digital versatile disk DVD a cache a random access memory RAM and or any other physical storage structure in which information is stored for any duration e.g. for extended time periods permanently brief instances for temporarily buffering and or for caching of the information . Additionally or alternatively the example processes of may be implemented using coded instructions e.g. computer readable instructions stored on a non transitory computer readable storage medium such as a hard disk drive a flash memory a read only memory a compact disk a digital versatile disk a cache a random access memory and or any other storage media in which information is stored for any duration e.g. for extended time periods permanently brief instances for temporarily buffering and or for caching of the information . As used herein the term non transitory computer readable storage medium is expressly defined to include any type of computer readable storage medium. As used herein when the phrase at least is used as the transition term in a preamble of a claim it is open ended in the same manner as the term comprising is open ended. Thus a claim using at least as the transition term in its preamble may include elements in addition to those expressly recited in the claim.

In the illustrated example of the power controller manages the power consumed by the graphics engine of the node . The program of begins by the example power controller receiving and or otherwise retrieving a power budget for the graphics engine block . As described above the example power budget is a maintenance parameter or term or setting of a policy directive e.g. set by a user an IT professional etc. . The power budget is an upper limit of power that the graphics engine and or each of the example execution units can consume which may be represented as a percentage of the maximum frequency that the example graphics engine can handle. In some examples the power budget is set e.g. by a stored policy directive by the IT professional directly for the graphics engine while in other examples the group power budget is set for a group of nodes A B . . . N. Additionally the example data center power manager e.g. the data center power manager may determine one or more node power budget s A B . . . N e.g. a power budget for the graphics engine .

Based on the power budget the example power controller sets one or more graphics states for the example graphics engine block . For example the power controller may set a different graphics state for one or more of the execution units of the graphics engine . Each graphics state may correspond to a different percentage of the maximum frequency of the example graphics engine and consequently to a different power consumption. Based on the computing resources e.g. execution units available to process a workload the example power controller selects one or more graphics states for the graphics engine .

While the example graphics engine is processing a workload the example power controller compares the instant power consumed by the graphics engine with the power budget block . For example the sensor monitor may gather information corresponding to power consumed from one or more sensors positioned near the execution units . The example sensor monitor may sum the values and provide the instant power consumed by the example graphics engine to the example power controller .

When the power consumed by the example graphics engine complies with the power budget block the power controller outputs a status notification block . For example the power controller may output an acknowledgement signal that the graphics engine is operating in compliance with the power budget. The example program of then ends.

When the power consumed by the example graphics engine is not in compliance e.g. violates the power budget block the example power controller may make adjustments to the one or more graphics states of the graphics engine . For example control may return to block to set one or more execution units to a lower power consuming graphics state. In some examples the power controller may attempt to set the one or more graphics states to comply with the power budget a specified number of times. In some examples the power controller may output a status notification when the graphics engine is not in compliance with the power budget block or if the power controller is unable to adjust the power consumption of the graphics engine to comply with the power budget . For example the power controller may output an alarm or alert to output at the management console . The example program of then ends.

In the illustrated example of the power consumed by one or more nodes or servers is monitored and or adjusted. The example program of begins when an example data center power manager receives and or otherwise retrieves a policy directive block . For example an IT professional may apply a service level agreement SLA to a rack of nodes in a data center . The example SLA provides an example group power budget for the rack of nodes A B . . . N. The example data center power manager determines what resources are available to the data center power manager to execute a workload block . For example one or more nodes A B . . . N included in the rack may already be processing a workload and thus are already set to a graphics state and consuming power. However these nodes may not be operating at maximum frequency e.g. the Gstate . Thus the example data center power manager identifies what computing resources e.g. nodes A B . . . N are available to process the workload and then communicates node power budgets A B . . . N to the nodes A B . . . N included in the group power budget block . The node power budgets A B . . . N are the power budgets that the example respective power controller A B . . . N attempts to comply with. The instant node power consumption A B . . . N from each example power controller A B . . . N is aggregated by the example data center power manager from each of the nodes A B . . . N and compared to the group power budget block .

When the aggregated power consumption of the example nodes A B . . . N is in compliance with the example group power budget control proceeds to block and the data center power manager outputs a status notification e.g. a compliance acknowledgement block . The example program of then ends.

When the aggregated power consumption of the example nodes A B . . . N is not in compliance with the example group power budget e.g. the group power budget is violated block the data center power manager adjusts the node power budgets for each node based on the comparison block . For example the data center power manager may adjust the node power budget A for the graphics engine A of the node A to a node power budget A corresponding to a lower power consumption. The example data center power manager again compares the aggregated node power consumption after the adjusted node power budgets A B . . . N were communicated to the respective example nodes A B . . . N to the group power budget block . When the aggregated node power consumption is in compliance with the group power budget block the example data center power manager outputs a status notification e.g. a compliance acknowledgement block and the example program of then ends.

When the aggregated node power consumption does not comply with the example group power budget block control may return to block and the example data center power manager may again attempt to adjust one or more node power budgets A B . . . N. In some examples the data center power manager may attempt to adjust the aggregated node power consumption to comply with the group power budget a specified number of times. When the number of attempts reaches the specified number the example data center power manager may output a status indication that the nodes included in the group power budget cannot comply with the group power budget block . For example the data center power manager may output an alarm or alert indication. Additionally the example data center power manager may output an alarm or alert when the aggregated power consumption of the nodes does not comply with the group power budget. In some examples the data center power manager may output no acknowledgement when the aggregated power consumption complies with the group power budget but may output an alarm or alert when the aggregate power consumption of the nodes does not comply with group power budget.

The processing platform of the instant example includes a processor . For example the processor can be implemented by one or more microprocessors or controllers from any desired family or manufacturer.

The processor includes a local memory e.g. a cache and is in communication with a main memory including a volatile memory and a non volatile memory via a bus . The volatile memory may be implemented by Synchronous Dynamic Random Access Memory SDRAM Dynamic Random Access Memory DRAM RAMBUS Dynamic Random Access Memory RDRAM and or any other type of random access memory device. The non volatile memory may be implemented by flash memory and or any other desired type of memory device. Access to the main memory is controlled by a memory controller.

The processing platform also includes an interface circuit . The interface circuit may be implemented by any type of interface standard such as an Ethernet interface a universal serial bus USB and or a PCI express interface.

One or more input devices are connected to the interface circuit . The input device s permit a user to enter data and commands into the processor . The input device s can be implemented by for example a keyboard a mouse a touchscreen a track pad a trackball isopoint and or a voice recognition system.

One or more output devices are also connected to the interface circuit . The output devices can be implemented for example by display devices e.g. a liquid crystal display a cathode ray tube display CRT a printer and or speakers . The interface circuit thus typically includes a graphics driver card.

The interface circuit also includes a communication device such as a modem or network interface card to facilitate exchange of data with external computers via a network e.g. an Ethernet connection a digital subscriber line DSL a telephone line coaxial cable a cellular telephone system etc. .

The processing platform also includes one or more mass storage devices for storing software and data. Examples of such mass storage devices include floppy disk drives hard drive disks compact disk drives and digital versatile disk DVD drives. The mass storage device may implement a local storage device.

Coded instructions representative of the machine readable instructions of may be stored in the mass storage device in the volatile memory in the non volatile memory and or on a removable storage disc such as a CD or DVD.

Methods systems and apparatus are disclosed to manage power consumption of a graphics engine. Some disclosed example methods include obtaining a policy directive for a graphics engine via an application level interface the policy directive identifying a threshold corresponding to power consumed by the graphics engine operating in a first graphics state determining a power consumed by the graphics engine during operation comparing the power consumed to the threshold of the policy directive and when the threshold is met setting the graphics engine in a second graphics state to cause the graphics engine to comply with the policy directive. Other disclosed example methods include summing a plurality of power values from a plurality of execution units in the graphics engine. Other disclosed example methods include generating a notification in response to setting the second graphics state. Other disclosed example methods include invoking a correction period timer in response to meeting the threshold of the policy directive. Other disclosed example methods include monitoring the power consumed by the graphics engine for the correction period prior to setting the graphics engine in the second graphics state.

Example systems to manage power usage of a graphics engine via an application level interface include a node power controller to obtain a policy directive set for the graphics engine via the application level interface the policy directive identifying a threshold of power usage for a first graphics state of the graphics engine and a sensor monitor to sense a power usage by the graphics engine the node power controller to compare the power usage to the threshold of the policy directive and when the threshold is satisfied the node power controller is to set the graphics engine to a second graphics state to cause the graphics engine to comply with the policy directive. Other disclosed example systems include the graphics engine comprising an execution unit to execute a task received via the application level interface. Other disclosed example systems include the node power controller to generate a notification in response to setting the second graphics state. Other disclosed example systems include the node power controller to invoke a correction period timer in response to satisfaction of the threshold of the policy directive. Other disclosed example systems include the node power controller to monitor the power usage by the graphics engine for the correction period prior to setting the graphics engine in the second graphics state.

Some disclosed example machine readable storage mediums include instructions that when executed cause a machine to at least obtain a policy directive for a graphics engine via an application level interface the policy directive identifying a threshold corresponding to power consumed by the graphics engine in a first graphics state to determine a power consumed by the graphics engine during operation to compare the power consumed to the threshold of the policy directive and when the threshold is met to set the graphics engine in a second graphics state to cause the graphics engine to comply with the policy directive. Some example machine readable storage mediums include summing a plurality of power values from a plurality of execution units in the graphics engine. Other example machine readable storage mediums include generating a notification in response to setting the second graphics state. Other disclosed example machine readable storage mediums include invoking a correction period timer in response to meeting the threshold of the policy directive. Other disclosed example machine readable storage mediums include monitoring the power consumed by the graphics engine for the correction period prior to setting the graphics engine in the second graphics state. Other disclosed example machine readable storage mediums include calculating an average power usage by the graphics engine for the correction period and set the graphics engine in the second graphics state when the average power usage meets the threshold.

From the foregoing it will be appreciated that the above disclosed methods apparatus and articles of manufacture enable fine grain power management of power consumption in a node including an integrated graphics engine and that the fine grain power management can be scaled out and used in a large scale server deployment

Although certain example methods apparatus and articles of manufacture have been described herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all methods apparatus and articles of manufacture fairly falling within the scope of the claims of this patent.

