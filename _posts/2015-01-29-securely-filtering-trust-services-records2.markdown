---

title: Securely filtering trust services records
abstract: Embodiments include method, systems, and computer program products for filtering trust services records. Embodiments include receiving a trust services record that includes a plurality of security components and that is usable to secure data that is stored in an untrusted location. It is determined whether the trust services record has been tampered with, including verifying each of the plurality of security components of the trust services record. The trust services record is filtered based on the determination of whether the trust services record has been tampered with. The filtering includes, when the trust services record is determined to have not been tampered with, allowing performance of at least one task with respect to the secured data; and, when the trust services record is determined to have been tampered with, disallowing performance of any task with respect to the secured data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09647837&OS=09647837&RS=09647837
owner: Microsoft Technology Licensing, LLC
number: 09647837
owner_city: Redmond
owner_country: US
publication_date: 20150129
---
This application is a continuation of U.S. patent application Ser. No. 13 614 988 filed Sep. 13 2012 and entitled SECURELY FILTERING TRUST SERVICES RECORDS. The entire content of the foregoing application is incorporated by reference herein in its entirety.

Computers have become highly integrated in the workforce in the home in mobile devices and many other places. Computers can process massive amounts of information quickly and efficiently. Software applications designed to run on computer systems allow users to perform a wide variety of functions including business applications schoolwork entertainment and more. Software applications are often designed to perform specific tasks such as word processor applications for drafting documents or email programs for sending receiving and organizing email.

In many cases software applications are designed to interact with other software applications or other computer systems. For example web browsers allow users to access information such as web pages email videos music and other types of data. In some cases enterprises or other organizations may provide data on these web servers that is intended only for certain users e.g. employees . In such cases the employees typically log in and are authenticated before being given access to the data. In other scenarios enterprises or other organizations may provide some or all of their data via a third party data host such as a cloud hosting company. Such cloud hosting companies may provide the organization s data and or applications to a wide variety of authenticated and unauthenticated users.

Embodiments described herein are directed to securely filtering trust services records. An embodiment includes receiving a trust services record that includes a plurality of security components that are selected from the group comprising a trust services certificate a principal certificate a group certificate and a trust services policy. The trust services record is usable to secure data that is stored in an untrusted location. The embodiment also includes determining whether the trust services record has been tampered with. The determination includes verifying each of the plurality of security components of the trust services record. The trust services record is determined to have not been tampered with when verification of each of the plurality of security components passes and is determined to have been tampered with when verification of any of plurality of security components fails. The embodiment also includes filtering the trust services record based on the determination of whether the trust services record has been tampered with. The filtering includes when the trust services record is determined to have not been tampered with allowing performance of at least one task with respect to the secured data and when the trust services record is determined to have been tampered with disallowing performance of any task with respect to the secured data.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Additional features and advantages will be set forth in the description which follows and in part will be apparent to one of ordinary skill in the art from the description or may be learned by the practice of the teachings herein. Features and advantages of embodiments described herein may be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. Features of the embodiments described herein will become more fully apparent from the following description and appended claims.

Embodiments described herein are directed to securely filtering trust services records. In one embodiment a client computer system receives at least one of the following trust services records a trust services certificate a principal certificate a group certificate and a trust services policy. The client computer system performs a time validity check to validate the trust services record s timestamp performs an integrity check to validate the integrity of the trust services record and performs a signature validity check to ensure that the entity claiming to have created the trust services record is the actual creator of the trust services record.

In another embodiment similar to that described above a client computer system receives at least one of the following trust services records a trust services certificate a principal certificate a group certificate and a trust services policy. The client computer system performs a time validity check to validate the trust services record s timestamp performs an integrity check to validate the integrity of the trust services record and performs a signature validity check to ensure that the entity claiming to have created the trust services record is the actual creator of the trust services record. The client computer system then based on the time validity check the integrity check and the signature validity check determines that the trust services record is valid and allows a client computer system user to perform a specified task using the validated trust services record.

The following discussion now refers to a number of methods and method acts that may be performed. It should be noted that although the method acts may be discussed in a certain order or illustrated in a flow chart as occurring in a particular order no particular ordering is necessarily required unless specifically stated or required because an act is dependent on another act being completed prior to the act being performed.

Embodiments described herein may comprise or utilize a special purpose or general purpose computer including computer hardware such as for example one or more processors and system memory as discussed in greater detail below. Embodiments described herein also include physical and other computer readable media for carrying or storing computer executable instructions and or data structures. Such computer readable media can be any available media that can be accessed by a general purpose or special purpose computer system. Computer readable media that store computer executable instructions in the form of data are computer storage media. Computer readable media that carry computer executable instructions are transmission media. Thus by way of example and not limitation embodiments described herein can comprise at least two distinctly different kinds of computer readable media computer storage media and transmission media.

Computer storage media includes RAM ROM EEPROM CD ROM solid state drives SSDs that are based on RAM Flash memory phase change memory PCM or other types of memory or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium which can be used to store desired program code means in the form of computer executable instructions data or data structures and which can be accessed by a general purpose or special purpose computer.

A network is defined as one or more data links and or data switches that enable the transport of electronic data between computer systems and or modules and or other electronic devices. When information is transferred or provided over a network either hardwired wireless or a combination of hardwired or wireless to a computer the computer properly views the connection as a transmission medium. Transmission media can include a network which can be used to carry data or desired program code means in the form of computer executable instructions or in the form of data structures and which can be accessed by a general purpose or special purpose computer. Combinations of the above should also be included within the scope of computer readable media.

Further upon reaching various computer system components program code means in the form of computer executable instructions or data structures can be transferred automatically from transmission media to computer storage media or vice versa . For example computer executable instructions or data structures received over a network or data link can be buffered in RAM within a network interface module e.g. a network interface card or NIC and then eventually transferred to computer system RAM and or to less volatile computer storage media at a computer system. Thus it should be understood that computer storage media can be included in computer system components that also or even primarily utilize transmission media.

Computer executable or computer interpretable instructions comprise for example instructions which cause a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language or even source code. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the described features or acts described above. Rather the described features and acts are disclosed as example forms of implementing the claims.

Those skilled in the art will appreciate that various embodiments may be practiced in network computing environments with many types of computer system configurations including personal computers desktop computers laptop computers message processors hand held devices multi processor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers mobile telephones PDAs tablets pagers routers switches and the like. Embodiments described herein may also be practiced in distributed system environments where local and remote computer systems that are linked either by hardwired data links wireless data links or by a combination of hardwired and wireless data links through a network each perform tasks e.g. cloud computing cloud services and the like . In a distributed system environment program modules may be located in both local and remote memory storage devices.

In this description and the following claims cloud computing is defined as a model for enabling on demand network access to a shared pool of configurable computing resources e.g. networks servers storage applications and services . The definition of cloud computing is not limited to any of the other numerous advantages that can be obtained from such a model when properly deployed.

For instance cloud computing is currently employed in the marketplace so as to offer ubiquitous and convenient on demand access to the shared pool of configurable computing resources. Furthermore the shared pool of configurable computing resources can be rapidly provisioned via virtualization and released with low management effort or service provider interaction and then scaled accordingly.

A cloud computing model can be composed of various characteristics such as on demand self service broad network access resource pooling rapid elasticity measured service and so forth. A cloud computing model may also come in the form of various service models such as for example Software as a Service SaaS Platform as a Service PaaS and Infrastructure as a Service IaaS . The cloud computing model may also be deployed using different deployment models such as private cloud community cloud public cloud hybrid cloud and so forth. In this description and in the claims a cloud computing environment is an environment in which cloud computing is employed.

Additionally or alternatively the functionally described herein can be performed at least in part by one or more hardware logic components. For example and without limitation illustrative types of hardware logic components that can be used include Field programmable Gate Arrays FPGAs Program specific Integrated Circuits ASICs Program specific Standard Products ASSPs System on a chip systems SOCs Complex Programmable Logic Devices CPLDs and other types of programmable hardware.

Still further system architectures described herein can include a plurality of independent components that each contribute to the functionality of the system as a whole. This modularity allows for increased flexibility when approaching issues of platform scalability and to this end provides a variety of advantages. System complexity and growth can be managed more easily through the use of smaller scale parts with limited functional scope. Platform fault tolerance is enhanced through the use of these loosely coupled modules. Individual components can be grown incrementally as business needs dictate. Modular development also translates to decreased time to market for new functionality. New functionality can be added or subtracted without impacting the core system.

These trust services records may include multiple different elements including a trust services certificate a principal certificate a group certificate and a trust services policy . Each of these elements may have its own timestamp and or digital signature . These elements will be explained further below.

The client computer system may include various different elements including modules . Each of these modules may represent a separate software function or the functions may be combined into a trust services software development kit SDK . The software modules include receiving module . The receiving module may receive the trust services records from trust service . The receiving module may also receive data and or metadata from trust service and or trust services storage . The receiving module may pass the received trust services records to various modules including the time validity check module the integrity check module and or the signature validity check module. If a record has passed each of these checks or in some cases at least a certain number of them the record validation module will indicate that the record is valid and send the record as validated by module to the client and or store the record internally. This validated record may then be used by the client to perform a specified task .

In some cases client may be a business owner or an IT operator for a business. Businesses and other organizational entities may be constrained by privacy and security concerns. In such cases trust services e.g. may be used to allow the business to use potentially untrusted cloud data storage and use other cloud platform services. The trust services provide data centric security that allows data to reside in a public cloud while ensuring that only authorized users can access the data. The modules of the client computer system allow trust services records to be securely filtered to ensure that the records are valid have not been injected by the server computer system by another computer system or by a third party have not been tampered with etc. This filtering system also prevents the server computer system from tricking the client into migrating data that should be encrypted in the clear to the cloud.

Embodiments described herein provide the ability to perform trusted filtering of trust services records on the client computer system . The embodiments also describe the various checks that are performed to ensure proper filtering. A trust service e.g. application programming interface API may be used to provide the checks including a time validity check an integrity check and a signature validity check . Each of these operations is cryptographically provable and uniquely traceable to the person who performed it. Moreover operations performed by entities residing in or external to the cloud cannot compromise the privacy of the client s data and encryption keys. Each record in used by the trust services is digitally signed and as such can be traced to the creator.

When the receiving module on the client computer system downloads records from the trust services the client computer system makes sure that only records signed by locally trusted certificates are decrypted and used during encryption or decryption operations. Then if a new record is injected into the trust services by the server or by a third party the client computer system will filter the new record out based on the signature validity check and trusted principals. If the server or a third party manages to somehow delete a trust services record a client application e.g. a software development kit SDK on the client computer system will find no trusted record and raise an error ensuring that no clear text data will be leaked.

Trusted filtering of records on the client computer system protects clients e.g. from malicious servers and untrusted entities. Trusted filtering also ensures that the client does not get tricked into compromising sensitive data in the cloud e.g. by sending sensitive data in the clear to the cloud . Any record that has been tampered with deleted or injected into the trust services by the server or an untrusted party is filtered out and can thus be prevented from causing harm to the client computer system .

Trust services stores non user data in three federations Key Federation Policy Federation and Certificate Federation. These federations store the keys certificates and policies that govern who is authorized to access what data and how user data is pushed to the cloud. Before clients can pull user data from the cloud and access it they first interact with data stored in trust services e.g. records in trust services that are relevant to the client to check if they are authorized to access the data and if yes then how they can decrypt the data. Clients cannot blindly trust information in the records obtained from trust services as this information can be corrupted misrepresented by the server or a third party. In order to introduce client trust in these records a set of rules or policies may be established while reading data from trust services storage . The various checks made by the client using a combination of these rules ensure that the client does not get tricked into accessing manipulated data.

At least in some embodiments elements of the trust services records including certificate records principal certificate records group certificate records and policy records each include a time validity check. When a client computer system downloads these records from a trust service e.g. the client computer system verifies that for example the expiration date on the record is not passed and that the valid from and timestamp fields on the record are in the past. One of the checks made on multiple different record types including record certificates principal and group certificate records and policy records is the integrity check . This check works by constructing a new record globally unique identifier GUID based on the content and metadata of the record and then comparing it with the GUID on the record obtained from the trust service. This ensures that if a record was manipulated in the cloud its GUID would not match the one constructed from the manipulated content. This prevents the user from decrypting records that may have been tampered with.

Another check performed is the signature validity check . This check is performed on each of the four kinds of records mentioned above i.e. . The client computer system performs this check to ensure that the entity claiming to be the creator of the record is the actual creator. The client computer system also ensures that the record was created by one of its trusted entities. If one or more of the checks fails the record will be filtered out and discarded. Each of these concepts will be explained further below with regard to methods and of respectively.

In view of the systems and architectures described above methodologies that may be implemented in accordance with the disclosed subject matter will be better appreciated with reference to the flow charts of . For purposes of simplicity of explanation the methodologies are shown and described as a series of blocks. However it should be understood and appreciated that the claimed subject matter is not limited by the order of the blocks as some blocks may occur in different orders and or concurrently with other blocks from what is depicted and described herein. Moreover not all illustrated blocks may be required to implement the methodologies described hereinafter.

Method includes an act of the client computer system receiving at least one of the following trust services records a trust services certificate a principal certificate a group certificate and a trust services policy act . For example receiving module of client computer system may receive trust services record which includes trust services certificate principal certificate group certificate and or trust services policy . Other trust services records not mentioned may also be included within record . Any of the trust services records may be digitally signed by the record s creator. Thus if an administrator signs trust services policy with their digital signature the policy will include the administrator s signature. This signature may be used by the signature validity check to ensure that the record is from the alleged author. In such cases the creator may provide their public key for signature verification by the client.

Method also includes an act of the client computer system performing a time validity check to validate the trust services record s timestamp act . Time validity check module may perform the time validity check to ensure that the trust services record s timestamp is proper. Any or all of the trust services records e.g. records may include a timestamp with expiration date a valid from field and a timestamp field. The expiration date indicates the date and time past which the record will no longer be valid. The valid from field indicates the first date and time from which the record can be valid and the timestamp field indicates when the record was created or last changed . The time validity check includes verifying that the expiration date has not passed and or verifying that the valid from field and timestamp fields have dates that are in the past. If the expiration date has not passed and the valid from fields and timestamp fields are in the past the record is valid and may be indicated as such by the time validity check module .

Method further includes an act of the client computer system performing an integrity check to validate the integrity of the trust services record act . The integrity check module of client computer system may perform the integrity check. The integrity check may include constructing a record globally unique identifier GUID based on the trust services record s content and metadata and then comparing the record GUID with a previously generated record GUID corresponding to the same record. If the GUIDs do not match then it can be inferred that the trust services record has been tampered with or altered in some manner. If such is the case the record is filtered out and is discarded.

Method then includes an act of the client computer system performing a signature validity check to ensure that the entity claiming to have created the trust services record is the actual creator of the trust services record act . The signature validity check module may perform the signature validity check that ensures that the entity claiming to have created the record is the actual creator. The signature validity check may access the digital signature to ensure that the signature is the expected signature and that it corresponds to the expected author of the record. Moreover the signature validity check may verify that the trust services record was created by a trusted entity. It should be noted that while each of these checks has been described separately each check may be used in combination with the other checks or with other validation checks. The checks may be used in any order and at any time during client server communication.

Method includes an act of the client computer system receiving at least one of the following trust services records a trust services certificate a principal certificate a group certificate and a trust services policy act . As mentioned above the receiving module of client computer system may receive trust services record which includes trust services certificate principal certificate group certificate and or trust services policy . The client computer system may then perform one or more checks on the trust services record including a time validity check to validate the trust services record s timestamp act an integrity check to validate the integrity of the trust services record act and a signature validity check to ensure that the entity claiming to have created the trust services record is the actual creator of the trust services record act . Each of these checks is cryptographically provable and uniquely traceable to the creator. As such the checks can be performed securely with little to no risk that an outsider could insert a counterfeit trust services record.

Method also includes based on the time validity check the integrity check and the signature validity check an act of determining that the trust services record is valid act . For example the record validation module may determine that if trust services record has passed each of the three aforementioned checks that the record is valid. This validated trust services record may then be used by a client or other user to perform a specified task act . The client may be a publisher who has published data to the cloud or to another data store or may be a subscriber who is accessing data from the cloud or from another data store . Accordingly the client may publish data to the cloud access data from the cloud or perform some other specified task using the validated trust services record .

As shown in trust services records may be filtered by filter which may be similar to or the same as record validation module . Each check has a Pass box and a Fail box. If one or more of the checks fails the trust services record will be labeled as a bad record and will be filtered out and discarded e.g. deleted or sent to trash bin . Records that pass each of the checks will be labeled as good records and will be retained by the client computer system . In this manner records that have been tampered with or are counterfeit or are expired will be filtered out by at least one of the time validity check the integrity check and the signature validity check . If the client computer system determines that a trust services record has been deleted by an entity it will raise an error that prevents clear text data from being accessed by a third party. Thus if the record is invalid from being altered edited or deleted the record will be filtered out and the user attempting to access data using the record will be prevented from doing so.

Accordingly methods systems and computer program products are provided which securely filter trust services records. Because trust services records allow users to access data stored on the cloud properly filtering out altered or counterfeit trust services records prevent unauthorized users from accessing other users data and will allow clients to securely store data on the cloud.

The concepts and features described herein may be embodied in other specific forms without departing from their spirit or descriptive characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the disclosure is therefore indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.

