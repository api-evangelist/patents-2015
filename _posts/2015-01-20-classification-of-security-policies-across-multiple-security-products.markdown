---

title: Classification of security policies across multiple security products
abstract: A management entity connects with multiple security devices across a network. Each security device operates in accordance with one or more security policies. The management entity imports, over the network, data describing the security policies from the multiple security devices. The management entity classifies the imported security policies into security policy classifications based on commonality in information included in the security policies across the multiple security devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09401933&OS=09401933&RS=09401933
owner: Cisco Technology, Inc.
number: 09401933
owner_city: San Jose
owner_country: US
publication_date: 20150120
---
The present disclosure relates to security systems for networks applications content and authentication.

Administering and maintaining security of an enterprise network is critical task to ensure business efficiency and productivity. Security involves numerous tasks including without limitation monitoring for unauthorized operations intrusions external accesses application security content security authentication compliance etc. which can among other things put sensitive data at risk. This can be complicated by the fact that the enterprise network may span numerous geographical regions nationally an internationally.

In a typical enterprise network there are numerous security devices of various types as well as numerous management applications. This can make enforcement of requirements challenging. Each device or type of device has its own set of complex policy definitions. A network administrator needs to be an expert on numerous security products in order to define policies and maintain security.

A management entity connects with multiple security devices across a network. Each security device operates in accordance with one or more security policies. The management entity imports over the network data describing the security policies from the multiple security devices. The management entity classifies the imported security policies into security policy classifications based on commonality in information included in the security policies across the multiple security devices.

Presented herein are a system and methods which simplify unify and enhance policy management for network security products. A centralized management entity that may take the form of a cloud based application communicates with the network security products e.g. devices applications etc. but generally referred to as security devices herein in a given network environment e.g. a customer datacenter or customer enterprise network etc. . The system can perform analytics and obey shared best practices to provide enhanced insight into network security threats in order to make prompt mitigation. The system presented herein can achieve real time integration between threats and policy enforcement in a way not heretofore possible.

Examples of network security devices products that may be integrated into the system presented herein include but are not limited to including firewalls intrusion prevention systems IPSs Next Generation firewalls NGFWs Next Generation IPSs NGIPSs web security appliances WSAs identity services engines ISEs application security appliances ASAs cloud web security CWS products security manager products content security management appliances cloud firewalls intrusion detection systems IDSs etc.

As used herein a security policy is a set of one or more rules that governs what is and what is not allowed through security devices products. Security policies include network security policies application security policies and authentication security policies. A policy typically includes multiple attributes such as source destination applications port universal resource locator URL on which to take a network security operation or action e.g. permit or deny . The embodiments presented below are directed to network security policies for illustrative purposes only and may be used for application security policies and authentication security polices as would be appreciated by one of ordinary skill in the relevant arts with access to present description.

Thus the term network security device as used herein is not meant to be limited to network devices and may include other security devices and applications such as application security content security authentication etc. Thus more generally these devices are referred to as security devices and are meant to include physical devices as well as applications or tools. Likewise the term network security policy is not limited to network policies and may include other security policies such as application security policies content security policies authentication policies etc. and thus more generally these policies are referred to as security policies. 

A business policy is typically a statement in writing of how a company plans to protect the company s physical and information technology IT assets. A role of a security architect or security operator is to apply the business policy into enforceable security policy ies monitor the enforcement and make changes as needed.

Referring now to a cloud based management system is shown that connects to and communicates with network security devices in a customer datacenter. shows the details of customer datacenter but it should be understood that the cloud based management system may connect and communicate with multiple customer datacenters N as shown in .

The cloud based management system includes a management entity that consists of one or more computer servers M that execute software to perform the operations described throughout this disclosure. An example of a hardware configuration for the management entity is described in more detail below in connection with .

The customer datacenters N each includes a plurality of network security devices or products shown at reference numerals P . Within a customer datacenter there are one or more resources and one or more actors . The resources may include servers databases and the actors are users or processes using a computing device personal computer SmartPhone etc. that may seek access to one or more of the resources . The resources and actors may also reside outside the customer datacenter itself e.g. in the Internet. The network security devices P control access of the actors to the resources according to policies i.e. a set of one or more rules configured on the respective network security devices.

As explained above the network security devices P may be of different types from the same or different vendors of network security products. The management entity centralizes and unifies the management of network security policies across the plurality of network security devices P to greatly simplify network security management in a customer datacenter.

Turning now to a flow chart is shown for a process according to an example embodiment. This process is described in connection with . The process begins at step where a customer e.g. a business or enterprise is on boarded to a cloud based management system. This on board operation is shown in . This involves a network administrator shown at reference numeral logging on to a log on web page served by one of the servers M of the management entity . The log on web page allows the network administrator to set up privileges to permit the management entity to communicate over the Internet into the customer datacenter in order to connect to the network security devices P . In addition during the initial log in and setup phase the network administrator provides names and address e.g. Internet Protocol IP addresses for each of the network security devices in the customer datacenter. Other types of set up processes may be used other than use of a log on web page.

Next at step the management entity discovers the network security devices and imports the policies from each network security device. This operation is depicted in . The discovery step is described in more detail hereinafter. Briefly this involves sending a connection string and device type tag to each network security device. Each network security device responds with device descriptor and policy data for each network security rule configured on the respective network security device. This data is shown at reference numerals P from network security devices P respectively. An example of the policy data imported form a security device may be 

The management entity stores the discovered data describing the discovered security devices and their native policies as shown at reference numeral . Each native network security policy may be one or more native network security rules associated with a named network security device and formatted according to a corresponding native policy model for a network security device. Each native network security rule may in turn include a set of rule parameters to permit or deny network access for the named network security device based on a network protocol source and destination addresses and a device port.

Next at step and as an optional step the imported policies are classified. Specifically the imported policies are compared against each other to determine whether they can be grouped into one of several categories. These categories include but are not limited to including 1 identical 2 similar 3 unique and 4 further investigation required. The classification step is described in further detail below in under the heading Security Policy Classification. Generally speaking classifying may involve classifying imported native network security policies into network security policy classifications each including one or more of the imported native network security policies based on commonality between security rules included in the native network security policies across the multiple network security devices. Thus classifying may involve automatically classifying the network security policies into the classifications based on commonality between the network security rules across the named devices associated with the network security policies.

Next at step data describing the native network security policies received from each of the network security devices is normalized in accordance with a generic policy model to produce normalized policy data. The normalized policy data is shown at reference numeral in . Corresponding normalized policy data P is sent to each of the network security devices and as explained further hereinafter in the section under the heading Security Policy Unification a translation is made from the normalized policy data in accordance with the generic policy model to rules in accordance with the native rule set for the respective network security devices. Generally each native network security policy imported from a network security device may be a set of one or more native network security rules each native network security rule including native rule parameters expressed according to the corresponding native model. The imported native network security policies are normalized by for each imported native network security policy mapping the native rule parameters expressed according to the corresponding native model to corresponding components of a generic rule defined according to the generic policy model. The mapping may include mapping the native rule parameters to the corresponding components a principal or actor action a resource a context and perform a result as used in the generic rule if a principal or actor tries to perform an action on a resource within a context then perform a result. 

Next at step additional network security devices may be added and in so doing a network policy template may be created that is deployed to any additional network devices. illustrates the additional network security device at reference numeral P 1 . When a new network security device is added its device descriptor and native security policy data is imported as shown at reference numeral . This policy data is normalized against the generic policy model as described above in connection with and normalized policy data P 1 is sent to the network security device P 1 . Creating a network security policy template from one or more existing normalized network security policies and deploying it to a network security device is described in more detail hereinafter under the heading Network Security Policy Template Creation and Deployment. 

Next at step the management entity receives network security events from the network security devices P in the customer datacenter. Data describing network security events from respective network security devices is shown at reference numerals P in . Examples of network security events include but are not limited to including how many times a device wants to access a range of Internet Protocol IP addresses that may or may not the addresses are allowed in a WSA device for example how many times an outside device is trying to get through a firewall over a certain range IP addresses access attempts to certain destination IP addresses beyond a firewall etc. As explained above these security events include application security content security authentication related etc. and thus they are security events in general.

Next at step the management entity processes orchestrates and automates the received network security events. As shown in the management entity performs event processing at . This is important because it may be necessary to make changes to rules to permit certain activity that is revealed by numerous attempts to certain IP addresses outside the customer datacenter from within the customer datacenter as described herein or to prevent certain activity that appears to be malicious. Thus as shown in the management entity may generate one or more event triggered controls P to one or more of the network security devices P causing a change to the native rules applied by respective ones of the network security devices P . In addition the management entity may send event triggered alerts shown at to a network administrator or some specified destination associated with the customer datacenter.

To summarize at a system level a method is provided comprising at a management entity discovering multiple security devices connected to a network each security network device to control network access by devices associated therewith according to a corresponding native security policy that is based on a corresponding native policy model associated with the security device importing the native security policies from the corresponding security devices over the network normalizing the imported native security policies across the security devices based on a generic policy model to produce normalized security policies that are based on the generic policy model and representative of the native security polices and processing orchestrating and automating received network security events among the security devices based on the normalized security policies. Processing may involve reporting the received network security events to a desired destination e.g. a network administrator and making changes to security policies as needed based on the received network security events.

Reference is now made to for an example of a business policy and a network security policy. depicts a use case on how security policy may need to run on multiple devices to be complete from the gateway controlling access of Bring Your Own Devices BYODs to a cloud firewall requiring a policy that is synchronized across multiple devices by definition. In this example there a network security device in the form of cloud firewall which may reside outside of the physical premises of a customer facility. There is another network security device in the form of an identity services engine ISE . The network security device is useful to control access to certain web services such as Web Service at reference numeral and Web Service at reference number . Network security device connects to a router . A user such as an employee in a corporation is shown at who may be using a Bring Your Own Device BYOD such as a tablet computer on the corporate network . The corporate network connects to the outside world via WAN .

There is a business policy set by the corporation that says access to Web Service is to be denied but Web Service is to have access to employees in the corporate network. The rules on the network security devices and are as follows.

The management entity receives network security events from the network security devices and which indicate that a desired business goal is not being met with currently running security policies. The management entity thus makes a change of those security policies with a single normalized policy as described above in connection with to return operations of the network security devices and so that the business policy is achieved.

Reference is now made to . illustrates a further capability of the cloud based management system . The system can be integrated with various security intelligence feeds. For example a collective security intelligence entity receives events from the customer data center via the cloud based management system and receives security intelligence feeds from multiple security intelligence resources and . This allows the collective security intelligence entity to correlate security intelligence data and events from a customer datacenter s security devices to determine threats. The collective security intelligence entity can generate reports provide insight into a security state of a customer s network. The data in these reports may be linked with the policy generation capabilities in the management entity to quickly create business policy rules that will mitigate risks.

Turning now to a block diagram is shown of an example hardware implementation for the management entity . In one example the management entity includes one or more servers M . Each server includes one or more processors one or more network interface units and memory . The memory stores control software that when executed by the processor s cause the server to perform the various operations described herein for the management entity .

The processor s may be a microprocessor or microcontroller or multiple instances of such components . The network interface unit s may include one or more network interface cards that enable network connectivity.

The memory may include read only memory ROM random access memory RAM magnetic disk storage media devices optical storage media devices flash memory devices electrical optical or other physically tangible i.e. non transitory memory storage devices. Thus in general the memory may comprise one or more tangible non transitory computer readable storage media e.g. memory device s encoded with software or firmware that comprises computer executable instructions. For example control software includes logic to implement i network security classification ii network policy unification iii network policy template creation and deployment iii a generalized network policy user interface as described below and iv processing orchestration and automation of network policy management functions in connection with collections of reported network security events. Such logic also includes logic to implement Graphical User Interfaces GUIs as necessary in connection with the classification unification template creation and deployment network policy user interface and orchestration and automation.

A user such as a network administrator may interact with the management entity to receive reports change policy etc. through GUIs by way of a user device that connects by way of a network local area network LAN and or wide area network WAN with the management entity . The user device may be a personal computer laptop desktop tablet computer SmartPhone etc.

As mentioned above management entity imports network security policies from multiple distributed network security devices . Each network security policy may include a combination of policy features that collectively define the policy and control the security behavior of the network security device from which the policy was imported. The policy features include network security rules and may also include one or more of configuration interface object and object content features. According to an embodiment presented below management entity classifies or categorizes the imported network security policies into different network security policy classifications based on commonality between the policy features included in the network security policies. The different network security policy classifications or categories include 1 identical 2 similar 3 unique and 4 investigate further.

With reference to there is an illustration of an example classification operation performed by management entity . In the example of management entity determines commonality between policies A multiple instances of policy A associated with multiple network security devices B B B C D and E imported from different network security devices based on comparisons between the respective policy features of the imported policies. Such commonality may indicate imported policies which are related linked and the like across security devices and indications of commonality to a user by management entity may help the user to manage such policies across the devices. The commonality determination indicates that the instances of policy A are identical policies B B and B are similar to each other policies C and D are unique i.e. different from each other and all of the other imported policies and policy E needs further investigation. Accordingly management entity groups the instances of policy A into an identical bucket or classification policies B B and B into a similar classification policies C and D into a unique classification and policy E into an investigate further classification .

With reference to there is a flowchart of an example overview method of importing and classifying network policies from network security devices .

At and management entity connects to a network and then to network security devices over the network using URLs that direct the management entity to the devices for example.

At and management entity respectively imports network security policies from security devices over the network detects any failures that may occur while importing the policies and whether the importing should continue if any such failures are detected. The importation of policies in results in a policy importation report a number of network policy rules that are imported basic definitions associated with the imported policies such as a number of Network Address Translation NAT objects and other metrics and a number of failed connections and imports.

At management entity determines which of the imported network security polices are identical to each other based on a comparison between the imported policies and classifies those policies determined to be identical into an identical classification.

At management entity determines which of the imported network security policies are similar to each other based on a comparison between the imported policies and classifies those policies determined to be similar into a similar classification.

At management entity determines whether imported network security policies not previously classified as either identical or similar should be classified into either unique or investigate further classifications. Based on that determination management entity classifies the remaining network security policies as either unique or investigate further. More specifically at management entity determines whether any remaining network security policies should be classified as unique and if it is determined that any remaining network security policies should be classified as unique classifies those policies into the unique classification. At management entity determines which of the network security policies require further investigation and classifies those policies if any into the investigate further classification. At management entity determines if any remaining network security policies should be ignored i.e. not classified as described above. Operations and will be described further below in connection with .

With reference to there is an illustration of an example Graphical User Interface GUI displayed on management entity and through which a user may identify select connect to and then import network security policies from one or more network security devices. At and the user selects a type of network security device e.g. ASA in a device portion of GUI and selects a tag or label to be associated with a network security policy imported from the selected device type in a device group portion of the GUI. At the user enters a URL for the selected device type into a device URL portion of GUI . At the use selects a connect icon to connect with the selected device type using the entered URL. At the user selects an import icon to import network security policies from the connected device type.

With reference to there is an illustration of an example GUI displayed by management entity that may be used to initiate policy classification of imported security policies and shows resulting security policy classifications. GUI includes a classify icon that when selected by a user initiates policy classification of imported security policies by management entity . GUI also shows first and second example policy classifications at rows and that result from the policy classification. In the example of policy classifications and each represent an identical classification as described below.

Policy classification shows a network security rule that is formatted according to an access list ACL extended rule model. The ACL extended rule includes the following rule parameters service app e.g. HTTP a protocol e.g. TCP a port e.g. 80 a source address 192.168.0.0 a destination address 0.0.0.0 and an access e.g. allow . Policy classification also includes a count e.g. 4 that indicates that 4 network security policies imported from four security devices share the indicated security rule the ACL extended rule . In other words policy classification represents an identical policy classification for the indicated security rule across the 4 security policies devices. Policy classification similarly represents an identical policy classification across four security policies devices.

GUI includes a filter option field through which the user may specify a policy rule parameter that once specified causes the GUI to shows only those classified policies e.g. rules therein that include the specified parameter. Thus the specified parameter operates as a filter of what classified policies e.g. rules therein GUI shows. In an example the filter parameter may be HTTP TCP or any other parameter.

GUI also includes a sub class name field option through which the user may select and or enter a sub class name that is to be assigned to a combination of selected ones of the policy classifications presented by the GUI e.g. policy classifications and . This feature is described below in connection with .

In the example of GUI shows policy classifications and in unexpanded views. GUI also includes expand icons associated with each of policy classifications and that when selected causes the GUI to expand on the associated policy classification e.g. identical rule to reveal identities names of the different security devices from which the identical rules were imported as shown in .

With reference to there is an illustration of GUI with an expanded view after the expand icon associated with policy classification has been selected. Expanded view reveals identities of 4 security devices from which the identical rules in policy classification were imported.

Returning to method of management entity generates identical similar and unique investigate policy classifications of imported policies in operations and respectively based on comparisons between corresponding features or points of comparison of the imported security policies. For example management entity compares security rules from different policies against each other as a point of comparison. Management entity may also compare one or more corresponding ones of the other policy features against each other such as the configurations interfaces objects and object content of the different security policies.

Each of the above mentioned security policy features e.g. security rules configuration interface object and object content. includes local parameters and each of the local parameters may form the basis of a point of comparison between security policies. The local parameters of the different network security features that may serve as points of comparison for similarity tests during classification are now described.

A security rule typically permits or denies network access based on e.g. source and destination addresses network protocols device ports time of day and the like. Thus the network security rule may include the following parameters points of comparison name of rule group e.g. inside in vs. inside out permit deny protocol e.g. IP TCP UDP ICMP source address vs. source address destination address vs. destination address source vs. destination device service ports interfaces context e.g. a deny rule surrounded by other deny rules and config context e.g. the rule appears on a branch config .

A configuration may include a type of site at which the network policy is employed e.g. branch or hub a location of the site e.g. Europe vs. Asia a proximity to outside e.g. presence of an outside interface and a number of interfaces e.g. ports in use.

An interface may include a security level e.g. as an ordinal variable a name e.g. what beyond specific word presence e.g. inside outside DMZ VLAN and the like an interface classification context and an IP address.

An object may include a name object contents and an object count e.g. a group that lists 1000 specific objects .

Object content may include a percent of intersection or ratio an amount of intersection a size e.g. large vs. small IP range a ratio of covered IP ranges a type e.g. internal vs external IP addresses generic range vs. specific addresses email related ports vs. VPN a contained hierarchy e.g. number of nodes and contained nodes how many levels down the nodes are layered .

Management entity employs network security policy matching algorithms in method to determine a level of likeness or commonality between network security policies based on comparisons of the above listed feature parameters points of comparison.

At operation management entity determines different network security policies to be identical if for example the corresponding point s of comparison are identical or resolve to the same value. For example if a point of comparison includes network security rules of the different network security policies management entity determines the network security rules to be identical if the rules represent identical strings or resolve to the same value. For example a comparison between two firewall security rules that each follow the source destination protocol port result format may resolve corresponding rule parameters across the two rules to ascertain identity. Consider the following two example network security rules for an ASA formatted in an access list extended form 

The two rules above are not identical by literal string comparison but it may be assumed that the name object tomcat in the second rule will resolve to 8080 and thus the first rule string when resolved will be identical to the second rule string. In an example that compares network security rules for an NGFW the comparison may include user and action as additional rule parameters.

Thus it is desirable to determine whether a point of comparison in the form of security rules compares rules in their resolved form as illustrated in for example. With reference to there is an illustration of an example access list extended rule in which the name is resolved to a bound interface.

At operations and management entity determines whether different network security policies are similar unique or need further investigation based on commonality between the policies if any.

With reference to there is a flowchart of an example method of determining commonality similarity between different network security policies based on matching points of comparison i.e. corresponding feature parameters of the network security policies . Method may be used in operations and .

At different points of comparison i.e. policy feature parameters are defined. These points of comparison will form a basis for a determination as to whether the different security policies are sufficiently similar as to be placed into the similar policy classification or sufficiently dissimilar as to be placed into the unique policy classification.

At corresponding ones of the points of comparison from different network security policies being compared are compared to each other to arrive at a Boolean result e.g. match 1 no match 0.

At each Boolean result is multiplied by the corresponding assigned weight to produce weighted Boolean results.

At the Boolean results are combined into a match score according to a predetermined expression equation.

At the match score is compared to a score threshold. If the compare indicates the match score is equal to or greater than the score threshold the different network security policies are deemed similar to each other and thus classified into the similar classification. If the compare indicates the match score is below the score threshold the different network security policies are deemed dissimilar to each other and thus classified into either the unique classification or the investigate classification.

In an example in which operation of method defines as the points of comparison various rule parameters used in the access list extended model operation may evaluate the following expression in which match on defines a match comparison test that evaluates to a Boolean result match score match on name match on permit deny match on protocol match on source address match on destination address match on service ports match on rule context 

In the above equation for match score both a multiplicative combination and an additive combination of tests results are used. The multiplicative combination is used for points of comparison deemed of higher importance while the additive combination is used for points of comparison deemed of lower importance. Also weights wmay be initially set to 1 but other values may be used. In addition the score threshold may be set to 2 for example so that if the match score evaluates to 2 or greater the network security policies being compared are deemed similar otherwise the policies are deemed unique.

With reference to there is a flowchart of an example summary method of classifying network security policies.

At and management entity connects with and imports network security policies from network security devices . Each network security policy includes network security rules. Each rule includes rule parameters to cause the corresponding network security device to permit or deny network access based on a network protocol source and destination addresses and a device port for example.

At management entity automatically classifies the network security policies into network security policy NSP classifications based on commonality between the network security rules across devices associated with the network security policies see e.g. . To do this management entity compares the rule parameters of each rule of each network security policy and based on the comparison results 

At management entity displays selectable ones of the NSP classifications including network security rules therein along with selectable expand view and view filter options see e.g. .

At management entity displays NSP classifications in an expanded view if a selection of the expand view is received. Also management entity displays filtered NSP classifications and rules therein if filter on parameters are received through the view filter option see e.g. .

Embodiments directed to normalizing imported rules are now described in the context of security policies for illustrative purposes. As used herein the terms normalize and unify and their corresponding derivatives e.g. normalization and unification are synonymous and may be used interchangeably.

Referring again to and management entity imports different security policies from different types of security devices over a network as described above. Each imported security policy is considered to be native to the security device from which the policy is imported in that the policy is based on a native policy model associated with that security device. Each of the security devices controls network access by devices associated therewith according to the corresponding native network security policy.

Management entity normalizes the imported native security policies across security devices based on a generic policy model to produce a normalized network security policy generally representative of all of the native network security polices. Management entity may also modify the normalized security policy to suit further generalized security goals translate the modified normalized security policy to corresponding native security policies representative of the modified normalized policy and then push the resulting native policies to corresponding ones of security devices. In addition a normalized policy may be created by a user automatically translated to suitable native policies and pushed to multiple security devices e.g. devices . A normalized network security policy is also referred to herein as a generic or unified policy network security policy.

As mentioned above management entity normalizes native security policies that are based on corresponding native policy models to a generic security policy that is based on a generic policy model. In one embodiment the generic policy model referred to as the Principal Action Resource Context Result PARCR model is defined as follows 

With reference to there is an illustration of a PARCR model also referred to as a PARCR policy model . The PARCR model includes basic PARCR model components i.e. principal P action A resource R context C and result R expressed in the if then result syntax. A normalized or generic network security policy based on the PARCR model includes generic security rules based on the PARCR model. The generic security rules include the PARCR model components referred to as PARCR rule components expressed in the if then result syntax. Thus normalizing a native security policy includes mapping native features such as native security rules and their respective rule parameters expressed according to the native policy model to corresponding PARCR rule components expressed in the PARCR model syntax i.e. the if then result form .

The examples below show mappings between native security policies and normalized or generic network security policies based on the PARCR model at the rule level. In other words in the examples the native rule parameters of native security rules are mapped to corresponding PARCR rule components.

With reference to there is a block diagram of an example policy unification module that may be implemented in management entity to convert or map between the native network security policies expressed according to native policy models and normalized or generic policies expressed according to the PARCR model e.g. PARCR model . Module includes a Northbound Application Programming Interface API which may be a Representational State Transfer REST API that interfaces with a policy user interface UI a unified policy engine a Southbound model API and multiple network security device specific network security device plug ins N that interface to corresponding ones of network security devices .

Northbound API allows services or applications such a generalized network security UI or a policy orchestrator e.g. policy UI to communicate with unified policy engine . API allows such services applications to perform operations such as move policy from one network security device e.g. one of devices to another or perform operations that traverse the devices and that require policies in more than one network security device type. One example is to block all IP addresses from a geo location. Another example is to set up access blocking based on the IP being used in the access and a service such as Secure Shell SSH over HTTP.

Southbound model API perform actions on a network security device specific i.e. native network security policy. API receives native network security policies and rules imported via corresponding plug ins from the corresponding network security devices . API also pushes native network security policies down to network security devices via the corresponding plug ins . API may also perform some of the mapping or translating between imported native network security policies and normalized generic network security policies as mentioned above.

Device plug ins read and write network security policy information directly from and to network security devices e.g. WSAs . Plug ins may also include portions of mapping logic to assist with translating native network security policies into the generic normalized network security policy format. In an example WSA network access policy rules would define Block Monitor Allow Warn as the rule actions. Other WSA network access policy rules such as WSA time definitions e.g. Core Business hours may be mapped to the context generic rule component.

Policy engine may implement a policy object model layer to tie network security device specific policies i.e. native policies into the generic policy model e.g. the PARCR model. This may be implemented as a JavaScript Object Notation JSON file that ties generic network security policy and rule components objects e.g. principal context action to Java classes that can enumerate the supported components objects and validate the generic network security rules. The policy object model layer may also allow network security device plug ins to attach network security device specific attributes to object definitions. For example WSA plug in may indicate that there is an immutable Boolean on the policy called Is Global Policy and a mutable integer called Policy Order whose legal values are between n and m. In another embodiment the policy object model layer may be implemented in Southbound model API .

In an embodiment aggregated plug ins may be used in an environment in which policies are to be defined to cross network security devices. For example a policy definition may require sub policies in an ASA and a WSA. Such policies may be defined by higher level plug ins which instead of talking to network security devices directly would talk to network security device plug ins and build policies on top of the generic policy definitions exposed by the device plug ins.

With reference to there is an illustration of example PARCR mapping performed in part by plug ins of policy unification module . According to mapping native ASA policies including corresponding native rule parameters which protect based IP protocols native WSA policies including corresponding native rule parameters which protect based on URLs and native firewall policies including corresponding native rule parameters which protect based on content applications are each mapped to corresponding generic rule components of the same generic policy model i.e. the PARCR model.

With reference to there is an illustration of an example PARCR model anatomy or break down referred to as policy anatomy . The example of represents one possible data model corresponding to an ASA plug in. It is understood that partitioning between objects in the anatomy may be varied and that other policy anatomies for other data models are possible. The PARCR policy anatomy is based on the following assumptions 

Going from bottom to top in policy anatomy depicts a mapping of predefined native policy rule objects in the native domain bottom of to PARCR rule components in the PARCR domain top of . In the native domain an ASA construct for an ASA device operates on a variety of objects depicted as boxes inside the box ASA . The ASA construct may be implemented in ASA plug in for example. Each of the objects depicted in ASA represents a definition of something that the ASA may control. For example the ASA GroupObject may define a range of IP addresses protected by firewall or a group of other objects the ASA Object may define or point to all of the other objects defined in the ASA the ASA ServiceObject may be a combination of a IP addresses a service device port and a protocol the ASA NetworkObject may be an endpoint and the ASA Result includes a permit or deny.

Common object is also depicted in the native domain. Common object is common across multiple security device plug ins and may include for example objects similar to any of the example objects described above in connection with ASA .

As depicted in policy anatomy various objects in the native domain may represent an entity accessible to the PARCR model. Entity maps to either or both the principal and the resource rule components of the PARCR model as depicted in . Each of the PARCR rule components depicted in as boxes labeled principal action resource context and result includes a name represented as a string and a universally unique identifier UUID .

Also as depicted in policy anatomy the PARCR rule components are combined into a generic PARCR rule according to the if then result syntax. Generic rule forms part of a generic network security policy .

The following example shows a mapping between a native network security policy expressed in terms of predefined objects and a generic network security policy based on the PARCR model 

In normalizing native security policies based on native policy models to generic security policies based on a common generic policy model as described above it is desirable to bridge between the generic e.g. PARCR and native e.g. WSA models through corresponding data elements associated with the native and generic policies as opposed to code . Accordingly a policy data driven policy model bridge that describes or defines native policies in terms of the PARCR model may be used to map the native policies to PARCR rule components. As described above in connection with policy anatomy objects that are not strictly security policies but are referenced by the policies are modeled as entities. An example policy model bridge is described below in connection with .

With reference to there is shown an example of a policy model bridge that may be used to map a simplified WSA access policy to the PARCR model. Other policy model bridges may be used corresponding to other security devices. Policy model bridge may also map native entity objects directed time ranges over which a native rule is to be active and URLs that may need to be blocked or allowed to corresponding PARCR rule components. In the example of policy model bridge operates to perform the WSA to PARCR rule mapping shown above in Example 1. In that example policy model bridge may be implemented as a JSON file that represents a contract between the PARCR model and WSA plug in and may be implemented in the WSA plug in.

Policy model bridge referred to as simply bridge includes a header that provides basic information about the corresponding plug in. Header indicates a name of bridge e.g. WSA which is unique across all plug ins . Header also includes a version e.g. 1 to indicate a schema of the policy bridge JSON file being used. Header includes a service definition that indicates an actual implementation of the service as well as a mock implementation. Running a mock implementation simplifies for example automated testing of generic policy UI . The exposed service retrieves concrete instances of native policies and entities.

After header bridge includes policies which enumerates substantially all of the policies supported by the bridge . Different types of network security devices such as the WSA will typically expose network security policies of many different types. Some of these network security policies may be complex and may take advantage of many of the features available in the PARCR model while other policies may be very simplistic. Policies define the following 

Bridge also describes what types of entities can be referenced inside of network security policies. In other words the network security policy is a set of rules composed of references to external entities. Sometimes the types of these entities will be defined within a namespace e.g. plug in which means the entity is specific to the native device. For example if WSAs have the notion of URL categories but other devices do not it makes sense to the URL category entity to be scoped to the WSA plug in. In other cases an entity may be something much more generic and may apply across multiple devices. For example a principal definition that indicates a user was authenticated by Active Directory may be applicable to WSA and a particular type of firewall and therefore might be defined in a non device specific plug in. Thus a policy model bridge such as bridge may include a reference mechanism or section used to refer to types within the current namespace and within other namespaces. An example reference section is provided below 

In entities bridge includes a URL Category entity that is expressed through a list of resources. Two types of resources are accepted. A user may pick a type and enter a free form string. Then depending on type the string would be validated using one of two validators the first ensures a string is a valid URL and the second that the string is a valid regular expression. As the user enters the string policy UI may call the validators and give a visual indication if the string is incorrect. Types that start with a hash are build in types.

In entities bridge also includes a time range entity which indicates a time range to be mapped to the resources rule component of PARCR. For example a WSA policy may express two custom time ranges. The first one is Extended Business Hours and is defined as being Monday through Friday 7 am to 6 pm and Saturday 10 am to 4 pm. The second one is Core Business Hours and is defined as being Monday through Friday 10 am to 2 pm. Bridge maps such time ranges into the PARCR rule.

A policy model bridge such as bridge may also include an access policy action which is a simple entity that does not include any components. A hidden flag may be used to indicate that this entity is not exposed to an end user as a first class object and that it can only be referenced in the context of policy definitions. Enumerating this entity class would return three instances for example Block Monitor and Warn. 

With reference to there is shown a flowchart of an example method of converting between normalized network security policies and native network security policies as described above. Reference can be made to in connection with the description of .

At management entity receives from security devices corresponding native security policies each based on a native policy model associated with the corresponding network security device. Each of the security devices controls access to resources by other devices according to the corresponding native security policy. Each native network security policy includes a set of one or more native network security rules each native network security rule including native rule parameters expressed according to the corresponding native policy model.

At management entity normalizes the received native network security policies across the network security devices based on a generic policy model e.g. the PARCR model to produce normalized network security policies that are based on the generic policy model and representative of the native network security polices. To do this for each received native network security policy management entity maps the native rule parameters expressed according to the corresponding native policy model to corresponding generic rule components of the generic policy model to form a generic security rule. For example management entity maps the native rule parameters to PARCR rule components according to the PARCR model in the form if principal tries to perform an action on resource within context then result to generate the generic rule.

At management entity receives a generic security policy e.g. PARCR rules based on the generic policy model e.g. the PARCR model .

At management entity translates the generic security policy to multiple native security policies each based on a corresponding one of the native policy models associated with the corresponding one of the network security devices. To do this management entity maps the generic rule components to native rule parameters expressed according to the corresponding native policy model to form native rules representative of the one or more generic network rules.

At management entity provides the multiple native security policies to the corresponding security devices to enable the security devices to implement the native security policies.

As discussed above in connection with management entity classifies security policies into identical similar unique and investigate NSP classifications as appropriate and displays selectable ones of the NSP classifications and their corresponding rules on a GUI. For example with reference again to GUI displays two selectable NSP classifications and each which groups together identical network security policies rules. According to embodiments presented below a user may interact with management entity to create a security policy template that combines multiple selected ones of the displayed NSP classifications and their corresponding network security rules . The user may then build a new security policy based on at least that security policy template and commit that new network policy to a security device which may reside in a new site at which the user wishes to control access to a resource.

The process of creating and using a security policy template is described below in connection with . Reference is also made to for purpose of these descriptions.

With reference to there is an illustration of GUI in which the user has entered a policy sub class name Branch Allow Web Traffic into sub class name field option and selected both of identical NSP classifications and . In response management entity assigns the combination of selected NSP classifications and and the rules contained in those NSP classifications to the policy sub class Branch Allow Web Traffic. These actions create the policy sub class Branch Allow Web Traffic that combines all of the network policy rules of NSP classification and and stores the policy sub class with other previously created and stored policy sub classes. A security policy template may be conveniently created based on all of the previously created and stored policy sub classes which essentially represent policy sub templates as will be described below in connection with . In another embodiment policy sub class field may be replaced with a policy template option field through which the user enters or selects a policy template name in which case the above described creation process directly results in the creation of a policy template i.e. the process of creating policy sub classes is skipped.

With reference to there is an illustration of a GUI displayed by management entity and that may be used to create a security policy template referred to simply as a policy template based on previously created policy sub classes or sub templates. GUI displays selectable previously created policy sub classes in a sub class display box. In the example of GUI displays policy sub class Branch Allow Web traffic created previously in the manner described above in connection with along with other previously created policy sub classes Branch Gmail Block Allow DNS and Block Social Media. Each of policy sub classes contains combined NSP classifications and the rules therein . In the example of the user has selected three of the previously created policy sub classes e.g. Branch Allow Web traffic Branch Gmail Block and Block Social Media. 

GUI also displays a policy template field option through which a user may either select an existing policy template name through a drop down menu or add enter a new policy template name. In the example of the user has selected entered Branch Policy as a policy template name to which the three selected policy sub classes are to be assigned. In response management entity assigns the three selected policy sub classes to the policy template name Branch Policy. These action creates a new policy template named Branch Policy that combines all of the network security policies and rules of the three selected policy sub classes. The new policy template Branch Policy may be conveniently used to commit new security policies similar to previous security policies i.e. the security policies in the policy template Branch Policy to security devices in a new deployment site to be managed by management entity as will be described below in connection with .

With reference to there is an illustration of an example network environment including existing geographically distributed data centers or branch sites referred to simply as branches operating under control of management entity . Management entity has previously deployed similar security policies across all of existing branches .

Each of branches includes corresponding switches connecting corresponding assets e.g. Boston Assets Chicago Assets Dallas Assets Atlanta Assets and Headquarter HQ assets to corresponding ones of network security devices . Each security device controls access to and between corresponding assets and other resources in the corresponding branch and access to and from a network such as the Internet.

A geographically distributed new branch San Jose needs to be added to existing branches and needs to operate under network security policies similar to those deployed to the existing branches . Similar to existing branches new branch includes a corresponding switch and a corresponding security device to control access to and between corresponding assets and other resources based on security policies available to the security device . As described below management entity may use policy templates to deploy the existing similar network security policies already in place and used across branches to security device in new branch .

With reference to there is an illustration of a GUI displayed by management entity and that may be used to create a new network security policy based on one or more previously created policy templates. GUI includes a select policy field option through which the user may either select or enter a name of a previously created policy template and an add or select labels field option through which the user may either select or enter a name of a new branch to which the selected entered policy template is to be assigned. In the example of the user has selected the Branch Policy policy template for assignment to the new site San Jose branch in . In response management entity assigns the Branch Policy policy template to the label San Jose associated with the new branch. Once the Branch Policy policy template has been assigned it becomes a new security policy that may be committed i.e. downloaded or deployed to the new branch San Jose. An underlying assumption here is that management system has knowledge of a URL or other connection identity associated with security device at the new branch San Jose see so that the management system is able to communicate with the new branch.

GUI also includes a selectable Validate icon that when selected by the user causes management system to display another GUI that presents all of the network security rules of the selected policy template e.g. the Branch Policy policy template in editable form as seen in described below.

With reference to there is an illustration of a GUI displayed by management system in response to a user selection of the Validate icon in GUI . GUI presents in an editable form all of the security rules included in the selected policy template Branch Policy so that the user may review and edit the Branch Policy. To this end GUI also includes edit icons e.g. add rule and delete rule icons through which the user may select to edit the presented network security rules.

With reference to there is an illustration of GUI displayed by management system after the user has selected the add rule icon and also inserted a new rule that allows Marketing Users to access Facebook application only for the San Jose branch. In response management system updates the new Branch Policy to include the added rule.

Once the new Branch Policy has been edited to include the added rule the user may return to GUI of and select the Commit icon. In response management system commits or downloads the new Branch Policy to the security device at the San Jose branch which will implement the downloaded policy at that branch. Because the new Branch Policy encompasses security rules classified as identical across existing branches the new branch San Jose implements security policies similar and in some cases identical to those security policies that the existing branches implement. The new rule added in connection with GUI represents an exception to the similar security rules that pertains substantially only to the San Jose branch.

With reference to there is a flowchart of an example method of creating and deploying security policies based on policy templates performed by a management entity through interactions with a user. Initially and as described above in detail management entity generates NSP classifications. To do this management entity connects with security devices and imports corresponding security policies from the security devices. Each imported policy includes corresponding security rules. Management entity classifies the imported security policies across the security devices into identical similar unique and investigate classifications. As used herein the terms GUI and menu are synonymous and may be used interchangeably.

At management entity displays selectable ones of the NSP classifications that identify security policies having shared or common e.g. identical security rules see e.g. GUI of .

Operations described below represent an example by which a new policy template may be created based on selected NSP classifications.

At management entity displays an option to select enter a name of a policy template see e.g. GUI of .

At management entity receives an entered selected policy template name see e.g. GUI and selections of the NSP classifications see e.g. GUI of . The selections of the NSP classifications may be through policy sub class or sub template creation menus see e.g. GUI of . Sub classes sub templates combine NSP classifications prior to template creation in operation .

At management entity creates a new policy template identified by the entered selected policy template name and that includes all of the security policies identified by the selected NSP classifications see e.g. GUI . As mentioned above the policy template may include one or more previously created policy sub classes sub templates that each combine multiple selected ones of the selectable NSP classifications. The user may create the policy sub classes sub templates in a precursor operation to operation see e.g. GUI of and GUI .

At management entity displays options to enter select i labels associated with or identifying security devices and ii names of previously created policy templates such as the new policy template see e.g. GUI of .

Operations described below represent an example by which a new user policy may be created based on the new policy template.

At management entity receives entries selections of a label and one or more of the previously created policy templates and responsive thereto creates a new security policy based on the security policies in the selected policy template s see e.g. GUI .

At management entity displays a menu which shows editable network security rules included in the new security policy see e.g. GUI of .

At management entity receives modifications of the network security rules through the menu see e.g. GUI of .

At management entity updates the new security policy to include the modified edited network security rules.

At management entity deploys or applies the new security policy to the security device associated with the selected entered label.

Generating and deploying security policy can be a laborious process. The Policy UI is a graphical user interface tool that allows a user to set network policy using relatively simple graphical actions.

Referring to a representation is shown of a graphical user interface screen display showing a visualization of a network topology. In this view each cloud icon graphical element represents a network domain. For example there are cloud icons and each representing a location network or level of security with names as shown in the figure. The outline color or other characteristic of a cloud icon may be used to denote a security risk.

Connectivity between the network domains is represented by arrow graphical elements in some cases through a firewall icon. For example arrow icon and firewall icon illustrate connectivity between the internal network and the internet . Arrow icon and firewall icon illustrate connectivity between internal network and cloud . Arrow icon and firewall icon illustrate connectivity between DMZ and cloud . A DMZ or demilitarized zone sometimes referred to as a perimeter network is a physical or logical subnetwork that contains and exposes an organization s external facing services to a larger and untrusted network usually the Internet. Arrow icon and firewall icon illustrate connectivity between internal network and DMZ . Arrow icon and firewall icon illustrate connectivity between DMZ and internet . Arrow icon and firewall icon illustrate connectivity between secure network and DMZ . Finally arrow icon illustrates connectivity between the internet and some unknown network . The outline color or other characteristic of a connectivity arrow may be used to denote a type or level of a security risk.

An arrow denotes a connection. Some arrows may state an explicit allow or block policy while outlines may indicate default connection type. For example a circle may be created indicating an explicit policy to block all but the arrow. In another example a user may define that in a particular zone traffic between one zone and another zone is always allowed unless indicated otherwise by an arrow. Color schemes will typically indicate security levels.

When a user selects clicks or double clicks on a cloud icon shown in another display screen is presented that shows more details of the security topology for that network domain. An example of such a display screen is shown in described below. When a user double clicks on an icon e.g. an icon for a network security device status information about that device is displayed.

On one side of the display screen is a space allocated to display icons representing actors and resources. This may be called for example the Policy Depot . For example icon represents a user icon represents a group of users of a particular type icon represents a device icon represents a network and icon represents an application. These icons are referred to below in connection with a description of subsequent figures.

In addition when rules from the Policy Depot may be dragged and dropped onto a relevant object in the network view in order to deploy the security policy rules onto the that network security device. The network is abstracted away as much as possible focusing on perimeter inside and out on zones.

Turning now to a graphical user interface screen is shown in which the icons depicted in are overlaid on a geographical map to indicate the locations of each of the networks or devices in the network. For example in there is a shown a cloud icon resource icon in the western U.S a resource icon in western Europe a resource icon in South Africa and a resource icon in China as well as cloud icon for a network domain. In addition arrow and firewall icons are shown to indicate the connectivity between resources and network domains as described above in connection with .

Referring now to still another example of a graphical user interface screen is shown. In this example different network zones are shown such as network zones and . Icons are shown to indicate resources within a given network zone. For example network zone includes cloud icon application icons and and an application group icon . Similarly network zone includes cloud icon for network cloud icon for network application icons and and an application group icon . Arrow and firewall icons are shown between elements in in a similar manner to that described above in connection with .

For example in icons and represent actors that is users or a class of users in a corporation or enterprise. Icon represents a finance or accountant executive and icon represents an engineer. Icon is located within a region or space that is intended to represent a corporate network zone. Icon is located within a region or space that is intended an network zone external to the corporate network.

Icons and represent resources such as applications databases etc. Icon represents a database system and is shown within space because the database system is internal to the corporate network. Icons and are in space because they are external to the corporate network. As an example icon represents the website resources of a business process service provider software as a service provider that is frequently used by personnel in the corporate network. Thus there is an ongoing business relationship between the business process service provider and actors in the corporate network. Icon represents website resources of an investment service provider who does not have an ongoing business relationship with the corporation.

A network administrator may utilize arrows in the user interface display between actors and resources in order to define network security policy that permits denies or controls abilities between actors and resources. Characteristics of an arrow such as the color of the arrow whether the arrow is dashed or solid and the weight thickness of the arrow etc. may be used to further define network policy.

For example arrow may be drawn between icon and the icon . By drawing this arrow using any arrow drawing tool in a graphical user interface tool set in the manner shown in the network security policy is set to allow the finance accountant executive to access the database system. Again this is within the corporate network. If no arrow is drawn between the icon and icon then the indication is that no network policy has been set to permit the finance accountant executive to access the database system. Drawing of the arrow is translated by processing resources of the management entity to appropriate rules that are delivered to the one or more security devices that are in the path s of traffic flow between the finance accountant executive and the database system.

Similarly by drawing an arrow between the icon and the icon a network security policy is defined to enable the engineer who is outside the corporate network to access the database system inside the corporate network.

By drawing an arrow between the icon and the icon a security policy is defined to enable the finance accountant executive who is inside the corporate network to access capabilities of the business process service provider who is outside the corporate network. Moreover it may be desired in defining this policy to further require that the traffic between the actor and resource is monitored for indications of network security breaches. To achieve this the color of the arrow may be set to a particular color e.g. blue to indicate that monitoring of traffic and reporting to a network administrator or network management entity will occur for traffic between the actor and resource. If the arrow is drawn with the characteristic to set the policy to monitor traffic between an actor and a resource a notification may be sent to the actor so that the actor is aware that the traffic will be monitored for indications of security breaches. Moreover if a security breach is detected from the monitoring of the traffic an alert notification is sent to a network administrator or other destination.

Arrow drawn between icon and icon results in a security policy being defined to enable the finance accountant executive who is inside the corporate network to access capabilities of the investment service provider which is outside of the corporate network. Since the investment service provider does not have a business relationship with the corporation a characteristic of the arrow may be chosen e.g. color green or dashed line to set a network security policy by which the traffic between the actor and resource is ignored meaning it is not monitored for security breaches. The actor is on its own . For example the actor may be connecting to the resource outside the corporate network for his her own personal financial reasons and not for official business of the corporation.

It is also possible to expressly deny abilities between an actor and a resource by drawing a line of a particular color e.g. red or characteristic blinking .

To reiterate the user interface techniques depicted in involve drawing arrows between icons that represent actors and resources to set network policy in a networking environment. Characteristics of the arrows such as color type line weight etc. may be used to further define network policy. Drawing of arrows results in generation of one or more rules that are delivered to security devices to achieve the desired policy associated with the arrow. This in turn involves converting between one or more rules of a generic network policy model to one or more rules of a native rule set associated with one or more security devices as described above in the section under the heading Security Policy Unification. While these examples are described in terms of drawing an arrow between icons it is not meant to be limiting. it is to be understood that any other suitable directional positional relationship may be represented between icons to achieve the same function as drawing an arrow.

Reference is now made to . shows a flow chart for a graphical user interface process to set security policy in accordance with an example embodiment. At a plurality of icons are displayed. Each icon represents an actor or a resource in the networking environment. Delineated regions may be displayed in which icons may reside to indicate whether an actor or a resource within or outside a network zone.

At security policy is defined by receiving user input in the form of lines drawn between icons representing actors and resources to control abilities e.g. permit access connectivity deny access connectivity monitor traffic etc. between actors and resources.

In other words and as shown in at step security policy is defined by receiving user input in the form of a line drawn between a first icon representing an actor and a second icon representing a resource to control abilities between the actor and the resource. The first icon is an arbitrary icon representing an actor and the second icon is an arbitrary icon representing a resource.

An arrow on a line between the first icon representing the actor and the second icon representing the resource determines whether access between the actor and the resource is permitted. A line drawn or not drawn between the first icon representing the actor and the second icon representing the resource determines whether to allow or block abilities between the actor and the resource. A characteristic of the line between the first icon and the second icon further indicates whether traffic between the actor and the resource is to be monitored. As explained above the characteristic may be color. Moreover an icon may represent a group of a plurality of actors of a particular type within the networking environment. Also as shown in delineated regions may be displayed in which the plurality of icons may reside to indicate whether an actor or a resource is located within or outside a network zone.

Defining security policy thus involves interpreting between the first icon representing the actor and the second icon representing the resource so as to generate one or more security rules for configuring one or more security devices in a path between the actor and the resource. Interpreting a line drawn may involve generating the one or more security rules in accordance with a generic policy model that is applicable across a plurality of security device types. In this case an additional step is performed when configuring the security devices of converting the one or more security rules in accordance with the generic policy model to one or more rules of a native rule set associated with one or more security devices. In summary a graphical user interface that allows a user to set security policy using simple graphical actions.

Techniques described herein can be embodied in method apparatus non transitory tangible computer readable and system forms.

In summary in one form a method is provided comprising at a management entity connecting with multiple security devices across a network each security device configured to operate in accordance with one or more security policies importing over the network data describing the security policies from the multiple security devices and classifying the imported security policies into security policy classifications based on commonality in information included in the security policies across the multiple security devices.

In another form an apparatus is provided comprising a network interface unit to connect with a network and a processor coupled to the network interface unit to connect with multiple security devices across a network each security device configured to operate in accordance with one or more security policies import over the network data describing the security policies from the multiple security devices and classify the imported security policies into security policy classifications based on commonality in information included in the security policies across the multiple security devices.

In yet another form a non transitory tangible computer readable storage media encoded with instructions is provided. The instructions when executed by a processor cause the processor to connect with multiple security devices across a network each security device configured to operate in accordance with one or more security policies import over the network data describing the security policies from the multiple security devices and classify the imported security policies into security policy classifications based on commonality in information included in the security policies across the multiple security devices.

The above description is intended by way of example only. Various modifications and structural changes may be made therein without departing from the scope of the concepts described herein and within the scope and range of equivalents of the claims.

