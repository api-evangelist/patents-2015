---

title: Condensing event markers
abstract: Systems, methods, and computer-readable storage media for analyzing the recorded interactions of users within a shared dataspace, where the shared dataspace is provided by an a synced online content management system. As each user adds and deletes files in the shared dataspace, the content management system can record each interaction. The content management system can then analyze the recorded interactions, creating collapsed summaries of the interactions, and generate notifications that can be presented to users. Various thresholds can be used to determine when the recorded interactions are condensed, and when notifications associated with those condensed interactions are presented to users.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09652490&OS=09652490&RS=09652490
owner: Dropbox, Inc.
number: 09652490
owner_city: San Francisco
owner_country: US
publication_date: 20150811
---
This application is a continuation of U.S. patent application Ser. No. 13 725 661 filed Dec. 21 2012 the contents of the above patent application is hereby expressly incorporated by reference in its entirety for all purposes herein.

The present disclosure pertains to condensing event markers and more specifically to condensing event markers of a shared dataspace based on a common factor shared among several event markers then preparing a notification based on the condensed event marker for a user associated with the shared dataspace.

Digests or compendiums condense or abbreviate data yielding more efficient reports and descriptions of the data when compared to the raw data. For example a daily digest email can take all the emails sent to a listserv or an email address over a 24 hour period and compile them into a single email summarizing the previous 24 hours of listserv email account activity. Similarly reports of manufacturing activity can be automated to report the production of specific widgets within a specific time period. Yet another example of a digest are the plot summaries provided at the beginning of television shows where brief summaries of previous episodes explain continuing plot lines from previous episodes to remind and inform current viewers making for an improved viewing experience.

When storing data servers and databases can record every interaction a user or users has with the database. Database managers or other users can then search through these interactions for specific events such as when a user added or modified a specific file. However because these lists of interactions can grow to significant size users parsing through the data may encounter difficulty discerning patterns when looking at individual interactions. Where multiple users can be granted access to a database server or cloud based storage space this storage area can be referred to as a shared dataspace. 

Features and advantages of the disclosure will be set forth in the description which follows and in part will be obvious from the description or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out hereinafter. These and other features of the disclosure will become more fully apparent from the following description and accompanying drawings or can be learned by the practice of the principles set forth herein.

Disclosed are systems methods and non transitory computer readable storage media for condensing event markers of a shared dataspace. Programs and applications can record every interaction with a shared database with the records of those interactions being named event markers. Exemplary event markers include records of the name of a file uploaded to the database when the file was uploaded who performed the uploading the size of the file where the file was stored granting of access to the shared dataspace to a particular user etc. To condense long lists of event markers an example system can search for a commonality shared among several or all of the event markers recorded. The commonality can include one or more factors such as time of the events event type event location users performing the events a source of the event and so forth.

When condensing the event markers the system can consider event granularity. For example if the system is processing 100 event markers should the condensed event markers summarize every 5 event markers every 20 event markers or all 100 event markers Such considerations can be determined based on one or more common traits or commonalities. As an example the system can condense a list of event markers recording the uploading downloading and deletion of documents to three condensed event markers one for each of uploading downloading and deleting documents. Alternatively the system may organize condensed event markers by activities that occur within specific time periods such as the activities within a given hour day week or month. In yet another alternative the system can determine granularity based on multiple traits or shared traits. For example the list could be condensed based on both the time and the user who performed the action leading to condensed event markers such as Bonnie upload two documents 12 11 10 and Clyde delete 3 files 9 9 09. A granularity threshold which quantifies the granularity of the system can be automatically set by the system or can be based on user preferences or user provided configurations.

The system can then communicate condensed event markers to a user associated with the shared dataspace. To do so the system can prepare a notification describing the condensed event markers. A server associated with hosting or providing the shared dataspace can generate and transmit the notifications to a client. In one configuration the server can communicate the notifications to client software installed at the client. Then the client software can generate a popup audible or other notification to a user. In other variations the server may not actively push the notifications to the user but simply enter the condensed event markers as an entry in a log. Then the user can review the log at a later time to see the condensed event markers. Using the previous examples the system could generate a notification stating Bonnie added two documents yesterday or Clyde deleted three files last week. These notifications can be user specific. Therefore rather than stating Bonnie added two documents yesterday the notification might read You added two documents yesterday afternoon. 

Various configurations and factors can determine when to communicate notification to a user. For example users can configure the system to send notifications on the basis of time such as every hour every day every week or every month or can configure the system to automatically send the notification upon satisfying a particular threshold or factors. Exemplary instances of thresholds that can initiate communication of a notification to a user can include a number of activities recorded as event markers such as 5 files added a percentage of the shared dataspace that was used or released within a specific time period a percentage of the shared dataspace remaining or the actions of a particular user. The system can condense a same set of events into different sets of condensed entries for different users or for different situations. Alternatively the system can determine that events that are otherwise eligible for condensing in to a single event are not condensed for particular situations or event patterns.

Various embodiments of the disclosure are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the art will recognize that other components and configurations may be used without departing from the spirit and scope of the disclosure.

The disclosed technology addresses the need in the art for an improved method of condensing event markers and providing notifications of those condensed event markers to users.

An exemplary system configuration is shown in wherein electronic devices communicate via a network for purposes of exchanging content and other data. System can be configured for use on a wide area network such as that shown in . However the present principles are applicable to a wide variety of network configurations that facilitate the intercommunication of electronic devices such as a local area network wireless network etc. For example each of the components of system in can be implemented in a localized or distributed fashion in a network.

In system a user can interact with content management system through client devices . . . collectively connected to network by direct and or indirect communication. Content management system can support connections from a variety of different client devices such as desktop computers mobile computers mobile communications devices e.g. mobile phones smart phones tablets smart televisions set top boxes and or any other network enabled computing devices. Client devices can be of varying type capabilities operating systems etc. Furthermore content management system can concurrently accept connections from and interact with multiple client devices .

A user can interact with content management system via a client side application installed on client device . In some embodiments the client side application can include a content management system specific component. For example the component can be a stand alone application one or more application plug ins and or a browser extension. However the user can also interact with content management system via a third party application such as a web browser that resides on client device and is configured to communicate with content management system . In either case the client side application can present a user interface UI for the user to interact with content management system . For example the user can interact with the content management system via a client side application integrated with the file system or via a webpage displayed using a web browser application.

Content management system can make it possible for a user to store content as well as perform a variety of content management tasks such as retrieve modify browse and or share the content. Furthermore content management system can make it possible for a user to access the content from multiple client devices . For example client device can upload content to content management system via network . The content can later be retrieved from content management system using the same client device or some other client device .

To facilitate the various content management services a user can create an account with content management system . The account information can be maintained in user account database . User account database can store profile information for registered users. In some cases the only personal information in the user profile can be a username and or email address. However content management system can also be configured to accept additional user information.

User account database can also include account management information such as account type e.g. free or paid usage information e.g. file edit history maximum storage space authorized storage space used content storage locations security settings personal configuration settings content sharing data etc. Account management module can be configured to update and or obtain user account details in user account database . The account management module can be configured to interact with any number of other modules in content management system .

An account can be used to store content such as documents text files audio files video files etc. from one or more client devices authorized on the account. The content can also include folders of various types with different behaviors or other mechanisms of grouping content items together. For example an account can include a public folder that is accessible to any user. The public folder can be assigned a web accessible address. A link to the web accessible address can be used to access the contents of the public folder. In another example an account can include a photos folder that is intended for photos and that provides specific attributes and actions tailored for photos an audio folder that provides the ability to play back audio files and perform other audio related actions or other special purpose folders. An account can also include shared folders or group folders that are linked with and available to multiple user accounts. The permissions for multiple users may be different for a shared folder.

The content can be stored in content storage . Content storage can be a storage device multiple storage devices or a server. Alternatively content storage can be a cloud storage provider or network storage accessible via one or more communications networks. Content management system can hide the complexity and details from client devices so that client devices do not need to know exactly where the content items are being stored by content management system . In one variation content management system can store the content items in the same folder hierarchy as they appear on client device . However content management system can store the content items in its own order arrangement or hierarchy. Content management system can store the content items in a network accessible storage SAN device in a redundant array of independent disks RAID etc. Content storage can store content items using one or more partition types such as FAT FAT32 NTFS EXT2 EXT3 EXT4 ReiserFS BTRFS and so forth.

Content storage can also store metadata describing content items content item types and the relationship of content items to various accounts folders or groups. The metadata for a content item can be stored as part of the content item or can be stored separately. In one variation each content item stored in content storage can be assigned a system wide unique identifier.

Content storage can decrease the amount of storage space required by identifying duplicate files or duplicate segments of files. Instead of storing multiple copies content storage can store a single copy and then use a pointer or other mechanism to link the duplicates to the single copy. Similarly content storage can store files more efficiently as well as provide the ability to undo operations by using a file version control that tracks changes to files different versions of files including diverging version trees and a change history. The change history can include a set of changes that when applied to the original file version produce the changed file version.

Content management system can be configured to support automatic synchronization of content from one or more client devices . The synchronization can be platform agnostic. That is the content can be synchronized across multiple client devices of varying type capabilities operating systems etc. For example client device can include client software which synchronizes via a synchronization module at content management system content in client device s file system with the content in an associated user account. In some cases the client software can synchronize any changes to content in a designated folder and its sub folders such as new deleted modified copied or moved files or folders. The client software can be a separate software application can integrate with an existing content management application in the operating system or some combination thereof. In one example of client software that integrates with an existing content management application a user can manipulate content directly in a local folder while a background process monitors the local folder for changes and synchronizes those changes to content management system . Conversely the background process can identify content that has been updated at content management system and synchronize those changes to the local folder. The client software can provide notifications of synchronization operations and can provide indications of content statuses directly within the content management application. Sometimes client device may not have a network connection available. In this scenario the client software can monitor the linked folder for file changes and queue those changes for later synchronization to content management system when a network connection is available. Similarly a user can manually stop or pause synchronization with content management system .

A user can also view or manipulate content via a web interface generated and served by user interface module . For example the user can navigate in a web browser to a web address provided by content management system . Changes or updates to content in the content storage made through the web interface such as uploading a new version of a file can be propagated back to other client devices associated with the user s account. For example multiple client devices each with their own client software can be associated with a single account and files in the account can be synchronized between each of the multiple client devices .

Content management system can include a communications interface for interfacing with various client devices and can interact with other content and or service providers . . . collectively via an Application Programming Interface API . Certain software applications can access content storage via an API on behalf of a user. For example a software package such as an app on a smartphone or tablet computing device can programmatically make calls directly to content management system when a user provides credentials to read write create delete share or otherwise manipulate content. Similarly the API can allow users to access all or part of content storage through a web site.

Content management system can also include authenticator module which can verify user credentials security tokens API calls specific client devices and so forth to ensure only authorized clients and users can access files. Further content management system can include analytics module that can track and report on aggregate file operations user actions network usage total storage space used as well as other technology usage or business metrics. A privacy and or security policy can prevent unauthorized access to user data stored with content management system .

Content management system can include sharing module for managing sharing content publicly or privately. Sharing content publicly can include making the content item accessible from any computing device in network communication with content management system . Sharing content privately can include linking a content item in content storage with two or more user accounts so that each user account has access to the content item. The sharing can be performed in a platform agnostic manner. That is the content can be shared across multiple client devices of varying type capabilities operating systems etc. The content can also be shared across varying types of user accounts.

In some embodiments content management system can include a content management module for maintaining a content directory. The content directory can identify the location of each content item in content storage . The content directory can include a unique content entry for each content item stored in the content storage.

A content entry can include a content path that can be used to identify the location of the content item in a content management system. For example the content path can include the name of the content item and a folder hierarchy associated with the content item. For example the content path can include a folder or path of folders in which the content item is placed as well as the name of the content item. Content management system can use the content path to present the content items in the appropriate folder hierarchy.

A content entry can also include a content pointer that identifies the location of the content item in content storage . For example the content pointer can include the exact storage address of the content item in memory. In some embodiments the content pointer can point to multiple locations each of which contains a portion of the content item.

In addition to a content path and content pointer a content entry can also include a user account identifier that identifies the user account that has access to the content item. In some embodiments multiple user account identifiers can be associated with a single content entry indicating that the content item has shared access by the multiple user accounts.

To share a content item privately sharing module can be configured to add a user account identifier to the content entry associated with the content item thus granting the added user account access to the content item. Sharing module can also be configured to remove user account identifiers from a content entry to restrict a user account s access to the content item.

To share content publicly sharing module can be configured to generate a custom network address such as a uniform resource locator URL which allows any web browser to access the content in content management system without any authentication. To accomplish this sharing module can be configured to include content identification data in the generated URL which can later be used to properly identify and return the requested content item. For example sharing module can be configured to include the user account identifier and the content path in the generated URL. Upon selection of the URL the content identification data included in the URL can be transmitted to content management system which can use the received content identification data to identify the appropriate content entry and return the content item associated with the content entry.

In addition to generating the URL sharing module can also be configured to record that a URL to the content item has been created. In some embodiments the content entry associated with a content item can include a URL flag indicating whether a URL to the content item has been created. For example the URL flag can be a Boolean value initially set to 0 or false to indicate that a URL to the content item has not been created. Sharing module can be configured to change the value of the flag to 1 or true after generating a URL to the content item.

In some embodiments sharing module can also be configured to deactivate a generated URL. For example each content entry can also include a URL active flag indicating whether the content should be returned in response to a request from the generated URL. For example sharing module can be configured to only return a content item requested by a generated link if the URL active flag is set to 1 or true. Thus access to a content item for which a URL has been generated can be easily restricted by changing the value of the URL active flag. This allows a user to restrict access to the shared content item without having to move the content item or delete the generated URL. Likewise sharing module can reactivate the URL by again changing the value of the URL active flag to 1 or true. A user can thus easily restore access to the content item without the need to generate a new URL.

While content management system is presented with specific components it should be understood by one skilled in the art that the architectural configuration of system is simply one possible configuration and that other configurations with more or less components are also possible. For example content management system can include an event processing module and or a notifications module.

Having disclosed some system components the disclosure now turns to which shows exemplary event marker feed . Event marker feed is associated with a shared dataspace or storage space provided by content management system as described in . This shared dataspace can be accessible by a single individual or can be shared among multiple people or groups. As the user or users interact with the shared dataspace content management system can record each interaction in event marker feed . In one variation only particular classes or categories of events may be recorded in event marker feed such as file operations that modify a file whereas other types of operations that do not modify a file may not be recorded. For example content management system can record renames deletes moves creates and so forth while not recording browsing operations file views sharing events or other operations that do not modify file contents or file metadata.

Each row in an event marker feed can represent an activity or interaction with the shared dataspace by a user. Exemplary interactions can include but are not limited to adding a file deleting a file modifying a file renaming a file granting a user access to the shared dataspace removing a user s access to the shared dataspace granting a user administrative rights in the shared dataspace making a file public and making a directory public. To illustrate consider the interactions of Bob with the shared dataspace. Bob uploads or adds three files on Oct. 1 2012 within minutes of each another Texas.doc Florida.doc and Alabama.doc. When the user makes changes to the local file system which are later synced to the shared dataspace content management system can rely on the time of the changes at the local file system or on the time that the changes are synced to the shared dataspace or on some combination thereof. This can be useful for distinguishing and organizing file operations that occurred at multiple different times while the client software is offline and which are later synced to content management system at the same time.

These interactions can be recorded as event markers where the event marker describes the interaction by recording the type of activity when the interaction takes place Time what file or directory was interacted with Filename and who performed the interaction User . As shown each event marker occupies a separate row in event marker feed however other configurations can have event markers organized into columns separate records or structures chained together using pointers or other programming data management techniques for organizing multiple event markers.

As other users having access to the shared dataspace interact with the database their actions can be similarly recorded. In event marker feed the interactions with James and Mike are recorded after Bob s interactions. However while feed only shows 7 interactions other feeds can have hundreds thousands millions or more interactions recorded as event markers. Whereas analyzing the shown 7 event markers is relatively simple analyzing thousands or millions of interactions can be cumbersome without means for automating the analysis and providing meaningful summaries of the interactions.

In other configurations the collapsed event markers can be organized and condensed based on the type of interactions interactions with specific files or any additional information recorded in the event marker feed. For example event marker feed of could instead of being organized based on time be condensed based on specific actions resulting in collapsed event markers such as 4 files were added 2 files were deleted and 1 file was replaced. How content management system determines to condense event marker feeds can be predetermined or can be customized based on user preferences circumstantial needs and or system requirements.

As content management system condenses the event markers into a list of collapsed event markers content management system can determine a quantity of event markers to merge into a single collapsed event or a threshold for determining whether to merge individual events. This determination can be based on a level of granularity content management system wishes to convey to future users. For instance a system reducing an event marker feed of 1 000 event markers to 5 collapsed event markers has a finer granularity than a system which condenses the 1 000 event markers to 20 collapsed event markers.

Content management system can operate according to a threshold that may condense fewer than all of a given set of events. Some sets of event data may not be formed in such a way that condensing more than a handful of the events makes sense. For example the event data may describe mostly single file change events that do not have any apparent connection in time type or location. While some systems can rely on relative comparisons of granularity fine grained v. course grained other systems can quantify the levels of granularity based on specific numbers or percentages. One example of this would be determining the granularity based on the maximum number of event markers to be combined in a given collapsed event whereas other forms of determining granularity can be based on the number of collapsed events visible on a monitor or other display at a given time.

In yet other examples the granularity can be determined based on the amount of time between interactions. Therefore in one configuration content management system could condense any interactions with the shared dataspace that occur within 15 minutes of each another whereas in other configurations it could condense every interaction which occur within an hour a day or other time periods. The granularity can also be based on classifications of certain users. If Bob James and Mike were all co workers where Mike was a supervisor of Bob and James the interactions of Bob and James might be condensed together with Mike s interactions condensed separately. Yet other configurations can condense the feed in multiple ways or using multiple common factors or attributes. Thus the collapsed event markers can be organized both by the user who interacted with the shared dataspace and the type of action performed or any other combination of factors or attributes. Content management system can collapse a same set of events differently for display to different users. For example content management system can condense events relating to a shared folder differently for users of the space based on their activity in the shared folder such as condensing only closely related events for an owner of the folder and condensing all the events into a daily digest for users who rarely access or use the folder.

The condensed feeds can be generated for a specific individual or can be generic in nature. As shown collapsed event feed is specifically generated for Bob. Bob can have user preferences stored that pre determine the granularity of the collapsed event markers how often the collapsed event markers are determined what attributes are used to condense the event marker feed and who has access to the collapsed event marker feed. Should Mike James or another user attempt to view the collapsed event marker feed the listed collapsed event markers could be organized differently based on user preferences for that user. In this way the system can store more than one set of collapsed event markers or can generate the collapsed event markers separately in an on demand configuration waiting to create the collapsed event marker feed until requested or accessed by a user.

Having generated the collapsed event feed content management system can generate notifications for a user. Content management system can transmit the notifications to users via a web interface text message email or email digest a popup or other notification on a local software client for example. In another variation content management system can generate notifications which are not presented to the user directly but which are entered in a log file or an event history that the user can choose to view. shows an example of such notifications using notification . Here the event markers of have been condensed into collapsed event markers similar or equivalent to the collapsed event markers of and content management system has determined that notifications should be sent to a user named Cindy. These notifications can be similarly customized based on user preferences can be based on system notifications and thresholds or can be based on a generic or predetermined configuration. In this illustration content management system has generated a notification based on the fact that 5 of the available data storage in the shared dataspace was filled in the current week. In other configurations specific thresholds such as an amount of the dataspace filled in a given time period amount of dataspace remaining a number of interactions or a number of a type of interaction a given amount of time passing without sending notifications and or other preferences or settings defined by users or determined based on user history and actions. As an example Cindy could set a preference that she would like to know when files added to the shared dataspace in any given week occupy more than 3 of the total shared dataspace available. Cindy could also set as a preference to receive a notice anytime files are deleted from the shared dataspace and information regarding who performed that action. Other exemplary notifications that a user could request to receive include a notification at least once a week or month or hour regarding significant changes to the shared dataspace where the determination of significant is either determined by content management system or selected as a preference by the user.

Content management system can send multiple notifications to multiple users. Such multiple notifications can all be identical or customized for each user. In addition the notifications can be based on previously collapsed event markers or the event markers can be collapsed due to a threshold associated with a notification being reached. For instance a preference could cause content management system to generate notifications regarding the number of files added deleted and modified in the shared dataspace every week. Based on that preference content management system can collapse the event markers indicating addition deletion and modification upon hitting the week threshold and use the generated collapsed event markers to create the notifications. Similarly if a preference indicates a desire for content management system to send notifications when the shared dataspace is filled to 50 capacity 75 capacity and 95 capacity upon reaching those threshold values content management system can initiate the condensing or collapsing of event markers and use the newly created collapsed event markers to generate the associated notifications.

Content management system can detect that initial groupings of file events can be replaced or updated. For example if content management system recognizes that a first collapsed event describes 10 photo upload events at 3 30 pm a second collapsed event describes 8 photo upload events at 3 33 pm and a third collapsed event describes 11 photo upload events at 3 38 pm the system can combine the three events later or can perform an analysis of previously collapsed events within a threshold in the past when processing new events. In this example the system can combine the three collapsed events so that a single collapsed event describes 29 photo upload events between 3 30 pm and 3 38 pm.

Having disclosed some basic system components and concepts the disclosure now turns to the exemplary method embodiment shown in . For the sake of clarity the method is described in terms of an exemplary content management system such as content management system as shown in configured to practice the method. The steps outlined herein are exemplary and can be implemented in any combination thereof including combinations that exclude add or modify certain steps.

Content management system can generate a plurality of event markers each event marker in the plurality of event markers being associated with an activity involving a shared dataspace . Examples of such activity include but are not limited to adding a file to the shared dataspace deleting a file moving a file renaming a file modifying a file providing a user access to the shared dataspace limiting access and or administrative capacity of a user to the shared dataspace making a file public making a file private making a new directory or folder and restricting public access to any portion of the shared dataspace.

Content management system can then create a collapsed event by merging a portion of the plurality of event markers where the portion is determined at least in part based on a commonality shared among the portion . This portion can be determined using a granularity threshold such as a period of time a data size associated with each event marker in the plurality of event markers a quantity of the plurality of event markers a data similarity a file type similarity and a number of event markers associated with a particular activity. The commonality or shared attribute can be any shared quality or data point associated with the activity. Non limiting examples of these commonalities include a point of origin of the portion of the plurality of event markers the shared dataspace a user performing the interaction the form of interaction a period of time during which the interaction took place where the interaction originated such as a particular state or country a duration of the interaction bandwidth or data size associated with the interaction or a number of communication errors in the interaction. The commonality can also indicate that a threshold has been reached such as a particular number of interactions a number of users being added to the shared dataspace a percentage of the shared dataspace being occupied or a number of interactions from a particular location.

The collapsed events can be created based on specific user preferences or can be based on content management system needs and determinations. If based on user preferences the commonalities used can indicate the particular preferences that a user has in viewing the collapsed event marker feed. For instance should a user consistently sort a list based on the times of interaction content management system can recognize this pattern of usage and organize the collapsed events based on interaction times. These patterns of use and derived user preferences can shift with time and can vary how the event markers are organized in the collapsed event marker feed given a time and or circumstance.

Content management system can then prepare a notification for a user describing the collapsed event . This notification can be specific to the user and based on user preferences either entered by the user or gleaned by the system from previous user interactions or can be generic. These notifications can be initiated based on meeting thresholds as well. For instance content management system could recognize that a percentage of the shared dataspace has been recently occupied and issue a notification. Other possible causations for the generation of notifications can include the passage of a set amount of time a number of event markers obtained or patterns derived using the event markers and or commonalities previously described. Generally although not always the notification can present the collapsed event markers in a natural language configuration making the collapsed event marker readable to a user. Should the user require language and or grammatical processing of the notification can aide in the user receiving a notification that presents the collapsed event marker in a comprehensible fashion.

Finally content management system can present this notification to the user . This presentation can take place through any acceptable means of presentation such as communication of the notification to a display device printing a report or sending a text or email message. The presentation can occur via a software client or as a log and can be modified based on the technical capacity of a user device associated with the user. As with preparing the notification presentation of the notification can also depend on the meeting of a threshold value. For instance while the notification may be prepared on Sunday night the threshold may indicate not to email the notification until 8 AM Monday morning. In other circumstances the threshold for presenting the notification can be tied directly with the creation of the notification and or collapsing of the event marker feed. In such an instance upon creating a collapsed event marker content management system can automatically generate a notification which can be specific to a user or can be generic and present that notification to a user. Certain configurations and embodiments can await an acknowledgment of the notification after presenting the notification. This acknowledgment can then initiate further actions within the event markers the collapsed event markers additional notifications or can initiate further interaction with the shared dataspace.

To enable user interaction with the computing device an input device can represent any number of input mechanisms such as a microphone for speech a touch sensitive screen for gesture or graphical input keyboard mouse motion input speech and so forth. An output device can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances multimodal systems can enable a user to provide multiple types of input to communicate with the computing device . The communications interface can generally govern and manage the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.

Storage device is a non volatile memory and can be a hard disk or other types of computer readable media which can store data that are accessible by a computer such as magnetic cassettes flash memory cards solid state memory devices digital versatile disks cartridges random access memories RAMs read only memory ROM and hybrids thereof.

The storage device can include software modules for controlling the processor . Other hardware or software modules are contemplated. The storage device can be connected to the system bus . In one aspect a hardware module that performs a particular function can include the software component stored in a computer readable medium in connection with the necessary hardware components such as the processor bus display and so forth to carry out the function.

Chipset can also interface with one or more communication interfaces that can have different physical interfaces. Such communication interfaces can include interfaces for wired and wireless local area networks for broadband wireless networks as well as personal area networks. Some applications of the methods for generating displaying and using the GUI disclosed herein can include receiving ordered datasets over the physical interface or be generated by the machine itself by processor analyzing data stored in storage or . Further the machine can receive inputs from a user via user interface components and execute appropriate functions such as browsing functions by interpreting these inputs using processor .

It can be appreciated that exemplary systems and can have more than one processor or be part of a group or cluster of computing devices networked together to provide greater processing capability.

For clarity of explanation in some instances the present technology may be presented as including individual functional blocks including functional blocks comprising devices device components steps or routines in a method embodied in software or combinations of hardware and software.

In some embodiments the computer readable storage devices mediums and memories can include a cable or wireless signal containing a bit stream and the like. However when mentioned non transitory computer readable storage media expressly exclude media such as energy carrier signals electromagnetic waves and signals per se.

Methods according to the above described examples can be implemented using computer executable instructions that are stored or otherwise available from computer readable media. Such instructions can comprise for example instructions and data which cause or otherwise configure a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Portions of computer resources used can be accessible over a network. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language firmware or source code. Examples of computer readable media that may be used to store instructions information used and or information created during methods according to described examples include magnetic or optical disks flash memory USB devices provided with non volatile memory networked storage devices and so on.

Devices implementing methods according to these disclosures can comprise hardware firmware and or software and can take any of a variety of form factors. Typical examples of such form factors include laptops smart phones small form factor personal computers personal digital assistants and so on. Functionality described herein also can be embodied in peripherals or add in cards. Such functionality can also be implemented on a circuit board among different chips or different processes executing in a single device by way of further example.

The instructions media for conveying such instructions computing resources for executing them and other structures for supporting such computing resources are means for providing the functions described in these disclosures.

Although a variety of examples and other information was used to explain aspects within the scope of the appended claims no limitation of the claims should be implied based on particular features or arrangements in such examples as one of ordinary skill would be able to use these examples to derive a wide variety of implementations. Further and although some subject matter may have been described in language specific to examples of structural features and or method steps it is to be understood that the subject matter defined in the appended claims is not necessarily limited to these described features or acts. For example such functionality can be distributed differently or performed in components other than those identified herein. Rather the described features and steps are disclosed as examples of components of systems and methods within the scope of the appended claims.

