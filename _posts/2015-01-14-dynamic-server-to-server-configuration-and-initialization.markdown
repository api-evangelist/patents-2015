---

title: Dynamic server to server configuration and initialization
abstract: An apparatus includes a discovery component to identify a first application routine within a storage for execution, to identify execution of a remote application routine within a node device as a first requisite for execution of the first application routine from a first application requisites data, and to provide indications of storage of the first application routine and the first requisite to a control master; a start component to restart an earlier started execution of the first application routine in response to receipt of an indication that execution of the remote application routine within the node device has been restarted in accordance with a catalog received from the control master, the catalog including indications of the first and remote application routines and an indication of the first requisite; and a status component to provide an indication to the control master of the restart of execution of the first application routine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09553761&OS=09553761&RS=09553761
owner: SAS INSTITUTE INC.
number: 09553761
owner_city: Cary
owner_country: US
publication_date: 20150114
---
This application claims the benefit of priority under 35 U.S.C. 119 e to U.S. Provisional Application Ser. No. 61 927 725 entitled SERVICE COORDINATOR STARTER filed Jan. 15 2014 the entirety of which is incorporated herein by reference.

This application is a continuation of and claims the benefit of priority under 35 U.S.C. 120 to U.S. patent application Ser. No. 14 597 007 entitled DYNAMIC SERVER TO SERVER CONFIGURATION AND INITIALIZATION filed Jan. 14 2015 and issued on Apr. 26 2016 as U.S. Pat. No. 9 325 576 the entirety of which is incorporated herein by reference.

It has become commonplace to deploy combinations of computing devices to provide various server functions accessible by a network. One or more of such computing devices may further provide multiple virtual machine VM environments within to simulate the presence of an ever greater quantity of computing devices. Such complex installations may be used to support the execution of multiple applications to provide a variety of server functions and or to improve performance and responsiveness of one or more server functions by executing multiple instances of the same application in parallel.

The following presents a simplified summary in order to provide a basic understanding of some novel embodiments described herein. This summary is not an extensive overview and it is not intended to identify key critical elements or to delineate the scope thereof. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.

A computer program product may be tangibly embodied in a non transitory machine readable storage medium where the computer program product may include instructions that may be operable to cause a processor component to perform operations including identify a first application routine stored within a storage of a first node device for execution by the first node device identify execution of a remote application routine by a second node device as a first requisite for execution of the first application routine from a first application requisites data stored within the storage provide indications of storage of the first application routine within the first node device for execution by the first node device and the first requisite to a control master start execution of the first application routine in response to receipt of an indication that execution of the remote application routine by the second node device has started in accordance with a catalog received from the control master wherein the catalog comprises indications of the first and remote application routines and an indication of the first requisite and provide an indication to the control master of the start of execution of the first application routine.

A computer implemented method may include identifying a first application routine stored within a storage of a first node device for execution by a first processor component of the first node device identifying execution of a remote application routine by a second processor component of a second node device as a first requisite for execution of the first application routine from a first application requisites data stored within the storage providing indications of storage of the first application routine within the first node device for execution by the first processor component and the first requisite to a control master starting execution of the first application routine in response to receipt of an indication that execution of the remote application routine by the second processor component of the second node device has started in accordance with a catalog received from the control master wherein the catalog comprises indications of the first and remote application routines and an indication of the first requisite and providing an indication to the control master of the start of execution of the first application routine.

An apparatus may include a processor component a storage to store a first application routine for execution by the processor component and a first application requisites data a discovery component for execution by the processor component to identify the first application routine as stored within the storage for execution by the processor component to identify execution of a remote application routine by another processor component of a node device as a first requisite for execution of the first application routine from the first application requisites data and to provide indications of storage of the first application routine within the storage for execution by the processor component and the first requisite to a control master a start component for execution by the processor component to start of execution of the first application routine in response to receipt of an indication that execution of the remote application routine by the other processor component of the node device has started in accordance with a catalog received from the control master wherein the catalog comprises indications of the first and remote application routines and an indication of the first requisite based on the indications provided to the control master and a status component for execution by the processor component to provide an indication to the control master of the start of execution of the first application routine.

A computer program product may be tangibly embodied in a non transitory machine readable storage medium where the computer program product may include instructions that may be operable to cause a processor component to perform operations including identify a first application routine stored within a storage of a first node device for execution by the first node device identify execution of a remote application routine by a second node device as a first requisite for execution of the first application routine from a first application requisites data stored within the storage provide indications of storage of the first application routine within the first node device for execution by the first node device and the first requisite to a control master restart an earlier started execution of the first application routine by the first node in response at least to receipt of an indication that execution of the remote application routine by the second node device has been restarted in accordance with a catalog received from the control master wherein the catalog comprises indications of the first and remote application routines and an indication of the first requisite based on the indications provided to the control master and provide an indication to the control master of the restart of execution of the first application routine.

A computer implemented method may include identifying a first application routine stored within a storage of a first node device for execution by a first processor component of the first node device identifying execution of a remote application routine by a second processor component of a second node device as a first requisite for execution of the first application routine from a first application requisites data stored within the storage providing indications of storage of the first application routine within the first node device for execution by the first processor component and the first requisite to a control master restarting an earlier started execution of the first application routine by the first processor component in response to receipt of an indication that execution of the remote application routine by the second processor component of the second node device has been restarted in accordance with a catalog received from the control master wherein the catalog comprises indications of the first and remote application routines and an indication of the first requisite based on the indications provided to the control master and providing an indication to the control master of the start of execution of the first application routine.

An apparatus may include a processor component a storage to store a first application routine for execution by the processor component and a first application requisites data a discovery component for execution by the processor component to identify the first application routine as stored within the storage for execution by the processor component to identify execution of a remote application routine by another processor component of a node device as a first requisite for execution of the first application routine from the first application requisites data and to provide indications of storage of the first application routine within the storage for execution by the processor component and the first requisite to a control master a start component for execution by the processor component to restart an earlier started execution of the first application routine in response to receipt of an indication that execution of the remote application routine by the other processor component of the node device has been restarted in accordance with a catalog received from the control master wherein the catalog comprises indications of the first and remote application routines and an indication of the first requisite based on the indications provided to the control master and a status component for execution by the processor component to provide an indication to the control master of the restart of execution of the first application routine.

To the accomplishment of the foregoing and related ends certain illustrative aspects are described herein in connection with the following description and the annexed drawings. These aspects are indicative of the various ways in which the principles disclosed herein can be practiced and all aspects and equivalents thereof are intended to be within the scope of the claimed subject matter. Other features will become apparent from the following detailed description when considered in conjunction with the drawings.

Combinations of multiple computing devices that are to operate together to provide various server functions can be difficult to configure initialize update and reinitialize correctly. Although various ones of the applications that are executed in such installations may have dependencies on each other and or on resources provided by still other devices there may be no provision within the applications and or resources themselves to ease the work and complexity of configuring those applications to cooperate in order to address those dependencies. Further updates and or upgrades to any one of the computing devices applications and or resources often require corresponding changes to one or more others of the computing devices applications and or resources such that there may be a form ripple effect that arises.

Various embodiments described herein are generally directed to dynamically configuring and initializing virtual machine environments and application routines among multiple computing devices deployed together as servers. A combination of virtual machine VM environment application software and dynamic configuration software may be installed on one or more computing devices that are to be operated together. Discovery components of the configuration software may perform various tests and or searches for various pieces of configuration information concerning aspects of the computing devices the VM s to be provided within the computing devices and or the application routines including which computing devices are to execute which application routines. From the results of the tests and or searches a requisites database is generated that includes indications of requisites for the execution of various routines including dependencies among routines and or dependencies of each routine on various resources. A query component may communicate with one or more resource devices to obtain various pieces of configuration information indicated as requisite pieces of configuration information in the requisites database. The query component may then generate a configuration database of configuration information needed for the initialization and or operation of VMs and or application routines executed within the VMs. From the configuration database a separate parameter catalog of configuration information may be generated for each of the computing devices that specifies various parameters for the operation of that computing device one or more VMs that may be provided within that computing device and or one or more application routines executed within that computing device. Each of the parameter catalogs may be used by the computing device for which it is generated to control the start and or subsequent restart of the one or more application routines executed therein.

Virtual environment routines one or more application routines configuration software parameter data and specifications of requisites for each may be packaged together into a single file e.g. a single compressed file such as a so called zip file and or into a single storage medium e.g. an optical disk or a solid state storage device such as a thumb drive for easier installation onto multiple computing devices deployed together as servers. The particular combination of virtual environment routines and one or more application routines may be uniquely specified for each such package based on what combination of server functions are to be performed by those computing devices onto which the package is to be installed. The need for customization of the virtual environment routines and or the application routines themselves may be minimized or entirely eliminated based on a lack of need to include a configuration script tailored to the particular combination of virtual environment routines and or application routines as a result of an ability of the configuration software to dynamically determine what routines are included in the package and to itself tailor the configuration of those routines based on what routines are so included.

Following installation of the package onto each of the computing devices and upon powering up or resetting of those computing devices a discovery component of the configuration software within each of the computing devices may perform various tests to determine various aspects of the hardware components of the computing devices such as processor component available storage and or available network interface. The discovery component may also search for and parse one or more files or data structures associated with the virtual environment routines and or the application routines to obtain information concerning requisites for executing each of those routines. Those requisites may include dependencies between application routines such that one application cannot be started until after another is started and or one application must be restarted whenever another application is restarted.

In some embodiments each application routine on each computing device may be required to be accompanied by or otherwise include a file or other data structure specifying the requisites of that application routine. In addition to ensuring that the requisites for each application routine are set forth in a discoverable manner the presence of each such file or data structure may also serve as an indication of what application routines are actually installed on each computing device. It is in this way that it may be discovered which application routine s and or how may instances of each application routine are to be executed within each computing device. It is also in this way that the need to customize virtual environments and or to create a customized configuration script for each possible combination of routines that may be installed on a given computing device may be eliminated. Stated differently instead of a custom script file or other data structure having to be generated to indicate what routines are installed on a computing device a search is conducted for files or data structures specifying execution requisites to enable an automated determination to be made as to what routines are installed on that computing device.

The results of the tests and searches performed within each computing device may be combined to form a requisites database that indicates the requisites for each VM and or each instance of each application routine to be executed within each computing device. Among the requisites may be requisite pieces of information to be obtained from one or more resource devices and a query component of the configuration software may engage in communications with the one or more resource devices through a network to attempt to obtain those pieces of configuration information. After obtaining at least a subset of such pieces of configuration information from the one or more resource devices the query component may generate a configuration database of configuration information. A catalog generator may use the contents of the configuration database to generate a separate parameter catalog of configuration information for each computing device.

Among the pieces of configuration information in the configuration database that may be used in generating each catalog may be indications of dependencies among virtual environment routines and or the application routines as well as between one or more of those routines and one or more resource devices. Configuration information concerning such dependencies may indicate a need for an order of initialization of the various virtual environment routines and or the application routines to ensure that upon powering up and or resetting one or more of the computing devices VMs and or application routines one or more others of the VMs and or application routines are started and or restarted in an order that accommodates those dependencies.

Following the starting of the virtual environment routines and the application routines in accordance with the catalog s one or more of the tests and searches to obtain pieces of configuration information from which to form the requisites database the communications with the one or more resource devices the generation of the configuration database and the generation of the parameter catalogs may be repeated. In some embodiments such repetition may take place at the end of a repeating interval of time. Also following the start of execution of the virtual environment routines and the application routines the status of at least one or more of the application routines may be repeatedly checked to determine if restarting the execution of one or more of the application routines is necessary. In some embodiments such a check may be triggered within a computing device upon the provision of a new parameter catalog to that computing device. If an application routine is determined to be nonfunctional e.g. unresponsive or no longer being executed such that a restart of its execution is required then that application routine may be so restarted and that restart may trigger the restart of one or more other application routines due to dependencies thereamong. Further following the starting of the virtual environment routines and the application routines one or more of the application routines may monitor aspects of their own execution for indications of a change in a requisite to their own execution that necessitates being restarted. If an application routine determines that its execution needs to be restarted then again the restarting of execution of that application routine may trigger the restart of one or more other application routines due to dependencies thereamong.

With general reference to notations and nomenclature used herein portions of the detailed description that follows may be presented in terms of program procedures executed on a computer or network of computers. These procedural descriptions and representations are used by those skilled in the art to most effectively convey the substance of their work to others skilled in the art. A procedure is here and generally conceived to be a self consistent sequence of operations leading to a desired result. These operations are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical magnetic or optical communications capable of being stored transferred combined compared and otherwise manipulated. It proves convenient at times principally for reasons of common usage to refer to what is communicated as bits values elements symbols characters terms numbers or the like. It should be noted however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to those quantities.

Further these manipulations are often referred to in terms such as adding or comparing which are commonly associated with mental operations performed by a human operator. However no such capability of a human operator is necessary or desirable in most cases in any of the operations described herein that form part of one or more embodiments. Rather these operations are machine operations. Useful machines for performing operations of various embodiments include general purpose digital computers as selectively activated or configured by a computer program stored within that is written in accordance with the teachings herein and or include apparatus specially constructed for the required purpose. Various embodiments also relate to apparatus or systems for performing these operations. These apparatus may be specially constructed for the required purpose or may include a general purpose computer. The required structure for a variety of these machines will appear from the description given.

Reference is now made to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding thereof. It may be evident however that the novel embodiments can be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to facilitate a description thereof. The intention is to cover all modifications equivalents and alternatives within the scope of the claims.

The control device and or the one or more node devices may be provided with a combination of software and configuration data for providing virtual machine environment s and or executing the one or more application routines and or updates thereto in an application package via a network from the provisioning device . Alternatively or additionally the application package may be conveyed from the provisioning device to the control device and or the one or more node devices via non volatile removable storage media such as an optical disc or a solid state storage device.

Each of the one or more application routines may when executed provide any of a variety of online services including and not limited to online analytical processing OLAP statistical analysis of large quantities of data sometimes referred to as data mining of big data tracking of events in a manufacturing and or distribution process etc. One or more instances of one of the application routines executed within the control device and or one or more node devices may have requisites that include one or more resources provided by the control device one or more of the resource devices and or one or more of the node devices . Alternatively or additionally one or more instances of one or more application routines may have requisites that include a dependency on one or more instances of another of the application routines executed within another of the control device and or one or more of the node devices .

At a time prior to execution of the one or more application routines configuration software installed on the control device and the one or more node devices may identify and or exchange configuration information concerning the requisites of each application routine including dependencies between different ones of the application routines . Such configuration information may then be used cooperatively by the control device and or the one or more node devices to control the order in which VMs and or instance s of the application routines are started to accommodate such dependencies. Following starting of VMs and or the application routines such identification and or exchanges of configuration information may be repeated on a recurring basis. In some embodiments such recurrences may be scheduled to take place on a repeating interval of time. Checks of the status of each of the application routines may also be made on the same recurring basis and the execution of application routine may be restarted if found to be in a nonfunctional state. Further one or more of the application routines may trigger a restarting of its own execution in response to detecting a change in a resource on which it depends. Where one of the application routines is to be restarted the control device and or the one or more node devices may use the configuration information to cooperatively restart that application routine and one or more others of the application routines to again accommodate dependencies thereamong.

Each of the computing devices and may be any of a variety of types of computing device including without limitation a desktop computer system a data entry terminal a laptop computer a netbook computer a tablet computer a handheld personal data assistant a smartphone a digital camera a body worn computing device incorporated into clothing a computing device integrated into a vehicle e.g. a car a bicycle a wheelchair etc. a server a cluster of servers a server farm etc. Embodiments are not limited in this context.

As depicted and as will be discussed these computing devices and or may exchange communications in support of the execution of one or more application routines through the network . However one or more of the computing devices and or may exchange other data entirely unrelated to such execution with each other and or with still other computing devices not shown via the network . In various embodiments the network may be a single network that may extend within a single building or other relatively limited area a combination of connected networks that may extend a considerable distance and or may include the Internet. Thus the network may be based on any of a variety or combination of communications technologies by which communications may be effected including without limitation wired technologies employing electrically and or optically conductive cabling and wireless technologies employing infrared radio frequency or other forms of wireless transmission.

In various embodiments the control device may incorporate one or more of a processor component a storage and an interface to couple the control device to the network . The storage may store one or more of an environment component accompanied by environment parameters a control agent a requisites database a query component a configuration database a control master accompanied by control requisites data a control parameter catalog one or more of the application routines that may each be accompanied by its own application requisites data and one or more application parameter catalogs .

Correspondingly in various embodiments each of the node devices may incorporate one or more of a processor component a storage and an interface to couple each of the node devices to the network . The storage may store one or more of an environment component accompanied by environment parameters a control agent one or more of the application routines that may each be accompanied by its own application requisites data and one or more application parameter catalogs .

As previously discussed the control device and or the one or more node devices may be provided with VM environment routines and application routines via provision of the application package from the provisioning device . illustrates a block diagram of an example embodiment of the application package and of such provisioning via the network . As depicted the application package may include one or more of the environment component accompanied by the environment parameters the environment component accompanied by the environment parameters the control master accompanied by the control requisites data the one or more application routines accompanied by the application requisites data the control agents and and the query component . Returning to other data structures depicted as stored within the storage of the control device and the storage of the one or more node devices may be generated therein as will shortly be explained in greater detail and not supplied with the application package .

Within the control device each of the environment component the control agent the query component the control master and at least one of the one or more application routines may incorporate a sequence of instructions operative on the processor component to implement logic to perform various functions when executed by the processor component . Correspondingly within each of the one or more node devices each of the environment component the control agent and at least one of the one or more application routines may incorporate a sequence of instructions operative on the processor component to implement logic to perform various functions when executed by the processor component . As familiar to those skilled in the art in some embodiments the sequence of instructions of one or more application routines may need to be made operative on the processor component and or the processor component through the provision of one or more VMs that enable execution of instructions meant for the instruction set of processor component by another processor component with a different instruction set.

Similarly in executing the environment component the processor component of each of the node devices may be similarly caused to instantiate a corresponding VM in which VM management functions may be performed for VMs within that node device and one or more of the VMs . In instantiating the VMs and or the processor component may be caused to retrieve various parameters for doing so from the environment parameters including and not limited to quantity of VMs to instantiate amounts of addressable storage space to allocate to each VM amount of processing resources to provide each VM how to respond to error conditions occurring within a VM etc. Having instantiated the VMs and or further execution of the environment component may cause the processor component to perform various hypervisor functions in which the processor component recurringly monitors the state of each of these VMs and responds to various errors and or other conditions that may arise within each.

However the hypervisor functions performed by the processor component in executing the environment component within the VM of the control device may be more extensive than those performed by the processor component in executing the environment component within the corresponding VM of each of the node devices . More specifically the processor component may be caused to oversee the hypervisor functions performed by the processor component within each of the one or more node devices . Thus the parameters indicated within the environment parameters and employed by the processor component may differ from those indicated within the environment parameters and employed by the processor component . In some embodiments the environment components and or may for example each be software routines implementing hypervisor and related functions from VMware of Palo Alto Calif. However it is to be understood that what is described and claimed herein does not require and is not otherwise limited to the use of this particular software or any other particular software.

Following instantiation of the VMs and or the processor components and may be further caused by the environment components and to begin execution of the control agents and respectively. In executing the control agent the processor component may perform a search within the control device for the control requisites data and for any instance of the application requisites data . Similarly within each one of the one or more node devices in executing the control agent the processor component of that one of the one or more node devices may similarly perform a search within that one of the node devices for any instance of the application requisites data .

As previously discussed each instance of any of the application routines may be required to be accompanied by an instance of the application requisites data . Therefore each instance of the application requisites data that is found within the control device and or within one or more of the node devices may by the simple fact of having been found serve as an indication of an instance of an application routine having been installed therein. Thus the performance of searches for the control requisites data and or any instances of the application requisites data may provide an indication to the control agents and or of what routines e.g. the control master and or any instance of an application routine are installed within and are to be executed within the control device and or each one of the one or more node devices . Indeed such searches may provide an indication to the control agents and or of what routines are installed within each VM and or based on which VMs and or the control requisites data and or each instance of the application requisites data are found within.

As depicted there is a single control agent or within each VM such that there is one control agent within the control device and one instance of the control agent within each of the node devices. However it should be understood that this is one example allocation of control agents among the computing devices and in which there may be one or more VMs instantiated. In other embodiments the allocation of control agents may be such that there is a separate control agent within each VM and such that there may be more than one control agent within each of the computing devices and . Specifically in such other embodiments each VM may have its own instance of the control agent . Again however still other embodiments are possible in which no VMs may be instantiated. In such other embodiments there may again be only one control agent within the control device and again only one instance of the control agent within each of the node devices .

Upon finding the control requisites data and any instances of the application requisites data within the control device the control agent may retrieve indications of requisites for the execution of the control master from the control requisites data . The control agent may also retrieve indications of requisites for the execution of one or more instances of one or more of the application routines that are to be executed within the control device from those instances of the application requisites data found therein if any . Correspondingly within each one of the node devices upon finding any instances of the application requisites data therein the control agent may retrieve indications of requisites for the execution of one or more instances of one or more application routines that are to be executed within that one of the node devices from those instances of the application requisites data found therein. In some embodiments the control agents and or may each be an agent routine of for example the Puppet Enterprise software offered by Puppet Labs Inc. of Portland Oreg. However it is to be understood that what is described and claimed herein does not require and is not otherwise limited to the use of this particular software or any other particular software.

In some embodiments and as depicted with dotted lines the control requisites data may be embedded within or otherwise combined with the instructions of the control master and similarly the application requisites data for each of the one or more application routines may be embedded within or otherwise combined with the instructions of its corresponding one of the application routines . This may be deemed desirable as an approach to ensuring that indications of the requisites for execution of the control master and or of each of the one or more application routines are always conveyed with those routines instead of becoming separated therefrom in storage. However in other embodiments the control requisites data and or the application requisites data for each of the one or more application routines may be implemented as a separate data file or other data structure within which the various execution requisites may be indicated in any of a variety of ways. By way of example the various indications of requisites within the control requisites data and or each such instance of the application requisites data may be expressed in for example YAML initials for either Yet Another Markup Language or YAML Ain t Markup Language promulgated by three individual programmers Oren Ben Kiki Clark Evans and Ingy dot Net. However it is to be understood that what is described and claimed herein does not require and is not otherwise limited to the use of this particular language or any other particular language.

The requisites for execution of the control master indicated within the control requisites data and or for execution of each instance of the one or more application routines indicated within corresponding ones of the application requisites data may include any of a variety of resources required of the hardware of the computing devices and or of the VMs and or and or of one or more of the resource device . The resources indicated as required from the hardware of the computing devices and or may include particular types and or quantities of the processor components and or particular minimum quantities of storage space within the storages and or etc. Also the resources indicated as required from the VMs and or may include emulations of particular hardware components provision of particular application programming interfaces APIs provision of particular levels of permission to access ranges of addresses and or interfaces to networks etc. Further the resources indicated as required may include requisite pieces of configuration information needed to access and or make use of resources provided by the one or more resource devices . Still further the resources indicated in various ones of the application requisites data as required by one or more of the application routines may include pieces of data callable functions and or other resources provided by one or more others of the application routines such that there may be dependencies among different ones of the application routines .

In addition to performing searches for and retrieving indications of requisites from the control requisites data and instances of the application requisites data the processor components and may be further caused by execution of the control agents and to perform various tests to determine what resources are available within the control device and each of the node devices respectively. Such tests may determine type and or versions of each of the processor components and or version levels of firmware of the computing devices and or type and or versions of the network interfaces and or see quantities of available storage space within the storages and or etc.

Following the performances of such tests and or the retrieval of indications of requisites of the control master from the control requisites data and or of each instance of the one or more application routines from corresponding ones of the application requisites data the control agents and may cooperate to combine indications of what resources were found in the tests and indications of such requisites to generate the requisites database . Thus the requisites database may become a single data structure made up of indications of requisites for at least the control master and all of the application routines as well as what resources are provided by the control device and or each of the one or more node devices that may satisfy at least a subset of the requisites. For sake of efficiency in so creating the requisites database redundant indications of provided resources and or of requisites may be eliminated.

Following generation of the requisites database the query component may retrieve indications of requisite pieces of configuration information that need to be provided by the one or more resource devices see from the requisites database . The query component may then communicate with the one or more resource devices via the network to retrieve those pieces of configuration information therefrom. However as recognizable to those skilled in the art there may be instances in which such communications may be unsuccessful such that not all of the requisite pieces of configuration information are so retrieved. To address this indications retrieved from the control requisites data and or the application requisites data of requisite pieces of configuration information required from the one or more resource devices may be accompanied by indications of default pieces of configuration information to be used in instances where those pieces of configuration information cannot be retrieved.

The query component may use the pieces of configuration information retrieved from the one or more resource devices and or such default pieces of configuration information where necessary along with indications of configuration information within the requisites database from the earlier searches and tests to generate the configuration database . Thus the configuration database may include indications of much of the same information as in the requisites database but augmented with pieces of configuration information retrieved from the one or more resource devices .

In some embodiments the control requisites data instances of the application requisites data the requisites database and or the configuration database may be implemented as substantially similar types of files or data structures. As a result the generation of the requisites database from the control requisites data and or the application requisites data and or the generation of the configuration database from the requisites database may entail editing to add and or change indications of requisites including configuration information already known and or to be provided by the one or more resource devices . By way of example the indications of requisites and or of resourced found to be provided may be expressed in YAML within each of the control requisites data the instances of the application requisites data the requisites database and or the configuration database such that the configuration database may be generated by editing the YAML expressions of the requisites database and or the requisites database may be generated by combining YAML expressions from the control requisites data and the instances of the application requisites data .

Regardless of the format used in the configuration database the control master may use the indications of configuration information therein to generate the control parameter catalog for the control device . The control parameter catalog may include configuration information retrieved from the configuration database for controlling the operation of the control master itself. The control master may also use the indications of configuration information in the configuration database to generate an instance of the application parameter catalog for the control device in embodiments in which at least one instance of an application routine is to be executed within the control device . Such an instance of the application parameter catalog may include configuration information retrieved from the configuration database for controlling the operation of all instances of any application routine that is to be executed within the control device .

Similarly the control master may also use the indications of configuration information in the configuration database to generate an instance of the application parameter catalog for each of the one or more node devices . Like the instance of the application parameter catalog that may be generated for the control device each instance of the application parameter catalog generated for one of the node devices may include configuration information retrieved from the configuration database for controlling the operation of all instances of any application routine that is to be executed within that node device . The control master may then transmit each such instance of the application parameter catalog to its corresponding node device . In some embodiments the control master may transmit an indication of the availability of the instance s of the parameter catalog to the one or more node devices thereby enabling the control agent s to each request its corresponding instance of the application catalog from the control master as a trigger for the control master to thereby so transmit the instance s of the application parameter catalog . Thus generation of the control parameter catalog and all instances of the application parameter catalog may be centralized with the control master .

However in other embodiments generation of at least the instances of the application parameter catalog may be distributed across the control device in embodiments in which the one or more application routines are executed within the control device and or the one or more node devices . More specifically the configuration database may be distributed by the processor component from the control device to the one or more node devices . The control agent may use the indications of configuration information in the configuration database to generate at least the control parameter catalog . The control agent may also use the indications of configuration information in the configuration database to generate an instance of the application parameter catalog for the control device in embodiments in which at least one instance of an application routine is to be executed within the control device . Correspondingly within each one of the one or more node devices the control agent may use the indications of configuration information in the configuration database to generate an instance of the application parameters catalog for use within that one of the node devices . Again for each one of the one or more node devices the instance of the application parameter catalog generated within that one of the node devices may include configuration information retrieved from the configuration database for controlling the operation of all instances of any application routine that is to be executed within that one of the one or more node devices .

Regardless of the exact manner in which each instance of the application parameter catalog is generated and or provided to a corresponding one of the node devices each of those instances may list all instances of all application routines to be executed among the control device and or any of the one or more node devices . In so listing all instances of all application routines to be executed each instance of the application parameter catalog may indicate which ones of those instances of those application routines are to be executed within the computing device or for which that instance of the application parameter catalog was generated. Also each instance of the application parameter catalog may include the configuration information from the configuration database that applies to the instances of the application routine s that are to be executed within the computing device or for which that instance of the application parameter catalog was generated including indications of dependencies by any of those application routines on other s of the application routines whether they are executed within that same computing device or or are executed within others of the computing devices and or .

Within the control device the control master may use the configuration information within the control parameter catalog to prepare to cooperate with each of the control agents and or to oversee the execution of at least the instances of the one or more application routines within the control device and or the one or more node devices . Within the control device and or each of the one or more node devices the control agent may use the configuration information within its corresponding instance of the application parameter catalog to control the start of execution of any instance of one or more of the application routines within that one of the computing devices or . More specifically the control master and the control agents of each of the computing devices or may each refrain from enabling the execution of instance s of application routine s to start until at least the control master and or the control agents are provided with corresponding ones of the control parameter catalogs and or . Once the parameter catalogs and are so provided then the control agents and may cooperate through the control master to cause the instances of the application routines to be started in an order that is based on the indications of dependencies indicated in the instances of the application parameter catalogs provided to the control agent and or corresponding ones of the control agents .

For example where one application routine to be executed in one of the node devices is not indicated in an instance of a parameter catalog provided to the control agent of that node device as having any dependencies on any other application routine then that control agent may enable execution of all instances of that one application routine within that node device to start without waiting for an indication relayed through the control master of any of instance of any other application routine having been started. Further upon starting execution of those instances of that application routine that control agent may transmit an indication to the control master within the control device of the start of execution of those instances of that one application routine . The control master may relay that indication of the start of execution of those instances of that one application routine to the control agent of the control device and or the control agents of others of the node devices to enable those other control agents and or to start execution of other application routine s that may have a dependency on the instances of the one application routine which has already been started. Stated differently as each instance of each application routine is started an indication is relayed to the control master for distribution among the computing devices and or to enable other s of the application routines that have a dependency on that instance of that application routine to also be started.

As the control master is started the control master may retrieve one or more pieces of configuration information provided to enable its execution in the control parameter catalog . In some embodiments such configuration information may include indications of what instances of which application routines are to be executed within each computing device and or . Such configuration information may also include a listing of the all of the control agents and or with which the control master is to interact. Correspondingly as each instance of each application routine is started the control agent or the instance of the control agent involved in that start of that instance of that application routine may provide that instance of that application routine with one or more pieces of configuration information from a corresponding one of the application parameter catalog to enable its execution.

Following commencement of execution of the various instances of the one or more application routines that may occur within the control device and or one or more node devices the aforedescribed approach to discovering requisites for the execution of the application routines and for generating the parameter catalogs and or to provide configuration information based on those requisites may be repeated on a recurring basis. Again such repetition may be scheduled to occur at a recurring interval of time. Alternatively or additionally such repetition may be triggered manually by personnel overseeing the operation of the online services system . More specifically the control agents and or may repeat the tests and or searches for the control requisites data and any instances of the application requisites data as part of an approach to accepting changes in configuration information. It should be noted that regardless of whether the requisites uncovered in a repetition of the tests and or searches differ from the requisites previously uncovered by such testing and or searches the control agents and or may repeat the generation of the requisites database .

Where the requisites database includes indications of pieces of configuration information that need to be provided by the one or more resource devices the query component may again attempt to communicate with the one or more resource devices to retrieve such configuration information. Regardless of whether there is configuration information that needs to be provided by the one or more resource devices the query component may then generate a new version of the configuration database . Following generation of the new version of the configuration database the control master or the control agents and or may generate new versions of the control parameter catalog and or one or more instances of the application parameter catalog regardless of whether there is actually a change in the configuration information in the new version of the configuration database from the previous version of the configuration database or not.

In response to being provided with new versions of the parameter catalogs and or the control agents and or respectively may perform a status check of whether each instance of each application routine indicated therein as being executed on a particular one of the computing devices or is actually currently being so executed. Where a new application routine has been added to those that are to be executed on a particular one of the computing devices or a corresponding one of the control agents or may enable the start of execution of that new application routine . Where execution of an application routine was earlier started within a particular one of the computing devices or but is found to have become in some way nonfunctional e.g. has become unresponsive or has ceased to be executed due to an error a corresponding one of the control agents or within that computing device may restart execution of that nonfunctional application routine .

In embodiments in which there are dependencies among instances of application routines or among two or more different application routines the control agents and or may act to ensure that those dependencies are accommodated as part of starting execution of a new application routine and or restarting a nonfunctional application routine . Specifically as each of the control agents and or checks the status of execution of each of the application routines within its corresponding one of the computing devices or that one of the control agents and or may provide an indication to the control master of application routine s that are still being executed e.g. still running . Such indications may then be relayed by the control master to others of the control agents and or within others of the computing devices and or respectively. However where one of the control agents or has found that an application routine that was previously started is found to be nonfunctional then that one of the control agents or may await the receipt through the control master of indications that any application routine executed in another of the computing devices or and on which the nonfunctional application routine depends is still running has been started or has been restarted before enabling a restart of the execution of the nonfunctional application routine . Further one of the control agents or has found that a new application routine is to be executed within the corresponding one of the computing devices or respectively then that one of the control agents or may await the receipt of indications that any application routine executed in another of the computing devices or and on which the new application routine depends is still running has been started or has been restarted before enabling the start of execution of the new application routine .

It is the use of searches for information concerning requisites of one or more application routines within the control device and or the one or more node devices that may allow the configuration of each instance of each of the one or more application routines to be dynamic. Alternatively or additionally it may be the repetition of such searches for configuration information required for the execution of the one or more application routines coupled with the repeated re generation of the parameter catalogs and therefrom that may allow the configuration of each instance of each of the one or more application routines to be dynamic. More simply the configuration information required by each instance of each application routine is made more easily changeable in response to changes in computing devices e.g. upgrades or updates changes to resources provided by computing devices access and or changes in dependencies between application routines .

Returning to in various embodiments each of the processor components and may include any of a wide variety of commercially available processors. Further one or more of these processor components may include multiple processors a multi threaded processor a multi core processor whether the multiple cores coexist on the same or separate dies and or a multi processor architecture of some other variety by which multiple physically separate processors are linked.

As depicted in the application routines and may have earlier been loaded into the node device for execution within separate VMs and respectively that may be provided by the environment component from within a VM of the node device . Also the application routines and may have earlier been loaded into the node device for execution within separate VMs and respectively that may be provided by the environment component from within a VM of the node device . Again in embodiments in which one or more of the application routines are executed within a VM the corresponding instance of the environment component may retrieve parameters for providing that VM from a corresponding instance of the environment parameters . However it should again be noted that embodiments are possible in which no VMs are used. As also depicted each of the application routines may be accompanied by corresponding ones of the application requisites data that include indications of requisites for the execution of each of the application routines including any dependencies on resources from one or more others of the application routines 

Turning to upon powering up and or resetting of each of the node devices and the instances of the environment component within each of these node devices may instantiate a VM and corresponding ones of the VMs in embodiments in which VMs are employed. The environment components within each of the node devices and may also provide an indication to a start component of corresponding ones of the control agents and of the instantiation of these VMs such that each of the control agents and may proceed with enabling the start of execution of application routines. Similarly upon powering up and or resetting of the control device the environment component thereof may instantiate at least a VM in embodiments in which VMs are employed. The environment component may also provide an indication to a start component of the control agent of the instantiation of at least the VM such that the control agent may proceed within enabling the start of execution of the control master .

As part of enabling the execution of application routines the control agents and may perform various tests to determine what resources are provided by the node devices and respectively and may search for instances of application requisites data. More specifically a discovery component of the control agent may perform such a search and may locate the application requisites data and . As previously discussed the fact of locating an instance of application requisites data for an application routine may serve as the indication of that application routine having been loaded for execution within a particular computing device and may further serve as the indication of that application routine having been loaded for execution within a particular VM in embodiments in which VMs are employed. Thus the locating of the application requisites data and within the node device may serve as the indication that the application routines and are loaded within the node device for execution therein. Further in embodiments in which VMs are employed the locating of the application requisites data and within the VMs and e.g. within addressable space allocated to the VMs and may serve as the indication that the application routines and are loaded within the node device for execution within the VMs and respectively. Similarly in embodiments in which VMs are employed the locating of the application requisites data and within the node device may serve as the indication that the application routines and are loaded within the node device for execution therein. Further the locating of the application requisites data and within the VMs and e.g. within addressable space allocated to the VMs and may serve as the indication that the application routines and are loaded within the node device for execution within the VMs and respectively.

Upon locating the application requisites data and the discovery component of the control agent may retrieve indications of the requisites for executing the application routines and respectively therefrom. Within the application requisites data may be an indication of the dependency of the application routine on at least one resource from the application routine . Similarly upon locating the application requisites data and the discovery component of the control agent may retrieve indications of the requisites for executing the application routines and respectively therefrom. Within the application requisites data may be an indication of the dependency of the application routine on at least one resource from the application routine and within the application requisites data may be an indication of the dependency of the application routine on at least one resource from the application routine

Correspondingly as part of enabling the execution of the control master a discovery component of the control agent may perform various tests to determine what resources are provided by the control device and may search for the control requisites data . In embodiments in which one or more application routines may also be executed within the control device the discovery component of the control agent may also search for instances of application requisites data corresponding to such application routine s . Upon locating the control requisites data the discovery component of the control agent may retrieve indications of the requisites for executing the control master .

With requisites for the execution of the control master retrieved from the control requisites data by the discovery component and with the requisites for execution of the application routines retrieved from the application requisites data by corresponding instances of the discovery component the discovery components and may cooperate to generate the requisites database . More specifically the discovery component may initially generate the requisites database to include indications of requisites for the execution of at least the control master and each of the instances of the discovery components may augment the requisites database with indications of requisites for the execution of each of the application routines 

Turning to as has been discussed among the requisites for execution of the control master and or one or more application routines e.g. the application routines may be requisites for pieces of configuration information to be provided by one or more of the resource devices . If such pieces of information are so required then the query component may operate the network interface of the control device to communicate with one or more of the resource devices via the network to obtain such requisite piece s of configuration information. The query component may then add the pieces of configuration information received from one or more of the resource devices or default values to be used in place of any of such configuration information not so received to the indications of configuration in the requisites database that are already known to generate the configuration database .

More broadly in generating the configuration database indications of resources provided by one or more of the computing devices and or as well as resources provided by one or more of the VMs and or may be matched to indications of resources needed requisites for the execution of the control master and or the application routines . As a result the configuration database may include pointers or other form of references to various resources required by one or more of the control master and or the application routines thereby enabling each to retrieve those resources. By way of example an indication of a callable library needed by one of the application routines may be matched to a pointer to such a library provided within the VM of the one of the nodes in which that one of the application routines is to be executed.

Within the configuration database may also be formed a single indication or data structure or combination of indications or data structures of the dependencies that may exist among the application routines . Alternatively either in lieu of or in addition to such a centralized indication of all of such dependencies a indication may be provided in the configuration data of an order in which the application routines are to be started and or restarted to ensure that any dependencies thereamong are addressed.

Following generation of the configuration database a catalog generator of the control master may generate individual parameter catalogs for each of the computing devices and of the analysis system . More specifically the catalog generator may generate the control parameter catalog which may include configuration information from the configuration database that is required for the execution of the control master . The catalog generator may also generate application parameter catalogs and each of which may include configuration information from the configuration database that is required for the execution of corresponding ones of the application routines within corresponding ones of the node devices and

Each of the application parameter catalogs may include a listing of any instance of each of the application routines to be executed along with indications of which of the node devices or that each is to be executed within. Within such a listing may be indications of dependencies among the application routines . By way of example within the application parameter catalog generated for the node device all of the application routines may be listed despite the fact that neither of the application routines or are to be executed within the node device . For each of the application routines and which are to be executed within the node device the application parameter catalog may include indications of configuration information including indications of any dependencies on any others of the application routines regardless of where those others of the application routines are to be executed. Thus within the application parameter catalog the application routine may be indicated as having no dependencies on any other of the application routines while the application routine may be indicated as having a dependency on at least one resource from the application routine which is to be executed within the node device . Correspondingly within the application parameter catalog generated for the node device the application routine which is to be executed within the node device may be indicated as having a dependency on at least one resource from the application routine which is also to be executed within the node device and the application routine may be indicated as having a dependency on at least one resource from the application routine which is to be executed within the node device .

Turning to following generation of the application parameter catalogs and a provisioning component of the control master may transmit the application parameter catalog to the node device and may transmit the application parameter catalog to the node device . In some embodiments the provisioning component may transmit an indication of the availability of the application catalogs and or to control agents and or respectively and may then so transmit the application catalogs and or . In other embodiments the application catalogs and or may be so transmitted in response to requests for parameter catalogs received by the provisioning component from the control agents and or . Within each of the node devices and the environment components may employ one or more of the pieces of configuration information provided within the application parameter catalogs and respectively in configuring corresponding ones of the VMs to support the execution of corresponding ones of the application routines 

Prior to such receipt of the application parameter catalogs and the start components of the control agents and respectively may refrain from enabling the execution of any of the application routines to be started. However upon receipt of the application parameter catalogs and the start components of the control agents and may employ the indications of dependencies and or of starting order of the application routines within the application parameter catalogs and respectively to coordinate the start of execution of the application routines through the control master .

More specifically prior to receiving the application parameter catalog the start component of the control agent may refrain from enabling execution of either of the application routines or to be started by the processor component of the node device . However upon receiving the application parameter catalog and upon retrieving an indication therefrom that the application routine is not in any way dependent on any of the other application routines the start component of the control agent may enable execution of the application routine by the processor component of the node device to start. In contrast upon retrieving an indication from the application parameter catalog that the application routine is dependent upon at least one resource from the application routine the start component of the control agent may continue to refrain from enabling execution of the application routine from starting even as the application routine is started. Correspondingly prior to receiving the application parameter catalog the start component of the control agent may refrain from enabling execution of either of the application routines or to be started by the processor component of the node device . Further upon receiving the application parameter catalog and upon retrieving an indication therefrom that the application routine is dependent on the application routine and that the application routine is dependent on the application routine the start component of the control agent may continue to refrain from enabling execution of either of the application routines or from starting.

Turning to indications of events such as the starting or restarting of execution of one of the application routines may be relayed between the node devices through the control master . More specifically a status component of the control agent may transmit an indication to a coordinating component of the control master that execution of the application routine has been started within the node device . The coordinating component may then relay that indication to the control agent within the node device

In response to the receipt of the indication that the application routine has been started and as a result of the dependency of the application routine on the application routine the start component of the control agent may enable the start of execution of the application routine by the processor component of the node device . With the start of execution of the application routine a status component of the control agent may transmit an indication to the coordinating component of the control master that execution of the application routine has been started within the node device . In turn the coordinating component may then relay that indication to the control agent within the node device . However since neither of the application routines or are dependent on the application routine the start component of the control agent may take no action in response to the received indication of the start of execution of the application routine

However with execution of the application routine now started and as a result of the dependency of the application routine on the application routine the start component of the control agent may then also enable the start of execution of the application routine by the processor component of the node device . With the start of execution of the application routine the status component of the control agent may transmit an indication to the coordinating component of the control master that execution of the application routine has been started within the node device . In turn the coordinating component may then relay that indication to the control agent within the node device

In response to the receipt of the indication that the application routine has been started and as a result of the dependency of the application routine on the application routine the start component of the control agent may enable the start of execution of the application routine by the processor component of the node device . With the start of execution of the application routine the status component of the control agent may transmit an indication to the coordinating component of the control master that execution of the application routine has been started within the node device . In turn the coordinating component may then relay that indication to the control agent within the node device . However since neither of the application routines or are dependent on the application routine the start component of the control agent may take no action in response to the received indication of the start of execution of the application routine

Thus through the indications of dependencies and or of starting order of the application routines indicated within each of the application parameter catalogs and and through such exchanges of indications of when each of the application routines have been started the control agents and are able to coordinate the start of execution of the application routines through the control master in an order that addresses the dependencies among them. Following such starting of execution of the application routines the control agents and may continue to coordinate through the control master to handle instances in which an event associated with one of the application routines necessitates the restarting of one or more others of the application routines 

More specifically and as an example if an event occurs that in some way affects the execution of application routine including events that entail restarting execution of application routine then the control agents and may coordinate through the control master to effect restarting execution of the application routines and based on the dependency of the application routine on the application routine and the dependency of the application routine on the application routine . For instance the application routine may detect a change in a resource on which it depends that necessitates a restart of execution of the application routine and the application routine may provide an indication of the need to be so restarted to the start component of the control agent . In response to such an indication the start component of the control agent may restart the execution of the application routine . In response to the restarting of the application routine the status component of the control agent may transmit an indication of the restarting of the application routine to the coordinating component . The coordinating component may then relay that indication to the control agent of the node device however as neither of the application routines or is dependent on the application routine the start component of the control agent may take no action in response to such an indication concerning the application routine

However as a result of the restarting of the application routine and as a result of the dependency of the application routine on the application routine the start component of the control agent may also restart the application routine . In response to the restarting of the application routine the status component of the control agent may transmit an indication of the restarting of the application routine to the coordinating component which in turn may relay that indication to the control agent of the node device . While the start component of the control agent may have taken no action in response to the restarting of the application routine the dependency of the application routine on the application routine may result in the start component of the control agent restarting the application routine . In response to the restarting of the application routine the status component of the control agent may transmit an indication to the coordinating component of the control master that execution of the application routine has been restarted within the node device . In turn the coordinating component may then relay that indication to the control agent within the node device . However since neither of the application routines or are dependent on the application routine the start component of the control agent may take no action in response to the received indication of the restarting of execution of the application routine

Throughout this series of restarts of the application routines the application routine may be not be restarted. More precisely neither the indications of the restarting of the application routines or received through the coordinating component nor the restarting of the application routine within the node device may trigger the start component of the control agent to effect a restart of the application routine . This may arise from the lack of dependency by the application routine on any of the application routines such that there may be no need to restart the application routine

Also following the start of execution of the application routines and as previously discussed the discovery of requisites for the execution of the application routines and the generation of the requisites database the configuration database and the parameter catalogs and may be repeated on a recurring basis e.g. scheduled to occur at an interval of time or may be manually triggered to be repeated. More specifically and regardless of the manner in which it is triggered the discovery components and may repeat their various tests and or searches for requisites data and may cooperate to again generate the requisites database as described earlier with regard to . The query component may then use this new version of the requisites database as a basis for new communications with the one or more resource devices to obtain any needed configuration information and or to again generate the configuration database . The catalog generator of the control master may then use this new version of the configuration database to generate corresponding new versions of each of the control parameter catalog and the application parameter catalogs and as described earlier with regard to .

Following generation of the new versions of each of the parameter catalogs and the provisioning component of the control master may again transmit the application parameter catalog to the node device and may again transmit the application parameter catalog to the node device as described earlier with regard to . However instead of the control agents and employing these new versions of the application parameter catalogs and respectively to coordinate the start of execution of corresponding ones of the application routines the control agents and may employ the new versions of the application parameter catalogs and respectively to check the status of execution of corresponding ones of the application routines 

More precisely the status component of the control agent may retrieve indications of what application routines are to be executed within the node device from the new version of the application parameter catalog and may determine that the application routines and are still to be executed within the node device . In response the status component of the control agent may check the status of each of the application routines and . Presuming that both of the application routines and are still being executed by the processor component of the node device the status component of the control agent may transmit an indication to that effect to the control master within the control device . In turn the control master may relay that indication of both of the application routines and still being executed to the control agent within the node device . Correspondingly the status component of the control agent may retrieve indications of what application routines are to be executed within the node device from the new version of the application parameter catalog and may determine that the application routines and are still to be executed within the node device . In response the status component of the control agent may check the status of each of the application routines and . Presuming that both of the application routines and are still being executed by the processor component of the node device the status component of the control agent may transmit an indication to that effect to the control master within the control device . In turn the control master may relay that indication of both of the application routines and still being executed to the control agent within the node device

Presuming that all of the application routines are still executed within corresponding ones of the node devices such exchanged indications to the effect that each of the application routines is still being so executed may not be acted upon within either of the node devices or . However if for instance the status component of the control agent discovers that the application routine is in some way nonfunctional e.g. has become unresponsive despite still being executed or is no longer being executed as a result of an error or other condition such that execution of the application routine needs to be restarted then exchanges of indications that the other application routines and or are still running may be put to use in one or both of the node devices 

More specifically due to the indication in the new version of the application parameter catalog of the dependency by the application routine on a resource provided by the application routine executed within the node device the start component of the control agent may refrain from restarting execution of the application routine until the control agent is provided with an indication of the application routine as still being executed or as having its execution restarted. Presuming that the application routine was determined by the status component of the control agent to be in the state of still being executed the status component of the control agent may transmit an indication to that effect to the control master within the control device and the control master may then relay that indication to the control agent within the node device . Upon receipt of that indication the start component of the control agent may then restart the execution of the application routine by the processor component of the node device . Further in response to the restarting of the application routine the status component of the control agent may transmit an indication of the restarting of the application routine to the control master within the control device which may in turn relay that indication to the control agent within the node device . As before with neither of the application routines or having a dependency on a resource provided by the application routine this indication may not be acted upon within the node device

However as before the restarting of execution of the application routine may trigger the start component of the control agent to also restart the application routine due to its dependency on at least one resource provided by the application routine . Also such restarting of the application routine may trigger the status component of the control agent to transmit an indication of the restarting of the application routine to the control master which may in turn relay that indication to the control agent within the node device . Due to the dependency of the application routine on at least one resource provided by the application routine the indication of the application routine having been restarted may trigger the start component of the control agent to restart the execution of the application routine . Further such restarting of the application routine may trigger the status component of the control agent to transmit an indication of the restarting of the application routine to the control master which may in turn relay that indication to the control agent within the node device . However due to the lack of dependency by either of the application routines or on the application routine the start component of the control agent may take no action in response to the indication of the restarting of the application routine

Returning to in various embodiments each of the processor components and may include any of a wide variety of commercially available processors. Further one or more of these processor components may include multiple processors a multi threaded processor a multi core processor whether the multiple cores coexist on the same or separate dies and or a multi processor architecture of some other variety by which multiple physically separate processors are linked.

In various embodiments each of the storages and may be based on any of a wide variety of information storage technologies including volatile technologies requiring the uninterrupted provision of electric power and or including technologies entailing the use of machine readable storage media that may or may not be removable. Thus each of these storages may include any of a wide variety of types or combination of types of storage component including without limitation read only memory ROM random access memory RAM dynamic RAM DRAM Double Data Rate DRAM DDR DRAM synchronous DRAM SDRAM static RAM SRAM programmable ROM PROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory polymer memory e.g. ferroelectric polymer memory ovonic memory phase change or ferroelectric memory silicon oxide nitride oxide silicon SONOS memory magnetic or optical cards one or more individual ferromagnetic disk drives or a plurality of storage components organized into one or more arrays e.g. multiple ferromagnetic disk drives organized into a Redundant Array of Independent Disks array or RAID array . It should be noted that although each of these storages is depicted as a single block one or more of these may include multiple storage components that may be based on differing storage technologies. Thus for example one or more of each of these depicted storages may represent a combination of an optical drive or flash memory card reader by which programs and or data may be stored and conveyed on some form of machine readable storage media a ferromagnetic disk drive to store programs and or data locally for a relatively extended period and one or more volatile solid state memory devices enabling relatively quick access to programs and or data e.g. SRAM or DRAM . It should also be noted that each of these storages may be made up of multiple storage components based on identical storage technology but which may be maintained separately as a result of specialization in use e.g. some DRAM devices employed as a main storage while other DRAM devices employed as a distinct frame buffer of a graphics controller .

In various embodiments each of the interfaces and may employ any of a wide variety of communications technologies enabling these computing devices to be coupled to other devices as has been described. Each of these interfaces includes circuitry providing at least some of the requisite functionality to enable such coupling. However each of these interfaces may also be at least partially implemented with sequences of instructions executed by corresponding ones of the processor components e.g. to implement a protocol stack or other features . Where electrically and or optically conductive cabling is employed these interfaces may employ timings and or protocols conforming to any of a variety of industry standards including without limitation RS 232C RS 422 USB Ethernet IEEE 802.3 or IEEE 1394. Where the use of wireless transmissions is entailed these interfaces may employ timings and or protocols conforming to any of a variety of industry standards including without limitation IEEE 802.11a 802.11b 802.11g 802.16 802.20 commonly referred to as Mobile Broadband Wireless Access Bluetooth ZigBee or a cellular radiotelephone service such as GSM with General Packet Radio Service GSM GPRS CDMA 1xRTT Enhanced Data Rates for Global Evolution EDGE Evolution Data Only Optimized EV DO Evolution For Data and Voice EV DV High Speed Downlink Packet Access HSDPA High Speed Uplink Packet Access HSUPA 4G LTE etc.

At a processor component of a control device e.g. the processor component of the control device may receive indications from one or more node devices e.g. one or more of the node devices of which one s of the one or more node devices are to execute various application routines e.g. one or more of the application routines . Along with those indications the processor component may also receive indications of requisites for the execution of each of those various application routines from the one or more node devices. As has been discussed among the requisites of an application routine may be a resource required of another application routine such that there may be a dependency by the one application routine on the other application routine. Further the processor component may additionally receive indications from the one or more node devices of resources provided within each of those one or more node devices. Alternatively or additionally the processor component may communicate with and receive indications from one or more resource devices e.g. the one or more resource devices of resources available therefrom.

At based at least on one or more of the aforementioned received indications the processor component may generate a database e.g. the requisites database and or the configuration database of the application routines to be executed the requisites of those application routines and or the resources available from each device to supply those requisites. As has been discussed such a database may include indications of requisites of one application routine by another such that the database includes indications of dependencies between those application routines.

At the processor component may generate separate parameter catalogs e.g. the control parameter catalog and or one or more instances of the application parameter catalog for at least each device that is to execute an application routine e.g. the control device and or one or more of the node devices from the database. As has been discussed each of those parameter catalogs may include configuration information for the particular one s of the application routines to be executed within the particular device for which it is generated including indications of any dependencies on another application routine. At the processor component may transmit one or more of those parameter catalogs to the particular node device s the one or more parameter catalogs were generated.

Following such generation and transmission of the parameter catalogs the processor component may receive indications from one or more node devices of the starting of application routines. At in support of coordinating the start of the application routines in an order that accommodates dependencies that may exist among the application routines the processor component may relay retransmit those indications to other s of the one or more node devices.

At a processor component of a node device e.g. the processor component of one of the one or more node devices may perform various searches within the node device to identify what application routines e.g. which of one or more application routines are to be executed within the node device and what are the requisites for each of those application routines. The processor component may also perform various tests to determine the resources provided by the node device for the execution of application routines e.g. the environment component to provide a VM in an embodiment in which VMs are used .

At the processor component may transmit indications of what application routines are to be executed within the node device the requisites of each of those application routines and or what resources the node device provides to support the execution of application routines to a control master of a control device e.g. the control master of the control device with which the node device cooperates to execute application routines. Among the indications of requisites provided to the control device may be indications of dependencies by one application routine on a resource provided by another application routine including in situations where the other application routine may be executed by a different device.

At a parameter catalog may be received by the processor component of the node device from the control master of the control device. Among the configuration information within the parameter catalog may be indications of dependencies by one application routine on a resource provided by another. As has been discussed the transmission of parameter catalogs by the control master of the control device to one or more node devices may follow an exchange of indications in which the control device first transmits an indication of the availability of the parameter catalogs to the one or more node devices then awaits request s transmitted by the one or more node devices for their corresponding one s of the parameter catalogs before transmitting the parameter catalog s to the one or more nodes.

At the processor component may check whether an application routine to be executed by the processor component within the node device has a dependency on a resource from another application routine executed by another device. If not then the processor component may commence execution of that application routine at . In so doing the processor component may retrieve configuration information needed by that application routine from the parameter catalog and provide that configuration information to the application routine. However if at the application routine does have a dependency on a resource provided by another application routine executed by another device then the processor component may await receipt of an indication that execution of that other application routine has been started at before commencing execution of the application routine at .

At the processor component may transmit an indication to the control device of the start of execution of the application routine within the node device. As has been discussed the control device may relay such indications of the start of execution of application routines transmitted by one node device to one or more other node devices.

At a processor component of a node device e.g. the processor component of one of the one or more node devices may during its execution of an application routine e.g. one of the application routines detect that there has been a change in a resource on which the application routine depends that necessitates a restarting of execution of the application routine. As has been discussed such a resource may be any of a variety of pieces of information services etc. that may be provided by another application routine a VM environment and or by another device e.g. one or more of the resource devices .

At the processor component may restart execution of the application routine within the node device. At the processor component may transmit an indication to a control master of a control device e.g. the control master of the control device that execution of the application routine has been restarted. As has been discussed such indications of the start restart or of continuing execution of application routines transmitted by one node device may be relayed by the control device to one or more other node devices.

At a processor component of a node device e.g. the processor component of one of the one or more node devices may receive an indication of an application routine executed by another device having been restarted. At in response to the trigger the processor component may check whether any application routines executed within the node device has a dependency on a resource from that application routine for which execution has been restarted on that other device. If not then the processor component may take no further action in response to the received indication of the restarting of that application routine within that other device.

However if at there is an application routine executed within the node device that does have a dependency on a resource provided by that application routine that has been restarted within that other device then the processor component may restart the execution of the application within the node device that has that dependency at . At the processor component may transmit an indication to the control device of the restart of execution of the application routine within the node device that has that dependency.

At a processor component of a control device e.g. the processor component of the control device may await the passage of a predetermined interval of time. As has been discussed the discovery of configuration information and the generation of databases and catalogs of configuration information may be repeated on a recurring basis and that recurring basis may be repetition at a recurring interval of time.

At following passage of that interval of time the processor component may transmit a command a request or other form of trigger to one or more node devices e.g. one or more of the node devices to once again provide the control device with indications of which one s of the one or more node devices are to execute various application routines e.g. one or more of the application routines . Along with those indications the one or more node devices may also be triggered to provide indications of requisites for the execution of each of those various application routines. Again among the requisites of an application routine may be a resource required of another application routine such that there may be a dependency by the one application routine on the other application routine. Further the one or more node devices may be triggered to provide indications of resources provided within each of those one or more node devices. At the processor component may receive such indications from the one or more node devices.

At based at least on one or more of the aforementioned received indications the processor component may again generate a database e.g. the requisites database and or the configuration database of the application routines to be executed the requisites of those application routines and or the resources available from each device to supply those requisites. Again such a database may include indications of requisites of one application routine by another such that the database includes indications of dependencies between those application routines.

At the processor component may again generate separate parameter catalogs e.g. the control parameter catalog and or one or more instances of the application parameter catalog for at least each device that is to execute an application routine e.g. the control device and or one or more of the node devices from the database. Again each of those parameter catalogs may include configuration information for the particular one s of the application routines to be executed within the particular device for which it is generated including indications of any dependencies on another application routine. At the processor component may transmit one or more of those re generated parameter catalogs to the particular node device s the one or more parameter catalogs were generated.

Following such re generation and re transmission of the parameter catalogs the processor component may receive indications from one or more node devices of the starting restarting and or continued execution of application routines. As has been discussed these indications may reflect the results of checks made by control agents e.g. instances of the control agent of the status of execution of application routines including whether an application routine is still successfully being executed or needed to be restarted. At in support of coordinating the start and or restart of the application routines in an order that accommodates dependencies that may exist among the application routines the processor component may relay retransmit those indications to other s of the one or more node devices.

At a processor component of a node device e.g. the processor component of one of the one or more node devices may receive a command a request or other form of trigger from a control device e.g. the control device to again provide the control device with indications of what application routines e.g. one or more of the application routines are to be executed within the node device what are the requisites for the execution of each of those various application routines and what resources are provided within the node device to support the execution of application routines. Again among the requisites of an application routine may be a resource required of another application routine such that there may be a dependency by the one application routine on the other application routine.

At in response to the trigger the processor component of a node device may again perform various searches within the node device to identify what application routines are to be executed within the node device and the requisites for each of those application routines. The processor component may also again perform various tests to identify the resources provided by the node device for the execution of application routines e.g. the environment component to provide a VM .

At the processor component may again transmit indications of what application routines are to be executed within the node device the requisites of each of those application routines and or what resources the node device provides to support the execution of application routines to the control device. Among the indications of requisites provided to the control device may be indications of dependencies by one application routine on a resource provided by another application routine including in situations where the other application routine may be executed by a different device.

At a parameter catalog may again be received by the processor component of the node device from the control master of the control device. Among the configuration information within the parameter catalog may be indications of dependencies by one application routine on a resource provided by another. Again the transmission of parameter catalogs by the control master of the control device to one or more node devices may follow an exchange of indications in which the control device first transmits an indication of the availability of the parameter catalogs to the one or more node devices then awaits request s transmitted by the one or more node devices for their corresponding one s of the parameter catalogs before transmitting the parameter catalog s to the one or more nodes.

At in response to receiving the parameter catalog the processor component may check whether an application routine for which execution was earlier started is still being executed. If so then the processor component may transmit an indication to the control device of the application routine still being executed.

However if at the application routine is not still being executed or has otherwise become nonfunctional such as becoming unresponsive then at the processor component may check whether the application routine has a dependency on a resource from another application routine executed by another device. If not then the processor component may restart execution of that application routine at . However if at the application routine does have a dependency on a resource provided by another application routine executed by another device then the processor component may await receipt of an indication that execution of that other application routine has been started restarted or is continuing at before restarting execution of the application routine at .

At the processor component may transmit an indication to the control device of the restart of execution of the application routine within the node device. Again such indications of the start restart or of continuing execution of application routines transmitted by one node device may be relayed by the control device to one or more other node devices.

The processing architecture includes various elements commonly employed in digital processing including without limitation one or more processors multi core processors co processors memory units chipsets controllers peripherals interfaces oscillators timing devices video cards audio cards multimedia input output I O components power supplies etc. As used in this application the terms system and component are intended to refer to an entity of a computing device in which digital processing is carried out that entity being hardware a combination of hardware and software software or software in execution examples of which are provided by this depicted exemplary processing architecture. For example a component can be but is not limited to being a process running on a processor component the processor component itself a storage component e.g. a hard disk drive multiple storage drives in an array etc. that may employ an optical and or magnetic storage medium an software object an executable sequence of instructions a thread of execution a program and or an entire computing device e.g. an entire computer . By way of illustration both an application running on a server and the server can be a component. One or more components can reside within a process and or thread of execution and a component can be localized on one computing device and or distributed between two or more computing devices. Further components may be communicatively coupled to each other by various types of communications media to coordinate operations. The coordination may involve the uni directional or bi directional exchange of information. For instance the components may communicate information over the communications media. The information can be implemented as transmissions allocated to one or more electrical and or optical conductors. A message including a command status address or data message may be one of such transmissions or may be a plurality of such transmissions and may be transmitted either serially or substantially in parallel through any of a variety of connections and or interfaces.

As depicted in implementing the processing architecture a computing device includes at least a processor component a storage an interface to other devices and a coupling . As will be explained depending on various aspects of a computing device implementing the processing architecture including its intended use and or conditions of use such a computing device may further include additional components such as without limitation a touch screen incorporating a display interface .

The coupling includes one or more buses point to point interconnects transceivers buffers crosspoint switches and or other conductors and or logic that communicatively couples at least the processor component to the storage . Coupling may further couple the processor component to one or more of the interface the audio subsystem and the display interface depending on which of these and or other components are also present . With the processor component being so coupled by couplings the processor component is able to perform the various ones of the tasks described at length above for whichever one s of the aforedescribed computing devices implement the processing architecture . Coupling may be implemented with any of a variety of technologies or combinations of technologies by which commands and or data are optically and or electrically conveyed. Further at least portions of couplings may employ timings and or protocols conforming to any of a wide variety of industry standards including without limitation Accelerated Graphics Port AGP CardBus Extended Industry Standard Architecture E ISA Micro Channel Architecture MCA NuBus Peripheral Component Interconnect Extended PCI X PCI Express PCI E Personal Computer Memory Card International Association PCMCIA bus HyperTransport QuickPath and the like.

As previously discussed the processor component corresponding to the processor components and may include any of a wide variety of commercially available processors employing any of a wide variety of technologies and implemented with one or more cores physically combined in any of a number of ways.

As previously discussed the storage corresponding to the storages and may be made up of one or more distinct storage components based on any of a wide variety of technologies or combinations of technologies. More specifically as depicted the storage may include one or more of a volatile storage e.g. solid state storage based on one or more forms of RAM technology a non volatile storage e.g. solid state ferromagnetic or other storage not requiring a constant provision of electric power to preserve their contents and a removable media storage e.g. removable disc or solid state memory card storage by which information may be conveyed between computing devices . This depiction of the storage as including multiple distinct types of storage is in recognition of the commonplace use of more than one type of storage component in computing devices in which one type provides relatively rapid reading and writing capabilities enabling more rapid manipulation of data by the processor component but in which a volatile technology may be used constantly requiring electric power while another type provides relatively high density of non volatile storage but likely provides relatively slow reading and writing capabilities .

Given the often different characteristics of different storage components employing different technologies it is also commonplace for such different storage components to be coupled to other portions of a computing device through different storage controllers coupled to their differing storage components through different interfaces. By way of example where the volatile storage is present and is based on RAM technology the volatile storage may be communicatively coupled to coupling through a storage controller providing an appropriate interface to the volatile storage that perhaps employs row and column addressing and where the storage controller may perform row refreshing and or other maintenance tasks to aid in preserving information stored within the volatile storage . By way of another example where the non volatile storage is present and includes one or more ferromagnetic and or solid state disk drives the non volatile storage may be communicatively coupled to coupling through a storage controller providing an appropriate interface to the non volatile storage that perhaps employs addressing of blocks of information and or of cylinders and sectors. By way of still another example where the removable media storage is present and includes one or more optical and or solid state disk drives employing one or more pieces of machine readable storage medium the removable media storage may be communicatively coupled to coupling through a storage controller providing an appropriate interface to the removable media storage that perhaps employs addressing of blocks of information and where the storage controller may coordinate read erase and write operations in a manner specific to extending the lifespan of the machine readable storage medium . The machine readable storage medium with executable instructions stored thereon may be an example embodiment of a computer program product that may or may not be fabricated in large quantities to enable distribution of those executable instructions.

One or the other of the volatile storage or the non volatile storage may include an article of manufacture in the form of a machine readable storage media on which a routine including a sequence of instructions executable by the processor component may be stored depending on the technologies on which each is based. By way of example where the non volatile storage includes ferromagnetic based disk drives e.g. so called hard drives each such disk drive typically employs one or more rotating platters on which a coating of magnetically responsive particles is deposited and magnetically oriented in various patterns to store information such as a sequence of instructions in a manner akin to storage medium such as a floppy diskette. By way of another example the non volatile storage may be made up of banks of solid state storage components to store information such as sequences of instructions in a manner akin to a compact flash card. Again it is commonplace to employ differing types of storage components in a computing device at different times to store executable routines and or data. Thus a routine including a sequence of instructions to be executed by the processor component may initially be stored on the machine readable storage medium and the removable media storage may be subsequently employed in copying that routine to the non volatile storage for longer term storage not requiring the continuing presence of the machine readable storage medium and or the volatile storage to enable more rapid access by the processor component as that routine is executed.

As previously discussed the interface which may correspond to the network interfaces or may employ any of a variety of communications technologies corresponding to any of a variety of communications technologies that may be employed to communicatively couple a computing device to one or more other devices. Again one or both of various forms of wired or wireless communications may be employed to enable the processor component to interact with input output devices e.g. the depicted example keyboard or printer and or other computing devices where such interaction may be through a network e.g. the network or an interconnected set of networks. In recognition of the often greatly different character of multiple types of timings and or protocols that must often be supported by any one computing device the interface is depicted as including multiple different interface controllers and . The interface controller may employ any of a variety of types of wired digital serial interface or radio frequency wireless interface to receive serially transmitted messages from user input devices such as the depicted keyboard . The interface controller may employ any of a variety of cabling based or wireless timings and or protocols to access other computing devices through the depicted network perhaps a network made up of one or more links smaller networks or perhaps the Internet . The interface controller may employ any of a variety of electrically conductive cabling enabling the use of either serial or parallel transmission to convey data to the depicted printer . Other examples of devices that may be communicatively coupled through one or more interface controllers of the interface include without limitation microphones remote controls stylus pens card readers finger print readers virtual reality interaction gloves graphical input tablets joysticks other keyboards retina scanners the touch input component of touch screens trackballs various sensors a camera or camera array to monitor movement of persons to accept commands and or data provided by those persons via gestures and or facial expressions laser printers inkjet printers mechanical robots milling machines etc.

Where a computing device is communicatively coupled to or perhaps actually incorporates a display e.g. the depicted example display corresponding to the display such a computing device implementing the processing architecture may also include the display interface . Although more generalized types of interface may be employed in communicatively coupling to a display whether of the touch screen variety or not the somewhat specialized additional processing often required in visually displaying various forms of content on a display as well as the somewhat specialized nature of the cabling based interfaces used often makes the provision of a distinct display interface desirable. Wired and or wireless communications technologies that may be employed by the display interface in a communicative coupling of the touch screen may make use of timings and or protocols that conform to any of a variety of industry standards including without limitation any of a variety of analog video interfaces Digital Video Interface DVI DisplayPort etc.

Some systems may use Hadoop an open source framework for storing and analyzing big data in a distributed computing environment. Some systems may use cloud computing which can enable ubiquitous convenient on demand network access to a shared pool of configurable computing resources e.g. networks servers storage applications and services that can be rapidly provisioned and released with minimal management effort or service provider interaction. Some grid systems may be implemented as a multi node Hadoop cluster as understood by a person of skill in the art. Apache Hadoop is an open source software framework for distributed computing. Some systems may use the SAS LASR Analytic Server which can deliver statistical modeling and machine learning capabilities in a highly interactive programming environment that enables multiple users to concurrently manage data transform variables perform exploratory analysis build and compare models and score with virtually no regards on the size of the data stored in Hadoop . Some systems may use SAS In Memory Statistics for Hadoop to read big data once and analyze it several times by persisting it in memory for the entire session.

What has been described above includes examples of the disclosed architecture. It is of course not possible to describe every conceivable combination of components and or methodologies but one of ordinary skill in the art may recognize that many further combinations and permutations are possible. Accordingly the novel architecture is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims.

