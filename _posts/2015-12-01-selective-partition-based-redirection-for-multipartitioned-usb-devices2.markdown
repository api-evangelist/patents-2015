---

title: Selective partition based redirection for multi-partitioned USB devices
abstract: Universal serial bus (USB) devices may be redirected to a server to create USB virtual devices. Each of the USB devices to be redirected may have one or more partitions but each partition may not be suitable for redirection. A user may select one or more partitions for redirection. The server may read the selected partitions. The server will create virtual volumes for only the selected partitions and will mount a file system for each of the selected partitions only.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09582444&OS=09582444&RS=09582444
owner: Dell Products L.P.
number: 09582444
owner_city: Round Rock
owner_country: US
publication_date: 20151201
---
The disclosure relates in general to partition based redirection and more particularly to a partitioned based redirection for multi partitioned universal serial bus USB devices such as USB mass storage devices.

As the value and use of information continues to increase individuals and businesses seek additional ways to process and store information. One option available to users is information handling systems. An information handling system generally processes compiles stores and or communicates information or data for business personal or other purposes thereby allowing users to take advantage of the value of the information. Because technology and information handling needs and requirements vary between different users or applications information handling systems may also vary regarding what information is handled how the information is handled how much information is processed stored or communicated and how quickly and efficiently the information may be processed stored or communicated. The variations in information handling systems allow for information handling systems to be general or configured for a specific user or specific use such as financial transaction processing airline reservations enterprise data storage or global communications. In addition information handling systems may include a variety of hardware and software components that may be configured to process store and communicate information and may include one or more computer systems data storage systems and networking systems.

One approach to the design and implementation of information handling systems for computer networks particularly with regard to the development of client server applications includes designing client applications and client terminals so that the majority of the heavily used resources are at a remote computing machine such as a centralized server connected via a network. The client terminals generally have minimal memory disk storage and processor power but are designed under the premise that most users connected to a powerful server do not need the additional processing power. With these client terminals the total cost of ownership is minimized because of the reduced resources and because the clients can be centrally administered and updated from the server. As such these client terminals are suited for a network that can handle a significant number of terminals. If the client terminals have devices attached to them then when the client terminals are connected to the server not only the client terminals but also the client terminals devices can become available to the server.

Some information handling systems have externally connected devices such as universal serial bus USB devices. These devices may be redirected from the client to a server. The redirected devices may then be made available to other users connected to the server. Such externally connected devices may contain numerous types of data and may contain data associated with various levels of privacy or security. Also these externally connected devices may contain large amounts of data that may degrade performance due to bandwidth requirements. Thus a need exists to allow for selective redirection of one or more partitions of an externally connected device such as a USB device or a USB mass storage device.

In one embodiment redirection information is received from a client wherein the redirection information comprises one or more selected partitions of a universal serial bus USB device coupled to the client. One or more volume mount requests are sent from an input output I O manager to one or more file system drivers. One or more volume mount requests are intercepted by a file system filter driver. The file system filter driver identifies one or more virtual volumes corresponding to the selected partitions of the USB device. The one or more file systems correspond to each of the one or more identified virtual volumes are mounted. A request to access a first virtual volume associated with the virtual USB device is received.

In one embodiment a virtual disk enumerator creates the virtual USB device. The redirection information comprises one or more of a notification one or more properties associated with the one or more selected partitions and identification of the one or more selected partitions. The client notifies that the virtual USB device was successfully created. A request is received from an application wherein the request is directed to a specific virtual volume. The request is translated to a USB request block and the USB request block is passed to the client. It may be determined if one or more of the one or more selected partitions comprises secure data. It may be determined if an application associated with a request has permission to access the one or more selected partitions comprising secure data. The request is processed based at least in part on one or more security permissions associated with the application.

In one embodiment one or more computer readable non transitory storage media embodying software that is operable when executed performs or implements one or more embodiments. In one embodiment a system comprises one or more processors and a memory coupled to the processors comprising instructions executable by the processors the processors being operable when executing the instruction to perform or implement one or more embodiments.

The detailed description set forth below is intended as a description of various configurations of the subject technology and is not intended to represent the only configurations in which the subject technology may be practiced. The appended drawings are incorporated herein and constitute a part of the detailed description. The detailed description includes specific details for the purpose of providing a thorough understanding of the subject technology. However it will be apparent to those skilled in the art that the subject technology may be practiced without these specific details. In some instances well known structures and components are shown in block diagram form in order to avoid obscuring the concepts of the subject technology. Like components are labeled with identical element numbers for ease of understanding.

Frequently devices connected to client terminals also referred to as clients or client side devices are virtualized on a server to provide access to the devices from user sessions on the server. For example a universal serial bus USB device such as a USB mass storage device may be externally connected to a client. The USB device may be redirected to a server as a virtual USB device so that other users or clients connected to the server may access the virtual USB device in the same manner as a locally connected device would be accessed.

The USB devices to be redirected may contain any type of data including data that has privacy or security restrictions. For example a USB device connected to a client may contain private data or personal information that should not be shared to other clients or users connected to the server. If the USB device is redirected in the traditional manner all of the private data may be accessible by other users or clients.

Also USB devices to be redirected may contain large amounts of data. For example a USB device may contain data associated with a database that is one Terabyte in size. Transmission of such huge amounts of data may affect network performance and consume more than an allotted or available amount of network bandwidth or central processing unit CPU resources.

In some instances a USB device may be partitioned such that certain data such as private data or portions of a database may reside in a separate partition from other data stored on the USB device. However redirecting partitioned USB devices also may require more bandwidth and resources. For example a file system on the server may need to be loaded which may require a large number of USB request blocks URB to be transferred between the client and the server. Every system partition table of the USB device at the client that is redirected to the server must be read to mount it to the server which may reduce network performance and available network bandwidth and may also consume CPU resources at both the client and the server.

Thus the present invention addresses the problem of redirection of multi partitioned USB devices by only redirecting those partitions that have been selected for redirection. The server will only mount a file system associated with the selected partition or partitions as opposed to mounting a file system for every partition of a redirected USB device.

In the following description details are set forth by way of example to facilitate discussion of the disclosed subject matter. It should be apparent to a person of ordinary skill in the art however that the disclosed embodiments are exemplary and not exhaustive of all possible embodiments.

For the purposes of this disclosure an information handling system may include an instrumentality or aggregate of instrumentalities operable to compute classify process transmit receive retrieve originate switch store display manifest detect record reproduce handle or utilize various forms of information intelligence or data for business scientific control entertainment or other purposes. For example an information handling system may be a personal computer a PDA a consumer electronic device a network storage device or another suitable device and may vary in size shape performance functionality and price. The information handling system may include memory one or more processing resources such as a central processing unit CPU or hardware or software control logic. Additional components or the information handling system may include one or more storage devices such as USB mass storage devices one or more communications ports for communicating with external devices as well as various input and output I O devices such as a keyboard a mouse a wireless device for example a Bluetooth device a video display and any other device known to one of ordinary skill in the art. The information handling system may also include one or more buses operable to transmit communication between the various hardware components.

Herein a computer readable non transitory storage medium or media may include one or more semiconductor based or other integrated circuits ICs such as for example field programmable gate arrays FPGAs or application specific ICs ASICs hard disk drives HDDs hybrid hard drives HHDs optical discs optical disc drives ODDs magneto optical discs magneto optical drives floppy diskettes floppy disk drives FDDs magnetic tapes solid state drives SSDs RAM drives SECURE DIGITAL cards or drives any other suitable computer readable non transitory storage media or any suitable combination of two or more of these where appropriate. A computer readable non transitory storage medium may be volatile non volatile or a combination of volatile and non volatile where appropriate.

Particular embodiments are best understood by reference to wherein like numbers are used to indicate like and corresponding parts.

Network may be a public network or a private for example corporate network. Additionally network may be for example a Local Area Network LAN a Wide Area Network WAN a wireless network the Internet an intranet or any other suitable type of network. One or more client devices may be connected to the network via a network switch not shown . In particular embodiments network may include one or more routers for routing data between clients and or servers . A device for example a client or a server on network may be addressed by a corresponding network address including for example an Internet protocol IP address an Internet name a Windows Internet name service WINS name a domain name or other system name. In particular embodiments network may include one or more logical groupings of network devices such as for example one or more sites for example customer sites or subnets. As an example a corporate network may include potentially thousands of offices or branches each with its own subnet or multiple subnets having many devices. One or more clients may communicate with one or more servers via any suitable connection including for example a modem connection a LAN connection including the Ethernet or a broadband WAN connection including DSL Cable Ti T3 Fiber Optics Wi Fi or a mobile network connection including GSM GPRS 3G or WiMax.

Client may be a desktop computer a laptop computer a tablet computer a handheld device a mobile phone a kiosk a vending machine a billboard or any suitable information handling system . In particular embodiments a client is an embedded computer and may have flash memory for example a solid state drive instead of a hard disk drive. In particular embodiments a client is a thin client having limited processing capabilities and limited storage and such a thin client may require minimal management and updates. A client may communicate with a server via one or more protocols such as Hypertext Transfer Protocol HTTP Hypertext Transfer Protocol Secure HTTPS File Transfer Protocol FTP Common Internet File System CIFS Independent Computing Architecture ICA protocol developed by Citrix Systems Inc. Remote Desktop Protocol RDP developed by Microsoft Corporation or any suitable protocol or combination of protocols.

In particular embodiments a client may connect to a USB device . The present invention contemplates client connecting to any number of USB devices . Further the present invention contemplates any number of clients connecting to one or more USB devices such that multiple clients may be connected to one or more unique USB devices . In particular embodiments any number of clients may be connected to the same USB device s different USB device s or any combination thereof.

A server may include one or more of a computing device a desktop computer a laptop computer a database a corporate server a repository server a configuration application server a domain name system DNS server a dynamic host configuration protocol DHCP server a virtual machine for example VMware Virtual Machine a desktop session for example Microsoft Terminal Server a published application for example Microsoft Terminal Server or any suitable information handling system . As an example a private for example corporate network may include a device manager server and a repository server each configured to communicate with multiple clients across one or more domains sites or subnets of network . In particular embodiments a server may include one or more servers or functions of one or more servers. A client device may access software resources provided by a server such as for example operating systems add ons content or any other suitable data applications or images. In particular embodiments a client may access resources provided by a server only after providing suitable authentication information. Alternatively a server may provide software or other resources automatically to one or more client .

It may be desirable in the case of a private for example corporate network including multiple sites or subnets to deploy software including for example all or part of one or more operating systems applications add ons or data to one or more clients across one or more sites or subnets. The clients may for example be located remotely from one or more servers including for example device managers or resource repositories .

In particular embodiments one or more servers of a network may include a virtual USB device or virtual volume such as a USB mass storage device. While the virtual USB device is not locally or physically connected to the server the virtual USB device appears to the server as if it is locally connected to the server . Thus USB device appears to the server as a virtual USB device . While only one virtual USB device is shown the present invention contemplates server virtualizing and accessing any number of virtual USB devices corresponding to any one or more USB devices connected to any one or more clients . Further the present invention contemplates any number of servers accessing one or more virtual USB devices such that multiple servers may access one or more virtual USB devices . In particular embodiments any number of servers may access virtual USB device s different virtual USB device s or any combination thereof.

As used herein a local device of client or server or a device locally connected to client or server may be a device directly connected to the client or server using one or more wires or connectors for example physically connected to the system or a device directly connected to the client or server using a wireless link. For example USB device is a local device connected using a USB connection to client . Furthermore in one aspect of the disclosure a local device of client or server or a device locally connected to client or server may include a device within client or server .

A remote device or a device remote to client or server may be a device that is not directly connected to client or server . For example server is remote to both client and USB device because server is not directly connected to client or USB device but connected indirectly through network which can include for example another server or the Internet.

In particular embodiments client for example a thin client a slim client or a lean client or one or more software components associated with client may depend on server to fulfill its computational roles. As an example of a Virtual Desktop Infrastructure VDI and not by way of limitation client may provide one or more terminal services to one or more users of client . As such the users of client may login to the same server and perform tasks on the same server substantially at the same time. In the VDI one or more USB devices may be connected to client . In particular embodiments in order for the USB devices to work seamlessly communications associated with the USB devices may be redirected to a Virtual Desktop VD operating system OS or a Virtual Machine VM OS for example WINDOWS SERVER 2003 of the VDI.

Client may include a user interface UI proxy client USB stub driver and USB bus driver . UI may be within client or may be a UI device coupled to client via any type of connection known to one or ordinary skill in the art. UI is a device for displaying or presenting a selection to a user or another client . For example in one embodiment UI may be a monitor a display port monitor a television a projector another client or any other type of device known to one of ordinary skill in the art.

Client may recognize USB device which is connected locally. The client loads the USB bus driver . The USB bus driver manages the USB device and converts any generic read and write requests to the appropriate USB request block URB . The USB bus driver loads the USB stub driver . The USB stub driver primarily manages the USB hubs and corresponding ports and enumerates any USB devices connected to these ports. In one embodiment the USB stub driver is a Wyse USB stub driver. USB stub driver communicates to proxy client a request regarding redirection of the USB device . If a USB device is configured to be redirected to server the redirection may operate generally as described in U.S. Pat. No. 8 010 630 to Barreto et al. which is incorporated herein by reference.

UI provides an interface for a user to make one or more selections of one or more partitions of a multi partitioned USB device to make available to others such as other users other clients or other servers or to redirect to server as a virtual USB device . In one embodiment the UI may allow a user to select more than one partition of USB device for redirection. In one embodiment the UI allows the user to select whether to enable partition based redirection for a given client for a given USB device or any combination thereof. For example a user such as an administrator or another client may determine to make available for redirection one or more partitions of one or more USB devices based at least in part on one or more criteria. The criteria or parameters may include any one or more of type version storage capacity manufacturer identification vendor identification number of partitions and any other criteria of USB device known to one of ordinary skill in the art.

Client and server may communicate via proxy client and agent over a network shown in via a websocket . In one embodiment a proxy client on client may coordinate communications between USB device and agent running on server . For example proxy client may be configured to receive socket connection information over websocket from server and initiate redirecting I O transactions between USB device and agent via proxy client . Agent may be configured to register with the OS of the client to receive notification of an establishment of any remote connection. In one embodiment client proxy client sends to agent one or more redirection parameters or information related to USB device that may be used at least in part to initialize virtual USB device . For example proxy client may send to agent the selected partitions for redirection USB version vendor type device type or any other parameter known to one of ordinary skill in the art.

The agent on server passes the details of the received one or more redirection parameters to the Virtual USB bus driver . Thus the Virtual USB bus driver receives information about the selected partitions USB device that is to be redirected from agent of the server . In one embodiment virtual USB bus driver may be a Wyse virtual USB bus driver wvusbbus.sys. Virtual USB bus driver calls real driver associated with the USB device to complete the initialization of the USB device on server . The selected partitions are extracted and a file system is mounted only for each selected partition.

Mounting a virtual volume or a logical volume is typically triggered by a request to open a file on a virtual volume such as a partition or a dynamic volume. For example an application such as application may call a function or application programming interface API such as CreateFile in Windows or a kernel mode driver calls ZwCreateFile or IoCreateFileSpecifyDeviceObjectHint to open a file. An input output I O manager may determine which virtual volume is the target of the file open request from the application . If the virtual volume has not been mounted by a file system since system boot for example the VPB MOUNTED flag is not set the I O manager sends a volume mount request for example one or more commands such as I O request packets IRP for example IRP MJ FILE SYSTEM CONTROL and IRP MN MOUNT VOLUME to file system that might claim the virtual volume . The file system may be any one or more file systems and may be any format. For example server may include one or more of a file allocation table FAT formatted file system a new technology file system NTFS formatted file system any other formatted file system known to one of ordinary skill in the art and any combination thereof.

The file system filter driver intercepts the IRP from the I O Manager . The file system filter driver attaches to one or more file system drivers and listens for any such IRPs. The file system filter driver only mounts the virtual volumes that correspond to the partitions selected for redirection. The file system filter driver communicates with agent for example using named events to check whether a particular virtual volume should be mounted.

For built in file systems that are not yet loaded the I O manager sends the volume mount request to a file system recognizer such as FsRec which checks the volume boot sector on behalf of the built in file systems. If the file system recognizer determines that a virtual volume was formatted by a not yet loaded file system the I O Manager responds by sending a load file system to each file system driver such as the commands IRP MJ FILE SYSTEM CONTROL AND IRP MN LOAD FILE SYSTEM request to the file system recognizer which loads the file system associated with the virtual volume . The I O Manager the sends the original volume mount request from application to the corresponding file system . Each file system that receives the mount volume request examines the boot sector of virtual volume to determine whether the format of the virtual volume and other information indicate that the virtual volume was formatted by that particular file system . If the format matches the file system mounts the virtual volume .

The virtual volume associated with the selected partitions of USB device then functions as if the USB device was locally connected to server as indicated by the dashed line between USB device and virtual volume . A real driver is loaded for each virtual volume .

The virtual volume corresponding to the one or more selected partitions of USB device is then made available to an application via real driver . Application may be one or more applications that reside locally at the server may be one or more virtual applications or any combination thereof. In one or more embodiments application may be any application accessible via websocket to a client .

At step the client via proxy client polls to determine if a USB device is connected to client . In one embodiment the proxy client registers with the operating system OS at the client for a device arrival notification of the type associated with the USB device . Proxy client may determine if a USB device is connected by any process known to one of ordinary skill in the art. For example in one embodiment a user may use a graphical user interface GUI or a command line interface CLI to inform the client that a USB device has been connected. In another embodiment the client may automatically detect without user intervention the connection of a USB device . USB device may be any known USB device including but not limited to a USB mass storage device a USB thumb drive a USB hard disk drive a USB printer a USB facsimile machine or any other USB device known to one of ordinary skill in the art that may be coupled to the client via a USB. Client may poll for a connection in any way known to one of ordinary skill in the art based at least in part on an interrupt a timer a semaphore execution of one or more modules comprising one or more instructions etc. that indicates connection of a USB device such as USB device . Once the USB device is connected to the client the OS of the client will notify the proxy client with the device type information.

If a USB device is connected either directly or communicatively to the client then at step the client via proxy client loads a USB stub driver associated with the USB device . At step the USB stub driver loads an associated bus driver .

At step the client determines if partition based redirection is enabled for the client . Partition based redirection may be enabled by setting any one or more partition based redirection enabled parameters. For example at step the determination of whether partition based redirection is enabled may be based at least in part on value of a system registry setting a variable a predetermined memory location a database entry a memory register a user profile setting a client profile setting any other value known to one of ordinary skill in the art and any combination thereof. If it is determined at step that partition based redirection is not enabled then the process continues at step with redirection of the USB device in any way known to one of ordinary skill in the art.

The determination at step may occur at boot up of client each time a user logs in to the client or the server each time a connection is established between client and server each time a new USB device is coupled to a client each time a partition based redirection parameter is changed at the occurrence any other event known to one of ordinary skill in the art or any combination thereof.

If at step it is determined that partition based redirection is enabled then at step a prompt is given for selection of one or more partitions of USB device for redirection. In one embodiment the prompt may be made via UI . A user may be presented with the available partitions of USB device . The user may select one or more partitions for redirection. In one embodiment the UI presents the user with a selection of partitions via a CLI a GUI any way known to one of ordinary skill in the art or any combination thereof. In one embodiment the user may be presented with one or more USB devices to select for redirection and may be presented with one or more partitions for selection where the one or more partitions are associated with each of the one or more USB devices . For example client may have the three USB devices A B and C coupled to the client . Device A may have two partitions device B may have three partitions and device C may have four partitions. The user may be presented with all three devices A B and C or any combination of devices. For example client may have one or more partition based redirection parameters that allow for example at step any one or more of the devices A B and C to be redirected. In one example only devices B and C meet the requirements of the partition based redirection parameters and thus only devices B and C are presented to for example a user for selection. In one embodiment all of the partitions of devices B and C are presented for selection. In another embodiment only certain partitions are presented for selection. For example a first partition of device B may be locked or secured and thus may not be presented as a partition that may be selected for redirection while all of the partitions associated with device C may be presented for selection. Any one or more other partition selection parameters may determine whether a partition is presented for selection. For example the one or more selection parameters may also include size of the partition one or more security parameters associated with the partition number of partitions for example a maximum or minimum number of partitions threshold may be set or any other partition parameter known to one of ordinary skill in the art. Whether a partition of any given USB device is presented may be based at least in part on any one or more of the partition parameters.

Once the selection of the one or more partitions associated with the one or more selected USB devices is made the redirection information for each USB device selected is passed to the server . For example the redirection information is passed from the proxy client of the client to the agent of the server during read and write channel establishment. The redirection information may include any one or more of the notification that USB device needs to be redirected one or more properties associated with the selected USB device the identification of the one or more selected partitions one or more properties associated with the one or more selected partitions any other redirection information known to one of ordinary skill in the art and any combination thereof.

In one or more embodiment the server may communicate whether or not a virtual USB device corresponding to the selected USB device was successfully created.

At step the agent issues a command to a virtual disk enumerator not shown to create a virtual volume corresponding to USB device . The virtual volume may be created based at least in part on any of the redirection information associated with the notification.

At step one or more virtual volumes associated with each of the selected partitions as identified in the received redirection information is created. Virtual volumes are created for only the selected partitions. For example the file system filter driver may intercept one or more IRPs from the I O manager . The file system filter driver waits for the IRPs and mounts only the virtual volumes associated with a selected partition.

At step a file system is mounted associated with each of the virtual volumes created for each of the selected partitions. The file system filter driver will communicate with the agent for example using one or more named events to determine whether a particular volume should be mounted and if so the file system is mounted for each corresponding virtual volume .

At step the virtual volume is made available for access by one or more applications . The virtual volume may notify the operating system of the server that the virtual volume has arrived. The operating system builds an associated driver stack and will identify and load the required real drivers for the virtual volume . The server may in one embodiment notify the client that the virtual volume corresponding to the selected USB device was successfully created.

At step the server translates the request from the application to a USB request block URB directed to the virtual volume . At step the virtual USB bus driver redirects the URB via agent to the client associated with the USB device corresponding to the virtual volume . At the client the URB is received by the proxy client and passed to the USB device via stub driver and USB bus driver . At step the server may also determine whether the request is to a selected partition that comprises secure data. If so the server may determine if the requesting application has permission to access the secure data. The determination may be based at least in part on one or more security permissions stored at the server . For example certain applications may be given security permissions that allow access to any type of data any partition or any combination thereof while other applications may assigned a specific level of security permissions and may only be permitted to access data from a selected partition that falls within the associated security permission. Likewise the server may determine whether a particular user has the required security permissions to access data associated with a selected partition. For example the request may identify the user of the application requesting access to the data and the server may determine based at least in part on the security permissions associated with the user the application or any combination thereof whether the request should be further processed or whether the request should be denied.

At step the server via agent receives the response associated with the URB from the client via proxy client . At step the response is sent to the virtual USB bus driver . At step the virtual USB bus driver passes the response to the requesting application via the real driver associated with the virtual volume of the original request.

Particular embodiments may be implemented on one or more electronic devices or information handling systems. illustrates an example information handling system computer system . For example computer system may be an embodiment for a device that runs a user interface content editor. In particular embodiments one or more computer systems perform one or more steps of one or more methods described or illustrated herein. In particular embodiments one or more computer systems provide functionality described or illustrated herein. In particular embodiments software running on one or more computer systems performs one or more steps of one or more methods described or illustrated herein or provides functionality described or illustrated herein. Particular embodiments include one or more portions of one or more computer systems .

This disclosure contemplates computer system taking any suitable physical form. As example and not by way of limitation computer system may be an embedded computer system a system on chip SOC a single board computer system SBC such as for example a computer on module COM or system on module SOM a desktop computer system a laptop or notebook computer system an interactive kiosk a mainframe a mesh of computer systems a mobile telephone a personal digital assistant PDA a server or a combination of two or more of these. Where appropriate computer system may include one or more computer systems be unitary or distributed span multiple locations span multiple machines or reside in a cloud which may include one or more cloud components in one or more networks. Where appropriate one or more computer systems may perform without substantial spatial or temporal limitation one or more steps of one or more methods described or illustrated herein. As an example and not by way of limitation one or more computer systems may perform in real time or in batch mode one or more steps of one or more methods described or illustrated herein. One or more computer systems may perform at different times or at different locations one or more steps of one or more methods described or illustrated herein where appropriate.

In particular embodiments computer system includes a processor memory storage an I O interface a communication interface and a bus . Although this disclosure describes and illustrates a particular computer system having a particular number of particular components in a particular arrangement this disclosure contemplates any suitable computer system having any suitable number of any suitable components in any suitable arrangement.

In particular embodiments processor includes hardware for executing instructions such as those making up a computer program. The instructions may be part of one or more modules. As an example and not by way of limitation to execute instructions processor may retrieve or fetch the instructions from an internal register an internal cache memory or storage decode and execute them and then write one or more results to an internal register an internal cache memory or storage . In particular embodiments processor may include one or more internal caches for data instructions or addresses. This disclosure contemplates processor including any suitable number of any suitable internal caches where appropriate. As an example and not by way of limitation processor may include one or more instruction caches one or more data caches and one or more translation lookaside buffers TLBs . Instructions in the instruction caches may be copies of instructions in memory or storage and the instruction caches may speed up retrieval of those instructions by processor . Data in the data caches may be copies of data in memory or storage for instructions executing at processor to operate on the results of previous instructions executed at processor for access by subsequent instructions executing at processor or for writing to memory or storage or other suitable data. The data caches may speed up read or write operations by processor . The TLBs may speed up virtual address translation for processor . In particular embodiments processor may include one or more internal registers for data instructions or addresses. This disclosure contemplates processor including any suitable number of any suitable internal registers where appropriate. Where appropriate processor may include one or more arithmetic logic units ALUs be a multi core processor or include one or more processors . Although this disclosure describes and illustrates a particular processor this disclosure contemplates any suitable processor.

In particular embodiments memory includes main memory for storing instructions for processor to execute or data for processor to operate on. As an example and not by way of limitation computer system may load instructions from storage or another source such as for example another computer system to memory . Processor may then load the instructions from memory to an internal register or internal cache. To execute the instructions processor may retrieve the instructions from the internal register or internal cache and decode them. During or after execution of the instructions processor may write one or more results which may be intermediate or final results to the internal register or internal cache. Processor may then write one or more of those results to memory . In particular embodiments processor executes only instructions in one or more internal registers or internal caches or in memory as opposed to storage or elsewhere and operates only on data in one or more internal registers or internal caches or in memory as opposed to storage or elsewhere . One or more memory buses which may each include an address bus and a data bus may couple processor to memory . Bus may include one or more memory buses as described below. In particular embodiments one or more memory management units MMUs reside between processor and memory and facilitate accesses to memory requested by processor . In particular embodiments memory includes random access memory RAM . This RAM may be volatile memory where appropriate. Where appropriate this RAM may be dynamic RAM DRAM or static RAM SRAM . Moreover where appropriate this RAM may be single ported or multi ported RAM. This disclosure contemplates any suitable RAM. Memory may include one or more memories where appropriate. Although this disclosure describes and illustrates particular memory this disclosure contemplates any suitable memory.

In particular embodiments storage includes mass storage for data or instructions. As an example and not by way of limitation storage may include a hard disk drive HDD a floppy disk drive flash memory an optical disc a magneto optical disc magnetic tape or a USB drive or a combination of two or more of these. Storage may include removable or non removable or fixed media where appropriate. Storage may be internal or external to computer system where appropriate. In particular embodiments storage is non volatile solid state memory. In particular embodiments storage includes read only memory ROM . Where appropriate this ROM may be mask programmed ROM programmable ROM PROM erasable PROM EPROM electrically erasable PROM EEPROM electrically alterable ROM EAROM or flash memory or a combination of two or more of these. This disclosure contemplates mass storage taking any suitable physical form. Storage may include one or more storage control units facilitating communication between processor and storage where appropriate. Where appropriate storage may include one or more storages . Although this disclosure describes and illustrates particular storage this disclosure contemplates any suitable storage.

In particular embodiments I O interface includes hardware software or both providing one or more interfaces for communication between computer system and one or more I O devices. Computer system may include one or more of these I O devices where appropriate. One or more of these I O devices may enable communication between a person and computer system . As an example and not by way of limitation an I O device may include a keyboard keypad microphone monitor mouse printer scanner speaker still camera stylus tablet touch screen trackball video camera another suitable I O device or a combination of two or more of these. An I O device may include one or more sensors. This disclosure contemplates any suitable I O devices and any suitable I O interfaces for them. Where appropriate I O interface may include one or more device or software drivers enabling processor to drive one or more of these I O devices. I O interface may include one or more I O interfaces where appropriate. Although this disclosure describes and illustrates a particular I O interface this disclosure contemplates any suitable I O interface.

In particular embodiments communication interface includes hardware software or both providing one or more interfaces for communication such as for example packet based communication between computer system and one or more other computer systems or one or more networks. As an example and not by way of limitation communication interface may include a network interface controller NIC or network adapter for communicating with an Ethernet or other wire based network or a wireless NIC WNIC or wireless adapter for communicating with a wireless network such as a WI FI network. This disclosure contemplates any suitable network and any suitable communication interface for it. As an example and not by way of limitation computer system may communicate with an ad hoc network a personal area network PAN a local area network LAN a wide area network WAN a metropolitan area network MAN or one or more portions of the Internet or a combination of two or more of these. One or more portions of one or more of these networks may be wired or wireless. As an example computer system may communicate with a wireless PAN WPAN such as for example a BLUETOOTH WPAN a WI FI network a WI MAX network a cellular telephone network such as for example a Global System for Mobile Communications GSM network or other suitable wireless network or a combination of two or more of these. Computer system may include any suitable communication interface for any of these networks where appropriate. Communication interface may include one or more communication interfaces where appropriate. Although this disclosure describes and illustrates a particular communication interface this disclosure contemplates any suitable communication interface.

In particular embodiments bus includes hardware software or both coupling components of computer system to each other. As an example and not by way of limitation bus may include an Accelerated Graphics Port AGP or other graphics bus an Enhanced Industry Standard Architecture EISA bus a front side bus FSB a HYPERTRANSPORT HT interconnect an Industry Standard Architecture ISA bus an INFINIBAND interconnect a low pin count LPC bus a memory bus a Micro Channel Architecture MCA bus a Peripheral Component Interconnect PCI bus a PCI Express PCIe bus a serial advanced technology attachment SATA bus a Video Electronics Standards Association local VLB bus or another suitable bus or a combination of two or more of these. Bus may include one or more buses where appropriate. Although this disclosure describes and illustrates a particular bus this disclosure contemplates any suitable bus or interconnect.

Herein a computer readable non transitory storage medium or media may include one or more semiconductor based or other integrated circuits ICs such as for example field programmable gate arrays FPGAs or application specific ICs ASICs hard disk drives HDDs hybrid hard drives HHDs optical discs optical disc drives ODDs magneto optical discs magneto optical drives floppy diskettes floppy disk drives FDDs magnetic tapes solid state drives SSDs RAM drives SECURE DIGITAL cards or drives any other suitable computer readable non transitory storage media or any suitable combination of two or more of these where appropriate. A computer readable non transitory storage medium may be volatile non volatile or a combination of volatile and non volatile where appropriate.

Those of skill in the art would appreciate that items such as the various illustrative blocks modules elements components methods operations steps and algorithms described herein may be implemented as hardware computer software or a combination of both.

To illustrate the interchangeability of hardware and software items such as the various illustrative blocks modules elements components methods operations steps and algorithms have been described generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application.

In one aspect means a block a module an element a component or a processor may be an item for example one or more of blocks modules elements components or processors for performing one or more functions or operations. In one aspect such an item may be an apparatus hardware or a portion thereof. In one example an item may have a structure in the form of for example an instruction s encoded or stored on a machine readable medium on another device or on a portion thereof. An instruction s may be software an application s a subroutine s or a portion thereof. The instructions s may be for performing the function s or operation s . The instruction s may be executable by one or more processors to perform the function s or operation s . One or more processors may execute the instruction s by for example transferring or copying and instructions into an executable memory space and executing the instructions. In one example an item may be implemented as one or more circuits configured to perform the function s or operation s . A circuit may include one or more circuits and or logic. A circuit may be analog and or digital. A circuit may be electrical and or optical. A circuit may include transistors. In an example one or more items may be implemented as a processing system for example a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA etc. as a portion s of any of the foregoing or as a combination s of any of the foregoing. Those skilled in the art will recognize how to implement the instructions circuits and processing systems.

In one aspect of the disclosure when actions or functions for example hooking modifying intercepting redirecting determining traversing obtaining creating operating deleting removing receiving providing generating converting displaying notifying accepting selecting controlling transmitting reporting sending or any other action or function are described as being performed by an item for example one or more of blocks modules elements components or processors it is understood that such actions or functions may be performed for example by the item directly. In another example when an item is described as performing an action the item may be understood to perform the action indirectly for example by facilitating such an action for example assisting allowing enabling causing or providing for such action to occur or performing a portion of such an action . For example determining can refer to facilitating determination attaching can refer to facilitating attaching and receiving can refer to facilitating receiving. In one aspect performing an action may refer to performing a portion of the action for example performing a beginning part of the action performing an end part of the action or performing a middle portion of the action .

A reference to an element in the singular is not intended to mean one and only one unless specifically so stated but rather one or more. For example a client may refer to one or more clients a server may refer to one or more servers an operation may refer to one or more operations and a signal message or communication may refer to one or more signals messages or communications.

Unless specifically stated otherwise the term some refers to one or more. Pronouns in the masculine for example his include the feminine and neuter gender for example her and its and vice versa. Headings and subheadings if any are used for convenience only and do not limit the invention.

A phrase such as an embodiment does not imply that such embodiment is essential to the subject technology or that such embodiment applies to all configurations of the subject technology. A disclosure relating to an embodiment may apply to all embodiments or one or more embodiments. An embodiment may provide one or more examples. A phrase such an embodiment may refer to one or more embodiments and vice versa. A phrase such as a configuration does not imply that such configuration is essential to the subject technology or that such configuration applies to all configurations of the subject technology. A disclosure relating to a configuration may apply to all configurations or one or more configurations. A configuration may provide one or more examples. A phrase such a configuration may refer to one or more configurations and vice versa.

In one aspect the term coupled or the like may refer to being directly coupled. In another aspect the term coupled or the like may refer to being indirectly coupled or communicatively coupled.

Various items may be arranged differently for example arranged in a different order or partitioned in a different way all without departing from the scope of the subject technology. In one aspect of the disclosure the elements recited in the accompanying claims may be performed by one or more modules or sub modules.

It is understood that the specific order or hierarchy of steps operations or processes disclosed is an illustration of exemplary approaches. Based upon design preferences it is understood that the specific order or hierarchy of steps operations or processes may be rearranged. Some of the steps operations or processes may be performed simultaneously. Some or all of the steps operations or processes may be performed automatically without the intervention of a user. The accompanying method claims if any present elements of the various steps operations or processes in a sample order and are not meant to be limited to the specific order or hierarchy presented.

The disclosure is provided to enable any person skilled in the art to practice the various aspects described herein. The disclosure provides various examples of the subject technology and the subject technology is not limited to these examples. Various modifications to these aspects will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other aspects.

All structural and functional equivalents to the elements of the various aspects described throughout this disclosure that are known or later come to be known to those of ordinary skill in the art are expressly incorporated herein by reference and are intended to be encompassed by the claims. Moreover nothing disclosed herein is intended to be dedicated to the public regardless of whether such disclosure is explicitly recited in the claims. No claim element is to be construed under the provisions of 35 U.S.C. 112 sixth paragraph unless the element is expressly recited using the phrase means for or in the case of a method claim the element is recited using the phrase step for. Furthermore to the extent that the term include have or the like is used such term is intended to be inclusive in a manner similar to the term comprise as comprise is interpreted when employed as a transitional word in a claim.

The Title Background Summary Brief Description of the Drawings and Abstract of the disclosure are hereby incorporated into the disclosure and are provided as illustrative examples of the disclosure not as restrictive descriptions. It is submitted with the understanding that they will not be used to limit the scope or meaning of the claims. In addition in the Detailed Description it can be seen that the description provides illustrative examples and the various features are grouped together in various embodiments for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed subject matter requires more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed configuration or operation. The following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separately claimed subject matter.

The claims are not intended to be limited to the aspects described herein but are to be accorded the full scope consistent with the language claims and to encompass all legal equivalents. Notwithstanding none of the claims are intended to embrace subject matter that fails to satisfy the requirement of 35 U.S.C. 101 102 or 103 nor should they be interpreted in such a way. Any unintended embracement of such subject matter is hereby disclaimed.

The scope of this disclosure encompasses all changes substitutions variations alterations and modifications to the example embodiments described or illustrated herein that a person having ordinary skill in the art would comprehend. The scope of this disclosure is not limited to the example embodiments described or illustrated herein. Moreover although this disclosure describes and illustrates respective embodiments herein as including particular components elements feature functions operations or steps any of these embodiments may include any combination or permutation of any of the components elements features functions operations or steps described or illustrated anywhere herein that a person having ordinary skill in the art would comprehend. Furthermore reference in the appended claims to an apparatus or system or a component of an apparatus or system being adapted to arranged to capable of configured to enabled to operable to or operative to perform a particular function encompasses that apparatus system component whether or not it or that particular function is activated turned on or unlocked as long as that apparatus system or component is so adapted arranged capable configured enabled operable or operative.

