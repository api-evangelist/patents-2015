---

title: Image compression with alpha channel data
abstract: Techniques for a compressed image with alpha channel data are described. Encoded alpha channel data from a compressed image representation may be extracted. A common type pixel run characteristic may be determined for at least one common type pixel run represented in the encoded alpha channel data. A common alpha channel value is applied, based on the common type pixel run characteristic, to pixels in a decompressed image representation correlated to the at least one common type pixel run. Pixels in the decompressed image representation correlating to at least one lookup type pixel run represented in the encoded alpha channel data may be processed. The processing may include a determination of an alpha channel value based on pixel data, specific to a pixel correlated to the lookup type pixel run, in the encoded alpha channel data and an application of the alpha channel value to the pixel.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09479785&OS=09479785&RS=09479785
owner: Zynga Inc.
number: 09479785
owner_city: San Francisco
owner_country: US
publication_date: 20150420
---
This patent application is a continuation of U.S. patent application Ser. No. 14 150 528 filed on Jan. 8 2014 now U.S. Pat. No. 9 031 337 which is a continuation of U.S. patent application Ser. No. 13 435 651 filed on Mar. 30 2012 now U.S. Pat. No. 8 655 086 which claims the benefit of priority to U.S. Provisional Patent Application Ser. No. 61 554 158 filed on Nov. 1 2011 the benefit of priority of each of which is claimed hereby and each of which are incorporated by reference herein in its entirety.

Computer based image representations image representations may be used in a variety of computer applications including illustrations e.g. background characters symbols etc. to enhance a user s experience when using the computer applications. Image representations generally contain pixel display characteristics such as red green blue and alpha channel values that may be combined to render the pixel on for example a computer screen or printer. Alpha channel values generally indicate a transparency degree for a pixel e.g. a percentage of transparency from zero opaque to one hundred invisible . Including pixel transparency information e.g. via an alpha channel may permit foreground elements to implicitly include background elements e.g. viewing the background through a window pane increasing efficiency in creating visual elements as well as the user s visual experience.

As previously stated image representations may be used in a variety of computer applications to construct or supplement a user s visual experience with the computer application. When the computer application is served from a server machine e.g. in a client server architecture to a client machine over a network e.g. in a web based game the image representations used by the computer application are transmitted over the network. Detailed image representations e.g. high resolution images may consume a large amount of network bandwidth to transmit. In some games the loading time e.g. time between an initial user request to play the game and a point when the user may interact with the game may be adversely affected when a large number of detailed computer images are used by the application. However simply reducing the detail of the image representations e.g. by lowering the resolution may adversely affect the user s visual experience.

An example image compression method may provide a compressed image with alpha channel data. The compressed image may be produced by splitting color data e.g. red green and blue channels from the alpha channel of an original image representation. Pixel runs e.g. a set of contiguous pixels from the original image representation may be represented in encoded alpha channel data of a compressed image representation.

Pixel runs may be processed. Pixel run representations may include pixel run characteristic data. Common type pixel runs may be pixel runs in which members have a common alpha channel value. In an example the common alpha channel value is from a set of common alpha channel values with fewer members than the alpha channel values represented or possible in the original image representation. The common type alpha channel value may be represented by or in common type pixel run characteristic data.

Lookup type pixel runs may represent pixel runs whose member pixels have either varied alpha channel values e.g. at least two pixels have different alpha channel values or an alpha channel value that is not in the set of common alpha channel values. Lookup type pixel run characteristic data may include an indication that the pixel run is a lookup type pixel run. A lookup type pixel run may indicate that individual pixel alpha channel values will be looked up e.g. resolved for example from a palette. Alpha channel values or representations thereof may be encoded into pixel data in the encoded alpha channel data for each pixel in the lookup type pixel run.

In an example at least one of the common alpha channel value or the alpha channel value may be quantized e.g. reduced from the respective alpha channel values in the original image representation. In an example the palette may include a subset of the original image representation s possible alpha channel values e.g. all alpha channel values that may be represented by the original image representation . In an example palette may include fewer entries than the alpha channel values used in the original image representation. In an example the encoded alpha channel data as a whole may be compressed e.g. using a general purpose compression scheme such as DEFLATE . The color data may be encoded separately from the alpha channel data e.g. by using existing compression schemes such as that employed in the Joint Photographic Experts Group JPEG format and may be included in the compressed image representation.

Decompressing the compressed image representation may include extracting the encoded alpha channel data from the compressed image representation. Pixel runs may be processed. For common type pixel runs a common type pixel run characteristic may be determined and a common alpha channel value correlated to the common type pixel run characteristic may be applied to pixels in the decompressed image representation. When a lookup type pixel run is encountered pixel data correlated to the lookup type pixel run may be used to apply alpha channel values to the pixels in the decompressed image representation correlated to the lookup type pixel run. In an example the pixel data includes a palette entry index to resolve the alpha channel value with respect to a pixel. In an example the encoded alpha channel data is decompressed e.g. using INFLATE prior to extraction of the encoded alpha channel data from the compressed image representation. In an example encoded color data in the compressed image representation may be decoded and applied to the decompressed image representation.

The described compressed image representation may take advantage of existing non alpha channel capable image compression schemes while efficiently including alpha channel data. The alpha channel data may take advantage of large contiguous sets of pixels in the original image representation with the same alpha channel values e.g. runs of transparent or opaque pixels using pixel run representations and pixel run characteristic data. When individual pixel values are encoded data efficiency may be achieved via quantization or indexing such as with a palette. Thus efficient image representation with alpha channel values is achieved.

The system may include an encoding module . The encoding module may be configured to generate a representation of a common type pixel run in an encoded alpha channel data of a compressed image representation from a set of contiguous common alpha channel value pixels in an original image representation . In an example the members of the set of common contiguous alpha channel value pixels may share a common alpha channel value from a set of common alpha channel values. In an example the set of common alpha channel values may have fewer members than the number of possible original alpha channel values from the original image representation . Thus in this example not all contiguous pixel runs sharing the same alpha channel value are represented by a common type pixel run. In an example the set of common alpha channel values may consist of only opaque and transparent values so that only runs of opaque or transparent pixels may be represented by a common type pixel run. The representation of the common type pixel run may include a common type pixel run characteristic correlating to the common alpha channel value. Individual pixel alpha channel data is not separately encoded in the encoded alpha channel data .

The encoding module may be configured to generate a representation of a lookup type pixel run in the encoded alpha channel data from a set of contiguous lookup alpha channel value pixels in the original image representation . In a lookup type pixel run at least one member of the set of contiguous lookup alpha channel value pixels may either have an alpha channel value that is different than another member of the set e.g. not all members of the set have the same alpha channel value or even if all of the members have the same alpha channel value the alpha channel value is not in the set of common alpha channel values. The encoding module may be configured to represent the individual alpha channel data of the lookup type run pixels separately in encoded alpha channel data .

In an example the length e.g. stride of a pixel run represented in the encoded alpha channel data may be uniform e.g. global for every pixel run represented in the encoded alpha channel data including the common type pixel runs and the lookup type pixel runs. In an example the encoding module may be configured to select the length from a plurality of lengths. In an example the plurality of lengths may be 2 2 2 or 2pixels. In an example the encoding module may be configured to analyze the original image representation to determine the length for example based on a greater degree of data reduction between the original image representation and the compressed image representation . For example the encoding module may be configured to record the length of the pixel run in metadata of the encoded alpha channel data . In an example the encoding module may be configured to select variable lengths e.g. variance in length between pixel runs for each pixel run represented in encoded alpha channel data . The variable run lengths may be recorded in respective pixel run characteristics in metadata of the encoded alpha channel data or elsewhere in the encoded alpha channel data such that an individual pixel run s length may be correlated to the pixel run.

To encode the individual pixel data for a lookup type pixel run s associated pixels the encoding module may be configured to generate for each pixel in the set of lookup alpha channel value pixels pixel data in the encoded alpha channel data . The pixel data may include an alpha channel value representation of an alpha channel value correlating to the pixel.

In an example the encoding module may be configured to quantize the common alpha channel value to produce the common type pixel run characteristic. In an example the encoding module may be configured to quantize the alpha channel value to produce the alpha channel value representation. Quantization as used herein is the translation of one set of values e.g. all possible alpha channel values in the original image representation to a smaller set of values. For example if the original image representation could represent 2 256 alpha channel values the quantized set could represent 2 16 alpha channel values. A variety of techniques may be used to perform the translation including an analysis of the original image representation to determine significant alpha channel values simple rounding etc. In an example the alpha channel value representation may be an index to a palette in the encoded alpha channel data where the palette may contain the quantized alpha channel values.

In an example the encoding module may be configured to generate the palette. Generating the palette may include mapping original alpha channel values from the original image representation to palette entries e.g. via quantization . The number of palette entries may be smaller than the number of possible original alpha channel values. For example if the original image representation could support 256 alpha channel values but only 80 alpha channel values were used in the original image representation the palette could include 80 entries. In an example the number of palette entries is fewer than a number of original alpha channel values the number of original alpha channel values being a set of unique alpha channel values of the pixels of the original image representation . In this example referencing the previous example the number of palette entries is fewer than 80 such that a plurality of originally used alpha channel values are mapped to a single palette entry.

In an example the encoding module may be configured to separate color data from the original image representation from alpha channel data in the original image representation . The encoding module may also be configured to generate encoded color data in the compressed image representation . In an example the encoding module may encode the color data to create encoded color data . In an example the encoding module may enlist an external entity such as an application environment or operating system service to encode the color data. In an example the encoded color data may be in a JPEG format e.g. encoded into a JPEG format .

In an example the encoding module may include or may be communicatively coupled to a compression module . The compression module may configured to compress encoded alpha channel data to create compressed encoded alpha channel data .

In an example the encoding module may be configured to create update or otherwise modify compressed image representation metadata . The compressed image representation metadata may include any information about the compressed image representation including a header e.g. a string indicating the file type image width e.g. in pixels inches or other metric image height color data size e.g. the size in bits bytes or other metric of the color data and alpha data size. In an example the header width height color data size and alpha data size are each represented with four bytes.

The decoding module may be configured to decode the compressed image representation to produce the decompressed image representation . The decoding module may be configured to extract encoded alpha channel data from a compressed image representation . In an example the decoding module may include or be communicatively coupled to a decompression module . The decompression module may be configured to decompress e.g. using INFLATE compressed encoded alpha channel data in the compressed image representation .

The decoding module may be configured to determine for at least one common type pixel run represented in the encoded alpha channel data a common type pixel run characteristic. The decoding module may be configured to apply based the common type pixel run characteristic a common alpha channel value to pixels in a decompressed image representation correlated to a common type pixel run. For example given a first pixel run of eight pixels and a common type pixel run characteristic correlated to transparent e.g. 100 transparency the first eight pixels in the decompressed image representation will be assigned an alpha channel value of transparent. As with encoding individual pixel data is not used when processing a common type pixel run represented in the encoded alpha channel data .

For lookup type pixel runs represented in the encoded alpha channel data the decoding module may be configured to process pixels in the decompressed image representation correlated to a lookup type pixel run represented in the encoded alpha channel data . In an example the decoding module may be configured to perform this process e.g. processing the pixels by for each pixel in the decompressed image representation correlated to the at least one lookup type pixel run determine an alpha channel value based on pixel data specific to the pixel in the encoded alpha channel data and apply the alpha channel value to the pixel. In an example the decoding module can be configured to determine the alpha channel value by reference to a palette with the pixel data e.g. the pixel data includes an index to an entry of the palette . In an example the palette may be in the encoded alpha channel data .

In an example a pixel run length is uniform e.g. the same for every pixel run represented in the encoded alpha channel data such as common type pixel runs and the lookup type pixel runs. In such a case an image may be divided into a plurality or runs or subsets of uniform length of size and each run may be assessed to determine whether it is a common type pixel run or whether it is a lookup type pixel run. In an example the decoding module may be configured to extract the length of the pixel run from metadata in the encoded alpha channel data . In an example the pixel runs may be variable as described above. In this example the decoding module may be configured to extract individual pixel run lengths from the metadata of the encoded alpha channel data pixel run characteristic data or any other data where the length may be correlated to the particular pixel run.

In an example the decoding module may be configured to extract encoded color data from the compressed image representation . The encoded color data may be separate from the encoded alpha channel data in the compressed image representation . In an example decoding module may be configured to apply e.g. decode the extracted color data to the decompressed image representation . In an example the encoded color data is in a JPEG format. In an example the decoding module may be configured to apply the color data to the decompressed image representation by for example passing the color data to an application environment facility e.g. an Adobe Flash client side execution environment to decode and populate color information of the decompressed image representation .

Although represents the decompressed image representation it only differs in terms of the illustrated alpha channel values from the original image representation in the possible quantization of alpha channel values. That is the illustrated pixel runs may operate substantially the same in creating the compressed image representation from the original image representation as they do in creating the decompressed image representation from the compressed image representation .

The encoded alpha channel data may include encoded alpha channel data metadata pixel run characteristic data and pixel data . In an example the encoded alpha channel data may include a palette .

The pixel run characteristic data is shown with commas between individual pixel run characteristic data however such delineations may not be used in practice. For example if the various pixel run characteristic data are encoded with a fixed number of bits or for example with prefix codes e.g. using Huffman or arithmetic coding individual pixel runs may be determined without such delineations. In the illustrated example a common type pixel run characteristic datum of 0 is associated with the common alpha channel value of transparent and 10 with opaque. The lookup type pixel run characteristic datum is represented by 11 . Thus while reading the pixel run characteristic data when a 0 is encountered the next bit represents a new pixel run. Further a third bit represents a new pixel run when a 0 is not encountered e.g. in the case of 11 . In an example a prefix code may be used such as 0 transparent 10 opaque and 110 lookup. In an example a greater number of codes may be used to represent a greater number of common type pixel runs thus reducing the use of the pixel data . In an example variable length codes may be chosen for common alpha channel values such that shorter codes are associated with more commonly occurring common alpha channel values. Statistical analysis may be used to rank common alpha channel values by their likelihood of occurrence.

In an example the encoded alpha channel data metadata may include a field of the size e.g. in bits bytes etc. of the pixel run characteristic data . In an example the pixel run characteristic data size field is four bytes. In an example the encoded alpha channel data metadata may include a field of the size e.g. in bits bytes etc. of the pixel data . In an example the pixel data size field is four bytes. In an example the encoded alpha channel data metadata may include a field of the size e.g. in bits bytes etc. of the palette . In an example the palette size field is four bytes.

Thus in this example the first four pixel run characteristic data correlate to the pixel runs and illustrated in . No other information is needed to recreate those pixel runs than the illustrated pixel run characteristics. The fifth pixel run characteristic datum 00 however represents a lookup type pixel run. Here the pixel data again delineated with commas for clarity only may be used to determine the alpha channel values for pixels in the pixel run of . Each illustrated pixel datum is uniquely correlated e.g. by its order in sequence to a pixel in the pixel run . The value of each pixel datum is an index e.g. coordinate to an entry of the palette . Upon reading a pixel datum for example the first the correlated alpha channel value in this case ALPHA VALUE 4 may be retrieved e.g. resolved determined etc. and applied to the first pixel in the pixel run . This procedure may be repeated for each of the remaining pixels of the pixel run represented in the pixel data .

Elements described above may be used in any combination with additional elements e.g. components systems etc. or not at all to perform the operations of the method examples described below.

At operation a representation of a common type pixel run e.g. the pixel run may be generated in an encoded alpha channel data of a compressed image representation from a set of contiguous common alpha channel value pixels in an original image representation . Members of the set of common contiguous alpha channel value pixels may share a common alpha channel value in a set of common alpha channel values. The representation of the common type pixel run may include a common type pixel run characteristic correlating to the common alpha channel value. In an example the set of common alpha channel values may consist of opaque and transparent alpha channel values.

At operation a representation of a lookup type pixel run may be generated in the encoded alpha channel data from a set of contiguous lookup alpha channel value pixels in the original image representation where at least one member of the set of contiguous lookup alpha channel value pixels has either an original alpha channel value that is different than another member of the set of contiguous lookup alpha channel value pixels or not in the set of common alpha channel values. This is as described above with respect to .

At operation for each pixel in the set of lookup alpha channel value pixels pixel data may be generated in the encoded alpha channel data . In an example the pixel data may include an alpha channel value representation of an alpha channel value correlating to the pixel.

In an example at least one of the common alpha channel value or the alpha channel value is quantized to respectively produce the common type pixel run characteristic or the alpha channel value representation. Quantization may occur as described above with respect to . In an example the alpha channel value representation may be an index to a palette in the encoded alpha channel data . In an example the palette may be generated by mapping original alpha channel values from the original image representation to palette entries. In an example the number of palette entries may be fewer than the number of possible original alpha channel values. In an example the number of palette entries may be fewer than the number of original alpha channel values e.g. used in the original image representation where the number of original alpha channel values are the set of unique alpha channel values of the pixels of the original image representation .

In an example the encoded alpha channel data may be compressed e.g. using DEFLATE to create compressed encoded alpha channel data .

In an example the length of a pixel run represented in the encoded alpha channel data may be uniform e.g. the same for every pixel run represented in the encoded alpha channel data including the common type pixel run and the lookup type pixel run. In an example the length of the pixel run may be selected from a plurality of lengths based on for example a greater degree of data reduction between the original image representation and the compressed image representation as described above with respect to . In an example the length of the pixel run may be recorded in metadata of the encoded alpha channel data . In an example as described above the length of variable pixel runs may be recorded throughout the encoded alpha channel data such that it may be uniquely correlated to a pixel run.

In an example color data from the original image representation may be separated from alpha channel data in the original image representation .

In an example encoded color data may be generated in the compressed image representation by encoding the separated color data to create the encoded color data . In an example the encoded color data is in a JPEG format.

At operation extracting encoded alpha channel data may be extracted from a compressed image representation . In an example encoded color data from the compressed image representation may be extracted. In an example the color data e.g. after extraction and decoding may be applied to the decompressed image representation . In an example applying the color data to the decompressed image representation may include passing the color data to an application environment facility to decode and populate color information of the decompressed image representation . In an example encoded color data may be in a JPEG format. In an example extracting encoded alpha channel data may include decompressing compressed encoded alpha channel data in the compressed image representation . In an example INFLATE is used to decompress the compressed encoded alpha channel data .

At operation a common type pixel run characteristic may be determined for at least one common type pixel run represented in the encoded alpha channel data .

At operation based the common type pixel run characteristic a common alpha channel value may be applied to pixels in a decompressed image representation correlating to the at least one common type pixel run.

At operation pixels in the decompressed image representation correlating to at least one lookup type pixel run represented in the encoded alpha channel data may be processed. Processing of the individual pixels may include performing operations and until each pixel in the decompressed image representation correlated to the lookup type pixel run has had an alpha channel value assigned.

At operation for the current pixel e.g. the pixel currently being processed an alpha channel value based on pixel data specific to the pixel in the encoded alpha channel data may be determined.

At operation the determined alpha channel value may be applied to the pixel. If there are additional pixels correlated to the lookup type pixel run return to operation to process the next pixel as the current pixel. Otherwise end the individual pixel processing for this lookup type pixel run. Additional pixel runs may continue to be processed until there are no more pixel run representations in the encoded alpha channel data . In an example determining the alpha channel value may include referencing a palette with the pixel data . In an example the palette may be in the encoded alpha channel data .

In an example a length of a pixel run represented in the encoded alpha channel data may be uniform for every pixel run represented in the encoded alpha channel data including the common type pixel run and the lookup type pixel run. In an example the length of the pixel run may be extracted from encoded alpha channel data metadata in the encoded alpha channel data .

An advantage of the above described image compression method is that benefits of using alpha channel data are provided while achieving significant compression to for example reduce network bandwidth reduce latency in transmitted the image and reduce storage space required to store the image representation. The resultant compressed image representation therefore includes alpha channel data which is not included in some popular image compression systems such as for example the Joint Photographic Experts Group JPEG formats while providing superior compression to popular compression systems that support alpha channels such as e.g. Portal Network Graphics PNG formats.

Embodiments may operate in a wide area network environment such as the Internet including multiple network addressable systems. illustrates an example network environment in which various example embodiments may operate. The network environment may include a network cloud that generally represents one or more interconnected networks over which the systems and hosts described herein may communicate. The network cloud may include packet based wide area networks such as the Internet private networks wireless networks satellite networks cellular networks paging networks and the like. As illustrates particular embodiments may operate in the network environment comprising one or more networking systems such as a social networking system a game networking system and one or more client systems . The components of the social networking system and the game networking system operate analogously as such hereinafter they may be referred to simply as the networking system . The client systems are operably connected to the network environment via a network service provider a wireless carrier or any other suitable means.

The networking system is a network addressable system that in various example embodiments comprises one or more physical servers and data stores . The one or more physical servers are operably connected to network cloud via by way of example a set of routers and or networking switches . In an example embodiment the functionality hosted by the one or more physical servers may include web or HTTP servers FTP servers as well as without limitation web pages and applications implemented using Common Gateway Interface CGI script PHP Hyper text Preprocessor PHP Active Server Pages ASP HyperText Markup Language HTML Extensible Markup Language XML Java JavaScript Asynchronous JavaScript and XML AJAX Flash ActionScript and the like.

The network environment may include physical servers that may host functionality directed to the operations of the networking system . Hereinafter the servers may be referred to as the server although the server may include numerous servers hosting for example the networking system as well as other content distribution servers data stores and databases. The network environment may also include a data store that may store content and data relating to and enabling operation of the networking system as digital data objects. A data object in particular embodiments is an item of digital information typically stored or embodied in a data file database or record. Content objects may take many forms including text e.g. ASCII SGML HTML images e.g. jpeg tif and gif graphics vector based or bitmap audio video e.g. mpeg or other multimedia and combinations thereof. Content object data may also include executable code objects e.g. games executable within a browser window or frame podcasts etc. Logically the data store corresponds to one or more of a variety of separate and integrated databases such as relational databases and object oriented databases that maintain information as an integrated collection of logically related records or files stored on one or more physical systems. Structurally data store may generally include one or more of a large class of data storage and management systems. In particular embodiments the data store may be implemented by any suitable physical system s including components such as one or more database servers mass storage media media library systems storage area networks data storage clouds and the like. In one example embodiment data store includes one or more servers databases e.g. MySQL and or data warehouses. The data store may include data associated with different networking system users and or client systems .

The client system is generally a computer or computing device including functionality for communicating e.g. remotely over a computer network . The client system may be a desktop computer laptop computer personal digital assistant PDA in or out of car navigation system smart phone or other cellular or mobile phone or mobile gaming device among other suitable computing devices. The client system may execute one or more client applications such as a web browser e.g. Microsoft Internet Explorer Mozilla Firefox Apple Safari Google Chrome and Opera to access and view content over a computer network . In particular embodiments the client applications allow a user of the client system to enter addresses of specific network resources to be retrieved such as resources hosted by the networking system . These addresses may be URLs and the like. In addition once a page or other resource has been retrieved the client applications may provide access to other pages or records when the user clicks on hyperlinks to other resources. By way of example such hyperlinks may be located within the web pages and provide an automated way for the user to enter the URL of another page and to retrieve that page.

A web page or resource embedded within a web page which may itself include multiple embedded resources may include data records such as plain textual information or more complex digitally encoded multimedia content such as software programs or other code objects graphics images audio signals videos and so forth. One prevalent markup language for creating web pages is the HyperText Markup Language HTML . Other common web browser supported languages and technologies include the Extensible Markup Language XML the Extensible Hypertext Markup Language XHTML JavaScript Flash ActionScript Cascading Style Sheets CSS and frequently Java. By way of example HTML enables a page developer to create a structured document by denoting structural semantics for text and links as well as images web applications and other objects that may be embedded within the page. Generally a web page may be delivered to a client as a static document however through the use of web elements embedded in the page an interactive experience may be achieved with the page or a sequence of pages. During a user session at the client the web browser interprets and displays the pages and associated resources received or retrieved from the website hosting the page as well as potentially resources from other websites.

When a user at the client system desires to view a particular web page hereinafter also referred to as target structured document hosted by the networking system the user s web browser or other document rendering engine or suitable client application formulates and transmits a request to the networking system . The request generally includes a URL or other document identifier as well as metadata or other information. By way of example the request may include information identifying the user such as a user ID as well as information identifying or characterizing the web browser or operating system running on the user s client system . The request may also include location information identifying a geographic location of the user s client system or a logical network location of the user s client system . The request may also include a timestamp identifying when the request was transmitted.

Although the example network environment described above and illustrated in is described with respect to the social networking system and the game networking system this disclosure encompasses any suitable network environment using any suitable systems. As an example and not by way of limitation the network environment may include online media systems online reviewing systems online search engines online advertising systems or any combination of two or more such systems.

The elements of hardware system are described in greater detail below. In particular the network interface provides communication between the hardware system and any of a wide range of networks such as an Ethernet e.g. IEEE 802.3 network a backplane etc. The mass storage provides permanent storage for the data and programming instructions to perform the above described functions implemented in the servers of whereas the system memory e.g. DRAM provides temporary storage for the data and programming instructions when executed by the processor . The I O ports are one or more serial and or parallel communication ports that provide communication between additional peripheral devices which may be coupled to the hardware system .

The hardware system may include a variety of system architectures and various components of the hardware system may be rearranged. For example the cache memory may be on chip with the processor . Alternatively the cache memory and the processor may be packed together as a processor module with the processor being referred to as the processor core. Furthermore certain embodiments of the present disclosure may not include all of the above components. For example the peripheral devices shown coupled to the standard I O bus may couple to the high performance I O bus . In addition in some embodiments only a single bus may exist with the components of the hardware system being coupled to the single bus. Furthermore the hardware system may include additional components such as additional processors storage devices or memories.

An operating system manages and controls the operation of the hardware system including the input and output of data to and from software applications not shown . The operating system provides an interface between the software applications being executed on the hardware system and the hardware components of the hardware system . Any suitable operating system may be used such as the LINUX Operating System the Apple Macintosh Operating System available from Apple Computer Inc. of Cupertino Calif. UNIX operating systems Microsoft Windows operating systems BSD operating systems and the like. Of course other embodiments are possible. For example the functions described herein may be implemented in firmware or on an application specific integrated circuit.

Furthermore the above described elements and operations may be comprised of instructions that are stored on non transitory storage media. The instructions may be retrieved and executed by a processing system. Some examples of instructions are software program code and firmware. Some examples of non transitory storage media are memory devices tape disks integrated circuits and servers. The instructions are operational when executed by the processing system to direct the processing system to operate in accord with the disclosure. The term processing system refers to a single processing device or a group of inter operational processing devices. Some examples of processing devices are integrated circuits and logic circuitry. Those skilled in the art are familiar with instructions computers and storage media.

Certain embodiments are described herein as including logic or a number of components modules or mechanisms. Modules may constitute either software modules e.g. code embodied 1 on a non transitory machine readable medium or 2 in a transmission signal or hardware implemented modules. A hardware implemented module is a tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments one or more computer systems e.g. a standalone client or server computer system or one or more processors may be configured by software e.g. an application or application portion as a hardware implemented module that operates to perform certain operations as described herein.

In various embodiments a hardware implemented module may be implemented mechanically or electronically. For example a hardware implemented module may comprise dedicated circuitry or logic that is permanently configured e.g. as a special purpose processor such as a field programmable gate array FPGA or an application specific integrated circuit ASIC to perform certain operations. A hardware implemented module may also comprise programmable logic or circuitry e.g. as encompassed within a general purpose processor or other programmable processor that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a hardware implemented module mechanically in dedicated and permanently configured circuitry or in temporarily configured circuitry e.g. configured by software may be driven by cost and time considerations.

Accordingly the term hardware implemented module should be understood to encompass a tangible entity be that an entity that is physically constructed permanently configured e.g. hardwired or temporarily or transitorily configured e.g. programmed to operate in a certain manner and or to perform certain operations described herein. Considering embodiments in which hardware implemented modules are temporarily configured e.g. programmed each of the hardware implemented modules need not be configured or instantiated at any one instance in time. For example where the hardware implemented modules comprise a general purpose processor configured using software the general purpose processor may be configured as respective different hardware implemented modules at different times. Software may accordingly configure a processor for example to constitute a particular hardware implemented module at one instance of time and to constitute a different hardware implemented module at a different instance of time.

Hardware implemented modules may provide information to and receive information from other hardware implemented modules. Accordingly the described hardware implemented modules may be regarded as being communicatively coupled. Where multiple of such hardware implemented modules exist contemporaneously communications may be achieved through signal transmission e.g. over appropriate circuits and buses that connect the hardware implemented modules . In embodiments in which multiple hardware implemented modules are configured or instantiated at different times communications between such hardware implemented modules may be achieved for example through the storage and retrieval of information in memory structures to which the multiple hardware implemented modules have access. For example one hardware implemented module may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware implemented module may then at a later time access the memory device to retrieve and process the stored output. Hardware implemented modules may also initiate communications with input or output devices and may operate on a resource e.g. a collection of information .

The various operations of example methods described herein may be performed at least partially by one or more processors that are temporarily configured e.g. by software or permanently configured to perform the relevant operations. Whether temporarily or permanently configured such processors may constitute processor implemented modules that operate to perform one or more operations or functions. The modules referred to herein may in some example embodiments comprise processor implemented modules.

Similarly the methods described herein may be at least partially processor implemented. For example at least some of the operations of a method may be performed by one or processors or processor implemented modules. The performance of certain of the operations may be distributed among the one or more processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the processor or processors may be located in a single location e.g. within a home environment an office environment or as a server farm while in other embodiments the processors may be distributed across a number of locations.

The one or more processors may also operate to support performance of the relevant operations in a cloud computing environment or as a software as a service SaaS . For example at least some of the operations may be performed by a group of computers as examples of machines including processors with these operations being accessible via a network e.g. the Internet and via one or more appropriate interfaces e.g. Application Programming Interfaces APIs . 

One or more features from any embodiment may be combined with one or more features of any other embodiment without departing from the scope of the disclosure. For example the methods game features and game mechanics described herein may be implemented using hardware components software components and or any combination thereof. By way of example while embodiments of the present disclosure have been described as operating in connection with a networking website various embodiments of the present disclosure may be used in connection with any communications facility that supports web applications. Furthermore in some embodiments the term web service and website may be used interchangeably and additionally may refer to a custom or generalized API on a device such as a mobile device e.g. cellular phone smart phone personal GPS personal digital assistance personal gaming device etc. that makes API calls directly to a server. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense.

