---

title: Systems, methods, and computer-readable media for secure digital communications and networks
abstract: Provided are system, methods, and computer-readable media for systems, methods, and computer-readable media for secure digital communications and networks. The system provides for secure communication between nodes through the use of a subscription between two nodes based on unique identifiers that are unique to each node, and communication between nodes without a subscription may be blocked. Additionally, secure communications between a node and a remote node are dynamically encrypted using asymmetric and symmetric encryption. The encryption algorithms and key lengths may be changed at each subsequent negotiation between a node and a remote node.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09497174&OS=09497174&RS=09497174
owner: 
number: 09497174
owner_city: 
owner_country: 
publication_date: 20150909
---
The present application is a continuation of U.S. patent application Ser. No. 14 494 007 filed Sep. 23 2014 which is a continuation of U.S. patent application Ser. No. 13 828 760 filed Mar. 14 2013 which claims the benefit of U.S. Provisional Patent Application No. 61 621 347 filed on Apr. 6 2012. Each of these parent patent applications is hereby incorporated by reference in its entirety.

This invention relates generally to digital networks and more particularly to securing such networks and providing secure communications between entities of such networks.

The Internet has become increasingly complex leaving many entities that use the Internet and other networks vulnerable to malicious attacks. Business government infrastructure and military or other organizations around the world rely on static encryption technology to secure their critical communications of important and sensitive information. However networks and devices that use static encryption are ineffective at creating a secure channel for communication because they may be unable to determine if the static encryption has been compromised or changed. Additionally alternatives such as virtual private networks VPN require a large amount of processing power to create and communicate over a secure channel. Moreover the work required to maintain security and resolve security breaches of networks and devices may be expensive and time consuming.

Various embodiments of systems methods and computer readable media for secure digital communications and networks are provided herein. In some embodiments a computer implemented method is provided that includes receiving at a processor a first packet at a first node of a network and determining by a processor whether a subscription exists between the first node and a second node associated with the packet wherein the subscription includes a predefined relationship between the first node and the second node. The method further includes dropping by the processor the packet if no subscription exists and performing by the processor an authentication of a connection between the first node and the second node if the subscription exists. The authentication includes sending a unique identifier from the first node to the second node the unique identifier comprising a node identifier associated with the first node a fingerprint identifier associated with the first node and a subscription identifier associated with the subscription. Additionally the method includes performing by the processor a first synchronization of the connection between the first node and the second node if the subscription exists. The first synchronization includes receiving a first request from the second node for a first asymmetric public key and generating a first asymmetric public key and a first asymmetric private key each having a first asymmetric key length using a first encryption algorithm. Additionally the first synchronization also includes sending the first asymmetric public key to the second node and receiving an encrypted first symmetric key from the second node the first symmetric key encrypted using the first asymmetric public key and the first symmetric key generated using a second encryption algorithm and decrypting the first encrypted symmetric key to obtain the first symmetric key. Additionally the computer implemented method also includes encrypting the first packet using the first symmetric key sending over the network the first packet to the second node and performing by the processor a second synchronization of the connection between the first node and the second node if the subscription exists. The second synchronization includes receiving a second request from the second node for a second asymmetric public key and generating a second asymmetric public key and a second asymmetric private key each having a second asymmetric key length using a third encryption algorithm the third encryption algorithm different from the first encryption algorithm and the second asymmetric key length different from the first asymmetric key length. The second synchronization also includes sending the second asymmetric public key to the second node and receiving an encrypted second symmetric key from the second node the second symmetric key encrypted using the first asymmetric public key and the second symmetric key having a second symmetric key length generated using a fourth encryption algorithm the fourth encryption algorithm different from the second encryption algorithm and the second symmetric key length different from the first symmetric key length. Additionally the second synchronization also includes decrypting the encrypted second symmetric key to obtain a second symmetric key. Further the computer implemented method includes encrypting a data of a second packet using the symmetric key.

In another embodiment a non transitory tangible computer readable storage medium having executable computer code stored thereon for secure communications on a digital network is provided. The computer code includes a set of instructions that causes one or more processors to perform the following operations receiving at a processor a first packet at a first node of a network and determining by a processor whether a subscription exists between the first node and a second node associated with the packet wherein the subscription includes a predefined relationship between the first node and the second node. The computer code further includes a set of instructions that causes one or more processors to perform the following operations dropping by the processor the packet if no subscription exists and performing by the processor an authentication of a connection between the first node and the second node if the subscription exists. The authentication includes sending a unique identifier from the first node to the second node the unique identifier comprising a node identifier associated with the first node a fingerprint identifier associated with the first node and a subscription identifier associated with the subscription. Additionally the computer code also includes a set of instructions that causes one or more processors to perform the following operations performing by the processor a first synchronization of the connection between the first node and the second node if the subscription exists. The first synchronization includes receiving a first request from the second node for a first asymmetric public key and generating a first asymmetric public key and a first asymmetric private key each having a first asymmetric key length using a first encryption algorithm. Additionally the first synchronization also includes sending the first asymmetric public key to the second node and receiving an encrypted first symmetric key from the second node the first symmetric key encrypted using the first asymmetric public key and the first symmetric key generated using a second encryption algorithm and decrypting the first encrypted symmetric key to obtain the first symmetric key. Additionally the computer code also includes a set of instructions that causes one or more processors to perform the following operations encrypting the first packet using the first symmetric key sending over the network the first packet to the second node and performing by the processor a second synchronization of the connection between the first node and the second node if the subscription exists. The second synchronization includes receiving a second request from the second node for a second asymmetric public key and generating a second asymmetric public key and a second asymmetric private key each having a second asymmetric key length using a third encryption algorithm the third encryption algorithm different from the first encryption algorithm and the second asymmetric key length different from the first asymmetric key length. The second synchronization also includes sending the second asymmetric public key to the second node and receiving an encrypted second symmetric key from the second node the second symmetric key encrypted using the first asymmetric public key and the second symmetric key having a second symmetric key length generated using a fourth encryption algorithm the fourth encryption algorithm different from the second encryption algorithm and the second symmetric key length different from the first symmetric key length. Additionally the second synchronization also includes decrypting the encrypted second symmetric key to obtain a second symmetric key. Further the computer code also includes a set of instructions that causes one or more processors to perform the following operations encrypting a data of a second packet using the symmetric key.

In another embodiment a system for secure communications on a digital network is provided. The system includes a management server coupled to the network wherein the management server includes a first non transitory machine readable memory the memory comprising a plurality of subscriptions a plurality of node identifiers and a plurality of encryption algorithms and a plurality of nodes coupled to a network. Each node includes a fingerprint identifier associated with the node a node identifier of the plurality of node identifiers that is associated with the node and a subscription of the plurality of subscriptions the subscription defining a relationship between a node and another node to enable secure communications between the nodes. Each node further includes a processor and a second tangible non transitory machine readable memory having computer code stored thereon. The computer code includes a set of instructions that when executed by the processor cause the processor to perform the following operations performing by the processor a synchronization of the connection between the first node and the second node. The synchronization includes receiving a request from the second node for an asymmetric public key and generating an asymmetric public key and an asymmetric private key each having a first asymmetric key length using a selected asymmetric encryption algorithm. The synchronization also includes sending the asymmetric public key to the second node and receiving an encrypted symmetric key from the second node the symmetric key encrypted using the public key and the symmetric key generated using a selected symmetric encryption algorithm. Additionally the synchronization includes decrypting the encrypted symmetric key to obtain a symmetric key. The computer code also includes a set of instructions that causes one or more processors to perform the following operations encrypting data of the packet using the symmetric key.

While the invention is susceptible to various modifications and alternative forms specific embodiments thereof are shown by way of example in the drawings and will herein be described in detail. The drawings may not be to scale. It should be understood however that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed but to the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims.

As discussed in more detail below provided in some embodiments are systems methods and computer readable media for secure digital communications and networks. A system may include one or more nodes and a management server. The system provides for secure communication between nodes through the use of a subscription between two nodes based on unique identifiers that are unique to each node and communication between nodes without a subscription may be blocked. The unique identifier for a node may include a node identifier a fingerprint identifier based on a hardware factor and a subscription identifier. Additionally a subscription may also define various secure communication parameters for communication between two nodes. Inbound and outbound communications e.g. packets are logged and the packets are dropped if no subscription exists. If a subscription exists the packet is further processed.

Secure communications between a node and a remote node are dynamically encrypted using asymmetric and symmetric encryption. If a subscription exists between a node and a remote node a connection between the nodes is then authenticated and synchronized negotiated . The synchronization may include the generation of asymmetric keys e.g. a public key and a private key for exchanging a symmetric key. The symmetric key is used for encrypting secure communications between a node and a remote node. Additionally the encryption algorithm used for generating the asymmetric keys the asymmetric key length the encryption algorithm used for generating the symmetric key the symmetric key length or any combination thereof may be different in each subsequent negotiation. Each node of a connection may request renegotiation based on renegotiation criteria such as a time period a number of packets received or sent the amount of data received or sent or other criteria.

The network may implement any suitable technology standards and protocols that are suitable for use with the secure communications techniques described herein. For example in some embodiments the network may use Ethernet Wireless Fidelity Wi Fi e.g. IEEE 802.11 standards Internet Protocol IP Transmission Control Protocol TCP NetBios Internetwork Packet Exchange IPX or other suitable technologies standards and protocols. Additionally it should be appreciated that the nodes may include suitable network interface hardware for communication over the network .

The secure network system provides for secure communication between nodes through the use of a subscription between two nodes based on unique identifiers that are unique to each node. As used herein the term subscription refers to a defined relationship between two nodes wherein each node retains information to provide identifying digital communications. A subscription may also define various secure communication parameters for communication between two nodes such as the number of encryption algorithms used in communication the types of encryption algorithms used in communications the key lengths used in communications the key length increments used in communications renegotiation criteria and the like.

As described below each node and the management server may include a secure communications program that enables the secure network system and secure communications between nodes. The subscriptions may be defined between each node based on unique identifiers for each node. The management server may enable management of the secure network system such as by providing for definitions of subscriptions identified by subscription identifiers generation of node identifiers removal of subscriptions removal of node identifiers and so on. For example a subscription may be defined between nodes A and C. Thus node A may send and receive secure communications to and from node B and node B may send and receive secure communications to and from node A. As described further below the inbound and outbound communications between node A and node B are secured using encryption algorithms and keys. Moreover because node A does not have subscriptions defined with regards to nodes C and D any inbound or outbound communications between node A and node C or node D are blocked as described below.

Similarly as shown in a subscription may be defined between nodes C and nodes D. Here again the subscription enables nodes C and node D to send and receive secure communications between each other. However any communications between node C and node A or node B are blocked because there is no defined subscription between these nodes. Additionally any communications between nodes D and node A or node B is blocked because there is no defined subscription between these nodes. As described above in some embodiments a computer may be defined as multiple nodes. Thus a computer may be defined as a first node having one or more subscriptions to other nodes of the system and as a second node having one or more different subscriptions to other nodes of the system .

To enable configuration of the secure network system a subscription may be defined between each node and the management server . In some embodiments these subscriptions may be defined during configuration of the management server and creation of the nodes . The subscription between each node and the management server may enable for various configuration information to be securely communicated between each node and the management server . Moreover the management server may access data stored on each node such as logs identifiers subscriptions and other data. In some embodiments the management server may provide for subdividing the network system into subsystems having subsets of nodes.

In some embodiments the central management server may be used to define and store subscriptions identifiers and other information suitable for management of the system . The central management server may include suitable data structures for storage of such data such as one or more databases. In some embodiments the unique identifier for each node may include three identifiers a node identifier generated by the management server a fingerprint identifier generated at the node using a hardware factor and a subscription identifier that pairs the node to another node. The node identifier may be created by the management server either automatically or manually e.g. with input from an administrator . As mentioned above a computer of the system may be assigned one two or more node identifiers. The fingerprint identifier may be unique to the hardware of each node based on a hardware factor. As will be appreciated the hardware factor may identify a unique hardware configuration of a node e.g. a unique combination of a processor memory motherboard hard drive graphics processing unit GPU other hardware or combination thereof . The unique fingerprint identifier for a node is thus generated based on the unique hardware factor. The subscription identifier identifies a subscription between a node and another node. Thus it should be appreciated that the unique identifiers described above are independent of the addressing used by the network e.g. IP addresses . Thus the secure communications described herein may work in combination with typical networking and transport protocols such as TCP IP.

In some embodiments the system may have the capability of providing access to other networks such as the Internet . In such embodiments another node may act as a gateway to the Internet or any other network. However in accordance with the secure communications described herein a node of the system may only communicate with the gateway via a subscription. Accordingly a node may not have access to the gateway and thus the Internet unless a subscription is defined between the node and the gateway.

Additionally in some embodiments secure communications between the nodes and the management server of the system may use a specific message structure. Thus although the secure communications are dynamically encrypted according to the techniques described below the specific message structure may provide another technique for securing communications between nodes as a receiving node will be unable to unscramble and read a message having the specific message structure unless the receiving node implements the secure communications described herein.

Next the existence of a subscription between the packet ongm and the node is determined decision block . As described above a subscription is defined between two nodes to enable secure communication between the nodes. If no subscription exists line the packet is dropped block and the drop may be logged block . In such instances no communication is sent to the originator of the packet that the packet was received dropped or otherwise acknowledged. If a subscription exists line the packet is processed block . As described further below the processing of an inbound packet may include decrypting the packet using keys generating during the negotiation between nodes e.g. between the originator of the packet and the receiving node having a defined subscription.

If a subscription exists that enables processing of the packet line then the connection is tested to determine if the connection is authenticated decision block . The authentication includes making a request to a remote node and sending identifying information about the node e.g. a unique identifier that may include the node identifier the fingerprint identifier and the subscription identifier . The authentication may also include recelvmg identifying information e.g. a unique identifier that may include the node identifier the fingerprint identifier and the subscription identifier from the remote node and determining that the received information matches the information for the subscription with the remote node.

If the connection is authenticated line the connection is evaluated to determine if the connection is synchronized block . The synchronization also referred to as negotiation may include exchanging identifying information and as described below generating the keys used for secure communications between nodes. If the connection is determined to be synchronized line the packet encryption is processed block such as by encryption or decrypting the packet data as described further below. If the connection is not synchronized line the connection may be synchronized block .

If the connection is not authenticated line the packet may be queued block and the connection may be authenticated block . The authentication attempt may be evaluated to determine if the authentication is successful decision block . If the authentication is not successful line the packet is dropped block . If the authentication is successful and the connection is authenticated line the connection may then be synchronized block . The synchronization attempt may be evaluated to determine if the synchronization is successful decision block . If the synchronization is not successful line the packet is dropped block . If the synchronization is successful line any queued packets are processed block . As mentioned above the packet encryption is then processed block .

If a packet is cleared for processing the packet is evaluated to determine if the packet is inbound e.g. received at the node or outbound e.g. sent from the node decision block . If the packet is inbound line then the inbound packet payload i.e. the data portion of the packet is obtained block and decrypted using a symmetric key block that was obtained during the synchronization process. If the packet is outbound line then the outbound packet payload is obtained block and then encrypted using a symmetric key that was obtained during synchronization block . The obtaining of the symmetric key is described further below in the discussion of . After the packet data has been decrypted or encrypted the packet is then processed according to the information associate with the packet block . For example if the packet is an outbound packet the packet is provided to the appropriate layer for sending from the node to the remote node. If the packet is an inbound packet the packet is provided to the appropriate layer for further processing by the node.

As described above secure communications between nodes having a defined subscription are dynamically encrypted for outbound packets and decrypted for inbound packets . illustrate further details of the synchronization also referred to as or as a part of negotiation between nodes to generate keys for secure communication according to an embodiment of the present invention. The key generation may be performed whenever a connection is negotiated between two nodes and the generated keys may be used until the connection is renegotiated. The dynamic encryption may use any number of suitable encryption algorithms. Such encryption algorithms may include for example RSA DES Triple DES RC2 AES and ASBE.

Next node B receives the request for synchronization block . In response node B may request a public key from node A block . Node A may receive the request for a public key and generate a public key and private key also referred to as asymmetric keys block according to an algorithm and then may transmit the public key to node B block . Node B receives the public key and generates a symmetric key block . The symmetric key is then encrypted using the public key block and the encrypted symmetric key is sent to node B block .

As shown in node A receives the encrypted symmetric key block and decrypts the symmetric key using the private key block and the appropriate algorithm. After node A decrypts the symmetric key the symmetric key is available for node A and node B to process packets block . For example node A may encrypt a packet for transmission to node B using the symmetric key and node B may decrypt the packet received from node A using the symmetric key. Similarly as described above in packets may be queued during negotiation of the connection and generation of the keys. Node A or node B may then encrypt or decrypt outbound or inbound queued packets accordingly.

The synchronization negotiation process described above and illustrated in may occur at every negotiation of the connection between nodes of the secure network system described herein. Either node of a connection may initiate a negotiation. In such embodiments each node may have different renegotiation criteria for renegotiation of a connection. The renegotiation criteria may be defined on a per node basis or a per subscription basis. The renegotiation criteria may be based on a time limit e.g. 5 seconds or greater 10 seconds or greater 15 seconds or greater 20 seconds or greater 30 seconds or greater 1 minute or greater and so on the number of packets sent or received the amount of data sent or received or any combination thereof. For example node A referred to in may be configured to renegotiate a connection every 30 seconds and node B may be configured to renegotiate a connection every 15 seconds. Thus based on this example node B may initiate renegotiation of the connection 15 seconds after completion of the negotiation described above and illustrated in .

In some embodiments each subsequent negotiation may use different generated keys than the preceding negotiation different key lengths then the preceding negotiation or a combination thereof. In such embodiments the encryption algorithm used for generating the asymmetric keys the asymmetric key length the encryption algorithm used for generating the symmetric key the symmetric key length or any combination thereof may be different in each subsequent negotiation or any combination thereof. Thus it should be appreciated a number of different configurations may be used between any two nodes of the secure network system described herein. For example in one embodiment only the generation of the symmetric key may use a different algorithm and different key length for each negotiation while the generation of the public key and private key may use the same algorithm and key length for each negotiation. In other embodiments for example only the key length for the private key and public key and the key length for the symmetric key may be different in each negotiation and the algorithms for generating the keys may remain the same in each negotiation.

The encryption algorithms used for generating a public key and private key may include any number of suitable encryption algorithms. In some embodiments the encryption algorithms may include the one or more of the following RSA or DSA. Moreover as mentioned above any number and combination of these or other suitable encryption algorithms may be used as the lists and of asymmetric encryption algorithms.

Node B may also have access to e.g. via data stored in a memory of node B a list of algorithms used for generating symmetric keys referred to as symmetric algorithms . For example any number of symmetric algorithms may be included in the list e.g. from a 1st symmetric algorithm to an Nth symmetric algorithm . Other nodes of the network may also include a similar list of symmetric algorithms for generating symmetric keys. For example as shown in node A may also include a list of symmetric algorithms. To generate a symmetric key the next symmetric algorithm may be selected from the list . Accordingly node B may receive the public key from node A and may generate a symmetric key using the 1st symmetric algorithm and a 1st symmetric key length block .

The encryption algorithms used for generating a symmetric key may include any number of suitable encryption algorithms. In some embodiments such encryption algorithms may include one or more of the following DES Triple DES RC2 AES or ASBE. Moreover as mentioned above any number and combination of these or other suitable encryption algorithms may be used as the lists and of symmetric encryption algorithms.

Next as described above the symmetric key may be encrypted using the public key and then may be transmitted to node B block . Node A may receive the symmetric key block and then decrypt the symmetric key using the private key and the 1st asymmetric encryption algorithm. As also mentioned above the symmetric key of the 1st symmetric algorithm may then be used by node A e.g. block and node B to encrypt and decrypt outbound and inbound data packets respectively. Additionally a node may renegotiate a connection if certain renegotiation criteria are met. Thus as shown in for example renegotiation criteria associated with node A may be evaluated to determine if the renegotiation criteria have been met decision block . If the renegotiation criteria have not been met line node A may continue to use the symmetric key generating during the initial negotiation line . If the renegotiation criteria have been met line then node A may request another negotiation as illustrated in and connection block A.

After generating the private key and public key the public key is transmitted to node A block . After receiving the public key the next symmetric algorithm may be selected from the list and the next the symmetric key may be generated using the selected symmetric algorithm. Additionally the key length of the generated symmetric key may be varied by using a 2nd symmetric key length different than the 1st symmetric key length used in the initial negotiation. In some embodiments the symmetric key length may be incremented from an initial key length to a final key length using a fixed increment value. For example in one embodiment the initial symmetric key length may be 384 bits the final symmetric key length may be 512 bits and the increment may be 8 bits. In such an embodiment the 1st symmetric key length used in the initial negotiation may be 384 bits and the 2nd symmetric key length used in the subsequent negotiation depicted in may be 392 bits. Moreover it should be appreciated that each node of a connection may start at a different initial symmetric key length. Thus in a subsequent negotiation imitated by node B the symmetric key length may be different than the symmetric key length used by node A in a previous negotiation. Accordingly node A generates a symmetric key using a 2nd symmetric algorithm and a 2nd symmetric key length block .

After generating the symmetric key the symmetric key may be encrypted using the public key block and the encrypted symmetric key may be sent to node B block . Node B may receive the encrypted symmetric key block and may decrypt the symmetric key using the private key of the 2nd asymmetric algorithm. As mentioned above the symmetric may then be used by node A and node B to encrypt and decrypt outbound and inbound data packets respectively using the 2nd symmetric algorithm.

In this manner two nodes that have a defined subscription may use different asymmetric algorithms different asymmetric key lengths different symmetric algorithms different symmetric key lengths or any combination thereof for secure communications after each negotiation. As each node maintains a list of asymmetric algorithms and symmetric algorithms the nodes may each select the next algorithm in the list at each negotiation ensuring that the nodes are using the same algorithms for secure communications after each negotiation. Moreover when the end of a list of algorithms is reached the next selection may use the first algorithm in the list and the selection sequence begins again. Similarly when the maximum key length is reached the next selection may use the initial key length and the key length increments may begin again.

The secure communications program may include a filter and a user interface . The filter may filter i.e. block inbound or outbound packets based on the subscriptions defined above and may also include the log functionality described above. Accordingly in some embodiments the secure communications program may write to and store a log file on a memory accessible by the program . In some embodiments the log file stored on the node is periodically sent to the management server . In some embodiments the filter of inbound and outbound communications may be implemented at the interface between the data link layer layer 2 and the network layer layer 3 of the OSI model. For example in some embodiments the filtering may be implemented using the NDIS APL Consequently the filter may drop packets without any acknowledgement to a remote node that a packet was received dropped or otherwise processed. The user interface may enable a user of the node to configure the secure communications program and view configurations and other data associated with the secure communications program . For example the user interface may enable a user e.g. an administrator to view subscriptions associated with a node configure subscriptions add or remove encryption algorithms and so on.

The node also includes encryption algorithms a fingerprint identifier a node identifiers and subscriptions . The encryption algorithms may include encryption algorithms used for encrypting and decrypting communications via asymmetric keys and symmetric keys in the manner described above. Thus in some embodiments the encryption algorithms may include a list of asymmetric algorithms a list of symmetric algorithms or both. The list of asymmetric algorithms and list of symmetric algorithms may be identical or may be different lists that may or may not include overlapping algorithms.

The identifiers and are used in determining subscriptions and authenticating connections as described above. The fingerprint identifier may be generated by the secure communications program based on a hardware factor generated from a unique hardware configuration of the node . The node identifier may be generated by the management server using for example a secure communications program of the management server . The generated node identifier may be sent to the node for use in determining subscriptions with other nodes. Additionally the node includes subscriptions e.g. identified by subscription identifiers that define subscription between the node and other nodes. The subscriptions may also be defined using a secure communications program on the management server and may be sent to the appropriate nodes. Advantageously as the node stores its own subscriptions the node may remain able to communicate with other nodes of the system even if the management server goes offline or is otherwise unavailable.

The management system may also include a secure communications program . In some embodiments the secure communications program and secure communications program are identical and may have different configurations for operation on the node or the management server . In other embodiments the secure communications program may be different than the secure communications program and may include different functionality including a superset or subset of the functionality provided by the secure communications program . The secure communications program may also include a filter and a user interface . The filter may operate in a manner similar to the filter described above. Thus the filter may filter inbound and outbound communications according to defined subscriptions with nodes of the network. As mentioned above in some embodiments the filter of inbound and outbound communications may be implemented at the interface between the data link layer layer 2 and the network layer layer 3 of the OSI model. For example in some embodiments the filtering may be implemented using the NDIS APL Consequently the filter may drop packets without any acknowledgement to a remote node that a packet was received dropped or otherwise processed. The user interface may enable a user e.g. an administrator to configure the management server and other elements of the system . For example the user may use the user interface to generate node identifiers define subscriptions between nodes e.g. between the management server and the node remove subscriptions remove nodes and so on.

The management server may also include e.g. stored on a memory of the management server encryption algorithms node identifiers and subscriptions . As mentioned above the encryption algorithms may include encryption algorithms used for encrypting and decrypting communications via asymmetric keys and symmetric keys in the manner described above and may include a list of asymmetric algorithms a list of symmetric algorithms or both. The list of asymmetric algorithms and list of symmetric algorithms may be identical or may be different lists that may or may not include overlapping algorithms. Moreover the encryption algorithms stored on the management server may provide a central location for algorithms used the secure communications of the system . Thus in some embodiments the encryption algorithms stored on the management server may be provided to the nodes e.g. node of the system for use in synchronization and secure communications.

As mentioned above the management server also includes node identifiers and subscriptions . The node identifiers and subscriptions may be stored in any suitable data structure such as a relational database an XML file or other data structures. The node identifiers may include identifier for each node of the system and may be generated by the management server using the secure communications program . For example in some embodiments a user e.g. an administrator may use the secure communications program to generate node identifiers for each desired node of the system . The generated node identifier may be sent to the nodes of the network for use in determining subscriptions with other nodes.

The subscriptions may be defined using the secure communications program on the management server . For example a user e.g. an administrator may use the secure communications program to define subscriptions between nodes of the system . As described above a subscription defines a relationship between two nodes to enable secure communications between the nodes. Without a subscription the nodes of the system . As mentioned above the subscriptions defined for a node may also be stored on the node itself. Thus if the management server becomes offline or otherwise unavailable the node may continue to securely communicate using any previously defined subscriptions. Additionally if a node is suspected to be comprised or is removed from the network any subscriptions between that node and other nodes of the network may be removed by the secure communications program . Moreover it should be appreciated that node activity may be automatically monitored and flagged by analysis of logs sent to the management server . For example the secure communications program may include a monitoring process that automatically monitors logs from each node of the system . Node activity that may be flagged may include for example a node periodically attempting to send communications to another node for which there is no defined subscription.

In various embodiments the computer may be a server a desktop computer a laptop computer a tablet computer a smartphone or other types of computers. As shown in the computer may include one or more processors and memory . Additionally the computer may include for example an interface a display an input device input output ports and a network interface .

The display may include a cathode ray tube CRT display a liquid crystal display LCD an organic light emitting diode OLED display or other types of displays. The display may display a user interface e.g. a graphical user interface and may display various function and system indicators to provide feedback to a user such as power status call status memory status etc. In some embodiments the display may include a touch sensitive display referred to as a touch screen . In such embodiments the touch screen may enable interaction with the computer via a user interface displayed on the display . In some embodiments the display may display a user interface for implementing the techniques described above such as for example creating subscriptions generating node identifiers removing subscriptions removing node identifiers viewing logs and so forth.

The one or more processors may provide the processing capability required to execute the operating system programs user interface and functions of the computer . The one or more processors may include microprocessors such as general purpose microprocessors a combination of general and special purpose microprocessors and Application Specific Integrated Circuits ASICs . The computer may thus be a single processor system or a multiple processor system. The one or more processors may include single core processors and multicore processors and may include graphics processors video processors and or related chip sets.

The memory may be accessible by the processor and other components of the computer . The memory which may include tangible non transitory computer readable storage mediums may include volatile memory and non volatile memory accessible by the processor and other components of the computer . The memory may store a variety of information and may be used for a variety of purposes. For example the memory may store the firmware for the computer an operating system for the computer and any other programs or executable code necessary for the computer to function. The memory may include volatile memory such as random access memory RAM and may also include non volatile memory such as ROM a solid state drive SSD a hard drive any other suitable optical magnetic or solid state storage medium or a combination thereof.

The memory may store executable computer code that includes program instructions executable by the one or more processors to implement one or more embodiments of the present invention. For example the processes and described above may be implemented in program instructions . The program instructions may include a computer program which in certain forms is known as a program software software application script or code . Thus in some embodiments program instructions may include instructions for a secure communications program. A computer program may be written in a programming language including compiled or interpreted languages or declarative or procedural languages. A computer program may include a unit suitable for use in a computing environment including as a stand alone program a module a component a subroutine etc. that may or may not correspond to a file in a file system. The program instructions may be deployed to be executed on computers located locally at one site or distributed across multiple remote sites and interconnected by a communication network e.g. network .

The interface may include multiple interfaces and may couple various components of the computer to the processor and memory . In some embodiments the interface the processor memory and one or more other components of the computer may be implemented on a single chip. In other embodiments these components and or their functionalities may be implemented on separate chips.

The computer also includes a user input device that may be used to interact with and control the computer . In general embodiments of the computer may include any number of user input devices such as a keyboard a mouse a trackball a digital stylus or pen buttons switches or any other suitable input device. The input device may be operable with a user interface displayed on the computer to control functions of the computer or of other devices connected to or used by the computer . For example the input device may allow a user to navigate a user interface input data to the computer select data provided by the computer and direct the output of data from the computer .

The computer may also include an input and output port to enable connection of devices to the computer . The input and output may include an audio port universal serial bus USB ports AC and DC power connectors serial data ports and so on. Further the computer may use the input and output ports to connect to and send or receive data with other devices such as other computers printers and so on.

The computer depicted in also includes a network interface such as a network interface card NIC wireless e.g. radio frequency receivers etc. For example the network interface may include known circuitry for communicating with communication networks via electromagnetic signals transmitted over a wired or wireless connection. Such circuitry may include for example antennas amplifiers transceivers receivers processors and so on. The network interface may communicate with various communication networks e.g. network such as the Internet an intranet a cellular telephone network a wireless local area network LAN a metropolitan area network MAN or other suitable communication networks. The network interface may implement any suitable communications standard protocol and or technology including wired Ethernet wireless Ethernet Wi Fi e.g. IEEE 802.11a IEEE 802.11b IEEE 802.11g and or IEEE 802.11n a 3G network e.g. based upon the IMT 2000 standard high speed downlink packet access HSDPA wideband code division multiple access W CDMA code division multiple access CDMA time division multiple access TDMA a 4G network e.g. IMT Advanced Long Term Evolution Advanced LTE Advanced etc. and any other suitable communications standard protocol or technology.

Various embodiments may further include receiving sending or storing instructions and or data implemented in accordance with the foregoing description upon a computer accessible medium. Generally speaking a computer accessible readable storage medium may include a non transitory storage media such as magnetic or optical media e.g. disk or DVD CD ROM volatile or non volatile media such as RAM e.g. SDRAM DDR RDRAM SRAM etc. ROM etc. as well as transmission media or signals such as electrical electromagnetic or digital signals conveyed via a communication medium such as network and or a wireless link.

Further modifications and alternative embodiments of various aspects of the invention will be apparent to those skilled in the art in view of this description. Accordingly this description is to be construed as illustrative only and is for the purpose of teaching those skilled in the art the general manner of carrying out the invention. It is to be understood that the forms of the invention shown and described herein are to be taken as examples of embodiments. Elements and materials may be substituted for those illustrated and described herein parts and processes may be reversed or omitted and certain features of the invention may be utilized independently all as would be apparent to one skilled in the art after having the benefit of this description of the invention. Changes may be made in the elements described herein without departing from the spirit and scope of the invention as described in the following claims. Headings used herein are for organizational purposes only and are not meant to be used to limit the scope of the description.

As used throughout this application the word may is used in a permissive sense i.e. meaning having the potential to rather than the mandatory sense i.e. meaning must . The words include including and includes mean including but not limited to. As used throughout this application the singular forms a an and the include plural referents unless the content clearly indicates otherwise. Thus for example reference to an element includes a combination of two or more elements. Unless specifically stated otherwise as apparent from the discussion it is appreciated that throughout this specification discussions utilizing terms such as processing computing calculating determining or the like refer to actions or processes of a specific apparatus such as a special purpose computer or a similar special purpose electronic processing computing device. In the context of this specification a special purpose computer or a similar special purpose electronic processing computing device is capable of manipulating or transforming signals typically represented as physical electronic or magnetic quantities within memories registers or other information storage devices transmission devices or display devices of the special purpose computer or similar special purpose electronic processing computing device.

