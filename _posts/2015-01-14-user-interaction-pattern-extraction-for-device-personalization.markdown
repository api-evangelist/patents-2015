---

title: User interaction pattern extraction for device personalization
abstract: A context-aware personalization system operable with a device such as a smartphone, tablet, personal computer (PC), game console, etc. extracts user interaction patterns from a graph, which is generated using telemetry data points, of a device user's behaviors and interactions. The telemetry data is mined from instrumented applications, operating system, and other components executing on the device. A machine learning pattern recognition algorithm is applied to the behavior and interaction graph to generate a dataset that can include a prioritized list of activities. The list is used to automatically implement personalization of the local device that are tailored to the user while also enabling background agents and processes associated with lower priority applications to be suspended to preserve device resources such as processor cycles, memory, battery power, etc. and increase device performance.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09378467&OS=09378467&RS=09378467
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09378467
owner_city: Redmond
owner_country: US
publication_date: 20150114
---
Individual users have different ways of displaying and interacting with applications on their devices and their interaction models can be dynamic. Although many existing devices allow customization by users to fit their personal needs such customization is often static. Thus users typically face the need to constantly adjust the device configuration in order to keep pace with changing needs.

This Background is provided to introduce a brief context for the Summary and Detailed Description that follow. This Background is not intended to be an aid in determining the scope of the claimed subject matter nor be viewed as limiting the claimed subject matter to implementations that solve any or all of the disadvantages or problems presented above.

A context aware personalization system operable with a device such as a smartphone tablet personal computer PC game console etc. extracts user interaction patterns from a graph which is generated using telemetry data points of a device user s behaviors and interactions. The telemetry data is mined from instrumented applications operating system and other components executing on the device. A machine learning pattern recognition algorithm is applied to the behavior and interaction graph to generate a dataset that can include a prioritized list of activities. The list is used to automatically implement personalization of the local device and optimization of personal experiences that are tailored to the user while also enabling background agents and processes associated with lower priority applications to be suspended to preserve device resources such as processor cycles memory battery power etc. and increase device performance.

In illustrative examples the personalization includes composing and rendering a start screen on the device s user interface UI and placing customized notifications in the UI s lock screen that reflect the prioritized list. The personalization can be implemented in view of context such as a day time device type and location and other factors so that the start and lock screens provide information and experiences having contextual relevance. The user s interactions with the personalized controls and objects on the UI may themselves be mined as telemetry data and used as part of a virtuous loop with the pattern recognition algorithm that may facilitate machine learning in some cases.

The personalization system may also be operated with or in some cases be incorporated into a digital assistant that is operable on the device. The digital assistant typically interacts with the user using voice conversations and can provide a variety of services and perform different tasks. The digital assistant may be adapted to mine telemetry data and or use the interaction pattern dataset context and other information for example when performing tasks providing services making suggestions etc. that are appropriate and contextually relevant to the user.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure. It will be appreciated that the above described subject matter may be implemented as a computer controlled apparatus a computer process a computing system or as an article of manufacture such as one or more computer readable storage media. These and various other features will be apparent from a reading of the following Detailed Description and a review of the associated drawings.

Like reference numerals indicate like elements in the drawings. Elements are not drawn to scale unless otherwise indicated. It is emphasized that the particular UIs displayed in the drawings can vary from what is shown according to the needs of a particular implementation. While UIs are shown in portrait mode in the drawings the present arrangement may also be implemented using a landscape mode.

However alternative types of electronic devices are also envisioned to be usable within the communications environment so long as they are configured with communication capabilities and can connect to the communications network . Such alternative devices variously include handheld computing devices PDAs personal digital assistants portable media players devices that use headsets and earphones e.g. Bluetooth compatible devices phablet devices i.e. combination smartphone tablet devices wearable computers navigation devices such as GPS Global Positioning System systems laptop PCs personal computers desktop computers multimedia consoles gaming systems or the like. In the discussion that follows the use of the term device is intended to cover all devices that are configured with communication capabilities and are capable of connectivity to the communications network .

The various devices in the environment can support different features functionalities and capabilities here referred to generally as features . Some of the features supported on a given device can be similar to those supported on others while other features may be unique to a given device. The degree of overlap and or distinctiveness among features supported on the various devices can vary by implementation. For example some devices can support touch controls gesture recognition and voice commands while others may enable a more limited UI. Some devices may support video consumption and Internet browsing while other devices may support more limited media handling and network interface features.

As shown the devices can access the communications network in order to implement various user experiences. The communications network can include any of a variety of network types and network infrastructure in various combinations or sub combinations including cellular networks satellite networks IP Internet Protocol networks such as Wi Fi and Ethernet networks a public switched telephone network PSTN and or short range networks such as Bluetooth networks. The network infrastructure can be supported for example by mobile operators enterprises Internet service providers ISPs telephone service providers data service providers and the like. The communications network typically includes interfaces that support a connection to the Internet so that the mobile devices can access content provided by one or more content providers and also access a service provider in some cases. Accordingly the communications network is typically enabled to support various types of device to device communications including over the top communications and communications that do not utilize conventional telephone numbers in order to provide connectivity between parties.

Accessory devices such as wristbands and other wearable devices may also be present in the environment . Such accessory device typically is adapted to interoperate with a device using a short range communication protocol like Bluetooth to support functions such as monitoring of the wearer s physiology e.g. heart rate steps taken calories burned etc. referred to as biometric data and environmental conditions temperature humidity ultra violet UV levels etc. referred to as environmental data and surfacing notifications from the coupled device .

In typical implementations a mix of local and remote code execution is utilized at the respective client and service. However in some scenarios such as those in which a connection to remote services is limited or unavailable local code execution may be utilized substantially on its own to perform the extraction and provision of device personalization. The particular distribution of local and remote processing may often be a design choice that is made in consideration of various applicable requirements for allocation of resources such as processing capabilities memory network bandwidth power etc. In some implementations a device may be configured to support a dynamic distribution of local and remote processing in order to provide additional optimization of resource allocation and user experiences.

Referring again to the personalization client is configured to enable interaction with one or more applications available to the device in order that telemetry data can be mined and utilized to extract user interaction patterns. The applications can be third party applications in some cases in which the application authors developers or providers are entities that are not the same as the provider of the personalization system and or device operating system OS for example. First party applications can also be supported in some implementations of the present user interaction pattern extraction for device personalization. The personalization service may also support direct interaction with the applications as indicated by line . Telemetry data may also be mined using the operating system in some cases. In typical implementations the data mining is performed on an anonymized basis with notice to the user i.e. as to why the data is being collected and the benefits provided by the personalization system and with the user s consent.

As shown in applications OS and the digital assistant on a given device are instrumented as respectively indicated by reference numerals and . The instrumentation enables interactions through an API that is exposed by the personalization client to effectuate the telemetry data mining. The particular telemetry data mined can vary by implementation and application. As shown in the schema in the telemetry data can include and or identify a device ID product application activity activity state e.g. start and end of an activity activity duration date time and other data to meet the needs of a particular implementation. It is emphasized that the particular telemetry data types shown in are intended to be illustrative and not exhaustive. It is further emphasized that the telemetry data can describe events that are associated with user interactions with an application as well as events resulting from an application s own processing and logic. Accordingly the personalization system can be configured in some scenarios to use the telemetry data to compare and contrast native application behaviors with the user s behavior patterns.

As shown in the telemetry data that is mined locally on the device is handled by the personalization system using various component services as part of a virtuous learning loop . The mining can be performed substantially continuously or on a periodic basis. The telemetry data may be stored locally on the device and utilized locally e.g. in situations in which local user interaction pattern extraction and device personalization are implemented and or transmitted to the remote service over the network .

A user interaction pattern extraction service applies the machine learning pattern recognition algorithm to the telemetry data to determine statistical measures of outcomes as correlative trends using for example a clustering algorithm or probabilistic na ve Bayes classifier. A user interaction pattern dataset is generated from the extracted user interaction pattern and delivered to the local device using a generation service and delivery service respectively.

The dataset typically includes a list of prioritized activities that the local personalization client may utilize to automatically implement device personalization for the user . For example the start and lock screens displayed on a device UI may be personalized to control the size and or placement of objects such as application launch controls and notifications that reflect the prioritized activities examples of which are provided below in the text accompanying . In alternative implementations the service can be configured to provide the personalization with comparatively little or no processing by the local client. The list can also be utilized to allocate device resources by suspending slowing or discontinuing operation of lower priority activities background processes applications and the like. For users who install a typical number of applications there is a reasonable likelihood that some applications are unnecessarily consuming valuable resources even if they are not actively used.

The virtuous learning loop may be implemented as a dynamic process. For example the user s interaction with the applications OS and personalized objects such as application launch controls and notifications can be mined as part of the telemetry data and fed back to the service . Such feedback can be used to enable additional refinement of the user interaction pattern dataset and list for optimizing device personalization and experiences for the user. New or modified algorithms can also be introduced into the system to provide additional refinement and optimization in some cases.

The personalization system can employ the user interaction pattern dataset to tailor device personalization and user experiences on the device. As shown in during work day hours the device UI can be configured to show application launch controls on a start screen that are made more prominent for higher priority applications and less prominent for lower priority ones. In this example the launch controls are implemented using touch sensitive icons e.g. tiles that have a larger size for the calendar phone map and digital assistant applications while the icons for the lower priority applications are smaller. In addition to sizing the icons differently for applications having different priority the display order of the icons can reflect priority as well. So for example as shown the most frequently used calendar and phone application icons and are positioned in the top row of the UI .

As shown the personalized lock screen shows the user what s happening with her higher priority applications at a glance. In this example the user s next appointment from the calendar application is shown in an area on the UI under the time and date display. A live dynamically updated map showing the user s location is displayed towards the top of the UI. Notifications from the frequently used higher priority phone and email applications are shown at the bottom of the UI to respectively indicate for example new voice mail and email messages.

As shown in the personalization system can employ the user interaction pattern dataset to tailor device personalization and user experiences using a customized UI for the start screen. After work the device UI is configured to show larger size icons for the photo messaging music and browser applications while making icons for the lower priority applications smaller. In addition the most frequently used photo application icon is positioned in the top row of the UI .

User interaction patterns can not only be correlated to day and time but also correlated with various contextual data. Contextual data can include for example the user s location language schedule the user s preferences presence absence of others e.g. colleagues friends family etc. stored contacts including in some cases links to a local user s or remote user s social graph such as those maintained by external social networking services call history messaging history browsing history device type device capabilities communication network type and or features functionalities provided therein mobile data plan restrictions limitations access network utilization e.g. whether using a home network or roaming visited network SIM Subscriber Identification Module utilization e.g. when multiple SIMs are supported on a given device data associated with other parties to a communication e.g. their schedules preferences etc. and the like.

Different types of contextual data can be used in various combinations and not all types need to be used in every implementation. In illustrative examples correlations of user interaction patterns to contextual data can enable the personalization system to identify one off and or special events such as holidays weddings births vacations emergencies etc. that are not part of the user s typical usage patterns. For recurring events like birthdays and holidays the system can provide device personalization and user experiences for the next occurrence. The personalization system can also identify behavior and interaction patterns to differentiate device and experience personalization for different aspects of the user s life like work and personal life. For example the system can identify that the user has different phone interactions with a SIM e.g. in a dual SIM device that is used for work as compared with the other SIM that is used for personal calls. Such identification enables the personalization system to tailor the device and surface experiences that are appropriate and helpful for each of the different contexts whether work or personal in this example.

There may also be employer policy cost mobile phone subscription terms network utilization e.g. roaming or home network and other factors data that may be considered in some scenarios when personalizing the device or user experiences. For example the system may suggest to the user that an international call be made with a work SIM mobile phone plan when calling a colleague since such use complies with company policy and international calls on the user s personal SIM mobile phone plan are comparatively expensive e.g. outside the scope of the user s calling plan . The system can also selectively disable mobile telephony and data functions except perhaps for some calls messages to from certain contacts during emergencies etc. when it is determined that a device is roaming on a visited network and the user does not wish to bear the costs associated with the use of the visited network.

The personalization system can use the presence or absence of other people when extracting user interaction patterns. Data that indicates the proximity of other devices to the user s device can be included in the telemetry data and used when generating the user interaction pattern dataset used to personalize a given device and user experiences. For example the personalization system can determine that a user typically uses particular applications on a device when alone but the pattern of interaction is different when a spouse s device is nearby i.e. within some predetermined distance threshold or that friends have different behaviors when in a larger group compared to that when in a smaller group or alone.

In other illustrative examples the user s interaction with applications on a device can be correlated to contextual data describing the device s location and or movement. When the device is being used in a car and motion is detected through a sensor such as a GPS Global Positioning System component or accelerometer the user interaction pattern with applications on the device can be extracted and analyzed. When motion is detected in future instances the system could determine that the user is driving in the car again. The start and lock screens can be personalized in that case to show a map application or launch the digital assistant to read turn by turn directions aloud using an internal speaker or an audio endpoint device such as a wired or wireless headset earpiece etc.

Additional implementation details are now presented. shows an illustrative layered architecture that may be instantiated on a given device . The architecture is typically implemented in software although combinations of software firmware and or hardware may also be utilized in some cases. The architecture is arranged in layers and includes an application layer an OS operating system layer and a hardware layer . The hardware layer provides an abstraction of the various hardware used by the device e.g. input and output devices networking and radio hardware etc. to the layers above it. In this illustrative example the hardware layers support a microphone and an audio endpoint which may include for example the device s internal speaker a wired or wireless headset earpiece external speaker device and the like.

The application layer in this illustrative example supports various applications e.g. web browser map application email application news application etc. as well as the personalization client . The applications are often implemented using locally executing code. However in some cases these applications may rely on services and or remote code execution provided by remote servers or other computing platforms such as those supported by the service provider or other cloud based resources. While the personalization client is shown here as a component that is instantiated in the application layer it will be appreciated that the functionality provided by a given application may be implemented in whole or part using components that are supported in either the OS or hardware layers.

The OS layer supports the digital assistant and various other OS components . In typical implementations the digital assistant can interact with the service provider as indicated by line . That is the digital assistant in some implementations can partially utilize or fully utilize remote code execution supported at the service provider or using other remote resources. In addition it may utilize and or interact with the other OS components and or other components that are instantiated in the other layers of the architecture as may be needed to implement the various features and functions described herein. In some implementations some or all of the functionalities supported by the personalization client can be incorporated into the digital assistant as shown by the dashed rectangle in .

As shown the functions illustratively include interacting with the user through a voice recognition system natural language UI and other UIs for example performing tasks e.g. making note of appointments in the user s calendar sending messages and emails etc. providing services e.g. answering questions from the user mapping directions to a destination setting alarms forwarding notifications reading emails news blogs etc. gathering information e.g. finding information requested by the user about a book or movie locating the nearest Italian restaurant etc. operating devices e.g. setting preferences adjusting screen brightness turning wireless connections such as Wi Fi and Bluetooth on and off communicating with other devices controlling smart appliances etc. and performing various other functions . The list of functions is not intended to be exhaustive and other functions may be provided by the digital assistant and or applications as may be needed for a particular implementation of user interaction pattern extraction for device personalization.

A user can typically interact with the digital assistant in a number of ways depending on the features and functionalities supported by a given device . For example as shown in the digital assistant may expose a tangible user interface that enables the user to employ physical interactions in support of the experiences features and functions on the device . Such physical interactions can include manipulation of physical and or virtual controls such as buttons menus keyboards etc. using touch based inputs like tapping flicking dragging etc. on a touch screen and the like.

As shown in the digital assistant can employ a voice recognition system having a UI that can take voice inputs from the user . The voice inputs can be used to invoke various actions features and functions on a device provide inputs to the systems and applications and the like. In some cases the voice inputs can be utilized on their own in support of a particular user experience while in other cases the voice input can be utilized in combination with other non voice inputs or inputs such as those implementing physical controls on the device or virtual controls implemented on a UI or those using gestures as described below .

The digital assistant can also employ a gesture recognition system having a UI as shown in . Here the system can sense gestures performed by the user as inputs to invoke various actions features and functions on a device provide inputs to the systems and applications and the like. The user gestures can be sensed using various techniques such as optical sensing touch sensing proximity sensing and the like. In some cases various combinations of voice commands gestures and physical manipulation of real or virtual controls can be utilized to interact with the digital assistant. In some scenarios the digital assistant can be automatically invoked and or be adapted to operate responsively to biometric data or environmental data.

Accordingly as the digital assistant typically maintains awareness of device state and other context it may be invoked or controlled by specific context such as user input received notifications or detected events associated with biometric or environmental data. For example the digital assistant can behave in particular ways and surface appropriate user experiences when biometric and environmental data indicates that the user is active and moving around outdoors as compared to occasions when the user is sitting quietly inside. If the user seems stressed or harried the digital assistant might suggest music selections that are relaxing and calming. When data indicates that the user has fallen asleep for a nap the digital assistant can mute device audio set a wakeup alarm and indicate the user s online status as busy.

In step telemetry data is collected from one or more applications using for example instrumentation that is instantiated in the applications. In step a prioritized activity list is obtained. Updated lists can be obtained periodically in some cases. The list is generated by a pattern recognition methodology to extract user interaction patterns from the telemetry data. In step the device is personalized in response to the prioritized activity list. In step operations are suspended for an application associated with activities having priorities that are below a predetermined threshold. In step prioritized activities are correlated to one or more of day time or context context examples were provided above in the text accompanying .

In step the device is personalized by controlling presentation of application icons and notifications on the UI. For example the start and lock screens can be personalized as show in and described in the accompanying text. In step the presentation of application icons and notifications may be modified based on the time of day day of week device type device location device motion or other context. In step the prioritized activity list can be generated locally on the device depending on the availability of resources including network access and or bandwidth.

In step a user interaction pattern dataset is provided to the personalization client on the local device for personalizing the device and allocating resources. In step a virtuous learning loop is implemented with the personalization client and the dataset and or the pattern recognition process adjusted based on a data stream from the loop. For example the virtuous learning loop can facilitate machine learning in some cases. New and or modified pattern recognition algorithms can also be introduced into the personalization system as appropriate.

A number of program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM including an operating system one or more application programs other program modules and program data . A user may enter commands and information into the computer system through input devices such as a keyboard and pointing device such as a mouse. Other input devices not shown may include a microphone joystick game pad satellite dish scanner trackball touchpad touch screen touch sensitive device voice command module or device user motion or user gesture capture device or the like. These and other input devices are often connected to the processor through a serial port interface that is coupled to the system bus but may be connected by other interfaces such as a parallel port game port or universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video adapter . In addition to the monitor personal computers typically include other peripheral output devices not shown such as speakers and printers. The illustrative example shown in also includes a host adapter a Small Computer System Interface SCSI bus and an external storage device connected to the SCSI bus .

The computer system is operable in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be selected as another personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer system although only a single representative remote memory storage device is shown in . The logical connections depicted in include a local area network LAN and a wide area network WAN . Such networking environments are often deployed for example in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer system is connected to the local area network through a network interface or adapter . When used in a WAN networking environment the computer system typically includes a broadband modem network gateway or other means for establishing communications over the wide area network such as the Internet. The broadband modem which may be internal or external is connected to the system bus via a serial port interface . In a networked environment program modules related to the computer system or portions thereof may be stored in the remote memory storage device . It is noted that the network connections shown in are illustrative and other means of establishing a communications link between the computers may be used depending on the specific requirements of an application of the present user interaction pattern extraction for device personalization.

The architecture illustrated in includes a CPU Central Processing Unit a system memory including a RAM and a ROM and a system bus that couples the memory to the CPU . A basic input output system containing the basic routines that help to transfer information between elements within the architecture such as during startup is stored in the ROM . The architecture further includes a mass storage device for storing software code or other computer executed code that is utilized to implement applications the file system and the operating system.

The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable storage media provide non volatile storage for the architecture .

Although the description of computer readable storage media contained herein refers to a mass storage device such as a hard disk or CD ROM drive it should be appreciated by those skilled in the art that computer readable storage media can be any available storage media that can be accessed by the architecture .

By way of example and not limitation computer readable storage media may include volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer readable media includes but is not limited to RAM ROM EPROM erasable programmable read only memory EEPROM electrically erasable programmable read only memory Flash memory or other solid state memory technology CD ROM DVDs HD DVD High Definition DVD Blu ray or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the architecture .

According to various embodiments the architecture may operate in a networked environment using logical connections to remote computers through a network. The architecture may connect to the network through a network interface unit connected to the bus . It should be appreciated that the network interface unit also may be utilized to connect to other types of networks and remote computer systems. The architecture also may include an input output controller for receiving and processing input from a number of other devices including a keyboard mouse or electronic stylus not shown in . Similarly the input output controller may provide output to a display screen a printer or other type of output device also not shown in .

It should be appreciated that the software components described herein may when loaded into the CPU and executed transform the CPU and the overall architecture from a general purpose computing system into a special purpose computing system customized to facilitate the functionality presented herein. The CPU may be constructed from any number of transistors or other discrete circuit elements which may individually or collectively assume any number of states. More specifically the CPU may operate as a finite state machine in response to executable instructions contained within the software modules disclosed herein. These computer executable instructions may transform the CPU by specifying how the CPU transitions between states thereby transforming the transistors or other discrete hardware elements constituting the CPU .

Encoding the software modules presented herein also may transform the physical structure of the computer readable storage media presented herein. The specific transformation of physical structure may depend on various factors in different implementations of this description. Examples of such factors may include but are not limited to the technology used to implement the computer readable storage media whether the computer readable storage media is characterized as primary or secondary storage and the like. For example if the computer readable storage media is implemented as semiconductor based memory the software disclosed herein may be encoded on the computer readable storage media by transforming the physical state of the semiconductor memory. For example the software may transform the state of transistors capacitors or other discrete circuit elements constituting the semiconductor memory. The software also may transform the physical state of such components in order to store data thereupon.

As another example the computer readable storage media disclosed herein may be implemented using magnetic or optical technology. In such implementations the software presented herein may transform the physical state of magnetic or optical media when the software is encoded therein. These transformations may include altering the magnetic characteristics of particular locations within given magnetic media. These transformations also may include altering the physical features or characteristics of particular locations within given optical media to change the optical characteristics of those locations. Other transformations of physical media are possible without departing from the scope and spirit of the present description with the foregoing examples provided only to facilitate this discussion.

In light of the above it should be appreciated that many types of physical transformations take place in the architecture in order to store and execute the software components presented herein. It also should be appreciated that the architecture may include other types of computing devices including handheld computers embedded computer systems smartphones PDAs and other types of computing devices known to those skilled in the art. It is also contemplated that the architecture may not include all of the components shown in may include other components that are not explicitly shown in or may utilize an architecture completely different from that shown in .

The illustrated device can include a controller or processor e.g. signal processor microprocessor microcontroller ASIC Application Specific Integrated Circuit or other control and processing logic circuitry for performing such tasks as signal coding data processing input output processing power control and or other functions. An operating system can control the allocation and usage of the components including power states above lock states and below lock states data saving states and provides support for one or more application programs . The application programs can include common mobile computing applications e.g. image capture applications email applications calendars contact managers web browsers messaging applications or any other computing application.

The illustrated device can include memory . Memory can include non removable memory and or removable memory . The non removable memory can include RAM ROM Flash memory a hard disk or other well known memory storage technologies. The removable memory can include Flash memory or a Subscriber Identity Module SIM card which is well known in GSM Global System for Mobile communications systems or other well known memory storage technologies such as smart cards. The memory can be used for storing data and or code for running the operating system and the application programs . Example data can include web pages text images sound files video data or other data sets to be sent to and or received from one or more network servers or other devices via one or more wired or wireless networks.

The memory may also be arranged as or include one or more computer readable storage media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer readable media includes but is not limited to RAM ROM EPROM EEPROM Flash memory or other solid state memory technology CD ROM compact disc ROM DVD Digital Versatile Disc HD DVD High Definition DVD Blu ray or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the device .

The memory can be used to store a subscriber identifier such as an International Mobile Subscriber Identity IMSI and an equipment identifier such as an International Mobile Equipment Identifier IMEI . Such identifiers can be transmitted to a network server to identify users and equipment. The device can support one or more input devices such as a touch screen microphone for implementation of voice input for voice recognition voice commands and the like camera physical keyboard trackball and or proximity sensor and one or more output devices such as a speaker and one or more displays . Other input devices not shown using gesture recognition may also be utilized in some cases. Other possible output devices not shown can include piezoelectric or haptic output devices. Some devices can serve more than one input output function. For example touchscreen and display can be combined into a single input output device.

A wireless modem can be coupled to an antenna not shown and can support two way communications between the processor and external devices as is well understood in the art. The modem is shown generically and can include a cellular modem for communicating with the mobile communication network and or other radio based modems e.g. Bluetooth or Wi Fi . The wireless modem is typically configured for communication with one or more cellular networks such as a GSM network for data and voice communications within a single cellular network between cellular networks or between the device and a public switched telephone network PSTN .

The device can further include at least one input output port a power supply a satellite navigation system receiver such as a GPS receiver an accelerometer a gyroscope not shown and or a physical connector which can be a USB port IEEE 1394 FireWire port and or an RS 232 port. The illustrated components are not required or all inclusive as any components can be deleted and other components can be added.

A graphics processing unit GPU and a video encoder video codec coder decoder form a video processing pipeline for high speed and high resolution graphics processing. Data is carried from the GPU to the video encoder video codec via a bus. The video processing pipeline outputs data to an A V audio video port for transmission to a television or other display. A memory controller is connected to the GPU to facilitate processor access to various types of memory such as but not limited to a RAM.

The multimedia console includes an I O controller a system management controller an audio processing unit a network interface controller a first USB Universal Serial Bus host controller a second USB controller and a front panel I O subassembly that are preferably implemented on a module . The USB controllers and serve as hosts for peripheral controllers and a wireless adapter and an external memory device e.g. Flash memory external CD DVD ROM drive removable media etc. . The network interface controller and or wireless adapter provide access to a network e.g. the Internet home network etc. and may be any of a wide variety of various wired or wireless adapter components including an Ethernet card a modem a Bluetooth module a cable modem or the like.

System memory is provided to store application data that is loaded during the boot process. A media drive is provided and may comprise a DVD CD drive hard drive or other removable media drive etc. The media drive may be internal or external to the multimedia console . Application data may be accessed via the media drive for execution playback etc. by the multimedia console . The media drive is connected to the I O controller via a bus such as a Serial ATA bus or other high speed connection e.g. IEEE 1394 .

The system management controller provides a variety of service functions related to assuring availability of the multimedia console . The audio processing unit and an audio codec form a corresponding audio processing pipeline with high fidelity and stereo processing. Audio data is carried between the audio processing unit and the audio codec via a communication link. The audio processing pipeline outputs data to the A V port for reproduction by an external audio player or device having audio capabilities.

The front panel I O subassembly supports the functionality of the power button and the eject button as well as any LEDs light emitting diodes or other indicators exposed on the outer surface of the multimedia console . A system power supply module provides power to the components of the multimedia console . A fan cools the circuitry within the multimedia console .

The CPU GPU memory controller and various other components within the multimedia console are interconnected via one or more buses including serial and parallel buses a memory bus a peripheral bus and a processor or local bus using any of a variety of bus architectures. By way of example such architectures can include a Peripheral Component Interconnects PCI bus PCI Express bus etc.

When the multimedia console is powered ON application data may be loaded from the system memory into memory and or caches and and executed on the CPU . The application may present a graphical user interface that provides a consistent user experience when navigating to different media types available on the multimedia console . In operation applications and or other media contained within the media drive may be launched or played from the media drive to provide additional functionalities to the multimedia console .

The multimedia console may be operated as a standalone system by simply connecting the system to a television or other display. In this standalone mode the multimedia console allows one or more users to interact with the system watch movies or listen to music. However with the integration of broadband connectivity made available through the network interface controller or the wireless adapter the multimedia console may further be operated as a participant in a larger network community.

When the multimedia console is powered ON a set amount of hardware resources are reserved for system use by the multimedia console operating system. These resources may include a reservation of memory e.g. 16 MB CPU and GPU cycles e.g. 5 networking bandwidth e.g. 8 kbps etc. Because these resources are reserved at system boot time the reserved resources do not exist from the application s view.

In particular the memory reservation preferably is large enough to contain the launch kernel concurrent system applications and drivers. The CPU reservation is preferably constant such that if the reserved CPU usage is not used by the system applications an idle thread will consume any unused cycles.

With regard to the GPU reservation lightweight messages generated by the system applications e.g. pop ups are displayed by using a GPU interrupt to schedule code to render pop ups into an overlay. The amount of memory needed for an overlay depends on the overlay area size and the overlay preferably scales with screen resolution. Where a full user interface is used by the concurrent system application it is preferable to use a resolution independent of application resolution. A scaler may be used to set this resolution such that the need to change frequency and cause a TV re sync is eliminated.

After the multimedia console boots and system resources are reserved concurrent system applications execute to provide system functionalities. The system functionalities are encapsulated in a set of system applications that execute within the reserved system resources described above. The operating system kernel identifies threads that are system application threads versus gaming application threads. The system applications are preferably scheduled to run on the CPU at predetermined times and intervals in order to provide a consistent system resource view to the application. The scheduling is to minimize cache disruption for the gaming application running on the console.

When a concurrent system application requires audio audio processing is scheduled asynchronously to the gaming application due to time sensitivity. A multimedia console application manager described below controls the gaming application audio level e.g. mute attenuate when system applications are active.

Input devices e.g. controllers and are shared by gaming applications and system applications. The input devices are not reserved resources but are to be switched between system applications and the gaming application such that each will have a focus of the device. The application manager preferably controls the switching of input stream without knowledge of the gaming application s knowledge and a driver maintains state information regarding focus switches.

Various exemplary embodiments of the present user interaction pattern extraction for device personalization are now presented by way of illustration and not as an exhaustive list of all embodiments. An example includes a device comprising one or more processors a user interface UI for interacting with a user of the device and a memory device storing code associated with one or more applications and computer readable instructions which when executed by the one or more processors perform a method comprising the steps of collecting telemetry data from the one or more applications the telemetry data at least describing user interactions with the one or more applications obtaining a prioritized list of activities that are associated with the one or more applications the prioritized list being generated by application of a pattern recognition methodology to extract user interaction patterns from the telemetry data personalizing the device responsively to a prioritized list of activities and suspending operations of an application associated with activities in the list having a priority below a predetermined threshold.

In another example the device further includes personalization by composing and rendering a screen on the UI the screen using user controllable objects that are emphasized on the UI responsively to the prioritized list the objects functioning at least as launch controls for the one or more applications. In another example the device further includes personalization by composing and rendering a lock screen on the UI the lock screen showing content or notifications responsively to the prioritized list. In another example the device further includes operating a digital assistant on the device responsively to the prioritized list the digital assistant operation including rendering user experiences on the UI the UI being adapted for user interaction using audio. In another example the device further includes configuring the digital assistant responsively to voice input gesture input or manual input for performing at least one of sharing contact information sharing a stored contact scheduling a meeting looking at a user s calendar scheduling a reminder making a call operating a device playing games making purchases taking notes scheduling an alarm or wake up reminder sending a message checking social media for updates scraping a website interacting with a search service sharing or showing files sending a link to a website or sending a link to a resource the digital assistant further being configured to implement the performing using one or more machine learning techniques applied to the telemetry data. In another example the prioritized list is correlated to day and time and the device further includes personalization in response to the correlation to day and time. In another example the prioritized list is correlated to contextual data further including personalizing the device in response to the correlation to contextual data. In another example the contextual data comprises one or more of time date location of the user or device language schedule applications installed on the device user preferences user behaviors user activities stored contacts call history messaging history browsing history device type device capabilities or communication network type. In another example the device further includes obtaining the prioritized list of activities from a remote service. In another example the telemetry data describes one or more of device product application activity activity state activity duration date or time.

A further example includes a method of operating a digital assistant on a device having a user interface UI supporting graphics and audio and supporting applications the method comprising exposing the digital assistant on the device for maintaining context awareness for a device user by collecting telemetry data through monitoring user behaviors and interactions with the device and applications the digital assistant further interacting with the device user using voice interactions through the UI using the context awareness performing a task or providing a service in response to a prioritized activity list that is generated from the monitored user behaviors and interactions and controlling operation of the device to manage resource utilization by activities having a priority below a predetermined threshold.

In another example the monitoring uses instrumentation instantiated in one of application operating system or digital assistant and the context awareness includes identifying one off or non recurring events associated with the monitored user behaviors and interactions. In another example the performing includes providing a suggestion through the UI for a method of communicating with user of other devices. In another example the method further includes in response to a prioritized activity list that is generated from the monitored user behaviors and interactions and using the context awareness personalizing the device to the user so that i applications associated with relatively higher priority activities are emphasized on the UI compared with applications associated with relatively lower priority activities the application emphasis being implemented using one of configuring a size of application icons or configuring a display order for the application icons and ii notifications associated with higher priority applications are emphasized on the UI compared with notifications associated with relatively lower priority the notifications emphasis being implemented by configuring a display order for the notification icons. In another example the method further includes changing the application emphasis or notification emphasis based on time of day device type device location or other context. In another example the method further includes generating the prioritized activity list locally on the device according to availability of device resources including network bandwidth.

A further example includes one or more computer readable memory devices storing instructions which when executed by one or more processors disposed in a computer server perform a method comprising the steps of interoperating with a personalization client on a local device the personalization client exposing an application programming interface API to one or more applications being executable on the device to collect telemetry data from instrumentation disposed in the one or more applications the telemetry data describing interactions between a device user and the one or more applications obtaining the telemetry data over a network applying a pattern recognition process to the telemetry data to extract user interaction patterns generating a user interaction pattern dataset by transforming results of the pattern recognition process and providing the user interaction pattern dataset to the personalization client on the local device the local device using the user interaction pattern dataset to personalize the device for the user and allocate resources on the device.

In another example the one or more computer readable memory devices further include implementing a virtuous learning loop with the personalization client and iteratively generating or adjusting the user interaction pattern dataset or pattern recognition process based on a data stream received from the virtuous learning loop. In another example the one or more computer readable memory devices further include configuring the pattern recognition process to utilize one of a clustering algorithm or na ve Bayes classifier. In another example the personalization includes displaying application icons or notifications according to a priority established by the user interaction pattern dataset.

Based on the foregoing it should be appreciated that technologies for user interaction pattern extraction for device personalization have been disclosed herein. Although the subject matter presented herein has been described in language specific to computer structural features methodological and transformative acts specific computing machinery and computer readable storage media it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features acts or media described herein. Rather the specific features acts and mediums are disclosed as example forms of implementing the claims.

The subject matter described above is provided by way of illustration only and should not be construed as limiting. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described and without departing from the true spirit and scope of the present invention which is set forth in the following claims.

