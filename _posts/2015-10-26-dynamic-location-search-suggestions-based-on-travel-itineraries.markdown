---

title: Dynamic location search suggestions based on travel itineraries
abstract: Methods, systems, and apparatus, including computer programs encoded on a computer storage medium, for retrieving local information on a user device include detecting itinerary information stored by a first application on a user device, and identifying a travel destination based on the detected itinerary information. The travel destination is communicated to a second application executable on a user device, and the travel destination is stored in association with the second application. The second application is adapted to retrieve local information based on an identified geographic location, and local information for the travel destination is provided through the second application in response to a user interaction with the second application and based on a triggering threshold associated with the itinerary information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09471599&OS=09471599&RS=09471599
owner: Apple Inc.
number: 09471599
owner_city: Cupertino
owner_country: US
publication_date: 20151026
---
This application is a continuation of U.S. patent application Ser. No. 13 757 676 entitled Dynamic Location Search Suggestions Based on Travel Itineraries filed on Feb. 1 2013 the entire contents of which is hereby incorporated by reference for all purposes.

This specification relates to providing dynamic city search suggestions based on travel itineraries including suggesting locations to search in one application based on travel plans identified in a different application.

Smart phones provide access to numerous sources of data and can run applications that organize and allow searching of information for specific topics. For example weather applications may allow users to search for and or select locations e.g. cities and to store the selected locations for use in retrieving information about local weather conditions forecasts radar etc. The location data can be persisted in the application such that each time the application is opened the local information can be updated for each of the stored locations. Other types of applications can perform similar operations to for example retrieve other types of local information for one or more selected locations each time an application is opened or activated from a background or hibernation state. In addition to allowing users to search for locations some applications may allow the use of a current location as detected through a global positioning satellite device or other positioning technique.

In general itinerary information received or detected on a user device in one application e.g. a travel application can be used to automatically and dynamically update persistent location data in one or more other applications e.g. weather clock or dining applications . A destination location can be extracted from the itinerary information and provided to the one or more other applications which can use the received application to automatically retrieve local information for the destination location. The timing of when the other applications retrieve the local information can be determined based on user preferences defaults travel dates type of application and or other parameters. The other applications can execute on the same user device or on a different user device. For example based on an itinerary stored in a travel application on a user device destination information can be provided to a weather application and a clock application on the same user device in addition to being provided to a weather application and a clock application on a friend s user device. The weather and clock applications can automatically search for weather and time information for the destination although the timing of when such searches are performed can be delayed until closer to the travel date. Once the trip is complete the destination can be removed from being persisted in the weather and clock applications although the timing and performance of the removal can depend on user preferences defaults future travel information type of application and or other parameters.

In one general aspect a method of providing information in one application based on travel plans includes detecting itinerary information stored by a first application on a user device identifying by operation of a computing device a travel destination based on the detected itinerary information communicating the travel destination to a second application executable on a user device storing the travel destination in association with the second application wherein the second application is adapted to retrieve local information based on an identified geographic location and providing local information for the travel destination through the second application in response to a user interaction with the second application and based on a triggering threshold associated with the itinerary information. Additional aspects can include corresponding apparatus systems and software including instructions for performing these actions.

Implementations can include one or more of the following features. The second application is adapted to automatically retrieve the local information for the travel destination. A user prompt to store the travel destination in association with the second application is presented wherein the travel destination is stored in association with the second application in response to a user response to the user prompt. The second application includes a user interface adapted to allow a user to manually identify a geographic location and to retrieve local information based on the manually identified geographic location. The second application is stored on the user device. The first application executes on a first user device and the second application executes on a second user device and communicating the travel destination to a second application includes communicating the travel destination from the first user device to the second user device. The first application communicates at least the travel destination through an application programming interface with an operating system of the user device. The first application communicates at least the travel destination through an application programming interface with the second application. The second application retrieves at least the travel destination through an application programming interface with an operating system of the user device. A time associated with the itinerary information is identified and the local information based on an identified geographic location is retrieved or removed using the second application based at least in part on a triggering threshold associated with the identified time. A location of the user device is identified and the local information is retrieved or removed based at least in part on the location of the user device.

In another general aspect a method includes detecting itinerary information including a geographic location stored by a first application on a user device communicating data identifying the geographic location for use by a second application executable on the user device storing the data identifying the geographic location in association with the second application wherein the second application is adapted to retrieve local information based on the geographic location and providing local information for the identified geographic location through the second application in response to a user activating the second application. Additional aspects can include corresponding apparatus systems and software including instructions for performing these actions.

Implementations can include one or more of the following features. Implementations can include one or more of the following features. A prompt for requesting authorization from a user to provide the local information for the identified geographic location through the second application is displayed. A prompt for requesting authorization from a user to store the data identifying the geographic location in association with the second application is displayed. The data identifying the geographic location stored in association with the second application is displayed based on a trigger threshold determined based at least in part on the itinerary information. Communicating the data identifying the geographic location for use by a second application executable on the user device is performed through an application programming interface associated with at least one of the first application or the second application.

In another general aspect a system includes a first user device storing a first application operable when executed by operation of a computer to store itinerary information associated with a user of the first user device wherein the first user device is adapted to execute the first application and to transmit at least a portion of the itinerary information to at least one target device and a second user device storing a second application operable when executed by operation of a computer to retrieve local information based on itinerary information received from the first user device. Additional aspects can include corresponding apparatus methods and software including instructions for performing actions of the user devices.

Implementations can include one or more of the following features. The system includes a server wherein the first user device is adapted to transmit the itinerary information to the server and the server is adapted to forward the itinerary information to the at least one target device. The first device is adapted to transmit at least a portion of the itinerary information to at least one target device using an application programming interface with an operating system of the first device. The second device is adapted to provide the itinerary information to the second application using an application programming interface with an operating system of the second device.

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features objects and advantages of the invention will be apparent from the description and drawings and from the claims.

When people travel to new locations they often desire to obtain information about the location. For example two common topics of interest are the weather and the time at the destination location. Other topics may also be relevant including local dining and transportation options events and activities or other local information. Travelers can search for such information through web browsing for example before leaving on a trip and smart phones and other handheld or portable user devices can often be used to search for such information before and during travel. A user may access multiple applications or retrieve multiple web pages to obtain the information of interest. Unless the user has previously stored the location in an application that can provide local information for various locations however the user typically has to perform a search and or otherwise manually add the destination location to the application. In accordance with techniques described in this specification travel information entered and or stored in one application on a user device can be leveraged to provide location suggestions or to automatically retrieve local information for a travel destination in one or more other applications. For example local information for a travel destination can be retrieved in other applications on the user device without having to manually enter the location or search for the location. In addition local information can be provided to applications on other user devices e.g. devices of friends or relatives authorized to receive such information so that other users also have access to local information where a friend or relative is visiting or otherwise currently located.

The travel application can store itinerary information that identifies one or more destinations e.g. Destinations A B and C . The itinerary information can also include travel dates and times. The itinerary information can be manually entered into the travel application or automatically retrieved or stored by the travel application in response to the user booking travel plans. For example a user may purchase airline tickets through the travel application which may store the airline itinerary information. Alternatively the travel application may be associated with a user account that has itinerary information stored in association with the account. The itinerary information can be automatically synchronized periodically with the user account. As another alternative the travel application may interface with other applications on a user device to receive the itinerary information . The calendar application may also be used to store appointments which can include date and location information e.g. location D . The social media application can similarly store events which can include data and location information e.g. location E .

Each of the source applications can include an application programming interface API through which data e.g. location date and time from the source application can be provided to the operating system or to other applications such as target applications . The API can operate to automatically forward the data or to allow retrieval of the data in response to a request from the operating system or a target application . In some implementations the operating system can include a destination update module that can interface with the API to receive data from the respective source application . The destination update module can operate to store the data received from the source applications for subsequent forwarding to or retrieval by the target applications . For example the destination update module can store the data until a target application is activated e.g. opened or taken out of an idle state until the target application requests the data and or until a predetermined triggering threshold e.g. time date and or user device location occurs.

The target applications generally include applications that are capable of retrieving local information. Typically the target applications can provide local information in response to user specified search parameters entered through a corresponding search user interface UI for the respective target application . The target applications can also provide local information for locations retrieved or otherwise provided by the source applications . For example the weather application can provide local weather conditions and forecasts for each of Destinations A and B and Locations D and E based on data received from the source applications . In addition the weather application can provide local weather conditions and forecasts for other locations e.g. Location X identified through search UI . The clock application can provide local time for each of Destinations A and B and Locations D and E based on data received from the source applications . In addition the clock application can provide local time for other locations e.g. Location Y identified through search UI . Similarly the dining application can provide local dining options or other information and the mapping application can provide local maps for each of Destinations A and B and Locations D and E based on data received from the source applications . In addition the dining application and the mapping application can provide dining information and local maps for other locations e.g. Location Z identified through a corresponding search UI . Although not depicted in each of the target applications can include an API for interfacing with the source applications and or the operating system and receiving data originating from the source applications .

In some implementations the target applications do not provide local information until some triggering threshold occurs. For example the local information may not be provided until shortly before a trip is scheduled to begin. Different target applications can provide the local information beginning on different dates even for the same location. For example the weather application may begin displaying local weather conditions and forecasts for Destination A a week before travel is scheduled while the clock application may begin displaying local time for Destination A the day travel is scheduled. Triggering thresholds can also be used to determine when to remove or stop displaying local information. Triggering thresholds for adding and removing local data can depend on the dates and times associated with itinerary information type of application frequency of travel to the location length of the trip detected current location of the user device and or other criteria.

Another application can include application instructions that are used to provide access to weather information for selected locations. For example the application instructions can retrieve weather information for locations that a user has manually typed in or searched for through the user interface input . The application instructions can also retrieve weather information for locations identified based on data e.g. destination received from the first application e.g. through APIs . The identified locations can be stored in the application data . The weather information for identified locations can be retrieved through a network e.g. Internet from an application server and provided to a user of the user device through a user interface display . In some implementations sharing of the location information can be based on user preferences or authorizations which can be defined through the individual applications and or through the operating system . In some cases and as further discussed below operations performed by the applications can be based in part on a current location of the user device as detected by a locating device e.g. a satellite based or terrestrial based locating system such as GPS or cellular triangulation . Among other things addition or removal of locations in the application data can be based at least in part on the current location of the user device .

In some implementations the travel application may include a built in or add on API that forwards itinerary information to or allows retrieval of itinerary information by a sharing application on the user device . The sharing application can be built into the operating system of the user device or included as a separate application that executes on the user device. The sharing application can interact with a corresponding sharing application on the second user device to share itinerary information. The sharing application on the second user device can provide the itinerary information received from the first user device to the weather application through the API . In some implementations sharing of the itinerary information can be facilitated by a sharing application server which can interface for example with sharing applications or directly with the travel application and or the weather application . For example sharing application or travel application can forward itinerary information to sharing application server which can store the itinerary information in a destination database .

The sharing application server can in addition or as an alternative control whether information is shared between particular user devices e.g. whether information from the user device is shared with the second user device . Accordingly the sharing application server can determine whether the itinerary information is provided to the second user device according to permissions subscriptions or other data stored in a friend database . For example a user of the first user device can define other users that are permitted to receive itinerary data from the travel application the sharing application and or other applications on the user device . These permissions can be added manually in response to a suggestion e.g. a suggestion made by software based on frequent interactions with a user of the second user device or automatically based on permissions granted in other applications or in the operating system of the first user device . Similarly the user of the second user device can subscribe to information from other users e.g. the user of the first user device manually automatically or in response to a suggestion. By subscribing to such information the second user device can automatically receive itinerary information from the first user device . The user of the second user device can also subscribe to or receive individual events or itineraries. In some implementations the described functions of the sharing application server the destination database and or the friend database can be built into software and the user devices e.g. in the sharing application .

Although present specific examples of a travel application and a weather application other types of applications can also be used. As with the different applications described above in connection with the different applications can be distinguished by the performance of different functions operation on different inputs and display of different user interfaces. For example the respective application instructions can present different types of information to users such that the applications are not merely different instances or versions of the same application.

The travel destination is communicated to the second application and stored in association with the second application at . In some cases the travel destination can be stored for some period in an intermediate location e.g. by the user device operating system . A triggering threshold is identified for retrieving local information for the travel destination using the second application at . An initiation triggering threshold can be based for example on a travel date and or may be dependent upon when and how often a user opens the application. Moreover the triggering threshold can be determined by the second application by an operating system that provides the travel destination to the second application or by a server that stores the travel destination during some interim period. The triggering threshold can also include parameters defining when and if the travel destination and or the local information should be removed from the second application. Based on the initiation triggering threshold the second application retrieves local information for the identified travel destination at and the local information for the travel destination is provided through the second application at . For example the local information can be displayed in response to a user interaction with the second application e.g. opening the application and or accepting a suggestion to retrieve the local information for the travel destination . The local information or the travel destination is removed from the second application or from being associated with the second application based on a removal triggering threshold at . For example the removal triggering threshold can be associated with timing of the end of a trip or other event.

If the itinerary includes multiple destinations local information for a second destination B is retrieved in the first target application at a predetermined period of time prior to a date of travel to destination B and local information for the second destination B is retrieved in the second target application at a predetermined period of time prior to the date of travel to destination B. Local information in the target applications for the first destination A can be deleted and or the persistence of the destination in memory can be removed from the target applications at when travel to the second destination begins or is scheduled to begin or based on some other removal trigger. Similarly local information in the target applications for the second destination B can be deleted and or the persistence of the destination in memory can be removed from the target applications at when a stay at the second destination B is complete.

Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs i.e. one or more modules of computer program instructions encoded on computer storage medium for execution by or to control the operation of data processing apparatus. Alternatively or in addition the program instructions can be encoded on an artificially generated propagated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium can be or be included in a computer readable storage device a computer readable storage substrate a random or serial access memory array or device or a combination of one or more of them. Moreover while a computer storage medium is not a propagated signal a computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium can also be or be included in one or more separate physical components or media e.g. multiple CDs disks or other storage devices .

The operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer readable storage devices or received from other sources.

The term data processing apparatus encompasses all kinds of apparatus devices and machines for processing data including by way of example a programmable processor a computer a system on a chip or multiple ones or combinations of the foregoing The apparatus can include special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit . The apparatus can also include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a database management system an operating system a cross platform runtime environment a virtual machine or a combination of one or more of them. The apparatus and execution environment can realize various different computing model infrastructures such as web services distributed computing and grid computing infrastructures.

A computer program also known as a program software software application script or code can be written in any form of programming language including compiled or interpreted languages declarative or procedural languages and it can be deployed in any form including as a stand alone program or as a module component subroutine object or other unit suitable for use in a computing environment. A computer program may but need not correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio or video player a game console a Global Positioning System GPS receiver or a portable storage device e.g. a universal serial bus USB flash drive to name just a few. Devices suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user embodiments of the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a physical or virtual keyboard and pointing device e.g. a mouse a trackball or a touch screen by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input. In addition a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user for example by sending web pages to a web browser on a user s client device in response to requests received from the web browser.

Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN an inter network e.g. the Internet and peer to peer networks e.g. ad hoc peer to peer networks .

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other. In some embodiments a server transmits data e.g. an HTML page to a client device e.g. for purposes of displaying data to and receiving user input from a user interacting with the client device . Data generated at the client device e.g. a result of the user interaction can be received from the client device at the server.

While this specification contains many specific implementation details these should not be construed as limitations on the scope of any inventions or of what may be claimed but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Thus particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In certain implementations multitasking and parallel processing may be advantageous.

