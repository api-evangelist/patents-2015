---

title: Access based resources driven low power control and management for multi-core system on a chip
abstract: Function resources/memory resources and an associated resource controller configured to assign a first portion of the function resources/memory resources to at least one processing element in response to an access request from the processing element. The resource controller changes a power mode of the first portion of the function resources/memory resources as a function of the first portion assignment, and leaves an unassigned portion of the function resources/memory resources in a power down mode in a self-governing nature. The resource controller enables the processing element to access the first portion of the function resources/memory resources in response to the access request received from the processing element. The function resources/memory resources, resource controllers and one or more processing elements may comprise a system on a chip (SoC).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09612651&OS=09612651&RS=09612651
owner: FUTUREWEI TECHNOLOGIES, INC.
number: 09612651
owner_city: Plano
owner_country: US
publication_date: 20150121
---
This application claims the benefit of U.S. Provisional Application No. 62 069 166 filed on Oct. 27 2014 entitled Access based resources driven low power control and management for multi core system on a chip which application is hereby incorporated by reference in its entirety.

The present disclosure relates generally to power management and more particularly to power management in a system on a chip SoC such as a function resource memory resource controller scheduler.

 Go Green is a worldwide initiative to make the world a better place to work and live. Information communications and telecommunications are essential and ubiquitous to the daily life of everyone.

Today s base band system on a chip SoC has multiple homogenous and heterogeneous digital signal processor DSP central processing unit CPU elements hardware accelerators etc. collectively processing elements accessing the same memory blocks versus the tradition architectures where a single DSP CPU processing element manages the entire resources on chip. In prior devices one DSP CPU element owned all the resources and accessed them with physical addressing. Low power management for the memory resources was managed and initiated by the DSP CPU element. Static and explicit memory organization was done by the DSP CPU element. Memory resources behaved like a dummy slave without any intelligence in terms of power and memory resources management.

This methodology become more and more cumbersome for a multiple processing element scenario since each processing element allocates and accesses the shared resources independently making power management effectively a game theory problem.

The present disclosure provides an access based low power consumption methodology for a high speed complex and low power function memory system.

According to a first example embodiment of the disclosure a method comprises receiving by a resource controller associated with function resources memory resources an access request from a processing element to access a portion of the function resources memory resources. The resource controller assigns a first portion of the function resources memory resources to the processing element in response to the access request changes a power mode of the first portion of the function resources memory resources as a function of the first portion assignment and leaves an unassigned portion of the function resources memory resources in a power down mode.

In some embodiments the resource controller changes the power mode of the first portion from a power down mode to a light sleep mode. After multiple clock cycles for instance at least 2 clock cycles after the first portion assignment the resource controller changes the power mode of the first portion to a power up mode when the first portion is accessed by the processing element. The processing element may comprise a digital signal processor DSP a central processing unit CPU a hardware accelerator etc. performing a dedicated functionality. In some embodiments the function resources memory resources the resource controller and processing element are part of a system on a chip SoC . The resource controller selectively controls a read write access to the function resources memory resources in response to the access requests and the memory resource may comprise one or more banks of memory. The resource controller receives the access request from the processing element and the resource controller controls the assignment of the function resources memory resources responsive to receiving the access request.

In another example embodiment a circuit comprises function resources memory resources and a resource controller associated with the function resources memory resources. The resource controller is configured to assign a first portion of the function resources memory resources to a processing element in response to an access request received from the processing element change a power mode of the first portion of the function resources memory resources as a function of the first portion assignment leave an unassigned portion of the function resources memory resources in a power down mode and enable the processing element to access the first portion of the function resources memory resources in response to the access request received from the processing element.

In some embodiments the resource controller is configured to change the power mode of the first portion from a power down mode to a light sleep mode in response to the first portion assignment. The resource controller is configured to change the power mode of the first portion to a power up mode after multiple clock cycles such as at least 2 clock cycles after the first portion assignment. The processing element may comprise a digital signal processor DSP a central processing unit CPU or a hardware accelerator. The resource controller is configured to selectively control a read write access to memory resources in response to the access request and the memory resources comprise one or more banks of memory.

In another embodiment a system on a chip SoC comprises a processing element and a resource controller associated with function resources memory resources. The resource controller is configured to assign a first portion of the function resources memory resources to the processing element in response to an access request from the processing element change a power mode of the first portion of the function resources memory resources as a function of the first portion assignment leave an unassigned portion of the function resources memory resources in a power down mode and enable the processing element to access the first portion of the function resources memory resources in response to the access request received from the processing element.

Referring to there is shown a conventional system on a chip SoC including conventional function resources memory resources such as memory banks having a low power controller . A central hypervisor low power controller of the SoC is configured to manage the low power for all of the processing elements and resources on the SoC . Based on different system requirements and loading the controller selectively puts processing elements and resources in a pre defined low power mode through handshaking between the low power controller and the resources and processing elements . The low power controller for the resources handles the low power handshaking with the controller to receive appropriate low power control commands and act accordingly to put the resources in the corresponding states as instructed by the low power control commands. Resources behave like a dummy slave and are not involved at all in the decision process for its own power state management.

The disadvantages for such an implementation are that the centralized low power management controller cannot always keep up to date to the overall SoC system operation and loading due to the dynamic nature of the multi element SoC . Each processing element can either work independently or work closely with another processing element which makes the system loading and power consumption vary a lot from time to time. It is almost impossible for one centralized low power controller to always make smart and intelligent decision on the fly. Also the granularity of the low power management is coarse since it always operates on a few pre defined static low power states which results with more power being consumed overall.

Referring to there is shown an example embodiment according to this disclosure including a SoC having function resources memory resources collectively sometimes referred to as resources managed by an associated resident low power manager quality of service QoS parser and a resources scheduler sometimes collectively referred to as resource controller . The function resources memory resources comprise for instance one or more banks of individually addressable and controllable memory and a power management policy application programming interface API . The processing element comprises one of a digital signal processor DSP a central processing unit CPU and a hardware accelerator. Each processing element is configured to directly make requests for portions of function resources memory resources with QoS parameters and the resources scheduler and low power manager QoS parser responsively assign function resources memory resources . The processing elements are configured to submit and the power management API is configured to receive power management policy parameters such as access patterns gaps between accesses low power requirements between the access gaps etc. The resources scheduler and low power manager QoS parser are configured to responsively allocate function resources memory resources to processing elements and advantageously carry out low power control locally based on its policy instead of being managed by the multiple processing elements .

The processing elements may use virtual addressing or message transfer that conveys metadata which enables the resources scheduler and low power manager QoS parser to efficiently manage memory organization of function resources memory resources at the lowest power while still maintaining QoS.

The resources scheduler and low power manager QoS parser manage banks of function resources memory resources in a power down mode until their use has been assigned by the resources scheduler and low power manager QoS parser . This is not possible in a simple random access memory RAM .

Once function resources memory resources are assigned to a processing element power access messages from the processing elements allow the resources scheduler and low power manager QoS to put unassigned function resources memory resources in other sleep modes such as light sleep. Once function resources memory resources are de assigned they are put back to an appropriate power down mode.

The resources scheduler and low power manager QoS comprise a service oriented low power control and management system that is self governing and an autonomous system where the service fulfilling modules provide the necessary services requested by the masters requestors while managing the modules by themselves particularly from lower power management perspective. A scheduler inside of the resource controller is responsible for allocating memory resources on the fly. Also the scheduler sends appropriate low power controller signals to individual banks of memory.

As shown in all service requests are passed by the masters requestors the processing elements in a form of a service contract where the service request defines the following information 

The service contract information is a set of rich metadata which informs the resources scheduler with parameters such as how important the access is how soon or urgent this particular access must be served QoS requirements etc. The resources scheduler schedules the resource access to the function resources memory resources based on this information and decides to serve the current access right away or group it with other accesses together to turn on a particular memory bank which is still in a low power state at this point later in order to save more power.

Once the QoS parser which is sitting in front of the service fulfilling resources scheduler receives the service contract information the QoS parser starts to process the service contract information based on the current working loads splits the service contract to small pieces and schedules the sub tasks to the resources scheduler to make sure that QoS is guaranteed while saving the power as much as possible.

QoS parser is designed to use one or multiple low power techniques described above to achieve the goal of saving power.

If for instance the function resources memory resources have numerous banks of memory the QoS parser can put the function resources memory resources right into the light sleep deep sleep modes depending on the number of outstanding sub tasks which have memory read write accesses.

The QoS parser can also clock gate or even power off a portion of function resources memory resources if such a sub function will not be used for a foreseeable future.

If the current throughput bandwidth requirement is not very high the QoS parser can also dial down the running frequency to or if necessary.

The QoS parser is the last sub module to be clock power gated since it is the local center office while the rest of the function resources memory resources can be in operation or idling clock power off which purely depends on the current working mode loads.

A status signal provides heart beat information to the central hypervisor low power controller . The frequency of the heart beat signal is proportional to how active a service fulfilling module is running.

Another salient feature of the QoS driven low power control and management methodology is that the function fulfilling modules sub modules the function resources memory resources activate low power schemes based on data instead of commands issued from masters requestors. One could consider data is water flowing through pipes where data is water vs the processing elements are pipes in this analogy. Once there isn t any data to be processed all the pipes could be put into idle which saves more power compared to wait till masters requestors to inform the fulfilling modules to do so.

As shown in this disclosure takes advantage of the system level data flow. Besides each function or block sensing its idleness and coming to a low power state the function block gets a low power flow control signal from the preceding functions blocks in advance sensing that it will or will not have any data to process sometime in the future and thus can enter a low power state. For example if the Function block has no data to process and is thus idle it will send low power feedback signals to the following blocks to notify them that they should also expect no data some time in the future and can transition to a low power mode.

Advantageously the resources scheduler and the low power manager QoS parser provide better and more efficient flexible and more scalable low power management methodology to further reduce power in multi core SoC chips with finer granularity. Lower power means a lower power bill less number of cooling fans and smaller chassis which turns to more savings to the end customers.

Referring to there is shown one example block diagram of the memory controller . Memory controller includes an AXI memory command scanner a write arbiter a write combiner a read arbiter and a read combiner . The write arbiter and read arbiter are configured to be managed by a supervisor . Advantageously memory controller also includes a plurality of bank controllers each configured to control access to one or more respective memory banks . The plurality of memory banks in some embodiments comprises the function resources memory resources . The memory controller in some examples sends appropriate low power controller signals to individual or multiple banks of memory.

Referring to and in one example embodiment the QoS parser and resources scheduler controls a memory region consisting of multiple addressable banks each bank having linear or interleaved physical banks for example.

QoS parser and resources scheduler oversee the entire memory space and know which region of addressable bank is currently active or in a low power mode. If bank of addressable bank is in light sleep mode and it has one read access to its location that needs to be served within 30 cycles later and another read to another location that needs to be served within 28 cycles later QoS parser schedules the two reads together while still keeping this bank in the light sleep mode for another 20 clock cycles then starts to wake up the bank which normally takes 3 to four clock cycles executes the reads to meet QoS and then puts it back to light sleep mode again if there isn t more reads to this bank.

Since an AXI bus protocol consists of five channels AW AR R W B plus some user defined sideband signals which are used to improve the performance all the information together is considered as metadata.

For example with a read coming into the QoS parser and resources scheduler address length of read and priority is available from the AR channel signals. The sideband signals can be configured together by processing elements to carry other important information such as how soon they should be served etc.

For both AW and AR channels there is a built in Request Ready handshake scheme that is used to throttle the request. This is very important feature to avoid over running the QoS parser.

If there are a lot of requests come into the QoS parser and resources scheduler the QoS parser and resources scheduler could quickly reach the upper limit of how many outstanding reads writes it could serve. In such a situation the QoS parser and resources scheduler stall the traffic briefly with the back pressure handshake scheme and the low power feature is turned off completely to guarantee QoS till the outstanding numbers of reads writes drop below a threshold. One example methodology is shown at in .

To avoid or minimize a stall the transaction is served with less time by interleaving memory such as to eight or sixteen memory banks. For example if there is a transaction read from address 0 to 7 it will take a linear memory eight clock cycles to finish however it will only take one clock cycle if the memory address is interleaved by eight because it can take the data all together from eight different pieces of memory at the same time.

Referring to there is shown a comparison of the present disclosure to a conventional solution. In a conventional solution memory could enter into light sleep mode in 4 to 64 clock cycles however blindly entering into light sleep mode in 4 64 clock cycles would greatly impact the overall read and write access latency. Thus it has to scale up to 128 clock cycles as shown just to avoid performance degradation.

The present disclosure can fully utilize 4 clock cycles entry time without impacting the performance since it has the built in memory manager comprising QoS parser and resources scheduler which may be an improvement of 9 for the utilization.

This disclosure advantageously changes the responsibilities of power and resources management from one or many masters i.e processing elements to the slave i.e the resources scheduler and QoS parser servicing the function resources memory resources . The access based resources scheduler and QoS parser save power while the function resources memory resources are not being requested for access and in the gaps between the multiple accesses.

It may be advantageous to set forth definitions of certain words and phrases used throughout this patent document. The terms include and comprise as well as derivatives thereof mean inclusion without limitation. The term or is inclusive meaning and or. The phrases associated with and associated therewith as well as derivatives thereof mean to include be included within interconnect with contain be contained within connect to or with couple to or with be communicable with cooperate with interleave juxtapose be proximate to be bound to or with have have a property of or the like.

While this disclosure has described certain embodiments and generally associated methods alterations and permutations of these embodiments and methods will be apparent to those skilled in the art. Accordingly the above description of example embodiments does not define or constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure as defined by the following claims.

