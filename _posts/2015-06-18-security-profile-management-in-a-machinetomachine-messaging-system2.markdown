---

title: Security profile management in a machine-to-machine messaging system
abstract: Techniques and systems for managing security profiles in a machine-to-machine messaging system are provided. For example, computing device, a method, and a computer-program product may be provided for maintaining one or more security profiles, and may include registering one or more IoT devices with a messaging system, generating one or more security profiles for an IoT device, and assigning the one or more security profiles to one or more other IoT devices. A security profile includes a permissions record and one or more sets of restrictions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09578033&OS=09578033&RS=09578033
owner: Citrix Systems, Inc.
number: 09578033
owner_city: Fort Lauderdale
owner_country: US
publication_date: 20150618
---
This application is a continuation of U.S. patent application Ser. No. 14 550 719 entitled Security and Rights Management in a Machine To Machine Messaging System filed Nov. 21 2014 which is hereby expressly incorporated by reference herein.

Networks provide the ability for network connectable devices to communicate with one another. For example Internet of Things IoT systems allow communication among various IoT devices and or other devices. As more and more IoT devices begin exchanging messages the risk of security breaches becomes more likely. Manufacturers of IoT devices may resist the progression of IoT messaging systems due to security risks. For example a manufacturer may not allow its devices to communicate with devices of other manufacturers for fear that the other devices may not be secure. Accordingly security and rights management techniques and systems are described herein to reduce or remove security risks in machine to machine messaging systems.

Techniques and systems are described for providing security and rights management in a messaging system that allows various devices to securely exchange machine to machine messages. The devices may include Internet of Things IoT devices that are manufactured by different manufacturers and that are not designed to natively communicate with one another. The messaging system allows the devices to communicate despite not sharing common application programming interfaces or connection protocols. Devices may be assigned a unique identifier e.g. a universally unique identifier UUID and a token. In some embodiments one or more components or programs of a device may also be assigned a unique identifier and a token such as a sensor e.g. a camera motion sensor temperature sensor accelerometer gyroscope or any other available sensor an output e.g. a microphone siren display light tactile output or any other available output a third party messaging service that the device is able to run or any other component of a device that can be identified accessed and or controlled. Using the messaging system devices that have assigned unique identifiers can access a vast network of devices and can message or otherwise communicate with the devices.

Various security and rights management techniques are described herein. In some examples a device may be required to have particular credentials for accessing or communicating with another device. In some embodiments the unique identifier e.g. a UUID and token are the credentials of a device for connecting the device to the messaging system network. A UUID registered or otherwise connected with the messaging system network may have whitelist and blacklist arrays of other UUIDs that have permission or non permission to discover the UUID message with the UUID subscribe to the UUID configure the UUID or other permission with respect to the UUID. In some examples different credentials may be required for different types of access permissions. For example different types of credentials may be required to configure a device compared to types of credentials required to discover the device. In some examples message transport may also be encrypted. For example one or more certificates may be used to authenticate a communication sent from one device to another device.

In some embodiments certain restrictions may be specified that restrict how or when devices users or systems communicate with certain other devices users or systems. For example restrictions may include location restrictions timing restrictions presence restrictions message envelope restrictions path restrictions information throttles or any other appropriate restriction. In some examples communications may be analyzed to determine whether the communications are approved types of communications. For example a message envelope of a message may be analyzed to determine whether the message is appropriate for transmission to a destination device. A message envelope may include a payload a from identifier a to identifier a timestamp or other information. Any portion of the message envelope may be interrogated to control or limit information that is allowed to reach a destination device. For example the payload if not encrypted may be analyzed to control the type or amount of information that is allowed to reach a device user or system. In another example a message may include a from identifier which may include a unique identifier of the sending device and or a to identifier which may include a unique identifier of the destination device. The from identifier may be analyzed to determine whether the sending device is authorized to send the message. The to identifier may be analyzed to determine whether the destination device is authorized to receive the message.

In some embodiments one or more security profiles may be associated with a device. A security profile may include a permissions record restrictions encryption information or any other relevant information. A device may be associated with multiple security profiles. Different security profiles of a device may be applied to different groups such as a company a service or carrier a device or groups of devices a person or group of people or any other appropriate group.

In some embodiments the messaging system may detect unauthorized message attempts by devices. An unauthorized message attempt may be based on various factors. For example the system may detect when a device lacks a proper credential or security certificate to exchange a message with another device. In another example the system may detect that restrictions e.g. location restrictions timing restrictions presence restrictions message envelope restrictions path restrictions information throttles or any other appropriate restriction have not been met by a particular message and may deem the message an unauthorized message attempt. In yet another example a device may be associated with a permissions record that includes one or more lists of approved and or unapproved devices. When a message that does not meet the requirements of the permissions record is detected the message may be deemed an unauthorized message attempt by the sending device. In another example an analytics system may be queried to determine whether any unauthorized message attempts have been made by any devices. The analytics system may aggregate large amounts of data and may detect certain events or anomalies that indicate an unauthorized message attempt. In some examples the messaging system may perform various functions in the event an unauthorized message attempt is detected. For example if a predetermined number of unauthorized message attempts are detected from a device the device may be prevented from exchanging communications with any other devices. In another example a device may be removed or unregistered from the messaging system when a predetermined number of unauthorized message attempts are detected from the device. Various other functions may be performed in response to detection of one or more unauthorized message attempts by a device.

According to at least one example a computing device for detecting unauthorized message attempts may be provided. The computing device includes one or more data processors and a receiver configured to receive a communication from a first Internet of Things IoT device wherein the communication is destined for a second IoT device wherein the first IoT device is assigned a first universally unique identifier and wherein the communication includes a second universally unique identifier assigned to the second IoT device. The computing device further includes a non transitory machine readable storage medium containing instructions which when executed on the one or more data processors cause the one or more processors to perform operations including obtaining the second universally unique identifier determining that the second universally unique identifier is assigned to the second IoT device and determining using the second universally unique identifier that the communication received from the first IoT device is an unauthorized message attempt by the first IoT device to exchange a message with the second IoT device.

In some embodiments a computer implemented method of detecting unauthorized message attempts may be provided that includes receiving on a computing device a communication from a first Internet of Things IoT device wherein the communication is destined for a second IoT device wherein the first IoT device is assigned a first universally unique identifier and wherein the communication includes a second universally unique identifier assigned to the second IoT device. The method further includes obtaining the second universally unique identifier determining that the second universally unique identifier is assigned to the second IoT device and determining using the second universally unique identifier that the communication received from the first IoT device is an unauthorized message attempt by the first IoT device to exchange a message with the second IoT device.

In some embodiments a computer program product tangibly embodied in a non transitory machine readable storage medium of a computing device may be provided. The computer program product includes instructions configured to cause one or more data processors to receive a communication from a first Internet of Things IoT device wherein the communication is destined for a second IoT device wherein the first IoT device is assigned a first universally unique identifier and wherein the communication includes a second universally unique identifier assigned to the second IoT device obtain the second universally unique identifier determine that the second universally unique identifier is assigned to the second IoT device and determine using the second universally unique identifier that the communication received from the first IoT device is an unauthorized message attempt by the first IoT device to exchange a message with the second IoT device.

In some embodiments the computing device method and computer program product described above for detecting unauthorized message attempts may further include accessing a permissions record associated with the second universally unique identifier assigned to the second IoT device wherein the permission record includes a first list of universally unique identifiers associated with IoT devices that have permission to access the second IoT device at one or more levels of access or a second list of universally unique identifiers associated with IoT devices that do not have permission to access the second IoT device at the one or more levels of access. The computing device method and computer program produce may further include determining that the first IoT device is unauthorized to exchange the message with the second IoT device using the permissions record associated with the second universally unique identifier and determining that the communication received from the first IoT device is an unauthorized message attempt based on the determination that the first IoT device is unauthorized to exchange the message with the second IoT device.

In some embodiments the computing device method and computer program product described above may further include transmitting a query to an analytics system wherein the query includes a request for any unauthorized message attempts associated with the second universally unique identifier assigned to the second IoT device. The computing device method and computer program produce may further include receiving a response from the analytics system wherein the response indicates that the communication received from the first IoT device includes an unauthorized message attempt by the first IoT device and determining that the communication received from the first IoT device is an unauthorized message attempt based on the response from the analytics system.

In some embodiments the computing device method and computer program product described above may further include detecting an occurrence of a predetermined number of communications from the first IoT device and determining that the communication received from the first IoT device is an unauthorized message attempt based on the predetermined number of communications being detected from the first IoT device.

In some embodiments the computing device method and computer program product described above may further include accessing a security profile associated with the second universally unique identifier assigned to the second IoT device wherein the security profile includes a permissions record and one or more restrictions determining that the communication received from the first IoT device violates the security profile and determining that the communication received from the first IoT device is an unauthorized message attempt based on the determination that the communication received from the first IoT device violates the security profile.

In some examples the second universally unique identifier assigned to the second IoT device is associated with a plurality of security profiles wherein a security profile includes a permissions record and one or more restrictions and wherein different ones of the plurality of security profiles are assigned to one or more groups.

In some embodiments the computing device method and computer program product described above may further include obtaining a message envelope of the communication analyzing the message envelope to determine whether the communication is an approved type of communication and determining based on the analyzed message envelope that the communication is not an approved type of communication. The computing device method and computer program product described above may further include determining that the communication received from the first IoT device is an unauthorized message attempt based on the determination that the communication received from the first IoT device is not an approved type of communication.

In some embodiments the computing device method and computer program product described above may further include preventing the first IoT device from exchanging communications with any devices upon determining that the communication received from the first IoT device is an unauthorized message attempt. In some examples preventing the first IoT device from exchanging communications with any devices includes rejecting any messages communicated to the first IoT device and rejecting any messages communicated from the first IoT device.

In some embodiments the computing device method and computer program product described above may further include transmitting a notification to the second IoT device wherein the notification indicates an occurrence of the unauthorized message attempt by the first IoT device.

This summary is not intended to identify key or essential features of the claimed subject matter nor is it intended to be used in isolation to determine the scope of the claimed subject matter. The subject matter should be understood by reference to appropriate portions of the entire specification of this patent any or all drawings and each claim.

The foregoing together with other features and embodiments will become more apparent upon referring to the following specification claims and accompanying drawings.

For the purposes of explanation the ensuing description provides specific details that are set forth in order to provide a thorough understanding of various embodiments. It will be apparent however to one skilled in the art that various embodiments may be practiced without some of these specific details. For example circuits systems networks processes and other components may be shown as components in block diagram form in order not to obscure the embodiments in unnecessary detail. In other instances known circuits processes algorithms structures and techniques may be shown without unnecessary detail in order to avoid obscuring the embodiments. In other instances well known structures and devices are shown in block diagram form.

The ensuing description provides exemplary embodiments only and is not intended to limit the scope applicability or configuration of the disclosure. Rather the ensuing description of the exemplary embodiments will provide those skilled in the art with an enabling description for implementing an exemplary embodiment. It should be understood that various changes may be made in the function and arrangement of elements without departing from the spirit and scope of the invention as set forth in the appended claims.

Specific details are given in the following description to provide a thorough understanding of the embodiments. However it will be understood by one of ordinary skill in the art that the embodiments may be practiced without these specific details. For example circuits systems networks processes and other components may be shown as components in block diagram form in order not to obscure the embodiments in unnecessary detail. In other instances well known circuits processes algorithms structures and techniques may be shown without unnecessary detail in order to avoid obscuring the embodiments.

Also it is noted that individual embodiments may be described as a process which is depicted as a flowchart a flow diagram a data flow diagram a structure diagram or a block diagram. Although a flowchart may describe the operations as a sequential process many of the operations can be performed in parallel or concurrently. In addition the order of the operations may be re arranged. A process is terminated when its operations are completed but could have additional steps not included in a figure. A process may correspond to a method a function a procedure a subroutine a subprogram etc. When a process corresponds to a function its termination can correspond to a return of the function to the calling function or the main function.

The term machine readable storage medium or computer readable storage medium includes but is not limited to portable or non portable storage devices optical storage devices and various other mediums capable of storing containing or carrying instruction s and or data. A machine readable storage medium or computer readable storage medium may include a non transitory medium in which data can be stored and that does not include carrier waves and or transitory electronic signals propagating wirelessly or over wired connections. Examples of a non transitory medium may include but are not limited to a magnetic disk or tape optical storage media such as compact disk CD or digital versatile disk DVD flash memory memory or memory devices. A computer program product may include code and or machine executable instructions that may represent a procedure a function a subprogram a program a routine a subroutine a module a software package a class or any combination of instructions data structures or program statements. A code segment may be coupled to another code segment or a hardware circuit by passing and or receiving information data arguments parameters or memory contents. Information arguments parameters data etc. may be passed forwarded or transmitted via any suitable means including memory sharing message passing token passing network transmission etc.

Furthermore embodiments may be implemented by hardware software firmware middleware microcode hardware description languages or any combination thereof. When implemented in software firmware middleware or microcode the program code or code segments to perform the necessary tasks e.g. a computer program product may be stored in a machine readable medium. A processor s may perform the necessary tasks.

Systems depicted in some of the figures may be provided in various configurations. In some embodiments the systems may be configured as a distributed system where one or more components of the system are distributed across one or more networks in a cloud computing system.

Networks provide the ability for network connectable devices to communicate with one another. For example Internet of Things IoT systems allow communication among various IoT devices and or other devices. As more and more IoT devices are able to exchange messages the risk of security breaches becomes more likely. Systems and techniques described below enable IoT devices from different manufacturers to exchange messages notwithstanding the devices possibly using different connection protocols or application programming interfaces that are manufacturer specific. However manufacturers of IoT devices may resist the use of this type of IoT messaging system due to security risks involved with exchanging messages with other manufacturers devices. For example a manufacturer may not allow its devices to communicate with devices of other manufacturers for fear that the other manufactures devices may not be secure. Accordingly security and rights management techniques and systems are described herein to reduce or remove security risks in machine to machine messaging systems.

The system may include one or more remote servers or clouds that are in communication with other devices or systems via a network such as the Internet an intranet a LAN a PAN or a WAN. For example the system includes a common messaging system or messaging system that supports machine to machine instant message exchange in real time or near real time. In some embodiments the messaging system may be an open source machine to machine messaging platform enabling IoT devices other devices or machines and or systems to exchange messages or otherwise communicate with any other IoT devices other devices or machines and or systems. The messaging system may be implemented by one or more remote servers and may allow an IoT device other device or machine and or a system to exchange communications or messages with another device or system regardless of whether the devices or systems are built by different manufacturers operate using different connection protocols or interfaces or whether the devices or systems are built with the ability to communicate with a network. While only a single messaging system is shown in one of ordinary skill in the art will appreciate that multiple private or public messaging systems may be implemented using the techniques described herein. One or more remote servers of the messaging system may be connected to a network via the Internet and or other connection platforms e.g. a WAN and or a LAN such that the servers may be accessed from anywhere in the world. The remote servers allow IoT devices other devices or machines and or systems connected to the servers via the network to communicate and exchange messages with other IoT devices other devices or machines and or systems from anywhere in the world. The remote servers may be configured with enough processing power to run an application store and process data and or perform any other computing task. In some examples the remote servers may provide enough processing power to operate applications running on devices located remotely from the servers and applications running on the servers themselves.

Messaging system may be configured to support multiple connection protocols such as any suitable machine to machine connection protocol. For example the messaging system may support connection protocols such as hypertext transfer protocol HTTP websockets message queuing telemetry transport MQTT constrained application protocol CoAP Extensible Messaging and Presence Protocol XMPP Simple Network Management Protocol SNMP AllJoyn and or any other suitable connection protocol. The multiple connection protocols supported by the messaging system may be referred to herein as native connection protocols of the messaging system . Messaging system may also support multiple developer platforms such as one or more software developer kits SDKs . For example the messaging system may support SDKs such as Node.JS JavaScript Python Ruby or any other suitable SDK. The support of multiple developer platforms and protocols provides programmers with the flexibility to customize functions instructions and commands for IoT devices other devices or machines and or systems connected to messaging system .

The messaging system may include a cloud infrastructure system that provides cloud services. In certain embodiments services provided by the cloud infrastructure of messaging system may include a host of services that are made available to users of the cloud infrastructure system on demand such as registration access control and message routing for users devices or machines systems or components thereof. Services provided by the messaging system can be dynamically scaled to meet the demands of users. The messaging system may comprise one or more computers servers and or systems. In some embodiments the computers servers and or systems that make up the cloud network of the messaging system are different from a user s own on premises computers servers and or systems. For example the cloud network may host an application and a user may via a communication network such as a WAN LAN and or PAN on demand order and use the application. In some embodiments the cloud network of the messaging system may host a Network Address Translation Traversal application to establish a secure connection between the messaging system and a device or machine. A separate secure connection e.g. using a native protocol of the messaging system may be established by each device or machine for communicating with the messaging system . In certain embodiments the cloud network of the messaging system may include a suite of applications middleware or firmware that can be accessed by a user device or machine system or component thereof.

Upon registering with the messaging system each device or machine person and or system may be assigned a unique identifier and a security token. For example a device IoT or other device or system connected to the messaging system a person associated with an account or an application that utilizes the messaging system or the like may be assigned or otherwise provided with a distinct universally unique identifier UUID and or a distinct security token. Each IoT device other device or machine system and or person using a device must communicate its distinct UUID and security token to the messaging system in order to access the messaging system . The messaging system may authenticate the IoT device other device or machine system and or person using each respective distinct UUID and token. The messaging system may use the UUIDs to process route and or otherwise manage messages and other communications to an appropriate device person system and or machine. For example a device may send a message with its UUID and a destination UUID for the device system or person to which the message is destined. The messaging system may process route and or otherwise manage the message so that it is received at the appropriate destination.

In some embodiments one or more components or programs of a device or system may also be assigned a unique identifier and a security token. In some cases the unique identifier and or token for the components of a device or system may be the same as the unique identifier and or token of the device or system itself. In some cases the unique identifier and or token for a component or program of a device or system may be different from that of the device or system and may be unique only to the component or program. In some embodiments components of a device or system that may be assigned a unique identifier may include a sensor e.g. a camera motion sensor temperature sensor accelerometer gyroscope or any other available sensor an output e.g. a microphone siren display light tactile output or any other available output a third party messaging service that the device or system is able to run or any other component of a device or system that can be identified accessed and or controlled.

Messaging system may further be configured to interact with any application programming interface API . Each API may also be assigned or otherwise provided with a unique identifier e.g. a distinct UUID and or a security token. Assigning APIs with a unique identifier enables messaging system to receive instructions from and provide instructions to any IoT device other device or machine and or system that is connected to the messaging system . By being able to interact with any API messaging system may control the functionality of all components of a registered IoT device other device or machine and or system that are accessible by the messaging system . In some embodiments messaging system may be configured such that a single message transmitted by messaging system may be communicated to multiple devices and or systems having different APIs. Accessible IoT devices other devices or machines and or systems include any device that has been registered with messaging system and that has been assigned a unique identifier and or a security token. For example a user may purchase an IoT device. The user must register the IoT device with the messaging system and may be assigned a UUID and security token by the messaging system to make the IoT device accessible to the messaging system and other devices registered with the messaging system .

Using the common messaging system people devices systems and or components thereof that have assigned UUIDs can query and communicate with a network of other people devices system and components thereof that have assigned UUIDs and that meet specific search criteria. For example a device may query the common messaging system searching for a specific type of device or devices that are located in a particular area and may receive a list of UUIDs for devices that meet the search criteria. The device may then send a message with a destination UUID assigned to the destination device to which the device wants to send a message.

In some embodiments messaging system may also detect connect and or communicate with other servers allowing messaging system to route messages to IoT devices other devices or machines and or systems on the other servers via a server to server connection. Server to server communications may include connections used to transfer data from one server to another server. For example a user may use multiple cloud servers to store different types of information. A user may want to transfer data from a first server of a first cloud network to a second server of a second cloud network. A server to server communication allows the user to directly transfer or otherwise share this information with the second server. As another example the messaging system supports inter cloud communications to allow people devices or machines systems or components thereof to route messages across clouds to other people devices or machines systems or components thereof registered with other clouds. For instance a device connected to a private or public cloud network may send a message to another device connected to another private or public cloud.

IoT devices other devices or machines and or systems may be able to connect with the messaging system in several ways. In some embodiments devices and systems may communicate with the messaging system using a messaging system gateway or hub. For example IoT devices other devices or machines and or systems may communicate with the messaging system using messaging system gateway . The messaging system gateway may be connected to a same LAN as the devices that use the messaging system gateway . For example the messaging system gateway may be installed at a location such as a home office a sports venue an outside environment e.g. a park a city or the like or any other suitable location. In some embodiments the messaging system gateway includes an instance of messaging system software that is configured to interact with the messaging system . In some cases the messaging system gateway may be run on an operating system such as but not limited to Linux Mac OS and or Windows . In some embodiments a messaging system gateway may be a standalone physical device such as a wireless router or modem which runs the gateway software that connects to the messaging system using a WAN. In some embodiments a messaging system gateway may be integrated into an IoT device other device or machine and or system by installing the gateway software onto the IoT device other device or machine and or system. For example the messaging system gateway may be run on computing devices such as a Raspberry Pi a home and or office computer Intel Galileo Beagle Bones Yuns and or other suitable computing device.

Regardless of physical form the messaging system gateway may operate as an intermediary between the messaging system and the devices or systems that use the messaging system gateway . For example IoT devices other devices or machines and or systems may be connected to messaging system gateway which then links the IoT devices other devices or machines and or systems to the messaging system in real time. The connection of a device or system to the messaging system via the messaging system gateway allows connected IoT devices other devices or machines and or systems to communicate with one another in real time. IoT devices other devices or machines and or systems may be connected to messaging system gateway using one or more native connection protocols of the IoT device other device or machine and or system. The protocols may include but are not limited to Transmission Control Protocol TCP User Datagram Protocol UDP WiFi ZigBee Bluetooth low energy BLE . HTTP websockets MQTT CoAP XMPP SNMP AllJoyn and or any other suitable connection protocol. In some embodiments messaging system gateway may broadcast a private network signal such that registered devices and systems may securely connect to the messaging system gateway and to the messaging system . Devices and systems that do not have access to the messaging system gateway and messaging system may be unable to process the private network signal.

In some embodiments messaging system gateway is on a LAN side of a firewall such as a network address translations NAT firewall implemented using a router or other suitable firewall. In some cases the messaging system gateway may use websockets to connect to the messaging system . The connection between websockets of the messaging system gateway and the messaging system may include a bi directional persistent connection. The bi directional persistent connection may auto reconnect as WAN e.g. Internet or the like connectivity becomes available. By locating the messaging system gateway inside of the firewall only communications to and from the messaging system gateway have to be granted access to the firewall. Accordingly the messaging system and any system and or device connected to the messaging system gateway may communicate through the firewall via the messaging system gateway . The messaging system gateway may be used by a person or business to connect various IoT devices other devices or machines and or systems to the messaging system serving as a secure connection for communicating with messaging system much like a personal firewall.

Devices and systems may also be able to communicate with the messaging system using a mobile messaging system gateway that is installed on a mobile device. For example IoT devices other devices or machines and or systems may be able to connect with the messaging system using a mobile gateway . The mobile gateway may be similar to a messaging system gateway but instead is installed and operated on a mobile device. For example mobile gateway may be installed on a mobile phone tablet laptop wearable device or other suitable mobile device. The mobile gateway may allow the mobile phone to connect to the messaging system . The mobile gateway may access all sensors on the mobile device. For example geolocation sensor data compass headings accelerometer data or any other sensor data of a mobile phone may be provided to the messaging system through mobile gateway . In some embodiments the mobile gateway may be installed in wearable technology such as pedometers headsets watches and the like as well as in Bluetooth low energy devices. In some embodiments the mobile gateway may also provide a personal area network PAN and may allow other devices that are connectable to the mobile device to connect to the messaging system via the mobile gateway . For example one or more devices that do not have an Internet Protocol address and that are not able to connect to a LAN e.g. a WiFi network or the like may connect to the mobile gateway using a wired interface or a short range communication protocol interface such as Bluetooth. BLE Zigbee near field communication NFC radio frequency RF infrared IR or any other suitable communication protocol. These devices may then connect to messaging system through the mobile gateway of the mobile device. The mobile gateway may operate to exchange communications between the devices and the messaging system . Devices that do not have an Internet Protocol address and that are not able to connect to a local area network may include wearable technology or other similar devices that only have access to a PAN.

In some embodiments an IoT device other device or machine and or system may connect with messaging system the messaging system gateway and or the mobile gateway using a universal messaging system interface that is programmed into the device or system. The built in universal messaging system interface or universal interface allows a device or system to perform operations that native firmware of the device or system does not allow it to perform. For example the messaging system interface may override the native firmware of a device to allow the device to perform various operations that are outside of the functionality of the native firmware. In some embodiments the messaging system interface may be installed on a device that does not have the ability to communicate with other devices using one or more connection protocols. In such embodiments the messaging system interface may provide the device with the capability to use one or more connection protocols. The messaging system interface may access one or more sensors inputs outputs or programs on the device or system in order to perform various operations. For example the messaging system interface may have access to and control a geolocation sensor a compass a camera a motion sensor a temperature sensor an accelerometer a gyroscope a graphical interface input a keypad input a touchscreen input a microphone a siren a display a light a tactile output a third party messaging service that the device or system is able to run or any other component of a device or system that can be identified accessed and or controlled.

In some embodiments the built in universal messaging system interface may include an operating system that allows the device to communicate with the messaging system . Messaging system interface may be installed on an IoT device other device or machine and or system server. For example the messaging system interface may be installed on a Raspberry Pi board an Arduino board a microcontroller a minicomputer or any other suitable computing device.

In some embodiments a device or system running the messaging system interface may connect directly to messaging system . In some embodiments a device or system running the messaging system interface may connect to the messaging system via the messaging system gateway or the mobile gateway . The messaging system interface run by the device or system may be assigned a UUID and a token. The messaging system interface may connect to the messaging system using the assigned UUID and token and may await further instructions from the messaging system . In some embodiments the messaging system may act as a compute server that controls the messaging system interface . For example messaging system may activate and or deactivate pins of the computing device running the messaging system interface request sensor data from the computing device and or cause the messaging system interface to perform other functions related to the computing device. In some embodiments the messaging system interface can be connected to a gateway e.g. messaging system gateway or mobile gateway and the gateway may act as a compute server that controls the messaging system interface in a similar manner as described above. In some embodiments messaging system interface may be a mobile operating system or application that is able to run on mobile device operating systems such as iOS and Android operating systems.

Information obtained by messaging system including information transmitted to messaging system by messaging system gateway mobile gateway messaging system interface and or directly from an IoT device or system may be transmitted to one or more data storage systems. For example information about IoT devices other devices or machines and or systems registered with the messaging system may be transmitted to device directory for storage. In some embodiments the information about the IoT device other device or machine and or system may be stored in device directory upon registration of the IoT device other device or machine and or system. For example information stored in device directory for a device or system may include a unique identifier e.g. a UUID a token information related to when the device or system comes online or offline a permissions record described below a security profile described below and or any other relevant information.

In some embodiments the device directory is queriable such that a device system or user may be provided with a list and or array of IoT devices other devices or machines and or systems that fit requested search criteria. The messaging system may access the device directory upon receiving a query from a device system or user. Upon polling the device directory according to the criteria specified in a query made by a device the messaging system may provide the device with a list or array of unique identifiers e.g. UUIDs assigned to IoT devices other devices or machines and or systems that are currently online and that the device has access to according to the device s UUID and or security token. As described in further detail below the device s access may be determined using permission records and or security profiles of the IoT devices other devices or machines and or systems that meet the search criteria of the query. For example a permissions record operates as a security feature ensuring that devices systems and users only have access to other devices systems and users to which permission has been granted.

In some embodiments sensor data from sensors of registered IoT devices other devices or machines and or systems may be transmitted to sensor data storage . The sensor data may be streamed from a registered IoT device other device or machine and or system through messaging system in real time. Sensor data storage is queriable such that a user device or system may poll sensor data storage to receive data from specified sensors during a specified time period. A user device or system may also be able to query the sensor data storage for all available data from one or more sensors. In some embodiments information from sensor data storage as well as additional information from messaging system may be transmitted to an analytics database . In some embodiments analytics database may not be queried by a user of the system . In other embodiments analytics database may be queried by a user of the system . The information stored in analytics database may be accessible via a platform network .

In some embodiments multiple servers or other systems may each operate an instance of software that includes the messaging system thus creating multiple cloud servers and or instances of messaging systems . In some embodiments a particular instance of messaging system may have its own UUID that allows the instance of messaging system to connect to another instance of messaging system to form a mesh network of messaging systems. Other networks and devices or machines may also be part of the mesh network such as LANs and PANs and the devices or machines that are interconnected using the LANs and PANs. Each of the LANs and PANs can have their own unique UUID and or token registered with the messaging system . The LANs and PANs are addressable using their unique UUID and can also address other UUIDs around the world. Such a mesh network may allow messages and other communications to be routed between devices across messaging systems . Accordingly the messaging system supports inter cloud communications to allow people devices or machines systems or components thereof to route messages across clouds to other people devices or machines systems or components thereof on other clouds. Each of the cloud networks may run an instance of the messaging system . For instance a device connected to a private or public cloud network may send a message to another device connected to another private or public cloud.

As described above each person device or machine system e.g. cloud network running an instance of the messaging system a LAN a PAN or the like or components thereof that is registered with the messaging system is assigned a UUID. Each person device or machine system or components thereof can be referenced by the messaging system using its UUID. Each of the UUIDs can discover other UUIDs e.g. clouds other networks people or devices or machines using one or more queries such as using multicast Domain Name System MDNS or API queries. In some embodiments a UUID can connect to multiple networks thus forming a global mesh network including different networks e.g. multiple cloud networks LANs PANs or a combination of cloud networks LANs and or PANs . A cloud network running an instance of messaging system may also be assigned a UUID and can route messages across cloud networks via inter cloud communications using a routing paradigm. For example a cloud network can send a message across cloud networks by sending the message with a route UUID  UUID  UUID  UUID  with each UUID being assigned to a different cloud network. In some embodiments the mesh network may route the message based on known connections.

Platform network may include one or more analytics engines that may process the information received from the analytics database . The analytics engines may aggregate the received information detect trends and or perform other analytics on the information. Platform network may be communicatively coupled with a number of APIs that are used to create manage identify and or communicate with functions of different IoT devices other devices or machines and or systems. APIs may include for example sales analytics APIs social media account and other third party messaging account APIs stock quote APIs weather service APIs other data APIs mobile application APIs and any other suitable API. For example a Facebook or other social media message may use a messaging API to send SMS messages. Platform network may use the messaging API to deliver a message to a device or system configured to display a SMS message. A light API may be provided by a manufacturer of smart light bulbs. The platform network may utilize the light API to provide an output to turn a light bulb connected to the platform network on or off. Platform network is also in communication with messaging system using the APIs of messaging system . Platform network may interact with the IoT devices other devices or machines and or systems connected through the messaging system using UUIDs and or security tokens.

The UUIDs and or security tokens may be issued by the messaging system and or the platform network . In some embodiments a user may register systems and or devices with the messaging system . The platform network may import or otherwise utilize any UUIDs and or tokens issued by the messaging system during the registration. In some embodiments a user may register devices and or systems with the platform network . The platform network may issue UUIDs and security tokens to IoT devices other devices or machines and or systems upon registration of the IoT device other device or machine and or system. The UUIDs and security tokens are used to access the messaging system as described above. In some embodiments a user may register devices and or systems with both the messaging system and the platform network . Either messaging system or platform network may issue UUIDs and or tokens. Registration with the non issuing system or network creates a link or other association with the issued UUIDs and or security tokens.

Platform network may operate an application or other program that provides a designer graphical interface that allows a user to create a control system or flow. The designer graphical interface may allow the user to create a control system by dragging and dropping blocks that represent various devices and or systems of the control system blocks that represent inputs and or outputs from the various devices and or systems and or blocks that represent functions for controlling the devices and or systems. Any IoT device other device or machine and or system that is registered with platform network may be configured to receive or transmit a message to any other IoT device other device or machine and or system that is registered with platform network using an appropriate control system designed using the designer graphical interface. Messages may be transmitted from one device or system to control operation of another device or system. For example the platform network may run control systems continuously such that an input from a device or system may automatically cause an event to occur in a different location and or by a different device or system. Such functionality along with access to the data from analytics database enables the platform network to monitor a performance behavior and or state of any IoT device other device or machine and or system within the control system and to send a resulting message or communication to any other IoT device other device or machine and or system in the control system based on the monitored performance behavior and or state. In another example the platform network may run a control system designed using the designer graphical interface upon receiving a command such as from a user or from another device or system. In some embodiments the designer graphical interface operated by the platform network may access any IoT device other device or machine and or system connected to messaging system including IoT devices other devices or machines and or systems connected using the messaging system gateway messaging system interface and or mobile gateway . This connection enables control systems created using the designer graphical interface to control output functions of devices and or systems registered with the messaging system . For example real time monitoring of data at a remote location such as performance of a machine or system or of a person s health condition may be performed by the platform network .

The platform network may also automatically provide messages or other outputs including commands to any of the registered IoT devices other devices or machines and or systems based on processes performed on information received from IoT devices other device or machine and or system. For example sensor data may be received from an IoT device and processed by analytics systems of the platform network . Using artificial intelligence and or machine learning within the platform network the processed sensor data may be used to provide commands to another system or device connected to platform network .

The control system designed using tool may include one or more input blocks and each input block and representing an IoT device or a component thereof a third party messaging account a system or a computing device or a component thereof . Each of the IoT devices third party messaging accounts systems and computing devices represented by blocks of the tool may be identified using a distinct UUID that is provided when the IoT device third party messaging accounts system and or computing device is registered for use with the tool such as by registering with a messaging system and or platform network as described in . Each IoT device third party messaging accounts system and or computing device registered for use with the tool may communicate with the tool using a messaging system gateway interfacing with a computing device running an instance of the messaging system interface and or using a mobile gateway as described in .

Input block allows a message to be injected into the control system . In some embodiments input block is used during testing of the control system as the message originates in input block rather than being received from an IoT device third party messaging account or other computing device. Input blocks may also represent an IoT device third party messaging account a system or a computing device. Examples of third party messaging accounts include a phone number a social media account or any other suitable account from which a user can send a message. Input blocks pass a message or other communication from the IoT device third party messaging account or computing device into the control system . For example input block represents a third party messaging account known as a Twitter account. The Twitter account may be identified using a user s username or handle which may be associated with a UUID. Input block may pass a Twitter message or Tweet from the third party messaging account to the control system . The content of the Tweet can be used by a function block to drive an output of the control system that is provided to a device represented by an output block.

As another example input block represents a third party messaging account such as a telephone number that passes an SMS message to the control system . The third party messaging account associated with input block is identified using its UUID. The UUID may correspond to a phone number or other identifier associated with the third party messaging account or the UUID may be a random identifier assigned by a messaging system and or platform network. The SMS message may include a hashtag alerting the control system to perform a specified function. A hashtag or keyword may be included in the SMS or other message that alerts the input block that information is being supplied that needs to get passed to a function represented by a function block. One of ordinary skill will recognize that along with SMS and Twitter messages a message from a third party messaging system may include an e mail a Facebook message or any other message sent from a third party messaging account.

The control system may also include one or more output blocks and each output block and representing a different IoT device a third party messaging account a computing device or a system e.g. a cloud server etc. . For example output block represents an IoT device such as a smart light bulb that is connected to a WAN a LAN or a PAN. The output block may receive a command or other message from a function represented by a function block and relay the command to the IoT device represented by the output block and associated with a registered UUID. The IoT device represented by output block then performs a function based on this command. For example a command may instruct the light bulb represented by output block to turn on or off. The light bulb may be in communication with the tool using a messaging system gateway connecting via a processing device running an instance of the messaging system interface and or by connecting via a mobile device having a mobile gateway installed as described in . Output block represents an Arduino board that receives a command or other message from functions represented by one or more function blocks. The Arduino board may be in communication with the tool by a messaging system gateway a messaging system interface installed on the Arduino board and or a mobile gateway installed on the Arduino board as described in . In some embodiments output blocks do not represent the same IoT device a third party messaging account system or a computing device as input blocks within a single control system. In other embodiments a single IoT device a third party messaging account system or a computing device may be represented by one or more input blocks and or one or more output blocks within a single control system. In some embodiments at least one input block or at least one output block in control system designed using tool represents an IoT device.

Control system may also include one or more function blocks and each function block and representing a function configured to process at least a portion of information received from at least one input block. In some embodiments several function blocks may be arranged in series and or parallel. When in series each function represented by a function block may process at least a portion of information received from an input block either directly or in the form of information processed by another function represented by a function block. Each function represented by function block and determines which IoT device third party messaging account system or computing device from which to receive the information based on the UUID associated with the input block. Each function represented by function block and may be configured to provide a command to at least one output block. The functions represented by function blocks and determine which IoT device third party messaging account system or computing device to provide the command based on the UUID associated with the output block. Function block may represent a switch such as an on off switch routing received messages based on properties and content of the message. For example when a message includes the word on or off the function represented by function block routes the message to an appropriate function block . A function represented by function block can deliver a message or command to a connected output block the message directing the device or system associated with the output block to perform a specified function. Here a function represented by function block commands a smart light bulb to turn off.

In some embodiments tool includes an information panel . Information panel may provide information regarding a particular block. The information may include a type of the block a UUID or other identifier associated with the block a name and or description of an IoT device third party messaging system system or computing device represented by the block a description of the function of the block a message or command type an operating period and or interval whether the block has a repeating function a status of the block and or the device or system represented by the block and or any other information related to the block. Each type of block in tool may include a distinct group of information and properties that are provided in information panel . Information panel is provided as a quick reference as to the function and or status of each block and is also useful as a guide to instruct a user how to design a control system using each block.

In control system an input is received from a third party messaging service information related to the input is processed and a command is output to a smart light bulb to turn the bulb on or off. In the example control system an input is received by an input block in the form of a SMS message containing a keyword. The input block is connected to function block that relays information here a keyword to a function represented by function blocks . Based on the keyword received the information will be passed to a function represented by function block to turn a light on or off. The function represented by function block then provides a command to an output block that turns a light on or off.

Returning to platform network may be connected with messaging system through a web based design interface in some embodiments. Web based design interface may include similar functionality as the designer of the platform network but operates as a web based application. Users may design control systems and flows on web based design interface and test the control systems prior to fully deploying a control system into platform network . Users may have access to all IoT devices other devices or machines and or systems associated with messaging system and or platform network although the processing functions available using the web based design interface are limited to those provided by a web browser. Web based design interface may act as a developer design tool that functions through the capabilities of the web browser. A user may then import the control system into platform network for continuous operation of the control system.

Devices or machines systems or components thereof that are each assigned individual UUIDs may continuously stream data e.g. sensor data to the messaging system . The streamed data may be stored in device directory sensor data storage and or to the analytics database . The streamed data from the UUIDs may be reacted upon in real time. As described in more detail below UUIDs and their associated users devices systems or components thereof or user control systems created using the platform network can subscribe to other UUIDs streaming the data. Based on thresholds within the data frequency of occurrence of certain data or the occurrence of the data itself events can be created that trigger messages to be exchanged between devices or machines and or systems. For example a photo sensor with an assigned UUID that senses a change in light may stream sensor data to the messaging system and a control system created using the platform network may indicate that anytime a change in light occurs a light with an assigned UUID should be turned on or off. The control system may subscribe to the UUID of the sensor so that it can detect when a change in light occurs. When the control system senses a light change it may trigger a message to be sent to the light in order to cause the light to change states e.g. on or off . In some examples the sensor data and message exchanges or other transactions may be streamed into the analytics database for real time near real time and or offline data analytics.

The system may further include one or more messaging system interfaces implemented by one or more machines or devices. For example the system includes messaging system interface messaging system interface messaging system interface and messaging system interface . The messaging system interfaces may be similar to the messaging system interface described above with respect to and may perform one or more of the functions described above. The messaging system interfaces may each be installed on a separate computing device and integrated with a separate machine or device. For example the messaging system interfaces or may be installed on a computing device such as a Raspberry Pi board an Arduino board a microcontroller a minicomputer or any other suitable computing device. The computing devices with the installed messaging system interfaces or may then be integrated with separate devices or machines. Accordingly four machines may each be integrated with a computing device installed with one of the messaging system interfaces and . Devices or machines can include any electronic device including sensors and consumer products such as light bulbs thermostats home automation devices smoke alarms burglary alarms an accelerator or other electronic component of a vehicle a display device a printer or any other electronic device.

The system may further include one or more messaging system gateways including a messaging system gateway and a mobile gateway not shown . The messaging system gateway may be similar to the messaging system gateway described above with respect to and may perform one or more of the functions described above. In some embodiments the messaging system gateway may include a mobile gateway similar to the mobile gateway described above with respect to . The messaging system gateway may be connected to a local area network LAN and or to a personal area network PAN .

Any machine that has been assigned a unique identifier e.g. a UUID by the messaging system or messaging system and that has the ability to connect to a wide area network WAN e.g. an IoT device can connect directly to the messaging system . In some embodiments only the messaging system issues unique identifiers to people machines or devices systems or components thereof. In such embodiments the messaging system may use the unique identifiers that are issued by the messaging system . In some embodiments the messaging systems and are independent messaging systems and each messaging systems and may issue different unique identifiers. Machines with or without unique identifiers can connect to the messaging system gateway . A machine with an assigned unique identifier and the appropriate access level permission can query the network from anywhere in the world for other machines that meet a specific search criteria. The machine may message the other machines via the messaging system .

The messaging systems and support inter cloud communications allowing machines to route messages across the messaging systems and to devices and sub devices on other cloud networks. For example the machine running the messaging system interface is connected to the private messaging system cloud network and can send a message to a machine running the messaging system interface that is connected to the public messaging system . The machine running the messaging system interface may be located in New York N.Y. and the machine running the messaging system interface may be located in London England. The machine running the messaging system interface may send the message to a route of UUIDs corresponding to the path that the message must follow in order to reach the machine running the messaging system interface . The route may be included in a routing list that is included in the message e.g. in a field of the message such as a header field . For example the routing list for the message may include a route of UUIDs that includes UUID MSGSYS UUID MSGSYS UUID MSGSYSINT. The messaging system may assign the UUID MSGSYS to the messaging system the UUID MSGSYS to itself and the UUID MSGSYSINT to the machine running the messaging system interface . The network servers of the messaging systems and the messaging system gateway and the machines or devices running the messaging system interfaces if included in the route may each remove their UUID from the routing list and pass the message on to the next UUID in the list until the message arrives at its destination. The same routing technique may be used to send messages within the same messaging system cloud network or across multiple messaging system cloud networks.

In some embodiments devices or machines can also communicate with other devices or machines via one or more peer to peer sockets rather than going through a messaging system or . For example the machine running the messaging system interface may directly communicate with the machine running the messaging system interface . One or more dynamic routing protocols may be used by the machines when exchanging communications via a peer to peer connection. In some embodiments devices or machines may discover and be introduced to other devices or machines using the messaging system . After being introduced by the messaging system the devices or machines may then begin a peer to peer communications session directly provided they have the proper security permissions. For example the machine running the messaging system interface may query the messaging system for machines that meets certain criteria e.g. Philips Hue light bulbs in a particular location or other suitable search criteria . The messaging system may check the security permissions of the machine running the messaging system interface and may return a list or array of UUIDs assigned to machines that meet the criteria and for which the machine running the messaging system interface has permission to access. One of the machines on the list or array may include the machine running the messaging system interface . The machines running messaging system interfaces and may then begin a peer to peer communications session to directly exchange messages.

In some embodiments the messaging system may store various properties of each registered person machine or device system or component thereof that has an assigned UUID. Each registered person machine or device system or component thereof may have a registry store in which the properties may be stored. For example the registry store for each registered person machine or device system or component thereof may be stored in a device directory similar to the device directory described above. The properties can be anything that describes the person machine or device system or component thereof including status or state e.g. on off idle sleeping or the like type color features connection protocols geolocation or the like. For example one or more servers of the messaging system may track how each registered machine or device is connected to the messaging system or to a messaging system gateway e.g. gateway . The messaging system may also track the geolocation of each device or machine. For example the messaging system may store in a registry store for each machine or device the connection protocol used by each machine or device and the geolocation of each machine or device at a given point in time. The geolocation may be stored as a set of coordinates e.g. global positioning system GPS coordinates latitude longitude coordinates or the like . The connection protocol and the geolocation may be updated each time either changes. For example if a machine or device changes locations or connects with the messaging system using a different connection protocol the messaging system may update the machine s registry store with the updated connection protocol and or geolocation. In some embodiments the messaging system can store all of the connection protocols for which a machine or device is configured to operate. The properties may be updated in real time as the change occurs or in partial real time at different points in time e.g. every 1 minute 2 minutes 5 minutes 30 minutes 1 hour or other appropriate period of time .

The messaging systems and operate using one or more native connection protocols. For example the messaging systems and may natively recognize a HTTP connection protocol a websockets connection protocol a MQTT connection protocol a CoAP connection protocol an XMPP connection protocol a SNMP connection protocol an AllJoyn connection protocol or any other appropriate connection protocol. One of ordinary skill in the art will recognize that the messaging systems and may natively operate using any other appropriate machine to machine connection protocol. Other protocols may be added to the messaging system or over time as the protocols become more universally used.

The messaging system may also include a universal application programming interface that is available for use by all of the native connection protocols of the messaging system . The universal application programming interface may be used to interface Internet Things IoT devices that use different proprietary application programming interfaces. The universal application programming interface allows the messaging system to avoid having to go through each machine s proprietary cloud network and proprietary application programming interface to facilitate message exchange between machines that use different proprietary protocols to communicate. Without a universal application programming interface a server may receive a message from a first device that is destined for a second device. The first device may use a first proprietary connection protocol and application programming interface and the second device may use a second proprietary connection protocol and application programming interface. The server would have to send the message to the proprietary cloud server with which the second device is registered. The proprietary cloud server would then access the application programming interface used by the second device and send the message to the second device. Such a procedure of sending the messages to a different proprietary cloud network using different application programming interface requests for each different proprietary protocol used adds latency to the message transport from the first device to the second device. Using the universal application programming interface the messaging system can receive messages from the first device and can directly send the messages to the second device or to a local gateway to which the second device is connected via a LAN or PAN using a single application programming interface request.

The universal application programming interface supports various commands. For example the universal application programming interface allows users machines or devices systems or components thereof to get a status of the messaging system e.g. online offline temporarily offline or the like . The universal application programming interface also allows a machine or device to be registered with the messaging system . Upon receiving a registration request the universal application programming interface may return a UUID and a security token to the registrant. The universal application programming interface also specifies how queries from users machines or devices systems or components thereof are handled. For example the universal application programming interface may allow the messaging system to return a list of UUIDs that correspond to a query for different users machines or devices systems or components thereof. As another example the universal application programming interface may allow the messaging system to return information related to a specific machine or device in response to a query for information relating to the machine or device. The universal application programming interface also describes how to update features of e.g. change a location connection protocol color or other feature or control e.g. turn on off move to a different location or the like registered machines or devices in response to requests from users machines or devices systems or components thereof to make the changes and that have permission to do so . One of ordinary skill in the art will appreciate that the universal application programming interface can specify to the servers of the messaging system how to perform various generic functions that relate to any connected users machines or devices systems or components thereof.

One or more computing devices of the messaging system can route messages to and from any connected machine or device in any supported protocol whether native or transformed by a plug in as described below . The computing devices may include one or more network servers. The messaging system may translate between the different native connection protocols to facilitate message exchanges between machines or devices that operate using different connection protocols. For example the common messaging system may translate a received communication that is in a first native connection protocol to a second native connection protocol before sending the communication to a machine or device that only operates using the second native connection protocol or that operates using a connection protocol that is different than the first and second native connection protocols in which case a plug in would be needed to convert from the second native connection protocol to the protocol that the machine uses . In one example a MQTT device can use the messaging system to communicate a message to a CoAP device a websocket powered device or a web page via HTTP. The messaging system can thus interpret or translate the message to the destination device s connected or preferred connection protocol.

In some embodiments the messaging system gateway may include one or more messaging system plug ins. In some embodiments one or more plug ins may be installed on one or more computing devices such as a microcontroller a minicomputer or any other suitable computing device in the messaging system gateway . In some embodiments one or more plug ins may be added to one or more existing programs of the messaging system gateway . In some examples each plug in may include program code that knows how to interact with the messaging system gateway . For example a plug in may include a JavaScript piece of code. In some examples when sending messages from a machine to the messaging system a messaging system plug in may translate or convert one or more connection protocols that are used by the machine and that are not native to the messaging system to a native connection protocol of the messaging system . When sending messages from the messaging system to the machine the messaging system plug in of the gateway may also translate the native connection protocols of the messaging system to the protocols used by the machine. In some examples a messaging system plug in may also translate or map one or more proprietary application programming interfaces used by a machine to a universal application programming interface of the messaging system . Similar plug ins may be used in a mobile gateway e.g. mobile gateway and may perform similar functions as those described herein. For example a mobile gateway may allow a user to interconnect various devices worn or carried by the user via a PAN provided by the mobile gateway as described above. One or more plug ins of the mobile gateway may allow the devices to communicate with the messaging system similar to the plug ins of the messaging system gateway .

To perform the translation a plug in may define a message schema that corresponds to the format of the messages required to communicate with a particular machine or device. For example a message with a command from the messaging system may instruct one or more machines to perform a function such as to turn off all lights in a room. The message may be transmitted in a general format of the universal application programming interface that is not specific to the proprietary application programming interfaces of the different machines. The message may also be transmitted by the messaging system using a connection protocol that is not used by the different machines. The proprietary application programming interfaces of the machines may only be configured to receive messages in a certain format and the message from the messaging system may not be in any of the specific formats. The one or more plug ins that are used to translate messages for the different machines may translate the message into the format that is required by each of the proprietary application programming interfaces. The plug ins may also transmit the message to the machines using the proprietary connection protocol for which the machines are configured to operate.

Accordingly the messaging system gateway supports an open plug in architecture that translates connection protocols that are non native to the messaging system such Phillips Hue Nest Belkin Wemo Insteon SmartThings or any other appropriate proprietary legacy or new connection protocols to native protocols and or to a universal application programming interface of the messaging system . In some cases one or more of the machines or devices themselves may include a messaging system plug in. Each machine or device that runs proprietary firmware and or that uses proprietary application programming interfaces can be installed with one or more plug ins that translate the proprietary communications to and from the connection protocols used by the messaging system . The plug in architecture allows proprietary legacy e.g. RS 232 serial RF or the like and or new machines or devices e.g. BLE wearable devices or the like to be registered with and communicate with the messaging system regardless of the connection protocol natively used by the machines or devices.

The messaging system gateway may include multiple plug ins. For example a set of machines or devices may be connected to the messaging system gateway . Different plug ins may be used by different subsets of machines or devices that are connected to the messaging system gateway . The different subsets of machines may relate to different classes of devices. For example machines may be broken into classes based on a manufacturer of the devices a connection protocol and or application programming interface used by the devices or any other appropriate classification. Each of the devices that are connected to the messaging system gateway may be assigned to a logical sub device that the messaging system gateway keeps track of. The messaging system gateway may assign and map each logical sub device to a particular plug in. For example the messaging system gateway may store a record of all devices with the record of each connected device including a separate sub device and plug in combination. In one example three Philips Hue lights and two Nest smoke alarms may be connected to the messaging system gateway for communicating with the messaging system . The messaging system gateway may have a stored record for each device including five records. The three records for the three Philips Hue lights may each include a separate sub device e.g. sub device A sub device B sub device C and a plug in that is specifically configured to translate between the messaging system native connection protocols and application programming interfaces and the Philips Hue connection protocols and application programming interfaces. Similar records may be stored for the two Nest smoke alarms including two records storing a separate sub device for each smoke alarm e.g. sub device D sub device E and a plug in that is configured to translate between the messaging system native connection protocols and application programming interfaces and the Nest connection protocols and application programming interfaces. In some embodiments the messaging system gateway may include a single plug in that is configured to and may translate between multiple proprietary connection protocols and application programming interfaces.

Working in combination the messaging system and the messaging system gateway and or a mobile gateway with the plug ins allow machines or devices to communicate with one another regardless of the proprietary nature of the connection protocols or application programming interfaces that are used by the machines or devices. In the example above including the three Philips Hue lights and two Nest smoke alarms a smoke alarm may communicate with one or more of the lights by sending messages to the messaging system via the messaging system gateway . For example when smoke is detected by the smoke alarm the smoke alarm may transmit a message to the messaging system gateway instructing all of the lights to turn on. A plug in of the messaging system gateway may translate the message from the proprietary Nest format to a generic native format used by the messaging system . The messaging system may determine a destination for the message by referring to one or more UUIDs that are included in the message. In some embodiments the messaging system may determine a destination based on a query included in the message. For example the message may indicate that the message is to be sent to all lights that are located within a particular geolocation e.g. within a certain distance from the smoke alarm . Once the messaging system determines that the destination for the message includes the three lights the messaging system may process the message using the universal application programming interface. For example the messaging system may authenticate the smoke alarm using its UUID and token combination and may determine the security permissions of the smoke alarm in order to verify that the smoke alarm has appropriate access to the lights e.g. that the smoke alarm is permitted to discover and send messages to the lights .

As previously described the system also includes messaging system interface messaging system interface messaging system interface and messaging system interface . The machines running the messaging system interfaces may directly connect with the messaging system or may connect with the messaging system gateway using the universal messaging system interfaces . In some embodiments the machine running the messaging system interface may be a closed network machine that is designed to communicate with a proprietary network in order to transmit and receive communications to other machines that operate using the same proprietary protocols. The messaging system interface allows the machine to communicate directly with the messaging system without going through the proprietary network. By communicating directly with the messaging system the machine can communicate with any machine registered with the messaging system regardless of the proprietary nature of the other machines. In some embodiments the messaging system interfaces or may be an operating system that allows the machine running the messaging system interface or to communicate with the messaging system .

The built in universal messaging system interfaces allow the machine running the universal messaging system interfaces to perform operations that native firmware of the machines does not allow them to perform. For example the messaging system interface may override the native firmware of its machine to allow the machine to perform various operations that are outside of the functionality of the native firmware. In some embodiments the messaging system interface may be installed on a machine that does not have the ability to communicate with other machines using one or more connection protocols. In such embodiments the messaging system interface may provide the machine with the capability to use one or more connection protocols. The messaging system interfaces may access one or more sensors inputs outputs or programs on the machines running them in order to perform various operations. For example the messaging system interface may have access to and control a geolocation sensor a compass a camera a motion sensor a temperature sensor an accelerometer a gyroscope a graphical interface input a keypad input a touchscreen input a microphone a siren a display a light a tactile output a third party messaging service that the machine is able to run or any other component of the machine that can be identified accessed and or controlled.

The messaging system interfaces may each be assigned a different UUID and token. The messaging system interfaces may connect to the messaging system using the assigned UUID and token and may await further instructions from the messaging system . In some embodiments the messaging system may act as a compute server that controls the messaging system messaging system interfaces . For example messaging system may activate and or deactivate pins of the machine running the messaging system interface request sensor data from the machine and or cause the messaging system interface to perform other functions related to the machine. In some embodiments one or more of the messaging system interfaces can be connected to a gateway e.g. messaging system gateway or a mobile gateway and the gateway may act as a compute server that controls the messaging system interfaces in a similar manner as the messaging system . In some embodiments the messaging system interfaces may each be a mobile operating system or application that is able to run on mobile device operating systems such as iOS and Android operating systems.

In some examples a universal messaging system interface installed on a device e.g. machine running messaging system interface may allow multiple sensors within the device to interact in a way that the sensors were not designed to operate. For example a device may include a thermostat. The thermostat may include a motion sensor that is designed to turn on a LED display when motion is detected. The thermostat may also include a controller that controls the temperature of an air conditioning system. The native proprietary protocol and firmware of the thermostat is not designed to allow the motion detector to be used except to send signals to turn on the LED display as motion is detected. For example the native proprietary protocol and firmware of the thermostat may not allow the motion sensor and the controller to communicate with one another. The thermostat may be integrated with a computing device e.g. a Raspberry Pi board an Arduino board a microcontroller a minicomputer or any other suitable computing device that has a universal messaging system interface installed on it. The universal messaging system interface allows the sensors of the thermostat to communicate with the messaging system . For example the motion sensor and the controller may be assigned separate UUIDs and tokens. The universal messaging system interface may stream motion data from the motion sensor to the messaging system . The messaging system may perform one or more functions based on the motion data. For example the messaging system may include a program that sends a message to the controller anytime motion is detected by the motion sensor. The program may be created by a user of the thermostat using the designer graphical interface implemented by the platform network or the design interface described above. The program may be stored in the messaging system and may access the motion data and convert motion sensor values to a command that is included in the message. The command may instruct the controller to turn the temperature of the air conditioning system to 72 degrees. Accordingly sensors of the thermostat that are not designed to communicate with one another can exchange messages using the messaging system and a messaging system interface.

Using the techniques and systems described above IoT devices from different manufacturers can exchange messages even when the devices use different connection protocols or application programming interfaces that may be manufacturer specific. However IoT device manufacturers may resist the use of such a free flowing IoT messaging system due to security risks involved with exchanging messages with other manufacturers devices over various networks. Various security and rights management techniques and systems are thus described herein to alleviate security risks in machine to machine messaging systems.

Various devices or users may be registered with the messaging systems and . For example messaging system gateway lighting device messaging system interface and sensor may be registered with the messaging system . The messaging system gateway sensor and lighting device may be registered with the messaging system . The messaging system gateway and the sensor may be registered with the messaging system . In some cases the devices may communicate directly with the messaging systems and . In such cases any of the messaging system gateways or are optional and may be omitted. Accordingly the messaging system gateways and are illustrated in with dotted lines to indicate the optional nature of the messaging system gateways and . Any one or more of the devices or may include a messaging system interface similar to any of the messaging system interfaces or described above with respect to which may perform one or more of the functions described above.

Each of the messaging systems and may be assigned a separate unique UUID and a separate unique token by a messaging system e.g. one of the messaging systems or another messaging system not shown in . The messaging system gateway the sensor the messaging system interface and the lighting device may be assigned separate unique UUIDs and separate unique tokens by the messaging system . The messaging system gateway the sensor and the lighting device may each be assigned a separate unique UUID and a separate unique token by the messaging system . Each of the messaging system and the sensor may be assigned a separate unique UUID a separate unique token by the messaging system . The devices may be assigned the UUIDs and tokens when they are registered with the respective messaging systems . As described above the devices can be referenced by the different messaging systems using the UUIDs. Messages can be exchanged among any of the devices illustrated in by using the different UUIDs. The messaging systems can route messages across a mesh of messaging systems via inter cloud communications using the routing paradigm described above. For example sensor can send a message to lighting device via messaging systems and . In this example messaging system gateway is assigned UUID  messaging system is assigned UUID  messaging system is assigned UUID  messaging system gateway is assigned UUID  and lighting device is assigned UUID . The sensor can include the path or route UUID  UUID  UUID  UUID  UUID  in a communication with a desired message. For example the route may be included in a routing list that is included in the message e.g. in a field of the message such as a header field . As each device or system in the path receives the communication it will route the communication to the next device in the path. The devices or systems if included in the route may each remove their UUID from the routing list and pass the message on to the next UUID in the list until the message arrives at its destination. The devices or systems may route the message based on known connections.

Various security and rights management techniques may be used to ensure that the messages transmitted amongst the devices and systems are secure. In some examples each of the messaging systems and may maintain separate databases for storing information associated with registered devices similar to those discussed above with respect to . For example databases may include a device directory a sensor data storage database and or an analytics database. In some embodiments the messaging systems and may maintain one or more permissions records in respective device directories of the messaging systems and . Each device or person that is registered with a messaging system or and that has been assigned a UUID and token may have its own permissions record. A permissions record may include one or more lists such as a whitelist and or a blacklist that are associated with a UUID assigned to a user or person a device or a system or component of a system or device as described above . In one example the device directory may maintain a whitelist for a UUID assigned to an IoT device. The whitelist includes a list or array of UUIDs assigned to other devices users or systems that are allowed access the IoT device at various levels of access. For example different levels of access to the IoT device may be granted to other devices users or systems and a separate list or array may be maintained for each level of access. The whitelist associated with the IoT device s UUID may maintain lists or arrays for the different levels of access which may include a list or array that includes UUIDs of devices or systems that may discover the device a list or array of UUIDs of devices or systems that may send a message to the device a list or array of UUIDs of devices or systems that may receive a message from the device a list or array of UUIDs of devices or systems that may subscribe to messages sent to and from the device and or a list or array of UUIDs of devices or systems that may configure the device. Accordingly five levels of access with respect to the IoT device may include the ability to discover the IoT device the ability to send messages to the IoT device the ability to receive messages from the IoT device the ability to subscribe to messages that are received and transmitted by the IoT device and the ability to configure the IoT device. One of ordinary skill will appreciate that the five levels of access are only examples and that other levels of access may also be granted.

In another example the device directory may also maintain a blacklist for a UUID assigned to the IoT device. The blacklist includes a list or array of UUIDs assigned to other devices users or systems that are denied access to the IoT device at the various levels of access. In this example the blacklist for the device s UUID may include a list or array that includes UUIDs of devices or systems that cannot discover the device a list or array of UUIDs of devices or systems that cannot send a message to the device a list or array of UUIDs of devices or systems that cannot receive a message from the device a list or array of UUIDs of devices or systems that cannot subscribe to messages sent to and from the device and or a list or array of UUIDs of devices or systems that cannot configure the device.

The discover access permission allows a device user or system to discover the presence of another device user or system. For example a device may query a messaging system or for other devices meeting certain search criteria and the messaging system or may return results of UUIDs of devices to which the device has permission to discover. The send access permission allows a device user or system to send messages to a device to which they have the send permission. The receive access permission allows a device user or system to receive messages from a device to which they have the receive permission. In some embodiments the receive access permission only allows a device to receive broadcast messages broadcast from another device or messages that are sent directly to the device from the other device. In one example the permissions record of lighting device may include the UUID of the sensor in its send permissions list but may not include the sensor UUID in its receive permissions list. As a result the sensor may send messages to the lighting device but may not receive messages from the lighting device . The subscribe access permission allows a device user or system to subscribe to messages of another device user or system essentially allowing the device to eavesdrop on messages going to and from the other device. For example if a first device has subscribe permissions for a second device the first device can receive all messages sent from the second device to any device and all messages sent to the second device from any device. As described below a token associated with a user device or system UUID may be required to obtain subscribe permissions to the user device or system UUID. The configure permission allows a device user or system to configure a device user or system for which they have the configure permission. For example a first device may change settings access permissions security profile information owner information or any other account information of a second device that has the first device in its configuration permissions list.

In some embodiments a user device or system may be required to have particular credentials for accessing or communicating with another a user device or system. Different credentials may be required for different types of access permissions. In some examples different types of credentials may be required to configure a device compared to types of credentials required to discover and send messages to the device. For example a user system or device may need the UUID of the device in order to discover the device or to send messages to the device. However a user system or device may need the UUID and the token associated with the UUID of the device in order to configure the device. Thus in addition to being on the configure permissions list of a particular UUID a user device or system also needs the token associated with the UUID to configure the user account device or system assigned with the UUID. In some examples different credentials may also be needed to subscribe to a device as compared to credentials needed to receive messages from the device. For example a user system or device may need the UUID of the device in order to receive messages from the device but may need the UUID and the token of the device in order to subscribe to all messages transmitted to and received from the device. As previously described UUIDs can receive messages from other UUIDs with or without tokens provided security permissions allow it . However by having a device s UUID and token a person device or system can eavesdrop on the device s inbound and outbound communications in an eavesdropping mode. Subscribing without the device s token may only allow the subscribing device access to receive the messages broadcast by the device provided the receive security permission allows it .

The use of whitelists and blacklists ensures that devices systems and users only have access to those UUIDs of devices systems and users for which permission has been granted. A user may designate the permissions record for the user a device or a system when the user device or system is registered with a messaging system . In some embodiments a user may modify a list of a permissions record at any time assuming the user has the appropriate access permission to configure the particular permissions record. In some embodiments if UUIDs of users devices or systems are not designated for a particular access level in a permissions record associated with a user device or system then the permissions record may be left open for all UUIDs that are able to connect with the user the device or the system. For example if there are no UUIDs designated in a whitelist for the receive permission associated with a UUID of a device any interested UUID can receive broadcast messages from the device. The access levels that require tokens e.g. subscribe configure or the like may not be left open such that only users devices or systems that have the token of a user device or system are granted permission to the access level of the user device or system.

The respective messaging system for which a device e.g. an IoT device is registered may check a permission record of the device before allowing a message to be transmitted to or received from the device. Continuing with the example above sensor can send a message to lighting device via messaging systems and by including the path or route UUID  UUID  UUID  UUID  UUID  in a communication e.g. in a field of the message such as a header field that includes the message payload. A message payload may include the actual contents of the message. A message may further include a message envelope with various information e.g. in a header of the message such as a to identifier a from identifier a timestamp or other information that is in addition to the payload that includes the contents of the message e.g. a command . One or more of the messaging systems and may check the permissions records of the sensor and the light to make sure the devices have permission to communicate with each other. For example the messaging system may check the permissions record of sensor to determine whether the lighting device has receive permissions to receive a message from the sensor . The messaging system may further check the permissions record of the lighting device to determine whether the sensor has send permissions to send messages to the lighting device . In the event the sensor and the lighting device have the appropriate access permissions the messaging systems and will allow the communication to be routed from the sensor to the lighting device according to the path or route.

In some embodiments a UUID can be an owner of one or more other UUIDs. For example a UUID associated with a person may be an owner of the sensor the messaging system interface and the light . In some examples the person can be designated as the owner when the sensor the messaging system interface or the light is registered. For example when registering messaging system interface the person may associate their UUID as an owner of the UUID associated with the messaging system interface indicating that the person is the owner of the messaging system interface . In some examples the person can be designated as the owner of the sensor the messaging system interface or the light at a point in time after the devices are registered. For example the person may log into an account and can search e.g. using a graphical interface a mobile application or the like for any UUIDs of which the person wants to become the owner. The person may search for specific UUIDs that the person is aware of or can search for UUIDs that belong to a particular network that the person is an owner of or is otherwise affiliated with. One or more UUIDs may be displayed e.g. using a graphical interface a mobile application or the like based on the search and the person may select or otherwise claim one or more of the UUIDs to designate the person s UUID as an owner of the UUIDs. The one or more other UUIDs may be associated with a device system or user registered with a messaging system or . In some embodiments a UUID associated with a device or system may be an owner of one or more other UUIDs. For example a UUID associated with the messaging system gateway may be an owner of the UUID associated with the sensor . In some embodiments a device user or system may be required to have the UUID and token of another device user or system before becoming an owner of the other device user or system. In some embodiments a device user or system may only claim UUIDs of other devices users or systems that are attached to the same network as the device user or system. For example a user may only be able to claim a UUID of a device and thus become an owner of the device if the device is behind the same public IP address as the user e.g. a public IP address used by a network address translation firewall of a router or access point providing network connectivity to the user and the device . In some embodiments once a UUID is designated as an owner of one or more other UUIDs the owner UUID has all access permissions to the one or more UUIDs for which it is an owner. When logged into an account an owner may view all UUIDs for which it owns e.g. using a graphical interface a mobile application or the like and may access or control the user account device or system associated with the UUIDs.

Using the access permissions above only certain devices users or systems are permitted to access other devices users or systems at different levels of access. For example a person may be permitted to access devices located at the person s place of employment at discover send and receive levels of access but not at a configure level of access. The person may own all devices or systems located at the person s home and may thus have all levels of access to those devices and systems e.g. discover send receive subscribe configure or any other level of access . The person can control the access permissions of the devices or systems they own and can thus determine who and what other devices or systems can access the owned devices or systems at certain access levels. For example the person may grant the person s family discover send receive and subscribe permissions but not configure permissions. As another example the person may grant guests discover and send permissions only. Every device user or system that is registered with a messaging system or is associated with a permissions record and thus can easily control how they are accessed by other devices users or systems.

Another security mechanism may include message transport encryption. In some examples transport of messages among the devices and systems of may be encrypted. To secure transport of messages one or more certificates may be used to authenticate communications from one device to another device. For example cryptographic protocols such as transport layer security TLS certificates secure sockets layer SSL certificates or the like may be provided to all devices and systems using any protocol. In some cases checksums of a message may be calculated by devices when the message is transmitted and when the message is received. The checksums may be compared by the devices to insure that the message was not manipulated in transit. Using a cryptographic transport protocol to encrypt messages in transit all messages transmitted among devices and messaging systems are encrypted such that only devices and systems that have the proper certificates can decrypt and read the messages thus ensuring that third party devices or systems cannot eavesdrop or tamper with messages.

In one example of encrypting message transport the sensor may wish to send a message to the lighting device . The sensor may send the message to the messaging system gateway and the gateway may then send the message to the messaging system . In an alternative embodiment the sensor may send the message directly to the messaging system . In the event the sensor sends the message directly to the messaging system the sensor may perform the steps below described with respect to the gateway . The messaging system gateway may agree to exchange messages with the messaging system using a cryptographic protocol such as TLS. The gateway and the messaging system may then negotiate a connection by using a handshaking procedure to establish various parameters that are used to establish the secure connection. For example the gateway may send the messaging system a SSL version number one or more cipher settings session specific data and other information specific to the gateway that the messaging system can use to communicate with the gateway . The messaging system may then send the gateway a SSL version number one or more cipher settings session specific data and other information related to the messaging system that the gateway can use to communicate with the messaging system . The messaging system may also send its certificate to the gateway . The certificate may include a digital certificate that binds the messaging system s identity to the messaging system s public key and that is signed by a certification authority trusted by both the messaging system and the gateway . In the event the gateway is requesting access that requires authentication the messaging system may request the certificate of the gateway . The gateway may use the information sent by the messaging system to authenticate the messaging system . Once the messaging system is authenticated the gateway may generate a code for the session and may encrypt it with the messaging system s public key from the certificate received from the messaging system . The gateway may then send the encrypted code to the messaging system . In some embodiments the gateway may authenticate itself to the messaging system by signing data that is unique to the handshake between the gateway and the messaging system and that is known by both the gateway and the messaging system . The gateway may send both the signed data and the gateway certificate to the messaging system along with the encrypted code. In some embodiments the messaging system may also authenticate the gateway . The messaging system may then use a private key to decrypt the encrypted code and may generate a master code. The gateway may also generate the master code using a private key. The gateway and the messaging system use the master code to generate session keys. The session keys include symmetric keys that may be used to encrypt and decrypt information exchanged during the secure session. The session keys may also be used to verify the validity or integrity of the session in order to detect whether any changes occur in the data while in transit from the gateway to the messaging system . For example the session keys may be used to detect if a third party device has intercepted data sent from the gateway and then retransmitted the data to the messaging system in a modified form. In some embodiments the gateway and the messaging system may exchange messages indicating that all future messages will be encrypted using a session key and that the handshake process has completed. While the message transport security described above uses the messaging system and the messaging system gateway as examples one of ordinary skill in the art will appreciate that a similar technique may be used to secure transport of messages between any other device and or system of .

In some examples the payload of a message may be encrypted. For example as previously described a message envelope may include a payload a from identifier a to identifier a timestamp or other information. The from identifier may include the UUID of the sender of the message and the to identifier may include the UUID of the destination of the message. The payload portion of the message envelope may include the actual contents of a message intended for the destination device such as a command or other information. The messaging systems and any other devices or systems that are used to route messages may only be interested in routing messages but not reading the contents of messages. In such examples the routing systems and devices may only need to read the address to which a message is destined the to identifier and may also read an address from which a message is transmitted the from identifier if present in the message communication . Accordingly the payload of certain messages may be encrypted such that only the destination device or other authorized system or device may be able to read the payload. Various encryption techniques may be used including Advanced Encryption Standard AES Data Encryption Standard DES using public keys using private or symmetric keys or any other appropriate encryption technique.

In some embodiments certain restrictions may be associated with a device user or system registered with a messaging system or that restrict how or when the device user or system can communicate with other devices. Restrictions may include timing restrictions location restrictions message envelope restrictions path restrictions information throttles presence restrictions or any other appropriate restriction. A UUID may designate restrictions for one or more other UUIDs that have access permissions to the UUID. For example a UUID may store a list of restrictions for any other UUID that has access permissions to the UUID. A UUID s restrictions may be stored in a device directory associated with the UUID. In some embodiments a messaging system or may enforce the restrictions upon receiving a message by either allowing the message or denying the message. In some embodiments a messaging system gateway or may enforce the restrictions. In some embodiments a device e.g. sensor lighting device messaging system interface or any other device shown in may enforce the restrictions before routing the message to another device or system or before processing a payload of a message destined for the device.

Timing restrictions may include certain times that a device user or system may be accessed. In one example a first UUID of a first device user or system may have timing restrictions associated a second UUID of second device user or system. The timing restrictions may indicate certain times for which the second UUID can access the first UUID according to the particular permissions record of the first UUID. For example the timing restrictions may only allow the second UUID to access the first UUID for a particular week out of the year e.g. December 23 at midnight through Dec. 28 2013 at midnight . At times outside of the particular time period the second UUID may not be allowed to access the first UUID at any permission level unless otherwise permitted according to the permissions record of the first UUID.

Location restrictions may limit the location or locations at which a device user or system may be accessed by other devices users or systems. In one example a first device user or system may only be accessed by a second device user or system when the first device user or system is present at a certain location. In another example a first device user or system may only be accessed by a second device user or system when the second device user or system is present at a certain location. Accordingly a location restriction restricting how a first device user or system is accessed may apply to the location of the first device user or system or may apply to the location of a second device user or system accessing the first device user or system or may apply to both. Location may be determined based on a device s IP address using a geolocation determination technique. For example an IP address of a device may be analyzed to determine a latitude longitude position or GPS coordinates of a device. In some examples the location may be determined by locating a router or access point providing network service to the device e.g. using a geolocation service that analyzes service set identifiers or a router or the like and associating that location with the device. One of ordinary skill in the art will appreciate that other location techniques may be used such as triangulation or trilateration using signals from access points routers other devices or cellular towers. In one example using location restrictions a first UUID associated with a first device may provide discover receive and send access permissions for a second UUID associated with a second device. The first UUID may also have location restrictions for the second UUID indicating that the second UUID can only access the first UUID when the second UUID is at a particular location. For example the first device may include a printer located at a business and the second device may include a computer belonging to an employee of the business. The employee may only be able to discover receive messages from or send messages to the printer when the computer is located within a building of the business within network access of a network of the business or the like. In another example a UUID may have a location restriction that indicates all UUIDs located in a specific country city continent or other location are blacklisted from one or more access permissions of the UUID. For example any device user or system with a UUID located in the location may be unable to receive or send messages to a UUID with such a restriction and may also be unable to configure or discover the UUID with the restriction. In another example a UUID may have a location allowance that indicates any UUID located in a specific country city continent or other location are whitelisted for one or more of the UUID s access permissions. For example any device user or system with a UUID located in the location may receive messages from send messages to or discover the device.

Message envelope restrictions may be designated that control or limit the information that a device user or system may send to or receive from other devices users or systems. For example a message envelope of a message may be interrogated by a messaging system or a messaging system gateway to determine whether a payload within the message envelope meets any message envelope restrictions that restrict certain types of information that may be designated by a sending or a receiving device. In some embodiments a device e.g. sensor lighting device messaging system interface or any other device shown in may interrogate a message envelope to determine whether a payload or other portion of the message envelope is restricted and may enforce the message envelope restrictions before routing the message to another device or system or before processing a payload of a message destined for the device. In one example a first UUID of a first device may have access permissions associated with a second UUID of a second device that allow the second device to send messages to the first device. The first device may include a drug dispenser and the second device may include an interface that indicates a drug and how much of the drug to dispense to a patient. The first UUID may have a message envelope restriction that restricts which type of drug and the amount of the drug that it will dispense. A message envelope of a message sent from the interface may be interrogated to ensure that a payload designating a particular amount of a drug to dispense is within the designated restrictions. The message envelope restriction thus prevents the wrong drug or the wrong amount of the drug from be administered to the patient. For example a messaging system or a messaging system gateway may determine whether the payload meets the message envelope restrictions before sending the message to the drug dispenser. In some embodiments the drug dispenser may interrogate the message envelope upon receiving the message to ensure the restrictions are met. A message envelope restriction in a device directory of a UUID may apply to all UUIDs or may be specific to particular UUIDs of devices users or systems that may access the UUID. In embodiments in which a payload is encrypted a messaging system a messaging system gateway or a device e.g. any device shown in may have a key a certificate or other credential that can be used to decrypt the payload in order to determine whether the payload meets any message envelope restrictions. In another example the message envelope of a message may include a from identifier and a to identifier. The from identifier may include a UUID of the device user or system sending the message and the to identifier may include a UUID of the destination device user or system ultimately receiving the message. A from identifier may be analyzed to determine whether the sending device user or system is authorized to send the message. For example the message envelope may be interrogated to determine whether the identifier in a from identifier field includes a UUID of an approved sending device user or system e.g. according to a destination device s permissions record . A to identifier may be analyzed to determine whether the destination device user or system is authorized to receive the message. The message envelope may be interrogated to determine whether the identifier of a to identifier field includes a UUID of an approved destination device user or system e.g. according to a sending device s permissions record .

Path restrictions may be designated that restrict the path that a message can take to reach a destination. For example a device associated with a UUID may only accept a message if it travels through a first viable path of devices or systems but not if the message travels through another viable path. In some embodiments a path restriction may indicate that any message that is routed through a device or system located in a specific place or location will be rejected. For example if a message was routed through a device or system located in a particular country the message may be rejected. In some embodiments a path restriction may restrict messages from traveling through a particular UUID associated with a device or system. For example the sensor may send a message to the UUID assigned to sensor . The sensor may have a path restriction indicating that the messaging system is blacklisted from being in a transmission path for the sensor s messages. The message may thus be transmitted from the messaging system to the messaging system without being routed through the messaging system . In some embodiments a UUID may be put on a path whitelist for another UUID. For example the sensor may send a message to the UUID assigned to sensor and may have the messaging system on its path whitelist. Accordingly the message may be routed through the messaging system on its way to the sensor . In some cases the message may be required to travel through a UUID that is on another UUID s path whitelist. For example the message transmitted by the sensor may be required to travel through the messaging system in route to the sensor . In some embodiments a path restriction may restrict messages from traveling through a particular type of device or system. In some embodiments a UUID for a user device or system may store a list all acceptable paths that will be accepted. In some embodiments a UUID for a user device or system may store a list of all unacceptable paths locations or UUIDs within a path that will cause rejection of a message. In some embodiments a from path may be included in a communication to indicate the path that a message takes from an originating device or system to a destination device or system. For example a communication may include a header with a source address e.g. a from identifier a MAC address or other unique identifier of an originating device or system a destination address e.g. a to identifier a MAC address or other unique identifier of a destination device or system and a from path with the path. The from path may be analyzed to determine whether the path meets any path restrictions.

Presence restrictions may be established that allow messages to be sent from or to a device user or system when the device user or system is online e.g. connected to and or authenticated by a messaging system or . A device user or system that is not connected to a messaging system may be considered offline. In one example the sensor may only be able to transmit a message to the lighting device when the lighting device is connected to messaging system . In another example a person may specify a presence restriction that requires a device to be online for the device to send the person a message. Such an embodiment may be used to eliminate the chance of message spoofing.

In some embodiments a messaging system or may establish one or more information throttles that may restrict the amount of information that can be exchanged a number of requests for information that can be made or the like. For example a throttle may indicate that only a certain amount of messages during a period of time e.g. ten messages per second or any other amount during a period of time can be sent from any UUID registered with a messaging system or . In another example a throttle may indicate that any UUID cannot attempt to connect e.g. by requesting authorization from a messaging system more than a certain amount of times during a period of time e.g. no more than twice per second or any other amount during a period of time . One of ordinary skill in the art will appreciate that any other throttles may be set up to restrict abuse of the messaging systems or . In some examples using such throttles may prevent denial of service attacks unauthorized access attempts or any other type of malicious activity. In some embodiments certain UUIDs may be exempted from being subject to one or more throttles. For example a UUID associated with the messaging system may be exempt from any information throttles. In some embodiments throttles may be limited to certain users devices or systems. For example a certain type of device manufactured by a particular manufacturer may be subject to a specific throttle. In one example if home automation devices of a particular type that are manufactured by manufacturer A typically report certain information every forty seconds then a throttle may be set up for any home automation devices of that type. The throttle may restrict the frequency of reports to one every forty seconds. In some embodiments a throttle may be dynamically adjusted. For example a messaging system may change a message limit from ten messages per second to five messages per second if a security breach is detected by a device or system transmitting messages at a rate of less than ten messages per second. The messaging system may automatically change a throttle or a user e.g. an administrator or owner of the UUID associated with the messaging system other user with configuration permissions to the UUID associated with the messaging system or the like may log into an account of the UUID associated with the messaging system to change a throttle. Various actions may be taken when a throttle is determined to be exceeded by a device user or system associated with a UUID which will be discussed further below.

In some embodiments one or more security profiles may be associated with a UUID assigned to a device user or system. illustrates one example of a security profile associated with a UUID. The security profile includes a permissions record restrictions and encryption information . The permissions record includes a whitelist and a blacklist similar to those discussed above. The restrictions include timing restrictions location restrictions information throttles message envelope restrictions presence restrictions and path restrictions . The various permissions and restrictions may be used to provide customized security options for a UUID. For example a user may specify a presence restriction and a location restriction for a UUID assigned to the user s front door lock that requires the user to be near the user s home e.g. within 1 foot 5 feet 10 feet or some other appropriate distance or proximity and requires the user s phone to be online before the door lock allows the user to enter the home. One of ordinary skill will appreciate that any other combination of permissions and restrictions may be specified. In some embodiments the security profile may not include information throttles . For example information throttles in some embodiments are applied to all devices users or systems registered with a messaging system and may thus be omitted from the security profile . The encryption information may include any types of encryption that are used by the UUID. The security profile may be stored in a device directory of a messaging system with which the UUID is registered. The security profile may be accessed to determine whether a message is authorized to be sent or any other access is granted to the device user or system associated with the UUID.

In some embodiments a UUID assigned to a device user or system may be associated with multiple security profiles. For example different security profiles associated with the UUID may be applied to different groups such as a company a service or carrier a device or groups of devices a person or group of people or any other appropriate group. For example a UUID assigned to a company may have multiple security profiles. One security profile for the company may be assigned to one type of employee and another security profile may be assigned to a different type of employee. The different security profiles allow the different types of employees to access company devices and systems at different levels of access using different restrictions and possibly using different encryption levels. In another example one or more devices with different assigned UUIDs may assign one or more security profiles to a company to grant the company with access to the devices. In some embodiments a UUID assigned to an owner of the devices may grant a single security profile to the company that applies to all of the devices. In some embodiments the respective UUIDs for each of the devices may assign a separate security profile that is specific to each device to the company. For example a UUID assigned to a utility company e.g. a server of the utility company a person at the utility company or any other appropriate device user or system may be granted access to an air conditioning and heating unit by the owner UUID or by a UUID assigned to the air conditioning and heating unit. The access by the utility company may be limited by a particular security profile associated with the UUID of the owner or the UUID of the air conditioning and heating unit. For example the security profile may allow the utility company to send messages to and receive messages from the air conditioning and heating unit but only during certain days of the week and during certain times of those days e.g. during days and times when the owner works or other appropriate days and times . Other restrictions may include message envelope restrictions that limit the amount that the utility company can adjust the air conditioning and heating unit. Using these access permissions the utility company may send messages to adjust the air conditioning and heating unit to cool the owner s home on a hot day with temperatures over 75 degrees. For example the air conditioning and heating unit may send one or more messages to the utility company indicating the temperature within the home and the utility company may determine when to adjust the air conditioning and heating unit accordingly. The utility company may also determine when to adjust the air conditioning and heating unit based on the temperature at the location of the home e.g. based on weather forecasts a thermometer or other indicators whether at the home s location . In another example a sensor device e.g. an alarm system a motion sensor a camera or the like with an assigned UUID may determine that the owner is not at home and may send a message to the utility company or the air conditioning and heating unit to indicate that the user is not home. The security profile for the UUID of the air conditioning and heating unit or the owner may prevent the utility company from sending messages to the air conditioning and heating unit when the owner is not home. The sensor device or another device may determine a location of the owner e.g. by determining a location of a mobile device a wearable device or other device carried by the owner . The sensor device or other device may determine when the owner is a certain distance or time from the home and may send a message to the utility company or the air conditioning and heating unit to adjust the temperature at that time.

In some embodiments a messaging system a messaging system gateway or other device may determine when an unauthorized message attempt occurs from a device user or system. An unauthorized message attempt may be based on various factors. In some examples an unauthorized message attempt may be determined by analyzing a permission record analyzing one or more restrictions or analyzing a security profile if present associated with a UUID. For example a messaging system a messaging system gateway or other device may detect when a UUID lacks a proper credential or security certificate to exchange a message with another UUID. In another example a messaging system a messaging system gateway or other device may detect when restrictions have not been met by a particular message. In yet another example a messaging system a messaging system gateway or other device may determine when a message does not meet the requirements of a permissions record. In another example an analytics system may be queried to determine whether any unauthorized message attempts have been made by any devices.

In one example the sensor may be part of a user s device and the lighting device may be located in an owner s home that the owner is renting to the user. The user may attempt to use the sensor to send a communication with a message to the lighting device . The messaging systems and or may access the security profile of the UUID associated with the sensor and the security profile of the UUID associated with the lighting device to determine whether the message meets the security requirements specified in the security profiles. For example the messaging system or may determine whether the access permissions associated with the sensor s UUID allow the lighting device to receive messages from the sensor . In some examples the receive permission list in the access permissions of the sensor may include the UUID of the lighting device . In some examples the receive permission list may be left blank indicating that the receive permissions for the sensor UUID are open. In some embodiments the messaging system or may determine whether the access permissions associated with the UUID of the lighting device allow the sensor to send messages to the lighting device . In some examples the send permission list in the access permissions of the lighting device may include the UUID of the sensor . In some examples the send permission list may be left blank indicating that the send permissions for the lighting device UUID are open. In another example the messaging system or may access the restrictions in the security profile of the sensor UUID and may determine that an unauthorized message attempt has occurred when the message violates any of the restrictions. For example the owner may include a timing restriction that restricts the use of the lighting device by the user to a certain week during which the user is renting the home. The owner may also include other restrictions such as a message envelope restriction that limits the user s control of the lighting device to on and off not allowing the user to dim or brighten the lights.

In some embodiments one or more analytics systems e.g. analytics database accessible by one or more of the messaging systems may aggregate large amounts of data from the devices registered with each messaging system . The one or more analytics systems may be used to detect certain events or anomalies that indicate an unauthorized message attempt. For example a messaging system may query an analytics system or database for any message attempts that exceed a throttle restriction. The analytics system may return results of any UUIDs that have attempted to send messages in a way that violates a throttle.

Various actions may be taken when an unauthorized message attempt is detected. For example a messaging system or may disable or prevent a UUID associated with a device user or system from exchanging communications with any other devices users or systems when an unauthorized message attempt is detected. Any messages communicated to or from the device user or system may be rejected to prevent the unauthorized message attempt. For example if a predetermined number of unauthorized message attempts are detected from a device the device may be prevented from exchanging communications with any other devices using one or more of the messaging systems or . In some embodiments a UUID of a device user or system may be removed or unregistered from a messaging system or upon detecting a predetermined number of unauthorized message attempts. For example if more than twenty unauthorized message attempts are detected from a device the device may be unregistered. One of ordinary skill in the art will appreciate that any number may be designated as a limit on unauthorized message attempts. In some embodiments a messaging system or may transmit a notification to a device user or system when another device user or system attempts to send an unauthorized message to the device user or system. In some embodiments a messaging system or may store a record of unauthorized message attempts. The record may be queriable. One of ordinary skill in the art will appreciate that various other functions may be performed in response to detection of one or more unauthorized message attempts by a device user or system.

Process is illustrated as a logical flow diagram the operation of which represent a sequence of operations that can be implemented in hardware computer instructions or a combination thereof. In the context of computer instructions the operations represent computer executable instructions stored on one or more computer readable storage media that when executed by one or more processors perform the recited operations. Generally computer executable instructions include routines programs objects components data structures and the like that perform particular functions or implement particular data types. The order in which the operations are described is not intended to be construed as a limitation and any number of the described operations can be combined in any order and or in parallel to implement the processes.

Additionally the process may be performed under the control of one or more computer systems configured with executable instructions and may be implemented as code e.g. executable instructions one or more computer programs or one or more applications executing collectively on one or more processors by hardware or combinations thereof. As noted above the code may be stored on a machine readable storage medium for example in the form of a computer program comprising a plurality of instructions executable by one or more processors. The machine readable storage medium may be non transitory.

At the process includes receiving using a computing device a communication from a first Internet of Things IoT device wherein the communication is destined for a second IoT device. The first IoT device is assigned a first universally unique identifier and the communication includes a second universally unique identifier assigned to the second IoT device. Using as one example a computing device e.g. a network server of the messaging system or a computing device of the messaging system may receive the communication from the messaging system interface . The communication may be destined for the light . The communication may be sent to the messaging system via the messaging system gateway or directly from the messaging system interface . The messaging system may then send the communication to the messaging system . The communication may include the unique identifier e.g. a UUID assigned to the messaging system interface and the unique identifier assigned to the light . One of ordinary skill in the art will appreciate that any of the devices or systems illustrated in may send a communication to another device or system.

At the process includes obtaining the second universally unique identifier. Using the example above the computing device of the messaging system and or the computing device of the messaging system may obtain the second universally unique identifier from the communication sent by the messaging system interface . At the process includes determining that the second universally unique identifier is assigned to the second IoT device. For example the computing device of the messaging system or the computing device of the messaging system may refer to a device directory entry corresponding to the second universally unique identifier and may determine from the entry that the second universally unique identifier is assigned to the second IoT device e.g. the light .

At the process includes determining using the second universally unique identifier that the communication received from the first IoT device is an unauthorized message attempt by the first IoT device to exchange a message with the second IoT device. For example the computing device of the messaging system or the computing device of the messaging system may determine that the communication received from the messaging system interface is an unauthorized message attempt to exchange a message with the light . An unauthorized message attempt may be determined using one or more of the techniques described above.

In some embodiments an unauthorized message attempt may be detected using a permissions record associated with the second universally unique identifier assigned to the second IoT device. For example the process may include accessing using the computing device a permissions record associated with the second universally unique identifier assigned to the second IoT device. The permission record includes a first list of universally unique identifiers associated with IoT devices that have permission to access the second IoT device at one or more levels of access or a second list of universally unique identifiers associated with IoT devices that do not have permission to access the second IoT device at the one or more levels of access. In some embodiments the permissions record includes both the first list and the second list. In some embodiments the first list may include a single list and the second list may include a single list for all the levels of access for each respective IoT device. In some embodiments the first list may include multiple lists and the second list may include multiple lists such as separate lists for each of the one or more levels of access. The process may further include determining that the first IoT device is unauthorized to exchange the message with the second IoT device using the permissions record associated with the second universally unique identifier. The process may further include determining that the communication received from the first IoT device is an unauthorized message attempt based on the determination that the first IoT device is unauthorized to exchange the message with the second IoT device.

In one example the messaging systems may maintain a permissions record in a device directory for the first IoT device e.g. messaging system interface which is registered with the messaging system . The messaging system may maintain a permissions record in a device directory for the second IoT device e.g. light which is registered with the messaging system . As previously described a permissions record may include one or more lists such as a whitelist and or a blacklist that are associated with a universally unique identifier UUID assigned to a user or person a device or a system or component of a system or device as described above . The first list may include one or more whitelists and the second list may include one or more blacklists for the second IoT device. The computing device of the messaging system may access the permissions record associated with the second UUID assigned to the second IoT device and may determine that the first IoT device s UUID is not listed as an authorized UUID in the first list or that the first IoT device s UUID is listed as an unauthorized UUID in the second list. For example the communication from the first IoT device may include an attempt to configure the second IoT device e.g. an attempt to change a setting of the second IoT device and the UUID of the first IoT device may not be included in the configure access level whitelist of the permissions record for the second IoT device s UUID. As another example the communication from the first IoT device may include a message for the second IoT device to receive but the UUID of the first IoT device may be listed in the receive access level of the second list. One of ordinary skill in the art will appreciate that many other examples exist in which a permissions record may be analyzed to determine whether a message attempt is unauthorized. In either example the computing device of the messaging system can determine from the permissions record that the first IoT device is unauthorized to exchange the message in the communication with the second IoT device. As a result the computing device may determine that the communication received from the first IoT device is an unauthorized message attempt.

In some embodiments an unauthorized message attempt may be detected by querying an analytics system. For example the process may include transmitting by the computing device a query to an analytics system. The query may include a request for any unauthorized message attempts associated with the second universally unique identifier assigned to the second IoT device. The query may be transmitted using a transceiver or a transmitter of the computing device. The process may further include receiving a response from the analytics system indicating that the communication received from the first IoT device includes an unauthorized message attempt by the first IoT device. The response may be received using a transceiver or a receiver of the computing device. The process may further include determining that the communication received from the first IoT device is an unauthorized message attempt based on the response from the analytics system. In one example the computing device of the messaging system or the computing device of the messaging system may query an analytics system. The analytics system may aggregate large amounts of data from the devices and systems registered with each messaging system and or any other messaging system described herein. The information stored by the analytics systems may be used to detect certain events or anomalies that indicate an unauthorized message attempt. For example a messaging system may query an analytics system or database for any message attempts that exceed a throttle restriction. The analytics system may return results of any UUIDs that have attempted to send messages in a way that violates a throttle. For example the communication from the messaging system interface may exceed a certain threshold number of communications that are allowed to be sent to the light during a given amount of time. As another example the analytics system may detect an abnormal message attempt from the first IoT device. For example the first IoT device may typically send messages to the second IoT device at a specific time on a particular day and the analytics system may detect that the communication is sent at a time different from the specific time or on a different day than the particular day. The computing device of the messaging system or the computing device of the messaging system may receive a response from the analytics system indicating that the communication from the messaging system interface is unauthorized.

In some embodiments an unauthorized message attempt may be detected based on predetermined number of communications from the first IoT device. For example the process may include detecting an occurrence of a predetermined number of communications from the first IoT device and determining that the communication received from the first IoT device is an unauthorized message attempt based on the predetermined number of communications being detected from the first IoT device. In some examples the predetermined number may be designated by a throttle of the second IoT device s security profile as described above. For example a throttle may limit the number of message attempts that can be made to the second IoT s unique identifier to under twenty every five minutes or other appropriate predetermined number.

In some embodiments an unauthorized message attempt may be detected based on a security profile associated with the second universally unique identifier assigned to the second IoT device. For example the process may include accessing using the computing device a security profile associated with the second universally unique identifier assigned to the second IoT device. The security profile includes a permissions record and one or more restrictions. The process may further include determining that the communication received from the first IoT device violates the security profile and determining that the communication received from the first IoT device is an unauthorized message attempt based on the determination that the communication received from the first IoT device violates the security profile. For example the security profile associated with the second universally unique identifier may include the security profile illustrated in . The computing device may determine whether any of the access permissions of the permissions record or whether a restriction from the one or more restrictions are violated. In one example the computing device of the messaging system or the computing device of the messaging system may check the whitelist or blacklist of the permissions record or may check a timing restriction a location restriction a throttle a message envelope restriction a presence restriction or a path restriction as described above to determine whether the communication from the first IoT device e.g. the messaging system interface is an unauthorized message attempt to exchange a message with the second IoT device e.g. the light . In some embodiments the second universally unique identifier assigned to the second IoT device is associated with a plurality of security profiles wherein a security profile includes a permissions record and one or more restrictions and wherein different ones of the plurality of security profiles are assigned to one or more groups. For example different security profiles associated with the second universally unique identifier may be applied to different groups of the one or more groups. The one or more groups may include a company a service or carrier a device or groups of devices a person or group of people or any other appropriate group.

In one example a payload of the communication is encrypted. The process may include checking an encryption certificate included in the communication and determining whether the encryption certificate allows the first IoT device to exchange the communication with the second IoT device.

In another example the process may include obtaining by the computing device a message envelope of the communication and analyzing the message envelope to determine whether the communication is an approved type of communication. For example the computing device may check a security profile associated with the second IoT device to determine whether the message envelope meets a message envelope restriction e.g. message envelope restriction . The process may further include determining based on the analyzed message envelope that the communication is not an approved type of communication. For example the message envelope restriction may indicate that only a certain type of information may be sent to the second IoT device. In some examples a payload of the communication may be analyzed to determine if the communication includes an approved type of information. The process may further include determining that the communication received from the first IoT device is an unauthorized message attempt based on the determination that the communication received from the first IoT device is not an approved type of communication.

In some embodiments the process includes preventing the first IoT device from exchanging communications with any devices upon determining that the communication received from the first IoT device is an unauthorized message attempt. For example preventing the first IoT device from exchanging communications with any devices may include rejecting any messages communicated to the first IoT device and rejecting any messages communicated from the first IoT device. In some examples the first IoT device may be prevented from exchanging communications with any other devices when a predetermined number of unauthorized message attempts are detected from a device. In some embodiments the first universally unique identifier of the first IoT device may be removed or unregistered from a messaging system upon determining that the communication is an unauthorized message attempt or upon determining that a predetermined number of unauthorized message attempts has been reached by the first IoT device. One of ordinary skill in the art will appreciate that any number of unauthorized message attempts may be designated as a limit on unauthorized message attempts. In some embodiments the process may include transmitting a notification to the second IoT device wherein the notification indicates an occurrence of the unauthorized message attempt by the first IoT device. The notification may be transmitted using a transceiver or a transmitter of the computing device. For example a computing device of a messaging system or may transmit a notification to the second IoT device when it is determined that the first IoT device has attempted to send the unauthorized message to the second IoT device. In some embodiments the computing device may store a record of unauthorized message attempts. The record may be queriable. One of ordinary skill in the art will appreciate that various other functions may be performed in response to detection of one or more unauthorized message attempts by a device user or system.

A computer system as illustrated in may be incorporated as part of the previously described computing devices and systems. For example computer system can represent one or more of the components of the messaging system the platform network the messaging system gateway the messaging system interface or the mobile gateway of the messaging system messaging system messaging system interfaces or messaging system gateway of the messaging system the messaging system the messaging system the messaging system gateway the messaging system gateway or the messaging system gateway of or any of the IoT devices third party messaging accounts and or computing devices and systems described herein. provides a schematic illustration of one embodiment of a computer system that can perform the methods provided by various other embodiments as described herein and or can function as the host computer system a remote kiosk terminal a point of sale device a mobile device and or a computer system. is meant only to provide a generalized illustration of various components any or all of which may be utilized as appropriate. therefore broadly illustrates how individual system elements may be implemented in a relatively separated or relatively more integrated manner.

The computer system is shown comprising hardware elements that can be electrically coupled via a bus or may otherwise be in communication as appropriate . The hardware elements may include a processing unit including without limitation one or more general purpose processors and or one or more special purpose processors such as digital signal processing chips graphics acceleration processors or other appropriate data processor one or more input devices which can include without limitation a mouse a keyboard a touchscreen a global positioning system GPS receiver a motion sensor a camera and or the like and one or more output devices which can include without limitation a display device a speaker a printer and or the like.

The computer system may further include and or be in communication with one or more non transitory computer readable storage mediums or devices which can comprise without limitation local and or network accessible storage and or can include without limitation a disk drive a drive array an optical storage device a solid state storage device such as a random access memory RAM and or a read only memory ROM which can be programmable flash updateable and or the like. Such storage devices may be configured to implement any appropriate data stores including without limitation various file systems database structures and or the like.

The computer system might also include a communication interface which can include without limitation a modem a network card wireless or wired an infrared communication device a wireless communication device and or chipset such as a Bluetooth device an 802.11 device a WiFi device a WiMax device an NFC device cellular communication facilities etc. and or similar communication interfaces. The communication interface may permit data to be exchanged with a network such as the network described below to name one example other computer systems and or any other devices described herein. In many embodiments the computer system will further comprise a non transitory working memory which can include a RAM or ROM device as described above. The computer system may further include one or more receivers and one or more transmitters. For example the communication interface may include one or more receivers and one or more transmitters. In another example the computer system may include one or more transceivers one or more receivers and or one or more transmitters that are separate from the communication interface .

The computer system also can comprise software elements shown as being currently located within the working memory including an operating system device drivers executable libraries and or other code such as one or more application programs which may comprise computer programs provided by various embodiments and or may be designed to implement methods and or configure systems provided by other embodiments as described herein. Merely by way of example one or more procedures described with respect to the method s discussed above might be implemented as code and or instructions executable by a computer and or a processor within a computer in an aspect then such code and or instructions can be used to configure and or adapt a general purpose computer or other device to perform one or more operations in accordance with the described methods.

A set of these instructions and or code might be stored on a computer readable storage medium such as the one or more non transitory computer readable storage mediums or devices described above. In some cases the storage medium might be incorporated within a computer system such as computer system . In other embodiments the storage medium might be separate from a computer system e.g. a removable medium such as a compact disc and or provided in an installation package such that the storage medium can be used to program configure and or adapt a general purpose computer with the instructions code stored thereon. These instructions might take the form of executable code which is executable by the computer system and or might take the form of source and or installable code which upon compilation and or installation on the computer system e.g. using any of a variety of generally available compilers installation programs compression decompression utilities etc. then takes the form of executable code. In some examples a receiver of the computer system may receive a communication from a first Internet of Things IoT device wherein the communication is destined for a second IoT device wherein the first IoT device is assigned a first universally unique identifier and wherein the communication includes a second universally unique identifier assigned to the second IoT device. In such examples the one or more non transitory computer readable storage mediums or devices may contain instructions which when executed on the one or more data processors cause the one or more processors to perform operations including obtaining the second universally unique identifier determining that the second universally unique identifier is assigned to the second IoT device and determining using the second universally unique identifier that the communication received from the first IoT device is an unauthorized message attempt by the first IoT device to exchange a message with the second IoT device.

Substantial variations may be made in accordance with specific requirements. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets etc. or both. Moreover hardware and or software components that provide certain functionality can comprise a dedicated system having specialized components or may be part of a more generic system. For example an journey planning and pricing engine configured to provide some or all of the features described herein relating to the journey planning and or pricing can comprise hardware and or software that is specialized e.g. an application specific integrated circuit ASIC a software method etc. or generic e.g. processing unit applications etc. Further connection to other computing devices such as network input output devices may be employed.

Some embodiments may employ a computer system such as the computer system to perform methods in accordance with the disclosure. For example some or all of the procedures of the described methods may be performed by the computer system in response to processing unit executing one or more sequences of one or more instructions which might be incorporated into the operating system and or other code such as an application program contained in the working memory . Such instructions may be read into the working memory from another computer readable medium such as one or more of the storage device s . Merely by way of example execution of the sequences of instructions contained in the working memory might cause the processing unit to perform one or more procedures of the methods described herein.

In an embodiment implemented using the computer system various computer readable storage media might be involved in providing instructions code to processing unit for execution and or might be used to store and or carry such instructions code e.g. as signals . In many implementations a computer readable storage medium is a physical and or tangible storage medium. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media include for example optical and or magnetic disks such as the storage device s . Volatile media include without limitation dynamic memory such as the working memory . Transmission media include without limitation coaxial cables copper wire and fiber optics including the wires that comprise the bus as well as the various components of the communication interface and or the media by which the communication interface provides communication with other devices . Hence transmission media can also take the form of waves including without limitation radio acoustic and or light waves such as those generated during radio wave and infrared data communications .

Common forms of physical and or tangible computer readable media include for example a magnetic medium optical medium or any other physical medium with patterns of holes a RAM a PROM EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave as described hereinafter or any other medium from which a computer can read instructions and or code.

The communication interface and or components thereof generally will receive the signals and the bus then might carry the signals and or the data instructions etc. carried by the signals to the working memory from which the processor s retrieves and executes the instructions. The instructions received by the working memory may optionally be stored on a non transitory storage device either before or after execution by the processing unit .

Substantial variations may be made in accordance with specific requirements. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets etc. or both. Further connection to other access or computing devices such as network input output devices may be employed.

In the foregoing description aspects of the invention are described with reference to specific embodiments thereof but those skilled in the art will recognize that the invention is not limited thereto. Various features and aspects of the above described invention may be used individually or jointly. Further embodiments can be utilized in any number of environments and applications beyond those described herein without departing from the broader spirit and scope of the specification. The specification and drawings are accordingly to be regarded as illustrative rather than restrictive.

In the foregoing description for the purposes of illustration methods were described in a particular order. It should be appreciated that in alternate embodiments the methods may be performed in a different order than that described. It should also be appreciated that the methods described above may be performed by hardware components or may be embodied in sequences of machine executable instructions which may be used to cause a machine such as a general purpose or special purpose processor or logic circuits programmed with the instructions to perform the methods. These machine executable instructions may be stored on one or more machine readable mediums such as CD ROMs or other type of optical disks floppy diskettes ROMs RAMs EPROMs EEPROMs magnetic or optical cards flash memory or other types of machine readable mediums suitable for storing electronic instructions. Alternatively the methods may be performed by a combination of hardware and software.

Where components are described as being configured to perform certain operations such configuration can be accomplished for example by designing electronic circuits or other hardware to perform the operation by programming programmable electronic circuits e.g. microprocessors or other suitable electronic circuits to perform the operation or any combination thereof.

While illustrative embodiments of the application have been described in detail herein it is to be understood that the inventive concepts may be otherwise variously embodied and employed and that the appended claims are intended to be construed to include such variations except as limited by the prior art.

