---

title: Data storage system for analysis of data across heterogeneous information management systems
abstract: Systems and methods for generating customized reports from data storage databases and other information management system databases. The methods include normalizing queried information from different types of information management system databases to enable system-wide report generation. Other implementations are disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09633025&OS=09633025&RS=09633025
owner: Commvault Systems, Inc.
number: 09633025
owner_city: Tinton Falls
owner_country: US
publication_date: 20151020
---
The present application is a continuation of U.S. patent application Ser. No. 13 777 140 filed Feb. 26 2013 which claims priority to and the benefit of U.S. Provisional Application No. 61 745 034 filed Dec. 21 2012 each of which is hereby incorporated herein by reference in its entirety.

Information management systems protect and manage various types of data and metadata used by networked computing devices. The various types of data and metadata may include file server data mail server data network identities of the computing devices and the status of data backup jobs. The various types of data and metadata are typically stored in data structures e.g. databases. While databases and other data structures may provide excellent features for organizing information the inherent format of the data e.g. rows and columns is not user friendly. In other words looking at tens hundreds or thousands of rows and columns of data is non intuitive and is a challenging way for a user to perform an at a glance analysis of the contents of the database. As a result various techniques have been developed for graphically representing the contents of information management system databases and other data structures. However the commonly used techniques suffer from various shortcomings.

One example technique for graphically representing database contents includes using fixed charts or graphs. Fixed charts or graphs are those which are configured to graphically represent the exact same content over time. Fixed charts or graphs may consume a considerable amount of effort to initially format as desired but may provide visually appealing and understandable representations of database contents. The complexity of the fixed charts or graphs may require an information technology IT administrator to write code in a database friendly language to automate the process of database content extraction and graphing. Because of the time cost and complexity associated with changing fixed charts or graphs making changes to the fixed charts or graphs can be inconvenient to a person without database programming skills.

Other shortcomings associated with graphically representing the contents of information management system databases includes an inability to represent information from databases that have different formats. For example some organizations use one type or model of database or database management system for one part of a computing environment but use another type or model of database or database management system for another part of the computing environment. As a result the databases operated by an organization may have incompatible formatting. The incompatible formatting makes it difficult to graphically represent information from both or all types or models of databases in a single graphical representation. For example an organization may use a relational database model e.g. a SQL database to manage the operations of a first set of networked computing devices but the organization may use an object oriented database model e.g. an Oracle database to manage the operations of a second set of network computing devices. While the contents of the SQL database and the Oracle database may be similar the organization of information in each type of database is different thereby making joint graphical representation difficult.

The need exists for systems and methods that overcome the above problems as well as systems and methods that provide additional benefits. Overall the examples herein of some prior or related systems and methods and their associated limitations are intended to be illustrative and not exclusive. Other limitations of existing or prior systems and methods will become apparent to those of skill in the art upon reading the following Detailed Description.

The techniques disclosed in this document are useful in one aspect in solving the above discussed problems.

The headings provided herein are for convenience only and do not necessarily affect the scope or meaning of the disclosure.

Disclosed are systems and methods for creating custom reports from content of one or more storage manager databases or other information management system databases. Information management systems having several different types of databases are herein identified as heterogeneous systems. Aspects of the system provide a single report chart or graph for an entire information management system by translating or converting content from different types of databases into a uniform format.

The system may receive input from a user via a graphical user interface GUI that identifies which content of which databases to query. In particular the GUI may populate one or more drop down menus or check box menus with table names and columns names of the databases. The user may then select which sets of information to query the databases for without requiring the user to be able to program in a database language. The system may next determine the type of each database to be queried and may employ type specific queries for each database query based on the determination of the type. The system may then normalize all query results to a single database type or format e.g. relational so that the result may be stored and sorted by an interim database such as an in memory database. Then the system graphically represents the queried content according to the input selections made by the user. Advantageously the disclosed techniques enable a system to bridge between different database types to generate system wide graphs or charts. Furthermore because the input from the user is received via menus in a GUI the can generate the reports without database programming skills.

Various examples of the systems and methods will now be described. The following description provides specific details for a thorough understanding and enabling description of these examples. One skilled in the relevant art will understand however that the invention may be practiced without many of these details. Likewise one skilled in the relevant art will also understand that the invention may include many other obvious features not described in detail herein. Additionally some well known structures or functions may not be shown or described in detail below so as to avoid unnecessarily obscuring the relevant description.

The terminology used below is to be interpreted in its broadest reasonable manner even though it is being used in conjunction with a detailed description of certain specific examples of the invention. Indeed certain terms may even be emphasized below however any terminology intended to be interpreted in any restricted manner will be overtly and specifically defined as such in this Detailed Description section.

Aspects of the technologies described herein may be practiced in an information management environment which will now be described while referencing . Aspects of the information management environment may be used to generate custom reports from the content of one or more information management databases. As shown in the environment includes multiple computing devices that execute numerous software applications to facilitate the operations of an organization or multiple affiliated organizations such as a household corporation or other business entity a non profit organization an educational institution or a governmental agency. The computing devices may include one or more servers such as mail servers file servers database servers print servers and web servers personal computers workstations or other types of fixed computing systems such as mainframe computers and minicomputers not shown . The servers may include network attached storage NAS filers.

The environment may include virtualized computing resources such as a virtual machine provided to the organization by a third party cloud service vendor or a virtual machine running on a virtual machine host operated by the organization. For example the organization may use one virtual machine A as a database server and another virtual machine B as a mail server. The environment may also include mobile or portable computing devices such as laptops tablet computers personal data assistants mobile phones such as smartphones and other mobile or portable computing devices such as embedded computers set top boxes vehicle mounted devices wearable computers etc.

Of course other types of computing devices may form part of the environment . As part of their function each of these computing devices creates accesses modifies writes and otherwise uses production copies of data and metadata that are typically stored in a persistent storage medium having fast I O times. For example each computing device may regularly access and modify data files and metadata stored on semiconductor memory a local disk drive or a network attached storage device. Each of these computing devices may access data and metadata via a file system supported by an operating system of the computing device.

The environment may also include hosted services that provide various online services to the organization or its constituent members e.g. the organization s departments employees independent contractors etc. such as social networking services e.g. Facebook Twitter Pinterest hosted email services e.g. Gmail Yahoo Mail Hotmail or hosted productivity applications or other hosted applications e.g. Microsoft Office 365 Google Docs Salesforce.com . Hosted services may include software as a service SaaS platform as a service PaaS application service providers ASPs cloud services and all manner of delivering computing or functionality via a network. As it provides services to users each hosted service may generate additional hosted data and metadata that is associated with each user. For example Facebook may generate and store photos wall posts notes videos and other content that are associated with a particular Facebook user s account.

The organization directly or indirectly employs an information management system to protect and manage the data and metadata used by the various computing devices in the environment and the data and metadata that is maintained by hosted services on behalf of users associated with the organization. One example of an information management system is the CommVault Simpana system available from CommVault Systems Inc. of Oceanport N.J. The information management system creates and manages non production copies of the data and metadata to meet information management goals such as permitting the organization to restore data metadata or both data and metadata if an original copy of the data metadata is lost e.g. by deletion corruption or disaster or because of a service interruption by a hosted service allowing data to be recovered from a previous time complying with regulatory data retention and electronic discovery e discovery requirements reducing the amount of data storage media used facilitating data organization and search improving user access to data files across multiple computing devices and or hosted services and implementing information lifecycle management ILM or other data retention policies for the organization. The information management system may create the additional non production copies of the data and metadata on any suitable non production storage medium such as magnetic disks magnetic tapes other storage media such as solid state storage devices or optical disks or on cloud data storage sites e.g. those operated by third party vendors . Further details on the information management system may be found in the assignee s U.S. patent application Ser. No. 12 751 850 filed Mar. 31 2010 entitled DATA OBJECT STORE AND SERVER FOR A CLOUD STORAGE ENVIRONMENT INCLUDING DATA DEDUPLICATION AND DATA MANAGEMENT ACROSS MULTIPLE CLOUD STORAGE SITES now U.S. Pat. No. 8 285 681 which is hereby incorporated herein by reference in its entirety.

The information management system accesses or receives copies of the various production copies of data objects and metadata and via an information management operation such as a backup operation archive operation or snapshot operation creates non production copies of these data objects and metadata often stored in one or more non production storage mediums different than the production storage medium where the production copies of the data objects and metadata reside. A non production copy of a data object represents the production data object and its associated metadata at a particular point in time non production objects A C . Since a production copy of a data object or metadata changes over time as it is modified by an application hosted service or the operating system the information management system may create and manage multiple non production copies of a particular data object or metadata each representing the state of the production data object or metadata at a particular point in time. Moreover since a production copy of a data object may eventually be deleted from the production data storage medium and the file system from which it originated the information management system may continue to manage point in time representations of that data object even though a production copy of the data object itself no longer exists.

For virtualized computing devices such as virtual machines the operating system and applications A D may be running on top of virtualization software and the production data storage medium may be a virtual disk created on a physical medium such as a physical disk. The information management system may create non production copies of the discrete data objects stored in a virtual disk file e.g. documents email mailboxes and spreadsheets and or non production copies of the entire virtual disk file itself e.g. a non production copy of an entire .vmdk file .

Each non production object A C may contain copies of or otherwise represent more than one production data object. For example non production object A represents three separate production data objects C and C represented as C and respectively . Moreover as indicated by the prime mark a non production object may store a representation of a production data object or metadata differently than the original format of the data object or metadata e.g. in a compressed encrypted deduplicated or otherwise optimized format. Although shows that a single production data object e.g. C and its associated data object metadata e.g. Meta are represented by the contents of only a single non production object e.g. A the entire contents of a single production data object and or its metadata at a particular point in time may instead span across numerous non production objects. Also a single non production object may contain copies of or otherwise represent production data objects that originated from different computing devices.

Non production copies include backup copies archive copies and snapshot copies. Backup copies are generally used for shorter term data protection and restoration purposes and may be in a native application format or in a non native format e.g. compressed encrypted deduplicated and or otherwise modified from the original application format . Archive copies are generally used for long term data storage purposes and may be compressed encrypted deduplicated and or otherwise modified from the original application format. In some examples when an archive copy of a data object is made a logical reference or stub may be used to replace the production copy of the data object in the production storage medium . In such examples the stub may point to or otherwise reference the archive copy of the data object stored in the non production storage medium so that the information management system can retrieve the archive copy if needed. The stub may also include some metadata associated with the data object so that a file system and or application can provide some information about the data object and or a limited functionality version e.g. a preview of the data object. A snapshot copy represents a data object at a particular point in time. A snapshot copy can be made quickly and without significantly impacting production computing resources because large amounts of data need not be copied or moved. A snapshot copy may include a set of pointers derived from the file system or an application where each pointer points to a respective stored data block so collectively the set of pointers reflect the storage location and state of the data object at a particular point in time when the snapshot copy was created. In copy on write if a block of data is to be deleted or changed the snapshot process writes the block to a particular data storage location and the pointer for that block is now directed to that particular location. The set of pointers and or the set of blocks pointed to by a snapshot may be stored within the production data storage medium .

Non production copies of a data object or metadata may be distinguished from a production copy of a data object or metadata in several ways. First a non production copy of a data object is created to meet the different information management goals described above and is not directly used or modified by applications A D hosted services or the operating system . Second a non production copy of a data object is stored as one or more non production objects that may have a format different from the native application format of the production copy of the data object and thus often cannot be directly used by the native application or a hosted service without first being modified. Third non production objects are often stored on a non production storage medium that is inaccessible to the applications A D running on computing devices and hosted services . Also some non production copies may be offline copies in that they are not readily available e.g. not mounted tape or disk. Offline copies include copies of data that the information management system can access without any human intervention e.g. tapes within an automated tape library but not yet mounted in a drive and copies that the information management system can access only with at least some human intervention e.g. tapes located at an offsite storage site .

The information management system also generates information management data such as indexing information that permit the information management system to perform its various information management tasks. As shown in a computing device may include one or more data management agents that provide client side functions for the information management system.

The storage manager may be a software module or other application that coordinates and controls information management operations performed by one or more information management cells to protect and control copies of non production data objects and metadata. As shown by the dashed lines and the storage manager may communicate with some or all elements of the information management cell such as the media agents and computing devices to initiate and manage backup operations snapshot operations archive operations data replication operations data migrations data distributions data recovery and other information management operations. The storage manager may control additional information management operations including ILM deduplication content indexing data classification data mining or searching e discovery management collaborative searching encryption and compression. Alternatively or additionally a storage manager may control the creation and management of disaster recovery copies which are often created as secondary high availability disk copies using auxiliary copy or replication technologies.

The storage manager may include a jobs agent a management agent a network agent and an interface agent all of which may be implemented as interconnected software modules or application programs. The jobs agent monitors the status of information management operations previously performed currently being performed or scheduled to be performed by the information management cell . The management agent provides an interface that allows various management agents in multiple information management cells or in a global storage manager to communicate with one another. This allows each information management cell to exchange status information routing information capacity and utilization information and information management operation instructions or policies with other cells. In general the network agent provides the storage manager with the ability to communicate with other components within the information management cell and the larger information management system e.g. via proprietary or non proprietary network protocols and application programming interfaces APIs including HTTP HTTPS FTP REST virtualization software APIs cloud service provider APIs hosted service provider APIs . The interface agent includes information processing and display software such as a graphical user interface GUI an API or other interactive interface through which users and system processes can retrieve information about the status of information management operations or issue instructions to the information management cell and its constituent components. The storage manager may also track information that permits it to select designate or otherwise identify content indices deduplication databases or similar databases within its information management cell or another cell to be searched in response to certain queries.

The storage manager may also maintain information management data such as a database of management data and policies. The database may include a management index that stores logical associations between components of the system user preferences user profiles that among other things map particular information management users to computing devices or hosted services management tasks or other useful data. The database may also include various information management policies which are generally data structures or other information sources that each include a set of criteria and rules associated with performing an information management operation. The criteria may be used to determine which rules apply to a particular data object system component or information management operation an may include 

As noted above each computing device may include one or more data management agents . Each data management agent is a software module or component that helps govern communications with other system components. For example the data management agent receives commands from the storage manager and sends to and receives from media agents copies of data objects metadata and other payload as indicated by the heavy arrows . Each data management agent accesses data and or metadata stored in a production data storage medium and arranges or packs the data and metadata in a certain format e.g. backup or archive format before it is transferred to another component. Each data management agent can also restore a production copy of a data object or metadata in a production data storage medium from a non production copy. A data management agent may perform some functions provided by a media agent which are described further herein such as compression encryption or deduplication. Each data management agent may be specialized for a particular application e.g. a specified data management agent customized to handle data generated or used by Exchange by Microsoft Corp. . Alternatively or additionally a more generic data management agent may handle data generated or used by two or more applications.

Each computing device may also include a data distribution and live browsing client module herein distribution client module . The distribution client module is responsible for inter alia associating mobile devices and or hosted service accounts with users of the information management system setting information management policies for mobile and other computing devices pushing data objects to a distribution module for distribution to other computing devices providing unified access to a user s data via an interface and providing live browsing features. The various functions of the distribution client module are described in greater detail herein.

A media agent which may be implemented as a software module conveys data as directed by the storage manager between a computing device or hosted service and one or more non production storage mediums . Each media agent may control one or more intermediary storage devices such as a cloud server or a tape or magnetic disk library management system to read write or otherwise manipulate data stored in a non production storage medium . Each media agent may be considered to be associated with a storage device and its related non production storage media if that media agent is capable of routing data to and storing data in the storage media managed by the particular storage device. A media agent may communicate with computing devices hosted services storage devices A D and the storage manager via any suitable communications path including SCSI a Storage Area Network SAN a Fibre Channel communications link or a wired wireless or partially wired wireless computer or telecommunications network including the Internet.

To perform its functions the media agent may include a media file system module a data classification module a content indexing module a deduplication module an encryption module a compression module a network module a distribution module and a media agent database . The media file system module is responsible for reading writing archiving copying migrating restoring accessing moving sparsifying deleting sanitizing destroying or otherwise performing file system operations on various non production storage devices of disparate types. The media file system module may also instruct the storage device to use a robotic arm or other retrieval means to load or eject certain storage media such as a tape.

The network module permits the media agent to communicate with other components within the system and hosted services via one or more proprietary and or non proprietary network protocols or APIs including cloud service provider APIs virtual machine management APIs and hosted service provider APIs . The deduplication module performs deduplication of data objects and or data blocks to reduce data redundancy in the cell. The deduplication module may generate and store data structures to manage deduplicated data objects such as deduplication tables in the media agent database . The encryption module performs encryption of data objects data blocks or non production objects to ensure data security in the cell. The compression module performs compression of data objects data blocks or non production objects to reduce the data capacity needed in the cell.

The content indexing module analyzes the contents of production copies or non production copies of data objects and or their associated metadata and catalogues the results of this analysis along with the storage locations of or references to the production or non production copies in a content index stored within a media agent database . The results may also be stored elsewhere in the system e.g. in the storage manager along with a non production copy of the data objects and or an index cache. Such index data provides the media agent or another device with an efficient mechanism for locating production copies and or non production copies of data objects that match particular criteria. The index data or other analyses of data objects or metadata may also be used by the data classification module to associate data objects with classification identifiers such as classification tags in the media agent database or other indices to facilitate information management policies and searches of stored data objects.

The distribution module may be a set of instructions that coordinates the distribution of data objects and indices of data objects. The distribution may occur from one computing device to another computing device and or from hosted services to computing devices . As a first example the distribution module may collect and manage data and metadata from hosted services or mobile devices . As another example the distribution module may synchronize data files or other data objects that are modified on one computing device so that the same modified files or objects are available on another computing device. As yet another example the distribution module may distribute indices of data objects that originated from multiple computing devices and or hosted services so a user can access all of their data objects through a unified user interface or a native application on their computing device. The distribution module may also initiate live browse sessions to permit communications between different computing devices so that the devices can interchange data and metadata or so the devices can provide computing resources such as applications to each other. The functions performed by the distribution module are described in greater detail herein.

In its native format a database does not provide a user friendly representation of its contents. A database is a structured collection of data that may comprise columns and rows of data grouped into tables or may be organized as many other types of data structures. Organizations use a database to bring independent sources of data together and to store them electronically. The database typically groups the independent sources of data with a logical association e.g. a key to enable the organizations to selectively and quickly retrieve portions of the stored data. The database enables retrieval of portions of the stored data based on the type use or association of the data. As an example in the database groups information about non production storage devices together with information about client devices to enable a user to retrieve information about secondary copies of data that are presently stored on non production storage devices for the client devices . Even though databases are useful for storing and retrieving information rows and columns of data are not a user friendly or analysis friendly format for information.

IT administrators can query a database and program a graphical representation of the contents of a single database but as discussed in the Background creating a graphical representation of different types or models of databases can be difficult. Databases are functionally grouped into types or models. A database model is generally a theoretical foundation of a database and fundamentally determines the manner in which data can be stored organized and manipulated in the database system. The database model or type defines the infrastructure offered by a particular database system. Examples of models of databases or database management systems include extensive markup language XML databases networked databases distributed databases hierarchical databases relational databases document oriented databases and object oriented databases. Because each type of database model has particular strengths an organization may employ multiple types of databases within a single networked computing system such as within the information management system shown in . In particular an organization may employ a first type of database in a first information management cell and may employ a second type of database in a second information management cell. It can therefore be challenging for the organization to generate reports for the entire networked computing system i.e. both the first and second information management cells because a common query to both of the different types of databases will return different or incompatible query results. Furthermore both types of the databases may not even recognize a common query command. The following systems and methods provide solutions to the problem of generating reports from heterogeneous information management system databases i.e. databases of different types as well as providing other benefits .

The computing environment includes information management cells information management cells and a database report generation agent report agent . The information management cells are communicatively coupled i.e. connected to the information management cells via a network connection . The network connection may be a LAN WAN or other type of network connection. The information management cells may include storage manager databases of a first type of database management system. The information management cells may include storage manager databases of a second type of database management system that is different from the first type of database management system. Accordingly the computing environment may include heterogeneous information management cells and because the storage manager databases are of different types of database management systems.

The information management cells can be the information management cells from the information management system that is illustrated in . The information management cells may include two or more information management cells A N. Each of the information management cells include corresponding storage managers inclusive of storage managers A N . As discussed above in connection with the storage managers may each include a database having data and metadata associated with one or more information management cells . According to one implementation the storage managers A N create and maintain a uniform type of database management systems for each of the databases A N. For example each database A N is implemented with a relational database management system such as structured query language SQL database. More specifically the databases may be implemented with Microsoft SQL MS SQL or MySQL database management systems.

The information management cells are communicatively coupled or connected to the information management cells but may include storage managers that operate differently than storage managers and that are configured differently than storage managers . In particular the storage managers may execute information management software products that are different than the information management software products used to implement the storage managers e.g. a CommVault software product. For example the storage managers may instead execute information management software products from other manufacturers such as Networker software by EMC2 NetBackup software by Symantec Tivoli Storage Manager FastBack software by IBM and the like.

Each of the storage managers A M may execute a network module A M and maintain a database A M. The network module A enables the storage manager A to communicate with other information management cells M A N and with other storage managers M and A N. In some implementations the network module A may include instructions that enable the storage manager A to utilize one or more communications protocols such as TCP IP or the like.

The databases may enable the storage managers to manage and maintain data and metadata associated with computing devices networked within the information management cells . In some implementations the databases are implemented in types of database management systems that are different than the type of database management system used for the databases . For example if the databases are implemented in relational database management systems then the databases may be implemented by one or more non relational i.e. non SQL types of database management systems. Examples of non relational database management systems include MongoDB Oracle NoSQL BaseX Clusterpoint eXist Jackrabbit OrientDB Sedna SimpleDB or the like. Table 1 illustrated below includes several commonly used examples of databases management systems with the corresponding

As discussed above each type of database management system organizes stored information differently than each other type. As result queries to each of the different types produce results with different content. For example a query to a relational database e.g. to a MySQL database may return a field i.e. an item of data. By contrast a query to a document oriented database e.g. MongoDB may return an object having a piece of data and instructions for what to do with the data. The object returned by the MongoDB may be used to retrieve its associated data which may be similar to the field returned by the relational database query . However some translation and additional processing is typically needed in order to retrieve similar information from the different types of database management systems.

The storage manager A may execute the report agent to acquire content from multiple databases to merge the acquired content and to graphically display the content in a single graph or chart. The report agent is special in that it enables the storage manager A to generate a report based on the content of databases from more than one information management cell. The report agent is further special in that it also enables the storage manager A to generate a report based on the content of heterogeneous databases i.e. information management system databases of different types. The report agent may use an acquisition module an interim database and a report user interface UI module to perform its functions.

The acquisition module enables the storage manager A to acquire information from two or more databases and . As an illustrative example the storage manager A executes the acquisition module to acquire portions of the content of the database M. The acquisition module receives network address information database identification and security credentials from a user in order to access the database M. In some implementations network address information database identification security credentials are received from the user through report user interface module . The acquisition module may use the network module A to communicate via one or more network protocols with the network module M in order to authenticate the communications between the storage manager A and the storage manager M and to retrieve portions of the database M.

The acquisition module determines what type of database the database M is categorized under. The acquisition module may receive type information for the database M from the user via the report user interface module . Alternatively the acquisition module may look up the type of the database M by using Table 1 combined with the name of the database M that was received from the user. In one implementation the acquisition module uses network address information received from the user to communicate with the database M and to acquire the type of the database M directly from the database M.

The acquisition module queries the database M for content based on the database type of the database M. Because each database type and each implementation of information management system databases have different records and fields e.g. rows and columns query commands for various types and implementations of databases are programmed into the acquisition module . To determine the format of the database M the manufacturer of the report agent may reverse engineer the database M and A . For example the manufacturer of the report agent may purchase licenses to the information management software that generates the database M and install the information management software on a test computing device. The manufacturer of the report agent may then perform test runs of the information management software to generate a test copy of the database M. From the test copy of the database M the manufacturer of the report agent may create a data structure that includes the formats of the data structures used in the storage manager databases by various vendors. Table 2 shown below illustrates a data structure that includes example formats of data structures that may be used in the storage manager databases generated from various vendor information management software.

The acquisition module translates query results from the database M to be compatible with the respective content of the database A. in other words the acquisition module normalizes the query results from the database M to a common format. For example the acquisition module may query both databases for a field i.e. column titled Job ID. The query for the database A may return a table of fields of Job ID. By contrast the equivalent query to the database M may return a table of objects from which Job ID may be extracted. The acquisition module may execute a loop to read the Job ID or other data from each of the objects returned by the query of the database M so that the results from both queries can be joined or merged. Thus the acquisition module acquires and prepares database content for insertion into the interim database .

The interim database receives content from the databases A and M to facilitate temporary storage and manipulation of the received content. The interim database may be implemented with a fast response architecture such as an in memory database. An in memory database IMDB also main memory database or MMDB is a database that primarily resides in main memory and is typically only backed up by non volatile computer data storage. Main memory databases are faster than disk databases. Accessing data in memory reduces the I O reading activity when for example querying the data. The interim database stores and sorts the merged content from the databases A and M in preparation for graphical representation via the report user interface module .

The report user interface module generates graphical reports in response to selections by a user and based on the content of the interim database . The report user interface module uses the merged content stored by the interim database to generate graphical reports that represent database content for multiple and possibly heterogeneous information management cells. In some implementations the report user interface module generates reports that are representative of all storage manager databases within the computing environment . The report user interface module may generate graphical reports such as bar graphs and pie charts and may display the graphical reports with a graphical user interface. Examples of a graphical user interface and corresponding graphs and charts are illustrated in and will be discussed in more detail below.

The report user interface module generates the graphical reports in response to selections by the user. For example the report user interface module may use a graphical user interface to display list boxes drop down menus browse menus radio buttons and check boxes to enable the user to select from columns or fields of various databases and database tables. In response to the selections made by the user the report user interface module may sort or selectively extract content from the interim database . In some implementations in response to the selections made by the user the report user interface module may provide query information to the acquisition module to cause the acquisition module to retrieve user selected content from the databases A M and or other storage manager databases.

By executing the report agent any one or more of the information management cells and may acquire normalize and graphically represent content from other information management cells regardless of the homogeneity of the respective storage manager databases. In some implementations the report agent includes a number of software modules. However in other implementations the report agent is a single non modularized piece of software. As discussed above the advantages of the report agent include enabling an organization to create at a glance representations of the status of the computing environment . In other words the reporting agent enables the organization to graphically review content relating to all information management cells and all storage manager databases in the computing environment without regard to the types of database management systems that are in use by the storage managers.

The database report generation agent may be stored on any one of a number of non transitory computer readable media including CD DVD USB drive floppy disk portable non volatile memory magnetic disk and the like. The database report generation agent may also be transmitted to an information management cell for execution via wired or wireless signal. The database report generation agent includes instructions which may cause a computing device to perform a method of generating reports for heterogeneous information management cells or heterogeneous storage manager databases.

At block a storage manager receives input from a user indicating one or more storage manager databases to query and indicate which portions of the database contents to retrieve. As discussed above the storage manager may execute a report user interface module to receive various inputs from the user via user interface objects such as text boxes drop down menus browse menus checkboxes and the like. Through the report user interface module the storage manager may receive query information from the user such as which databases to query the types of the database the names of the databases the network addresses of the databases and or which fields and reports e.g. columns and rows of the database tables to query.

At block the storage manager of one information management cell queries one or more storage manager databases of other information management cells for content. The storage manager queries the other storage manager databases for content based on the selections or other input received from the user. The storage manager may use proprietary or nonproprietary network communication techniques such as TCP IP or the like to communicate with the other storage manager databases. Prior to completing the query the storage manager may have to determine the type of the databases of the other storage managers. The storage manager may use a lookup table to determine the type of the other databases and thereby cater the query commands to the type of databases being queried. In some implementations the storage manager uses an acquisition module of the database report generation agent to perform the queries.

At block the storage manager normalizes the query results to a common format. Because different types of databases return information in different formats e.g. data elements versus data objects the storage manager may use the acquisition module to convert the content of all queried information into for example the format of a relational database. By normalizing the content the storage manager prepares the content for merging and sorting by an interim database.

At block the storage manager merges the query results into an interim database. The interim database may be an in memory database that executes in main memory of a computing device such as the storage manager. The interim database enables the storage manager to sort or otherwise organize the results of the database queries.

At block the storage manager graphically represents the retrieved database content. The storage manager may use the report user interface module to enable the user to the select a preferred graphical format for the content received from the storage manager database query. As will be shown below the report user interface module may graphically render the queried information into a data table a bar graph a pie chart or the like.

While the operations of database content acquisition normalizing and graphing are disclosed as being performed by the storage manager other computing devices within an information management cell may perform the disclosed operations of the method . In one implementation a media agent or a client computing device executes the method . In other implementations computing devices that are external to any of the information management cells of an organization can perform the method to produce the graphical representations based on heterogeneous databases or information management cells.

The edit report button enables a user to select from numerous categories and fields within tables of databases such as storage manager databases. In response to selection of the edit report button by a user the report generation GUI may open a new window or change the display of the report generation GUI in order to render additional options and controls.

The display report button enables a user to select from numerous types of displays and enables the user to select one or more fields within tables of databases to graphically display. Similar to the edit report button the display report button may cause the report generation GUI to open a new window or change views on the report generation GUI in order to display additional options and controls. In one implementation in response to selection of the display report button by the user the report generation GUI opens one or more of the reports page of and the dashboard of . Each of the reports page and the dashboard are discussed in detail below.

The add external database button enables the report generation GUI to include storage manage databases that are external to an information management cell of the computing device that is executing the report generation GUI . Notably the add external database button enables the incorporation of database content from relatively heterogeneous databases. The storage manager media agents client computing devices or other computing devices may execute the report generation GUI . These computing devices may also execute the database report generation agent shown in to generate custom reports based on heterogeneous storage manager databases.

In response to selection by the user of the add external database button the report generation GUI opens a dialog box to enable the user to enter information for connecting to an external database. The dialog box may be named External Database Connector. The dialog box may include a drop down menu to enable a user to select from one of various types or vendors of databases. The drop down menu may include database types such as Oracle SQL Server MySQL CommServer MongoDB and others. In some implementations the drop down menu enables a user to select database not listed here to allow the user to browse additional names of databases. The dialog box includes a text box to enable the user to enter a network address of a host of the external database. The dialog box includes a text box to enable the user to enter a port number such as 1633 of the external database. The dialog box includes a text box to enable the user to enter a name of the external database. The dialog box includes a text boxes and to enable the user to enter security credentials such as a username and password. The button enables the user to save the external database settings and connects to the external database identified by the entries made in the dialog box .

The input menus enable the user to easily define the features to be included in a report. The select report menu enables the user to select from one of multiple predetermined reports. The predetermined reports such as Total Clients by Cells QNet may be created using the GUI and by selecting one of the save buttons . The select report menu may include predetermined reports such as Total Clients by Cells QNet Current Media Size Per Copy Job Status By Agent Types SubClient Count By SLA Reason Total App Size By ClientGroup Data Growth Per Library Largest 10 Clients By App Size In Last 7 Days and Top 5 Errors In Last 24 Hours as shown in where some of these reports may be specific to resources managed by data storage management products manufactured by CommVault of Oceanport N.J. . While these reports may be predetermined a user may create and name other reports as he or she wishes.

The remaining input menus enable the user to create a new report. The description box enables a user to create a name for a new report. In one implementation an information management cell is called a CommCell. The information management cell menu enables the user to select one or more information management cells to be queried during report generation or creation. The aggregate option enables a user to select multiple information management cells from the CommCell menu while the check box is selected. Otherwise the CommCell menu will create the graphical report using information from just one information management cell. The database menu enables the user to select from one of multiple databases that exists within the information management cell. Previously reference was made to a storage manager database. In one implementation a storage manager is called a CommSery database and a storage manager database is one of multiple databases that may be selected with the database menu . The database menu enables the user to also select other databases that may organize or manage data or metadata within an information management cell such as a QNet database or an SRM database.

The table menu allows the user to select between using a table option or a view option to generate the graphical report. The GUI illustrates the table option as selected but the GUI of shows the view option being selected. The view option is discussed in more detail below in connection with . The table option may indicate particular tables in the database whereas the view option indicates a group of tables in the database. Additional options for the table menu will be described with respect to .

The script text box is an input that enables a user to manually enter database commands or subroutines such as SQL queries. The example database commands illustrated in the script text box are executed when at least one of the view data button the bar chart button or the pie chart button is selected. The example database commands that are illustrated include instances of the LEFT OUTER JOIN command. The LEFT OUTER JOIN command is used to join or merge portions of multiple tables e.g. CHClient and CHIDA. The script text box offers the advantage of enabling SQL savvy programmers to further customize the reports.

As discussed above the GUI also includes various output controls such as the view data button the bar chart button the pie chart button and the save buttons . In response to the user selecting one or more of the view data button the bar chart button and the pie chart button the GUI generates corresponding graphical reports which will be illustrated in later figures. In some implementations the display report button of includes the functionality of one or more of the view data button the bar chart button and the pie chart button .

In summary the edit report GUI enables the user to either select a predetermined or previously saved report to execute. The edit report GUI also enables a user to name and define new reports which may be executed with the user friendly view data button bar chart button and pie chart button .

The menu box enables the user to select columns from the CommCellBackupInfo view. The menu box may also enable the selection of tables rows or other portions of the CommCellBackupInfo view.

The GUI populates menus and with column select and aggregate select options in response to determining that the menu is set to Select Columns . The select columns menu determines which content will be displayed as an x axis in a bar graph. The select aggregates menu determines which variables or content will be used to itemize the quantity of the y axis of the bar chart. The menu determines the y axis quantity for each x axis column or bar. The menu may include count average maximum minimum and sum. An example of a graphical report that clearly illustrates the aggregation techniques that are enabled by the GUI is shown in .

The add report button enables a user to continue adding custom reports to the dashboard . In response to selecting the add report button the dashboard opens an add report dialog box illustrated in .

The add report dialog box provides some options that are similar to the options of GUI and GUI . For example the add report dialog box includes a saved reports drop down menu a storage manager menu a chart type menu and a title menu . Additionally the add report dialog box includes a URL text box . The URL text box enables a user to import one or more saved reports from another storage manager from a virtual machine or from a website or FTP address. The imported reports may include a predetermined list of previously stored report configurations. By importing lists of predetermined or received reports the add report dialog box and dashboard can enable almost any computer literate user to generate reports about the information management system being monitored.

At block the GUI populates user interface objects with content identifiers from the information management system database. The content identifiers may include table identifiers view identifiers e.g. groups of tables and column identifiers. The GUI may populate one or more interface objects such as drop down lists combo boxes check boxes and other menus with the database content identifiers. The GUI may then associate a particular graphical interface function with each interface object so that when the user selects a content identifier with a particular interface object the user is programming the graphical representation of at least part of the content of the information management system database.

At block the GUI receives user input for selected ones of the content identifiers. As discussed above the GUI may receive user input from various interface objects such as drop down lists combo boxes and checkboxes. The GUI may display the graphical representations in response to a particular input from the user such as the selection of a graph or plot button.

At block the GUI displays graphical representation of portions of the content of the information management system database based on the selected ones of the content identifiers and based on the interface object used to identify the selected ones of the content identifiers. For example the GUI may associate a column menu with an x axis of a graph or chart so that when a user selects a content identifier such as Job ID the GUI associates the content identifier with the x axis of the graph. Accordingly without any special database programming skills a user may generate custom and complex graphs that identify characteristics of the information management system.

Systems and modules described herein may comprise software firmware hardware or any combination s of software firmware or hardware suitable for the purposes described herein. Software and other modules may reside on servers workstations personal computers computerized tablets PDAs smart phones and other devices suitable for the purposes described herein. Modules described herein may be executed by a general purpose computer e.g. a server computer wireless device or personal computer. Those skilled in the relevant art will appreciate that aspects of the invention can be practiced with other communications data processing or computer system configurations including Internet appliances hand held devices including personal digital assistants PDAs wearable computers all manner of cellular or mobile phones multi processor systems microprocessor based or programmable consumer electronics set top boxes network PCs mini computers mainframe computers and the like. Indeed the terms computer server host host system and the like are generally used interchangeably herein and refer to any of the above devices and systems as well as any data processor. Furthermore aspects of the invention can be embodied in a special purpose computer or data processor that is specifically programmed configured or constructed to perform one or more of the computer executable instructions explained in detail herein.

Software and other modules may be accessible via local memory a network a browser or other application in an ASP context or via another means suitable for the purposes described herein. Examples of the technology can also be practiced in distributed computing environments where tasks or modules are performed by remote processing devices which are linked through a communications network such as a Local Area Network LAN Wide Area Network WAN or the Internet. In a distributed computing environment program modules may be located in both local and remote memory storage devices. Data structures described herein may comprise computer files variables programming arrays programming structures or any electronic information storage schemes or methods or any combinations thereof suitable for the purposes described herein. User interface elements described herein may comprise elements from graphical user interfaces command line interfaces and other interfaces suitable for the purposes described herein.

Examples of the technology may be stored or distributed on computer readable media including magnetically or optically readable computer disks hard wired or preprogrammed chips e.g. EEPROM semiconductor chips nanotechnology memory biological memory or other data storage media. Indeed computer implemented instructions data structures screen displays and other data under aspects of the invention may be distributed over the Internet or over other networks including wireless networks on a propagated signal on a propagation medium e.g. an electromagnetic wave s a sound wave etc. over a period of time or they may be provided on any analog or digital network packet switched circuit switched or other scheme .

Unless the context clearly requires otherwise throughout the description and the claims the words comprise comprising and the like are to be construed in an inclusive sense as opposed to an exclusive or exhaustive sense that is to say in the sense of including but not limited to. As used herein the terms connected coupled or any variant thereof means any connection or coupling either direct or indirect between two or more elements the coupling or connection between the elements can be physical logical or a combination thereof. Additionally the words herein above below and words of similar import when used in this application refer to this application as a whole and not to any particular portions of this application. Where the context permits words in the above Detailed Description using the singular or plural number may also include the plural or singular number respectively. The word or in reference to a list of two or more items covers all of the following interpretations of the word any of the items in the list all of the items in the list and any combination of the items in the list.

The above Detailed Description is not intended to be exhaustive or to limit the invention to the precise form disclosed above. While specific examples for the invention are described above for illustrative purposes various equivalent modifications are possible within the scope of the invention as those skilled in the relevant art will recognize. For example while processes or blocks are presented in a given order alternative implementations may perform routines having steps or employ systems having blocks in a different order and some processes or blocks may be deleted moved added subdivided combined and or modified to provide alternative or subcombinations. Each of these processes or blocks may be implemented in a variety of different ways. Also while processes or blocks are at times shown as being performed in series these processes or blocks may instead be performed or implemented in parallel or may be performed at different times. Further any specific numbers noted herein are only examples alternative implementations may employ differing values or ranges.

The teachings of the invention provided herein can be applied to other systems not necessarily the systems described herein. The elements and acts of the various examples described above can be combined to provide further implementations of the invention.

Any patents and applications and other references noted above including any that may be listed in accompanying filing papers are incorporated herein by reference. Aspects of the invention can be modified if necessary to employ the systems functions and concepts of the various references described above to provide yet further implementations of the invention.

These and other changes can be made to the invention in light of the above Detailed Description. While the above description describes certain examples of the invention and describes the best mode contemplated no matter how detailed the above appears in text the invention can be practiced in many ways. Details of the system may vary considerably in its specific implementation while still being encompassed by the invention disclosed herein. As noted above particular terminology used when describing certain features or aspects of the invention should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics features or aspects of the invention with which that terminology is associated. In general the terms used in the following claims should not be construed to limit the invention to the specific examples disclosed in the specification unless the above Detailed Description section explicitly defines such terms. Accordingly the actual scope of the invention encompasses not only the disclosed examples but also all equivalent ways of practicing or implementing the invention under the claims.

While certain examples are presented below in certain forms the applicant contemplates the various aspects of the invention in any number of claim forms. Accordingly the applicant reserves the right to add additional claims after filing the application to pursue such additional claim forms for other aspects of the invention.

