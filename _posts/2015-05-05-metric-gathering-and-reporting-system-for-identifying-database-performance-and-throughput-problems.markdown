---

title: Metric gathering and reporting system for identifying database performance and throughput problems
abstract: A database back end system includes a monitoring server operable to poll a first database for a first query running on the first database and add the first query to a query list in a second database, and a reporting server operable to normalize the first query, analyze the second database to find a second query in the query list, wherein the second query is found based upon the normalized first query, and report the second query to a user, wherein the reporting is based upon the analyzing of the second database to find the second query.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09465850&OS=09465850&RS=09465850
owner: SECUREWORKS CORP.
number: 09465850
owner_city: Wilmington
owner_country: US
publication_date: 20150505
---
This application is a continuation of U.S. patent application Ser. No. 13 646 341 entitled Metric Gathering and Reporting System for Identifying Database Performance and Throughput Problems filed on Oct. 5 2012 the disclosure of which is hereby expressly incorporated by reference in its entirety.

This disclosure relates generally to information handling systems and relates more particularly to re provisioning servers in a data center.

As the value and use of information continues to increase individuals and businesses seek additional ways to process and store information. One option is an information handling system. An information handling system generally processes compiles stores or communicates information or data for business personal or other purposes. Because technology and information handling needs and requirements can vary between different applications information handling systems can also vary regarding what information is handled how the information is handled how much information is processed stored or communicated and how quickly and efficiently the information can be processed stored or communicated. The variations in information handling systems allow information handling systems to be general or configured for a specific user or specific use such as financial transaction processing airline reservations enterprise data storage or global communications. In addition information handling systems can include a variety of hardware and software resources that can be configured to process store and communicate information and can include one or more computer systems data storage systems and networking systems. An information handling system can include virtual machines that run operating systems and applications on a common host system.

A database system normally includes an organization of collected data referred to as the database and an associated package of programs referred to as the database management system DBMS for creating maintaining manipulating and using the database. Users of the database system interact with the database via the DBMS to make queries to the database. The performance availability and throughput of the database system can depend on the nature of the queries.

The following description in combination with the Figures is provided to assist in understanding the teachings disclosed herein. The following discussion focuses on specific implementations and embodiments of the teachings. This focus is provided to assist in describing the teachings and should not be interpreted as a limitation on the scope or applicability of the teachings. However other teachings can be used in this application. The teachings can also be used in other applications and with several different types of architectures such as distributed computing architectures client server architectures or middleware server architectures and associated resources.

For purposes of this disclosure an information handling system may include any instrumentality or aggregate of instrumentalities operable to compute classify process transmit receive retrieve originate switch store display manifest detect record reproduce handle or utilize any form of information intelligence or data for business scientific control entertainment or other purposes. For example an information handling system may be a personal computer a PDA a consumer electronic device a network server or storage device a switch router or other network communication device or any other suitable device and may vary in size shape performance functionality and price. The information handling system may include memory one or more processing resources such as a central processing unit CPU or hardware or software control logic and operates to execute code. Additional components of the information handling system may include one or more storage devices that can store code one or more communications ports for communicating with external devices as well as various input and output I O devices such as a keyboard a mouse and a video display. The information handling system may also include one or more buses operable to transmit communications between the various hardware components.

Databases and can be maintained by one or more associated DBMS. In a particular embodiment databases and represent one or more commercial database systems that can provide query responses in a standard format such as a structured query language SQL an application programming interface API a graphical user interface GUI or another standard format. As such proxy server can include one or more DBMS and can receive requests from user and coordinate queries in one or more of databases and in order to satisfy the request. Thus databases and can format the data residing in the databases in accordance with the associated DBMS. An example DBMS includes Microsoft Access Microsoft SQL Server MySQL Oracle SQLite Sybase SQL or another DBMS as needed or desired.

Database back end represents maintenance and management services for database front end and particularly for databases and . In particular database back end provides metric gathering and reporting for database system for identifying database performance and throughput problems. As such monitoring server operates to poll databases and to determine the active queries on the databases and to store a list of the queries in query metric database . Monitoring server interacts directly with databases and to obtain query activities of the databases as the queries are being processed and without the overhead of requesting the query activities through proxy server . Monitoring server polls databases and based upon various database log characteristics. For example monitoring server can poll databases and based upon the site location of the databases the logical address of the databases a database query timestamp a unique query identifier a particular database user or host a particular database command or query type a query duration a query state or the like as needed or desired. In particular a query state can indicate that the query is a locker for an accessed portion of the database that the query is a victim of a locked portion of the database that the query is copying database entries to a temporary table that the query is sending data to user or writing the data to a network that the query is sorting a result or the like. The skilled artisan will understand that other characteristics and query statuses can for the basis by which monitoring server polls databases and as needed or desired.

In another embodiment monitoring server polls databases and to retrieve all active queries and stores the active queries on query metric database such that over time the query metric database collects and lists all queries made to the databases. Monitoring server can periodically poll databases and to retrieve all active queries. For example monitoring server can poll databases and once per minute twice per minute or based upon another periodic schedule as needed or desired. In another example monitoring server can poll each of databases and based upon different periodic schedules as needed or desired.

Reporting server performs analysis and evaluation on the queries listed in query metric database . For example reporting server can perform analysis on query metric database based upon one or more query characteristic such as analyzing queries by site location or logical address of the databases by database query timestamp by unique query identifier by particular database user or host by database command or query type by query duration by query state or the like as needed or desired. In a particular embodiment reporting server provides the analysis to report user in a ranked list according to the analyzed characteristic. For example reporting server can provide a ranked list of the queries that take the longest time to perform on databases and based upon the database query timestamp of the associated queries. In another embodiment report server can provide the analysis in a graphical format such as a time distribution of queries with a particular characteristic or a Pareto chart of queries with different characteristics.

In a particular embodiment reporting server performs analysis and evaluation on normalizations of the queries listed in query metric database . For example based upon an analysis of the queries listed in query metric database reporting server can determine that a particular query was performed a large number of times or took a long time to execute. Here reporting server can analyze other similar queries by normalizing certain variables within the particular query and analyzing the resulting queries. For example reporting server can determine that the following query 

In another embodiment reporting server performs load analysis on the queries listed in query metric database . Here reporting server operates to determine the queries and normalized queries that function to create large loads on databases and . In particular an analysis of either the longest duration queries or the most common queries may not provide insight into the queries that are the sources of large loading of databases and . For example a longest duration query may be run so infrequently that the actual loading on databases and from running the longest duration query may be negligible. Similarly a most common query may be executed so quickly that the actual loading on databases and is low in spite of the large number of times the query is processed. Thus reporting server operates to provide a metric for combining the duration of a particular query with the number of times the query is processed to determine whether or not the query results in a large load to databases and .

Table 1 above illustrates an exemplary outcome of performing a load analysis. Note that an analysis of just duration of queries would indicate that query 3 is the longest running query. However because query 3 is made only occasionally query 3 only accounts for 15 of the database load. Similarly an analysis of just the frequency of queries would indicate that query 2 is the most frequently called query but because query 2 is a quick query query 2 only accounts for another 15 of the database load. However when both the frequency and the duration of queries is analyzed query 1 that is called an intermediate number of times and runs for an intermediate duration nevertheless accounts for 70 of the database load. Knowing this a database administrator can take steps to either reduce the frequency at which query 1 is made or to reduce the run time of query 1. For example a further analysis of query 1 may indicate that a small group of non normalized queries accounts for a large portion of the number of query calls and that by caching those results at proxy server the overall database load can be reduced. In the alternative the database administrator can structure the database to shorten the duration of query 1.

In another embodiment reporting server performs lock analysis on the queries listed in query metric database . Here reporting server operates to determine the queries and normalized queries that function to lock portions of databases and thereby limiting access by other queries to the locked portions of the databases. In a first aspect reporting server performs an analysis of the queries that are responsible for locking the databases. In a second aspect reporting server performs an analysis of the queries that are victims of the locks. Here a database administrator can take steps to either reduce the number of locking queries reduce the duration of the locking queries and thereby reduce the amount of time that the databases are locked or reduce the number of subsequent queries that are victims of the locked queries.

If the analysis is to be based on normalized events from the query list the YES branch of decision block is taken one or more characteristics from the queries of the query list are selected for normalization in block and the method proceeds to block where a decision is made as to whether or not the analysis is to be a ranking analysis of the entries of the query list. If not the NO branch of decision block is taken and the method proceeds to decision block as described below. If the analysis is to be a ranking analysis of the entries of the query list the YES branch of decision block is taken and the queries list is analyzed in block . The results of the analysis of block are ranked in block and the results are displayed in block . For example reporting server can provide tabulated or graphical results of the analysis to report user . The method then returns to block where the database is polled for newly active queries.

Returning to decision block if the analysis is not to be a ranking analysis of the entries of the query list the NO branch of decision block is taken and a decision is made as to whether or not the analysis is to be a loading analysis of the entries of the query list in decision block . If not the method proceeds to decision block as described below. If the analysis is to be a loading analysis of the entries of the query list the YES branch of decision block is taken and the queries list is analyzed based upon the duration of the queries in block . The queries list is analyzed based upon frequency of the queries in block and the duration and frequency analysis results are combined in block . For example for a given query the duration can be multiplied by the frequency to determine a database load. In another example for another query one or both of the duration and the frequency can be scaled and then multiplied together to determine a database load. In yet another example the database load can be determined based upon another relationship between the frequency and the duration of a query as needed or desired. The results of the analysis of blocks and are displayed in block and the method then returns to block .

Returning to decision block if the analysis is not to be a loading analysis of the entries of the query list the NO branch of decision block is taken and a decision is made as to whether or not the analysis is to be a locking analysis of the entries of the query list in decision block . If not the method proceeds to block where the database is polled for newly active queries. If the analysis is to be a locking analysis of the entries of the query list the YES branch of decision block is taken and the queries list is analyzed based to determine the locking queries in block . The queries list is analyzed to determine the victims of the locking queries in block and the locker and victim analysis results are combined in block . The results of the analysis of blocks and are displayed in block and the method then returns to block .

Chipset is connected to and supports processor allowing the processor to execute machine executable code. In a particular embodiment information handling system includes one or more additional processors and chipset supports the multiple processors allowing for simultaneous processing by each of the processors and permitting the exchange of information among the processors and the other elements of the information handling system. Chipset can be connected to processor via a unique channel or via a bus that shares information among the processor the chipset and other elements of information handling system .

Memory is connected to chipset . Memory and chipset can be connected via a unique channel or via a bus that shares information among the chipset the memory and other elements of information handling system . In another embodiment not illustrated processor is connected to memory via a unique channel. In another embodiment not illustrated information handling system includes separate memory dedicated to each of the one or more additional processors. A non limiting example of memory includes static random access memory SRAM dynamic random access memory DRAM non volatile random access memory NVRAM read only memory ROM flash memory another type of memory or any combination thereof.

Graphics interface is connected to chipset . Graphics interface and chipset can be connected via a unique channel or via a bus that shares information among the chipset the graphics interface and other elements of information handling system . Graphics interface is connected to a video display . Other graphics interfaces not illustrated can also be used in addition to graphics interface as needed or desired. Video display includes one or more types of video displays such as a flat panel display another type of display device or any combination thereof.

I O interface is connected to chipset . I O interface and chipset can be connected via a unique channel or via a bus that shares information among the chipset the I O interface and other elements of information handling system . Other I O interfaces not illustrated can also be used in addition to I O interface as needed or desired. I O interface is connected via an I O interface to one or more add on resources . Add on resource is connected to a storage system and can also include another data storage system a graphics interface a network interface card NIC a sound video processing card another suitable add on resource or any combination thereof. I O interface is also connected via I O interface to one or more platform fuses and to a security resource . Platform fuses function to set or modify the functionality of information handling system in hardware. Security resource provides a secure cryptographic functionality and includes secure storage of cryptographic keys. A non limiting example of security resource includes a Unified Security Hub USH a Trusted Platform Module TPM a General Purpose Encryption GPE engine another security resource or a combination thereof.

Disk controller is connected to chipset . Disk controller and chipset can be connected via a unique channel or via a bus that shares information among the chipset the disk controller and other elements of information handling system . Other disk controllers not illustrated can also be used in addition to disk controller as needed or desired. Disk controller includes a disk interface . Disk controller is connected to one or more disk drives via disk interface . Such disk drives include a hard disk drive HDD and an optical disk drive ODD and can include one or more disk drive as needed or desired. ODD can include a Read Write Compact Disk R W CD a Read Write Digital Video Disk R W DVD a Read Write mini Digital Video Disk R W mini DVD another type of optical disk drive or any combination thereof. Additionally disk controller is connected to disk emulator . Disk emulator permits a solid state drive to be coupled to information handling system via an external interface . External interface can include industry standard busses such as USB or IEEE 1394 Firewire or proprietary busses or any combination thereof. Alternatively solid state drive can be disposed within information handling system .

Network interface device is connected to I O interface . Network interface and I O interface can be coupled via a unique channel or via a bus that shares information among the I O interface the network interface and other elements of information handling system . Other network interfaces not illustrated can also be used in addition to network interface as needed or desired. Network interface can be a network interface card NIC disposed within information handling system on a main circuit board such as a baseboard a motherboard or any combination thereof integrated onto another component such as chipset in another suitable location or any combination thereof. Network interface includes a network channel that provide interfaces between information handling system and other devices not illustrated that are external to information handling system . Network interface can also include additional network channels not illustrated .

Information handling system includes one or more application programs and Basic Input Output System and Firmware BIOS FW code . BIOS FW code functions to initialize information handling system on power up to launch an operating system and to manage input and output interactions between the operating system and the other elements of information handling system . In a particular embodiment application programs and BIOS FW code reside in memory and include machine executable code that is executed by processor to perform various functions of information handling system . In another embodiment not illustrated application programs and BIOS FW code reside in another storage medium of information handling system . For example application programs and BIOS FW code can reside in HDD in a ROM not illustrated associated with information handling system in an option ROM not illustrated associated with various devices of information handling system in storage system in a storage system not illustrated associated with network channel in another storage medium of information handling system or a combination thereof. Application programs and BIOS FW code can each be implemented as single programs or as separate programs carrying out the various features as described herein.

In the embodiments described herein an information handling system includes any instrumentality or aggregate of instrumentalities operable to compute classify process transmit receive retrieve originate switch store display manifest detect record reproduce handle or use any form of information intelligence or data for business scientific control entertainment or other purposes. For example an information handling system can be a personal computer a consumer electronic device a network server or storage device a switch router wireless router or other network communication device a network connected device cellular telephone tablet device etc. or any other suitable device and can vary in size shape performance price and functionality. The information handling system can include memory volatile e.g. random access memory etc. nonvolatile read only memory flash memory etc. or any combination thereof one or more processing resources such as a central processing unit CPU a graphics processing unit GPU hardware or software control logic or any combination thereof. Additional components of the information handling system can include one or more storage devices one or more communications ports for communicating with external devices as well as various input and output I O devices such as a keyboard a mouse a video graphic display or any combination thereof. The information handling system can also include one or more buses operable to transmit communications between the various hardware components. Portions of an information handling system may themselves be considered information handling systems.

When referred to as a device a module or the like the embodiments described herein can be configured as hardware. For example a portion of an information handling system device may be hardware such as for example an integrated circuit such as an Application Specific Integrated Circuit ASIC a Field Programmable Gate Array FPGA a structured ASIC or a device embedded on a larger chip a card such as a Peripheral Component Interface PCI card a PCI express card a Personal Computer Memory Card International Association PCMCIA card or other such expansion card or a system such as a motherboard a system on a chip SoC or a stand alone device . The device or module can include software including firmware embedded at a device such as a Pentium class or PowerPC brand processor or other such device or software capable of operating a relevant environment of the information handling system. The device or module can also include a combination of the foregoing examples of hardware or software. Note that an information handling system can include an integrated circuit or a board level product having portions thereof that can also be any combination of hardware and software.

Devices modules resources or programs that are in communication with one another need not be in continuous communication with each other unless expressly specified otherwise. In addition devices modules resources or programs that are in communication with one another can communicate directly or indirectly through one or more intermediaries.

Although only a few exemplary embodiments have been described in detail herein those skilled in the art will readily appreciate that many modifications are possible in the exemplary embodiments without materially departing from the novel teachings and advantages of the embodiments of the present disclosure. Accordingly all such modifications are intended to be included within the scope of the embodiments of the present disclosure as defined in the following claims. In the claims means plus function clauses are intended to cover the structures described herein as performing the recited function and not only structural equivalents but also equivalent structures.

