---

title: Generating client applications for business processes management engines
abstract: Aspects include a computer-implemented method of generating client applications for a set of business processes management engines. A set of model definition files representing business process models is obtained, where each business process model describes the operation of a corresponding business processes management engine of the set of business processes management engines. A plurality of client applications are generated using the obtained model definition files. At least one client application of the plurality of client applications is arranged to communicate directly with two or more of the business processes management engines.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09508052&OS=09508052&RS=09508052
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09508052
owner_city: Armonk
owner_country: US
publication_date: 20151208
---
The present invention relates to generating client applications for business processes management BPM engines.

Embodiments include methods systems and computer program products for generating client applications for a set of business processes management engines. A method includes obtaining a set of model definition files representing business process models each business process model describing the operation of a corresponding business processes management engine of the set of business processes management engine. A plurality of client applications are generated using the obtained model definition files. At least one client application of the plurality of client applications is arranged to communicate directly with two or more of the business processes management engines.

Additional features and advantages are realized through the techniques of the present invention. Other embodiments and aspects of the invention are described in detail herein and are considered a part of the claimed invention. For a better understanding of the invention with the advantages and the features refer to the description and to the drawings.

Business process management BPM systems are used by businesses to control and manage workflow. A BPM system is shown in . The BPM system comprises a BPM model designer which is used at the BPM system design stage to generate models of the business processes that BPM systems in particular the BPM system implement. The BPM system further comprises a BPM run time engine which uses the model generated using the BPM model designer to execute and maintain the process flow of the business process identify tasks to be performed and that have been performed and maintain the status of the business process.

The BPM system also comprises a BPM process inbox and task user interface UI that is a client application i.e. an application that provides a user interface for a user to use to interact with the BPM system . The BPM process inbox and task UI provides for the user an inbox that displays a list of user tasks and a task UI that displays a user interface specific to a particular task being considered by the user amongst other things. The BPM system further comprises a BPM process administration UI which displays required administrator tasks of the BPM system and the business process it implements to administrator level users.

Finally the BPM system also comprises a BPM monitor which monitors the execution of the processes and tasks and can be used to generate and displaying different reports and dashboards relating to the operation of the BPM system .

It will be appreciated that in other embodiments of the invention BPM systems with additional and or alternative features may be used for example which display BPM systems for which a differently configured client application with different functionality is provided for a user.

It is common for an overall business process to be separated into multiple interconnected business processes each of which is implemented by a separate BPM system. For example a virtual university may be provided by multiple conventional participating universities each of which provides part of a coherent set of courses. The overall business process might be separated into an enrolment process implemented by one BPM system course participation and exam processes implemented by different BPM systems by the different universities and a central exam marking process implemented by a further BPM system. To give another example a goods supplier might have an inventory management process sales process returns process customer service process and the like all implemented by different BPM systems.

As can be seen in such cases the overall business process spans multiple interrelated business processes implemented by different BPM systems.

A computer system in accordance with an embodiment of the invention is now described with reference to . The computer system comprises a plurality of client applications and which each of which provides a BPM process inbox and task UI to a user as described in more detail below. BPM engines and are each a BPM run time engine each implementing a different business process. BPM engine is in communication with client application BPM engine is in communication with client application BPM engine is in communication with client applications and and BPM engine is in communication with client application . Data stores and comprise data used by the BPM engines with BPM engines and being in communication with data store and BPM engines and being in communication with data store

In the example of a goods supplier the BPM engine could handle the inventory management process using inventory information stored in the data store . A stock manager could use the client application to ensure adequate inventory is maintained. The BPM engine could then handle the sales process again using inventory information stored in the data store and also customer information stored in the data store and the BPM engine could handle the returns process using customer information stored in the data store . A sales person could use the client application to handle the sales process and returns process via the BPM engines and respectively . The BPM engine could handle the customer service process again using the customer information stored in the data store . A customer service representative could then use the client application to handle the returns process and the customer service process via the BPM engines and respectively .

Importantly it will be appreciated that while the BPM engines and implement parts of the same overall business process they are not in direct communication with each other and indeed may use different communication protocols so be unable to do so.

It will also be appreciated that the client applications and may be configured to run on different computing platforms. For example in the goods supplier example the client application might be configured to run on web browsers and smartphones tablets the client application to run on a specific call centre computing platform and the client application on a conventional personal computer.

A BPM client generator in accordance with an embodiment of the invention is now described with reference to . As described in more detail below the BPM client generator enables heterogeneous client applications i.e. client applications that are not all of the same type e.g. are not all for connecting to the same BPM engines and or are not all to be run on the same computing platform to be automatically generated for example the client applications and for the computer system .

A set of BPM designers modellers comprises the different tools used to generate a model of a business process implemented by a BPM system in particular by the BPM engines and . The model is provided using a model definition file. The BPM designers modellers comprise a BPMN designer which generates models of processes in the Business Process Model and Notation BPMN notation a Business Process Execution Language BPEL designer which generates models of processes in the BPEL notation a custom designer which generates models of processes in a custom notation and an other designer which may be any other designer that generates models of processes in another notation.

The BPM client generator itself comprises a process model analyser . The process model analyser comprises a BPMN adaptor which transforms models represented using the BPMN notation into a common universal format used by the BPM client generator a PBEL adaptor which transforms models represented using the BPEL notation into the common universal format a custom adaptor which transforms models represented using the custom format of the custom designer into the common universal format and an other adaptor which transforms models represented using the format of the other designer into the common universal format.

Further the BPM client generator also comprises a client generator which generates the code scripts and deployable components of the client applications and and contains several libraries that are used in the generation process. In particular the client generator comprises protocol libraries which contains libraries allowing communication in accordance with different communication protocols such as web service client libraries RESTful interface libraries and the like and packaging libraries which contains the packaging libraries for different client platform targets such as iOS Android J2EE and the like. The client generator further comprises template repositories in particular a default templates repository which contains default user interface UI templates and other templates such as monitoring and administration templates and the like that are used to generate the components needed for each task as described in more detail below and a custom templates repository which contains corresponding customized templates. Further again the client generator comprises runtime libraries which contain code snippets for interacting with the APIs of BPM engines to perform tasks such as Claim Task Get Inbox Login and the like. Finally the client generator comprises a client generator engine which uses the libraries and repositories to generate the components required for the client applications as described in more detail below.

It will be appreciated that in alternative embodiments BPM client generators could be used which comprised different subcomponents for example fewer or extra designers modellers adaptors libraries and or repositories and that the exact set described above would not be required in all embodiments of the invention.

The high level operation of the BPM client generator is now described with reference to the data flow chart of . When initially configuring the BPM engines and a user will use the BPM model designer to generate the process models required which as mentioned above are provided as model definition files. For each generated process model the computer system uses the process model analyser to analyse the process model after determining which adaptor to use to read the process model . The adaptor to use can be determined from the process model which will also contain a description of which BPM engine to use for each task. The process model analyser then generates a process descriptor which contains a list of the process tasks and the input and output data structure of each task and a client descriptor which contains metadata to describe each client application both in the common universal format used by the client generator .

A user of the client generator can if they wish modify the default configuration of the client generator to tailor the components it generates. However it will be appreciated that in alternative embodiments of the invention only default configurations would be available and no modification would be allowed.

The default or modified configuration is provided as an input to the client generator as a text file XML database or in any other appropriate form. The configuration contain generation parameters defining for example which client applications to generate for the different process components which template to use for each inbox or task screen being generated which protocol libraries and versions to use for each process component which runtime libraries and versions to use for the different client elements in case the related BPM engine provides different sets of these libraries and different packaging parameters for the different client components.

The client generator then uses the generated process descriptor and client descriptor along with the configuration to generate the following client application components a process client component which is a deployable client component for the process or processes containing the client application including the inbox and task user interfaces an admin client component which is a deployable client component containing the different administration tasks for the process or processes and a monitoring client component which is a deployable component containing the monitoring components and dashboards for the process or processes .

The generated client application UIs can include for example an inbox view that shows the available process task instances for the current user role s screens for the different tasks which present the task input data to the user and using which the user can create update and submit the task output data or actions a general process administration screen screens for specific task administration functions a general process monitor screen that contains default monitoring measures metrics KPIs and screens for specific task monitoring metrics.

As mentioned above the default templates repository contains default user interface UI templates and other templates such as monitoring and administration templates and the like that are can be used to generate default versions of the UI components listed above for the generated client application and the custom templates repository contains customised versions of the templates to allow the UI presentation of the client application to be customised.

The operation of the BPM client generator is now described in more detail with reference to the flowcharts of . As can be seen in initially a model of the business process is generated block using the BPM model designer . The generated model is exported from the BPM model designer as a model definition file block for analysis by the process model analyser block . The process model analyser identifies a required process engine runtime and protocol for the model block and generates a corresponding process descriptor and client descriptor block . The client generator then generates a protocol framework for the client application block along with the inbox block admin UI block and monitor dashboard UI block defined by the generated model.

Next the client generator identifies a task template defined by the generated model block and generates a corresponding task UI admin and monitoring block . This process is iterated until no further tasks remain.

Using the various generated components the client generator generates a deployable component for the business component block .

The step of identifying a required BPM engine runtime and protocol for the model and subsequent steps block onwards are iterated until no BPM engines remain to be considered in the model being analysed. In addition the entire process is iterated for each generated model after which the process is complete.

The operation of the process model analyser is now described in more detail with reference to the flowchart of . When analysing a model initially a segment of the BPM process is obtained block and the required adaptor is identified block . The model is queried block to extract process information e.g. Name GUID Input Output etc. block the task list block task information e.g. Name GUID Input Output etc. block and task template information block with the last two blocks being iterated until the information and template information has been extracted for all tasks. Monitoring and administration template information is then extracted block and the process descriptor and client descriptor are then generated using the extracted information block . The entire process is iterated until all segments of the BPM process have been obtained and the corresponding process descriptors and client descriptors generated.

Thus it can be seen that the client applications can be automatically generated with customisations if desired using the templates of the client generator by analysing the model definition files that were created during the BPM system design stage. As the client generator is able to analyse multiple models used on multiple BPM engines and can provide client application components for multiple computing platforms multiple client application can be generated and the client applications can interact with multiple BPM engines if required.

It will be appreciated that in some embodiments of the invention new administration roles will need to be created or existing administration roles modified to allow administration and monitoring rights for multiple BPM engines where a client application interacts with multiple BPM engines. This is because existing administration roles will only provide administration and monitoring rights for individual BPM engines.

While the present invention has been described and illustrated with reference to particular embodiments it will be appreciated by those of ordinary skill in the art that the invention lends itself to many different variations not specifically illustrated herein.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiments were chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

The descriptions of the various embodiments of the present invention have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the described embodiments. The terminology used herein was chosen to best explain the principles of the embodiments the practical application or technical improvement over technologies found in the marketplace or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.

