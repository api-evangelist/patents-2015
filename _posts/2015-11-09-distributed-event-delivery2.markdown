---

title: Distributed event delivery
abstract: A distributed method of delivering events to agent devices. A first software module generates an event, e.g., a screen pop event or a ringing event, for delivery to a second module responsible for an agent device. A third module, which may be the same module as the first module, evaluates a hash function to determine an identifier for the second module from an identifier for the agent device. The first module delivers the event to the second module, which responds to the event, e.g., by causing an agent device to generate a ringing alert or to display a screen pop.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09590840&OS=09590840&RS=09590840
owner: GENESYS TELECOMMUNICATIONS LABORATORIES, INC.
number: 09590840
owner_city: Daly City
owner_country: US
publication_date: 20151109
---
The present application is a continuation of U.S. patent application Ser. No. 14 479 201 filed on Sep. 5 2014 now U.S. Pat. No. 9 185 220 which is a continuation of U.S. patent application Ser. No. 13 844 099 filed on Mar. 15 2013 now U.S. Pat. No. 8 879 718 which claims the benefit of U.S. Provisional Application No. 61 733 408 filed Dec. 4 2012 the entire disclosures of which are incorporated herein by reference.

This disclosure generally relates to software systems used in contact centers and other enterprise communications systems and more particularly to a modular scalable high availability system for handling session initiation protocol SIP communications in a contact center.

Contact centers may be used by an organization to communicate in an efficient and systematic manner with outside parties. Such centers may for example have large numbers of agents staffing telephones and interacting with outside parties and with each other. Calls may be placed on hold or into an interactive voice response IVR system when first connected to the contact center subsequently an agent may take a call place it back on hold transfer the call conference in another agent or take other such actions related to the call. Outside parties may also interact with a contact center by other mechanisms including initiating contact through on line chat video email and the like.

The session initiation protocol SIP standard may be used in a contact center to conduct communications over an Internet Protocol IP network which may operate within the contact center and which may connect to outside networks such as the public switched telephone network PSTN through one or more gateways. An IP network may also extend outside of the contact center enabling for example communications with parties connected to the Internet without the need to use the PSTN.

It may in some situations be advantageous to construct large contact centers in which for example thousands of agents are employed. A large contact center may be helpful for example to an enterprise with a central contact telephone number from which each incoming call is dispatched to an agent according to the reason for the call to an enterprise where it is often necessary to forward a call from one agent to another or to an enterprise in which many agents work from different geographical locations. In such cases it may be inefficient to construct multiple small independent call centers.

It may be advantageous for the software and hardware employed in a large contact center to be modular scalable readily expanded or reduced in size and suitable for providing high availability service. Scalability may be important because performance limiting bottlenecks may pose increasingly difficult challenges as contact center deployments become very large.

According to one aspect a system for delivering events to agent devices in a contact center is provided.

According to an embodiment of the present invention there is provided a method for distributed event delivery including generating by a first module executing on a computing device an event for a resource identifying by the first module a resource identifier ID for the resource identifying a second module responsible for the resource wherein the identifying includes providing the resource ID to a function and receiving as an output from the function a module identifier ID for the second module and sending the event to the second module based on the identified module ID.

In one embodiment the method includes forwarding the event to a resource identified by the resource ID wherein the resource generates an output in response to the event.

In one embodiment the method includes receiving by the resource the ringing event and generating by the resource a ringing alert.

In one embodiment the method includes routing a call to an agent device associated with the resource ID.

In one embodiment the method includes receiving by the resource the screen pop event and generating by the resource a screen pop.

In one embodiment the hash function includes a first basic hash function configured to map resource identifiers into a range and a second basic hash function configured to map module identifiers into the range.

In one embodiment the second basic hash function is further configured to map a replica of each module identifier into the range.

In one embodiment the hash function is configured to map resource identifiers corresponding to resources in a geographic region into module identifiers corresponding to modules executing on computing devices in the geographic region.

The detailed description set forth below in connection with the appended drawings is intended as a description of exemplary embodiments of a SIP cluster provided in accordance with the present invention and is not intended to represent the only forms in which the present invention may be constructed or utilized. The description sets forth the features of the present invention in connection with the illustrated embodiments. It is to be understood however that the same or equivalent functions and structures may be accomplished by different embodiments that are also intended to be encompassed within the spirit and scope of the invention. As denoted elsewhere herein like element numbers are intended to indicate like elements or features.

According to one exemplary embodiment the contact center includes resources e.g. personnel computers and telecommunication equipment to enable delivery of services via telephone or other communication mechanisms. Such services may vary depending on the type of contact center and may range from customer service to help desk emergency response telemarketing order taking and the like.

In an exemplary embodiment a contact center may include a number of agent devices each suitable for being operated by an agent and each connected to servers in the contact center. A cluster of session initiation protocol servers SIP servers which may be referred to as a SIP cluster may provide an interface layer to the agent devices and other contact center modules may interface with the SIP server layer by making requests and receiving responses according to an interface which may be referred to as a T library TLib or T Lib. Other interfaces may also be used for communication between the modules in the contact center including SIP and sockets which may be used to exchange events. For example one or more statistics servers or stat servers may be employed to aggregate and maintain information about such dynamic data as agent availability these stat servers may query the SIP cluster for relevant data and make it available to clients. Such a client may be a graphical user interface operated by a contact center supervisor monitoring the operation of the contact center. A reporting layer including one or more instances of an interaction concentrator ICON may also monitor the SIP server layer and capture information about calls arriving at the contact center and store them for subsequent analysis or troubleshooting. Other clients may interact with both the SIP cluster and the stat servers to provide management troubleshooting or reporting functions or the like.

Inbound and outbound calls from and to the end user devices may traverse a telephone cellular and or data communication network depending on the type of device that is being used. For example the communications network may include a private or public switched telephone network PSTN local area network LAN private wide area network WAN and or public wide area network such as for example the Internet. The communications network may also include a wireless carrier network including a code division multiple access CDMA network global system for mobile communications GSM network and or any 3G or 4G network conventional in the art.

According to one exemplary embodiment the contact center includes a gateway coupled to the communications network for receiving and transmitting calls and or data between end users and the contact center. The gateway may provide an interface between the internal network of the contact center and one or more external networks.

The contact center may also include a multimedia social media server which may also be referred to as an interaction server for engaging in media interactions other than voice interactions with the end user devices and or web servers . The media interactions may be related for example to email chat text messaging web social media and the like. The web servers may include for example social interaction site hosts for a variety of known social interaction sites to which an end user may subscribe such as for example Facebook Twitter and the like. The web servers may also provide web pages for the enterprise that is being supported by the contact center. End users may browse the web pages and get information about the enterprise s products and services. The web pages may also provide a mechanism for contacting the contact center via for example web chat voice call email web real time communication WebRTC or the like. Although in only one instance of each of the servers is shown a contact center may contain multiple instances of any server and it may be advantageous to operate multiple instances for load sharing and to improve performance.

According to one exemplary embodiment of the invention the gateway is coupled to an interactive voice response IVR server . IVR is a technology that allows a computer to interact with humans through the use of voice and dual tone multi frequency DTMF tones input via keypad. In telecommunications IVR allows customers to interact with a contact center via a telephone keypad or by speech recognition after which they can service their own inquiries by following the IVR dialogue. IVR systems can respond with prerecorded or dynamically generated audio to further direct users on how to proceed. IVR applications can be used to control almost any function where the interface can be broken down into a series of simple interactions. In one exemplary embodiment the IVR server is configured for example with an IVR script for querying customers on their needs. The IVR server is configured for example with an IVR script for querying customers on their needs. For example a contact center for a bank may tell callers via the IVR script to press 1 if they wish to get an account balance. If this is the case through continued interaction with the IVR customers may complete service without needing to speak with an agent.

Once an appropriate agent is available to handle a call the call is transferred to the corresponding agent device collectively referenced as . An agent device may be a telephone or it may be a computer with an attached display such as agent device which may be referred to as an agent desktop. Collected information about the caller and or the caller s historical information may also be provided to the agent device for aiding the agent in better servicing the call. In this regard each agent device may include a telephone adapted for regular telephone calls VoIP calls and the like. The agent device may also include a computer for communicating with one or more servers of the contact center and performing data processing associated with contact center operations. The selection of an appropriate agent for routing an inbound call may be based for example on a routing strategy employed by the routing server and further based on information about agent availability skills and other routing parameters provided for example by a statistics server which may also be referred to as a stat server . A SIP server provides an interface to agent devices .

The multimedia social media server may also be configured to provide to an end user a mobile application for downloading onto the end user device . The mobile application may provide user configurable settings that indicate for example whether the user is available or not available or the user s availability is unknown for purposes of being contacted by a contact center agent.

The contact center may also include a reporting server configured to generate reports from data aggregated by the stat server . Such reports may include near real time reports or historical reports concerning the state of resources such as for example average waiting time abandonment rate agent occupancy and the like. The reports may be generated automatically or in response to specific requests from a requestor e.g. agent administrator contact center application and or the like .

To store configuration information such as device characteristics and agent attributes such as agent skill levels a configuration server may be included in the system. The configuration server may for example provide attribute values for objects or processes when these are created at system startup or subsequently. A feature server may provide various features within the contact center such as voice mail and a dial plan and a SIP proxy which performs the functions of a SIP element also known in the art as a SIP registrar.

According to one exemplary embodiment of the invention the contact center also includes a mass storage device for storing data related to contact center operations such as for example information related to agents customers customer interactions and the like. The mass storage device may take the form of a hard disk or disk array as is conventional in the art.

Each of the various servers of may be a process or thread running on one or more processors in one or more computing devices executing computer program instructions and interacting with other system components for performing the various functionalities described herein. The computer program instructions are stored in a memory which may be implemented in a computing device using a standard memory device such as for example a random access memory RAM . The computer program instructions may also be stored in other non transitory computer readable media such as for example a CD ROM flash drive or the like. Also a person of skill in the art should recognize that a computing device may be implemented via firmware e.g. an application specific integrated circuit hardware or a combination of software firmware and hardware. A person of skill in the art should also recognize that the functionality of various computing devices may be combined or integrated into a single computing device or the functionality of a particular computing device may be distributed across one or more other computing devices without departing from the scope of the exemplary embodiments of the present invention. A server may be a software module which may also simply be referred to as a module. The set of modules in the contact center may include servers and other modules.

Each module may for example be a thread or a process. The modules in the contact center may communicate by various means including events and messages. Two modules may be connected by a point to point socket connection and in this ease either module may send events to the other. Messages may be sent by one module to another module via a message server which also provides the ability to send a broadcast message to multiple recipient modules simultaneously. Other messages known in the art and referred to herein as SIP messages may also be exchanged between the modules of the contact center and with entities external to the contact center.

It may be advantageous for the software and hardware employed in a contact center to be modular scalable readily expanded or reduced in size and suitable for providing high availability service. A modular design using multiple copies of identical modules of different types configured at startup or reconfigured at run time may be operated to provide these advantages. The size of the deployment may be changed by increasing or decreasing the number of modules executing adding processors to the system if necessary. High availability may be provided for example by mirroring state information between modules so that several modules are in a position to perform any given task so that if one module fails as a result of a software error or hardware failure another module operating on another processor if necessary may perform the failed module s tasks. Scalability may be achieved by design practices which avoid bottlenecks in data flow or processing resources e.g. design practices which avoid routing large volumes of data through a single central location.

Each agent device may be associated with one or more directory numbers DNs . A DN may be an identifier for a network endpoint at a user interface. A telephone may for example have a DN corresponding to its phone number or it may have multiple DNs if it supports multiple lines each of which may be a DN. Other DNs may be implemented in an IVR or in a session controller where the DN may be known as a route point for the purpose of providing a temporary hold location for a call. Other types of identifiers used with other user interfaces such as an email address or a login identity for chat may also be DNs. In the SIP server each T controller may own for example by overseeing or being responsible for multiple agent device DNs where ownership in this context implies a many to one relationship in this case a T controller may own many agent device Ns and each agent device DN may have one owner.

In operation it may on occasion be advantageous to remove a SIP server from the SIP cluster or to add a SIP server to the cluster. For example if a computing device on which a SIP server executes requires service the SIP server may be removed from the SIP cluster and the computing device may be shut down. The computing device may be replaced with another computing device on which a new instance of the SIP server may be started and the new SIP server may be added to the SIP cluster . It may be advantageous to be able to perform these operations with as little disruption as possible.

Each SIP server instance may contain a T controller which may own multiple DNs and which may maintain state information for the DNs it owns. A T controller may own many DNs e.g. 4 000 DNs and the total number of DNs in the contact center may be significantly larger still. It may be advantageous for a module in the contact center initiating an interaction with a DN to identify the T controller owning the DN. It may however be costly to maintain a complete record of DN ownership in each such module because of the potentially large volume of data involved and the cost of keeping this data current as the contact center changes dynamically e.g. as SIP servers or DNs are added or removed. Moreover any solution involving centralized storage of a complete record of DN ownership may result in a data flow or processing bottleneck. To reduce the effect of these drawbacks a hash function may be used to map the set of DNs onto the set of SIP servers and thereby to the set of T controllers owning the respective DNs.

It may be advantageous for the hash function to have properties that result in the least disruption possible when a SIP server is added or removed. When a SIP server is added or removed some DNs previously mapped by the hash function to other SIP servers may become mapped to the new SIP server conversely when a SIP server is removed the DNs mapped to the SIP server being removed may become mapped to other SIP servers . It may be advantageous for the new ownership mapping to result in the smallest number of DNs changing owners. For example it may be advantageous for a change in ownership to occur for the DNs assigned to a SIP server that is being removed or for DNs which are being transferred to a SIP server which is being added.

The hash function used to identify the DN owners may map the set of DNs onto the set of SIP servers. Because the set of SIP servers may change when a SIP server is added or removed a set of SIP server identifiers e.g. unique identifiers assigned to each SIP server may be an input when the hash function is executed. The identifier of the DN being mapped to an owner may also be an input to the hash function. The output of the hash function may be the identifier of the SIP server which owns the DN through the T controller executing in the SIP server.

In one exemplary embodiment when a SIP server is removed from the SIP cluster it transfers its state information and its responsibilities such as DN ownership to another SIP server so that the operation e.g. of the DNs owned by the SIP server being removed from the cluster may continue without interruption.

In one embodiment consistent hashing may be used to provide a hash function to map each DN to its owner SIP server in a manner that results in little disruption when a SIP server is added or removed. shows a layout diagram illustrating a mapping by a consistent hash function of six DNs to three SIP servers and shows a layout diagram illustrating a mapping by the same consistent hash function of six DNs to two SIP servers. A consistent hash function which maps the domain of DN identifiers into the range of SIP server identifiers may be constructed using a first basic hash function which need not be a consistent hash function to map the DN identifiers to an interim range which may be a range of integers. A second basic hash function which may be the same hash function as the first basic hash function having the same range may be used to map the SIP servers identifiers to the same interim range. The interim range may be mapped to a circle and the consistent hash function is the mapping that results when the DN is mapped to the nearest SIP server hash point when proceeding in a clockwise direction on the circle. In the example depicted in in an initial state a first DN and a second DN are mapped to a first SIP server a third DN a fourth DN and a fifth DN are mapped to a second SIP server and a sixth DN is mapped to a third SIP server . If the second SIP server is removed the first DN and the second DN remain mapped to the first SIP server because it remains the nearest point to them on the circle in a clockwise direction. After the removal of the second SIP server the third DN the fourth DN and the fifth DN are mapped to the third SIP server. The sixth DN remains mapped to the third SIP server . In this example the DNs which move to a different owner e.g. SIP server as a result of the removal of the second SIP server are the third DN the fourth DN and the fifth DN which could not remain mapped to the second SIP server after the second SIP server was removed. In this example none of the DNs mapped to the first SIP server are moved to the third SIP server nor vice versa as a result of the removal of the second SIP server .

Similarly if the initial state were the one of with two SIP servers the first SIP server and the third SIP server and the final state the one of with three SIP servers then the addition of one SIP server the second SIP server would again result in the reassignment of three DNs the third DN the fourth DN and the fifth DN which would be moved to the newly added second SIP server .

The uniformity of the distribution of DNs across SIP servers may be improved by hashing one or more replicas of each SIP server identifier into the range e.g. onto the circle. This may be done for example for each SIP server one at a time by executing one of the basic hash functions or another hash function having the same range repeatedly each time using as input the output of the last execution of the hash function. Each new output forms an additional replica in the range. In this example a DN may be mapped to a SIP server when the SIP server identifier or one of its replicas is the nearest point on the circle in a clockwise direction to the hash of the DN identifier. shows a layout diagram of a mapping formed using replicas of SIP server identifiers according to an exemplary embodiment. If replicas of the first SIP server replicas of the second SIP server and replicas of the third SIP server are added then the consistent hash function will map the third DN and the fourth DN to the first SIP server through its replica the first DN and the fifth DN to the second SIP server the former through the replica and the second DN and the sixth DN to the third SIP server the former through the replica e.g. two DNs are mapped to each SIP server. The use of replicas and the resulting improved uniformity of the distribution of DNs across SIP servers may mean that the number of DNs owned by the various SIP servers is more nearly the same than in the absence of the use of replicas in which case some SIP servers may own few DNs and some may own many. Although particular numbers of SIP servers and DNs have been used for purposes of illustration in these examples the invention is not limited thereto and may be used with different numbers of SIP servers and DNs.

Consistent hashing is discussed in Karger D. Lehman E. Leighton T. Panigrahy R. Levine M. Lewin D. 1997 Consistent Hashing and Random Trees Distributed Caching Protocols for Relieving Hot Spots on the World Wide Web Proceedings of the Twenty ninth Annual ACM Symposium on Theory of Computing the contents of which are incorporated herein by reference.

It should be apparent to one of skill in the art that the invention is not limited to the consistent hash described in this example and that the interim range for example may be a range of floating point numbers for example or a range of string values. It should also be apparent that the mapping of the interim range to a circle is a conceptual device for illustrating a mapping to a range with a wrapping characteristic so that the last element in the range is defined to be adjacent to the first. The DNs may equally well be mapped to the nearest SIP server in a counterclockwise direction instead of in a clockwise direction. The hash function need not be a consistent hash function but may be any other hash function with or without the characteristic of producing minimal disruption e.g. minimal re mapping of owned objects e.g. DNs to owners e.g. SIP servers or T controllers when the set of owners is changed.

If a contact center is geographically distributed it may be advantageous to have SIP server instances located near e.g. in the same country as the DNs they own through their T controllers. This may be accomplished by defining a different consistent hash function for each geographic region. For example to determine the owner of a DN in country A the consistent hash function may be executed with input including SIP server identifiers corresponding to SIP servers executing on computing devices in country A.

Because a list of SIP servers may be input to the consistent hash function any module that will execute this hash function may maintain a list of SIP servers. When a SIP server is added to or removed from the cluster the configuration server which may keep a list of SIP servers may be notified. It may send out an update notification announcing the change in the form of a message or an event to each module which previously registered to receive updates on the list of SIP servers. This avoids the need for each module to obtain an updated list of SIP servers from a central location such as the configuration server every time the consistent hash function is to be executed.

When a call arrives at a contact center information about the call and the caller may be gathered such as the caller s history with the contact center and the purpose of the call. A target agent e.g. an agent appropriate for handling the call may be identified by a module and it may be advantageous to route the call to a DN at which the target agent can be reached. To do so it may be advantageous to identify a module which owns the DN e.g. a T controller which owns the DN or a SIP server which contains the T controller which owns the DN. This identification may be performed using the hash function which maps DNs to SIP servers.

In an embodiment that may be referred to as involving implicit agent reservation once the routing server selects a target DN to which to route a call the routing server sends to the first session controller Session Controller in a routing request with an embedded implicit agent reservation request instructing the first session controller to attempt to route the call to the target DN DN in . The target DN may be owned by a T controller in a SIP server but the first session controller may lack information about the location of the target DN e.g. it may have received in the routing request an identifier for the target DN but it may lack an identifier for the T controller which owns the target DN or for the SIP server which contains this T controller. According to one embodiment identification of the SIP server responsible for the target DN is based on the hash function which may be executed by the first session controller assigned to the call. According to one embodiment the hash function maps an input DN to a unique identifier for the SIP server containing the T controller which owns the input DN e.g. the target DN .

In the illustrated example the first session controller is configured to execute the hash function using as input the target DN identified by the routing server and to identify based on the hash function the second session controller which according to the example owns the target DN . Once the owner is identified the first session controller transmits an agent reservation request to the second session controller . In another embodiment the T controllers may instead perform some of these functions the first session controller sends the agent reservation request to a T controller which is in the same SIP server as the first session controller . The T controller is configured to execute the hash function using as input the target DN identified by the routing server and to identify based on the hash function the T controller which according to this embodiment owns the target DN . Once the owner is identified the T controller transmits an agent reservation request to the T controller which owns the target DN .

In the illustrated example the T controller executing in the second SIP server receives the agent reservation request and accordingly the computing device within which the T controller executes receives the request. In the terminology used herein the computing device is said to receive the request whether the request originated from a thread or process executing in a different computing device or in the same computing device.

When the T controller receives the agent reservation request it may respond with a message granting the reservation or denying it. If the request is granted the first session controller may transfer the call to the agent s DN if the request is denied the first session controller may notify the routing server which then may make a renewed request to the stat server for an alternate agent to handle the call.

If the DN is already reserved e.g. if another routing server has already sent an agent reservation request which has been granted the T controller may deny the agent reservation request. If the T controller has not yet granted an agent reservation request the T controller may use an arbitration process to determine whether to grant or deny the request. In one exemplary embodiment the T controller waits for some interval of time for other agent reservation requests corresponding to other calls to arrive and grants the agent reservation request having for example the highest priority and denies the others. If several agent reservation requests have the same priority it may select at random one to be granted and deny the others. The priority of an agent reservation request may be evaluated by the routing server using an algorithm that takes into account various criteria including for example a characteristic of the caller such as the value of the caller e.g. whether the caller is expected to be a significant source of income to the enterprise the hold time e.g. the length of time the caller has already been waiting to speak with an agent the suitability of the agent for the call and or the suitability of other agents for the call. For example the request may be given higher priority if the caller needs help with a particular product and the agent is one of few agents at the contact center familiar with that product. The routing server then may send an assessment of the priority of the call along with the agent reservation request. In one embodiment the reservation arbitration is performed by an agent reservation module in the T controller.

Routing servers may communicate with each other about call routing and or agent selections as they are made reducing the likelihood that two routers will attempt to route different calls to the same agent. This mechanism is not foolproof however in part because the routing servers may execute on different computing devices resulting in communication delays. The agent reservation module acts as a central arbiter for the agent and the DN making it possible for multiple routing servers to obtain a reliable response granting or denying an agent reservation request.

In one exemplary embodiment the first session controller may make an explicit agent reservation request by sending an agent reservation request not embedded in a routing request to the first session controller . The second session controller may execute the hash function to identify the second session controller send the agent reservation request to the second session controller and whether or not the agent reservation request is granted send a response to the routing server indicating whether the agent reservation request was granted. If the agent reservation request is granted the router then sends a route request to the first session controller which routes the call to the T controller which owns the target DN .

Although in the examples described here the agent is associated with a single DN the invention is not limited to this case and the reservation logic may be expanded to include configurations in which an agent may be logged in to or otherwise associated with more than one DN.

A modular approach such as that of the present invention provides several benefits including scalability e.g. the ability to expand the size of an implementation without being constrained by performance bottlenecks and resilience e.g. the ability of the system to adjust quickly and without disruption to the failure of an element.

If the agent reservation request is granted the first session controller may in addition to routing the call to the target DN generate an event such as a ringing event for causing the target DN to ring or a screen pop event for causing information related to the call to be made available to the agent for example in the form of a screen pop. This event like the agent reservation request is to be routed to the T controller which owns the agent device on which the screen pop is to appear. The T controller may be the same T controller as the T controller which owns the target DN in one exemplary embodiment for example the agent device is an integrated device containing display features and telephony capabilities and the agent device has a single DN. To route the screen pop event to the target device the first session controller executes the hash function passing in the DN as an argument and receiving as output an identifier e.g. a unique string identifying the SIP server containing the T controller which owns the agent device. In this context the agent device is another example of a resource. The first session controller then dispatches the event to the T controller which forwards it to the agent device causing the agent device to respond to the event e.g. providing output to the agent by generating a ringing alert in response to a ringing event or by displaying a screen pop in response to a screen pop event.

The threads executing in various modules in the contact center may in operation generate records which may be referred to as log files of aspects of their operation. For example a thread may record or log each message or event it sends to another thread or receives from another thread. During operation each thread writes to a separate log file. It may on occasion be advantageous to review or analyze such log files to assess the performance of the contact center or to diagnose unusual or erroneous activity. Log files may be large however and for any particular investigation some of the information in a log file may be of little interest. Moreover as modules interact log entries related to these interactions may he recorded in different log files. A tool for systematically identifying classifying and displaying relevant information in log files may therefore be of use.

Other basic fields may include for T Lib messages the DN number and the connection ID a unique identifier for the connection and for SIP messages fields identified by names known to those of skill in the art as the following Call ID CSeq Message type To URI From URI Via RI top most Via branch Request URI Destination IP Destination port Source IP and Source port.

In one exemplary embodiment each thread is configured to record a log entry known as a trigger when it sends to another thread an event or message in response to which the receiving thread is expected to take some action. The trigger includes a unique identifier which is sent as part of the message or event. The receiving thread then records in its log file a log entry known as a handler when it begins handling e.g. responding to the message or event and another handler when it completes handling the message or event. Each handler log entry contains the same unique identifier present in the trigger log entry and the two handlers provide starting and ending boundaries in the receiving thread s log file for log entries made while handling the message or event. The unique identifier present in a trigger or handler message is also a basic field in any database table for a thread which may record triggers or handlers.

For example in an analysis session the log files generated during a time interval may be collected in one directory. These log files may include files generated by a SIP server e.g. one log file for each thread executing within the instance of SIP server a log file for a routing server a log file for a stat server a log file for a SIP proxy and a log file for a feature server . An analyst may wish to view activity involving a particular thread such as a thread named TServer which executes in the session controller which in turn is part of the SIP server process. The analyst may run the log parser selecting the log file corresponding to the TServer thread and the log parser may be configured to transcribe each entry into the database parsing each entry to extract fields of interest such as the basic fields and other fields identified by the parser for this type of log file.

In a stage of querying the database using a client which may be referred to as a front end the analyst may then for example perform a query requesting transactions related to a particular calling phone number e.g. a phone number for which a connection problem was reported. The front end may include a user interface suitable for receiving input such as mouse clicks from the user and for displaying results to the user. The query may reveal that a call from this number was received by the TServer thread but the call was not answered e.g. the call triggered a transaction at the SIP server layer but no result was triggered.

The session controller may contain two threads a TServer thread and a call manager thread and the latter may be responsible for SIP messaging. To further investigate the cause of the unanswered call the analyst may invoke the log parser to parse the call manager thread s log file and perform queries to display both T Lib messages and SIP messages from both threads in for example chronological order. A user interface module may display the results of each query in a user readable format. Because the log file name and the position in the log file of each log entry are basic fields in each table in the database the user interface may provide to the user the ability by clicking on a data item displayed in the user interface to open the log file from which this data item was originally retrieved and to highlight the corresponding log entry in the log file. Using the log file name and the position in the log file of each log entry the query may also display e.g. in a separate adjacent pane or window next to the query results the log file entries from which these query results originated and each such log file entry may be clickable e.g. clicking on it may cause a viewer to open allowing the user to see the entire contents of the log file containing the entry e.g. with the entry highlighted. For example in the adjacent pane or window the front end may display a series of log file entries in chronological order showing e.g. the log file entry corresponding to the sending of a message from one module followed by the log file entry from a different log file corresponding to the receipt of the message by another module and followed by log file messages corresponding to acts executed by the second module in handling the message.

On occasion a need may arise for an agent to make an outbound call from an agent device e.g. to another agent in the contact center or to a customer who has asked to be called back. In such a case a dial plan may be provided by the feature server to support the process of connecting the call. shows a schematic diagram of an exemplary geographically distributed contact center which may include two data centers one in New York and one in London and it may include five agent sites located in Daly City Menlo Park N.Y. London and Paris.

Each agent device from which outbound calls can be made may be configured with one or more calling profiles each of which is a list of available categories e.g. categories available for matching. Each category may contain a set of patterns. The calling profile may be used to limit the ability of the agent device to place outgoing calls. When a sequence of digits is dialed at an agent device the sequence e.g. the dialed string may be tested against each pattern in each category included in the profile e.g. each available category to determine whether the dialed string matches any pattern in the category. If the dialed string does not match any pattern in a category in the calling profile or if it matches any pattern in a blocked category the call will be denied and the agent device may generate an error tone to indicate that the call has been denied.

For example a first calling profile which may be referred to as a local calling profile may include the first category the second category and the third category . Any call attempted from an agent device configured with the first calling profile will be denied unless the dialed string matches a pattern in the first category the second category or the third category e.g. unless the call is an internal call a call to an emergency number or a call to a local external number. In this case the inclusion or exclusion of the sixth category containing a pattern for blocked 900 numbers may have no effect because a number beginning with 9 1 900 and followed by 7 other digits will in any event not match any of the patterns in the categories in the calling profile. A second calling profile may contain the first category the second category the third category the fourth category and the sixth category so that an agent device configured with the second calling profile may be able to initiate calls to internal numbers emergency numbers local external numbers and domestic external numbers. International calls may not be possible because an attempt to dial an international number may result in a dialed string not matching any pattern in a category associated with the calling profile and an attempt to dial a 900 number may fail as a result of it matching the blocked sixth category . Calling profile definitions may be different for different agent sites so that for example the definition of a local calling profile in a Daly City agent site may be different from the definition of a local calling profile in a Menlo Park agent site . The definitions of categories may similarly be different for different agent sites .

If the dialed string matches more than one category then a rank which may be referred to as a weight may be used to identify the category and pattern which is the best match for the dialed string. In one exemplary embodiment the weight is calculated as follows. First a maximum dialed string length which is at least the length of the longest anticipated dialed string is selected. The weight is initially set to this maximum dialed string length multiplied by 10. Then for each digit element in a pattern the weight is decreased by the number of digits out of a possible 10 ranging from 0 to 9 that will match that digit element. Here a digit element is an element of a pattern corresponding to one digit of a dialed string the element matches a range of possible values for that digit. For example in one notation the character X matches any digit Z matches any digit except 0 and a range may be specified in brackets so that 2 9 matches any digit between 2 and 9 . Using this algorithm and a maximum dialed string length of 100 a pattern such as 9 2 9 XX XXXX has an initial weight of 1000 e.g. 100 10 which is then decreased by 1 for the initial 9 which matches one digit then by 8 for the digit element 2 9 which matches eight possible digits and then by 60 for the six X digit elements each of which matches ten possible digits resulting in a weight of 931. In one notation the character may match any number of digits having any value so that for example 9 matches any dialed string beginning with the digit 9 . The weight of this pattern may be calculated assuming the dialed string has the maximum length so that for a maximum dialed string length of 100 the weight is 9. In this case the weight is calculated from an initial weight of 1000 e.g. 100 10 decreased by 1 for the initial character 9 and decreased by 990 for the remaining 99 characters each of which matches 10 possible digits . Although a specific example of an algorithm for calculating a weight for a pattern is described here the invention is not limited thereto and other algorithms may be used to determine the weight of a pattern. In one embodiment the weight of a pattern may be determined using an algorithm which takes as input both the pattern and the dialed string.

Once the dialed string has been matched to one or more category and the best match category has been identified e.g. the category with the highest weight or any blocking category the dialed string is translated into a translated string which may include both routing information and an endpoint identifier. For example if the dialed string is a domestic external number the call may be routed part way to its destination within an internet protocol IP network through a gateway to the PSTN network and from there to the destination number. The PSTN carrier may charge for the use of the PSTN network and the amount charged e.g. the cost to the contact center operator may depend on multiple factors including the time of day the day of the week and the location of the gateway and of the destination number. Different gateways may be serviced by different PSTN carriers and several PSTN carriers may be available at a gateway . The time of day which may affect the cost of the call may depend on the time zone in which the gateway is located.

In one exemplary embodiment the feature server maintains state information on a set of gateways including for example whether the gateway is operational and its reserve capacity. When translating a dialed string with an endpoint external to the contact center the feature server first identifies available gateways e.g. those that are operational and have the capacity to handle an additional call and it then calculates the estimated cost of using each available gateway to route the call taking into account the carriers available at the gateway the time of day the day of the week the time zone in which the gateway is and any other factors such as the distance from the gateway to the location of the destination number. The feature server then selects the lowest cost option and translates the number accordingly.

The output of the translation process may be a string referred to as a translated number which may include an identifier for the destination number e.g. an E.164 number and other characters identifying the routing to the PSTN. For example if the feature server determines that the call is best routed through a New York gateway identified by the string NY1 it may form from a dialed string such as 212 555 1234 the translated number NY1 212 555 1234 .

Although exemplary embodiments of a SIP cluster have been specifically described and illustrated herein many modifications and variations will be apparent to those skilled in the art. Accordingly it is to be understood that SIP cluster constructed according to principles of this invention may be embodied other than as specifically described herein. For example the present invention need not be limited to use in a contact center it may provide benefits in other applications such as enterprise communications systems used for other purposes. The invention is also defined in the following claims and equivalents thereof.

